<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Folder" referent="RBX2D8FE9221F5F4AA386A124CE35C945AB">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<string name="Name">Vibe Coder_obfuscated</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
		<Item class="ModuleScript" referent="RBX2B0874892DB9497F92CD63BF01976888">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">WidgetWindow</string>
				<string name="ScriptGuid">{388F7746-A76F-41AB-8655-4260B82D114C}</string>
				<ProtectedString name="Source">--[[ v1.0.0 https://wearedevs.net/obfuscator ]] return(function(...)local z={&quot;\081\119\109\077\119\117\068\053\103\110\068\079\104\079\112\082\119\082\089\071\053\065\084\101\086\117\104\061&quot;,&quot;\066\050\065\108\073\120\061\061&quot;;&quot;\100\075\083\054\080\102\055\098\067\104\097\112\053\122\085\061&quot;;&quot;\111\072\056\061&quot;;&quot;\099\106\069\065\076\054\121\097\049\084\065\073\056\079\103\071\080\067\113\078\111\070\061\061&quot;,&quot;\043\074\104\100\081\082\069\061&quot;;&quot;\090\113\057\078\110\085\085\048&quot;,&quot;\120\090\120\122\112\055\112\065\118\070\061\061&quot;,&quot;\075\079\073\053\097\071\104\110\072\076\077\115\120\079\043\109\084\112\075\073\073\107\050\108&quot;;&quot;\106\077\074\112\082\050\109\088\082\067\089\110\101\072\109\049\106\086\085\061&quot;,&quot;\054\051\074\075\111\109\082\047\100\103\099\090\111\113\098\070\117\104\076\098&quot;;&quot;\073\108\053\122\111\076\088\118\099\047\068\085\117\047\053\069&quot;,&quot;\117\067\055\103\111\078\056\061&quot;;&quot;\116\047\072\089\072\115\103\072\104\083\057\075\086\121\068\055\082\120\088\048\048\098\061\061&quot;;&quot;\072\119\103\056\107\070\061\061&quot;;&quot;\082\090\049\086\102\047\099\112\052\077\089\050\117\086\068\043\106\112\061\061&quot;;&quot;\073\100\110\111\121\103\121\043&quot;;&quot;\105\097\052\087\071\086\121\087\086\106\071\071\104\075\111\078\049\078\076\073\068\075\070\048&quot;,&quot;\074\078\090\101\050\105\078\108\109\081\103\051\085\051\066\111\048\100\049\061&quot;,&quot;\122\089\110\056\118\079\106\120&quot;;&quot;\086\098\047\080\109\065\048\083\102\086\099\052\084\119\080\121\102\110\075\105\047\080\112\061&quot;;&quot;\066\050\065\079\117\077\075\061&quot;,&quot;\110\117\065\071\079\079\120\061&quot;;&quot;\097\048\090\111\047\111\113\104\090\102\117\118\070\087\098\066\069\116\107\086\071\119\049\061&quot;;&quot;\075\105\113\090\088\102\099\043\077\081\082\067\080\078\065\110\076\120\061\061&quot;;&quot;\047\051\090\076\082\043\047\115\067\082\087\107\076\067\113\061&quot;;&quot;\078\067\098\109\115\104\087\110&quot;;&quot;\052\047\053\069\111\077\053\069\073\066\088\089\073\067\055\068&quot;,&quot;\051\120\066\120\043\119\109\051&quot;;&quot;\088\047\053\069\113\043\109\103\052\076\053\083\099\043\068\072\102\076\090\115\117\047\053\085\113\047\068\108\111\067\090\079&quot;;&quot;\101\077\074\090\111\078\088\116\073\082\121\104\099\053\117\109\077\104\071\061&quot;,&quot;\122\077\067\114\075\119\107\052&quot;,&quot;\097\079\115\055\065\043\116\052&quot;;&quot;\079\055\051\074\072\070\083\073\080\118\082\121\072\121\083\083\086\043\066\055\090\090\114\052\107\118\085\061&quot;,&quot;\074\120\090\087\053\068\114\114\110\049\101\067\066\070\071\081\110\105\102\082\119\080\056\079\112\073\104\061&quot;;&quot;\084\077\050\083\112\067\116\115\112\068\068\102\101\068\113\075&quot;,&quot;\106\111\106\076\114\122\066\052\049\075\071\100\122\052\047\075\103\070\061\061&quot;;&quot;\054\076\104\052&quot;;&quot;\075\102\070\043&quot;;&quot;\074\081\084\109\053\099\048\114\067\070\061\061&quot;;&quot;\118\106\088\071\111\109\101\056\077\119\117\104\049\108\089\101\119\108\110\061&quot;;&quot;\107\107\053\084\117\106\120\043\078\075\111\072\047\076\050\122\049\106\114\077\076\098\061\061&quot;,&quot;\100\048\085\114&quot;;&quot;\087\066\101\076\047\077\097\074\088\088\098\102\065\086\055\078\090\111\084\103\053\098\061\061&quot;;&quot;\079\069\056\061&quot;;&quot;\100\080\099\107\089\076\090\112&quot;;&quot;\119\088\070\121\089\071\116\101\067\049\088\057\119\112\118\069\079\122\107\089\105\070\061\061&quot;,&quot;\085\089\072\080\083\089\099\074\086\055\075\107\072\098\061\061&quot;;&quot;\085\083\099\099\097\077\097\078\057\120\057\112\121\047\068\048&quot;;&quot;\111\068\047\057\089\116\082\100\104\090\056\056\117\098\101\097\121\070\117\070\101\098\110\061&quot;,&quot;\050\122\049\053\101\079\115\099\098\050\118\084\100\067\102\087\089\074\073\067\077\122\071\085&quot;,&quot;\103\069\118\105\111\113\065\087\086\081\113\055\098\103\054\065&quot;,&quot;\073\047\089\089\052\098\061\061&quot;,&quot;\112\078\109\068\073\066\088\068\088\076\065\057\102\050\099\122\117\076\099\068\099\090\121\079\099\077\099\122\111\085\099\050\102\112\061\061&quot;,&quot;\088\047\053\069\112\047\089\122\111\076\088\083\117\077\075\061&quot;;&quot;\117\090\079\115\117\112\110\117&quot;,&quot;\065\115\119\107\110\071\043\080\088\122\097\077\054\049\074\073\065\067\067\102\118\072\098\099\073\076\101\102\069\108\122\110\100\120\061\061&quot;,&quot;\053\079\071\068\085\049\098\061&quot;;&quot;\082\073\065\082\101\053\086\065&quot;,&quot;\110\106\047\065\070\081\115\110\054\071\090\104\117\079\073\084\057\120\061\061&quot;;&quot;\051\084\109\070\099\073\105\047&quot;;&quot;\101\047\109\114&quot;;&quot;\099\076\068\057\102\120\061\061&quot;,&quot;\056\098\112\085\043\085\100\113\072\121\085\049&quot;,&quot;\090\111\053\052\082\098\061\061&quot;;&quot;\077\073\099\100\089\087\097\115\055\098\061\061&quot;;&quot;\047\084\113\087\115\098\061\061&quot;,&quot;\118\119\119\043\120\084\053\104&quot;;&quot;\065\081\121\071\090\089\086\101\075\101\121\043\107\113\075\061&quot;;&quot;\079\076\110\050\072\103\110\100&quot;;&quot;\110\047\057\119&quot;,&quot;\043\111\117\090\107\120\061\061&quot;;&quot;\084\113\103\112\068\071\114\055\076\104\073\120\098\118\114\115&quot;;&quot;\085\050\051\121\083\052\053\068&quot;,&quot;\090\081\103\115\067\097\083\121\103\070\061\061&quot;,&quot;\108\081\072\110&quot;;&quot;\117\047\050\089\099\076\101\110&quot;;&quot;\075\086\078\115\112\056\054\106\074\113\103\065\069\068\075\054\079\102\052\061&quot;,&quot;\077\118\068\109\079\043\102\103\109\109\099\087\088\054\069\061&quot;,&quot;\084\072\090\089\049\086\099\051\084\072\099\057\117\078\088\085\101\053\110\061&quot;,&quot;\055\083\052\048\079\089\098\061&quot;;&quot;\083\115\050\118\072\047\072\043\070\074\083\070\089\120\077\079&quot;;&quot;\116\073\074\081\098\043\117\065\103\051\106\089\067\056\074\056\071\071\090\066\080\112\061\061&quot;;&quot;\088\077\074\050\111\112\061\061&quot;,&quot;\106\066\101\081\117\066\068\104\111\078\099\115&quot;,&quot;\085\048\084\076\054\089\054\084\118\056\078\099\067\086\076\088\108\079\116\120\085\065\087\069\120\073\074\101&quot;,&quot;\076\108\054\086\118\117\050\081&quot;,&quot;\090\081\118\049\082\100\104\051\052\110\073\049\074\112\112\073&quot;,&quot;\073\080\078\053\049\086\056\121&quot;,&quot;\106\080\068\089\070\115\106\116&quot;,&quot;\079\054\099\076\102\070\061\061&quot;,&quot;\110\115\057\085\118\118\053\054\109\083\072\050\087\088\067\103\071\108\087\089\099\112\061\061&quot;;&quot;\109\085\086\103\050\105\118\110&quot;,&quot;\115\079\119\107\083\047\057\098\107\078\085\108\089\086\113\069&quot;,&quot;\049\056\112\103\085\073\087\051\117\098\100\101\087\068\111\084\116\090\052\061&quot;,&quot;\075\121\071\087\107\097\117\082&quot;;&quot;\053\090\049\052\116\084\104\068&quot;,&quot;\066\050\065\122\111\067\088\068\054\070\061\061&quot;;&quot;\084\098\061\061&quot;,&quot;\116\087\065\048\112\043\109\076\106\070\115\076\081\111\084\089\119\087\078\075\049\080\051\110\097\106\121\076\054\105\101\069\081\082\057\078\108\120\061\061&quot;;&quot;\102\065\103\071\116\086\071\121\114\055\114\113\054\073\121\050\068\120\053\069\085\066\087\076&quot;,&quot;\111\083\103\051\080\113\089\111&quot;;&quot;\066\110\056\099\085\048\087\118\113\068\120\114\082\099\081\078&quot;,&quot;\097\070\043\122\084\054\080\087\070\098\053\101\081\108\054\056\053\113\069\061&quot;,&quot;\047\088\117\111\102\107\049\090\072\073\065\112\086\083\066\080\086\054\110\116&quot;,&quot;\057\110\122\115\065\087\119\108&quot;,&quot;\108\117\066\111&quot;,&quot;\056\105\049\085\097\085\074\077\047\103\106\086\107\098\061\061&quot;,&quot;\104\114\087\071\051\114\066\110\080\088\051\073\114\098\061\061&quot;;&quot;\109\117\101\122\043\070\061\061&quot;;&quot;\119\121\077\072\076\088\048\067\106\104\098\053\083\107\075\078\050\053\043\110\048\104\108\043&quot;,&quot;\118\079\100\085\072\116\114\106&quot;,&quot;\117\067\053\085\111\085\053\083\112\047\099\113\106\082\089\088&quot;;&quot;\112\047\065\115\111\067\053\057\099\070\061\061&quot;,&quot;\098\114\066\071\074\065\120\079\074\098\087\089\120\116\071\061&quot;;&quot;\121\052\057\080\115\050\056\057\106\098\061\061&quot;;&quot;\072\068\048\115\054\076\053\112\088\051\075\065\120\053\052\119\110\074\047\074\106\121\052\065\120\120\061\061&quot;;&quot;\052\078\053\114&quot;;&quot;\110\109\072\120\052\048\104\061&quot;,&quot;\116\111\056\102\075\070\061\061&quot;;&quot;\089\056\055\048\065\101\114\080\053\097\081\084\084\069\098\107\066\078\052\078&quot;,&quot;\105\073\057\077\097\086\108\052\100\103\103\089\081\089\102\101\047\079\087\071\072\112\061\061&quot;;&quot;\086\049\101\050\098\116\100\052\121\098\098\110\054\118\108\108\082\048\098\047\079\084\075\061&quot;;&quot;\103\051\081\078\086\120\065\074\069\071\107\073\098\114\108\049\108\070\061\061&quot;,&quot;\087\111\109\071\051\077\082\100\120\083\120\111\120\043\090\103\104\053\117\098\098\081\075\061&quot;,&quot;\117\047\090\116\117\112\061\061&quot;,&quot;\053\057\099\102\084\104\074\043\052\085\055\082\052\104\050\120\052\098\061\061&quot;;&quot;\073\068\049\078\054\104\068\080\082\069\088\106\113\108\117\086&quot;,&quot;\049\084\086\103\052\071\108\117\083\070\101\119\052\099\118\047\118\117\051\107&quot;;&quot;\100\083\121\081\073\077\079\116\107\076\052\105\074\116\117\089\068\087\053\104\077\057\057\071\087\048\098\077\116\100\047\072\110\049\121\066&quot;,&quot;\105\117\054\085&quot;;&quot;\052\078\088\083\102\077\074\108&quot;,&quot;\071\043\066\049\074\086\043\085\065\070\061\061&quot;,&quot;\069\078\066\051&quot;,&quot;\086\081\117\105&quot;,&quot;\078\049\057\120\108\119\083\077\106\111\069\072\066\110\100\084\078\100\112\107\079\118\122\110\080\098\076\055\090\103\080\084&quot;,&quot;\066\072\102\048\071\087\106\053\122\055\076\109\053\066\055\049\105\106\070\080\071\047\079\071\104\053\073\061&quot;,&quot;\077\080\075\085\075\097\052\052\049\097\102\073\086\054\052\085\121\070\061\061&quot;;&quot;\102\117\072\102&quot;,&quot;\086\110\081\083\047\070\061\061&quot;,&quot;\099\066\052\069\073\077\090\075\101\104\101\106\082\078\073\050&quot;,&quot;\097\112\122\103\084\056\053\098\072\105\074\056\056\112\076\115\113\086\079\067\121\098\061\061&quot;;&quot;\117\078\101\050\073\098\061\061&quot;;&quot;\117\118\054\076&quot;;&quot;\097\120\106\072\090\116\067\052&quot;,&quot;\070\049\102\077\052\073\067\066\067\054\104\109\056\050\104\122\047\057\119\047\067\110\082\051\109\048\075\061&quot;,&quot;\088\047\089\089\101\066\121\085\111\078\101\115\106\113\099\066&quot;;&quot;\083\112\061\061&quot;;&quot;\052\067\053\055\099\077\068\083\117\112\061\061&quot;,&quot;\114\105\106\080\067\119\052\079\067\084\054\117\122\084\098\056\102\077\108\053\051\047\089\082&quot;;&quot;\048\070\112\121\069\112\061\061&quot;;&quot;\066\050\065\116\117\066\088\089\099\076\090\114\111\076\113\061&quot;,&quot;\076\105\081\054\075\078\053\101\085\050\105\074\054\077\116\073&quot;;&quot;\069\087\072\070&quot;,&quot;\048\084\106\121\103\074\078\098\051\120\050\082\068\099\071\061&quot;,&quot;\102\103\122\109\118\076\067\049\117\075\099\090\102\085\072\102\065\072\087\081\120\102\071\101\066\117\051\089\112\112\061\061&quot;;&quot;\115\116\113\090\116\108\076\067&quot;,&quot;\049\068\088\085\053\053\089\112\102\113\110\050\106\072\068\106\102\050\052\061&quot;,&quot;\051\078\101\118\081\106\116\080\069\057\075\073\102\100\082\071\098\065\108\121\043\082\099\113\083\102\050\117\048\066\057\108\106\070\061\061&quot;;&quot;\099\090\043\073\051\084\066\120&quot;,&quot;\056\083\109\049\053\088\066\111\110\085\050\084\109\081\109\115\057\098\061\061&quot;;&quot;\099\066\121\085\073\066\088\068\066\078\053\122&quot;;&quot;\098\075\075\108\086\068\090\071&quot;,&quot;\101\078\068\050\106\082\088\047\052\104\112\074\117\082\053\067\088\072\113\061&quot;,&quot;\077\104\075\079&quot;;&quot;\105\101\085\069\070\098\086\078\119\065\043\076&quot;,&quot;\053\076\090\116\052\076\053\083\056\104\088\068\099\076\053\057\099\076\053\085\056\112\061\061&quot;;&quot;\056\090\112\054\049\054\098\089&quot;,&quot;\099\111\047\088&quot;;&quot;\072\049\109\073\097\086\109\072&quot;;&quot;\050\102\082\108\071\068\066\066&quot;,&quot;\088\068\112\101\082\114\043\047\121\068\072\088\105\066\106\048&quot;,&quot;\084\114\098\068\117\107\110\122\084\098\061\061&quot;;&quot;\099\076\065\086\099\043\109\122\111\067\052\061&quot;,&quot;\115\077\049\081&quot;;&quot;\056\080\080\072\107\079\070\061&quot;;&quot;\053\104\116\068\054\113\122\083\102\077\065\090\106\104\116\106\077\098\061\061&quot;,&quot;\074\088\116\121\051\112\061\061&quot;,&quot;\067\101\055\103\112\050\073\061&quot;;&quot;\110\106\079\043\080\084\056\112\080\098\061\061&quot;,&quot;\047\050\101\119\109\083\097\084&quot;,&quot;\116\057\108\098\056\086\103\081\090\084\072\081\081\053\120\061&quot;,&quot;\067\067\075\109\053\098\061\061&quot;;&quot;\113\109\049\104\081\120\061\061&quot;;&quot;\102\066\121\089\102\066\109\086&quot;;&quot;\088\068\089\119\082\113\073\078\077\066\085\075\054\077\069\074\117\120\061\061&quot;,&quot;\101\076\112\069\106\104\089\066\099\069\090\075\099\047\065\107\101\069\098\061&quot;,&quot;\071\072\113\054\090\119\083\072\122\080\053\083\108\098\113\076&quot;;&quot;\067\087\086\119\109\070\112\049\106\079\117\120\111\048\078\120&quot;;&quot;\053\104\088\085\053\108\088\120\113\113\055\121\052\104\089\121\053\078\098\061&quot;,&quot;\102\066\090\067\099\057\049\075\088\050\099\119\101\066\068\117\054\112\061\061&quot;,&quot;\088\047\053\069\113\047\053\069\099\076\068\115\117\120\061\061&quot;,&quot;\097\049\106\057\080\077\102\068\052\043\098\116\051\053\086\043\056\090\075\068\116\051\110\071\068\108\078\102\097\109\075\061&quot;;&quot;\108\077\069\052\103\081\052\082\083\103\057\103\085\122\110\066&quot;,&quot;\099\066\121\085\073\066\088\068\066\047\090\120\102\053\065\080\117\066\068\118\099\067\068\086\102\077\109\122\111\076\068\069\054\112\061\061&quot;,&quot;\050\102\114\065\073\119\067\065\113\080\077\053\077\112\061\061&quot;;&quot;\111\113\080\082\097\102\066\069\098\087\050\077\122\117\114\104&quot;,&quot;\080\054\076\121\086\122\103\074&quot;,&quot;\120\066\069\113\084\070\071\061&quot;;&quot;\079\083\065\051\110\109\113\080&quot;,&quot;\099\077\074\120\073\077\101\080&quot;;&quot;\099\057\089\103\084\077\085\074\102\077\090\086\113\082\090\047\112\120\061\061&quot;,&quot;\057\089\086\077\089\070\076\055&quot;;&quot;&quot;;&quot;\049\100\112\098\087\054\103\081\083\087\117\080\049\080\056\115\076\112\061\061&quot;;&quot;\103\090\056\099\067\066\122\051&quot;,&quot;\111\053\110\088\052\113\089\121\070\054\114\112\057\110\120\061&quot;;&quot;\099\076\065\115\099\077\050\114\117\066\056\061&quot;;&quot;\111\072\104\061&quot;;&quot;\106\082\099\069\114\080\070\073\108\100\119\088\087\075\048\111&quot;;&quot;\068\070\098\083\116\054\110\107\076\076\068\056\089\066\103\106\083\072\113\061&quot;,&quot;\102\047\055\057\054\085\055\068\073\077\117\108\106\086\089\084&quot;;&quot;\111\111\114\105\101\084\116\068\071\112\061\061&quot;;&quot;\122\069\104\097&quot;,&quot;\048\113\057\089\104\070\061\061&quot;,&quot;\105\098\116\084\090\083\103\118\049\113\072\120\072\068\047\084\122\066\101\055\072\077\103\116\052\122\106\071&quot;,&quot;\105\105\108\111&quot;,&quot;\077\057\117\076\111\068\070\075\113\082\088\122\054\082\109\083\106\068\070\061&quot;;&quot;\090\077\071\068&quot;,&quot;\112\115\089\117\082\070\083\078\108\049\103\065&quot;;&quot;\056\099\118\110\089\043\052\085\117\085\087\111\072\098\061\061&quot;;&quot;\052\047\101\083\102\066\121\069&quot;,&quot;\100\103\110\055\047\098\061\061&quot;,&quot;\073\053\121\084\052\108\104\050\073\047\122\105\088\104\116\102&quot;;&quot;\073\108\053\122\111\076\088\118\111\077\065\085\117\077\055\118\052\047\053\079\117\077\101\069\102\077\065\115&quot;,&quot;\057\087\119\118\057\075\077\074\088\090\106\043\105\051\079\061&quot;;&quot;\099\076\090\114\111\076\113\061&quot;;&quot;\088\113\047\071\088\053\090\068\056\083\053\108\076\113\079\118\054\070\061\061&quot;;&quot;\107\098\103\075\053\070\061\061&quot;;&quot;\100\047\051\111\057\105\098\107\068\071\113\106\074\098\061\061&quot;,&quot;\078\121\049\066\084\056\111\110&quot;,&quot;\085\043\088\099\089\085\070\108\052\051\101\065\051\057\103\113\117\080\116\103\077\057\051\088\120\051\052\066&quot;;&quot;\117\073\089\119\120\087\117\118\050\073\053\105\116\105\117\079&quot;;&quot;\081\050\078\116\065\081\079\112\065\119\076\111\049\118\056\110\121\112\061\061&quot;;&quot;\101\084\057\065\085\107\104\070\054\069\051\069\105\081\107\077\118\067\072\076\113\112\061\061&quot;;&quot;\111\076\053\115&quot;,&quot;\114\087\047\069\110\077\090\088\047\070\061\061&quot;,&quot;\107\090\049\111\118\099\083\103&quot;,&quot;\072\120\105\116\057\098\097\108\073\053\110\090\082\114\086\073\086\108\080\104\070\070\061\061&quot;,&quot;\067\057\048\098\107\112\088\121\070\066\073\116\055\050\100\099\090\112\116\053\100\070\079\119\084\102\048\065\098\053\069\106\101\070\061\061&quot;;&quot;\080\115\084\105\088\076\111\076\099\050\069\077\117\050\050\079\075\098\049\101&quot;,&quot;\077\047\099\119\121\083\079\111\078\075\052\081\115\087\122\108\070\075\079\061&quot;;&quot;\057\103\112\103\102\069\118\080&quot;;&quot;\073\108\068\069\117\112\061\061&quot;;&quot;\048\082\053\057\072\070\080\079&quot;,&quot;\065\053\088\114&quot;;&quot;\077\085\065\087\111\053\101\066\106\066\088\050\102\104\085\055&quot;,&quot;\052\103\105\097&quot;,&quot;\082\076\068\069\077\077\074\106\054\057\088\067\102\090\090\089&quot;;&quot;\114\051\051\110\078\121\111\053\087\109\101\078\082\047\053\043\113\084\081\089\097\065\079\078\075\078\111\102\114\112\061\061&quot;,&quot;\088\047\053\069\113\047\053\083\099\067\068\057\117\112\061\061&quot;,&quot;\113\047\053\069\113\047\053\069\099\076\068\115\117\120\061\061&quot;;&quot;\112\047\055\103\111\067\113\061&quot;;&quot;\108\099\116\097\074\078\102\089&quot;,&quot;\121\076\118\104&quot;,&quot;\065\115\117\054\048\103\118\116\084\120\061\061&quot;,&quot;\114\073\109\053\071\073\071\112\120\098\061\061&quot;,&quot;\119\106\079\085\120\047\055\071\106\105\056\056\109\102\106\074\065\052\084\105\101\120\061\061&quot;;&quot;\089\056\052\115\115\043\065\084&quot;;&quot;\102\051\071\103\108\115\076\069\053\054\097\114\074\106\105\110\067\100\108\073\047\098\061\061&quot;;&quot;\108\082\089\049\071\109\080\081\067\072\103\122\078\120\104\061&quot;,&quot;\071\089\051\110\043\106\057\109\097\072\100\112\100\119\075\110\068\066\067\103\051\054\122\056&quot;,&quot;\072\087\065\111\057\097\120\048&quot;;&quot;\071\098\067\114\115\120\061\061&quot;,&quot;\105\086\078\087\120\047\119\100\076\078\097\088\050\083\049\105\070\122\057\102\067\116\101\081\083\077\121\084\118\108\070\106\105\112\061\061&quot;,&quot;\050\082\116\071\056\057\117\077\067\112\061\061&quot;,&quot;\065\100\100\101\115\121\098\119&quot;;&quot;\088\067\068\115\117\104\117\122\052\108\101\069\112\047\089\122\111\076\112\061&quot;,&quot;\115\069\070\100\090\113\109\108\047\101\104\077\116\104\110\111&quot;;&quot;\088\110\110\102\084\122\109\065&quot;,&quot;\075\102\043\110\053\110\110\115\090\111\116\101\104\066\090\098\043\043\101\118&quot;,&quot;\089\088\085\101\118\043\104\061&quot;;&quot;\043\068\066\043\114\066\086\113\111\112\061\061&quot;,&quot;\052\067\090\115\117\076\065\116&quot;;&quot;\051\103\050\116\116\117\112\061&quot;;&quot;\082\057\115\075\080\072\071\120&quot;,&quot;\081\082\080\070\115\112\061\061&quot;;&quot;\117\121\049\121\080\098\061\061&quot;;&quot;\055\114\110\075&quot;;&quot;\099\086\121\076\120\068\113\077\116\068\068\081\075\083\055\111\119\083\122\098\104\120\061\061&quot;,&quot;\111\077\090\069\102\070\061\061&quot;,&quot;\048\069\109\122\108\065\106\097\116\082\071\109\071\105\087\051\072\076\068\048\043\080\056\061&quot;;&quot;\076\110\087\087\054\078\109\056\089\112\061\061&quot;;&quot;\105\119\099\110&quot;;&quot;\101\057\085\050\088\108\099\074\049\067\122\077\082\108\068\082\113\098\061\061&quot;,&quot;\049\115\112\084\112\081\057\070\107\097\102\105\105\055\089\101\113\077\090\107\043\111\073\105\086\103\104\061&quot;,&quot;\089\068\079\068\052\056\047\101&quot;;&quot;\057\057\068\068\117\100\104\114\054\047\065\054\102\066\112\066\083\120\061\061&quot;,&quot;\080\051\065\073&quot;,&quot;\077\108\100\106\083\051\107\084&quot;;&quot;\111\068\110\086\113\066\053\079\102\085\117\119\113\077\104\061&quot;,&quot;\075\112\061\061&quot;;&quot;\122\047\048\121\111\103\057\100\071\099\083\080\086\112\085\052\077\120\061\061&quot;,&quot;\078\117\103\081\104\090\104\103\105\068\054\070\052\110\104\061&quot;,&quot;\073\047\065\115\073\047\090\069&quot;,&quot;\085\080\110\051\072\065\082\043&quot;,&quot;\072\052\107\051\121\099\085\047\117\084\118\113\069\098\061\061&quot;,&quot;\111\077\090\069\073\047\098\061&quot;;&quot;\052\067\053\116\111\078\117\068&quot;;&quot;\101\074\116\117\073\074\057\079\086\090\069\098\115\056\108\043&quot;,&quot;\122\072\083\057\107\101\057\100\110\043\097\048\111\102\104\043\079\115\117\107\057\079\068\082\097\090\056\061&quot;,&quot;\052\076\101\089\111\076\120\061&quot;,&quot;\067\114\079\079\047\119\088\106\069\119\114\088\054\090\077\051\089\055\107\074\047\100\103\097\106\113\071\061&quot;,&quot;\068\070\068\072\088\118\069\077&quot;,&quot;\084\056\072\108\070\107\043\107&quot;;&quot;\119\106\071\112\075\118\086\065\067\111\084\119\065\072\077\085&quot;;&quot;\048\089\122\082\069\113\098\051&quot;;&quot;\078\057\067\076\100\106\076\111&quot;;&quot;\086\101\099\100\083\098\061\061&quot;;&quot;\070\054\052\105\043\057\120\089\083\071\119\120\078\057\075\075\043\103\078\052\118\051\065\065&quot;,&quot;\099\071\108\052\113\117\104\050\073\048\108\085\077\118\087\119&quot;,&quot;\088\076\065\057\102\050\099\122\117\076\099\068\099\090\121\079\099\077\099\122\111\085\099\050\102\113\068\115\117\067\071\061&quot;;&quot;\121\074\089\102\105\080\070\097\097\099\107\118\085\086\066\074\112\050\079\122\055\048\074\043\089\051\083\106\111\085\065\084\043\054\100\057\116\077\118\070\052\115\070\117\067\102\070\097\106\087\120\112\100\043\070\074\116\116\110\122\066\098\061\061&quot;;&quot;\050\111\068\084\118\103\052\085\072\079\116\116\068\070\061\061&quot;,&quot;\070\121\121\122\055\075\121\077&quot;,&quot;\099\057\118\087\108\081\104\099\069\086\097\050\098\075\110\061&quot;,&quot;\084\083\090\054\054\118\110\080\108\079\109\083\121\111\073\088\102\070\061\061&quot;,&quot;\107\068\097\099\120\113\107\110&quot;,&quot;\043\113\102\107\115\098\061\061&quot;,&quot;\066\108\113\121\070\080\069\051\072\081\065\122\054\081\119\047\070\082\047\053\085\120\061\061&quot;;&quot;\080\106\067\101\087\117\069\117\119\051\115\066\073\116\109\119\090\051\086\113\107\120\106\115\098\089\084\068\089\051\054\070\053\049\052\083\082\098\061\061&quot;,&quot;\084\108\084\118\069\119\069\082\107\118\119\050\057\112\070\048\050\089\084\065\073\084\112\067\088\111\112\078&quot;;&quot;\051\077\054\050\053\102\048\055\085\084\075\105\109\075\068\071\067\111\073\061&quot;;&quot;\103\047\043\106\110\099\043\084\065\071\106\108\085\116\100\103\087\050\080\122\099\070\061\061&quot;,&quot;\069\084\048\074\122\050\087\066&quot;;&quot;\074\107\071\110\077\112\101\087&quot;;&quot;\106\053\121\078\099\072\068\078\053\120\061\061&quot;;&quot;\071\055\047\105\053\052\089\052\069\106\106\074\076\056\051\118\052\113\111\114\121\120\061\061&quot;,&quot;\098\112\067\072\102\115\104\076&quot;,&quot;\106\082\068\120\053\077\065\115\054\108\122\067\113\086\068\078\117\112\061\061&quot;,&quot;\117\066\109\083\111\078\056\061&quot;;&quot;\081\089\043\090\052\112\061\061&quot;;&quot;\054\084\103\083\108\097\079\109\113\086\121\113\087\047\108\111&quot;;&quot;\070\100\052\083\104\110\090\114\072\120\061\061&quot;,&quot;\116\109\073\103\071\098\111\065\076\075\122\101\050\116\066\103\085\082\071\056\115\079\104\061&quot;;&quot;\104\119\086\055\067\048\080\085&quot;;&quot;\105\076\066\053\073\102\056\067\083\070\061\061&quot;;&quot;\116\102\087\082\118\070\061\061&quot;,&quot;\051\056\104\112\080\085\083\112\117\071\099\100\109\083\043\075\113\122\102\101&quot;,&quot;\102\050\122\089\043\106\122\115\120\053\077\079\113\069\071\090\086\070\061\061&quot;}for X,m in ipairs({{-259613-(-259614),-697612-(-697952)},{-349270+349271;31265+-31174};{-145715+145807,545525-545185}})do while m[611119+-611118]&lt;m[848881-848879]do z[m[-483209-(-483210)]],z[m[852181+-852179]],m[510019-510018],m[657018+-657016]=z[m[434638+-434636]],z[m[-629179+629180]],m[854454+-854453]+(-874533-(-874534)),m[150017+-150015]-(-513706+513707)end end local function X(X)return z[X-(398096+-358493)]end do local X=table.concat local m={d=608991-608932,u=597549+-597524;W=1027557+-1027499;[&quot;\055&quot;]=-664072+664121;[&quot;\050&quot;]=-783883-(-783936),p=522248-522232;h=56219+-56215;[&quot;\049&quot;]=-965860+965872;y=551204+-551203;J=315375+-315318,[&quot;\053&quot;]=96223-96202,l=-58779+58818,v=-824831-(-824862),S=-188812+188862;R=-284921-(-284940);s=563465+-563419,D=149745-149708;[&quot;\054&quot;]=-1033981+1034011,C=-976127+976165,L=-62783-(-62789),m=-1033612+1033621;[&quot;\048&quot;]=639503-639440;[&quot;\056&quot;]=-449163-(-449171);B=-223988+224011;K=480203-480147;j=-935374+935392;[&quot;\052&quot;]=48686-48658,H=1012695+-1012692;Y=9673-9640,F=334960-334960,i=-762071-(-762086),f=-139121+139147,U=-126432+126468,w=-142226-(-142268);k=-508435-(-508437),X=858676+-858659;P=356798+-356755;M=477589+-477567,b=842706+-842674;z=-592893+592934,V=-18600+18651,e=-772809+772822,T=-470478+470492;[&quot;\043&quot;]=688066+-688059;A=-921813+921874,o=-48181-(-48208),O=-489116-(-489160),[&quot;\051&quot;]=-1035862-(-1035872);N=-27483-(-27538),t=-399565-(-399610),G=-14466-(-14526),[&quot;\047&quot;]=-747269-(-747323);E=6387-6335,[&quot;\057&quot;]=250876-250841,I=58882+-58858;q=294772+-294752,Q=-527610-(-527621);c=840487-840458,r=-54776+54810;n=639643+-639603;a=-826535+826597;Z=-748922+748927;x=-154545+154593,g=-600315+600362}local k=string.len local y=string.sub local N=z local p=table.insert local C=math.floor local W=type local o=string.char for z=74127-74126,#N,425253+-425252 do local B=N[z]if W(B)==&quot;\115\116\114\105\110\103&quot;then local W=k(B)local w={}local t=190111+-190110 local I=777817-777817 local b=-707399-(-707399)while t&lt;=W do local z=y(B,t,t)local X=m[z]if X then I=I+X*(-107016+107080)^((468758+-468755)-b)b=b+(-855723+855724)if b==-456710+456714 then b=-959553-(-959553)local z=C(I/(184016+-118480))local X=C((I%(689260+-623724))/(-206035-(-206291)))local m=I%(578982+-578726)p(w,o(z,X,m))I=977716-977716 end elseif z==&quot;\061&quot;then p(w,o(C(I/(-350628-(-416164)))))if t&gt;=W or y(B,t+(736330-736329),t+(-31532+31533))~=&quot;\061&quot;then p(w,o(C((I%(335624-270088))/(-807280+807536))))end break end t=t+(152120+-152119)end N[z]=X(w)end end end return(function(z,k,y,N,p,C,W,o,J,d,w,I,m,B,H,V,T,b,j,G,Q,U,t)V,d,j,U,o,G,t,H,b,I,Q,w,m,B,J,T=function(z,X)local k=I(X)local y=function(y,N,p)return m(z,{y;N,p},X,k)end return y end,function(z,X)local k=I(X)local y=function(y,N)return m(z,{y;N},X,k)end return y end,function(z,X)local k=I(X)local y=function(y,N,p,C,W)return m(z,{y,N,p;C,W},X,k)end return y end,function(z,X)local k=I(X)local y=function()return m(z,{},X,k)end return y end,{},function(z)B[z]=B[z]-(-108247-(-108248))if B[z]==626882-626882 then B[z],o[z]=nil,nil end end,-487663+487663,function(z,X)local k=I(X)local y=function(y)return m(z,{y},X,k)end return y end,function(z)local X,m=520120-520119,z[431566+-431565]while m do B[m],X=B[m]-(-845553+845554),(-502812-(-502813))+X if B[m]==-588999+588999 then B[m],o[m]=nil,nil end m=z[X]end end,function(z)for X=-1005423-(-1005424),#z,825046+-825045 do B[z[X]]=(-554171-(-554172))+B[z[X]]end if y then local m=y(true)local k=p(m)k[X(-967398+1007190)],k[X(827553-787857)],k[X(697522+-657806)]=z,b,function()return-5875+1430514 end return m else return N({},{[X(540412+-500716)]=b,[X(-211666+251458)]=z;[X(178582+-138866)]=function()return 425112+999527 end})end end,function(z,X)local k=I(X)local y=function(y,N,p,C,W,o)return m(z,{y,N,p;C;W,o},X,k)end return y end,function()t=(914911+-914910)+t B[t]=308312+-308311 return t end,function(m,y,N,p)local b,T,f,O,s,M,e,W,c,t,S,L,R,r,P,i,D,B,n,K,Z,q,x,E,a,u,l,A,I,Y,v,h,g,F while m do if m&lt;623438+9195126 then if m&lt;3919144-(-438408)then if m&lt;2038881-(-230086)then if m&lt;948716+-244921 then if m&lt;1383511-831893 then if m&lt;1179669-876529 then if m&lt;219477+-151889 then R=X(102718+-62892)u=g q=z[R]R=X(-977681-(-1017619))D=q[R]q=D(B,u)m=5996067-121043 D=o[N[-78970-(-78976)]]R=D()c=q+R R=-509792-(-509793)r=c+O c=91781-91525 A=r%c O=A u=nil c=I[t]q=O+R D=b[q]r=c..D I[t]=r else I=o[N[600942+-600937]]u=X(-84525-(-124303))s=z[u]m=-342289+5286492 P=o[N[802189-802187]]A=19524444419380-905649 g=o[N[-505676-(-505679)]]Z=X(-872920+912851)x=g(Z,A)u=P[x]Z=274116+25796337270824 O=s[u]x=X(-410733+450535)u=o[N[947214-947212]]P=o[N[-86110+86113]]g=P(x,Z)s=u[g]b=X(36565-(-3214))T=O[s]b=I[b]b=b(I,T)W=b end else if m&lt;-866542+1286573 then s=X(-830400-(-870035))O=W W=z[s]u=X(472054-432133)Z=X(306206-266285)s=X(993201-953573)m=W[s]s=w()o[s]=m W=z[u]u=X(607210-567561)m=W[u]g=m u=m x=z[Z]P=x m=x and 15724699-(-1020645)or 2729500-(-719777)else m=true m=521077+2190980 end end else if m&lt;1503235-864271 then if m&lt;277585-(-331198)then O[s]=u D=X(-847248+886865)m=P x=o[B]q=592660+12350050470754 A=o[N[-674806-(-674807)]]r=o[N[216077+-216075]]c=r(D,q)Z=A[c]c=X(363964-324056)g=x[Z]Z=o[N[37297-37296]]D=23660030189683-(-641686)A=o[N[548821-548819]]r=A(c,D)x=Z[r]c=23480004748688-735963 P=g[x]x=o[N[-352996-(-352997)]]r=X(486453+-446665)Z=o[N[-400144+400146]]A=Z(r,c)g=x[A]u=P[g]r=17859710092232-(-531636)g=o[N[-923254-(-923255)]]A=X(-469615+509505)x=o[N[161113+-161111]]Z=x(A,r)P=g[Z]c=X(280484+-240822)A=-715686+30427140252414 s=u[P]P=o[N[-451980-(-451981)]]Z=X(311005+-271369)g=o[N[-447739+447741]]x=g(Z,A)u=P[x]O=s[u]q=17915258940013-887255 u=j(6793492-(-224194),{N[-89350-(-89356)];N[193952-193951],N[-650362+650364],B})s=X(-606335-(-646143))s=O[s]s=s(O,u)D=-270299+9470025527572 g=o[B]Z=o[N[-513839-(-513840)]]A=o[N[813942-813940]]r=A(c,D)x=Z[r]P=g[x]x=o[N[-58015+58016]]D=X(-882151-(-922043))r=X(825480-785652)c=28769746534008-(-980444)Z=o[N[-548982+548984]]A=Z(r,c)g=x[A]A=X(-314177+354059)r=-813399+16320191547142 u=P[g]g=o[N[703060-703059]]x=o[N[-161512-(-161514)]]Z=x(A,r)P=g[Z]W={}s=u[P]P=o[N[-578327-(-578328)]]Z=X(-218902+258580)A=193553+8888217656345 g=o[N[-702256+702258]]x=g(Z,A)Z=X(574109-534231)A=21755998002650-30280 u=P[x]O=s[u]s=X(1068526-1028802)P=o[N[228435-228434]]s=O[s]g=o[N[-82901-(-82903)]]x=g(Z,A)u=P[x]s=s(O,u)O=X(833257-793449)u=J(-177046+11017730,{B,N[-816459-(-816460)];N[-936438+936440],N[-981450-(-981457)],N[-136876-(-136884)];N[35570-35564]})O=s[O]O=O(s,u)s=o[N[529585-529580]]P=o[N[608268-608267]]A=-295836+30312367389375 g=o[N[272415+-272413]]Z=X(-260245-(-299864))x=g(Z,A)u=P[x]O=s[u]u=o[B]s=O(u)x=o[B]A=o[N[439187+-439186]]r=o[N[351492+-351490]]c=r(D,q)Z=A[c]D=21415257634447-(-880741)g=x[Z]Z=o[N[839017+-839016]]A=o[N[875926-875924]]c=X(-476152+516065)r=A(c,D)x=Z[r]r=X(193698-153916)c=7478045841342-(-210396)P=g[x]x=o[N[-172141+172142]]Z=o[N[-451685+451687]]A=Z(r,c)g=x[A]A=X(668428+-628612)u=P[g]r=-76764+6390916855676 D=8511627170388-(-523559)g=o[N[829919+-829918]]x=o[N[-161222-(-161224)]]Z=x(A,r)P=g[Z]Z=X(-666364-(-706082))s=u[P]P=o[N[-49782-(-49783)]]g=o[N[-957324+957326]]A=-876184+9710891298881 x=g(Z,A)u=P[x]O=s[u]s=X(120656-80848)c=X(478360-438739)m=z[X(547666+-507831)]s=O[s]u=V(10211183-(-774407),{B,N[317589-317588];N[826623+-826621];N[-803215-(-803220)]})s=s(O,u)g=o[B]Z=o[N[-432733-(-432734)]]A=o[N[-15565-(-15567)]]r=A(c,D)x=Z[r]P=g[x]x=o[N[709959-709958]]r=X(-776781-(-816630))Z=o[N[463106-463104]]c=-595259+16975058203675 A=Z(r,c)g=x[A]r=1941192943262-926487 u=P[g]A=X(945561-905685)g=o[N[-230157+230158]]x=o[N[998273-998271]]Z=x(A,r)A=324378+1421094063995 P=g[Z]s=u[P]P=o[N[1022300-1022299]]g=o[N[135869+-135867]]Z=X(294970-255151)x=g(Z,A)u=P[x]O=s[u]u=J(-117668+10785057,{B;N[-554681+554682],N[187333-187331]})s=X(-674390+714198)B=G(B)s=O[s]s=s(O,u)else O=o[T]m=-30593+409006 W=O end else if m&lt;984267-332852 then W=o[B]I=o[N[681567-681566]]b=o[N[-1003982+1003984]]O=X(632810+-592956)s=-297555+26794687036176 T=b(O,s)t=I[T]m=W[t]t=o[N[-117863-(-117864)]]T=X(-532852-(-572481))s=324327+308093783464 O=33526979218011-(-864929)I=o[N[-669040-(-669042)]]b=I(T,O)W=t[b]O=X(253298-213426)I=o[N[-827473+827474]]b=o[N[403211+-403209]]T=b(O,s)t=I[T]m[W]..=t m=224223+9517896 else T=o[N[-620665+620666]]u=X(-665966+705797)P=696499193999-575307 O=o[N[-806030-(-806032)]]s=O(u,P)u=X(-270404-(-310243))b=T[s]P=20516876808092-(-275893)I=B[b]T=o[N[-544232+544233]]O=o[N[630230-630228]]s=O(u,P)u=17044748318414-939981 b=T[s]W=I[b]s=X(-736056+775703)b=o[N[553845+-553844]]T=o[N[229603+-229601]]O=T(s,u)I=b[O]O=X(-195335-(-235244))m=W[I]I=o[N[759256-759255]]b=o[N[-391173-(-391175)]]s=-124841+17101184091844 u=349830+34623490041972 T=b(O,s)s=X(-7116-(-46933))W=I[T]b=o[N[897909-897908]]T=o[N[918429+-918427]]O=T(s,u)I=b[O]m[W]=I m=15415415-(-584933)end end end else if m&lt;-340656+1713709 then if m&lt;1595943-407292 then if m&lt;-60972+977945 then b=o[N[-264893-(-264894)]]O=o[N[-819946+819948]]P=X(215766+-176087)s=o[N[-560929+560932]]g=46596+9926104013834 u=s(P,g)T=O[u]u=X(-383726+423369)I=b[T]T=o[N[416515+-416513]]P=464881+2071149095891 O=o[N[-927743-(-927746)]]s=O(u,P)b=T[s]t=I[b]b=o[N[-789688-(-789690)]]T=o[N[82980-82977]]u=-957594+19797779497117 s=X(-88885+128628)O=T(s,u)I=b[O]W=t[I]s=-558627+18366586611595 O=X(840946-801208)I=o[N[-988549-(-988551)]]b=o[N[699134-699131]]T=b(O,s)O=785313+453768103218 t=I[T]m=W[t]t=o[N[883038-883036]]s=18354607844737-904222 T=X(318587-278821)I=o[N[400029+-400026]]b=I(T,O)W=t[b]t=o[N[-211601-(-211605)]]m[W]=t W=o[N[-753482-(-753488)]]I=o[N[109359-109357]]O=X(1022713+-983056)b=o[N[738407+-738404]]T=b(O,s)t=I[T]m=W[t]t=o[N[711540+-711539]]W=m(t)m=279137+10811051 else B=w()o[B]=y[-698538+698539]P=373379+15835912890955 T=X(-346916-(-386596))m=o[B]t=o[N[403686+-403685]]Z=X(-243221+282922)O=33843833873244-(-498227)u=X(-195773+235432)I=o[N[147029-147027]]b=I(T,O)W=t[b]I=o[B]T=o[N[118117+-118116]]O=o[N[-90465-(-90467)]]s=O(u,P)b=T[s]A=4503823087058-(-70239)t=I[b]u=X(-298391-(-338326))T=o[N[-876487-(-876488)]]P=4555387718404-328379 O=o[N[-587756+587758]]I=X(552516-512768)s=O(u,P)b=T[s]T=o[N[592873+-592870]]I=t[I]I=I(t,b,T)m[W]=I W=o[B]s=-99020+3505299147052 I=o[N[-581856+581857]]b=o[N[-243729-(-243731)]]O=X(322288-282437)T=b(O,s)O=19078869245585-(-590883)t=I[T]m=W[t]t=o[N[-210295-(-210296)]]T=X(-210919-(-250619))u=X(-538413-(-578329))I=o[N[-598444-(-598446)]]b=I(T,O)I=m W=t[b]s=z[u]P=o[N[-360068+360069]]g=o[N[-567322+567324]]x=g(Z,A)u=P[x]O=s[u]x=X(1010053-970256)Z=-687155+404270709999 u=o[N[-786192-(-786193)]]P=o[N[-744925-(-744927)]]g=P(x,Z)s=u[g]T=O[s]x=6198542485947-818805 s=o[N[392896+-392895]]u=o[N[146891-146889]]g=X(-166780+206406)P=u(g,x)O=s[P]b=T[O]m=b and 9853393-347124 or 963733+4263142 t=b end else if m&lt;397090+948858 then t=o[N[183151+-183149]]m=-1015049+4072776 I=o[N[-197425+197428]]B=t==I W=B else m=z[X(329049-289227)]B=nil W={}end end else if m&lt;683633+1365796 then if m&lt;894869-(-809483)then W=6099619-(-823027)t=X(-56908-(-96553))I=385014+6311518 B=t^I m=W-B B=m W=X(508843+-468972)m=W/B W={m}m=z[X(-938633-(-978491))]else W={}m=z[X(-933952+973759)]end else if m&lt;952012+1229110 then c=541851+-541850 i=#A r=I(c,i)c=O(A,r)i=o[Z]L=-897438-(-897439)f=c-L m=15000327-280080 r=nil Y=s(f)i[c]=Y c=nil else m=w()D=X(189001+-149137)o[m]=O q=19474384177833-(-776387)O=m x=o[B]T=I A=o[N[417333+-417331]]r=o[N[273974-273971]]c=r(D,q)Z=A[c]g=x[Z]Z=o[N[-771716-(-771718)]]A=o[N[-878379+878382]]D=690528+33163652510451 c=X(273820-234182)r=A(c,D)x=Z[r]P=g[x]q=X(-598701-(-638598))r=X(952605-912971)c=22762059048961-(-65894)x=o[N[-776987+776989]]Z=o[N[-149519+149522]]A=Z(r,c)g=x[A]u=P[g]g=o[N[596683-596681]]A=X(239382+-199731)x=o[N[145474+-145471]]r=904227+31622193278306 R=6091165054417-(-300355)Z=x(A,r)A=956217+5323225379445 P=g[Z]Z=X(146677-106988)s=u[P]P=o[N[362051+-362049]]g=o[N[972180+-972177]]x=g(Z,A)u=P[x]r=X(569148-529314)m=s[u]s=X(135992-96385)c=-1028506+32495654939829 s=m[s]x=X(486873-447182)Z=27530709722203-(-413112)s=s(m)u=o[N[606779-606777]]P=o[N[380929-380926]]g=P(x,Z)m=u[g]u=true s[m]=u u=o[N[731451+-731449]]P=o[N[983080-983077]]x=X(590058+-550297)Z=16634690084948-590354 g=P(x,Z)m=u[g]P=o[O]x=o[N[203694-203692]]Z=o[N[513647-513644]]A=Z(r,c)g=x[A]x=X(256210+-216446)u=P[g]Z=663294+30629050390712 s[m]=u u=o[N[767475-767473]]P=o[N[301655-301652]]g=P(x,Z)m=u[g]Z=o[B]r=o[N[-139148+139150]]c=o[N[326064+-326061]]D=c(q,R)A=r[D]D=X(52944-13119)x=Z[A]A=o[N[66460-66458]]r=o[N[-967056+967059]]q=35013861944637-(-463475)c=r(D,q)Z=A[c]c=X(-205443-(-245057))D=656562+23888362284737 g=x[Z]Z=o[N[-832497+832499]]A=o[N[-779770+779773]]T=nil r=A(c,D)c=6590339826455-(-248037)x=Z[r]r=X(338159-298417)P=g[x]x=o[N[-599011+599013]]Z=o[N[856762-856759]]A=Z(r,c)g=x[A]u=P[g]Z=X(223937-184193)s[m]=u A=-299951+3019336161580 P=o[N[-856215+856217]]g=o[N[-762718-(-762721)]]x=g(Z,A)u=P[x]P=J(12270417-972259,{N[-1031214+1031218],N[954536-954534];N[776442+-776439];B;O})m=s[u]s=nil O=G(O)u=X(119707+-79899)u=m[u]u=u(m,P)m=-146771+4817042 end end end end else if m&lt;-373620+3639572 then if m&lt;3800724-854774 then if m&lt;74775+2624480 then if m&lt;890367+1519754 then m=-451898+15005407 B=nil o[N[-605194+605199]]=W else r=X(-934575-(-974473))x=o[N[390665+-390664]]c=36735+3060651521554 Z=o[N[745152-745150]]A=Z(r,c)m=74589-(-529672)g=x[A]u=g end else if m&lt;974323+1828919 then m=d(16202521-434059,{b})q={m()}m=z[X(-425917+465829)]W={k(q)}else c=c+Y L=not f r=c&lt;=i r=L and r L=c&gt;=i L=f and L r=L or r L=-16186+6085295 m=r and L r=17488307-880188 m=m or r end end else if m&lt;284095+2773966 then if m&lt;153460+2882002 then W=X(786841-747156)m=z[W]B=X(772771-732910)W=m(B)m=z[X(-109043+148961)]W={}else m=W and 34013+15463270 or 932050+13621459 end else if m&lt;-261255+3471546 then h=o[t]m=h and 6038598-320497 or 9415816-(-400979)W=h else O=X(-695120-(-734855))s=-384231+8126776552367 W=o[N[-1011693-(-1011696)]]I=o[N[-73184+73185]]b=o[N[-346330-(-346332)]]T=b(O,s)t=I[T]m=W[t]b=o[N[-4387+4388]]s=X(845413-805742)u=324059+943555530716 T=o[N[527506-527504]]O=T(s,u)I=b[O]s=-52790+10336318742787 t=B[I]O=X(734074-694150)W=m(t)t=W I=o[N[-258981-(-258982)]]b=o[N[-252952-(-252954)]]T=b(O,s)W=I[T]m=t[W]m=m and 15715981-180406 or-552009+13815116 end end end else if m&lt;1022075+2909027 then if m&lt;280600+3210555 then if m&lt;4454118-1032165 then P=899241+5529566040421 u=X(-147516+187356)T=o[N[-877852+877853]]O=o[N[-519994-(-519996)]]s=O(u,P)b=T[s]u=X(167617-127678)I=B[b]T=o[N[-986763+986764]]P=28724928240171-(-727573)O=o[N[768958+-768956]]s=O(u,P)b=T[s]s=X(-757755-(-797397))u=-147419+20404537419000 W=I[b]b=o[N[180238+-180237]]T=o[N[-625306+625308]]O=T(s,u)I=b[O]m=W[I]I=o[N[7934-7933]]O=X(96152-56348)s=-142105+2526014353329 b=o[N[-499660+499662]]T=b(O,s)W=I[T]b=o[N[736235-736234]]T=o[N[461435+-461433]]s=X(746096-706209)u=20462+22139359451223 O=T(s,u)I=b[O]m[W]=I m=14946723-(-572936)else W=P m=g m=P and 14204964-674197 or 9633662-(-431369)end else if m&lt;-427318+4235382 then W=-78720+78735 m=t&gt;W m=m and 613939+37774 or 420140+15580208 else s=nil b=nil O=nil m=-190366+15806537 end end else if m&lt;3579418-(-581234)then if m&lt;4496206-412860 then B=o[N[-56447-(-56448)]]W=#B B=663882-663882 m=W==B m=m and 13402905-1022629 or 319292+14257720 else i=X(412384-372686)m=z[i]i=X(-909792+949695)z[i]=m m=14890821-(-467351)end else if m&lt;267235+3960958 then A=-499109+5110308316912 s=o[N[1009632+-1009628]]Z=X(-921925-(-961755))P=o[N[-580005+580006]]g=o[N[-930828-(-930830)]]R=-542140+33566991958730 x=g(Z,A)u=P[x]O=s[u]D=33732152884816-(-589579)u=o[B]A=11032847818126-133501 Z=X(-892305+932013)Y=X(-281793+321715)s=O(u)s=o[N[674391-674387]]P=o[N[-179994+179995]]g=o[N[-433576+433578]]x=g(Z,A)u=P[x]O=s[u]u=o[B]s=O(u)Z=X(178015-138089)s=o[N[-551257-(-551262)]]P=o[N[236670-236669]]c=X(-310741+350641)g=o[N[646940-646938]]A=463266+27263402926069 x=g(Z,A)u=P[x]O=s[u]u=o[B]s=O(u)g=o[B]Z=o[N[-592736-(-592737)]]A=o[N[4776-4774]]r=A(c,D)c=-743318+21559526342349 x=Z[r]P=g[x]x=o[N[897729-897728]]Z=o[N[-739274+739276]]r=X(612618+-572676)A=Z(r,c)r=-158563+9781019884845 D=X(-558934+598578)g=x[A]A=X(508190+-468423)u=P[g]g=o[N[-909715+909716]]x=o[N[1043455+-1043453]]f=33741199567776-(-938431)Z=x(A,r)A=17731078509122-356866 P=g[Z]Z=X(-953515-(-993235))s=u[P]P=o[N[476599-476598]]g=o[N[605637+-605635]]x=g(Z,A)u=P[x]O=s[u]x=X(-97682-(-137355))q=-970454+8440482962992 u=o[N[956390+-956389]]Z=29185812853856-(-245942)P=o[N[272630-272628]]L=-702049+17461489866276 g=P(x,Z)s=u[g]P=m x=o[B]A=o[N[-688564+688565]]r=o[N[998061-998059]]c=r(D,q)Z=A[c]g=x[Z]q=X(865224-825479)r=o[N[-472687+472688]]c=o[N[-786000-(-786002)]]D=c(q,R)A=r[D]x=X(-890415-(-930301))c=o[B]q=o[N[462166+-462165]]R=o[N[906800-906798]]i=R(Y,f)D=q[i]f=11945781715636-675066 Y=X(244358-204488)r=c[D]q=o[N[663527+-663526]]R=o[N[-19969-(-19971)]]i=R(Y,f)D=q[i]R=o[N[1001998-1001997]]i=o[N[-830033+830035]]f=X(553736+-513838)x=g[x]Y=i(f,L)q=R[Y]c=X(107467-67630)c=r[c]c=c(r,D,q)Z=A..c x=x(g,Z)u=x m=x and 671505+-67244 or 1708887-(-797066)else I=969775+6656420 t=X(819888-780204)W=7381245-468442 B=t^I m=W-B W=X(-496772+536453)B=m m=W/B W={m}m=z[X(432360+-392650)]end end end end end else if m&lt;6089682-(-642058)then if m&lt;220804+5015314 then if m&lt;5245316-271084 then if m&lt;134774+4805157 then if m&lt;506862+4066453 then D=D+R Y=not i W=D&lt;=q W=Y and W Y=D&gt;=q Y=i and Y W=Y or W Y=15940470-(-440231)m=W and Y W=232486+15478314 m=m or W else I,O=b(t,I)m=I and 1275755-(-970140)or-538785+14864422 end else if m&lt;992703+3967966 then m=t m=not W m=m and 407237+325173 or 11414453-324265 else t=o[N[-340068+340071]]I=-691626+691863 B=t*I m=-92849+5245772 t=217179+-216922 W=B%t o[N[-988041+988044]]=W end end else if m&lt;5401998-269430 then if m&lt;4770850-(-332840)then b=o[N[727170-727168]]T=o[N[-36732+36735]]u=25104+3242956547030 m=537294+6222384 s=X(47146-7248)O=T(s,u)I=b[O]B=I else L=G(L)f=G(f)l=G(l)Y=G(Y)m=523460+3834571 e=G(e)E=nil K=G(K)end else if m&lt;435614+4765583 then t=o[N[-999576-(-999579)]]I=-767622-(-767623)B=t~=I m=B and 10045807-757714 or 5993111-1029003 else P=552628+20419351901808 u=X(-463727+503642)T=o[N[162911-162910]]O=o[N[-327607+327609]]s=O(u,P)b=T[s]m=9547825-41556 t=b end end end else if m&lt;6324367-566703 then if m&lt;-88758+5463785 then if m&lt;696320+4626240 then m=-705111+6071562 else u=nil O=nil A=nil Z=nil r=nil O=X(-604037+643672)x=nil g=G(g)P=G(P)s=G(s)b=G(b)s=X(-246331-(-285966))r=804082+-804081 T=G(T)P=X(-130037-(-169863))x={}t=G(t)Z=w()t=nil c=G(c)I=G(I)I=nil b=w()o[b]=t t=w()u=X(-272262+312183)o[t]=I T=z[O]O=X(535468-495761)I=T[O]T=w()o[T]=I O=z[s]s=X(887705+-848077)I=O[s]s=z[u]u=X(24208+15445)O=s[u]A={}u=z[P]P=X(-119213-(-158960))s=u[P]u=-584911+584911 P=w()o[P]=u c=122513-122257 u=54763-54761 g=w()o[g]=u i=c m=-265624+3088751 o[Z]=x u={}c=654557-654556 x=455021-455021 Y=c c=737343-737343 f=Y&lt;c c=r-Y end else if m&lt;582478+4914898 then T=-249501+249503 t=o[N[-317873-(-317874)]]b=-715695-(-715696)I=t(b,T)t=349707+-349706 B=I==t W=B m=B and 3101107-43380 or 1570172-236060 else n=1038252-1038251 F=m v=E[n]n=false S=v==n h=S m=S and 6969735-246756 or 478557+15550158 end end else if m&lt;5687650-(-382514)then if m&lt;558659+5433638 then A=not Z g=g+x u=g&lt;=P u=A and u A=g&gt;=P A=Z and A u=A or u A=582166+-535669 m=u and A u=297368+3512318 m=m or u else r=c L=r A[r]=L r=nil m=834921+1988206 end else if m&lt;7010545-434283 then I=812428-812428 B=X(577128-537443)m=z[B]t=o[N[-382664-(-382672)]]B=m(t,I)m=6828937-(-729123)else m=-301901+16330616 n=79922-79920 v=E[n]n=o[e]S=v==n h=S end end end end else if m&lt;619592+7870757 then if m&lt;846559+6874608 then if m&lt;-989590+8242953 then if m&lt;-1000142+7879958 then m=t T=X(-534131-(-573781))O=35132808194838-322351 m[W]=B P=22304043203636-(-732254)W=o[N[-899901+899905]]t=o[N[-495165-(-495167)]]u=X(-936242-(-976074))I=o[N[-305777+305780]]b=I(T,O)O=32083343096808-16781 B=t[b]m=W[B]T=X(-975564-(-1015344))t=o[N[-489235+489237]]I=o[N[-416891+416894]]b=I(T,O)B=t[b]I=o[N[-789546-(-789550)]]T=o[N[412506+-412504]]O=o[N[-579371-(-579374)]]s=O(u,P)b=T[s]t=I[b]W=X(860064-820458)W=m[W]W=W(m,B,t)m=z[X(-361869-(-401643))]W={}else T=X(-120110-(-159750))O=16012096252294-(-373658)W=o[N[270936-270935]]t=o[N[441424-441422]]I=o[N[-938671+938674]]b=I(T,O)B=t[b]m=W[B]B=o[N[449813-449809]]W=m(B)W={}m=z[X(-470899-(-510751))]end else if m&lt;7213040-(-171132)then m=W and 16160243-217072 or 12409463-430162 else t=-584827-(-584828)m={}B=m m=11210363-(-193975)I=o[N[-181970+181979]]b=I I=924456-924455 T=I I=-373284-(-373284)O=T&lt;I I=t-T end end else if m&lt;9127288-791843 then if m&lt;-703609+8790679 then W={}m=z[X(-462650-(-502354))]else s=X(265426+-225770)m=true B=y t=w()I=X(560298-520472)o[t]=m W=z[I]I=X(-98207+137978)m=W[I]I=w()o[I]=m m=U(424402+2568058,{})b=w()T=w()o[b]=m m=false o[T]=m O=z[s]u=j(-226933+8921964,{T})s=O(u)m=s and 1606611-970099 or 1068539-690126 W=s end else if m&lt;-919714+9373361 then S=887072+-887071 F=E[S]h=F m=15375604-789996 else T=o[N[920512+-920511]]P=28621844919507-(-737085)O=o[N[-112353-(-112355)]]u=X(-361993-(-401651))s=O(u,P)b=T[s]I=B[b]P=-300634+10526678215039 T=o[N[311853+-311852]]u=X(-742899+782768)O=o[N[527432-527430]]s=O(u,P)b=T[s]u=17701989203305-777526 t=I[b]s=X(-439865+479519)b=o[N[438833-438832]]T=o[N[275972-275970]]O=T(s,u)I=b[O]O=X(-708625+748361)s=19183297556022-772946 W=t[I]I=o[N[22113-22112]]b=o[N[136204+-136202]]T=b(O,s)t=I[T]m=W[t]T=X(431044+-391269)t=o[N[-907937+907938]]I=o[N[-561411+561413]]O=7626288039285-538518 b=I(T,O)W=t[b]t=o[N[829470-829466]]m[W]=t m=1464051-116338 end end end else if m&lt;18802+9265061 then if m&lt;9180534-460708 then if m&lt;930080+7699953 then t=o[N[-950901-(-950905)]]b=o[N[-657245-(-657247)]]u=19061086544232-(-819524)T=o[N[-187998+188001]]s=X(-178993+218617)O=T(s,u)I=b[O]B=t[I]I=o[N[767680-767678]]s=15967092693906-(-819577)O=X(-873352-(-913122))b=o[N[-1000444-(-1000447)]]T=b(O,s)s=26565954292036-(-780046)t=I[T]W=B[t]T=X(25515+14262)t=o[N[-373621-(-373623)]]I=o[N[-913242+913245]]O=8206419215415-685386 b=I(T,O)B=t[b]m=W[B]B=o[N[359818+-359816]]O=X(-539368-(-579151))b=X(424874+-385114)T=-1013679+13448896204837 t=o[N[-467539-(-467542)]]I=t(b,T)W=B[I]B=false m[W]=B B=o[N[474704+-474700]]I=o[N[-686198-(-686200)]]b=o[N[-858063-(-858066)]]T=b(O,s)t=I[T]W=B[t]t=o[N[-146811-(-146813)]]I=o[N[880569-880566]]T=X(-114644+154292)O=16179637867612-194286 b=I(T,O)B=t[b]T=-346478+26191304685842 s=X(1068358-1028577)m=W[B]b=X(-870781+910408)B=o[N[-1003152-(-1003154)]]t=o[N[-698075-(-698078)]]I=t(b,T)W=B[I]B=true u=-805147+478890052090 m[W]=B t=o[N[-908678+908682]]b=o[N[-831441+831443]]T=o[N[324175-324172]]O=T(s,u)I=b[O]O=X(175417+-135644)s=1033734+21707221819766 B=t[I]I=o[N[-841515-(-841517)]]b=o[N[-110932-(-110935)]]T=b(O,s)t=I[T]O=3068142709492-(-481952)W=B[t]t=o[N[26511-26509]]I=o[N[840657-840654]]T=X(1032319-992394)b=I(T,O)T=5862471738019-(-354310)B=t[b]O=-476750+11979550891032 m=W[B]B=o[N[-58726+58728]]b=X(-362544-(-402461))t=o[N[207803-207800]]I=t(b,T)T=X(985798+-946131)W=B[I]t=o[N[-935247-(-935249)]]I=o[N[388315+-388312]]b=I(T,O)B=t[b]m[W]=B W={}m=z[X(-938321-(-978051))]else m=true o[N[753211+-753210]]=m W={}m=z[X(-968163+1008104)]end else if m&lt;1044904+8039181 then t=X(-700498+740255)s=X(-762168+801772)W=z[t]u=978468+5529784277995 t=W()g=X(927444+-887638)b=o[N[901679+-901678]]T=o[N[-462513+462515]]O=T(s,u)I=b[O]W=B[I]P=-731036+28226973113076 m=t-W T=o[N[-403766-(-403767)]]t=m O=o[N[213623-213621]]u=X(-786728-(-826383))s=O(u,P)b=T[s]x=29223578311701-(-858387)u=X(-823378-(-863131))I=B[b]P=503079+26229912568463 T=o[N[-174925-(-174926)]]O=o[N[997103-997101]]s=O(u,P)u=-251095+9129621923186 b=T[s]W=I[b]b=o[N[314028+-314027]]s=X(-931495+971409)T=o[N[-620318+620320]]O=T(s,u)I=b[O]s=-671083+27088843632305 m=W[I]I=o[N[136894-136893]]b=o[N[563008+-563006]]O=X(828620+-788861)T=b(O,s)W=I[T]O=X(40170+-344)T=z[O]s=o[N[-148132-(-148133)]]u=o[N[897023-897021]]P=u(g,x)O=s[P]g=X(-402006+441624)b=T[O]s=o[N[-544669-(-544670)]]u=o[N[30650-30648]]x=32253901470735-(-130716)P=u(g,x)O=s[P]T=b(O,t)O=o[N[1034438+-1034437]]g=16562678538882-(-424862)s=o[N[253923-253921]]P=X(-117914-(-157560))u=s(P,g)b=O[u]I=T..b m[W]=I T=o[N[259020+-259019]]O=o[N[-570376+570378]]P=6958977990055-782591 u=X(-777955-(-817684))s=O(u,P)b=T[s]I=B[b]u=X(-754036+793759)P=7603+22264958978764 T=o[N[47919-47918]]O=o[N[898748+-898746]]s=O(u,P)u=25834294356742-834568 b=T[s]W=I[b]b=o[N[-274421+274422]]T=o[N[-633262+633264]]s=X(61428+-21697)O=T(s,u)I=b[O]m=W[I]I=o[N[159391+-159390]]b=o[N[-34694-(-34696)]]O=X(-296703-(-336626))s=605736+3060960708457 T=b(O,s)W=I[T]u=12729785703413-427214 b=o[N[-99134-(-99135)]]s=X(-910976+950886)T=o[N[753986+-753984]]O=T(s,u)I=b[O]m[W]=I W=-11141-(-11148)m=t&gt;W m=m and 11014272-(-205482)or-355654+4163013 else I=o[N[497792-497791]]b=o[N[644482-644480]]O=X(1024855+-985040)s=34046243549611-881597 T=b(O,s)t=I[T]W=B[t]m=not W m=m and 15195045-619986 or 12660136-427200 end end else if m&lt;8666274-(-901554)then if m&lt;-762938+10208570 then I=-331094-(-331126)t=o[N[277516+-277513]]B=t%I P=-154695-(-154697)m=-913968+15490980 x=-203421-(-203434)b=o[N[-765016-(-765020)]]s=o[N[994307+-994305]]r=o[N[956324-956321]]A=r-B r=-323795-(-323827)Z=A/r g=x-Z u=P^g O=s/u T=b(O)b=-35485+4295002781 I=T%b T=636998-636996 b=T^B t=I/b u=97181-97180 b=o[N[534934-534930]]P=364453+-364197 s=t%u u=4295844084-876788 O=s*u T=b(O)b=o[N[-94097+94101]]s=-88888-(-154424)O=b(t)I=T+O T=631636+-566100 x=-596617+596873 b=I%T O=I-b T=O/s s=814114+-813858 O=b%s u=b-O s=u/P b=nil P=736964-736708 u=T%P g=T-u P=g/x t=nil T=nil I=nil g={O,s,u,P}P=nil s=nil B=nil u=nil O=nil o[N[449606+-449605]]=g else m=I s=5509658966162-(-577907)O=X(843048-803264)m[W]=t W=o[B]I=o[N[-240712-(-240713)]]b=o[N[1036896+-1036894]]T=b(O,s)t=I[T]m=W[t]t=o[N[-524537+524538]]T=X(-563495-(-603402))I=o[N[-565735+565737]]O=-998755+6767109704114 b=I(T,O)W=t[b]O=X(-9321-(-49116))t=false m[W]=t s=-912203+27716465614261 W=o[B]I=o[N[-999959+999960]]b=o[N[-772982+772984]]T=b(O,s)t=I[T]m=W[t]m=m and 944906+-294906 or 230096+11694138 end else if m&lt;10499555-698219 then r=X(1024672-984756)R=X(922079-882438)s=X(570605-530726)O=z[s]A=z[r]i=19205621222240-272497 c=o[N[68731+-68730]]D=o[N[-689919+689921]]q=D(R,i)r=c[q]Z=A[r]r=o[N[663754-663753]]R=411838+26420216915792 c=o[N[-937723-(-937725)]]q=X(108126-68357)D=c(q,R)q=20783968282688-295538 m=14147620-(-938850)A=r[D]D=X(200520-160762)x=Z[A]A=o[N[-561893-(-561894)]]r=o[N[188780-188778]]c=r(D,q)Z=A[c]g=x[Z]Z=X(120057-80308)Z=g[Z]x={Z(g)}g={O(k(x))}s=g[776942+-776941]u=g[628911-628909]P=g[1013421-1013418]else m=-610222+5738733 o[t]=W end end end end end end else if m&lt;-178357+14008586 then if m&lt;11468407-251956 then if m&lt;-938856+11715796 then if m&lt;10213296-(-346458)then if m&lt;441876+9775704 then if m&lt;-1048436+11124239 then g=X(-97477-(-137372))P=z[g]m=707404+12823363 W=P else W=X(494502-454804)B=X(-5667+45570)m=z[W]W=z[B]B=X(944365-904462)z[B]=m B=X(-468523+508221)m=-1013534+16118912 z[B]=W B=o[N[544107-544106]]t=B()end else if m&lt;-671682+11074628 then O=P D=X(1083336-1043667)x=X(-652663+692270)q=-972610+294498523083 i=X(-312942+352704)x=g[x]x=x(g)A=o[N[623019-623018]]m=710830+14375640 r=o[N[-265739+265741]]Y=30258581387226-(-556848)g=nil c=r(D,q)Z=A[c]O=nil r=o[B]D=o[N[-922105-(-922106)]]q=o[N[906474-906472]]R=q(i,Y)c=D[R]A=r[c]x[Z]=A x=nil else m=o[N[-861601+861611]]t=o[N[-734554+734565]]B[m]=t m=o[N[391515+-391503]]t={m(B)}W={k(t)}m=z[X(-857574-(-897395))]end end else if m&lt;929736+9769409 then if m&lt;-525962+11211925 then s=29966900908631-89045 B=o[N[-608048-(-608049)]]I=o[N[927059-927057]]O=X(23794-(-15997))b=o[N[55746-55743]]T=b(O,s)O=17807546578213-218305 t=I[T]W=B[t]t=o[N[-409519+409521]]I=o[N[-931784+931787]]T=X(631194-591293)b=I(T,O)T=-449276+29809431187765 B=t[b]m=W[B]B=o[N[-927590+927592]]t=o[N[-551417-(-551420)]]b=X(-628539-(-668176))I=t(b,T)W=B[I]B=false m[W]=B W={}m=z[X(144331-104692)]else o[t]=D m=o[t]m=m and 6346387-1029093 or-696720+1221171 end else if m&lt;9924792-(-817225)then I=o[N[-862609+862613]]b=X(686799+-647147)g=243978+20976661900574 O=o[N[-811543-(-811545)]]P=X(755251+-715512)s=o[N[-559511-(-559514)]]b=I[b]m=6935346-(-418011)u=s(P,g)T=O[u]b=b(I,T)t=not b W=t else t=nil m=z[X(101261-61381)]B=nil W={}end end end else if m&lt;362147+10736747 then if m&lt;10644562-(-340843)then if m&lt;10322419-(-521784)then b=o[N[-736539-(-736540)]]g=30266757675262-(-769552)O=o[N[-818327+818329]]s=o[N[-352130-(-352133)]]P=X(-859663-(-899384))u=s(P,g)T=O[u]I=b[T]u=X(1047078-1007469)P=28093839454976-655334 T=o[N[-1007250-(-1007252)]]O=o[N[695902+-695899]]s=O(u,P)u=-149314+12991843344099 P=8066054056591-1022947 b=T[s]t=I[b]s=X(1007669-968046)b=o[N[-364396+364398]]T=o[N[401426+-401423]]O=T(s,u)I=b[O]O=X(894112+-854413)B=t[I]I=o[N[-723275-(-723277)]]b=o[N[-920765+920768]]s=-174555+15866354501303 T=b(O,s)u=X(-665266-(-705108))t=I[T]O=-961127+28388337311242 W=B[t]t=o[N[-555365+555367]]I=o[N[225450-225447]]T=X(-138887+178518)b=I(T,O)B=t[b]m=W[B]B=m I=X(-877326-(-917138))I=B[I]b=168523+-168524 I=I(B,b)T=o[N[-247421-(-247423)]]O=o[N[292171-292168]]s=O(u,P)b=T[s]t=I==b W=t m=t and 943404+9772891 or 6317752-(-1035605)else m=-379536+16104021 end else if m&lt;10936948-(-97011)then P=1633683780620-(-446188)m=o[N[130772+-130771]]B=o[N[313603+-313601]]b=X(741179+-701274)T=25337756783850-108244 t=o[N[994544+-994541]]I=t(b,T)W=B[I]I=o[N[-707128+707129]]T=o[N[524554-524552]]O=o[N[-128228-(-128231)]]u=X(-688731-(-728444))s=O(u,P)b=T[s]t=I[b]B=not t T=X(-1013934+1053648)u=X(-497697+537633)m[W]=B W=o[N[11901+-11900]]P=-1016459+30403432757720 t=o[N[660368-660366]]O=25722987382321-333671 I=o[N[78941-78938]]b=I(T,O)B=t[b]m=W[B]t=o[N[530543-530541]]O=580190+34807781369074 I=o[N[433720+-433717]]T=X(-448353-(-488287))W=X(364673-325067)b=I(T,O)B=t[b]W=m[W]I=o[N[1003024-1003023]]T=o[N[436146-436144]]O=o[N[-551627-(-551630)]]s=O(u,P)b=T[s]t=I[b]W=W(m,B,t)W=o[N[322085-322081]]T=X(-364705-(-404456))t=o[N[619323+-619321]]I=o[N[-438026-(-438029)]]O=6858805864634-187457 b=I(T,O)B=t[b]m=W[B]B=o[N[850097-850096]]W=m(B)W={}m=z[X(-1045425+1085309)]else m=12756557-777256 end end else if m&lt;10464991-(-715907)then if m&lt;347383+10805998 then B=w()o[B]=y[-439958-(-439959)]W=X(-779360+819239)m=z[W]b=o[N[965120+-965119]]T={m(b)}I=T[702599+-702596]t=T[-816964+816966]W=T[-120462+120463]b=W m=3832143-(-838128)else u=X(310964+-271070)T=o[N[893551+-893550]]P=16273249261772-555827 O=o[N[246025+-246023]]s=O(u,P)b=T[s]u=X(112109+-72280)I=B[b]P=3838363935498-(-664561)T=o[N[-976958-(-976959)]]O=o[N[-55105+55107]]s=O(u,P)b=T[s]t=I[b]b=o[N[906698-906697]]s=X(-824528+864274)u=12858+19510711906627 T=o[N[-608192-(-608194)]]O=T(s,u)s=-872746+10738351006898 I=b[O]W=t[I]I=o[N[838974-838973]]O=X(385264-345428)b=o[N[177834-177832]]T=b(O,s)t=I[T]T=X(-78317-(-118130))O=32189193041511-(-508966)m=W[t]t=o[N[252504+-252503]]I=o[N[146240+-146238]]b=I(T,O)W=t[b]t=o[N[-950763-(-950766)]]m[W]=t m=320924+1026789 end else if m&lt;180562+11017839 then m=o[N[-698509+698513]]B=o[N[-604925+604927]]b=X(-167323+207141)u=481116+28383298296901 T=-589715+3605952890402 t=o[N[393931-393928]]I=t(b,T)W=B[I]t=o[N[326045+-326040]]b=o[N[75868+-75866]]s=X(-476557+516243)T=o[N[-25255+25258]]O=T(s,u)s=X(284133+-244196)x=16141846563244-633936 I=b[O]u=-910335+31670193347994 B=t[I]m[W]=B t=o[N[-854754-(-854758)]]b=o[N[-688848+688850]]T=o[N[-374141+374144]]O=T(s,u)I=b[O]B=t[I]s=5588768845336-(-973842)g=32283982346232-654655 I=o[N[-116704-(-116706)]]b=o[N[72138+-72135]]O=X(852457+-812609)T=b(O,s)t=I[T]O=12673310951980-(-691425)W=B[t]t=o[N[-7220+7222]]T=X(-428583-(-468324))I=o[N[636644+-636641]]b=I(T,O)B=t[b]m=W[B]u=X(-706393-(-746006))b=X(169740+-130130)B=o[N[845063+-845061]]t=o[N[-353764+353767]]T=-495634+29649474029056 I=t(b,T)W=B[I]B=false P=28350827970337-(-980080)r=-831693+31836989418166 m[W]=B I=o[N[-702376+702380]]T=o[N[433432+-433430]]O=o[N[186731-186728]]s=O(u,P)b=T[s]t=I[b]b=o[N[-248607+248609]]s=X(-137348+177113)T=o[N[169250+-169247]]u=634022+9111133086700 c=4845836003836-(-777940)O=T(s,u)I=b[O]A=X(-191148+230902)O=X(307822-267918)B=t[I]I=o[N[-639955-(-639957)]]s=34972699964203-95118 b=o[N[-189165+189168]]T=b(O,s)t=I[T]T=X(-809089-(-848704))W=B[t]O=-184639+20697167165156 P=X(-933552-(-973339))t=o[N[752905+-752903]]I=o[N[-697069-(-697072)]]b=I(T,O)B=t[b]T=-109003+25745823340703 m=W[B]B=o[N[8180-8178]]b=X(-981139+1020848)t=o[N[-72596-(-72599)]]I=t(b,T)t=m W=B[I]b=o[N[1004830-1004826]]O=o[N[1026216+-1026214]]s=o[N[275782+-275779]]u=s(P,g)T=O[u]I=b[T]s=o[N[-110888+110890]]g=X(228474+-188762)u=o[N[88296-88293]]P=u(g,x)O=s[P]u=o[N[-941723+941727]]g=o[N[-495807+495809]]x=o[N[-253203-(-253206)]]Z=x(A,r)P=g[Z]s=u[P]u=X(-203764+243601)A=X(308850+-269133)u=s[u]r=-283731+32113472278205 g=o[N[-721574-(-721576)]]x=o[N[394219-394216]]b=X(-700705-(-740591))b=I[b]Z=x(A,r)P=g[Z]x=o[N[-139099-(-139101)]]Z=o[N[941535+-941532]]r=X(280285-240387)A=Z(r,c)g=x[A]u=u(s,P,g)T=O..u b=b(I,T)m=b and-1031199+7790877 or 4399967-(-582811)B=b else q=x==Z D=q m=10181646-(-508527)end end end end else if m&lt;533262+11663178 then if m&lt;-910405+12565395 then if m&lt;10406528-(-892998)then if m&lt;10923487-(-296788)then T=o[N[582284+-582283]]P=467899+18276142464387 u=X(356964-317236)O=o[N[498054-498052]]s=O(u,P)b=T[s]I=B[b]T=o[N[-479290+479291]]P=40276+29475312457801 O=o[N[-778068+778070]]u=X(-705339+745011)s=O(u,P)u=-363733+21109869966139 b=T[s]W=I[b]b=o[N[971122-971121]]s=X(-296982+336676)T=o[N[895563-895561]]O=T(s,u)I=b[O]m=W[I]I=o[N[-705263-(-705264)]]O=X(-786026-(-825718))b=o[N[140086+-140084]]u=296185+28183337348682 s=32133249947355-(-893848)T=b(O,s)W=I[T]s=X(-790545-(-830221))b=o[N[-660340+660341]]T=o[N[-960743-(-960745)]]O=T(s,u)I=b[O]m[W]=I m=813362+2993997 else s=593340+27237505704911 B=o[N[293941+-293940]]I=o[N[1190+-1188]]O=X(659134-619284)b=o[N[-626256-(-626259)]]T=b(O,s)t=I[T]W=B[t]B=W()m=not B m=m and 8008977-(-597591)or 11390299-194981 end else if m&lt;12274475-865341 then I=I+T s=not O t=I&lt;=b t=s and t s=I&gt;=b s=O and s t=s or t s=152604+13970218 m=t and s t=10821268-362520 m=m or t else F=o[t]h=F m=F and 7539443-(-799549)or 14547382-(-38226)end end else if m&lt;12494390-566691 then if m&lt;725827+11192291 then W={}m=z[X(918412-878516)]else b=o[B]m=-303258+10045377 P=X(661467+-621602)g=34602564584510-(-96947)O=o[N[-312654+312655]]s=o[N[-729365-(-729367)]]u=s(P,g)P=28170621972945-(-573804)g=-267821+13946567978891 T=O[u]I=b[T]T=o[N[-472337+472338]]u=X(426482+-386609)O=o[N[-157258+157260]]s=O(u,P)b=T[s]O=o[N[-973159+973160]]P=X(589592-549924)s=o[N[806843+-806841]]u=s(P,g)T=O[u]I[b]..=T end else if m&lt;11188073-(-775925)then I=o[N[508837-508831]]t=I==B m=2173547-(-177633)W=t else m=B W={}o[N[-662021+662025]]=m B=nil m=z[X(-444713-(-484619))]end end end else if m&lt;-571220+13542938 then if m&lt;12716664-319199 then if m&lt;11757570-(-486922)then I=o[N[229703-229702]]b=o[N[-873679-(-873681)]]s=-132660+25649198511323 O=X(870396+-830534)T=b(O,s)t=I[T]W=B[t]I=o[N[51381+-51380]]s=-327898+27626221826842 b=o[N[-270557-(-270559)]]O=X(480955-441026)T=b(O,s)t=I[T]m=W[t]t=o[N[-715089+715090]]I=o[N[-940660-(-940662)]]T=X(-196283-(-235903))O=26414351835355-651471 b=I(T,O)W=t[b]t=false m[W]=t m=-69582+13888080 else I=9044+-9043 t=o[N[-556211+556213]]B=t*I t=3349143206819-(-150132)W=B+t B=-530821+35184372619653 t=-232068-(-232069)m=W%B o[N[603080-603078]]=m m=167907+4796201 B=o[N[-396580-(-396583)]]W=B~=t end else if m&lt;768504+11964094 then O=o[N[830421+-830420]]s=o[N[43049-43047]]P=X(832013+-792223)g=15305225719344-193113 u=s(P,g)T=O[u]b=B[T]O=o[N[-704094-(-704095)]]g=-545551+16929822290394 s=o[N[34048-34046]]P=X(-245054+284687)u=s(P,g)T=O[u]I=b[T]u=X(950599-910711)P=13504409971315-348643 T=o[N[735137-735136]]O=o[N[809281-809279]]s=O(u,P)P=492511+21631185298297 b=T[s]W=I[b]b=o[N[-934863+934864]]s=X(-141943-(-181732))u=11017+17831239726438 T=o[N[-217596+217598]]x=X(511464-471650)O=T(s,u)I=b[O]O=X(-1030295+1070080)m=W[I]I=o[N[617393+-617392]]b=o[N[-785321-(-785323)]]s=3884808939257-(-172056)T=b(O,s)W=I[T]T=o[N[412416+-412415]]O=o[N[-756496-(-756498)]]u=X(-469653-(-509506))s=O(u,P)b=T[s]Z=18774795068130-(-540484)u=o[N[719991-719990]]P=o[N[-873853+873855]]g=P(x,Z)s=u[g]O=t[s]u=o[N[998779-998778]]x=X(-576279+615943)P=o[N[-927900-(-927902)]]Z=14221128036583-235273 g=P(x,Z)s=u[g]T=O..s I=b..T m[W]=I u=X(-1042372+1082172)T=o[N[615114-615113]]P=22325+103375104251 O=o[N[-907921+907923]]s=O(u,P)b=T[s]I=B[b]u=X(272244-232385)P=12760951626928-(-129670)T=o[N[942285+-942284]]O=o[N[676527-676525]]s=O(u,P)b=T[s]W=I[b]b=o[N[75040-75039]]u=15602987767316-309683 T=o[N[-235390+235392]]s=X(825624+-785777)O=T(s,u)s=664533+22889557575117 I=b[O]O=X(-994638-(-1034448))m=W[I]I=o[N[-813557-(-813558)]]b=o[N[795459-795457]]T=b(O,s)W=I[T]I=true m[W]=I m=515674+10229124 else T=o[N[-182087+182088]]u=X(675894-636126)O=o[N[-867291+867293]]P=-988885+33835951854689 s=O(u,P)u=X(-562864-(-602775))b=T[s]I=B[b]T=o[N[-997433-(-997434)]]O=o[N[253366-253364]]P=320348+11024053874865 s=O(u,P)u=7560897732804-(-1010940)b=T[s]s=X(533630+-493747)W=I[b]b=o[N[254914+-254913]]T=o[N[591368-591366]]O=T(s,u)s=1104884947121-218799 I=b[O]m=W[I]O=X(-164534+204268)I=o[N[850715-850714]]b=o[N[-852227+852229]]T=b(O,s)W=I[T]I=false m[W]=I m=-704150+11448948 end end else if m&lt;645643+12834137 then if m&lt;910439+12347134 then r={}c=w()K=X(244102+-204310)i=H(-959219+4978151,{c;P;g,T})f=X(992195-952473)s=nil O=nil o[c]=r S=nil E=X(-99178+139024)r=w()o[r]=i I=nil x=nil Y=w()L={}O=X(-450529-(-490372))i={}o[Y]=i I={}i=z[f]e=o[Y]A=nil l={[K]=e;[E]=S}u=nil f=i(L,l)i=d(-895411+15970603,{Y,c;Z;P,g;r})c=G(c)r=G(r)Z=G(Z)S=19690641829147-(-194230)Y=G(Y)g=G(g)T=G(T)o[b]=f T=w()o[t]=i o[T]=I I=z[O]g=X(757953+-718037)P=G(P)P=z[g]r=X(438203-398492)c=-627830+12947758279683 x=o[b]m=z[X(-310980-(-350705))]Z=o[t]A=Z(r,c)g=x[A]u=P[g]i=500757+29572179431861 g=o[b]A=X(241840+-202046)Y=174608+7973218952304 E=X(-890900+930686)L=9097306745123-465047 x=o[t]r=19823+16153284317170 Z=x(A,r)P=g[Z]s=u[P]O=I(s)I=w()o[I]=O x=X(-139307+179223)s=X(-229441-(-269284))O=z[s]g=z[x]Z=o[b]c=X(863887-824226)A=o[t]r=A(c,i)x=Z[r]P=g[x]r=X(742705-702986)c=10598861526330-(-15885)x=o[b]Z=o[t]A=Z(r,c)g=x[A]i=X(825528+-785920)u=P[g]s=O(u)O=w()Z=X(817490+-777574)u=X(-339918+379761)o[O]=s s=z[u]x=z[Z]A=o[b]l=X(164816-125079)r=o[t]c=r(i,Y)Z=A[c]g=x[Z]Z=o[b]c=X(186146-146247)A=o[t]i=12742408671270-(-476935)r=A(c,i)x=Z[r]P=g[x]u=s(P)A=X(58130-18214)Y=X(-197368-(-236998))s=w()K=718876+22520825966811 P=X(-102543-(-142386))o[s]=u u=z[P]Z=z[A]r=o[b]c=o[t]i=c(Y,L)A=r[i]x=Z[A]A=o[b]r=o[t]i=X(216546-176747)Y=5527585748967-568794 c=r(i,Y)Z=A[c]g=x[Z]P=u(g)g=X(-598510-(-638330))u=w()o[u]=P i=380762+12061210576534 P=z[g]Z=o[b]g=X(745774-706169)c=X(-571415+611097)A=o[t]r=A(c,i)g=P[g]x=Z[r]g=g(P,x)P=w()o[P]=g i=25456699781609-115611 x=o[b]r=X(75391+-35493)Z=o[t]c=445542+5383582399844 A=Z(r,c)Y=-445787+537809555029 g=x[A]x=w()o[x]=g Z=o[b]c=X(-654766+694590)A=o[t]r=A(c,i)g=Z[r]Z=w()o[Z]=g i=X(942690+-903015)A=o[b]r=o[t]c=r(i,Y)g=A[c]c=X(-558325-(-597991))A=w()o[A]=g r=z[c]i=o[b]Y=o[t]L=Y(l,K)c=i[L]g=r[c]L=X(-373277+413055)Y=z[L]l=o[b]K=o[t]e=K(E,S)L=l[e]i=Y[L]L=o[b]l=o[t]e=X(-413123+452875)E=-247136+1982817765627 K=l(e,E)Y=L[K]K=473586-473206 e=-429074+429374 l=-310133-(-310933)c=i[Y]i=false L=-871869-(-872339)Y=false r=g(c,i,Y,L,l,K,e)g=w()o[g]=r r=J(11198244-87767,{O,b;t;u})i=X(-132737-(-172656))c=o[T]c[i]=r i=X(893481+-853592)r=V(14323191-481218,{b;t,A,Z})c=o[T]c[i]=r r=Q(830486-(-308131),{b,t,g,I;T;s,x;P})i=X(-910164-(-949870))c=o[T]c[i]=r c=o[T]r=d(16455896-(-271036),{b;t,s})i=X(622807+-582951)c[i]=r r=o[T]W={r}else g=-935137+19855713544447 P=X(902016+-862159)O=o[N[-343275+343276]]s=o[N[-955538+955540]]u=s(P,g)T=O[u]b=B[T]O=o[N[811341+-811340]]P=X(-49235+88967)s=o[N[352495+-352493]]g=-338238+2453306305972 u=s(P,g)T=O[u]P=2380044200530-255486 I=b[T]T=o[N[291802+-291801]]u=X(611465+-571800)O=o[N[-188956-(-188958)]]s=O(u,P)u=-323281+6936299813742 b=T[s]W=I[b]b=o[N[277719+-277718]]s=X(-273828-(-313748))T=o[N[914047+-914045]]O=T(s,u)I=b[O]O=X(-450086+489909)s=-454040+28287599960332 m=W[I]I=o[N[332330+-332329]]b=o[N[-207771+207773]]T=b(O,s)W=I[T]b=o[N[-1044980-(-1044981)]]T=o[N[-458305+458307]]u=-141263+5441005400500 s=X(-669687+709492)O=T(s,u)I=b[O]m[W]=I m=-680449+16326803 end else if m&lt;11340+13559573 then P=w()r=d(-283953+4637236,{})x=-450378-(-450443)A=X(-544623+584279)o[P]=W m=o[s]g=145939+-145936 W=m(g,x)g=w()m=341580-341580 o[g]=W R=X(19054-(-20814))W=z[A]x=m A={W(r)}W=-247415+247417 m=72980+-72980 Z=m m={k(A)}A=m m=A[W]r=m W=X(595144-555242)m=z[W]c=o[I]q=z[R]R=q(r)q=X(790996-751129)D=c(R,q)c={D()}W=m(k(c))c=w()o[c]=W D=o[g]q=D D=-804920+804921 R=D D=-716236-(-716236)i=R&lt;D m=-968240+5326271 W=-1024691+1024692 D=W-R else O=o[N[-767992+767993]]P=X(470539-430743)s=o[N[-853468-(-853470)]]g=-870610+8380085196816 u=s(P,g)P=X(-234646-(-274479))T=O[u]g=-742591+13857108651507 b=B[T]O=o[N[810022+-810021]]s=o[N[73920+-73918]]u=s(P,g)P=33892397019638-(-232368)T=O[u]I=b[T]T=o[N[320042+-320041]]O=o[N[-642347+642349]]u=X(-1034410+1074301)s=O(u,P)b=T[s]t=I[b]u=705918+14771000415584 b=o[N[-996486+996487]]T=o[N[-743156-(-743158)]]s=X(-726553+766364)O=T(s,u)I=b[O]W=t[I]I=o[N[840001-840000]]O=X(249277+-209607)s=-761648+23567999109646 b=o[N[222012+-222010]]g=-948479+23669192614924 T=b(O,s)t=I[T]P=775696+16404684572615 m=W[t]u=X(-865807+905500)t=o[N[-700359-(-700360)]]O=925202+24045780897195 I=o[N[-777475+777477]]T=X(736946-697283)b=I(T,O)W=t[b]T=o[N[660284-660283]]O=o[N[-431685+431687]]s=O(u,P)b=T[s]P=467488+14106612823944 u=X(-261485-(-301330))I=B[b]T=o[N[927468+-927467]]O=o[N[-705732-(-705734)]]s=O(u,P)b=T[s]t=I[b]P=X(-307655-(-347381))m[W]=t O=o[N[81721-81720]]s=o[N[-959256+959258]]u=s(P,g)T=O[u]b=B[T]O=o[N[589835+-589834]]s=o[N[515158+-515156]]P=X(-1036479+1076235)g=11623744028391-(-955965)u=s(P,g)T=O[u]I=b[T]u=X(-400703-(-440630))T=o[N[-331276+331277]]O=o[N[-292910-(-292912)]]P=20965418190234-(-794760)s=O(u,P)u=1015868+32180818344525 b=T[s]t=I[b]b=o[N[-940373+940374]]s=X(996575+-956872)T=o[N[630372+-630370]]O=T(s,u)s=-350488+28598802959645 I=b[O]W=t[I]O=X(479145+-439342)I=o[N[915039-915038]]b=o[N[-1017972+1017974]]T=b(O,s)t=I[T]O=505781+22906610495989 m=W[t]t=o[N[484255-484254]]u=33601914308354-559587 s=X(-27444+67372)T=X(-776575+816207)I=o[N[-705248-(-705250)]]b=I(T,O)W=t[b]b=o[N[-542412+542413]]T=o[N[-266670+266672]]O=T(s,u)I=b[O]O=200121+23381331123406 t=B[I]m[W]=t T=X(913364-873669)t=o[N[611577-611576]]I=o[N[786628+-786626]]b=I(T,O)W=t[b]m=B[W]m=m and 9788465-990740 or 744528+2514174 end end end end end else if m&lt;16096627-585162 then if m&lt;14478220-(-100568)then if m&lt;13422815-(-1022659)then if m&lt;-1014424+15033049 then if m&lt;-476328+14376833 then u=X(846299-806367)T=o[N[-871076+871077]]O=o[N[808276-808274]]P=15915529246482-(-34273)s=O(u,P)u=X(-405959-(-445899))P=-263680+5105389784905 B=y[-204692+204693]b=T[s]I=B[b]T=o[N[476894-476893]]O=o[N[-996555+996557]]s=O(u,P)b=T[s]t=I[b]u=568567680949-659117 s=X(-688796-(-728572))b=o[N[82022-82021]]T=o[N[-300510+300512]]O=T(s,u)I=b[O]s=7297111571012-(-676609)O=X(505655+-465940)W=t[I]I=o[N[854998-854997]]b=o[N[732707+-732705]]T=b(O,s)t=I[T]u=-182082+26759871559663 s=X(594210+-554438)m=W[t]T=X(901263+-861561)P=-148622+7776001643186 t=o[N[442090+-442089]]I=o[N[-3336+3338]]O=221555+21285026972996 b=I(T,O)W=t[b]b=o[N[263590-263589]]T=o[N[-623190-(-623192)]]O=T(s,u)I=b[O]t=B[I]m[W]=t T=o[N[-653856+653857]]u=X(-142425+182152)O=o[N[837449+-837447]]s=O(u,P)b=T[s]u=X(-1037177+1076978)I=B[b]T=o[N[-497270+497271]]O=o[N[479759+-479757]]P=7807878713114-770279 s=O(u,P)b=T[s]s=X(-362469-(-402335))t=I[b]b=o[N[435235-435234]]u=644151+29828013924874 T=o[N[-613875+613877]]O=T(s,u)I=b[O]W=t[I]O=X(-491664+531427)s=13638474364894-761616 I=o[N[664819-664818]]b=o[N[160993+-160991]]T=b(O,s)O=19787427420006-(-937112)P=33433967768953-882857 u=X(-413892-(-453690))t=I[T]m=W[t]t=o[N[861432+-861431]]T=X(-324533-(-364144))I=o[N[-948019+948021]]b=I(T,O)W=t[b]T=o[N[-245638+245639]]O=o[N[333762+-333760]]s=O(u,P)b=T[s]I=B[b]t=not I T=X(-768709+808386)m[W]=t t=o[N[-534140-(-534141)]]I=o[N[676191-676189]]O=6837400240670-(-35409)b=I(T,O)W=t[b]m=B[W]m=m and 10660206-(-504655)or 909277+7570301 else m={}T=35184372357377-268545 o[N[-678914+678916]]=m s=-329287-(-329542)W=o[N[877584-877581]]b=W W=t%T o[N[-152032-(-152036)]]=W O=t%s s=373780-373778 T=O+s o[N[574422+-574417]]=T u=X(21812-(-18014))s=z[u]u=X(904584-864654)O=s[u]g=-890114+890115 s=O(B)m=-358956+6233980 O=X(227706+-187808)u=-863514+863515 I[t]=O O=-784645-(-784735)P=s x=g g=-581717-(-581717)Z=x&lt;g g=u-x end else if m&lt;13290480-(-887898)then m=o[N[747399-747398]]u=610455-610455 P=-979510+979765 s=m(u,P)m=10465803-(-938535)t=I B[t]=s t=nil else W={}B=G(B)m=z[X(209978+-170035)]end end else if m&lt;14668608-104517 then if m&lt;14715851-191478 then m=-1027051+16643222 else m=o[N[70917+-70910]]m=m and 5306769-(-793948)or 6612830-(-945230)end else if m&lt;485880+14089524 then O=X(1063609-1023926)I=o[N[-336037-(-336038)]]b=o[N[161943-161941]]s=696853+2993665385309 T=b(O,s)t=I[T]W=B[t]O=X(-70548-(-110160))s=58280+23124279871080 I=o[N[516600+-516599]]u=12919770121457-(-21135)b=o[N[-632143+632145]]T=b(O,s)t=I[T]m=W[t]t=o[N[813998-813997]]I=o[N[-53454+53456]]T=X(79030-39203)O=753905+24658207353833 b=I(T,O)s=X(-204514-(-244264))W=t[b]t=true m[W]=t b=o[N[121145+-121144]]T=o[N[-454154-(-454156)]]O=T(s,u)I=b[O]t=B[I]b=o[N[343129+-343128]]u=-87119+25195429577251 s=X(-229617-(-269350))T=o[N[723814+-723812]]O=T(s,u)s=9271615599882-1041453 I=b[O]O=X(-388012+427686)W=t[I]I=o[N[-781897+781898]]b=o[N[-238043+238045]]T=b(O,s)O=31286356775152-579592 t=I[T]m=W[t]T=X(-402221+442095)t=o[N[-687434-(-687435)]]I=o[N[-367579-(-367581)]]b=I(T,O)W=t[b]t=false m[W]=t W={}m=z[X(691738+-651857)]else I=X(-768581-(-808502))t=z[I]I=X(1016101+-976448)B=t[I]I=o[N[227273-227272]]t={B(I)}W={k(t)}m=z[X(169448-129607)]end end end else if m&lt;-868680+15972547 then if m&lt;15547825-789771 then if m&lt;14127612-(-485060)then a=409497-409496 o[t]=h n=o[l]v=n+a S=E[v]F=x+S S=-886755+887011 m=F%S v=o[L]S=Z+v v=-582268-(-582524)F=S%v x=m m=5750778-622267 Z=F else c=#A i=-214051+214051 r=c==i m=r and 12747956-(-472112)or-480759+2545760 end else if m&lt;49331+15030175 then m=o[N[-678264+678265]]I=m B=y[-999627+999628]t=y[-320806-(-320808)]m=I[t]m=m and 13902816-(-614978)or 660586+13340000 else P,g=s(u,P)m=P and 145338+10153845 or 4807859-611300 end end else if m&lt;84654+15245703 then if m&lt;15806501-525916 then m=true m=m and-996103+11127457 or-972258+12862094 else R=X(909576-869708)Y=X(-994469+1034372)m=z[R]i=z[Y]R=m(i)m=X(958253-918555)z[m]=R m=-390930+15749102 end else if m&lt;15052588-(-434922)then m=16437806-713321 else b=X(-3842+43710)W=X(900632+-860730)m=z[W]u=X(947589-907933)P=d(-178715+1821255,{})B=o[N[-524431+524435]]I=z[b]s=z[u]u={s(P)}O={k(u)}s=827740+-827738 T=O[s]b=I(T)I=X(574784-534917)t=B(b,I)B={t()}W=m(k(B))t=o[N[-836076+836081]]m=t and 496543+11452909 or 815931+1535249 B=W W=t end end end end else if m&lt;486310+15484830 then if m&lt;15779326-101978 then if m&lt;15842596-231049 then if m&lt;14939799-(-587752)then t=nil m=-738576+3997278 else g=639284+13656560801699 P=X(-328252-(-367992))O=o[N[-944629-(-944630)]]s=o[N[530086-530084]]u=s(P,g)T=O[u]b=B[T]O=o[N[-183907+183908]]s=o[N[-212734+212736]]g=-889881+29170529143080 P=X(-279931-(-319794))u=s(P,g)T=O[u]P=1381858832572-(-823751)I=b[T]T=o[N[-46478-(-46479)]]O=o[N[127741+-127739]]u=X(1039168+-999481)s=O(u,P)u=22786182518465-(-594609)b=T[s]W=I[b]s=X(820984+-781287)b=o[N[-442237+442238]]T=o[N[-960522+960524]]O=T(s,u)I=b[O]m=W[I]I=o[N[397382-397381]]b=o[N[355038+-355036]]s=21074999680230-571025 O=X(-43853-(-83478))T=b(O,s)W=I[T]b=o[N[501476-501475]]s=X(375969-336353)u=-943567+30605439769978 T=o[N[744382-744380]]O=T(s,u)I=b[O]m[W]=I m=675603+14970751 end else if m&lt;15359780-(-276915)then W={t}m=z[X(890587-850702)]else u=X(-802418+842262)s=19666085571290-804629 r=27915284099240-785889 I=o[N[759246-759245]]b=o[N[680905+-680903]]O=X(232795+-192920)T=b(O,s)W=I[T]m=B[W]T=o[N[-111163+111164]]O=o[N[-193774+193776]]P=11379371089512-756150 A=8328249150463-81113 g=X(980922+-941067)x=34916317459591-(-297724)s=O(u,P)b=T[s]Z=-424642+5591582704877 s=o[N[-865095-(-865096)]]u=o[N[151619+-151617]]P=u(g,x)O=s[P]T=B[O]u=o[N[429369+-429368]]x=X(914281-874388)P=o[N[-460188-(-460190)]]g=P(x,Z)s=u[g]P=o[N[812834-812833]]W=X(1015159+-975553)g=o[N[-9159-(-9161)]]Z=X(-425433+465331)x=g(Z,A)u=P[x]O=X(-395885+435722)O=T[O]O=O(T,s,u)A=X(-341467-(-381222))I=b..O g=o[N[-186370+186371]]x=o[N[759190+-759188]]Z=x(A,r)P=g[Z]u=B[P]g=o[N[-537526+537527]]r=6288079950793-(-948135)x=o[N[390101+-390099]]A=X(381756+-341918)Z=x(A,r)A=865077+28845125304643 P=g[Z]Z=X(697165+-657505)s=u[P]P=o[N[87452-87451]]g=o[N[158230-158228]]x=g(Z,A)u=P[x]O=s[u]x=X(-172849-(-212658))W=m[W]Z=-708859+9775659295427 u=o[N[-613156-(-613157)]]P=o[N[-395466-(-395468)]]g=P(x,Z)s=u[g]T=O[s]s=o[N[-121332-(-121333)]]x=-107389+23389264989704 g=X(625109+-585232)u=o[N[455507-455505]]P=u(g,x)O=s[P]b=T[O]O=X(-608202+647907)W=W(m,I,b)I=o[N[-67020+67021]]b=o[N[-1038125-(-1038127)]]s=-948090+28284245404396 T=b(O,s)W=I[T]m=t[W]m=m and-501753+13078610 or-715398+13535671 end end else if m&lt;14949552-(-778451)then if m&lt;16286551-571399 then q=o[t]m=q and 11725247-524296 or-680803+11370976 D=q else m=true m=m and-338732+16389286 or 1328966-(-437916)end else if m&lt;15552993-(-244689)then m=15302312-196934 else u=X(-760353+800131)A=29874+4236811899650 Z=X(315248-275560)t=m I=o[N[-1040148+1040153]]s=z[u]P=o[N[383863+-383861]]g=o[N[301683+-301680]]x=g(Z,A)u=P[x]x=X(241989+-202129)O=s[u]Z=145085265880-931733 u=o[N[594171+-594169]]P=o[N[-466377-(-466380)]]g=P(x,Z)s=u[g]b=X(459670+-419891)b=I[b]T=O[s]b=b(I,T)m=b and 5841068-896865 or 1075968-993558 W=b end end end else if m&lt;15444186-(-906433)then if m&lt;-996940+17034509 then if m&lt;16322412-315095 then W=464941-464916 m=t&gt;W m=m and 2430474-(-969149)or 909113+14610546 else m=F W=h m=-121827+9938622 end else if m&lt;369181+15708447 then R=-105371-(-105372)i=-813790+813796 m=o[s]q=m(R,i)m=X(358526-318828)z[m]=q i=X(-25408-(-65106))R=z[i]i=881128-881126 m=R&gt;i m=m and 15982373-700003 or 3405142-(-754793)else m=true m=m and 718862+10264338 or-892696+3604753 end end else if m&lt;-35365+16669020 then if m&lt;855332+15551994 then e=-748910-(-748911)Y=w()o[Y]=D l=-848305+848560 f=X(-317755-(-357390))W=z[f]E=-867927+867929 f=X(-561426-(-601054))L=338473+-338373 m=W[f]f=-950270+950271 W=m(f,L)S=X(429760+-389892)f=w()o[f]=W L=-306392+306392 m=o[s]a=-89237+89237 W=m(L,l)L=w()o[L]=W l=319077-319076 m=o[s]K=o[f]W=m(l,K)l=w()o[l]=W W=o[s]K=W(e,E)W=-683566-(-683567)m=K==W K=w()o[K]=m F=z[S]m=X(-733019-(-772856))W=X(415675+-375808)M=75840+-65840 E=X(-994666+1034459)v=o[s]n={v(a,M)}S=F(k(n))F=X(914965+-875172)m=r[m]h=S..F e=E..h m=m(r,W,e)e=w()o[e]=m h=H(6145848-679226,{s;Y;g,I;t;c;K,e,f;l,L;P})E=X(-934822-(-974478))W=z[E]E={W(h)}m={k(E)}E=m m=o[K]m=m and 3569174-454993 or 11335385-(-93050)else c=#A i=-193276-(-193276)m=-341743+2406744 r=c==i end else if m&lt;16340942-(-390375)then O=X(796263+-756573)s=938684+2848580809330 B=y[-793456+793457]I=o[N[1023561+-1023560]]b=o[N[-149708-(-149710)]]T=b(O,s)t=I[T]W=B[t]s=X(-326173-(-366106))b=o[N[420575+-420574]]u=-382854+3599836782098 T=o[N[-201011-(-201013)]]t=X(-951525+991147)O=T(s,u)t=W[t]I=b[O]t=t(W,I)m=not t m=m and 7111417-(-941559)or 8743442-(-538707)else A=X(-127829-(-167750))Z=z[A]A=X(-749727-(-789622))x=Z[A]P=x m=2796592-(-652685)end end end end end end end end m=#p return k(W)end,{},function(z,X)local k=I(X)local y=function(y,N,p,C)return m(z,{y,N;p,C},X,k)end return y end,function(z,X)local k=I(X)local y=function(...)return m(z,{...},X,k)end return y end return(T(9311188-984346,{}))(k(W))end)(getfenv and getfenv()or _ENV,unpack or table[X(128045-88150)],newproxy,setmetatable,getmetatable,select,{...})end)(...)</ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="Folder" referent="RBXF58853AA0C2C4856B489FF189A832D85">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<string name="Name">Prefabs</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="Frame" referent="RBX9515C9361D804242A37D1E4AC6012A2E">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0.5</X>
						<Y>1</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>0.345098048</R>
						<G>0.427451015</G>
						<B>0.490196109</B>
					</Color3>
					<float name="BackgroundTransparency">0</float>
					<Color3 name="BorderColor3">
						<R>0</R>
						<G>0</G>
						<B>0</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="ClipsDescendants">false</bool>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Draggable">false</bool>
					<bool name="Interactable">true</bool>
					<int name="LayoutOrder">0</int>
					<string name="Name">UserBubble</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0.5</XS>
						<XO>0</XO>
						<YS>0.0624782071</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<int name="SelectionOrder">0</int>
					<UDim2 name="Size">
						<XS>0.850000024</XS>
						<XO>0</XO>
						<YS>0.0624782741</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="UICorner" referent="RBX5D8DCB96BE114F2AAB3492A9816028C9">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<UDim name="CornerRadius">
							<S>0</S>
							<O>8</O>
						</UDim>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">UICorner</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="TextLabel" referent="RBX6B39A20AB7B04CDDB1F04CF8D944C6BA">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0.5</X>
							<Y>0.5</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
						</Font>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<string name="LocalizationMatchIdentifier"></string>
						<string name="LocalizationMatchedSourceText"></string>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">ContentLabel</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<string name="OpenTypeFeatures"></string>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>0</XO>
							<YS>0.5</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0.899999976</XS>
							<XO>0</XO>
							<YS>0.75</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">User Content</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<token name="TextDirection">0</token>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">true</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Frame" referent="RBXCD5E2BBE588C4F668303A88C18B2C0A6">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0.5</X>
						<Y>1</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>0.345098048</R>
						<G>0.427451015</G>
						<B>0.490196109</B>
					</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">
						<R>0</R>
						<G>0</G>
						<B>0</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="ClipsDescendants">false</bool>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Draggable">false</bool>
					<bool name="Interactable">true</bool>
					<int name="LayoutOrder">0</int>
					<string name="Name">ModelBubble</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0.5</XS>
						<XO>0</XO>
						<YS>0.0624782071</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<int name="SelectionOrder">0</int>
					<UDim2 name="Size">
						<XS>0.850000024</XS>
						<XO>0</XO>
						<YS>0.25</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="TextLabel" referent="RBX340526FC43874C1396FEE9D872A1C492">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0.5</X>
							<Y>0.5</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
						</Font>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<string name="LocalizationMatchIdentifier"></string>
						<string name="LocalizationMatchedSourceText"></string>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">ContentLabel</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<string name="OpenTypeFeatures"></string>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>0</XO>
							<YS>0.5</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0.899999976</XS>
							<XO>0</XO>
							<YS>0.949999988</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">Model Response</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<token name="TextDirection">0</token>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">true</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX244066141A314775B415DA7941BFAD81">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0.5</X>
						<Y>1</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>0.345098048</R>
						<G>0.427451015</G>
						<B>0.490196109</B>
					</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">
						<R>0</R>
						<G>0</G>
						<B>0</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="ClipsDescendants">false</bool>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Draggable">false</bool>
					<bool name="Interactable">true</bool>
					<int name="LayoutOrder">0</int>
					<string name="Name">ModelThinkingFrame</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0.5</XS>
						<XO>0</XO>
						<YS>0.221606731</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<int name="SelectionOrder">0</int>
					<UDim2 name="Size">
						<XS>0.850000083</XS>
						<XO>0</XO>
						<YS>0.141555712</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBX3787CF31528A4231A337069A961566F1">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.156862751</R>
							<G>0.156862751</G>
							<B>0.156862751</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">Bubble</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0.649999976</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="UICorner" referent="RBX5C92696DD6864C10972418B9283CC581">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<UDim name="CornerRadius">
								<S>0</S>
								<O>8</O>
							</UDim>
							<bool name="DefinesCapabilities">false</bool>
							<string name="Name">UICorner</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX336DC8666B3B48E39899342F570DBFCC">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>0.5</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">TaskNameLabel</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.635996699</XS>
								<XO>0</XO>
								<YS>0.244562343</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.639432073</XS>
								<XO>0</XO>
								<YS>0.239124462</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">Model is thinking for</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0.25</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBXCFE8263CE5294E1FB3D28DA9A53A5820">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>0.5</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">TimeLabel</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.635996699</XS>
								<XO>0</XO>
								<YS>0.619992435</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.639432073</XS>
								<XO>0</XO>
								<YS>0.51173532</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">3 seconds</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0.25</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="ImageLabel" referent="RBX4BAC568284D34BC5BC001D64313E2B44">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0.5</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>rbxassetid://126455106069276</url></Content>
							<Color3 name="ImageColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0.25</float>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">ImageLabel</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>1.83940596e-08</XS>
								<XO>0</XO>
								<YS>0.5</YS>
								<YO>0</YO>
							</UDim2>
							<token name="ResampleMode">0</token>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<token name="ScaleType">3</token>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.316280693</XS>
								<XO>0</XO>
								<YS>0.5</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<Rect2D name="SliceCenter">
								<min>
									<X>0</X>
									<Y>0</Y>
								</min>
								<max>
									<X>0</X>
									<Y>0</Y>
								</max>
							</Rect2D>
							<float name="SliceScale">1</float>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UDim2 name="TileSize">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX3BC929CEF4EB4A9DA1A0523A78C3D1ED">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0.5</X>
						<Y>1</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>0.345098048</R>
						<G>0.427451015</G>
						<B>0.490196109</B>
					</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">
						<R>0</R>
						<G>0</G>
						<B>0</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="ClipsDescendants">false</bool>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Draggable">false</bool>
					<bool name="Interactable">true</bool>
					<int name="LayoutOrder">0</int>
					<string name="Name">ModelEditedFrame</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0.5</XS>
						<XO>0</XO>
						<YS>0.221606731</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<int name="SelectionOrder">0</int>
					<UDim2 name="Size">
						<XS>0.850000083</XS>
						<XO>0</XO>
						<YS>0.141555712</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBX3F4734BCAA82480FABEE0C494BE0CE19">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.156862751</R>
							<G>0.156862751</G>
							<B>0.156862751</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">Bubble</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0.649999976</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="UICorner" referent="RBX61545E1446504FCEB2A8D7F5021D39A1">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<UDim name="CornerRadius">
								<S>0</S>
								<O>8</O>
							</UDim>
							<bool name="DefinesCapabilities">false</bool>
							<string name="Name">UICorner</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX9736AC94B5D54F3D8588E8C31871369D">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>0.5</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">TaskNameLabel</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.635996699</XS>
								<XO>0</XO>
								<YS>0.244562343</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.639432073</XS>
								<XO>0</XO>
								<YS>0.239124462</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">Model edited your scripts.</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0.25</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="ImageLabel" referent="RBX791E9D9640254209B66C05B92E3A7802">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0.5</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>rbxassetid://80289912970625</url></Content>
							<Color3 name="ImageColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0.25</float>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">ImageLabel</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>1.83940596e-08</XS>
								<XO>0</XO>
								<YS>0.5</YS>
								<YO>0</YO>
							</UDim2>
							<token name="ResampleMode">0</token>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<token name="ScaleType">3</token>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.316280693</XS>
								<XO>0</XO>
								<YS>0.5</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<Rect2D name="SliceCenter">
								<min>
									<X>0</X>
									<Y>0</Y>
								</min>
								<max>
									<X>0</X>
									<Y>0</Y>
								</max>
							</Rect2D>
							<float name="SliceScale">1</float>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UDim2 name="TileSize">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX5BAF35AB1B654A7B9D00AA170122E840">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoButtonColor">true</bool>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.435294151</R>
								<G>0.239215702</G>
								<B>0.239215702</B>
							</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<Ref name="HoverHapticEffect">null</Ref>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<bool name="Modal">false</bool>
							<string name="Name">RevertButton</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.316280752</XS>
								<XO>0</XO>
								<YS>0.465525955</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="PressHapticEffect">null</Ref>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<bool name="Selected">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.649999976</XS>
								<XO>0</XO>
								<YS>0.349999994</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">Revert Changes</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="UICorner" referent="RBXBD256872AA7B4D32A98E65402EC81C7C">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<UDim name="CornerRadius">
									<S>0</S>
									<O>8</O>
								</UDim>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">UICorner</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="TextButton" referent="RBXD9C3F1D950AF4C89B90F1FAA0761CBF8">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoButtonColor">true</bool>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.321568638</R>
								<G>0.435294151</G>
								<B>0.235294133</B>
							</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<Ref name="HoverHapticEffect">null</Ref>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<bool name="Modal">false</bool>
							<string name="Name">AcceptButton</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.316280752</XS>
								<XO>0</XO>
								<YS>0.465525955</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="PressHapticEffect">null</Ref>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<bool name="Selected">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.649999976</XS>
								<XO>0</XO>
								<YS>0.349999994</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">Accept AI Changes</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">false</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="UICorner" referent="RBXECD486F203B84146BF5A99FD9263C273">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<UDim name="CornerRadius">
									<S>0</S>
									<O>8</O>
								</UDim>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">UICorner</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
				</Item>
			</Item>
			<Item class="ScreenGui" referent="RBX7DA48DD7FB5947329B419EE3D239614F">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="ClipToDeviceSafeArea">true</bool>
					<bool name="DefinesCapabilities">false</bool>
					<int name="DisplayOrder">0</int>
					<bool name="Enabled">true</bool>
					<string name="Name">FeedbackGUI</string>
					<bool name="ResetOnSpawn">true</bool>
					<Ref name="RootLocalizationTable">null</Ref>
					<token name="SafeAreaCompatibility">1</token>
					<token name="ScreenInsets">2</token>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<token name="ZIndexBehavior">1</token>
				</Properties>
				<Item class="Frame" referent="RBX2110A7FEC7284C0197AAA39CDECC4693">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.117647059</R>
							<G>0.117647059</G>
							<B>0.117647059</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">App</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">true</bool>
						<int name="ZIndex">0</int>
					</Properties>
					<Item class="TextBox" referent="RBX58DC02B8D2BA4E839AE186DAB039E852">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClearTextOnFocus">false</bool>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<bool name="MultiLine">true</bool>
							<string name="Name">FeedbackInput</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<Color3 name="PlaceholderColor3">
								<R>0.529411793</R>
								<G>0.529411793</G>
								<B>0.529411793</B>
							</Color3>
							<string name="PlaceholderText">Tell me bout your Vibe Coder expirience!</string>
							<UDim2 name="Position">
								<XS>0.49955985</XS>
								<XO>0</XO>
								<YS>0.0386468396</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<bool name="ShowNativeInput">true</bool>
							<UDim2 name="Size">
								<XS>0.826584518</XS>
								<XO>0</XO>
								<YS>0.60202527</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text"></string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextEditable">true</bool>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">20</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0.150000006</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX0727F0892AF441CFB8AD2837B60BB6D2">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoButtonColor">true</bool>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.258823544</R>
								<G>0.258823544</G>
								<B>0.258823544</B>
							</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<Ref name="HoverHapticEffect">null</Ref>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<bool name="Modal">false</bool>
							<string name="Name">SendButton</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.0862676054</XS>
								<XO>0</XO>
								<YS>0.832203388</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="PressHapticEffect">null</Ref>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<bool name="Selected">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.826584518</XS>
								<XO>0</XO>
								<YS>0.141525418</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">Send</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="UICorner" referent="RBXB992DB8FDE4C4E65859E58365FE8E408">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<UDim name="CornerRadius">
									<S>0</S>
									<O>8</O>
								</UDim>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">UICorner</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="TextLabel" referent="RBX5FADA9FEDB454410A3F268B9CE7DE741">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">TextLabel</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.0860000029</XS>
								<XO>0</XO>
								<YS>0.677053869</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.824852169</XS>
								<XO>1</XO>
								<YS>0.117847033</YS>
								<YO>1</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">If you want me to contact you back, please leave your email in the feedback.</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">20</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0.25</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="ScreenGui" referent="RBX3CA5C84CC0F846C6A69D8FF6C8E23750">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="ClipToDeviceSafeArea">true</bool>
					<bool name="DefinesCapabilities">false</bool>
					<int name="DisplayOrder">0</int>
					<bool name="Enabled">true</bool>
					<string name="Name">WidgetGUI</string>
					<bool name="ResetOnSpawn">true</bool>
					<Ref name="RootLocalizationTable">null</Ref>
					<token name="SafeAreaCompatibility">1</token>
					<token name="ScreenInsets">2</token>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<token name="ZIndexBehavior">1</token>
				</Properties>
				<Item class="Frame" referent="RBXFF4E8357448B4E768AF7D1F0FA77DE14">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.117647059</R>
							<G>0.117647059</G>
							<B>0.117647059</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">NoSelectionFrame</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
						<int name="ZIndex">10</int>
					</Properties>
					<Item class="Frame" referent="RBXD74301F831B54CE88B8FD41BAFC1F982">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>0.5</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">Frame</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.5</XS>
								<XO>0</XO>
								<YS>0.5</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.5</XS>
								<XO>0</XO>
								<YS>0.150000006</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<bool name="Visible">true</bool>
							<int name="ZIndex">11</int>
						</Properties>
						<Item class="UIListLayout" referent="RBX07106009103E47648CDCF937766EAD7F">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<token name="FillDirection">1</token>
								<token name="HorizontalAlignment">1</token>
								<token name="HorizontalFlex">0</token>
								<token name="ItemLineAlignment">0</token>
								<string name="Name">UIListLayout</string>
								<UDim name="Padding">
									<S>0</S>
									<O>0</O>
								</UDim>
								<token name="SortOrder">2</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<token name="VerticalAlignment">1</token>
								<token name="VerticalFlex">0</token>
								<bool name="Wraps">false</bool>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX5FEB246D50794066809D4A865342A103">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>rbxassetid://79115352535620</url></Content>
								<Color3 name="ImageColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0.25</float>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<string name="Name">ImageLabel</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<token name="ResampleMode">0</token>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<token name="ScaleType">3</token>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0.569999993</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<Rect2D name="SliceCenter">
									<min>
										<X>0</X>
										<Y>0</Y>
									</min>
									<max>
										<X>0</X>
										<Y>0</Y>
									</max>
								</Rect2D>
								<float name="SliceScale">1</float>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UDim2 name="TileSize">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="Visible">true</bool>
								<int name="ZIndex">11</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX390402457C964639AC3941EC0EBA1738">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
									<Weight>400</Weight>
									<Style>Normal</Style>
								</Font>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<string name="LocalizationMatchIdentifier"></string>
								<string name="LocalizationMatchedSourceText"></string>
								<int name="MaxVisibleGraphemes">-1</int>
								<string name="Name">TextLabel</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<string name="OpenTypeFeatures"></string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0.5</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text">Select an script in Explorer first.</string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<token name="TextDirection">0</token>
								<bool name="TextScaled">true</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0.25</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">11</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBXADF1345007FB4A1E9C64CC91A98BA861">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.117647059</R>
							<G>0.117647059</G>
							<B>0.117647059</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">App</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">true</bool>
						<int name="ZIndex">0</int>
					</Properties>
					<Item class="Frame" referent="RBX1067FB85F5E84663915E7F542551D8EE">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>1</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.156862751</R>
								<G>0.156862751</G>
								<B>0.156862751</B>
							</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">BottomThread</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.5</XS>
								<XO>0</XO>
								<YS>0.98999995</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.949999988</XS>
								<XO>0</XO>
								<YS>0.167168677</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="UICorner" referent="RBXCA77401273194D65A098A0AE6FFBD16C">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<UDim name="CornerRadius">
									<S>0</S>
									<O>8</O>
								</UDim>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">UICorner</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX0FDF94E7E6E84E77BA1B5696A30483A2">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0.5</X>
									<Y>1</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>0.482352942</R>
									<G>0.541176498</G>
									<B>0.78039217</B>
								</Color3>
								<float name="BackgroundTransparency">0.899999976</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<string name="Name">SelectedScriptFrame</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.256017506</XS>
									<XO>0</XO>
									<YS>0.220721155</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.480832011</XS>
									<XO>0</XO>
									<YS>0.154647633</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="UICorner" referent="RBX5FC50DC7CDE9486D85FDFB1B8C8CE2DF">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<UDim name="CornerRadius">
										<S>0</S>
										<O>8</O>
									</UDim>
									<bool name="DefinesCapabilities">false</bool>
									<string name="Name">UICorner</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBXD4F40BEC8692421392CE34A97A0343DF">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0.5</X>
										<Y>0.5</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="Name">ScriptTitle</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<string name="OpenTypeFeatures"></string>
									<UDim2 name="Position">
										<XS>0.520498514</XS>
										<XO>0</XO>
										<YS>0.499998957</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="RichText">false</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.685664654</XS>
										<XO>0</XO>
										<YS>0.899999976</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<string name="Text">Script</string>
									<Color3 name="TextColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">18</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0.25</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="ImageLabel" referent="RBX1E36C2FFDEF24E84821370A4918FA9FF">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>rbxassetid://113661567766482</url></Content>
									<Color3 name="ImageColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0.25</float>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">ScriptIcon</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>3</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<token name="ResampleMode">0</token>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<token name="ScaleType">3</token>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.200000003</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<Rect2D name="SliceCenter">
										<min>
											<X>0</X>
											<Y>0</Y>
										</min>
										<max>
											<X>0</X>
											<Y>0</Y>
										</max>
									</Rect2D>
									<float name="SliceScale">1</float>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UDim2 name="TileSize">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
						<Item class="TextBox" referent="RBXD7DCC5336BC544B2B0CD36FC1402C48A">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0.5</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClearTextOnFocus">false</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
									<Weight>400</Weight>
									<Style>Normal</Style>
								</Font>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<string name="LocalizationMatchIdentifier"></string>
								<string name="LocalizationMatchedSourceText"></string>
								<int name="MaxVisibleGraphemes">-1</int>
								<bool name="MultiLine">true</bool>
								<string name="Name">ChatInputTextBox</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<string name="OpenTypeFeatures"></string>
								<Color3 name="PlaceholderColor3">
									<R>0.529411793</R>
									<G>0.529411793</G>
									<B>0.529411793</B>
								</Color3>
								<string name="PlaceholderText">Let Vibe Coder AI do your scripting! &#226;&#156;&#168;</string>
								<UDim2 name="Position">
									<XS>0.497061342</XS>
									<XO>0</XO>
									<YS>0.299999893</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<bool name="ShowNativeInput">true</bool>
								<UDim2 name="Size">
									<XS>0.944122851</XS>
									<XO>0</XO>
									<YS>0.41400972</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text"></string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<token name="TextDirection">0</token>
								<bool name="TextEditable">true</bool>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0.150000006</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="ImageButton" referent="RBXD42689ABB99B4D27A5D6336C37F826B7">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoButtonColor">true</bool>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Ref name="HoverHapticEffect">null</Ref>
								<Content name="HoverImage"><null></null></Content>
								<Content name="Image"><url>rbxassetid://123181546754641</url></Content>
								<Color3 name="ImageColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0.25</float>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<bool name="Modal">false</bool>
								<string name="Name">SendButton</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.892009795</XS>
									<XO>0</XO>
									<YS>0.733529866</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="PressHapticEffect">null</Ref>
								<Content name="PressedImage"><null></null></Content>
								<token name="ResampleMode">0</token>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<token name="ScaleType">3</token>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.0900033265</XS>
									<XO>0</XO>
									<YS>0.160360187</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<Rect2D name="SliceCenter">
									<min>
										<X>0</X>
										<Y>0</Y>
									</min>
									<max>
										<X>0</X>
										<Y>0</Y>
									</max>
								</Rect2D>
								<float name="SliceScale">1</float>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<UDim2 name="TileSize">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBXCCCCF787B7544CA8B2460FE2D68A4B71">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoButtonColor">true</bool>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>0.137254909</R>
									<G>0.137254909</G>
									<B>0.137254909</B>
								</Color3>
								<float name="BackgroundTransparency">0.899999976</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/SourceSansPro.json</url></Family>
									<Weight>400</Weight>
									<Style>Normal</Style>
									<CachedFaceId><url>rbxasset://fonts/SourceSansPro-Regular.ttf</url></CachedFaceId>
								</Font>
								<Ref name="HoverHapticEffect">null</Ref>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">1</int>
								<float name="LineHeight">1</float>
								<string name="LocalizationMatchIdentifier"></string>
								<string name="LocalizationMatchedSourceText"></string>
								<int name="MaxVisibleGraphemes">-1</int>
								<bool name="Modal">false</bool>
								<string name="Name">CurrentModelButton</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<string name="OpenTypeFeatures"></string>
								<UDim2 name="Position">
									<XS>0.0299999993</XS>
									<XO>0</XO>
									<YS>0.706502259</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="PressHapticEffect">null</Ref>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.271118104</XS>
									<XO>0</XO>
									<YS>0.216216221</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text"></string>
								<Color3 name="TextColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="TextDirection">0</token>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">1</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
							<Item class="UICorner" referent="RBX7DE05E5489F541D6B8A82D4C858F9209">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<UDim name="CornerRadius">
										<S>0</S>
										<O>8</O>
									</UDim>
									<bool name="DefinesCapabilities">false</bool>
									<string name="Name">UICorner</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
								</Properties>
							</Item>
							<Item class="ImageLabel" referent="RBXA7CFEA1BDC4D4035A1F024A0F45DAE07">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>rbxassetid://79274818810097</url></Content>
									<Color3 name="ImageColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0.25</float>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">DropdownIcon</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0.800000131</XS>
										<XO>0</XO>
										<YS>0.125</YS>
										<YO>0</YO>
									</UDim2>
									<token name="ResampleMode">0</token>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<token name="ScaleType">3</token>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.179667592</XS>
										<XO>0</XO>
										<YS>0.741667807</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<Rect2D name="SliceCenter">
										<min>
											<X>0</X>
											<Y>0</Y>
										</min>
										<max>
											<X>0</X>
											<Y>0</Y>
										</max>
									</Rect2D>
									<float name="SliceScale">1</float>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UDim2 name="TileSize">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX2D026D9C7FFF4117B1111C585FF7445B">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0.5</X>
										<Y>0.5</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="Name">ModelTitle</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<string name="OpenTypeFeatures"></string>
									<UDim2 name="Position">
										<XS>0.414509743</XS>
										<XO>0</XO>
										<YS>0.499999851</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="RichText">false</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.779018283</XS>
										<XO>0</XO>
										<YS>0.899999917</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<string name="Text">no model selected.</string>
									<Color3 name="TextColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">18</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0.25</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
						<Item class="TextBox" referent="RBXC7B6F0B65C42404BA0558E59009B03A7">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0.5</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClearTextOnFocus">false</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
									<Weight>400</Weight>
									<Style>Normal</Style>
								</Font>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<string name="LocalizationMatchIdentifier"></string>
								<string name="LocalizationMatchedSourceText"></string>
								<int name="MaxVisibleGraphemes">-1</int>
								<bool name="MultiLine">true</bool>
								<string name="Name">ApiKeyInput</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<string name="OpenTypeFeatures"></string>
								<Color3 name="PlaceholderColor3">
									<R>0.529411793</R>
									<G>0.529411793</G>
									<B>0.529411793</B>
								</Color3>
								<string name="PlaceholderText">API key</string>
								<UDim2 name="Position">
									<XS>0.678268731</XS>
									<XO>0</XO>
									<YS>0.733529329</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<bool name="ShowNativeInput">true</bool>
								<UDim2 name="Size">
									<XS>0.287856996</XS>
									<XO>0</XO>
									<YS>0.151351243</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text"></string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<token name="TextDirection">0</token>
								<bool name="TextEditable">true</bool>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0.150000006</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="ImageButton" referent="RBX3985237657B246D6A91A7F82F2E34DF4">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoButtonColor">true</bool>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Ref name="HoverHapticEffect">null</Ref>
								<Content name="HoverImage"><null></null></Content>
								<Content name="Image"><url>rbxassetid://73515595170574</url></Content>
								<Color3 name="ImageColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0.25</float>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<bool name="Modal">false</bool>
								<string name="Name">ShowApiKeyButton</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.819884002</XS>
									<XO>0</XO>
									<YS>0.733529747</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="PressHapticEffect">null</Ref>
								<Content name="PressedImage"><null></null></Content>
								<token name="ResampleMode">0</token>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<token name="ScaleType">3</token>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.0900033265</XS>
									<XO>0</XO>
									<YS>0.160360187</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<Rect2D name="SliceCenter">
									<min>
										<X>0</X>
										<Y>0</Y>
									</min>
									<max>
										<X>0</X>
										<Y>0</Y>
									</max>
								</Rect2D>
								<float name="SliceScale">1</float>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<UDim2 name="TileSize">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX73B2187BEEAD4645B7898BA7423AAE26">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0.5</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
									<Weight>400</Weight>
									<Style>Normal</Style>
								</Font>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<string name="LocalizationMatchIdentifier"></string>
								<string name="LocalizationMatchedSourceText"></string>
								<int name="MaxVisibleGraphemes">-1</int>
								<string name="Name">ApiKeyHiddenLabel</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<string name="OpenTypeFeatures"></string>
								<UDim2 name="Position">
									<XS>0.677999973</XS>
									<XO>0</XO>
									<YS>0.734000027</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.287999988</XS>
									<XO>0</XO>
									<YS>0.150999993</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text">API KEY HIDDEN</string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<token name="TextDirection">0</token>
								<bool name="TextScaled">true</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0.25</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">false</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="ImageButton" referent="RBX2AC3C7EE36FC446DBB484D34426575F3">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoButtonColor">true</bool>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Ref name="HoverHapticEffect">null</Ref>
								<Content name="HoverImage"><null></null></Content>
								<Content name="Image"><url>rbxassetid://130372484515289</url></Content>
								<Color3 name="ImageColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0.25</float>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<bool name="Modal">false</bool>
								<string name="Name">OpenMenuButton</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.928200066</XS>
									<XO>0</XO>
									<YS>0.0738055855</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="PressHapticEffect">null</Ref>
								<Content name="PressedImage"><null></null></Content>
								<token name="ResampleMode">0</token>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<token name="ScaleType">3</token>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.0531407259</XS>
									<XO>0</XO>
									<YS>0.146914348</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<Rect2D name="SliceCenter">
									<min>
										<X>0</X>
										<Y>0</Y>
									</min>
									<max>
										<X>0</X>
										<Y>0</Y>
									</max>
								</Rect2D>
								<float name="SliceScale">1</float>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<UDim2 name="TileSize">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBXFD78918F91D9458DB1F6BAC842FD6566">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>1</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.0980392173</R>
								<G>0.0980392173</G>
								<B>0.0980392173</B>
							</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">ModelSelectFrame</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.274051219</XS>
								<XO>0</XO>
								<YS>0.940936327</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.440239549</XS>
								<XO>0</XO>
								<YS>0.220514685</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<bool name="Visible">false</bool>
							<int name="ZIndex">2</int>
						</Properties>
						<Item class="UICorner" referent="RBXE7A0F807707F4C41B2A7C7235EF72E9F">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<UDim name="CornerRadius">
									<S>0</S>
									<O>8</O>
								</UDim>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">UICorner</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX9BAC59A405A544A8BAE381F576E6133A">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0.5</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
									<Weight>400</Weight>
									<Style>Normal</Style>
								</Font>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<string name="LocalizationMatchIdentifier"></string>
								<string name="LocalizationMatchedSourceText"></string>
								<int name="MaxVisibleGraphemes">-1</int>
								<string name="Name">Header</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<string name="OpenTypeFeatures"></string>
								<UDim2 name="Position">
									<XS>0.363621145</XS>
									<XO>0</XO>
									<YS>0.014999954</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.677242219</XS>
									<XO>0</XO>
									<YS>0.129761562</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text">Select AI Model</string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<token name="TextDirection">0</token>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0.75</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ScrollingFrame" referent="RBX4843F00AB61E4B0F9482913AF4DECF68">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0.5</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticCanvasSize">2</token>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<Content name="BottomImage"><url>rbxasset://textures/ui/Scroll/scroll-bottom.png</url></Content>
								<Vector2 name="CanvasPosition">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<UDim2 name="CanvasSize">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>200</YO>
								</UDim2>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">true</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<token name="ElasticBehavior">0</token>
								<token name="HorizontalScrollBarInset">0</token>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<Content name="MidImage"><url>rbxasset://textures/ui/Scroll/scroll-middle.png</url></Content>
								<string name="Name">ModelsList</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.5</XS>
									<XO>0</XO>
									<YS>0.185738772</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<Color3 name="ScrollBarImageColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="ScrollBarImageTransparency">0</float>
								<int name="ScrollBarThickness">12</int>
								<token name="ScrollingDirection">2</token>
								<bool name="ScrollingEnabled">true</bool>
								<bool name="Selectable">true</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">true</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.949999928</XS>
									<XO>0</XO>
									<YS>0.814261019</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<Content name="TopImage"><url>rbxasset://textures/ui/Scroll/scroll-top.png</url></Content>
								<token name="VerticalScrollBarInset">0</token>
								<token name="VerticalScrollBarPosition">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
							<Item class="UIListLayout" referent="RBXB1B6E6AE2AC942D0B9C43342E6B8EAA7">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<token name="FillDirection">1</token>
									<token name="HorizontalAlignment">0</token>
									<token name="HorizontalFlex">1</token>
									<token name="ItemLineAlignment">0</token>
									<string name="Name">UIListLayout</string>
									<UDim name="Padding">
										<S>0</S>
										<O>8</O>
									</UDim>
									<token name="SortOrder">2</token>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<token name="VerticalAlignment">1</token>
									<token name="VerticalFlex">0</token>
									<bool name="Wraps">false</bool>
								</Properties>
							</Item>
							<Item class="TextButton" referent="RBXF0B00355B3244B92B111BD948502B330">
								<Properties>
									<bool name="Active">true</bool>
									<Vector2 name="AnchorPoint">
										<X>0.5</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoButtonColor">true</bool>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>0.0980392173</R>
										<G>0.0980392173</G>
										<B>0.0980392173</B>
									</Color3>
									<float name="BackgroundTransparency">0.899999976</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<Ref name="HoverHapticEffect">null</Ref>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<bool name="Modal">false</bool>
									<string name="Name">ModelSelectButton</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<string name="OpenTypeFeatures"></string>
									<UDim2 name="Position">
										<XS>0.0243607201</XS>
										<XO>0</XO>
										<YS>0.0309071168</YS>
										<YO>0</YO>
									</UDim2>
									<Ref name="PressHapticEffect">null</Ref>
									<bool name="RichText">false</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">true</bool>
									<bool name="Selected">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.75</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<token name="Style">0</token>
									<BinaryString name="Tags"></BinaryString>
									<string name="Text">ModelName</string>
									<Color3 name="TextColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0.25</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">false</bool>
									<int name="ZIndex">2</int>
								</Properties>
								<Item class="UICorner" referent="RBX88B311C630B24B4E97AEC8A5C2D242FB">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<UDim name="CornerRadius">
											<S>0</S>
											<O>8</O>
										</UDim>
										<bool name="DefinesCapabilities">false</bool>
										<string name="Name">UICorner</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX82798B39258A40CF984476E45307B3A5">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0.5</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>0.678431392</R>
									<G>0.494117647</G>
									<B>0.956862748</B>
								</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<string name="Name">ProLabel</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.842000008</XS>
									<XO>0</XO>
									<YS>0.0149999997</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.211999997</XS>
									<XO>0</XO>
									<YS>0.129999995</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
							<Item class="TextLabel" referent="RBX5ED8F6999E7A4F2D84EF22DBD654A854">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0.5</X>
										<Y>0.5</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>0.678431392</R>
										<G>0.494117647</G>
										<B>0.956862748</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="Name">Text</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<string name="OpenTypeFeatures"></string>
									<UDim2 name="Position">
										<XS>0.5</XS>
										<XO>0</XO>
										<YS>0.5</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="RichText">false</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0.75</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<string name="Text">PRO</string>
									<Color3 name="TextColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
							</Item>
							<Item class="UICorner" referent="RBXED3E486F25D240BB80CEB5F2AB44A99F">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<UDim name="CornerRadius">
										<S>0</S>
										<O>8</O>
									</UDim>
									<bool name="DefinesCapabilities">false</bool>
									<string name="Name">UICorner</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="ScrollingFrame" referent="RBX9B3CE0E4124143D7BCEA10D5715A495B">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticCanvasSize">2</token>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<Content name="BottomImage"><url>rbxasset://textures/ui/Scroll/scroll-bottom.png</url></Content>
							<Vector2 name="CanvasPosition">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<UDim2 name="CanvasSize">
								<XS>0</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">true</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<token name="ElasticBehavior">0</token>
							<token name="HorizontalScrollBarInset">0</token>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<Content name="MidImage"><url>rbxasset://textures/ui/Scroll/scroll-middle.png</url></Content>
							<string name="Name">ChatHistory</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.5</XS>
								<XO>0</XO>
								<YS>0.0546247326</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<Color3 name="ScrollBarImageColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="ScrollBarImageTransparency">1</float>
							<int name="ScrollBarThickness">12</int>
							<token name="ScrollingDirection">2</token>
							<bool name="ScrollingEnabled">true</bool>
							<bool name="Selectable">true</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">true</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.949999928</XS>
								<XO>0</XO>
								<YS>0.756085217</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Content name="TopImage"><url>rbxasset://textures/ui/Scroll/scroll-top.png</url></Content>
							<token name="VerticalScrollBarInset">0</token>
							<token name="VerticalScrollBarPosition">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="UIListLayout" referent="RBXDB0A54A78E8D4543B32A84F719DFEC1A">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<token name="FillDirection">1</token>
								<token name="HorizontalAlignment">0</token>
								<token name="HorizontalFlex">0</token>
								<token name="ItemLineAlignment">0</token>
								<string name="Name">UIListLayout</string>
								<UDim name="Padding">
									<S>0</S>
									<O>8</O>
								</UDim>
								<token name="SortOrder">2</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<token name="VerticalAlignment">1</token>
								<token name="VerticalFlex">0</token>
								<bool name="Wraps">false</bool>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX6B3F72257AB543A7B0FFC99BDE14A95D">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>1</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.0980392173</R>
								<G>0.0980392173</G>
								<B>0.0980392173</B>
							</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">MenuFrame</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.753058791</XS>
								<XO>0</XO>
								<YS>0.81245333</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.440239578</XS>
								<XO>0</XO>
								<YS>0.155998558</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<bool name="Visible">false</bool>
							<int name="ZIndex">2</int>
						</Properties>
						<Item class="UICorner" referent="RBX8F31A441AA6D44B3868D638EBACD06D9">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<UDim name="CornerRadius">
									<S>0</S>
									<O>8</O>
								</UDim>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">UICorner</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="UIListLayout" referent="RBXE81EAA4AEC0645EAA03352CD68C650BE">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<token name="FillDirection">1</token>
								<token name="HorizontalAlignment">0</token>
								<token name="HorizontalFlex">0</token>
								<token name="ItemLineAlignment">0</token>
								<string name="Name">UIListLayout</string>
								<UDim name="Padding">
									<S>0</S>
									<O>0</O>
								</UDim>
								<token name="SortOrder">2</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<token name="VerticalAlignment">1</token>
								<token name="VerticalFlex">0</token>
								<bool name="Wraps">false</bool>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBXC073AAED2EB541FF935CC14AC18E37F6">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoButtonColor">true</bool>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
									<Weight>400</Weight>
									<Style>Normal</Style>
								</Font>
								<Ref name="HoverHapticEffect">null</Ref>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<string name="LocalizationMatchIdentifier"></string>
								<string name="LocalizationMatchedSourceText"></string>
								<int name="MaxVisibleGraphemes">-1</int>
								<bool name="Modal">false</bool>
								<string name="Name">ClearButton</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<string name="OpenTypeFeatures"></string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="PressHapticEffect">null</Ref>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.899999976</XS>
									<XO>0</XO>
									<YS>0.330000013</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text"></string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<token name="TextDirection">0</token>
								<bool name="TextScaled">true</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">3</int>
							</Properties>
							<Item class="TextLabel" referent="RBX18664F82A57943D082FAEB326C543D2B">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0.5</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="Name">TextLabel</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<string name="OpenTypeFeatures"></string>
									<UDim2 name="Position">
										<XS>0.184383377</XS>
										<XO>0</XO>
										<YS>0.499999672</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="RichText">false</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.815616727</XS>
										<XO>0</XO>
										<YS>0.75</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<string name="Text">Clear Conversation</string>
									<Color3 name="TextColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<token name="TextDirection">1</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0.25</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">3</int>
								</Properties>
							</Item>
							<Item class="ImageLabel" referent="RBXD63067E2492F4BAAA5AD84F50AA19211">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0.5</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>rbxassetid://72456202240333</url></Content>
									<Color3 name="ImageColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0.25</float>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">ImageLabel</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0.5</YS>
										<YO>0</YO>
									</UDim2>
									<token name="ResampleMode">0</token>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<token name="ScaleType">3</token>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.200000003</XS>
										<XO>0</XO>
										<YS>0.5</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<Rect2D name="SliceCenter">
										<min>
											<X>0</X>
											<Y>0</Y>
										</min>
										<max>
											<X>0</X>
											<Y>0</Y>
										</max>
									</Rect2D>
									<float name="SliceScale">1</float>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UDim2 name="TileSize">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="Visible">true</bool>
									<int name="ZIndex">3</int>
								</Properties>
							</Item>
						</Item>
						<Item class="TextButton" referent="RBX1516D9E91E204DBBA18765C52B452BB7">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoButtonColor">true</bool>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
									<Weight>400</Weight>
									<Style>Normal</Style>
								</Font>
								<Ref name="HoverHapticEffect">null</Ref>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<string name="LocalizationMatchIdentifier"></string>
								<string name="LocalizationMatchedSourceText"></string>
								<int name="MaxVisibleGraphemes">-1</int>
								<bool name="Modal">false</bool>
								<string name="Name">FeedbackButton</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<string name="OpenTypeFeatures"></string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="PressHapticEffect">null</Ref>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.899999976</XS>
									<XO>0</XO>
									<YS>0.330000013</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text"></string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<token name="TextDirection">0</token>
								<bool name="TextScaled">true</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">3</int>
							</Properties>
							<Item class="TextLabel" referent="RBX2503ED89ACCD4C1E86E27C1E463EC78C">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0.5</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="Name">TextLabel</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<string name="OpenTypeFeatures"></string>
									<UDim2 name="Position">
										<XS>0.184383377</XS>
										<XO>0</XO>
										<YS>0.499999672</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="RichText">false</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.815616727</XS>
										<XO>0</XO>
										<YS>0.75</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<string name="Text">Send Feedback</string>
									<Color3 name="TextColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<token name="TextDirection">1</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0.25</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">3</int>
								</Properties>
							</Item>
							<Item class="ImageLabel" referent="RBXE780D66C44F74528B3028146FAA82A05">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0.5</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>rbxassetid://90206302915644</url></Content>
									<Color3 name="ImageColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0.25</float>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">ImageLabel</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0.5</YS>
										<YO>0</YO>
									</UDim2>
									<token name="ResampleMode">0</token>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<token name="ScaleType">3</token>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.200000003</XS>
										<XO>0</XO>
										<YS>0.5</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<Rect2D name="SliceCenter">
										<min>
											<X>0</X>
											<Y>0</Y>
										</min>
										<max>
											<X>0</X>
											<Y>0</Y>
										</max>
									</Rect2D>
									<float name="SliceScale">1</float>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UDim2 name="TileSize">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="Visible">true</bool>
									<int name="ZIndex">3</int>
								</Properties>
							</Item>
						</Item>
						<Item class="TextButton" referent="RBX9116728AC3C347E88A31E30E1747C3E5">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoButtonColor">true</bool>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
									<Weight>400</Weight>
									<Style>Normal</Style>
								</Font>
								<Ref name="HoverHapticEffect">null</Ref>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<string name="LocalizationMatchIdentifier"></string>
								<string name="LocalizationMatchedSourceText"></string>
								<int name="MaxVisibleGraphemes">-1</int>
								<bool name="Modal">false</bool>
								<string name="Name">JoinSupportServerButton</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<string name="OpenTypeFeatures"></string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="PressHapticEffect">null</Ref>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.899999976</XS>
									<XO>0</XO>
									<YS>0.330000013</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text"></string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<token name="TextDirection">0</token>
								<bool name="TextScaled">true</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">3</int>
							</Properties>
							<Item class="TextLabel" referent="RBXDF6EC865A1C641FA9199C31A5AE459F4">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0.5</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="Name">TextLabel</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<string name="OpenTypeFeatures"></string>
									<UDim2 name="Position">
										<XS>0.184383377</XS>
										<XO>0</XO>
										<YS>0.499999672</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="RichText">false</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.815616727</XS>
										<XO>0</XO>
										<YS>0.75</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<string name="Text">Join Community Server</string>
									<Color3 name="TextColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<token name="TextDirection">1</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0.25</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">3</int>
								</Properties>
							</Item>
							<Item class="ImageLabel" referent="RBX8907FC40C9374D3ABAA7BB189A37E6E3">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0.5</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>rbxassetid://97572524929990</url></Content>
									<Color3 name="ImageColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0.25</float>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">ImageLabel</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0.5</YS>
										<YO>0</YO>
									</UDim2>
									<token name="ResampleMode">0</token>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<token name="ScaleType">3</token>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.200000003</XS>
										<XO>0</XO>
										<YS>0.5</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<Rect2D name="SliceCenter">
										<min>
											<X>0</X>
											<Y>0</Y>
										</min>
										<max>
											<X>0</X>
											<Y>0</Y>
										</max>
									</Rect2D>
									<float name="SliceScale">1</float>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UDim2 name="TileSize">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="Visible">true</bool>
									<int name="ZIndex">3</int>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX55514D01F4EB48ABBE54BE779116EFC8">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>1</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.403921574</R>
								<G>0.223529413</G>
								<B>0.223529413</B>
							</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">WarningFrame</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.5</XS>
								<XO>0</XO>
								<YS>0.80445838</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.949999988</XS>
								<XO>0</XO>
								<YS>0.0321747102</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<bool name="Visible">false</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="UICorner" referent="RBX542267213BEA4142883F2156B9DF0D91">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<UDim name="CornerRadius">
									<S>0</S>
									<O>8</O>
								</UDim>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">UICorner</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBXAFEC6D19EB49402495330F5C0C3297B3">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0.5</X>
									<Y>0.5</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>0.913725555</G>
									<B>0.913725555</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
									<Weight>400</Weight>
									<Style>Normal</Style>
								</Font>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<string name="LocalizationMatchIdentifier"></string>
								<string name="LocalizationMatchedSourceText"></string>
								<int name="MaxVisibleGraphemes">-1</int>
								<string name="Name">WarningContent</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<string name="OpenTypeFeatures"></string>
								<UDim2 name="Position">
									<XS>0.5</XS>
									<XO>0</XO>
									<YS>0.5</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.75</XS>
									<XO>0</XO>
									<YS>0.800000012</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text">Warning</string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>0.956862807</G>
									<B>0.956862807</B>
								</Color3>
								<token name="TextDirection">0</token>
								<bool name="TextScaled">true</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX4C888C22618C493D9F1A9BF62D238A56">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0.5</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>rbxassetid://106040231377035</url></Content>
								<Color3 name="ImageColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<string name="Name">ImageLabel</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0.5</YS>
									<YO>0</YO>
								</UDim2>
								<token name="ResampleMode">0</token>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<token name="ScaleType">3</token>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.100000001</XS>
									<XO>0</XO>
									<YS>0.75</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<Rect2D name="SliceCenter">
									<min>
										<X>0</X>
										<Y>0</Y>
									</min>
									<max>
										<X>0</X>
										<Y>0</Y>
									</max>
								</Rect2D>
								<float name="SliceScale">1</float>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UDim2 name="TileSize">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="TextLabel" referent="RBX0C68D5121BA341FEBF824465904489AA">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0.5</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
						</Font>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<string name="LocalizationMatchIdentifier"></string>
						<string name="LocalizationMatchedSourceText"></string>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">BetaInfo</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<string name="OpenTypeFeatures"></string>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>0</XO>
							<YS>0.00903614424</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0.899999976</XS>
							<XO>0</XO>
							<YS>0.0355421677</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">Thank you for BETA testing Vibe Coder. Please report any issues/feedback to keewinek@gmail.com.</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<token name="TextDirection">0</token>
						<bool name="TextScaled">true</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0.5</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">true</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
				<Item class="Frame" referent="RBX6F53559B88544E1E96ABAD9476510B46">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.117647059</R>
							<G>0.117647059</G>
							<B>0.117647059</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">BuyProFrame</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
						<int name="ZIndex">8</int>
					</Properties>
					<Item class="ImageLabel" referent="RBXE69158DCE2AB47D883BA62ED7C4DF1E5">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>rbxassetid://115853486982676</url></Content>
							<Color3 name="ImageColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">ImageLabel</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.222636372</XS>
								<XO>0</XO>
								<YS>0.0271084346</YS>
								<YO>0</YO>
							</UDim2>
							<token name="ResampleMode">0</token>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<token name="ScaleType">3</token>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.596456707</XS>
								<XO>0</XO>
								<YS>0.191987902</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<Rect2D name="SliceCenter">
								<min>
									<X>0</X>
									<Y>0</Y>
								</min>
								<max>
									<X>0</X>
									<Y>0</Y>
								</max>
							</Rect2D>
							<float name="SliceScale">1</float>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UDim2 name="TileSize">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="Visible">true</bool>
							<int name="ZIndex">8</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX1872964E663A47B38D9F80441D8751A8">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">Header</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.0811600089</XS>
								<XO>0</XO>
								<YS>0.218373492</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.834194362</XS>
								<XO>0</XO>
								<YS>0.176204816</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">You have discovered an Vibe Coder PRO feature.</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">8</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBXF230432E43D1460B9DC81BABC9D8DC25">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">Paragraph</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.0850794911</XS>
								<XO>0</XO>
								<YS>0.409638554</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.868840098</XS>
								<XO>0</XO>
								<YS>0.213855416</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text"><![CDATA[With Vibe Coder PRO you can:

• Send unlimited messages.
• Use all available language models such as GPT-4o and Claude 4 Sonnet.
• Use 100% of AI's thinking power.]]></string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0.25</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">8</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX1FC5930129154FACBB6C501B0F961C4D">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">Paragraph</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.0868525654</XS>
								<XO>0</XO>
								<YS>0.701807201</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.868840098</XS>
								<XO>0</XO>
								<YS>0.0542168692</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">In order to unlock Vibe Coder PRO, buy gamepass that is available at the following link:</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0.25</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">8</int>
						</Properties>
					</Item>
					<Item class="TextBox" referent="RBX302EB3AA49D04345B5B2083D25696A0B">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.156862751</R>
								<G>0.156862751</G>
								<B>0.156862751</B>
							</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClearTextOnFocus">false</bool>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<bool name="MultiLine">false</bool>
							<string name="Name">GamepassLinkInput</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<Color3 name="PlaceholderColor3">
								<R>0.699999988</R>
								<G>0.699999988</G>
								<B>0.699999988</B>
							</Color3>
							<string name="PlaceholderText">NO LINK</string>
							<UDim2 name="Position">
								<XS>0.0811600238</XS>
								<XO>0</XO>
								<YS>0.766566277</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<bool name="ShowNativeInput">true</bool>
							<UDim2 name="Size">
								<XS>0.834194362</XS>
								<XO>0</XO>
								<YS>0.0798192769</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">https://www.roblox.com/game-pass/1298233970</string>
							<Color3 name="TextColor3">
								<R>0.678431392</R>
								<G>0.494117677</G>
								<B>0.956862807</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextEditable">false</bool>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">8</int>
						</Properties>
						<Item class="UICorner" referent="RBX1A59CEF997B642FA84A86D3DCAAC2048">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<UDim name="CornerRadius">
									<S>0</S>
									<O>8</O>
								</UDim>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">UICorner</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="TextLabel" referent="RBX4D752E9BAEB042AA89447A6567BADC8F">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">Paragraph</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.0868525133</XS>
								<XO>0</XO>
								<YS>0.858433723</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.828041196</XS>
								<XO>0</XO>
								<YS>0.0180722885</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">Copy this link and paste it in your browser.</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0.75</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">8</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX735A1033B4DF464388CCE990EDC9DF40">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">Paragraph</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.0868524835</XS>
								<XO>0</XO>
								<YS>0.885542154</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.82850194</XS>
								<XO>0</XO>
								<YS>0.0223202705</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">IMPORTANT: Restart Roblox Studio after purchase.</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>0.674509823</G>
								<B>0.674509823</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>1</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0.25</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">8</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX62BD652B93E64B539041806C85924E3E">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoButtonColor">true</bool>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<Ref name="HoverHapticEffect">null</Ref>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<bool name="Modal">false</bool>
							<string name="Name">CloseButton</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.549645364</XS>
								<XO>0</XO>
								<YS>0.959337354</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="PressHapticEffect">null</Ref>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<bool name="Selected">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.365248233</XS>
								<XO>0</XO>
								<YS>0.0256024096</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">I am not interested.</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0.75</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">1</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">8</int>
						</Properties>
					</Item>
				</Item>
			</Item>
		</Item>
		<Item class="ModuleScript" referent="RBX4DD2AE6E474C48F999F6A0070ECB96E7">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">WidgetModelSelectFrameOpener</string>
				<string name="ScriptGuid">{1FEC9F03-DA94-4FF5-8D98-3A0A0526CC9D}</string>
				<ProtectedString name="Source">--[[ v1.0.0 https://wearedevs.net/obfuscator ]] return(function(...)local n={&quot;\056\084\067\108\117\098\098\056\069\111\089\049\114\122\089\061&quot;;&quot;\109\053\077\067\120\100\105\098&quot;;&quot;\071\121\113\068&quot;;&quot;\107\043\048\048\089\083\061\061&quot;,&quot;\109\057\087\120\107\057\071\121&quot;;&quot;\107\081\072\101\073\108\061\061&quot;,&quot;\067\057\068\111\056\112\076\070\097\103\067\083\084\048\079\068&quot;,&quot;\051\065\106\065\068\102\100\056\050\065\122\087&quot;;&quot;\122\103\051\109&quot;;&quot;\051\086\110\110\065\073\057\114\043\117\074\079\067\087\083\080\100\120\061\061&quot;;&quot;\089\113\117\102\047\057\087\081&quot;,&quot;\067\115\048\075\071\074\090\117\109\097\049\073\047\110\089\085&quot;;&quot;\090\112\048\107\107\057\073\073\122\057\090\101\089\112\117\113\090\106\112\061&quot;;&quot;\099\084\081\070\050\115\077\053\070\081\087\098\107\108\061\061&quot;,&quot;\071\052\055\057\114\072\100\073\043\115\118\102\055\090\085\076\088\112\107\057\077\083\050\079\113\116\120\090\100\117\118\061&quot;,&quot;\110\057\121\101\072\107\054\057&quot;,&quot;\065\043\054\083\099\050\048\053\079\090\107\090\055\078\084\051&quot;,&quot;\099\049\069\066\078\068\070\053\048\087\098\078\047\081\081\113\115\051\054\048\052\115\052\122\078\105\055\061&quot;;&quot;\050\105\071\049\116\075\055\071\085\113\074\051\055\102\049\049&quot;;&quot;\069\052\090\076\053\102\122\084\070\067\054\077&quot;;&quot;\113\104\049\099&quot;;&quot;\076\085\052\082\097\113\113\075&quot;,&quot;\115\080\050\081&quot;;&quot;\086\076\051\119\067\080\117\072\088\079\061\061&quot;;&quot;\117\043\090\101\108\043\048\119\067\105\117\102\073\057\098\061&quot;,&quot;\118\048\109\098\068\078\067\122&quot;;&quot;\088\065\111\086\107\077\078\065\115\108\061\061&quot;;&quot;\110\121\088\112\115\085\112\101\071\083\061\061&quot;,&quot;\102\055\049\117\066\102\073\086\112\049\073\065\110\103\109\106\057\108\061\061&quot;,&quot;\057\068\090\048\088\112\098\076\089\115\072\120\071\057\048\111\090\079\061\061&quot;;&quot;\104\106\112\066\047\109\053\065\079\069\043\118\105\110\074\110\116\085\090\083\069\056\117\054\114\076\066\073\070\116\079\061&quot;;&quot;\089\080\115\084\073\105\051\069&quot;,&quot;\047\086\104\048\047\086\049\116&quot;;&quot;\109\043\054\119\081\079\061\061&quot;;&quot;\105\072\070\110\111\121\117\114\065\066\122\079&quot;,&quot;\057\076\088\112\048\108\076\065&quot;,&quot;\113\111\097\079\105\114\120\048\065\075\070\107\109\047\052\054\109\079\071\071\082\101\066\061&quot;,&quot;\055\098\112\113\101\043\099\082\115\085\055\079&quot;,&quot;\080\120\088\087\087\081\108\121\055\120\061\061&quot;,&quot;\117\043\090\101\110\043\090\102\109\080\072\068\073\108\061\061&quot;;&quot;\090\099\115\053\106\053\107\106\074\052\109\102\052\056\081\050\056\106\065\104\085\102\099\108\085\077\077\066&quot;,&quot;\113\121\073\097\114\068\099\083&quot;;&quot;\048\068\075\067\083\068\115\106\087\115\049\076&quot;;&quot;\057\069\066\090\065\106\075\114&quot;;&quot;\086\106\108\116&quot;,&quot;\057\083\113\101\112\120\086\121\111\117\115\075\117\117\120\073\055\108\061\061&quot;;&quot;\051\106\052\100\103\102\099\048&quot;,&quot;\082\077\109\055&quot;,&quot;\072\110\067\118\085\121\054\082\075\049\083\106&quot;;&quot;\090\079\114\070\114\090\076\055\116\098\070\104\057\120\066\120\074\113\099\087\109\079\061\061&quot;;&quot;\073\086\049\102\067\113\078\061&quot;,&quot;\117\057\087\076\067\108\061\061&quot;;&quot;\071\089\086\066&quot;,&quot;\071\068\117\078\110\081\117\077\047\115\110\102\088\086\071\053\067\120\061\061&quot;;&quot;\065\102\108\097\085\097\112\079\071\081\048\121\049\054\085\080\055\051\099\099\075\049\043\115&quot;;&quot;\097\101\080\070\053\083\061\061&quot;;&quot;\110\105\071\098\053\113\104\118\073\110\048\084\071\116\090\078&quot;;&quot;\111\071\116\088\102\118\103\055\098\066\068\069\105\102\068\098\048\072\083\113\077\120\061\061&quot;,&quot;\051\076\118\116\076\120\068\118&quot;;&quot;\090\082\111\088\115\069\079\076\119\087\078\116\117\056\106\114\108\084\081\111\109\074\112\061&quot;;&quot;\047\090\119\073\088\090\049\074\047\113\119\101\057\105\115\069\088\080\055\061&quot;,&quot;\112\073\103\110&quot;;&quot;\090\112\076\047\090\101\071\080\073\105\051\087\047\070\049\056\117\070\107\043&quot;,&quot;\117\101\117\101\089\080\049\122\114\043\071\122\071\080\085\116\110\079\061\061&quot;;&quot;\079\117\090\077\068\079\061\061&quot;;&quot;\115\106\072\085\111\110\085\048\112\053\110\054\043\102\097\117\050\071\109\099\050\075\097\061&quot;,&quot;\121\102\071\087\087\103\105\112\109\085\081\079\112\078\083\111\119\119\075\088\120\115\110\061&quot;,&quot;\100\081\086\111&quot;;&quot;\080\086\120\080&quot;;&quot;\107\076\048\076\053\068\090\117\073\116\049\103\106\101\071\056&quot;;&quot;\109\090\043\097\088\105\099\065&quot;,&quot;\073\043\115\069\073\108\061\061&quot;;&quot;\056\114\078\078\115\098\104\083\048\083\061\061&quot;,&quot;\049\077\117\053\079\048\103\057\069\087\084\074\074\105\053\061&quot;,&quot;\075\057\077\054&quot;;&quot;\109\105\051\116\109\074\049\119\067\080\089\061&quot;,&quot;\052\055\122\071\073\072\121\052\043\089\052\052\098\114\112\065\101\050\075\056\069\079\119\043\108\114\099\068\048\072\118\098\097\070\109\086\065\077\108\061&quot;,&quot;\084\112\051\074\051\056\081\057\073\071\087\068&quot;,&quot;&quot;,&quot;\122\090\119\077\089\101\076\069\110\068\049\098\106\116\112\116\067\083\061\061&quot;;&quot;\077\052\048\052\116\074\065\107&quot;,&quot;\107\110\109\081\088\068\117\107\107\106\079\043\053\043\072\048&quot;,&quot;\083\057\117\068\114\047\081\109\121\109\097\049\055\065\078\057\082\051\069\067\101\121\080\122\122\120\069\080&quot;;&quot;\089\043\090\101\067\057\090\101\107\086\117\048\107\080\085\072&quot;,&quot;\105\089\066\112\099\083\061\061&quot;,&quot;\089\115\065\085\048\083\061\061&quot;;&quot;\081\083\073\097\110\050\068\112\117\066\090\081\113\068\080\118&quot;;&quot;\067\105\090\084&quot;,&quot;\110\057\087\110\090\057\073\076\047\080\069\113\071\086\072\119&quot;;&quot;\071\106\115\114\108\057\072\072\071\080\051\111\067\074\071\074\108\043\072\117&quot;;&quot;\067\070\078\061&quot;,&quot;\086\076\051\081\107\120\061\061&quot;;&quot;\073\080\085\077\067\113\078\061&quot;;&quot;\089\043\090\101\109\086\104\100\067\057\090\084\109\090\051\080\089\080\115\069\073\108\061\061&quot;,&quot;\086\076\051\066\073\057\098\061&quot;;&quot;\072\078\116\073\116\047\086\108\055\077\117\099\076\048\122\105\068\116\068\084\065\108\061\061&quot;,&quot;\081\056\050\056\084\087\103\043\102\100\113\120\090\121\051\049\065\102\108\085\117\078\104\050\055\118\102\054\116\100\067\076\081\082\053\120\088\068\079\053\122\065\056\075\082\076\052\081\087\110\113\121\110\054\118\101\074\081\069\113\052\068\050\054\069\070\089\066\090\105\081\079\107\104\118\088\116\081\048\082\085\047\083\106\065\068\070\081\052\071\107\109\111\050\083\108\119\100\071\114\051\052\053\112&quot;,&quot;\073\113\071\076\107\083\061\061&quot;,&quot;\110\107\081\072\068\118\074\097\102\120\111\071&quot;;&quot;\109\105\115\116\047\120\061\061&quot;;&quot;\108\043\051\084\067\080\090\068\109\079\061\061&quot;;&quot;\089\080\090\085\109\057\072\102\073\108\061\061&quot;,&quot;\078\083\080\112\047\055\071\113&quot;;&quot;\089\043\071\102\047\086\104\101&quot;;&quot;\073\072\078\102\122\110\051\076\107\110\069\048\053\116\083\116\110\090\089\061&quot;,&quot;\047\102\105\078&quot;,&quot;\086\071\114\082\116\085\113\104\119\050\121\048\079\074\071\116\114\086\097\053\087\089\047\078\085\082\079\122\050\089\078\061&quot;;&quot;\076\051\105\104&quot;,&quot;\114\104\103\116\090\113\084\112\113\054\077\079\082\083\061\061&quot;;&quot;\106\081\072\105\057\070\072\107\071\110\115\104\107\076\048\048\114\120\061\061&quot;,&quot;\076\118\086\098\065\047\116\115\083\105\051\068\118\114\073\074\051\083\061\061&quot;,&quot;\086\076\051\069\073\086\117\048\109\105\115\103\067\105\110\061&quot;;&quot;\122\083\061\061&quot;;&quot;\122\103\083\072\073\056\118\119\122\083\061\061&quot;,&quot;\117\107\051\103\109\082\121\055\049\089\056\051\043\054\087\051\057\065\106\051\114\108\061\061&quot;,&quot;\098\121\098\081&quot;,&quot;\067\070\097\061&quot;;&quot;\103\087\072\052\069\072\074\072\115\077\053\083&quot;;&quot;\071\105\055\043\047\113\073\103\109\080\109\121\047\081\117\080\047\108\061\061&quot;,&quot;\089\074\049\119\067\081\108\061&quot;,&quot;\089\080\090\069\067\113\073\072&quot;;&quot;\097\114\111\114\053\087\115\055\111\086\089\048\121\108\082\072\047\090\066\061&quot;;&quot;\081\120\049\052\054\057\117\114&quot;,&quot;\109\078\084\052\052\083\057\054\120\120\061\061&quot;,&quot;\117\105\090\116\109\074\049\077\088\108\061\061&quot;,&quot;\119\104\054\049\080\079\087\069\071\122\055\115&quot;,&quot;\053\043\049\101\088\090\072\120\088\105\078\098\071\113\118\101\110\108\061\061&quot;;&quot;\087\068\088\065\097\057\107\047&quot;,&quot;\090\105\115\069\089\105\090\102\078\097\117\072\109\105\090\068\109\105\090\112\078\108\061\061&quot;,&quot;\073\043\076\048\109\105\071\118&quot;,&quot;\043\117\083\047\114\099\078\111\081\099\101\067\070\051\048\113&quot;,&quot;\069\120\065\121\055\083\086\083\099\083\061\061&quot;;&quot;\105\050\054\074&quot;,&quot;\057\082\089\113\070\115\120\109&quot;,&quot;\053\113\067\119&quot;,&quot;\116\103\109\065\077\069\103\106\069\082\084\085&quot;;&quot;\052\054\047\083\106\071\106\121&quot;;&quot;\106\106\107\102\067\113\071\113\088\115\071\078\071\090\053\098\047\110\083\061&quot;,&quot;\108\072\108\043\089\068\049\122\089\101\049\087\114\057\115\115&quot;,&quot;\109\105\115\103\067\105\110\061&quot;,&quot;\118\089\117\114\056\108\061\061&quot;;&quot;\109\047\086\114\057\083\061\061&quot;,&quot;\107\043\051\084\107\043\115\101&quot;;&quot;\067\057\115\101\047\079\061\061&quot;,&quot;\066\057\043\110\073\088\073\076&quot;;&quot;\047\072\048\103\067\072\073\082\090\086\049\106\114\101\069\103\106\108\061\061&quot;;&quot;\109\105\051\084\109\057\076\103\073\086\078\061&quot;,&quot;\089\057\107\113\109\112\109\071\089\074\048\104\088\112\072\087\067\097\097\061&quot;,&quot;\085\089\065\079\113\117\085\054\065\087\117\085\073\100\109\112\100\103\053\061&quot;;&quot;\043\082\083\053&quot;;&quot;\053\070\079\052\056\122\115\081\088\100\103\110\048\067\102\084\057\089\116\056\055\051\098\061&quot;;&quot;\110\105\090\071\109\101\073\097\110\070\117\047\053\110\069\081&quot;;&quot;\053\113\078\113\114\116\072\118\071\097\051\103\073\112\090\087\053\120\061\061&quot;;&quot;\072\067\116\103\118\104\090\047\065\082\118\070\113\120\054\087\073\117\055\057\053\102\106\069\120\120\113\077\114\103\079\061&quot;,&quot;\110\070\109\114\109\080\118\120\067\106\071\052\047\057\048\090&quot;;&quot;\097\105\112\085\048\089\075\116&quot;;&quot;\089\043\090\101\109\086\104\100\067\057\051\112\073\057\085\100\089\043\090\066\073\057\071\101\086\043\073\102\107\057\076\072&quot;,&quot;\089\113\104\070\109\105\048\116\089\074\049\052\047\112\085\049&quot;,&quot;\089\105\071\048\067\105\120\061&quot;,&quot;\098\081\105\050\100\105\068\107\073\108\061\061&quot;,&quot;\121\113\090\087\116\118\080\114\078\066\118\074&quot;}local function D(D)return n[D-(920686-881085)]end for D,T in ipairs({{529894-529893,-593390-(-593551)},{941615-941614,-132048+132088};{312431+-312390;-248338-(-248499)}})do while T[430726-430725]&lt;T[-619040-(-619042)]do n[T[854036-854035]],n[T[97731-97729]],T[822240+-822239],T[-293413-(-293415)]=n[T[-345441-(-345443)]],n[T[513666+-513665]],T[-380126+380127]+(508504+-508503),T[241027+-241025]-(-475784+475785)end end do local D=math.floor local T=type local l=string.sub local B=string.char local L={j=44678+-44659,[&quot;\049&quot;]=90424-90415,h=-609880+609881,[&quot;\051&quot;]=915066-915005,z=506899-506885,o=926889-926847;[&quot;\048&quot;]=214671-214638,[&quot;\054&quot;]=-776571+776586;[&quot;\043&quot;]=161378+-161324,f=993671+-993621;a=787977+-787973;[&quot;\057&quot;]=-153384+153406,v=981724-981684,m=932612+-932583,[&quot;\047&quot;]=-270247+270273,H=233927+-233890,P=939634-939596;q=204928+-204873;c=-877578-(-877641);I=628038-628013;F=-437127+437130,p=203459+-203423,g=-900019+900053,G=251764-251751,[&quot;\053&quot;]=695372+-695360;[&quot;\056&quot;]=-555286+555288;Z=-8288-(-8309),r=-1041637-(-1041655),n=-14203+14223,e=705163-705111,x=250039-249991,u=46767-46750;W=72416+-72359,C=-79045-(-79072),X=888931+-888901;K=308120+-308110,S=986968-986936,D=765951+-765916,U=-946353+946402,Y=291975-291947;O=59154-59154;i=423831-423825;L=768790-768737;l=685679-685663,A=-815103-(-815165);Q=-552560+552599,[&quot;\052&quot;]=1035349+-1035338;J=785937+-785930,k=440164+-440140,s=-128523+128528;R=-349741-(-349799),d=-251835+251866,E=604571+-604526,b=-571061-(-571117),w=-44252+44293,T=-363830-(-363876);V=-740129-(-740152),M=471878+-471831;t=-674394-(-674445);N=17486+-17478,B=789494+-789450;[&quot;\055&quot;]=-30586-(-30646),y=248976-248933,[&quot;\050&quot;]=439321-439262}local p=n local v=table.concat local r=string.len local G=table.insert for n=173230-173229,#p,-819924+819925 do local Y=p[n]if T(Y)==&quot;\115\116\114\105\110\103&quot;then local T=r(Y)local W={}local A=-237548+237549 local R=-22245-(-22245)local m=1025538+-1025538 while A&lt;=T do local n=l(Y,A,A)local p=L[n]if p then R=R+p*(205055-204991)^((728027+-728024)-m)m=m+(957351+-957350)if m==533817-533813 then m=296034+-296034 local n=D(R/(-680996-(-746532)))local T=D((R%(-130954-(-196490)))/(-272563+272819))local l=R%(-965553-(-965809))G(W,B(n,T,l))R=-918618-(-918618)end elseif n==&quot;\061&quot;then G(W,B(D(R/(620889+-555353))))if A&gt;=T or l(Y,A+(414931+-414930),A+(96562+-96561))~=&quot;\061&quot;then G(W,B(D((R%(872618-807082))/(531714-531458))))end break end A=A+(-196340+196341)end p[n]=v(W)end end end return(function(n,l,B,L,p,v,r,J,b,m,G,g,u,R,Z,A,W,j,Y,X,N,T,h)T,Y,G,J,R,j,N,g,h,A,b,X,Z,m,u,W=function(T,B,L,p)local x,q,J,i,I,s,V,O,E,H,Y,A,f,Q,z,m,t,e,R,F,U,w,C,d,k,P,c,y,K,M,S,a,r,o while T do if T&lt;-348573+8023233 then if T&lt;200395+3896925 then if T&lt;2212948-(-516128)then if T&lt;166934+1000303 then if T&lt;594466-(-305475)then if T&lt;582279-(-243702)then if T&lt;69209+557930 then I=738047+-738046 x=o[I]f=x T=-711557+16994014 else P=H e=D(944679+-905027)K=n[e]e=D(-779685+819332)M=K[e]K=M(Y,P)M=G[L[911911-911905]]T=13528677-(-753367)e=M()d=K+e U=d+t d=-617578+617834 q=U%d e=139732-139731 d=R[A]P=nil t=q K=t+e M=m[K]U=d..M R[A]=U end else t=nil i=nil m=nil T=-487357+12642421 end else if T&lt;1570646-533064 then if T&lt;16601-(-949778)then T=G[L[172405-172404]]m=D(491784+-452144)S=D(-724331+764016)Y=G[L[670275+-670273]]A=G[L[398394-398391]]J=-685314+23740257902640 V=-363531+31391151342884 R=A(m,J)r=Y[R]Y={}T[r]=Y r=D(-116734-(-156408))T=n[r]t=G[L[649475+-649474]]P=G[L[-255119-(-255121)]]z=G[L[-164879-(-164882)]]H=z(S,V)i=P[H]H=D(-102742-(-142404))J=t[i]S=1045194181917-(-62665)i=G[L[67724+-67722]]P=G[L[-349319+349322]]z=P(H,S)t=i[z]H=24025233024223-260396 m=J[t]t=G[L[-506622-(-506624)]]z=D(-987020+1026662)i=G[L[1008598+-1008595]]P=i(z,H)J=t[P]R=m[J]J=D(218304-178638)J=R[J]m={J(R)}R={T(l(m))}Y=R[-295758+295760]A=R[737308+-737305]r=R[-850303-(-850304)]R=r T=450705+13949578 else J=G[L[-547351+547355]]i=G[L[487944+-487943]]S=29640044906487-(-28147)H=D(-172811-(-212447))T=872355+11636226 P=G[L[609763-609761]]z=P(H,S)t=i[z]z=D(-911655+951358)m=J[t]t=G[L[1001235+-1001234]]H=306556+11122168800959 i=G[L[373521-373519]]P=i(z,H)z=11975848948202-(-25566)J=t[P]R=m[J]J=G[L[634072+-634071]]P=D(-996852-(-1036531))t=G[L[971531-971529]]i=t(P,z)m=J[i]r=R[m]m=G[L[-592315+592316]]i=D(-764497+804211)J=G[L[138374+-138372]]P=229290+14191511214630 t=J(i,P)R=m[t]m=false r[R]=m end else r={}T=n[D(1005134-965501)]end end else if T&lt;1539434-(-263628)then if T&lt;-928040+2598403 then if T&lt;-333431+1861422 then r={}T=n[D(-8906-(-48636))]else A=B[-142092-(-142094)]i=D(-603951+643621)Y=B[69487+-69486]m=G[L[284504+-284503]]P=63461+15296479945709 J=G[L[-315853+315855]]t=J(i,P)R=m[t]r=Y[R]t=D(-452816-(-492509))J=n[t]S=368859+14065033754810 i=G[L[108103-108102]]P=G[L[900429-900427]]H=D(-806324+846011)z=P(H,S)t=i[z]m=J[t]t=G[L[699599+-699598]]z=D(798330+-758719)H=10263154041495-659436 i=G[L[-451471+451473]]P=i(z,H)J=t[P]R=m[J]T=r==R T=T and 845568+9458029 or 13620782-(-216706)end else S=D(-461773-(-501398))P=1323928872971-452003 A=G[L[404241+-404240]]i=D(-905262-(-944865))m=G[L[18342-18340]]J=G[L[1008128+-1008125]]t=J(i,P)R=m[t]i=10296172723205-(-464565)Y=A[R]R=G[L[-574551+574553]]m=G[L[-423651+423654]]t=D(815249+-775539)J=m(t,i)A=R[J]V=30651889685288-(-25753)r=Y[A]A=G[L[-799602+799604]]t=538564+27706679753377 J=D(-686466+726165)R=G[L[44074-44071]]m=R(J,t)Y=A[m]T=r[Y]Y=G[L[131638+-131636]]J=-119525+28246543304262 A=G[L[-746357-(-746360)]]m=D(-96229-(-135909))R=A(m,J)r=Y[R]t=G[L[583823+-583822]]P=G[L[-370227+370229]]z=G[L[-74751+74754]]H=z(S,V)S=25179333659707-(-254354)i=P[H]J=t[i]i=G[L[11049-11047]]P=G[L[-233826+233829]]H=D(454842+-415156)z=P(H,S)t=i[z]m=J[t]t=G[L[-156767+156769]]i=G[L[419353+-419350]]z=D(-101307-(-140998))H=765999+7378782641469 P=i(z,H)J=t[P]R=m[J]z=32486997899644-441957 J=G[L[-218129-(-218131)]]t=G[L[-177741+177744]]P=D(220696+-181028)i=t(P,z)m=J[i]A=R[m]Y=not A T[r]=Y r={}T=n[D(864838-825143)]end else if T&lt;-382986+3060600 then if T&lt;-469509+2977409 then R=-124283+124284 A=G[L[380731+-380728]]Y=A~=R T=Y and 378080+3940163 or 850446+8512466 else k=-295110+295110 d=#q U=d==k T=9081813-194155 end else m=u(m)d=u(d)q=nil U=nil A=u(A)R=u(R)J=u(J)V=nil m=W()i=u(i)P=nil R=nil U=635292+-635291 z=u(z)t=nil H=u(H)P=D(862729-823109)i=D(-223320+262944)V=W()S=nil A=nil G[m]=A A=W()G[A]=R S={}t=D(628332+-588708)q={}J=n[t]t=D(-580601-(-620335))R=J[t]T=319045+3133696 J=W()G[J]=R t=n[i]i=D(-184942+224615)R=t[i]i=n[P]z=D(-696076-(-735728))P=D(-213954+253716)t=i[P]P=n[z]d=503627-503371 z=D(-960539-(-1000184))i=P[z]P=414628+-414628 H=W()z=W()G[z]=P P=-812775-(-812777)k=d G[H]=P G[V]=S P={}d=-1016541-(-1016542)S=302968-302968 E=d d=54214-54214 Q=E&lt;d d=U-E end end end else if T&lt;-134225+3597216 then if T&lt;2537603-(-564430)then if T&lt;3297324-236206 then if T&lt;-252503+3197460 then K=G[A]T=K and 6096985-952488 or-452697+4537605 M=K else T=G[L[-638546-(-638547)]]T=T and 3230882-(-1014617)or-568768+10203352 end else R=R+J A=R&lt;=m i=not t A=i and A i=R&gt;=m i=t and i A=i or A i=7785383-(-308833)T=A and i A=7420301-707313 T=T or A end else if T&lt;-986939+4325123 then if T&lt;332240+2839112 then T=true T=11442175-623322 else R=G[L[532375-532366]]T={}Y=T T=3282851-221202 m=R A=485807+-485806 R=381593-381592 J=R R=-1023118-(-1023118)t=J&lt;R R=A-J end else w=not Q d=d+E U=d&lt;=k U=w and U w=d&gt;=k w=Q and w U=w or U w=5622378-(-921922)T=U and w U=3021753-434477 T=T or U end end else if T&lt;3827195-113289 then if T&lt;508595+3035797 then if T&lt;-379785+3878340 then T=-840424+13524135 Y=nil G[L[-68157-(-68162)]]=r else Y=D(-875803-(-915561))r=D(-455250+494982)T=n[r]r=n[Y]Y=D(-912280-(-952038))n[Y]=T Y=D(-762842+802574)n[Y]=r T=6896969-904166 Y=G[L[-760746+760747]]A=Y()end else V=D(-701816+741436)i=D(-134160-(-173784))t=r r=n[i]i=D(218274+-178601)T=r[i]P=D(-531183+570803)i=W()G[i]=T r=n[P]P=D(54438+-14815)T=r[P]P=T S=n[V]z=S H=T T=S and 1000583+3342031 or 9126425-(-511512)end else if T&lt;4366272-541324 then if T&lt;149303+3612591 then J=-190427+190429 A=G[L[-22726+22727]]m=-799272+799273 R=A(m,J)A=47086-47085 Y=R==A r=Y T=Y and 954902+6018057 or-858820+9256176 else t=G[J]r=t T=-911998+4578752 end else G[A]=M T=G[A]T=T and 475670+6670887 or 583847+2525387 end end end end else if T&lt;-90364+6076846 then if T&lt;4558616-(-400890)then if T&lt;493452+3835656 then if T&lt;4983268-696372 then if T&lt;-784025+4969908 then e=D(222290+-182573)E=D(58776+-19018)T=n[e]k=n[E]e=T(k)T=D(446227-406495)n[T]=e T=943997+5518874 else r={}T=n[D(148226+-108505)]end else z=696651+-696649 R=368371-368339 A=G[L[-564831-(-564834)]]S=-394100-(-394113)Y=A%R m=G[L[-467440+467444]]i=G[L[1007443+-1007441]]U=G[L[-63482-(-63485)]]q=U-Y U=-446268+446300 V=q/U H=S-V P=z^H t=i/P J=m(t)m=-737302+4295704598 z=512256-512000 R=J%m J=351937-351935 m=J^Y A=R/m P=-984306-(-984307)m=G[L[-225920+225924]]T=-587506+10549895 i=A%P Y=nil P=4295756562-789266 t=i*P J=m(t)m=G[L[8539+-8535]]t=m(A)R=J+t J=-46794+112330 m=R%J A=nil i=-895328+960864 t=R-m J=t/i i=650551+-650295 t=m%i P=m-t i=P/z z=433054-432798 P=J%z S=-526690+526946 H=J-P R=nil J=nil z=H/S m=nil H={t,i;P,z}t=nil P=nil i=nil G[L[-820969-(-820970)]]=H z=nil end else if T&lt;4113103-(-801797)then if T&lt;720556+3836733 then T=-37220+9675157 q=D(187593-147973)V=n[q]q=D(209494+-169848)S=V[q]z=S else i=D(928719-888992)R=D(-987713+1027454)r=n[R]m=G[L[-39599+39600]]z=D(-108372+148049)P=16312767481887-(-775565)J=G[L[-839101+839103]]t=J(i,P)H=441027253829-578936 R=m[t]T=r[R]R=.1 r=T(R)m=G[L[508333+-508330]]t=G[L[-311327-(-311328)]]i=G[L[460133-460131]]P=i(z,H)J=t[P]R=m[J]J=G[L[-684624-(-684625)]]P=D(-433948+473598)z=18660153409719-(-745786)t=G[L[785492+-785490]]i=t(P,z)m=J[i]r=R[m]m=G[L[-954842-(-954843)]]i=D(206297-166560)P=-737690+28420350358860 J=G[L[-284416+284418]]t=J(i,P)R=m[t]i=921031+13357402573445 T=r[R]R=G[L[-911602+911603]]m=G[L[422384-422382]]t=D(486238+-446569)J=m(t,i)r=R[J]R=false T[r]=R T=-810430+12828286 end else T=5778357-(-214446)end end else if T&lt;-555978+6136053 then if T&lt;5879489-458277 then if T&lt;4867602-(-287996)then T=-339281+4424189 K=S==V M=K else T=G[i]k=-781069+781075 e=352694+-352693 K=T(e,k)k=D(765472-725740)T=D(-222420+262152)n[T]=K e=n[k]k=856152+-856150 T=e&gt;k T=T and 20505+4129885 or-1043210+11996068 end else m=A V=26440040701489-(-938471)S=D(3141-(-36556))P=G[L[435382-435380]]z=G[L[247066+-247063]]H=z(S,V)i=P[H]t=J[i]V=24022009260981-245763 P=G[L[334136+-334134]]z=G[L[1002503-1002500]]S=D(-455375-(-495035))H=z(S,V)i=P[H]T=t~=i T=T and 11854036-(-426728)or-555467+9293874 end else if T&lt;5706487-(-235100)then if T&lt;29110+5762927 then T=8710740-(-37510)E=u(E)Q=u(Q)y=u(y)s=u(s)C=u(C)w=u(w)o=nil else T=-395463+3870780 R=G[L[536986-536980]]A=R==Y r=A end else z=W()G[z]=r S=-198809+198874 T=G[i]e=D(177185+-137468)H=523276+-523273 r=T(H,S)H=W()G[H]=r T=534516-534516 S=T T=-122091-(-122091)q=D(489942-450303)r=n[q]V=T U=N(27566+7276191,{})q={r(U)}r=546056-546054 T={l(q)}q=T T=q[r]r=D(-1009949+1049576)U=T T=n[r]d=G[R]K=n[e]e=K(U)K=D(-770606+810361)M=d(e,K)d={M()}r=T(l(d))d=W()G[d]=r M=G[H]r=181848-181847 K=M M=-637518-(-637519)e=M M=32839+-32839 k=e&lt;M T=-850265+9598515 M=r-e end end end else if T&lt;-641837+7636613 then if T&lt;5633816-(-906605)then if T&lt;5448618-(-1020168)then if T&lt;101002+5954381 then T=true T=T and 3059198-(-456208)or-677137+1755631 else T=95498+9036657 end else Q=D(14050+25574)E=W()G[E]=M w=603282-603182 s=-877599+877854 r=n[Q]Q=D(775747-736074)T=r[Q]Q=-331658+331659 O=-295025-(-305025)F=-586804+586804 y=818179-818178 r=T(Q,w)Q=W()G[Q]=r T=G[i]I=D(-488199+527916)w=325368+-325368 r=T(w,s)s=-806782-(-806783)w=W()G[w]=r T=G[i]C=G[Q]r=T(s,C)s=W()o=1032250-1032248 G[s]=r r=G[i]C=r(y,o)r=716421+-716420 T=C==r o=D(-678570+718324)C=W()r=D(-16771-(-56526))G[C]=T x=n[I]c=G[i]a={c(F,O)}T=D(-178960+218699)I=x(l(a))T=U[T]x=D(-420449-(-460203))f=I..x y=o..f T=T(U,r,y)y=W()f=X(-590499+4347910,{i,E,H,R,A,d,C;y;Q;s;w;z})G[y]=T o=D(592082+-552443)r=n[o]o={r(f)}T={l(o)}o=T T=G[C]T=T and-52164+12007546 or 14979993-(-75695)end else if T&lt;-636399+7437971 then if T&lt;6882496-276305 then U=d T=-611796+4064537 w=U q[U]=w U=nil else T=G[L[533422-533412]]A=G[L[1047886+-1047875]]Y[T]=A T=G[L[-1015827+1015839]]A={T(Y)}r={l(A)}T=n[D(-957614+997319)]end else T=r and 366977+12166184 or 164061+12519650 end end else if T&lt;8077186-712644 then if T&lt;-766117+8080766 then if T&lt;7303352-27753 then T=2177754-(-546882)else A=D(-911434-(-951138))R=7407553-(-564720)Y=A^R r=6819739-(-1027424)T=r-Y r=D(900844+-861113)Y=T T=r/Y r={T}T=n[D(-341424-(-381078))]end else A=G[L[-988157+988158]]S=D(-277363+316977)m=G[L[-1038808+1038810]]J=G[L[-745567+745570]]P=9714134191588-130105 i=D(849257+-809590)t=J(i,P)R=m[t]t=D(695163+-655414)Y=A[R]R=G[L[554230-554228]]i=16497831123177-129767 V=8498269497698-(-960019)m=G[L[252341-252338]]J=m(t,i)A=R[J]J=D(-194586+234326)r=Y[A]A=G[L[855154-855152]]R=G[L[-29985+29988]]t=2704836486218-(-975009)m=R(J,t)Y=A[m]J=966185+30549154167144 m=D(570157+-530553)T=r[Y]Y=G[L[-930960-(-930962)]]A=G[L[215453-215450]]R=A(m,J)r=Y[R]t=G[L[-1030301+1030302]]P=G[L[-857120+857122]]z=G[L[-170153-(-170156)]]H=z(S,V)i=P[H]J=t[i]i=G[L[-555609+555611]]P=G[L[-773498-(-773501)]]H=D(726487-686874)S=-432965+9532789648540 z=P(H,S)t=i[z]m=J[t]H=251262+31547763876836 z=D(-427601-(-467207))t=G[L[133516+-133514]]i=G[L[6384-6381]]P=i(z,H)J=t[P]R=m[J]J=G[L[-941106-(-941108)]]z=9822198395901-(-499168)P=D(-939537+979149)t=G[L[1006853-1006850]]i=t(P,z)m=J[i]A=R[m]Y=not A T[r]=Y T=n[D(249073-209375)]r={}end else if T&lt;-680632+8181718 then if T&lt;-295240+7683894 then Y=G[L[-872065-(-872066)]]r=#Y Y=343268-343268 T=r==Y T=T and 12931281-(-356423)or 571382+9391007 else T=-1042598+6661732 G[A]=r end else T=G[L[-520805+520806]]A=B[657873-657871]Y=B[198263-198262]R=T T=R[A]T=T and 980510+10086820 or 15176362-1034608 end end end end end else if T&lt;11197766-(-1015400)then if T&lt;10564942-551876 then if T&lt;-196253+9504869 then if T&lt;427131+8320946 then if T&lt;7970891-(-542435)then if T&lt;8089967-(-108638)then z=290949+-290694 P=-307314-(-307314)A=R T=G[L[237247+-237246]]i=T(P,z)Y[A]=i A=nil T=663836+2397813 else T=1002571+5970388 A=G[L[-531786-(-531788)]]R=G[L[112488-112485]]Y=A==R r=Y end else m=nil T=15031928-631645 J=nil end else if T&lt;8510139-(-404497)then if T&lt;241214+8575714 then M=M+e E=not k r=M&lt;=K r=E and r E=M&gt;=K E=k and E r=E or r E=6351126-(-131732)T=r and E r=160783+2622713 T=T or r else d=-322630+322631 k=#q U=R(d,k)w=-967980-(-967981)d=t(q,U)k=G[V]Q=d-w E=i(Q)k[d]=E d=nil U=nil T=13806400-(-60024)end else T=true T=T and 5418116-4033 or-376591+12264222 end end else if T&lt;10194290-559595 then if T&lt;403545+9112044 then if T&lt;10456593-995728 then T=2459860-535289 A=G[L[-558089-(-558092)]]R=-1045787+1045841 Y=A*R A=-171272+171529 r=Y%A G[L[446053+-446050]]=r else T=true r={}G[L[172216+-172215]]=T T=n[D(743785-704150)]end else T=true G[L[-314559+314560]]=T V=150227+26540307096947 t=G[L[731183+-731181]]S=D(291572+-251964)P=G[L[553966+-553963]]z=G[L[292744-292740]]H=z(S,V)S=12956164187062-920613 i=P[H]H=D(899516+-859769)J=t[i]i=G[L[-263537-(-263540)]]P=G[L[-764975+764979]]z=P(H,S)H=-441856+30833085543957 t=i[z]z=D(-419009-(-458685))m=J[t]t=G[L[-121774+121777]]i=G[L[738839+-738835]]P=i(z,H)z=-479097+1619089003114 J=t[P]R=m[J]P=D(852467+-812833)J=G[L[-492206+492209]]t=G[L[643608-643604]]i=t(P,z)m=J[i]A=R[m]P=-1001715+25555269629807 m=G[L[772897-772894]]J=G[L[1010001-1009997]]i=D(885800+-846159)t=J(i,P)R=m[t]Y=A[R]V=12741257830493-198960 t=D(952672-913051)R=G[L[-187630-(-187633)]]m=G[L[-895704-(-895708)]]i=25288757532979-(-398540)J=m(t,i)A=R[J]S=D(101118-61501)r=Y[A]t=G[L[-574520+574522]]Y=r P=G[L[693073-693070]]z=G[L[-264407-(-264411)]]H=z(S,V)S=2346745212821-(-283823)i=P[H]J=t[i]i=G[L[623873-623870]]V=19374770944709-(-10361)P=G[L[-701678-(-701682)]]H=D(-665591+705235)z=P(H,S)H=4295898196678-926454 t=i[z]z=D(-399614+439263)m=J[t]t=G[L[-323791+323794]]i=G[L[396826+-396822]]P=i(z,H)z=-883464+30333979341365 J=t[P]R=m[J]J=G[L[-544321-(-544324)]]t=G[L[943657+-943653]]P=D(-372709-(-412365))i=t(P,z)P=1008084287748-261935 m=J[i]A=R[m]m=G[L[537266-537263]]i=D(-182079+221798)J=G[L[-705978+705982]]t=J(i,P)R=m[t]t=D(815354-775628)r=A[R]R=G[L[-321723+321726]]i=-358598+34800177346579 P=-846575+13183354684137 m=G[L[712156-712152]]J=m(t,i)i=D(-802344-(-842068))A=R[J]m=G[L[-419806-(-419809)]]J=G[L[664340-664336]]t=J(i,P)R=m[t]i=D(-970035+1009773)r[A]=R A=D(-28949-(-68710))P=570586+18329576139901 r=n[A]m=G[L[652213-652210]]J=G[L[-393342-(-393346)]]t=J(i,P)R=m[t]A=r(R)A=D(1022554+-982793)P=23356061906548-(-193544)r=n[A]m=G[L[710638+-710635]]S=D(-730823+770486)i=D(-823745+863463)J=G[L[-263785+263789]]t=J(i,P)i=D(309059+-269384)R=m[t]P=-916985+9390133645069 A=r(R)R=D(723594+-683853)A=n[R]m=G[L[443196-443193]]J=G[L[-637207-(-637211)]]t=J(i,P)R=m[t]r=A[R]R=834783-834782 A=r(R)t=G[L[544280-544278]]P=G[L[-401464+401467]]z=G[L[625720-625716]]H=z(S,V)i=P[H]J=t[i]i=G[L[-998768+998771]]H=D(468577-428888)S=-934444+12196923693147 P=G[L[514763+-514759]]z=P(H,S)t=i[z]H=645802846316-583488 m=J[t]t=G[L[-10847+10850]]z=D(230261+-190502)i=G[L[-699847-(-699851)]]P=i(z,H)J=t[P]z=8212408269452-404380 R=m[J]J=G[L[885926-885923]]t=G[L[-937768+937772]]P=D(-1047736+1087484)i=t(P,z)m=J[i]P=-476803+12974389517852 A=R[m]m=G[L[-172371-(-172374)]]J=G[L[-245507+245511]]i=D(435225-395564)t=J(i,P)R=m[t]T=n[D(203009+-163371)]r=A[R]R=G[L[-432030+432033]]m=G[L[-491142+491146]]i=627696+1615605247744 t=D(240612-200990)J=m(t,i)A=R[J]R=Y Y=nil r[A]=R r=false G[L[-643474+643475]]=r r={}end else if T&lt;10899712-993104 then if T&lt;9478626-(-281286)then r=z T=H T=z and-997784+6970285 or 16359152-37863 else T=1006806+8125349 end else R=D(738983-699363)A=n[R]T=n[D(458802-419183)]R=D(-548403+588165)Y=A[R]R=G[L[984719+-984718]]A={Y(R)}r={l(A)}end end end else if T&lt;801159+10682558 then if T&lt;9956970-(-921380)then if T&lt;195965+10577056 then if T&lt;10740304-(-13146)then R=D(824148-784407)r=n[R]P=12599105187672-(-173970)m=G[L[-173785-(-173786)]]J=G[L[-45416+45418]]i=D(-166953+206659)t=J(i,P)R=m[t]T=r[R]R=.1 r=T(R)T=G[L[-64891-(-64894)]]T=T and-758303+16242114 or-427370+1413185 else A=D(101988+-62381)R=5380684-830449 Y=A^R r=-44159+10137911 T=r-Y r=D(-76416-(-116042))Y=T T=r/Y r={T}T=n[D(-770894-(-810522))]end else T=j(643725+4275623,{m})K={T()}T=n[D(856410+-816792)]r={l(K)}end else if T&lt;-593394+11630746 then if T&lt;11803932-817165 then k=D(652485-612753)T=n[k]k=D(-273589-(-313347))n[k]=T T=-7682+6470553 else x=T a=-791921-(-791922)c=o[a]a=false I=c==a T=I and-890928+14383194 or 16943420-944482 f=I end else T=796561+11358503 end end else if T&lt;11610474-(-379621)then if T&lt;10947620-(-981396)then if T&lt;11856219-138859 then Y=D(-288467-(-328076))r=D(290674+-250982)T=n[r]r=T(Y)T=n[D(67226+-27515)]r={}else r={}T=n[D(-697532-(-737292))]end else f=G[A]T=f and 11693571-684470 or 312896+7159607 r=f end else if T&lt;284632+11859166 then if T&lt;517411+11546064 then A=nil r={}T=n[D(-299616-(-339287))]Y=nil else A=B[413033-413031]Y=B[-754290+754291]i=D(77090+-37338)m=G[L[-611221+611222]]P=-1048320+19735839662822 S=-236270+6470551938739 J=G[L[-949807-(-949809)]]t=J(i,P)R=m[t]t=D(98295+-58602)r=Y[R]J=n[t]i=G[L[652076+-652075]]H=D(845357+-805706)P=G[L[264935+-264933]]z=P(H,S)t=i[z]m=J[t]z=D(-48385+88033)t=G[L[-237043-(-237044)]]i=G[L[-213181+213183]]H=860623+21869860783608 P=i(z,H)J=t[P]R=m[J]T=r==R T=T and 896537+3701049 or 12166601-148745 end else r={A}T=n[D(-258285+297917)]end end end end else if T&lt;15053129-787849 then if T&lt;21033+13311354 then if T&lt;11642011-(-884849)then if T&lt;-24547+12534248 then if T&lt;13172543-882824 then T=D(9908-(-29697))T=J[T]T=T(J)T=8234306-(-504101)else T=814619+13022869 end else Y=W()H=D(422104-382382)G[Y]=B[-1025806+1025807]J=G[Y]i=G[L[109114-109113]]P=G[L[472204+-472202]]S=25952604651737-709028 z=P(H,S)t=i[z]H=20835020141870-(-929976)m=J[t]t=G[L[448302-448301]]z=D(-613611+653241)i=G[L[-800599+800601]]P=i(z,H)J=t[P]R=m[J]P=D(-226694-(-266352))J=G[L[595777-595776]]t=G[L[-861321+861323]]z=110137+27184811459385 i=t(P,z)m=J[i]P=-441543+6827952179506 A=R[m]m=G[L[242241+-242240]]J=G[L[998309+-998307]]i=D(1053521-1013825)t=J(i,P)R=m[t]r=A[R]R=G[L[-927156+927157]]t=D(162700+-123022)m=G[L[857929-857927]]i=597741+998608380644 z=15575010154580-(-656384)J=m(t,i)A=R[J]T=r[A]r=D(-569490+609232)r=T[r]A=N(1720974-(-81175),{Y,L[-921405-(-921406)];L[-296546-(-296548)]})P=D(-451362+491106)r=r(T,A)R=G[Y]J=G[L[219377+-219376]]t=G[L[313974-313972]]i=t(P,z)P=859015508623-(-216833)m=J[i]A=R[m]m=G[L[890804-890803]]J=G[L[55404-55402]]i=D(-471700-(-511457))t=J(i,P)R=m[t]t=D(-600098-(-639848))r=A[R]R=G[L[231762-231761]]i=34561115212924-(-504417)m=G[L[642737+-642735]]J=m(t,i)A=R[J]T=r[A]A=Z(12310923-231749,{L[804667+-804666];L[1008069+-1008067];Y})r=D(-446427+486169)r=T[r]r=r(T,A)r={}T=n[D(819638+-779915)]Y=u(Y)end else if T&lt;-827190+13616127 then if T&lt;13125735-547062 then r=D(762686-723059)z=X(-934914+11694660,{})T=n[r]Y=G[L[-776265+776269]]m=D(595996+-556279)P=D(723744+-684105)R=n[m]i=n[P]P={i(z)}t={l(P)}i=-641729+641731 J=t[i]m=R(J)R=D(-474708+514463)A=Y(m,R)Y={A()}r=T(l(Y))A=G[L[740099-740094]]T=A and 17488+5905287 or 2864447-(-610870)Y=r r=A else T=G[L[-172788-(-172795)]]T=T and-1011314+15753268 or 203729+3015667 end else R=831068-831067 A=G[L[-500014+500016]]Y=A*R A=16875858559615-(-711730)r=Y+A Y=535924+35184371552908 T=r%Y A=-93416+93417 G[L[513936-513934]]=T Y=G[L[-65606+65609]]r=Y~=A T=840120+8522792 end end else if T&lt;13720370-(-254409)then if T&lt;-881561+14728388 then if T&lt;205961+13309437 then a=746123+-746121 c=o[a]a=G[y]I=c==a T=-573909+16572847 f=I else A=nil Y=nil r={}T=n[D(599000+-559249)]end else d=#q k=617323-617323 U=d==k T=U and 16524132-(-160897)or 9018467-130809 end else if T&lt;-564773+14689004 then if T&lt;15115167-1015905 then t=13833737830263-(-547250)r=G[L[1038598-1038597]]J=D(189124+-149442)A=G[L[-96116-(-96118)]]R=G[L[-426389-(-426392)]]m=R(J,t)Y=A[m]T=r[Y]Y=G[L[953352-953348]]r=T(Y)r={}T=n[D(233104-193451)]else Y=W()G[Y]=B[325587-325586]H=D(-355732+395375)S=18908072831398-(-833726)J=G[Y]i=G[L[-134636+134637]]P=G[L[-310728-(-310730)]]z=P(H,S)t=i[z]m=J[t]t=G[L[-200821-(-200822)]]H=284975877378-347262 i=G[L[-105099-(-105101)]]z=D(-197459-(-237074))P=i(z,H)J=t[P]R=m[J]P=D(-956828+996556)J=G[L[-648873+648874]]z=30233263410971-645149 t=G[L[345477-345475]]i=t(P,z)P=22976815539750-769115 m=J[i]A=R[m]i=D(769816+-730214)H=D(-996970+1036682)m=G[L[705266-705265]]J=G[L[-898996-(-898998)]]t=J(i,P)i=596435+11936605027299 R=m[t]r=A[R]R=G[L[1041763-1041762]]t=D(-866901-(-906602))m=G[L[241721+-241719]]z=19828962993850-590505 J=m(t,i)A=R[J]T=r[A]r=D(-779878+819620)r=T[r]A=h(6459551-(-893496),{Y,L[-89936+89937];L[994113+-994111]})P=D(728240+-688583)r=r(T,A)R=G[Y]J=G[L[-597001+597002]]t=G[L[-657649+657651]]i=t(P,z)m=J[i]A=R[m]m=G[L[427800-427799]]J=G[L[-140053-(-140055)]]P=776527+24070071538297 i=D(-145736+185430)t=J(i,P)R=m[t]r=A[R]R=G[L[661593-661592]]i=2884369694077-(-280514)m=G[L[109081+-109079]]t=D(632822-593167)J=m(t,i)S=255124+17592720554860 A=R[J]T=r[A]r=D(1036306-996564)r=T[r]A=h(1401217-(-179859),{L[-961705+961706];L[612858-612856],L[-146529-(-146532)],Y})r=r(T,A)J=G[Y]i=G[L[701115+-701114]]P=G[L[891108+-891106]]z=P(H,S)t=i[z]m=J[t]t=G[L[452016+-452015]]i=G[L[259973-259971]]z=D(875691-835975)H=-68940+33845710686940 P=i(z,H)J=t[P]R=m[J]J=G[L[-8187-(-8188)]]P=D(-536624-(-576240))t=G[L[-776014-(-776016)]]S=777467275176-992830 z=30504278942536-(-758836)i=t(P,z)m=J[i]i=D(-411391-(-451106))A=R[m]m=G[L[-892773-(-892774)]]P=250421+18033747234456 J=G[L[-551146-(-551148)]]t=J(i,P)H=D(1034835+-995147)R=m[t]r=A[R]R=G[L[158283-158282]]t=D(-376808-(-416516))m=G[L[-98368-(-98370)]]i=17321492371591-(-313082)J=m(t,i)A=R[J]T=r[A]r=D(-527543-(-567285))r=T[r]A=Z(-101416-(-1016172),{Y,L[566235+-566234];L[-126785-(-126787)]})r=r(T,A)J=G[Y]i=G[L[-838548+838549]]P=G[L[-482205-(-482207)]]z=P(H,S)t=i[z]H=969804194067-581456 m=J[t]z=D(-57010-(-96674))t=G[L[-154742-(-154743)]]i=G[L[50594-50592]]P=i(z,H)H=D(-543186+582869)J=t[P]z=5335468372576-469164 R=m[J]J=G[L[426435+-426434]]t=G[L[-95752+95754]]P=D(-395866+435556)i=t(P,z)P=464484+3482303279089 m=J[i]A=R[m]i=D(-484134-(-523763))m=G[L[899049-899048]]J=G[L[4160+-4158]]t=J(i,P)R=m[t]t=D(807592+-767961)r=A[R]R=G[L[394951+-394950]]i=-958574+31518959704515 m=G[L[-321309+321311]]S=157243+13015092801905 J=m(t,i)A=R[J]T=r[A]A=N(14149903-67430,{L[512081-512077];L[-314459-(-314460)],L[-861383-(-861385)],Y})r=D(-810405-(-850147))r=T[r]r=r(T,A)J=G[Y]i=G[L[-484477-(-484478)]]P=G[L[665657-665655]]z=P(H,S)t=i[z]m=J[t]z=D(438159+-398450)t=G[L[-271264-(-271265)]]i=G[L[524151-524149]]H=-810917+27882351579740 P=i(z,H)J=t[P]R=m[J]z=23655937589337-316754 P=D(-276846+316530)J=G[L[831030+-831029]]t=G[L[865860-865858]]i=t(P,z)m=J[i]A=R[m]i=D(-822000-(-861672))m=G[L[461254-461253]]J=G[L[-258738-(-258740)]]P=470550+32844054891944 t=J(i,P)R=m[t]r=A[R]R=G[L[556849-556848]]i=-596504+16768051574936 t=D(-272222+311929)m=G[L[631332-631330]]J=m(t,i)A=R[J]T=r[A]A=h(-46024+3081273,{L[-726022+726025];Y;L[-993863-(-993864)];L[-70566-(-70568)]})r=D(-517836-(-557578))r=T[r]Y=u(Y)r=r(T,A)T=n[D(233575-193873)]r={}end else T={}G[L[-495297+495299]]=T J=414039+35184371674793 r=G[L[-761795+761798]]i=219743-219488 m=r r=A%J P=D(-472574-(-512226))G[L[-191394-(-191398)]]=r t=A%i i=786676+-786674 J=t+i G[L[791115+-791110]]=J i=n[P]P=D(-389454+429183)t=i[P]i=t(Y)t=D(-625718+665438)H=-496235+496236 S=H R[A]=t t=-507152-(-507181)P=117326+-117325 H=-467227-(-467227)T=-23337+14305381 z=i V=S&lt;H H=P-S end end end else if T&lt;46380+16069187 then if T&lt;15525750-597376 then if T&lt;15218691-765307 then if T&lt;14549779-215197 then H=H+S q=not V P=H&lt;=z P=q and P q=H&gt;=z q=V and q P=q or P q=687536+129743 T=P and q P=1369596-535182 T=T or P else A,J=R(Y,A)T=A and-365631+5895442 or-8510+1532444 end else Y=D(-898045-(-937737))R=-331900-(-331900)T=n[Y]A=G[L[-884250+884258]]Y=T(A,R)T=3441217-221821 end else if T&lt;16885269-946655 then if T&lt;904416+14191448 then x=G[A]T=x and-225608+835198 or-318369+16600826 f=x else T=false G[L[-57848+57851]]=T T=13426615-918034 end else r=f T=x T=7792730-320227 end end else if T&lt;491166+15897769 then if T&lt;16203945-(-146353)then if T&lt;1010803+15272371 then G[A]=f F=-461120-(-461121)a=G[s]c=a+F I=o[c]x=S+I I=-125447+125703 T=x%I S=T c=G[w]I=V+c c=392893-392637 x=I%c T=6515702-896568 V=x else H=D(298298-258652)T=6137172-164671 z=n[H]r=z end else Y=B T=true A=W()R=D(-221484-(-261136))m=W()G[A]=T r=n[R]R=D(-647073-(-686683))T=r[R]R=W()J=W()G[R]=T T=b(-719829+12237500,{})P=N(-289433+9756724,{J})G[m]=T T=false G[J]=T i=D(-913174+952813)t=n[i]i=t(P)r=i T=i and 650828+3135958 or 1030158+2636596 end else if T&lt;-659309+17347298 then q=nil o=D(301672+-261919)d=W()P=nil C=D(242871+-203206)U={}G[d]=U U=W()k=b(-832699+8200281,{d;z,H,J})w={}G[U]=k I=nil R=nil E=W()k={}S=nil J=u(J)G[E]=k Q=D(298332-258607)R={}k=n[Q]i=nil y=G[E]s={[C]=y,[o]=I}Q=k(w,s)G[m]=Q t=nil S=D(-646056-(-685812))k=g(-817065+8334266,{E;d;V,z;H,U})G[A]=k d=u(d)t=D(-947928+987641)z=u(z)E=u(E)T=n[D(744933-705187)]d=D(-860330-(-900030))J=n[t]H=u(H)t=D(717836+-678155)r={R}U=u(U)P=G[m]z=G[A]V=u(V)V=526037+11651629551196 H=z(S,V)i=P[H]t=J[t]t=t(J,i)i=D(243063+-203320)S=D(192892-153147)J=n[i]H=n[S]V=G[m]q=G[A]k=-682124+14665244083001 U=q(d,k)S=V[U]d=28705388682668-354678 U=D(417810+-378151)z=H[S]S=G[m]V=G[A]q=V(U,d)H=S[q]P=z[H]i=J(P)z=D(267292+-227655)J=W()P=W()G[J]=i i=false G[P]=i i=b(11524716-(-994900),{m;A})R[z]=i z=D(-114200+153935)i=h(14389137-281333,{m,A,P,J})R[z]=i else T=true T=T and 10869832-1047609 or 10392573-(-426280)end end end end end end end T=#p return l(r)end,{},{},function(n,D)local l=R(D)local B=function(...)return T(n,{...},D,l)end return B end,function(n)for D=565688+-565687,#n,262827-262826 do Y[n[D]]=Y[n[D]]+(390233-390232)end if B then local T=B(true)local l=p(T)l[D(879975+-840310)],l[D(-822762-(-862495))],l[D(-448884-(-488620))]=n,m,function()return-3662941-(-579290)end return T else return L({},{[D(461029-421296)]=m,[D(-108596-(-148261))]=n;[D(-583064+622800)]=function()return 876261+-3959912 end})end end,function(n,D)local l=R(D)local B=function(B,L,p,v,r)return T(n,{B,L;p,v,r},D,l)end return B end,function(n,D)local l=R(D)local B=function(B)return T(n,{B},D,l)end return B end,function(n,D)local l=R(D)local B=function(B,L,p,v,r,G)return T(n,{B;L;p;v,r,G},D,l)end return B end,function(n,D)local l=R(D)local B=function(B,L)return T(n,{B,L},D,l)end return B end,-780225-(-780225),function(n,D)local l=R(D)local B=function(B,L,p,v)return T(n,{B,L,p;v},D,l)end return B end,function(n,D)local l=R(D)local B=function()return T(n,{},D,l)end return B end,function(n,D)local l=R(D)local B=function(B,L,p)return T(n,{B,L,p},D,l)end return B end,function(n)local D,T=571702+-571701,n[-472787+472788]while T do Y[T],D=Y[T]-(-33879-(-33880)),D+(535685-535684)if 745243+-745243==Y[T]then Y[T],G[T]=nil,nil end T=n[D]end end,function(n)Y[n]=Y[n]-(-821666-(-821667))if Y[n]==45996+-45996 then Y[n],G[n]=nil,nil end end,function()A=A+(-283411-(-283412))Y[A]=-856496-(-856497)return A end return(J(16614172-239633,{}))(l(r))end)(getfenv and getfenv()or _ENV,unpack or table[D(-864876-(-904522))],newproxy,setmetatable,getmetatable,select,{...})end)(...)</ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="ModuleScript" referent="RBX2E7B69CBB26045E7B28CE93309E443E9">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">GgHandler</string>
				<string name="ScriptGuid">{60ACAAD1-CA46-48D3-8440-8986910D04CA}</string>
				<ProtectedString name="Source">--[[ v1.0.0 https://wearedevs.net/obfuscator ]] return(function(...)local T={&quot;\119\122\054\090\078\107\061\061&quot;;&quot;\119\109\108\084\107\079\114\109\080\112\077\107\080\105\122\057&quot;,&quot;\051\050\079\065&quot;;&quot;\065\112\070\061&quot;,&quot;\080\109\084\073\108\109\099\078\119\105\080\113\119\050\114\119\047\107\061\061&quot;,&quot;\055\050\072\074\078\099\067\113&quot;,&quot;\118\070\112\071\070\119\119\072&quot;;&quot;\119\116\099\118\119\116\122\079&quot;;&quot;\119\100\050\079\067\107\061\061&quot;,&quot;\108\090\114\068\110\073\117\082\077\122\068\106\077\079\077\122\047\076\061\061&quot;,&quot;\047\053\122\117\098\053\047\074\070\073\077\050\080\053\047\105\080\053\047\089\070\107\061\061&quot;,&quot;\071\077\111\054\077\043\075\066&quot;,&quot;\051\050\056\057\110\089\077\050\119\116\099\089\067\107\061\061&quot;;&quot;\065\119\101\053\120\085\072\101&quot;;&quot;\085\079\121\049\116\088\107\078\050\071\104\117\114\075\106\113\112\050\066\073&quot;;&quot;\085\097\099\117\067\085\077\054\080\053\122\111\065\053\108\061&quot;;&quot;\079\099\075\049\115\110\073\101&quot;,&quot;\051\043\072\099\113\051\121\086&quot;;&quot;\085\097\099\114\065\109\077\050\048\103\061\061&quot;;&quot;\047\078\122\066\067\102\077\077\098\090\050\067\065\090\122\114\051\102\107\061&quot;;&quot;\119\116\054\054\098\071\061\061&quot;,&quot;\085\097\099\100\119\076\061\061&quot;;&quot;\102\118\071\061&quot;,&quot;\090\108\051\055&quot;,&quot;\098\097\077\097\056\090\047\052\066\108\077\066\080\047\077\120\110\108\119\061&quot;,&quot;\055\073\085\082\099\065\055\121\109\075\078\069\070\103\061\061&quot;,&quot;\098\090\056\047\077\110\089\102\080\122\114\113\048\122\068\118\065\076\061\061&quot;;&quot;\047\122\086\070\067\053\067\052\051\112\108\090\065\053\068\118\108\073\079\061&quot;;&quot;\089\075\099\074\048\107\061\061&quot;,&quot;\068\068\068\107\090\085\072\079&quot;;&quot;\080\053\099\118\080\078\097\111\067\085\070\061&quot;;&quot;\065\117\068\074\114\083\085\105&quot;;&quot;\119\100\054\117\078\108\067\068\065\053\056\079\077\085\077\104\080\050\107\061&quot;;&quot;\098\109\047\117\065\090\067\050&quot;,&quot;\077\116\047\079\108\116\047\074\080\109\050\105\067\107\061\061&quot;,&quot;\098\109\047\084\080\078\050\074\067\107\061\061&quot;,&quot;\098\116\047\079\065\078\047\079\119\085\077\054\119\109\084\050&quot;,&quot;\087\112\068\116\054\120\049\122&quot;;&quot;\107\078\080\052\107\100\080\107\110\116\114\110\108\053\099\088&quot;,&quot;\098\050\067\098\108\107\061\061&quot;;&quot;\067\116\097\054\080\053\056\069&quot;,&quot;\065\053\047\118&quot;,&quot;\067\090\056\097\119\071\061\061&quot;,&quot;\053\069\052\082\053\105\087\108&quot;;&quot;\067\085\068\074\065\090\070\061&quot;,&quot;\052\090\077\073\109\077\110\108&quot;,&quot;\080\108\077\043\047\085\050\109\107\109\084\119\067\090\080\090\087\089\117\057&quot;;&quot;\098\090\047\111&quot;;&quot;\108\053\067\107\087\097\073\097\066\079\068\116\108\097\054\075\066\071\061\061&quot;;&quot;\067\109\084\113\065\090\070\061&quot;,&quot;\081\103\103\120\053\074\084\086\122\071\061\061&quot;;&quot;\065\112\073\061&quot;,&quot;\098\065\108\118\080\107\088\090\107\103\061\061&quot;;&quot;\047\050\080\084\110\085\050\053\065\089\080\111\065\053\077\105\065\103\061\061&quot;;&quot;\067\116\122\117\067\107\061\061&quot;;&quot;\083\105\113\110\114\114\114\056\077\057\105\084\087\085\103\057\049\081\098\052\047\111\069\109\110\053\117\106\115\107\089\119\080\080\109\087\066\056\098\082\085\087\073\083\118\057\113\066\112\088\106\104\074\106\055\061&quot;,&quot;\065\078\122\079\066\103\061\061&quot;,&quot;\119\100\047\109\067\109\047\074&quot;;&quot;\065\079\114\054\048\089\050\050\077\089\077\057\110\097\069\079&quot;;&quot;\083\083\080\104&quot;,&quot;\065\100\047\076\078\050\068\113\056\116\084\089\048\053\101\111&quot;,&quot;\098\109\122\118\067\053\099\117&quot;;&quot;\071\081\075\048\069\047\105\048\088\097\085\050\067\076\116\115\082\114\083\085\054\076\105\047\068\110\068\103\085\071\061\061&quot;,&quot;\056\108\067\108\107\108\069\101\121\112\080\047\067\097\067\085\119\090\087\061&quot;,&quot;\107\100\050\070\066\116\114\086\067\108\077\047\051\108\077\122&quot;;&quot;\056\100\047\055\121\110\057\082\071\050\070\083\114\098\070\061&quot;,&quot;\086\056\068\122\088\115\090\085&quot;,&quot;\087\053\080\097\119\108\119\076\121\047\067\084\066\089\084\056\067\103\061\061&quot;,&quot;&quot;,&quot;\121\071\061\061&quot;;&quot;\085\097\099\088\067\078\055\061&quot;,&quot;\121\111\071\050\067\120\069\114\121\071\061\061&quot;,&quot;\051\116\101\084\121\085\047\056\119\110\077\121\119\090\122\078&quot;,&quot;\056\110\054\114\065\100\108\079\107\116\047\050\098\122\067\120\051\103\061\061&quot;,&quot;\087\106\074\051\072\076\061\061&quot;,&quot;\080\078\101\076\119\078\056\052&quot;,&quot;\110\073\101\043\108\090\054\116\051\109\067\122\065\100\080\087\047\107\061\061&quot;,&quot;\098\082\103\076\098\053\080\053\107\085\080\121\080\053\050\112\119\078\079\061&quot;;&quot;\119\100\067\084\110\122\114\043\056\076\061\061&quot;,&quot;\090\074\049\084\102\087\120\072\102\089\075\087\049\069\089\065\109\066\105\055\076\051\077\090\115\053\071\078\112\117\088\110\115\116\107\115\099\120\081\083\073\087\106\049\118\068\084\075\087\067\057\102\077\049\101\081\051\097\067\071\099\049\079\055\101\054\066\119\053\102\120\069\048\076\078\113\106\114\051\073\076\090\074\089\112\100\082\066\043\109\089\077\083\082\090\120\116\108\073\121\049\057\080\057\043\118\089\072\109\109\104\083\106\090\068\070\111\079\071\066\101\105\084\078\043\081\112\053\120\070\055\089\105\084\104\114\121\102\071\098\102\069\114\071\077\068\098\065\113\081\114\053\052\099\079\069\055\050\075\082\050\051\117\112\112\066\068\107\099\085\082\104\097\072\087\104\071\057\112\112\052\048\121\108\068\055\101\071\116\101\067\047\050\071\061\061&quot;,&quot;\121\112\047\073&quot;;&quot;\114\118\082\049\072\116\055\048&quot;;&quot;\077\116\047\079\107\085\056\101\065\109\087\061&quot;,&quot;\080\116\122\074\065\071\061\061&quot;;&quot;\110\110\067\079\065\102\050\055\098\085\047\090\051\102\077\054\087\105\087\061&quot;;&quot;\077\066\097\107\070\072\120\103\117\050\056\050\090\080\083\055\106\081\053\051\116\115\107\069\115\054\100\057\106\107\115\117\066\100\108\061&quot;;&quot;\099\069\079\112\098\071\061\061&quot;;&quot;\047\087\108\088\120\055\086\107&quot;,&quot;\098\090\077\074\066\078\101\100&quot;,&quot;\110\073\054\050\047\082\067\075\110\116\069\084\056\085\047\118&quot;;&quot;\080\053\068\097\098\116\089\116\110\079\047\055\098\100\089\102\080\050\073\061&quot;,&quot;\098\053\056\054\065\053\076\061&quot;;&quot;\080\053\099\102\080\082\068\114\065\109\098\061&quot;;&quot;\048\054\102\122\114\043\113\085\099\101\098\061&quot;;&quot;\080\053\122\111\065\053\108\061&quot;,&quot;\098\116\056\074\066\085\086\079&quot;}local function t(t)return T[t+(-750609+780965)]end for t,I in ipairs({{-591094-(-591095),129882-129786};{-774520-(-774521),535065+-534978},{349701+-349613,827034-826938}})do while I[868231-868230]&lt;I[738851-738849]do T[I[-916315+916316]],T[I[-1008108+1008110]],I[944654+-944653],I[-309225+309227]=T[I[708312+-708310]],T[I[226266+-226265]],I[297248-297247]+(-531340+531341),I[282902-282900]-(-476173-(-476174))end end do local t=type local I=table.insert local u={x=662782+-662780,N=-880401-(-880423);[&quot;\057&quot;]=530480+-530465;R=-697180+697187,[&quot;\050&quot;]=913548+-913511;I=212793-212789,J=651006-650956;[&quot;\052&quot;]=-857322+857365;v=17113-17067,h=470666-470608;s=251503+-251441;u=35754+-35709,[&quot;\051&quot;]=858309-858291;g=892534+-892534;t=66779+-66725;T=-501816-(-501865);d=-924389+924428,P=-2774+2803;[&quot;\054&quot;]=-499199+499232,B=231658+-231632,j=-307657+307667;m=-13237+13275;D=861911+-861902;L=433810-433762,[&quot;\056&quot;]=477258-477245;K=604967-604925,[&quot;\055&quot;]=-519026+519082,[&quot;\053&quot;]=-879047-(-879053);Z=-828295+828350,H=318688-318629;i=-205270+205305,A=555904-555877;U=-163007+163030,k=762973+-762957;[&quot;\048&quot;]=343143-343113;[&quot;\047&quot;]=-383744+383765,l=51671+-51651,G=-269411-(-269443);q=-291368+291415;o=-795583+795617;C=233773-233748,r=682102+-682061;a=-596851+596904;f=-804407-(-804458),[&quot;\043&quot;]=-630509+630520;O=453459-453407;V=3128+-3127;S=-671521+671581,Q=749226+-749163,y=27074-27060;b=471576-471548,z=205327-205322,p=223399+-223396,w=-473651+473675;Y=919501+-919465,M=-398336+398353,e=903748-903691,n=528964+-528945;[&quot;\049&quot;]=201658+-201627;X=69111-69067,E=-344442+344482,W=325687+-325675;c=114928-114867,F=907200-907192}local s=table.concat local C=math.floor local e=string.len local V=T local p=string.sub local a=string.char for T=-706310-(-706311),#V,-1023089+1023090 do local i=V[T]if t(i)==&quot;\115\116\114\105\110\103&quot;then local t=e(i)local q={}local B=212059-212058 local W=-954685-(-954685)local P=236465-236465 while B&lt;=t do local T=p(i,B,B)local s=u[T]if s then W=W+s*(824697+-824633)^((420306+-420303)-P)P=P+(771577+-771576)if P==-630846+630850 then P=325837+-325837 local T=C(W/(-489885+555421))local t=C((W%(-217564+283100))/(-842509+842765))local u=W%(-943405+943661)I(q,a(T,t,u))W=-757270-(-757270)end elseif T==&quot;\061&quot;then I(q,a(C(W/(-352455-(-417991)))))if B&gt;=t or p(i,B+(593189+-593188),B+(-619942-(-619943)))~=&quot;\061&quot;then I(q,a(C((W%(412812+-347276))/(781978-781722))))end break end B=B+(-399679-(-399680))end V[T]=s(q)end end end return(function(T,u,s,C,e,V,p,f,U,a,H,q,I,B,R,J,W,h,i,c,y,P,b)J,h,y,W,i,q,P,b,c,R,a,H,B,I,f,U=function(T,t)local u=W(t)local s=function(s)return I(T,{s},t,u)end return s end,function(T,t)local u=W(t)local s=function(s,C,e,V,p,a)return I(T,{s;C,e;V,p,a},t,u)end return s end,function(T,t)local u=W(t)local s=function()return I(T,{},t,u)end return s end,function(T)for t=801097-801096,#T,-725204-(-725205)do i[T[t]]=(-889639-(-889640))+i[T[t]]end if s then local I=s(true)local u=e(I)u[t(62455+-92801)],u[t(-495775+465432)],u[t(-327807+297513)]=T,P,function()return 888847+-408471 end return I else return C({},{[t(984442+-1014785)]=P;[t(-611896-(-581550))]=T,[t(313179+-343473)]=function()return 1520098-1039722 end})end end,{},function()B=(-529485+529486)+B i[B]=-806307-(-806308)return B end,function(T)local t,I=-694248-(-694249),T[-523386+523387]while I do i[I],t=i[I]-(-556179+556180),t+(276312+-276311)if 383784-383784==i[I]then i[I],a[I]=nil,nil end I=T[t]end end,function(T,t)local u=W(t)local s=function(s,C)return I(T,{s;C},t,u)end return s end,function(T)i[T]=i[T]-(-773180+773181)if-746771-(-746771)==i[T]then i[T],a[T]=nil,nil end end,function(T,t)local u=W(t)local s=function(s,C,e,V,p,a,i)return I(T,{s;C,e;V,p,a,i},t,u)end return s end,{},function(T,t)local u=W(t)local s=function(s,C,e,V,p)return I(T,{s;C,e;V;p},t,u)end return s end,-264010-(-264010),function(I,s,C,e)local Q,B,r,E,G,d,n,Y,Z,p,N,F,D,P,L,l,w,k,i,v,S,x,o,M,z,K,W,g,A,j,m,X,O,f while I do if I&lt;-29701+8154378 then if I&lt;505411+3188869 then if I&lt;161721+1656352 then if I&lt;-1004260+2008593 then if I&lt;-976625+1108961 then if I&lt;796926-757802 then if I&lt;-604814-(-634956)then X=t(578122+-608429)v=t(-373151+342873)N=265608+31145686592287 E=3270865447668-(-629503)p=T[X]S=t(-446639-(-416325))l=W d=a[C[512828-512827]]D=a[C[-72273+72275]]F=D(S,N)X=d[F]I=p[X]d=-511252+511253 X=l-d F=t(738503+-768779)D=T[F]S=a[C[-827600-(-827601)]]N=a[C[63837-63835]]j=N(v,E)F=S[j]d=D[F]D={d(i,l)}p=I(B,X,u(D))I=2056018-(-250129)l=nil else l=not k W=W+f B=W&lt;=P B=l and B l=W&gt;=P l=k and l B=l or B l=-527948+13167119 I=B and l B=9978739-(-781734)I=I or B end else if I&lt;191042-138994 then P=f(W,P)I=P and 12940106-583252 or 117593+10253567 else B=a[C[736011+-736009]]W=-235344+235533 i=B*W B=5813490955355-(-169528)p=i+B i=35184371158356-(-930476)I=p%i a[C[-176102+176104]]=I i=a[C[883552-883549]]B=992374+-992373 I=1409549-180093 p=i~=B end end else if I&lt;-716455+1478882 then if I&lt;-214584-(-785566)then n=q()G=t(41432-71740)a[n]=E p=T[G]G=t(-283470+253167)I=p[G]G=728264+-728263 o=194649-194549 p=I(G,o)G=q()z=934072+-934071 a[G]=p Y=-640384-(-640639)I=a[l]o=-434463-(-434463)p=I(o,Y)r=739110-739110 x=573751+-573749 o=q()Y=477157-477156 M=t(-34261+3989)g=598698+-588698 a[o]=p I=a[l]Q=a[G]p=I(Y,Q)Y=q()a[Y]=p p=a[l]Q=p(z,x)p=909612+-909611 I=Q==p p=t(-560629+530336)Q=q()a[Q]=I x=t(218597+-248892)A=T[M]I=t(656317+-686639)m=a[l]Z={m(r,g)}M=A(u(Z))I=j[I]A=t(-392808+362513)L=M..A z=x..L I=I(j,p,z)z=q()x=t(-877306-(-847033))a[z]=I p=T[x]L=b(8441727-566543,{l;n,D;W;B;v;Q;z;G,Y;o,d})x={p(L)}I={u(x)}x=I I=a[Q]I=I and-36957+15262147 or 15949870-174134 else I=T[t(289301-319588)]p={B}end else I=9130643-60733 end end else if I&lt;1403765-(-30841)then if I&lt;-630013+2062906 then if I&lt;440798-(-851050)then W=-166297+166428 B=a[C[221982+-221979]]i=B*W B=335568+-335311 I=-200276+7506439 p=i%B a[C[747801+-747798]]=p else j=v I=9411828-(-59912)o=j N[j]=o j=nil end else N=t(-703137-(-672867))S=T[N]N=t(-859940+829651)F=S[N]I=-147486+2874526 d=F end else if I&lt;626204+854608 then if I&lt;414477-(-1025518)then I=true I=I and 509489+14437877 or-199509+1991247 else I={}p=-534235-(-534235)k=t(-219204+188897)B=I F=290104+24942640185382 f=T[k]i=s[-625768+625769]D=t(190092-220397)l=a[C[-454788+454789]]X=a[C[-175484-(-175486)]]d=X(D,F)k=l[d]P=f[k]f=P(i)P=822356+-822355 I=986683+7635404 W=f-P P=W W=-36091-(-36092)f=W W=857559+-857559 k=f&lt;W W=p-f end else p={}I=T[t(-680246+649930)]end end end else if I&lt;-806091+3126636 then if I&lt;-622240+2625445 then if I&lt;552772+1368849 then if I&lt;1366695-(-517516)then W=t(-496254+465984)X=-425326+4851244123713 l=t(251202-281464)p=T[W]P=a[C[689954+-689953]]f=a[C[1040146-1040144]]k=f(l,X)W=P[k]I=p[W]p={I(B)}p={u(p)}I=T[t(824531-854828)]else X=f F=875424+-875423 p=t(-495614-(-465280))j=t(-487967-(-457655))d=t(-929035-(-898718))d=i[d]v=8413335401964-829087 I=T[p]D=X+F d=d(i,X,D)D=-957844-(-957860)p=I(d,D)d=p D=t(-359674+329367)p=T[D]F=a[C[-14282+14283]]S=a[C[44547-44545]]N=S(j,v)D=F[N]S=-764411-(-764412)I=p[D]F=X-S S=-120566-(-120568)D=F/S p=I(W,D,d)X=nil d=nil I=2942829-(-6799)end else F=-310577-(-310642)d=q()a[d]=p j=b(736226+11556924,{})I=a[l]D=656525+-656522 K=t(299919+-330191)p=I(D,F)I=433446-433446 D=q()F=I I=918002+-918002 a[D]=p N=t(114570+-144843)S=I p=T[N]N={p(j)}p=507219+-507217 I={u(N)}N=I I=N[p]p=t(-368619-(-338285))j=I I=T[p]v=a[W]O=T[K]K=O(j)O=t(66605+-96898)E=v(K,O)v={E()}p=I(u(v))v=q()a[v]=p p=394120-394119 E=a[D]O=E I=62667+7632663 E=633749+-633748 K=E E=-211062-(-211062)w=K&lt;E E=p-K end else if I&lt;3036294-745595 then if I&lt;1638420-(-606101)then D=D+F N=not S X=D&lt;=d X=N and X N=D&gt;=d N=S and N X=N or X N=10809463-(-761517)I=X and N X=-956886+12691421 I=I or X else I=5127641-(-530702)B=a[C[-48482-(-48484)]]W=a[C[-960207+960210]]i=B==W p=i end else W=W+f l=not k p=W&lt;=P p=l and p l=W&gt;=P l=k and l p=l or p l=-589365+613484 I=p and l p=4873687-(-31931)I=I or p end end else if I&lt;2743049-(-142453)then if I&lt;3011343-201406 then if I&lt;1717258-(-958711)then i=s[-719827+719828]d=16307397250520-585775 I=a[C[-117474-(-117475)]]X=14388098955003-(-254768)p=I(i)B=p D=t(847422-877772)p=a[C[-648162-(-648164)]]P=a[C[197495+-197492]]F=17949647659814-(-720256)f=a[C[445835-445831]]l=t(254430+-284783)k=f(l,X)X=t(-83646-(-53319))W=P[k]I=p[W]N=9620436765785-(-754982)p=I(B)W=p S=t(-691620+661354)p=a[C[108483-108478]]f=a[C[82247-82244]]k=a[C[756729+-756725]]l=k(X,d)P=f[l]I=p[P]P=a[C[77891-77885]]p=I(P)P=p I=a[C[-963022-(-963029)]]p=I(P)f=p p=a[C[183989-183981]]l=a[C[-915377-(-915380)]]X=a[C[808682+-808678]]d=X(D,F)k=l[d]X=t(-982027-(-951720))I=p[k]l=T[X]d=a[C[859680+-859677]]D=a[C[649305-649301]]F=D(S,N)X=d[F]k=l[X]l={k(W)}p=I(f,u(l))k=p p=a[C[857195+-857187]]F=t(-1064076-(-1033737))S=7148569511732-473652 X=a[C[-194685-(-194688)]]d=a[C[-689167-(-689171)]]D=d(F,S)l=X[D]I=p[l]p=I(W,k)I=a[C[-548384+548393]]l=p p=I(l)I=a[C[-621558-(-621568)]]X=p p=I(X)d=p p=-388319+388320 I=d[p]p={I}I=T[t(764734-795045)]else I=D I=d and 1106845-(-815743)or 112302+4442009 p=d end else a[B]=E I=a[B]I=I and 5704936-(-245104)or-614682+13176042 end else if I&lt;805276+2330011 then if I&lt;195304+2790365 then f=f+k p=f&lt;=P X=not l p=X and p X=f&gt;=P X=l and X p=X or p X=-790765+2677402 I=p and X p=915762+15490922 I=I or p else i=t(-42551+12231)W=-580428+580428 I=T[i]B=a[C[-963489+963497]]i=I(B,W)I=293800+4107380 end else W=t(133113-163383)B=T[W]I=T[t(-193567-(-163227))]W=t(94772-125103)i=B[W]W=a[C[-592085-(-592086)]]B={i(W)}p={u(B)}end end end end else if I&lt;-119685+6060223 then if I&lt;4338933-(-714613)then if I&lt;-478600+5010790 then if I&lt;-410497+4834020 then if I&lt;4318573-297909 then B=t(190385+-220671)W=2462535-(-781346)i=B^W p=12102879-923487 I=p-i i=I p=t(486037+-516321)I=p/i p={I}I=T[t(-616726-(-586452))]else W=a[C[170910+-170901]]P=W B=-440741-(-440742)W=466823+-466822 I={}i=I f=W W=-912484-(-912484)k=f&lt;W W=B-f I=248860-214545 end else f=826938+35184371261894 I={}a[C[626091+-626089]]=I X=t(-424697+394421)p=a[C[970158+-970155]]P=p D=563811-563810 l=-617623-(-617878)p=B%f a[C[-904262-(-904266)]]=p k=B%l l=668617-668615 f=k+l a[C[-914065-(-914070)]]=f l=T[X]X=t(460309-490632)k=l[X]l=k(i)F=D k=t(964336+-994632)d=l W[B]=k I=716677+1311907 D=-697090+697090 k=797970-797834 S=F&lt;D X=499483+-499482 D=X-F end else if I&lt;5946691-978991 then if I&lt;-89987+4780771 then D=t(-216087-(-185798))d=T[D]I=-913047+2835635 p=d else p={B}I=T[t(-420136-(-389856))]end else I=a[C[1018311+-1018310]]B=t(-255262+224980)B=I[B]i=a[C[633645+-633643]]p={B(I,i)}p={u(p)}I=T[t(124092+-154356)]end end else if I&lt;5791316-218494 then if I&lt;875634+4243589 then if I&lt;767515+4306435 then w=t(-752953-(-722688))I=T[w]w=t(-235686-(-205373))T[w]=I I=-822637+1638437 else i=s[682511+-682510]I=a[C[-177481+177482]]W=I B=s[-4774-(-4776)]I=W[B]I=I and 14837438-290350 or 4653620-208210 end else I=-934762+8630092 z=c(z)x=nil o=c(o)G=c(G)Q=c(Q)Y=c(Y)n=c(n)end else if I&lt;314641+5526766 then if I&lt;-571040+6210019 then l=a[C[184540-184539]]F=9675114180652-(-794989)D=t(-602345-(-572003))X=a[C[525185-525183]]d=X(D,F)k=l[d]I=B[k]p={I}I=T[t(-35073-(-4718))]else I=p and 615382+15877962 or 6974158-960239 end else I=761411+6259019 M=823091+-823090 A=x[M]L=A end end end else if I&lt;-1015065+8389271 then if I&lt;7405130-381825 then if I&lt;963434+5445482 then if I&lt;6952877-959172 then I=15604010-156861 else I=a[C[485852-485845]]I=I and 2459268-(-605874)or 4083465-(-317715)end else a[B]=L r=848310+-848309 Z=a[Y]m=Z+r M=x[m]A=F+M M=13168-12912 I=A%M m=a[o]M=S+m m=631233-630977 F=I I=4808657-(-708653)A=M%m S=A end else if I&lt;6706199-(-535584)then if I&lt;7472174-307970 then w=-97813-(-97813)v=#N I=13334464-(-630200)j=v==w else w=-96585+96591 K=-7174+7175 I=a[l]O=I(K,w)I=t(-111026-(-80761))T[I]=O w=t(-294209-(-263944))K=T[w]w=-813297-(-813299)I=K&gt;w I=I and 12618769-(-113283)or 5599547-544666 end else B=a[C[-555824-(-555827)]]W=531411-531410 i=B~=W I=i and 10265173-(-595366)or 756384-(-473072)end end else if I&lt;8143051-386582 then if I&lt;8153052-487412 then if I&lt;287579+7324844 then I=a[C[751403-751402]]p=I()I=a[C[-564863+564865]]i=p p=I(i)i=p I=T[t(927855-958156)]p={i}else i=a[C[-85609+85610]]p=#i i=608266-608266 I=p==i I=I and 594064-528375 or 2236685-(-990418)end else E=E+K p=E&lt;=O n=not w p=n and p n=E&gt;=O n=w and n p=n or p n=1139975-951606 I=p and n p=10604355-(-57740)I=I or p end else if I&lt;7815811-(-88903)then if I&lt;8173672-348173 then w=-563478+563478 v=#N j=v==w I=j and 535936+10761881 or 14933251-968587 else P=-691880+691881 B=a[C[549743-549742]]f=670221-670219 W=B(P,f)B=759774-759773 i=W==B I=i and 5340764-(-317579)or 2446867-160013 p=i end else l=t(563193-593501)X=t(247359-277629)k=p p=T[l]l=t(-741755-(-711452))I=p[l]S=t(384855+-415125)l=q()a[l]=I p=T[X]X=t(-793070+762809)I=p[X]F=T[S]X=I d=F D=I I=F and-1041533+2475452 or 2625840-(-101200)end end end end end else if I&lt;11904335-(-779746)then if I&lt;10654030-(-181622)then if I&lt;8957828-(-117431)then if I&lt;798016+7724992 then if I&lt;-142419+8566675 then if I&lt;-701849+8920570 then O=F==S I=564585+2320312 E=O else I=-394462+9464372 end else a[C[-209536+209541]]=p i=nil I=-1036607+7050526 end else if I&lt;8370499-(-694502)then if I&lt;9419648-573062 then W=W+f p=W&lt;=P l=not k p=l and p l=W&gt;=P l=k and l p=l or p l=16320582-833286 I=p and l p=1029291-(-851344)I=I or p else I=A p=L I=-309682+17056697 end else I=true I=I and 8096547-856073 or 11649264-(-518735)end end else if I&lt;10509928-6656 then if I&lt;10804268-522471 then if I&lt;9710435-476356 then I=nil B=I p=t(-305004-(-274731))k=H(10264142-(-876426),{C[767364+-767361];P})I=T[p]l={I(k)}p=l[-355442+355443]W=p I=not W f=l[1037285-1037283]B=f I=I and 1824+10550145 or 6030359-434472 else o=not G v=v+n j=v&lt;=w j=o and j o=v&gt;=w o=G and o j=o or j o=-890224+2185788 I=j and o j=-1030264+8155833 I=I or j end else p={B}I=T[t(-242833+212541)]end else if I&lt;10418240-(-267054)then if I&lt;73717+10512488 then k=t(-196294+166013)I=T[k]S=25882104708860-(-700440)X=a[C[-289459-(-289460)]]d=a[C[95561+-95559]]F=t(-990779+960477)D=d(F,S)l=X[D]k=I(l,B)I=nil p={I}I=T[t(-1025782-(-995507))]else O=a[B]E=O I=O and-576471+8736651 or 292052+2592845 end else I=a[C[-124659-(-124669)]]B=a[C[-487291-(-487302)]]i[I]=B I=a[C[-747776+747788]]B={I(i)}I=T[t(869428-899732)]p={u(B)}end end end else if I&lt;-681077+12426368 then if I&lt;323573+10915163 then if I&lt;614132+10441509 then if I&lt;-138275+11023610 then B=a[C[-863886+863889]]W=-1010921+1010953 F=-1038296+1038309 i=B%W P=a[C[-570886-(-570890)]]l=a[C[-686739-(-686741)]]j=a[C[-324988-(-324991)]]N=j-i d=756395-756393 j=-933983+934015 S=N/j D=F-S X=d^D k=l/X f=P(k)P=4295871936-904640 W=f%P f=70911-70909 F=-154685-(-154941)P=f^i X=-957991+957992 B=W/P d=946132-945876 P=a[C[973657+-973653]]l=B%X I=988812+2238291 X=4295292669-325373 k=l*X f=P(k)l=893390+-827854 P=a[C[765924-765920]]k=P(B)W=f+k f=-930148+995684 P=W%f B=nil k=W-P f=k/l l=-56805+57061 W=nil k=P%l X=P-k l=X/d d=878708-878452 X=f%d D=f-X P=nil d=D/F i=nil f=nil D={k,l,X;d}k=nil d=nil X=nil a[C[544828-544827]]=D l=nil else Z=290972-290971 A=I m=x[Z]Z=false M=m==Z L=M I=M and 17174681-557365 or 9786705-783098 end else I=a[C[762139+-762138]]i=a[C[626064-626062]]B=t(-511176-(-480824))B=I[B]p={B(I,i)}I=T[t(-235199+204908)]p={u(p)}end else if I&lt;10656011-(-1005907)then if I&lt;10908620-(-577527)then o={}G=t(182731+-213059)j={}v=q()Q=t(535715-566061)w=y(6877509-(-752902),{v,d,D;f})n=q()a[v]=j j=q()a[j]=w l=nil M=nil w={}X=nil a[n]=w w=T[G]x=t(193055-223404)z=a[n]f=c(f)Y={[Q]=z,[x]=M}W=nil k=nil G=w(o,Y)a[B]=G N=nil w=R(5053980-(-21367),{n,v,S;d;D;j})a[P]=w F=nil f=t(-515635+485325)n=c(n)j=c(j)S=c(S)F=914326+25933636467606 d=c(d)w=7148027006684-1016284 W=T[f]l=a[B]X=a[P]v=c(v)f=t(-840242-(-809912))D=c(D)D=t(332547-362846)f=W[f]d=X(D,F)k=l[d]f=f(W,k)v=t(-963730-(-933432))W=q()a[W]=f k=t(-437536+407207)f=T[k]F=t(-667444-(-637175))D=T[F]S=a[B]N=a[P]j=N(v,w)F=S[j]v=32818111787723-(-575719)d=D[F]F=a[B]S=a[P]j=t(582886-613176)N=S(j,v)j=-43472+9156553538167 D=F[N]X=d[D]w=t(530861+-561138)D=a[B]F=a[P]N=t(-89589-(-59241))S=F(N,j)n=-878919+5404955194139 d=D[S]l=X[d]k=f(l)o=31965100316215-(-287725)l=t(-461303-(-430974))f=q()a[f]=k k=T[l]S=t(77787+-108056)F=T[S]N=a[B]j=a[P]v=j(w,n)S=N[v]v=t(-389794-(-359526))D=F[S]S=a[B]N=a[P]w=1727277869240-484756 j=N(v,w)F=S[j]v=9910783906716-278933 d=D[F]F=a[B]S=a[P]j=t(35922-66263)N=S(j,v)D=F[N]X=d[D]N=t(-949758-(-919489))l=k(X)X=t(376789+-407118)n=t(574231-604564)k=q()a[k]=l l=T[X]S=T[N]j=a[B]v=a[P]w=v(n,o)N=j[w]I=T[t(69267+-99604)]F=S[N]w=t(820829-851154)N=a[B]n=31039807170903-(-134943)j=a[P]v=j(w,n)S=N[v]w=-457209+18267039554355 D=F[S]S=a[B]N=a[P]v=t(-707064-(-676729))j=N(v,w)F=S[j]N=23260868054108-(-974323)d=D[F]S=t(656313+-686598)X=l(d)l=q()a[l]=X d=a[B]D=a[P]F=D(S,N)X=d[F]S=U(15337067-(-988646),{B;P})F=H(632426+810782,{B,P})d=q()a[d]=X N=U(17404819-1016798,{B,P})X=q()D=b(13610939-269312,{B;P})x=-455405+22581955091456 a[X]=D D=q()a[D]=F F=q()v=J(17057481-771117,{B;P;W})a[F]=S S=q()a[S]=N j=h(2881632-549379,{X,f,B,P;l;d,F,k;D,S})N=q()a[N]=j j=q()a[j]=v v=y(-895278+8365446,{j;N})z=t(-210015-(-179668))o=a[B]Y=a[P]Q=Y(z,x)n=o[Q]w={[n]=v}p={w}else K=t(959789-990065)X=D O=T[K]K=t(-286984+256724)E=O[K]O=E(i,X)X=nil E=a[C[-28132+28138]]I=886789+1141795 K=E()v=O+K j=v+k v=892438-892182 N=j%v K=350290-350289 k=N v=W[B]O=k+K E=P[O]j=v..E W[B]=j end else l=nil P=nil I=747856-14836 k=nil end end else if I&lt;12714872-369610 then if I&lt;11807842-(-481665)then if I&lt;-225471+12376479 then p=t(78730-109050)i=t(590730+-621084)I=T[p]p=I(i)p={}I=T[t(-728123+697797)]else p={}I=T[t(-182763-(-152425))]end else B=t(852844-883132)W=9918598-(-43)i=B^W p=-421380+9401020 I=p-i i=I p=t(905697-936015)I=p/i p={I}I=T[t(760534-790866)]end else if I&lt;13458882-881145 then if I&lt;-782297+13272987 then k=P X=t(-704964-(-674694))N=26146589210773-35078 l=T[X]d=a[C[-653413+653414]]D=a[C[140277+-140275]]S=t(264925-295276)F=D(S,N)X=d[F]I=l[X]l=I(B,k)I=1074107-1034812 k=nil else I=true I=15777058-295593 end else d=78942-78687 I=a[C[-97953+97954]]X=-271489+271489 B=W l=I(X,d)i[B]=l B=nil I=707439+-673124 end end end end else if I&lt;14965050-(-520711)then if I&lt;15061425-411006 then if I&lt;13766784-249086 then if I&lt;976249+12366530 then if I&lt;1033393+11963480 then K=t(-603306-(-573034))I=T[K]n=t(416215+-446528)w=T[n]K=I(w)I=t(-174208+143943)T[I]=K I=-875519+1691319 else i=s[-172002+172003]B=t(123611+-153918)p=T[B]k=t(841295-871578)l=1039699+2857131714527 W=a[C[780902+-780901]]P=a[C[-235241-(-235243)]]f=P(k,l)B=W[f]I=p[B]B=#i p=I(B)B=p p=-55867-(-55868)W=#i P=W W=-925161-(-925162)I=-380301+2686448 f=W W=-373260-(-373260)k=f&lt;W W=p-f end else I=true p={}a[C[-511372+511373]]=I I=T[t(96381-126726)]end else if I&lt;14783161-237312 then if I&lt;-55280+13972149 then I=-442857+8869576 W=a[C[-783899-(-783905)]]B=W==i p=B else w=#N v=-966364+966365 j=W(v,w)o=842369+-842368 v=k(N,j)j=nil w=a[S]G=v-o n=l(G)w[v]=n v=nil I=8577167-804587 end else I=338550+394470 end end else if I&lt;15479757-277362 then if I&lt;382697+14546482 then if I&lt;15736626-980137 then B=q()I=true i=s W=t(-575411-(-545135))P=q()a[B]=I f=q()p=T[W]W=t(-420679+390355)I=p[W]W=q()a[W]=I I=y(12122763-14758,{})l=t(-1038360-(-1008087))a[P]=I X=H(12879077-(-466671),{f})I=false a[f]=I k=T[l]l=k(X)I=l and 15918847-1043990 or-954906+8883585 p=l else k=a[f]p=k I=430303+7498376 end else p=t(-976478+946213)i=t(-223679-(-193366))I=T[p]p=T[i]i=t(-383249+352936)T[i]=I i=t(81995+-112260)T[i]=p I=1445607-9133 i=a[C[827210-827209]]B=i()end else if I&lt;488237+14973010 then if I&lt;260699+14970172 then L=a[B]I=L and-38733+11092875 or 16707534-(-39481)p=L else X=nil S=nil P=c(P)j=nil W=c(W)j=-92695-(-92696)I=10438060-966320 D=c(D)F=nil N=nil v=c(v)S=q()N={}W=nil B=c(B)d=c(d)B=nil P=q()X=t(-780987-(-750717))k=nil d=t(154253+-184529)a[P]=B l=c(l)f=c(f)B=q()a[B]=W k=t(949242+-979550)f=T[k]F={}k=t(968042-998357)W=f[k]D=q()f=q()l=t(452773+-483081)a[f]=W k=T[l]l=t(560991-591294)W=k[l]l=T[X]X=t(202294-232625)k=l[X]X=T[d]d=t(693729-724073)l=X[d]d=q()X=-532860-(-532860)a[d]=X X=144348-144346 a[D]=X X={}v=1010387-1010131 a[S]=F F=304581+-304581 w=v v=-520903+520904 n=v v=-820806-(-820806)G=n&lt;v v=j-n end else I=U(15886462-182311,{P})O={I()}p={u(O)}I=T[t(38963+-69263)]end end end else if I&lt;15753671-(-595060)then if I&lt;14975862-(-932731)then if I&lt;-960800+16708906 then if I&lt;65917+15443083 then X=938327+-938326 d=t(-802621-(-772345))l=W E=732618+9320981127978 p=#B j=28393739743938-950045 I=p+X X=T[d]D=a[C[-348954-(-348955)]]N=t(-804432+774096)F=a[C[-357252+357254]]S=F(N,j)d=D[S]p=X[d]F=t(-225434-(-195127))v=t(896808+-927129)D=T[F]S=a[C[53063+-53062]]N=a[C[819209+-819207]]j=N(v,E)F=S[j]d=D[F]D={d(i,l)}X=p(u(D))l=nil B[I]=X I=7665823-(-956264)else I=1277177-(-159297)end else A=a[B]I=A and-707801+6638519 or-363007+7383437 L=A end else if I&lt;-164795+16460501 then if I&lt;15966851-(-319435)then d=15433928084390-(-561260)p=t(-415414+385133)X=t(-79838+49559)I=T[p]f=a[C[956698+-956697]]k=a[C[491171+-491169]]l=k(X,d)B=f[l]f=a[P]p=I(B,f)I=nil p={I}I=T[t(-306666-(-276399))]else p=a[C[562135-562134]]P=18925850330829-631904 W=t(-581453-(-551144))i=a[C[227902+-227900]]B=i(W,P)i=q()I=p[B]p=t(968348+-998621)a[i]=I I=T[p]W=J(4332003-(-670089),{C[-922795+922798],i})P={I(W)}B=P[-8301-(-8303)]p=P[-46740+46741]W=p I=not W P=q()a[P]=B I=I and 16186868-16614 or 8691470-(-393642)end else X=-744210+19805095952152 i=s[-18324+18325]W=t(-719581-(-689274))I=#i p=T[W]l=t(559494-589813)B=I P=a[C[135050-135049]]f=a[C[64770+-64768]]k=f(l,X)W=P[k]I=p[W]f=324806+-324804 P=878487-878485 W=B/P p=I(W)k=f W=p f=210668+-210668 p=-1016199+1016200 l=k&lt;f P=B I=-363653+3313281 f=p-k end end else if I&lt;-265931+16800917 then if I&lt;17125968-671770 then if I&lt;-934560+17323106 then I={}X=-343358+20421467316835 l=t(153836+-184099)W=t(-157719+127443)D=-646680+1280541925484 B=I i=s[199172-199171]p=T[W]P=a[C[908834-908833]]f=a[C[326695+-326693]]k=f(l,X)W=P[k]I=p[W]d=t(327076-357347)k=a[C[899942-899941]]l=a[C[554093+-554091]]X=l(d,D)f=k[X]k={I(i,f)}W=k[256020+-256018]p=k[-693273-(-693274)]P=k[-899913-(-899916)]I=-31341-(-70636)f=p else p={W}I=T[t(614066+-644372)]end else P=t(-964015-(-933743))p=t(-246550+216216)X=t(460173-490446)I=T[p]d=H(-370681+4126664,{})i=a[C[377009+-377005]]W=T[P]l=T[X]X={l(d)}l=-584013+584015 k={u(X)}f=k[l]P=W(f)W=t(734872-765165)B=i(P,W)i={B()}p=I(u(i))i=p B=a[C[1039695-1039690]]p=B I=B and 13229308-(-502088)or 90257+8336462 end else if I&lt;16997143-251581 then if I&lt;-579144+17249175 then Z=-560903+560905 m=x[Z]Z=a[z]I=8740515-(-263092)M=m==Z L=M else I=true I=I and-460030+8883345 or 16393795-912330 end else I=272584+5244726 a[B]=p end end end end end end end I=#e return u(p)end,function(T,t)local u=W(t)local s=function(...)return I(T,{...},t,u)end return s end,function(T,t)local u=W(t)local s=function(s,C,e,V)return I(T,{s,C,e;V},t,u)end return s end return(f(15717660-981561,{}))(u(p))end)(getfenv and getfenv()or _ENV,unpack or table[t(110737-141026)],newproxy,setmetatable,getmetatable,select,{...})end)(...)</ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="Folder" referent="RBX4154EAE4A49D445793FB93E70AEFBFDE">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<string name="Name">Libs</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="ModuleScript" referent="RBX08192B70942E4B53A669936B73627DCB">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">SHA256</string>
					<string name="ScriptGuid">{8B319904-0E58-4DC0-AF8F-926E4E2F8368}</string>
					<ProtectedString name="Source"><![CDATA[--------------------------------------------------------------------------------------------------------------------------
-- sha2.lua
--------------------------------------------------------------------------------------------------------------------------
-- VERSION: 12 (2022-02-23)
-- AUTHOR:  Egor Skriptunoff
-- LICENSE: MIT (the same license as Lua itself)
-- URL:     https://github.com/Egor-Skriptunoff/pure_lua_SHA
--
-- DESCRIPTION:
--    This module contains functions to calculate SHA digest:
--       MD5, SHA-1,
--       SHA-224, SHA-256, SHA-512/224, SHA-512/256, SHA-384, SHA-512,
--       SHA3-224, SHA3-256, SHA3-384, SHA3-512, SHAKE128, SHAKE256,
--       HMAC,
--       BLAKE2b, BLAKE2s, BLAKE2bp, BLAKE2sp, BLAKE2Xb, BLAKE2Xs,
--       BLAKE3, BLAKE3_KDF
--    Written in pure Lua.
--    Compatible with:
--       Lua 5.1, Lua 5.2, Lua 5.3, Lua 5.4, Fengari, LuaJIT 2.0/2.1 (any CPU endianness).
--    Main feature of this module: it was heavily optimized for speed.
--    For every Lua version the module contains particular implementation branch to get benefits from version-specific features.
--       - branch for Lua 5.1 (emulating bitwise operators using look-up table)
--       - branch for Lua 5.2 (using bit32/bit library), suitable for both Lua 5.2 with native "bit32" and Lua 5.1 with external library "bit"
--       - branch for Lua 5.3/5.4 (using native 64-bit bitwise operators)
--       - branch for Lua 5.3/5.4 (using native 32-bit bitwise operators) for Lua built with LUA_INT_TYPE=LUA_INT_INT
--       - branch for LuaJIT without FFI library (useful in a sandboxed environment)
--       - branch for LuaJIT x86 without FFI library (LuaJIT x86 has oddity because of lack of CPU registers)
--       - branch for LuaJIT 2.0 with FFI library (bit.* functions work only with Lua numbers)
--       - branch for LuaJIT 2.1 with FFI library (bit.* functions can work with "int64_t" arguments)
--
--
-- USAGE:
--    Input data should be provided as a binary string: either as a whole string or as a sequence of substrings (chunk-by-chunk loading, total length < 9*10^15 bytes).
--    Result (SHA digest) is returned in hexadecimal representation as a string of lowercase hex digits.
--    Simplest usage example:
--       local sha = require("sha2")
--       local your_hash = sha.sha256("your string")
--    See file "sha2_test.lua" for more examples.
--
--
-- CHANGELOG:
--  version     date      description
--  -------  ----------   -----------
--    12     2022-02-23   Now works in Luau (but NOT optimized for speed)
--    11     2022-01-09   BLAKE3 added
--    10     2022-01-02   BLAKE2 functions added
--     9     2020-05-10   Now works in OpenWrt's Lua (dialect of Lua 5.1 with "double" + "invisible int32")
--     8     2019-09-03   SHA-3 functions added
--     7     2019-03-17   Added functions to convert to/from base64
--     6     2018-11-12   HMAC added
--     5     2018-11-10   SHA-1 added
--     4     2018-11-03   MD5 added
--     3     2018-11-02   Bug fixed: incorrect hashing of long (2 GByte) data streams on Lua 5.3/5.4 built with "int32" integers
--     2     2018-10-07   Decreased module loading time in Lua 5.1 implementation branch (thanks to Peter Melnichenko for giving a hint)
--     1     2018-10-06   First release (only SHA-2 functions)
-----------------------------------------------------------------------------


local print_debug_messages = false  -- set to true to view some messages about your system's abilities and implementation branch chosen for your system

local unpack, table_concat, byte, char, string_rep, sub, gsub, gmatch, string_format, floor, ceil, math_min, math_max, tonumber, type, math_huge =
	table.unpack or unpack, table.concat, string.byte, string.char, string.rep, string.sub, string.gsub, string.gmatch, string.format, math.floor, math.ceil, math.min, math.max, tonumber, type, math.huge


--------------------------------------------------------------------------------
-- EXAMINING YOUR SYSTEM
--------------------------------------------------------------------------------

local function get_precision(one)
	-- "one" must be either float 1.0 or integer 1
	-- returns bits_precision, is_integer
	-- This function works correctly with all floating point datatypes (including non-IEEE-754)
	local k, n, m, prev_n = 0, one, one
	while true do
		k, prev_n, n, m = k + 1, n, n + n + 1, m + m + k % 2
		if k > 256 or n - (n - 1) ~= 1 or m - (m - 1) ~= 1 or n == m then
			return k, false   -- floating point datatype
		elseif n == prev_n then
			return k, true    -- integer datatype
		end
	end
end

-- Make sure Lua has "double" numbers
local x = 2/3
local Lua_has_double = x * 5 > 3 and x * 4 < 3 and get_precision(1.0) >= 53
assert(Lua_has_double, "at least 53-bit floating point numbers are required")

-- Q:
--    SHA2 was designed for FPU-less machines.
--    So, why floating point numbers are needed for this module?
-- A:
--    53-bit "double" numbers are useful to calculate "magic numbers" used in SHA.
--    I prefer to write 50 LOC "magic numbers calculator" instead of storing more than 200 constants explicitly in this source file.

local int_prec, Lua_has_integers = get_precision(1)
local Lua_has_int64 = Lua_has_integers and int_prec == 64
local Lua_has_int32 = Lua_has_integers and int_prec == 32
assert(Lua_has_int64 or Lua_has_int32 or not Lua_has_integers, "Lua integers must be either 32-bit or 64-bit")

-- Q:
--    Does it mean that almost all non-standard configurations are not supported?
-- A:
--    Yes.  Sorry, too many problems to support all possible Lua numbers configurations.
--       Lua 5.1/5.2    with "int32"               will not work.
--       Lua 5.1/5.2    with "int64"               will not work.
--       Lua 5.1/5.2    with "int128"              will not work.
--       Lua 5.1/5.2    with "float"               will not work.
--       Lua 5.1/5.2    with "double"              is OK.          (default config for Lua 5.1, Lua 5.2, LuaJIT)
--       Lua 5.3/5.4    with "int32"  + "float"    will not work.
--       Lua 5.3/5.4    with "int64"  + "float"    will not work.
--       Lua 5.3/5.4    with "int128" + "float"    will not work.
--       Lua 5.3/5.4    with "int32"  + "double"   is OK.          (config used by Fengari)
--       Lua 5.3/5.4    with "int64"  + "double"   is OK.          (default config for Lua 5.3, Lua 5.4)
--       Lua 5.3/5.4    with "int128" + "double"   will not work.
--   Using floating point numbers better than "double" instead of "double" is OK (non-IEEE-754 floating point implementation are allowed).
--   Using "int128" instead of "int64" is not OK: "int128" would require different branch of implementation for optimized SHA512.

-- Check for LuaJIT and 32-bit bitwise libraries
local is_LuaJIT = ({false, [1] = true})[1] and _VERSION ~= "Luau" and (type(jit) ~= "table" or jit.version_num >= 20000)  -- LuaJIT 1.x.x and Luau are treated as vanilla Lua 5.1/5.2
local is_LuaJIT_21  -- LuaJIT 2.1+
local LuaJIT_arch
local ffi           -- LuaJIT FFI library (as a table)
local b             -- 32-bit bitwise library (as a table)
local library_name

if is_LuaJIT then
	-- Assuming "bit" library is always available on LuaJIT
	b = require"bit"
	library_name = "bit"
	-- "ffi" is intentionally disabled on some systems for safety reason
	local LuaJIT_has_FFI, result = pcall(require, "ffi")
	if LuaJIT_has_FFI then
		ffi = result
	end
	is_LuaJIT_21 = not not loadstring"b=0b0"
	LuaJIT_arch = type(jit) == "table" and jit.arch or ffi and ffi.arch or nil
else
	-- For vanilla Lua, "bit"/"bit32" libraries are searched in global namespace only.  No attempt is made to load a library if it's not loaded yet.
	for _, libname in ipairs(_VERSION == "Lua 5.2" and {"bit32", "bit"} or {"bit", "bit32"}) do
		if type(_G[libname]) == "table" and _G[libname].bxor then
			b = _G[libname]
			library_name = libname
			break
		end
	end
end

--------------------------------------------------------------------------------
-- You can disable here some of your system's abilities (for testing purposes)
--------------------------------------------------------------------------------
-- is_LuaJIT = nil
-- is_LuaJIT_21 = nil
-- ffi = nil
-- Lua_has_int32 = nil
-- Lua_has_int64 = nil
-- b, library_name = nil
--------------------------------------------------------------------------------

if print_debug_messages then
	-- Printing list of abilities of your system
	print("Abilities:")
	print("   Lua version:               "..(is_LuaJIT and "LuaJIT "..(is_LuaJIT_21 and "2.1 " or "2.0 ")..(LuaJIT_arch or "")..(ffi and " with FFI" or " without FFI") or _VERSION))
	print("   Integer bitwise operators: "..(Lua_has_int64 and "int64" or Lua_has_int32 and "int32" or "no"))
	print("   32-bit bitwise library:    "..(library_name or "not found"))
end

-- Selecting the most suitable implementation for given set of abilities
local method, branch
if is_LuaJIT and ffi then
	method = "Using 'ffi' library of LuaJIT"
	branch = "FFI"
elseif is_LuaJIT then
	method = "Using special code for sandboxed LuaJIT (no FFI)"
	branch = "LJ"
elseif Lua_has_int64 then
	method = "Using native int64 bitwise operators"
	branch = "INT64"
elseif Lua_has_int32 then
	method = "Using native int32 bitwise operators"
	branch = "INT32"
elseif library_name then   -- when bitwise library is available (Lua 5.2 with native library "bit32" or Lua 5.1 with external library "bit")
	method = "Using '"..library_name.."' library"
	branch = "LIB32"
else
	method = "Emulating bitwise operators using look-up table"
	branch = "EMUL"
end

if print_debug_messages then
	-- Printing the implementation selected to be used on your system
	print("Implementation selected:")
	print("   "..method)
end


--------------------------------------------------------------------------------
-- BASIC 32-BIT BITWISE FUNCTIONS
--------------------------------------------------------------------------------

local AND, OR, XOR, SHL, SHR, ROL, ROR, NOT, NORM, HEX, XOR_BYTE
-- Only low 32 bits of function arguments matter, high bits are ignored
-- The result of all functions (except HEX) is an integer inside "correct range":
--    for "bit" library:    (-2^31)..(2^31-1)
--    for "bit32" library:        0..(2^32-1)

if branch == "FFI" or branch == "LJ" or branch == "LIB32" then

	-- Your system has 32-bit bitwise library (either "bit" or "bit32")

	AND  = b.band                -- 2 arguments
	OR   = b.bor                 -- 2 arguments
	XOR  = b.bxor                -- 2..5 arguments
	SHL  = b.lshift              -- second argument is integer 0..31
	SHR  = b.rshift              -- second argument is integer 0..31
	ROL  = b.rol or b.lrotate    -- second argument is integer 0..31
	ROR  = b.ror or b.rrotate    -- second argument is integer 0..31
	NOT  = b.bnot                -- only for LuaJIT
	NORM = b.tobit               -- only for LuaJIT
	HEX  = b.tohex               -- returns string of 8 lowercase hexadecimal digits
	assert(AND and OR and XOR and SHL and SHR and ROL and ROR and NOT, "Library '"..library_name.."' is incomplete")
	XOR_BYTE = XOR               -- XOR of two bytes (0..255)

elseif branch == "EMUL" then

	-- Emulating 32-bit bitwise operations using 53-bit floating point arithmetic

	function SHL(x, n)
		return (x * 2^n) % 2^32
	end

	function SHR(x, n)
		x = x % 2^32 / 2^n
		return x - x % 1
	end

	function ROL(x, n)
		x = x % 2^32 * 2^n
		local r = x % 2^32
		return r + (x - r) / 2^32
	end

	function ROR(x, n)
		x = x % 2^32 / 2^n
		local r = x % 1
		return r * 2^32 + (x - r)
	end

	local AND_of_two_bytes = {[0] = 0}  -- look-up table (256*256 entries)
	local idx = 0
	for y = 0, 127 * 256, 256 do
		for x = y, y + 127 do
			x = AND_of_two_bytes[x] * 2
			AND_of_two_bytes[idx] = x
			AND_of_two_bytes[idx + 1] = x
			AND_of_two_bytes[idx + 256] = x
			AND_of_two_bytes[idx + 257] = x + 1
			idx = idx + 2
		end
		idx = idx + 256
	end

	local function and_or_xor(x, y, operation)
		-- operation: nil = AND, 1 = OR, 2 = XOR
		local x0 = x % 2^32
		local y0 = y % 2^32
		local rx = x0 % 256
		local ry = y0 % 256
		local res = AND_of_two_bytes[rx + ry * 256]
		x = x0 - rx
		y = (y0 - ry) / 256
		rx = x % 65536
		ry = y % 256
		res = res + AND_of_two_bytes[rx + ry] * 256
		x = (x - rx) / 256
		y = (y - ry) / 256
		rx = x % 65536 + y % 256
		res = res + AND_of_two_bytes[rx] * 65536
		res = res + AND_of_two_bytes[(x + y - rx) / 256] * 16777216
		if operation then
			res = x0 + y0 - operation * res
		end
		return res
	end

	function AND(x, y)
		return and_or_xor(x, y)
	end

	function OR(x, y)
		return and_or_xor(x, y, 1)
	end

	function XOR(x, y, z, t, u)          -- 2..5 arguments
		if z then
			if t then
				if u then
					t = and_or_xor(t, u, 2)
				end
				z = and_or_xor(z, t, 2)
			end
			y = and_or_xor(y, z, 2)
		end
		return and_or_xor(x, y, 2)
	end

	function XOR_BYTE(x, y)
		return x + y - 2 * AND_of_two_bytes[x + y * 256]
	end

end

HEX = HEX
	or
	pcall(string_format, "%x", 2^31) and
	function (x)  -- returns string of 8 lowercase hexadecimal digits
		return string_format("%08x", x % 4294967296)
	end
	or
	function (x)  -- for OpenWrt's dialect of Lua
		return string_format("%08x", (x + 2^31) % 2^32 - 2^31)
	end

local function XORA5(x, y)
	return XOR(x, y or 0xA5A5A5A5) % 4294967296
end

local function create_array_of_lanes()
	return {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
end


--------------------------------------------------------------------------------
-- CREATING OPTIMIZED INNER LOOP
--------------------------------------------------------------------------------

-- Inner loop functions
local sha256_feed_64, sha512_feed_128, md5_feed_64, sha1_feed_64, keccak_feed, blake2s_feed_64, blake2b_feed_128, blake3_feed_64

-- Arrays of SHA-2 "magic numbers" (in "INT64" and "FFI" branches "*_lo" arrays contain 64-bit values)
local sha2_K_lo, sha2_K_hi, sha2_H_lo, sha2_H_hi, sha3_RC_lo, sha3_RC_hi = {}, {}, {}, {}, {}, {}
local sha2_H_ext256 = {[224] = {}, [256] = sha2_H_hi}
local sha2_H_ext512_lo, sha2_H_ext512_hi = {[384] = {}, [512] = sha2_H_lo}, {[384] = {}, [512] = sha2_H_hi}
local md5_K, md5_sha1_H = {}, {0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0}
local md5_next_shift = {0, 0, 0, 0, 0, 0, 0, 0, 28, 25, 26, 27, 0, 0, 10, 9, 11, 12, 0, 15, 16, 17, 18, 0, 20, 22, 23, 21}
local HEX64, lanes_index_base  -- defined only for branches that internally use 64-bit integers: "INT64" and "FFI"
local common_W = {}    -- temporary table shared between all calculations (to avoid creating new temporary table every time)
local common_W_blake2b, common_W_blake2s, v_for_blake2s_feed_64 = common_W, common_W, {}
local K_lo_modulo, hi_factor, hi_factor_keccak = 4294967296, 0, 0
local sigma = {
	{  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16 },
	{ 15, 11,  5,  9, 10, 16, 14,  7,  2, 13,  1,  3, 12,  8,  6,  4 },
	{ 12,  9, 13,  1,  6,  3, 16, 14, 11, 15,  4,  7,  8,  2, 10,  5 },
	{  8, 10,  4,  2, 14, 13, 12, 15,  3,  7,  6, 11,  5,  1, 16,  9 },
	{ 10,  1,  6,  8,  3,  5, 11, 16, 15,  2, 12, 13,  7,  9,  4, 14 },
	{  3, 13,  7, 11,  1, 12,  9,  4,  5, 14,  8,  6, 16, 15,  2, 10 },
	{ 13,  6,  2, 16, 15, 14,  5, 11,  1,  8,  7,  4, 10,  3,  9, 12 },
	{ 14, 12,  8, 15, 13,  2,  4, 10,  6,  1, 16,  5,  9,  7,  3, 11 },
	{  7, 16, 15, 10, 12,  4,  1,  9, 13,  3, 14,  8,  2,  5, 11,  6 },
	{ 11,  3,  9,  5,  8,  7,  2,  6, 16, 12, 10, 15,  4, 13, 14,  1 },
};  sigma[11], sigma[12] = sigma[1], sigma[2]
local perm_blake3 = {
	1, 3, 4, 11, 13, 10, 12, 6,
	1, 3, 4, 11, 13, 10,
	2, 7, 5, 8, 14, 15, 16, 9,
	2, 7, 5, 8, 14, 15,
}

local function build_keccak_format(elem)
	local keccak_format = {}
	for _, size in ipairs{1, 9, 13, 17, 18, 21} do
		keccak_format[size] = "<"..string_rep(elem, size)
	end
	return keccak_format
end


if branch == "FFI" then

	local common_W_FFI_int32 = ffi.new("int32_t[?]", 80)   -- 64 is enough for SHA256, but 80 is needed for SHA-1
	common_W_blake2s = common_W_FFI_int32
	v_for_blake2s_feed_64 = ffi.new("int32_t[?]", 16)
	perm_blake3 = ffi.new("uint8_t[?]", #perm_blake3 + 1, 0, unpack(perm_blake3))
	for j = 1, 10 do
		sigma[j] = ffi.new("uint8_t[?]", #sigma[j] + 1, 0, unpack(sigma[j]))
	end;  sigma[11], sigma[12] = sigma[1], sigma[2]


	-- SHA256 implementation for "LuaJIT with FFI" branch

	function sha256_feed_64(H, str, offs, size)
		-- offs >= 0, size >= 0, size is multiple of 64
		local W, K = common_W_FFI_int32, sha2_K_hi
		for pos = offs, offs + size - 1, 64 do
			for j = 0, 15 do
				pos = pos + 4
				local a, b, c, d = byte(str, pos - 3, pos)   -- slow, but doesn't depend on endianness
				W[j] = OR(SHL(a, 24), SHL(b, 16), SHL(c, 8), d)
			end
			for j = 16, 63 do
				local a, b = W[j-15], W[j-2]
				W[j] = NORM( XOR(ROR(a, 7), ROL(a, 14), SHR(a, 3)) + XOR(ROL(b, 15), ROL(b, 13), SHR(b, 10)) + W[j-7] + W[j-16] )
			end
			local a, b, c, d, e, f, g, h = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
			for j = 0, 63, 8 do  -- Thanks to Peter Cawley for this workaround (unroll the loop to avoid "PHI shuffling too complex" due to PHIs overlap)
				local z = NORM( XOR(g, AND(e, XOR(f, g))) + XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + (W[j] + K[j+1] + h) )
				h, g, f, e = g, f, e, NORM( d + z )
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(g, AND(e, XOR(f, g))) + XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + (W[j+1] + K[j+2] + h) )
				h, g, f, e = g, f, e, NORM( d + z )
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(g, AND(e, XOR(f, g))) + XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + (W[j+2] + K[j+3] + h) )
				h, g, f, e = g, f, e, NORM( d + z )
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(g, AND(e, XOR(f, g))) + XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + (W[j+3] + K[j+4] + h) )
				h, g, f, e = g, f, e, NORM( d + z )
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(g, AND(e, XOR(f, g))) + XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + (W[j+4] + K[j+5] + h) )
				h, g, f, e = g, f, e, NORM( d + z )
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(g, AND(e, XOR(f, g))) + XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + (W[j+5] + K[j+6] + h) )
				h, g, f, e = g, f, e, NORM( d + z )
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(g, AND(e, XOR(f, g))) + XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + (W[j+6] + K[j+7] + h) )
				h, g, f, e = g, f, e, NORM( d + z )
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(g, AND(e, XOR(f, g))) + XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + (W[j+7] + K[j+8] + h) )
				h, g, f, e = g, f, e, NORM( d + z )
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
			end
			H[1], H[2], H[3], H[4] = NORM(a + H[1]), NORM(b + H[2]), NORM(c + H[3]), NORM(d + H[4])
			H[5], H[6], H[7], H[8] = NORM(e + H[5]), NORM(f + H[6]), NORM(g + H[7]), NORM(h + H[8])
		end
	end


	local common_W_FFI_int64 = ffi.new("int64_t[?]", 80)
	common_W_blake2b = common_W_FFI_int64
	local int64 = ffi.typeof"int64_t"
	local int32 = ffi.typeof"int32_t"
	local uint32 = ffi.typeof"uint32_t"
	hi_factor = int64(2^32)

	if is_LuaJIT_21 then   -- LuaJIT 2.1 supports bitwise 64-bit operations

		local AND64, OR64, XOR64, NOT64, SHL64, SHR64, ROL64, ROR64  -- introducing synonyms for better code readability
			= AND,   OR,   XOR,   NOT,   SHL,   SHR,   ROL,   ROR
		HEX64 = HEX


		-- BLAKE2b implementation for "LuaJIT 2.1 + FFI" branch

		do
			local v = ffi.new("int64_t[?]", 16)
			local W = common_W_blake2b

			local function G(a, b, c, d, k1, k2)
				local va, vb, vc, vd = v[a], v[b], v[c], v[d]
				va = W[k1] + (va + vb)
				vd = ROR64(XOR64(vd, va), 32)
				vc = vc + vd
				vb = ROR64(XOR64(vb, vc), 24)
				va = W[k2] + (va + vb)
				vd = ROR64(XOR64(vd, va), 16)
				vc = vc + vd
				vb = ROL64(XOR64(vb, vc), 1)
				v[a], v[b], v[c], v[d] = va, vb, vc, vd
			end

			function blake2b_feed_128(H, _, str, offs, size, bytes_compressed, last_block_size, is_last_node)
				-- offs >= 0, size >= 0, size is multiple of 128
				local h1, h2, h3, h4, h5, h6, h7, h8 = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
				for pos = offs, offs + size - 1, 128 do
					if str then
						for j = 1, 16 do
							pos = pos + 8
							local a, b, c, d, e, f, g, h = byte(str, pos - 7, pos)
							W[j] = XOR64(OR(SHL(h, 24), SHL(g, 16), SHL(f, 8), e) * int64(2^32), uint32(int32(OR(SHL(d, 24), SHL(c, 16), SHL(b, 8), a))))
						end
					end
					v[0x0], v[0x1], v[0x2], v[0x3], v[0x4], v[0x5], v[0x6], v[0x7] = h1, h2, h3, h4, h5, h6, h7, h8
					v[0x8], v[0x9], v[0xA], v[0xB], v[0xD], v[0xE], v[0xF] = sha2_H_lo[1], sha2_H_lo[2], sha2_H_lo[3], sha2_H_lo[4], sha2_H_lo[6], sha2_H_lo[7], sha2_H_lo[8]
					bytes_compressed = bytes_compressed + (last_block_size or 128)
					v[0xC] = XOR64(sha2_H_lo[5], bytes_compressed)  -- t0 = low_8_bytes(bytes_compressed)
					-- t1 = high_8_bytes(bytes_compressed) = 0,  message length is always below 2^53 bytes
					if last_block_size then  -- flag f0
						v[0xE] = NOT64(v[0xE])
					end
					if is_last_node then  -- flag f1
						v[0xF] = NOT64(v[0xF])
					end
					for j = 1, 12 do
						local row = sigma[j]
						G(0, 4,  8, 12, row[ 1], row[ 2])
						G(1, 5,  9, 13, row[ 3], row[ 4])
						G(2, 6, 10, 14, row[ 5], row[ 6])
						G(3, 7, 11, 15, row[ 7], row[ 8])
						G(0, 5, 10, 15, row[ 9], row[10])
						G(1, 6, 11, 12, row[11], row[12])
						G(2, 7,  8, 13, row[13], row[14])
						G(3, 4,  9, 14, row[15], row[16])
					end
					h1 = XOR64(h1, v[0x0], v[0x8])
					h2 = XOR64(h2, v[0x1], v[0x9])
					h3 = XOR64(h3, v[0x2], v[0xA])
					h4 = XOR64(h4, v[0x3], v[0xB])
					h5 = XOR64(h5, v[0x4], v[0xC])
					h6 = XOR64(h6, v[0x5], v[0xD])
					h7 = XOR64(h7, v[0x6], v[0xE])
					h8 = XOR64(h8, v[0x7], v[0xF])
				end
				H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8] = h1, h2, h3, h4, h5, h6, h7, h8
				return bytes_compressed
			end

		end


		-- SHA-3 implementation for "LuaJIT 2.1 + FFI" branch

		local arr64_t = ffi.typeof"int64_t[?]"
		-- lanes array is indexed from 0
		lanes_index_base = 0
		hi_factor_keccak = int64(2^32)

		function create_array_of_lanes()
			return arr64_t(30)  -- 25 + 5 for temporary usage
		end

		function keccak_feed(lanes, _, str, offs, size, block_size_in_bytes)
			-- offs >= 0, size >= 0, size is multiple of block_size_in_bytes, block_size_in_bytes is positive multiple of 8
			local RC = sha3_RC_lo
			local qwords_qty = SHR(block_size_in_bytes, 3)
			for pos = offs, offs + size - 1, block_size_in_bytes do
				for j = 0, qwords_qty - 1 do
					pos = pos + 8
					local h, g, f, e, d, c, b, a = byte(str, pos - 7, pos)   -- slow, but doesn't depend on endianness
					lanes[j] = XOR64(lanes[j], OR64(OR(SHL(a, 24), SHL(b, 16), SHL(c, 8), d) * int64(2^32), uint32(int32(OR(SHL(e, 24), SHL(f, 16), SHL(g, 8), h)))))
				end
				for round_idx = 1, 24 do
					for j = 0, 4 do
						lanes[25 + j] = XOR64(lanes[j], lanes[j+5], lanes[j+10], lanes[j+15], lanes[j+20])
					end
					local D = XOR64(lanes[25], ROL64(lanes[27], 1))
					lanes[1], lanes[6], lanes[11], lanes[16] = ROL64(XOR64(D, lanes[6]), 44), ROL64(XOR64(D, lanes[16]), 45), ROL64(XOR64(D, lanes[1]), 1), ROL64(XOR64(D, lanes[11]), 10)
					lanes[21] = ROL64(XOR64(D, lanes[21]), 2)
					D = XOR64(lanes[26], ROL64(lanes[28], 1))
					lanes[2], lanes[7], lanes[12], lanes[22] = ROL64(XOR64(D, lanes[12]), 43), ROL64(XOR64(D, lanes[22]), 61), ROL64(XOR64(D, lanes[7]), 6), ROL64(XOR64(D, lanes[2]), 62)
					lanes[17] = ROL64(XOR64(D, lanes[17]), 15)
					D = XOR64(lanes[27], ROL64(lanes[29], 1))
					lanes[3], lanes[8], lanes[18], lanes[23] = ROL64(XOR64(D, lanes[18]), 21), ROL64(XOR64(D, lanes[3]), 28), ROL64(XOR64(D, lanes[23]), 56), ROL64(XOR64(D, lanes[8]), 55)
					lanes[13] = ROL64(XOR64(D, lanes[13]), 25)
					D = XOR64(lanes[28], ROL64(lanes[25], 1))
					lanes[4], lanes[14], lanes[19], lanes[24] = ROL64(XOR64(D, lanes[24]), 14), ROL64(XOR64(D, lanes[19]), 8), ROL64(XOR64(D, lanes[4]), 27), ROL64(XOR64(D, lanes[14]), 39)
					lanes[9] = ROL64(XOR64(D, lanes[9]), 20)
					D = XOR64(lanes[29], ROL64(lanes[26], 1))
					lanes[5], lanes[10], lanes[15], lanes[20] = ROL64(XOR64(D, lanes[10]), 3), ROL64(XOR64(D, lanes[20]), 18), ROL64(XOR64(D, lanes[5]), 36), ROL64(XOR64(D, lanes[15]), 41)
					lanes[0] = XOR64(D, lanes[0])
					lanes[0], lanes[1], lanes[2], lanes[3], lanes[4] = XOR64(lanes[0], AND64(NOT64(lanes[1]), lanes[2]), RC[round_idx]), XOR64(lanes[1], AND64(NOT64(lanes[2]), lanes[3])), XOR64(lanes[2], AND64(NOT64(lanes[3]), lanes[4])), XOR64(lanes[3], AND64(NOT64(lanes[4]), lanes[0])), XOR64(lanes[4], AND64(NOT64(lanes[0]), lanes[1]))
					lanes[5], lanes[6], lanes[7], lanes[8], lanes[9] = XOR64(lanes[8], AND64(NOT64(lanes[9]), lanes[5])), XOR64(lanes[9], AND64(NOT64(lanes[5]), lanes[6])), XOR64(lanes[5], AND64(NOT64(lanes[6]), lanes[7])), XOR64(lanes[6], AND64(NOT64(lanes[7]), lanes[8])), XOR64(lanes[7], AND64(NOT64(lanes[8]), lanes[9]))
					lanes[10], lanes[11], lanes[12], lanes[13], lanes[14] = XOR64(lanes[11], AND64(NOT64(lanes[12]), lanes[13])), XOR64(lanes[12], AND64(NOT64(lanes[13]), lanes[14])), XOR64(lanes[13], AND64(NOT64(lanes[14]), lanes[10])), XOR64(lanes[14], AND64(NOT64(lanes[10]), lanes[11])), XOR64(lanes[10], AND64(NOT64(lanes[11]), lanes[12]))
					lanes[15], lanes[16], lanes[17], lanes[18], lanes[19] = XOR64(lanes[19], AND64(NOT64(lanes[15]), lanes[16])), XOR64(lanes[15], AND64(NOT64(lanes[16]), lanes[17])), XOR64(lanes[16], AND64(NOT64(lanes[17]), lanes[18])), XOR64(lanes[17], AND64(NOT64(lanes[18]), lanes[19])), XOR64(lanes[18], AND64(NOT64(lanes[19]), lanes[15]))
					lanes[20], lanes[21], lanes[22], lanes[23], lanes[24] = XOR64(lanes[22], AND64(NOT64(lanes[23]), lanes[24])), XOR64(lanes[23], AND64(NOT64(lanes[24]), lanes[20])), XOR64(lanes[24], AND64(NOT64(lanes[20]), lanes[21])), XOR64(lanes[20], AND64(NOT64(lanes[21]), lanes[22])), XOR64(lanes[21], AND64(NOT64(lanes[22]), lanes[23]))
				end
			end
		end


		local A5_long = 0xA5A5A5A5 * int64(2^32 + 1)  -- It's impossible to use constant 0xA5A5A5A5A5A5A5A5LL because it will raise syntax error on other Lua versions

		function XORA5(long, long2)
			return XOR64(long, long2 or A5_long)
		end


		-- SHA512 implementation for "LuaJIT 2.1 + FFI" branch

		function sha512_feed_128(H, _, str, offs, size)
			-- offs >= 0, size >= 0, size is multiple of 128
			local W, K = common_W_FFI_int64, sha2_K_lo
			for pos = offs, offs + size - 1, 128 do
				for j = 0, 15 do
					pos = pos + 8
					local a, b, c, d, e, f, g, h = byte(str, pos - 7, pos)   -- slow, but doesn't depend on endianness
					W[j] = OR64(OR(SHL(a, 24), SHL(b, 16), SHL(c, 8), d) * int64(2^32), uint32(int32(OR(SHL(e, 24), SHL(f, 16), SHL(g, 8), h))))
				end
				for j = 16, 79 do
					local a, b = W[j-15], W[j-2]
					W[j] = XOR64(ROR64(a, 1), ROR64(a, 8), SHR64(a, 7)) + XOR64(ROR64(b, 19), ROL64(b, 3), SHR64(b, 6)) + W[j-7] + W[j-16]
				end
				local a, b, c, d, e, f, g, h = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
				for j = 0, 79, 8 do
					local z = XOR64(ROR64(e, 14), ROR64(e, 18), ROL64(e, 23)) + XOR64(g, AND64(e, XOR64(f, g))) + h + K[j+1] + W[j]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XOR64(AND64(XOR64(a, b), c), AND64(a, b)) + XOR64(ROR64(a, 28), ROL64(a, 25), ROL64(a, 30)) + z
					z = XOR64(ROR64(e, 14), ROR64(e, 18), ROL64(e, 23)) + XOR64(g, AND64(e, XOR64(f, g))) + h + K[j+2] + W[j+1]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XOR64(AND64(XOR64(a, b), c), AND64(a, b)) + XOR64(ROR64(a, 28), ROL64(a, 25), ROL64(a, 30)) + z
					z = XOR64(ROR64(e, 14), ROR64(e, 18), ROL64(e, 23)) + XOR64(g, AND64(e, XOR64(f, g))) + h + K[j+3] + W[j+2]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XOR64(AND64(XOR64(a, b), c), AND64(a, b)) + XOR64(ROR64(a, 28), ROL64(a, 25), ROL64(a, 30)) + z
					z = XOR64(ROR64(e, 14), ROR64(e, 18), ROL64(e, 23)) + XOR64(g, AND64(e, XOR64(f, g))) + h + K[j+4] + W[j+3]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XOR64(AND64(XOR64(a, b), c), AND64(a, b)) + XOR64(ROR64(a, 28), ROL64(a, 25), ROL64(a, 30)) + z
					z = XOR64(ROR64(e, 14), ROR64(e, 18), ROL64(e, 23)) + XOR64(g, AND64(e, XOR64(f, g))) + h + K[j+5] + W[j+4]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XOR64(AND64(XOR64(a, b), c), AND64(a, b)) + XOR64(ROR64(a, 28), ROL64(a, 25), ROL64(a, 30)) + z
					z = XOR64(ROR64(e, 14), ROR64(e, 18), ROL64(e, 23)) + XOR64(g, AND64(e, XOR64(f, g))) + h + K[j+6] + W[j+5]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XOR64(AND64(XOR64(a, b), c), AND64(a, b)) + XOR64(ROR64(a, 28), ROL64(a, 25), ROL64(a, 30)) + z
					z = XOR64(ROR64(e, 14), ROR64(e, 18), ROL64(e, 23)) + XOR64(g, AND64(e, XOR64(f, g))) + h + K[j+7] + W[j+6]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XOR64(AND64(XOR64(a, b), c), AND64(a, b)) + XOR64(ROR64(a, 28), ROL64(a, 25), ROL64(a, 30)) + z
					z = XOR64(ROR64(e, 14), ROR64(e, 18), ROL64(e, 23)) + XOR64(g, AND64(e, XOR64(f, g))) + h + K[j+8] + W[j+7]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XOR64(AND64(XOR64(a, b), c), AND64(a, b)) + XOR64(ROR64(a, 28), ROL64(a, 25), ROL64(a, 30)) + z
				end
				H[1] = a + H[1]
				H[2] = b + H[2]
				H[3] = c + H[3]
				H[4] = d + H[4]
				H[5] = e + H[5]
				H[6] = f + H[6]
				H[7] = g + H[7]
				H[8] = h + H[8]
			end
		end

	else  -- LuaJIT 2.0 doesn't support 64-bit bitwise operations

		local U = ffi.new("union{int64_t i64; struct{int32_t "..(ffi.abi("le") and "lo, hi" or "hi, lo")..";} i32;}[3]")
		-- this array of unions is used for fast splitting int64 into int32_high and int32_low

		-- "xorrific" 64-bit functions :-)
		-- int64 input is splitted into two int32 parts, some bitwise 32-bit operations are performed, finally the result is converted to int64
		-- these functions are needed because bit.* functions in LuaJIT 2.0 don't work with int64_t

		local function XORROR64_1(a)
			-- return XOR64(ROR64(a, 1), ROR64(a, 8), SHR64(a, 7))
			U[0].i64 = a
			local a_lo, a_hi = U[0].i32.lo, U[0].i32.hi
			local t_lo = XOR(SHR(a_lo, 1), SHL(a_hi, 31), SHR(a_lo, 8), SHL(a_hi, 24), SHR(a_lo, 7), SHL(a_hi, 25))
			local t_hi = XOR(SHR(a_hi, 1), SHL(a_lo, 31), SHR(a_hi, 8), SHL(a_lo, 24), SHR(a_hi, 7))
			return t_hi * int64(2^32) + uint32(int32(t_lo))
		end

		local function XORROR64_2(b)
			-- return XOR64(ROR64(b, 19), ROL64(b, 3), SHR64(b, 6))
			U[0].i64 = b
			local b_lo, b_hi = U[0].i32.lo, U[0].i32.hi
			local u_lo = XOR(SHR(b_lo, 19), SHL(b_hi, 13), SHL(b_lo, 3), SHR(b_hi, 29), SHR(b_lo, 6), SHL(b_hi, 26))
			local u_hi = XOR(SHR(b_hi, 19), SHL(b_lo, 13), SHL(b_hi, 3), SHR(b_lo, 29), SHR(b_hi, 6))
			return u_hi * int64(2^32) + uint32(int32(u_lo))
		end

		local function XORROR64_3(e)
			-- return XOR64(ROR64(e, 14), ROR64(e, 18), ROL64(e, 23))
			U[0].i64 = e
			local e_lo, e_hi = U[0].i32.lo, U[0].i32.hi
			local u_lo = XOR(SHR(e_lo, 14), SHL(e_hi, 18), SHR(e_lo, 18), SHL(e_hi, 14), SHL(e_lo, 23), SHR(e_hi, 9))
			local u_hi = XOR(SHR(e_hi, 14), SHL(e_lo, 18), SHR(e_hi, 18), SHL(e_lo, 14), SHL(e_hi, 23), SHR(e_lo, 9))
			return u_hi * int64(2^32) + uint32(int32(u_lo))
		end

		local function XORROR64_6(a)
			-- return XOR64(ROR64(a, 28), ROL64(a, 25), ROL64(a, 30))
			U[0].i64 = a
			local b_lo, b_hi = U[0].i32.lo, U[0].i32.hi
			local u_lo = XOR(SHR(b_lo, 28), SHL(b_hi, 4), SHL(b_lo, 30), SHR(b_hi, 2), SHL(b_lo, 25), SHR(b_hi, 7))
			local u_hi = XOR(SHR(b_hi, 28), SHL(b_lo, 4), SHL(b_hi, 30), SHR(b_lo, 2), SHL(b_hi, 25), SHR(b_lo, 7))
			return u_hi * int64(2^32) + uint32(int32(u_lo))
		end

		local function XORROR64_4(e, f, g)
			-- return XOR64(g, AND64(e, XOR64(f, g)))
			U[0].i64 = f
			U[1].i64 = g
			U[2].i64 = e
			local f_lo, f_hi = U[0].i32.lo, U[0].i32.hi
			local g_lo, g_hi = U[1].i32.lo, U[1].i32.hi
			local e_lo, e_hi = U[2].i32.lo, U[2].i32.hi
			local result_lo = XOR(g_lo, AND(e_lo, XOR(f_lo, g_lo)))
			local result_hi = XOR(g_hi, AND(e_hi, XOR(f_hi, g_hi)))
			return result_hi * int64(2^32) + uint32(int32(result_lo))
		end

		local function XORROR64_5(a, b, c)
			-- return XOR64(AND64(XOR64(a, b), c), AND64(a, b))
			U[0].i64 = a
			U[1].i64 = b
			U[2].i64 = c
			local a_lo, a_hi = U[0].i32.lo, U[0].i32.hi
			local b_lo, b_hi = U[1].i32.lo, U[1].i32.hi
			local c_lo, c_hi = U[2].i32.lo, U[2].i32.hi
			local result_lo = XOR(AND(XOR(a_lo, b_lo), c_lo), AND(a_lo, b_lo))
			local result_hi = XOR(AND(XOR(a_hi, b_hi), c_hi), AND(a_hi, b_hi))
			return result_hi * int64(2^32) + uint32(int32(result_lo))
		end

		local function XORROR64_7(a, b, m)
			-- return ROR64(XOR64(a, b), m), m = 1..31
			U[0].i64 = a
			U[1].i64 = b
			local a_lo, a_hi = U[0].i32.lo, U[0].i32.hi
			local b_lo, b_hi = U[1].i32.lo, U[1].i32.hi
			local c_lo, c_hi = XOR(a_lo, b_lo), XOR(a_hi, b_hi)
			local t_lo = XOR(SHR(c_lo, m), SHL(c_hi, -m))
			local t_hi = XOR(SHR(c_hi, m), SHL(c_lo, -m))
			return t_hi * int64(2^32) + uint32(int32(t_lo))
		end

		local function XORROR64_8(a, b)
			-- return ROL64(XOR64(a, b), 1)
			U[0].i64 = a
			U[1].i64 = b
			local a_lo, a_hi = U[0].i32.lo, U[0].i32.hi
			local b_lo, b_hi = U[1].i32.lo, U[1].i32.hi
			local c_lo, c_hi = XOR(a_lo, b_lo), XOR(a_hi, b_hi)
			local t_lo = XOR(SHL(c_lo, 1), SHR(c_hi, 31))
			local t_hi = XOR(SHL(c_hi, 1), SHR(c_lo, 31))
			return t_hi * int64(2^32) + uint32(int32(t_lo))
		end

		local function XORROR64_9(a, b)
			-- return ROR64(XOR64(a, b), 32)
			U[0].i64 = a
			U[1].i64 = b
			local a_lo, a_hi = U[0].i32.lo, U[0].i32.hi
			local b_lo, b_hi = U[1].i32.lo, U[1].i32.hi
			local t_hi, t_lo = XOR(a_lo, b_lo), XOR(a_hi, b_hi)
			return t_hi * int64(2^32) + uint32(int32(t_lo))
		end

		local function XOR64(a, b)
			-- return XOR64(a, b)
			U[0].i64 = a
			U[1].i64 = b
			local a_lo, a_hi = U[0].i32.lo, U[0].i32.hi
			local b_lo, b_hi = U[1].i32.lo, U[1].i32.hi
			local t_lo, t_hi = XOR(a_lo, b_lo), XOR(a_hi, b_hi)
			return t_hi * int64(2^32) + uint32(int32(t_lo))
		end

		local function XORROR64_11(a, b, c)
			-- return XOR64(a, b, c)
			U[0].i64 = a
			U[1].i64 = b
			U[2].i64 = c
			local a_lo, a_hi = U[0].i32.lo, U[0].i32.hi
			local b_lo, b_hi = U[1].i32.lo, U[1].i32.hi
			local c_lo, c_hi = U[2].i32.lo, U[2].i32.hi
			local t_lo, t_hi = XOR(a_lo, b_lo, c_lo), XOR(a_hi, b_hi, c_hi)
			return t_hi * int64(2^32) + uint32(int32(t_lo))
		end

		function XORA5(long, long2)
			-- return XOR64(long, long2 or 0xA5A5A5A5A5A5A5A5)
			U[0].i64 = long
			local lo32, hi32 = U[0].i32.lo, U[0].i32.hi
			local long2_lo, long2_hi = 0xA5A5A5A5, 0xA5A5A5A5
			if long2 then
				U[1].i64 = long2
				long2_lo, long2_hi = U[1].i32.lo, U[1].i32.hi
			end
			lo32 = XOR(lo32, long2_lo)
			hi32 = XOR(hi32, long2_hi)
			return hi32 * int64(2^32) + uint32(int32(lo32))
		end

		function HEX64(long)
			U[0].i64 = long
			return HEX(U[0].i32.hi)..HEX(U[0].i32.lo)
		end


		-- SHA512 implementation for "LuaJIT 2.0 + FFI" branch

		function sha512_feed_128(H, _, str, offs, size)
			-- offs >= 0, size >= 0, size is multiple of 128
			local W, K = common_W_FFI_int64, sha2_K_lo
			for pos = offs, offs + size - 1, 128 do
				for j = 0, 15 do
					pos = pos + 8
					local a, b, c, d, e, f, g, h = byte(str, pos - 7, pos)   -- slow, but doesn't depend on endianness
					W[j] = OR(SHL(a, 24), SHL(b, 16), SHL(c, 8), d) * int64(2^32) + uint32(int32(OR(SHL(e, 24), SHL(f, 16), SHL(g, 8), h)))
				end
				for j = 16, 79 do
					W[j] = XORROR64_1(W[j-15]) + XORROR64_2(W[j-2]) + W[j-7] + W[j-16]
				end
				local a, b, c, d, e, f, g, h = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
				for j = 0, 79, 8 do
					local z = XORROR64_3(e) + XORROR64_4(e, f, g) + h + K[j+1] + W[j]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XORROR64_5(a, b, c) + XORROR64_6(a) + z
					z = XORROR64_3(e) + XORROR64_4(e, f, g) + h + K[j+2] + W[j+1]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XORROR64_5(a, b, c) + XORROR64_6(a) + z
					z = XORROR64_3(e) + XORROR64_4(e, f, g) + h + K[j+3] + W[j+2]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XORROR64_5(a, b, c) + XORROR64_6(a) + z
					z = XORROR64_3(e) + XORROR64_4(e, f, g) + h + K[j+4] + W[j+3]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XORROR64_5(a, b, c) + XORROR64_6(a) + z
					z = XORROR64_3(e) + XORROR64_4(e, f, g) + h + K[j+5] + W[j+4]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XORROR64_5(a, b, c) + XORROR64_6(a) + z
					z = XORROR64_3(e) + XORROR64_4(e, f, g) + h + K[j+6] + W[j+5]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XORROR64_5(a, b, c) + XORROR64_6(a) + z
					z = XORROR64_3(e) + XORROR64_4(e, f, g) + h + K[j+7] + W[j+6]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XORROR64_5(a, b, c) + XORROR64_6(a) + z
					z = XORROR64_3(e) + XORROR64_4(e, f, g) + h + K[j+8] + W[j+7]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XORROR64_5(a, b, c) + XORROR64_6(a) + z
				end
				H[1] = a + H[1]
				H[2] = b + H[2]
				H[3] = c + H[3]
				H[4] = d + H[4]
				H[5] = e + H[5]
				H[6] = f + H[6]
				H[7] = g + H[7]
				H[8] = h + H[8]
			end
		end


		-- BLAKE2b implementation for "LuaJIT 2.0 + FFI" branch

		do
			local v = ffi.new("int64_t[?]", 16)
			local W = common_W_blake2b

			local function G(a, b, c, d, k1, k2)
				local va, vb, vc, vd = v[a], v[b], v[c], v[d]
				va = W[k1] + (va + vb)
				vd = XORROR64_9(vd, va)
				vc = vc + vd
				vb = XORROR64_7(vb, vc, 24)
				va = W[k2] + (va + vb)
				vd = XORROR64_7(vd, va, 16)
				vc = vc + vd
				vb = XORROR64_8(vb, vc)
				v[a], v[b], v[c], v[d] = va, vb, vc, vd
			end

			function blake2b_feed_128(H, _, str, offs, size, bytes_compressed, last_block_size, is_last_node)
				-- offs >= 0, size >= 0, size is multiple of 128
				local h1, h2, h3, h4, h5, h6, h7, h8 = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
				for pos = offs, offs + size - 1, 128 do
					if str then
						for j = 1, 16 do
							pos = pos + 8
							local a, b, c, d, e, f, g, h = byte(str, pos - 7, pos)
							W[j] = XOR64(OR(SHL(h, 24), SHL(g, 16), SHL(f, 8), e) * int64(2^32), uint32(int32(OR(SHL(d, 24), SHL(c, 16), SHL(b, 8), a))))
						end
					end
					v[0x0], v[0x1], v[0x2], v[0x3], v[0x4], v[0x5], v[0x6], v[0x7] = h1, h2, h3, h4, h5, h6, h7, h8
					v[0x8], v[0x9], v[0xA], v[0xB], v[0xD], v[0xE], v[0xF] = sha2_H_lo[1], sha2_H_lo[2], sha2_H_lo[3], sha2_H_lo[4], sha2_H_lo[6], sha2_H_lo[7], sha2_H_lo[8]
					bytes_compressed = bytes_compressed + (last_block_size or 128)
					v[0xC] = XOR64(sha2_H_lo[5], bytes_compressed)  -- t0 = low_8_bytes(bytes_compressed)
					-- t1 = high_8_bytes(bytes_compressed) = 0,  message length is always below 2^53 bytes
					if last_block_size then  -- flag f0
						v[0xE] = -1 - v[0xE]
					end
					if is_last_node then  -- flag f1
						v[0xF] = -1 - v[0xF]
					end
					for j = 1, 12 do
						local row = sigma[j]
						G(0, 4,  8, 12, row[ 1], row[ 2])
						G(1, 5,  9, 13, row[ 3], row[ 4])
						G(2, 6, 10, 14, row[ 5], row[ 6])
						G(3, 7, 11, 15, row[ 7], row[ 8])
						G(0, 5, 10, 15, row[ 9], row[10])
						G(1, 6, 11, 12, row[11], row[12])
						G(2, 7,  8, 13, row[13], row[14])
						G(3, 4,  9, 14, row[15], row[16])
					end
					h1 = XORROR64_11(h1, v[0x0], v[0x8])
					h2 = XORROR64_11(h2, v[0x1], v[0x9])
					h3 = XORROR64_11(h3, v[0x2], v[0xA])
					h4 = XORROR64_11(h4, v[0x3], v[0xB])
					h5 = XORROR64_11(h5, v[0x4], v[0xC])
					h6 = XORROR64_11(h6, v[0x5], v[0xD])
					h7 = XORROR64_11(h7, v[0x6], v[0xE])
					h8 = XORROR64_11(h8, v[0x7], v[0xF])
				end
				H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8] = h1, h2, h3, h4, h5, h6, h7, h8
				return bytes_compressed
			end

		end

	end


	-- MD5 implementation for "LuaJIT with FFI" branch

	function md5_feed_64(H, str, offs, size)
		-- offs >= 0, size >= 0, size is multiple of 64
		local W, K = common_W_FFI_int32, md5_K
		for pos = offs, offs + size - 1, 64 do
			for j = 0, 15 do
				pos = pos + 4
				local a, b, c, d = byte(str, pos - 3, pos)   -- slow, but doesn't depend on endianness
				W[j] = OR(SHL(d, 24), SHL(c, 16), SHL(b, 8), a)
			end
			local a, b, c, d = H[1], H[2], H[3], H[4]
			for j = 0, 15, 4 do
				a, d, c, b = d, c, b, NORM(ROL(XOR(d, AND(b, XOR(c, d))) + (K[j+1] + W[j  ] + a),  7) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(d, AND(b, XOR(c, d))) + (K[j+2] + W[j+1] + a), 12) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(d, AND(b, XOR(c, d))) + (K[j+3] + W[j+2] + a), 17) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(d, AND(b, XOR(c, d))) + (K[j+4] + W[j+3] + a), 22) + b)
			end
			for j = 16, 31, 4 do
				local g = 5*j
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, AND(d, XOR(b, c))) + (K[j+1] + W[AND(g + 1, 15)] + a),  5) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, AND(d, XOR(b, c))) + (K[j+2] + W[AND(g + 6, 15)] + a),  9) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, AND(d, XOR(b, c))) + (K[j+3] + W[AND(g - 5, 15)] + a), 14) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, AND(d, XOR(b, c))) + (K[j+4] + W[AND(g    , 15)] + a), 20) + b)
			end
			for j = 32, 47, 4 do
				local g = 3*j
				a, d, c, b = d, c, b, NORM(ROL(XOR(b, c, d) + (K[j+1] + W[AND(g + 5, 15)] + a),  4) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(b, c, d) + (K[j+2] + W[AND(g + 8, 15)] + a), 11) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(b, c, d) + (K[j+3] + W[AND(g - 5, 15)] + a), 16) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(b, c, d) + (K[j+4] + W[AND(g - 2, 15)] + a), 23) + b)
			end
			for j = 48, 63, 4 do
				local g = 7*j
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, OR(b, NOT(d))) + (K[j+1] + W[AND(g    , 15)] + a),  6) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, OR(b, NOT(d))) + (K[j+2] + W[AND(g + 7, 15)] + a), 10) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, OR(b, NOT(d))) + (K[j+3] + W[AND(g - 2, 15)] + a), 15) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, OR(b, NOT(d))) + (K[j+4] + W[AND(g + 5, 15)] + a), 21) + b)
			end
			H[1], H[2], H[3], H[4] = NORM(a + H[1]), NORM(b + H[2]), NORM(c + H[3]), NORM(d + H[4])
		end
	end


	-- SHA-1 implementation for "LuaJIT with FFI" branch

	function sha1_feed_64(H, str, offs, size)
		-- offs >= 0, size >= 0, size is multiple of 64
		local W = common_W_FFI_int32
		for pos = offs, offs + size - 1, 64 do
			for j = 0, 15 do
				pos = pos + 4
				local a, b, c, d = byte(str, pos - 3, pos)   -- slow, but doesn't depend on endianness
				W[j] = OR(SHL(a, 24), SHL(b, 16), SHL(c, 8), d)
			end
			for j = 16, 79 do
				W[j] = ROL(XOR(W[j-3], W[j-8], W[j-14], W[j-16]), 1)
			end
			local a, b, c, d, e = H[1], H[2], H[3], H[4], H[5]
			for j = 0, 19, 5 do
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(d, AND(b, XOR(d, c))) + (W[j]   + 0x5A827999 + e))          -- constant = floor(2^30 * sqrt(2))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(d, AND(b, XOR(d, c))) + (W[j+1] + 0x5A827999 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(d, AND(b, XOR(d, c))) + (W[j+2] + 0x5A827999 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(d, AND(b, XOR(d, c))) + (W[j+3] + 0x5A827999 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(d, AND(b, XOR(d, c))) + (W[j+4] + 0x5A827999 + e))
			end
			for j = 20, 39, 5 do
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j]   + 0x6ED9EBA1 + e))                       -- 2^30 * sqrt(3)
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+1] + 0x6ED9EBA1 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+2] + 0x6ED9EBA1 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+3] + 0x6ED9EBA1 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+4] + 0x6ED9EBA1 + e))
			end
			for j = 40, 59, 5 do
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(AND(d, XOR(b, c)), AND(b, c)) + (W[j]   + 0x8F1BBCDC + e))  -- 2^30 * sqrt(5)
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(AND(d, XOR(b, c)), AND(b, c)) + (W[j+1] + 0x8F1BBCDC + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(AND(d, XOR(b, c)), AND(b, c)) + (W[j+2] + 0x8F1BBCDC + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(AND(d, XOR(b, c)), AND(b, c)) + (W[j+3] + 0x8F1BBCDC + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(AND(d, XOR(b, c)), AND(b, c)) + (W[j+4] + 0x8F1BBCDC + e))
			end
			for j = 60, 79, 5 do
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j]   + 0xCA62C1D6 + e))                       -- 2^30 * sqrt(10)
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+1] + 0xCA62C1D6 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+2] + 0xCA62C1D6 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+3] + 0xCA62C1D6 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+4] + 0xCA62C1D6 + e))
			end
			H[1], H[2], H[3], H[4], H[5] = NORM(a + H[1]), NORM(b + H[2]), NORM(c + H[3]), NORM(d + H[4]), NORM(e + H[5])
		end
	end

end


if branch == "FFI" and not is_LuaJIT_21 or branch == "LJ" then

	if branch == "FFI" then
		local arr32_t = ffi.typeof"int32_t[?]"

		function create_array_of_lanes()
			return arr32_t(31)  -- 25 + 5 + 1 (due to 1-based indexing)
		end

	end


	-- SHA-3 implementation for "LuaJIT 2.0 + FFI" and "LuaJIT without FFI" branches

	function keccak_feed(lanes_lo, lanes_hi, str, offs, size, block_size_in_bytes)
		-- offs >= 0, size >= 0, size is multiple of block_size_in_bytes, block_size_in_bytes is positive multiple of 8
		local RC_lo, RC_hi = sha3_RC_lo, sha3_RC_hi
		local qwords_qty = SHR(block_size_in_bytes, 3)
		for pos = offs, offs + size - 1, block_size_in_bytes do
			for j = 1, qwords_qty do
				local a, b, c, d = byte(str, pos + 1, pos + 4)
				lanes_lo[j] = XOR(lanes_lo[j], OR(SHL(d, 24), SHL(c, 16), SHL(b, 8), a))
				pos = pos + 8
				a, b, c, d = byte(str, pos - 3, pos)
				lanes_hi[j] = XOR(lanes_hi[j], OR(SHL(d, 24), SHL(c, 16), SHL(b, 8), a))
			end
			for round_idx = 1, 24 do
				for j = 1, 5 do
					lanes_lo[25 + j] = XOR(lanes_lo[j], lanes_lo[j + 5], lanes_lo[j + 10], lanes_lo[j + 15], lanes_lo[j + 20])
				end
				for j = 1, 5 do
					lanes_hi[25 + j] = XOR(lanes_hi[j], lanes_hi[j + 5], lanes_hi[j + 10], lanes_hi[j + 15], lanes_hi[j + 20])
				end
				local D_lo = XOR(lanes_lo[26], SHL(lanes_lo[28], 1), SHR(lanes_hi[28], 31))
				local D_hi = XOR(lanes_hi[26], SHL(lanes_hi[28], 1), SHR(lanes_lo[28], 31))
				lanes_lo[2], lanes_hi[2], lanes_lo[7], lanes_hi[7], lanes_lo[12], lanes_hi[12], lanes_lo[17], lanes_hi[17] = XOR(SHR(XOR(D_lo, lanes_lo[7]), 20), SHL(XOR(D_hi, lanes_hi[7]), 12)), XOR(SHR(XOR(D_hi, lanes_hi[7]), 20), SHL(XOR(D_lo, lanes_lo[7]), 12)), XOR(SHR(XOR(D_lo, lanes_lo[17]), 19), SHL(XOR(D_hi, lanes_hi[17]), 13)), XOR(SHR(XOR(D_hi, lanes_hi[17]), 19), SHL(XOR(D_lo, lanes_lo[17]), 13)), XOR(SHL(XOR(D_lo, lanes_lo[2]), 1), SHR(XOR(D_hi, lanes_hi[2]), 31)), XOR(SHL(XOR(D_hi, lanes_hi[2]), 1), SHR(XOR(D_lo, lanes_lo[2]), 31)), XOR(SHL(XOR(D_lo, lanes_lo[12]), 10), SHR(XOR(D_hi, lanes_hi[12]), 22)), XOR(SHL(XOR(D_hi, lanes_hi[12]), 10), SHR(XOR(D_lo, lanes_lo[12]), 22))
				local L, H = XOR(D_lo, lanes_lo[22]), XOR(D_hi, lanes_hi[22])
				lanes_lo[22], lanes_hi[22] = XOR(SHL(L, 2), SHR(H, 30)), XOR(SHL(H, 2), SHR(L, 30))
				D_lo = XOR(lanes_lo[27], SHL(lanes_lo[29], 1), SHR(lanes_hi[29], 31))
				D_hi = XOR(lanes_hi[27], SHL(lanes_hi[29], 1), SHR(lanes_lo[29], 31))
				lanes_lo[3], lanes_hi[3], lanes_lo[8], lanes_hi[8], lanes_lo[13], lanes_hi[13], lanes_lo[23], lanes_hi[23] = XOR(SHR(XOR(D_lo, lanes_lo[13]), 21), SHL(XOR(D_hi, lanes_hi[13]), 11)), XOR(SHR(XOR(D_hi, lanes_hi[13]), 21), SHL(XOR(D_lo, lanes_lo[13]), 11)), XOR(SHR(XOR(D_lo, lanes_lo[23]), 3), SHL(XOR(D_hi, lanes_hi[23]), 29)), XOR(SHR(XOR(D_hi, lanes_hi[23]), 3), SHL(XOR(D_lo, lanes_lo[23]), 29)), XOR(SHL(XOR(D_lo, lanes_lo[8]), 6), SHR(XOR(D_hi, lanes_hi[8]), 26)), XOR(SHL(XOR(D_hi, lanes_hi[8]), 6), SHR(XOR(D_lo, lanes_lo[8]), 26)), XOR(SHR(XOR(D_lo, lanes_lo[3]), 2), SHL(XOR(D_hi, lanes_hi[3]), 30)), XOR(SHR(XOR(D_hi, lanes_hi[3]), 2), SHL(XOR(D_lo, lanes_lo[3]), 30))
				L, H = XOR(D_lo, lanes_lo[18]), XOR(D_hi, lanes_hi[18])
				lanes_lo[18], lanes_hi[18] = XOR(SHL(L, 15), SHR(H, 17)), XOR(SHL(H, 15), SHR(L, 17))
				D_lo = XOR(lanes_lo[28], SHL(lanes_lo[30], 1), SHR(lanes_hi[30], 31))
				D_hi = XOR(lanes_hi[28], SHL(lanes_hi[30], 1), SHR(lanes_lo[30], 31))
				lanes_lo[4], lanes_hi[4], lanes_lo[9], lanes_hi[9], lanes_lo[19], lanes_hi[19], lanes_lo[24], lanes_hi[24] = XOR(SHL(XOR(D_lo, lanes_lo[19]), 21), SHR(XOR(D_hi, lanes_hi[19]), 11)), XOR(SHL(XOR(D_hi, lanes_hi[19]), 21), SHR(XOR(D_lo, lanes_lo[19]), 11)), XOR(SHL(XOR(D_lo, lanes_lo[4]), 28), SHR(XOR(D_hi, lanes_hi[4]), 4)), XOR(SHL(XOR(D_hi, lanes_hi[4]), 28), SHR(XOR(D_lo, lanes_lo[4]), 4)), XOR(SHR(XOR(D_lo, lanes_lo[24]), 8), SHL(XOR(D_hi, lanes_hi[24]), 24)), XOR(SHR(XOR(D_hi, lanes_hi[24]), 8), SHL(XOR(D_lo, lanes_lo[24]), 24)), XOR(SHR(XOR(D_lo, lanes_lo[9]), 9), SHL(XOR(D_hi, lanes_hi[9]), 23)), XOR(SHR(XOR(D_hi, lanes_hi[9]), 9), SHL(XOR(D_lo, lanes_lo[9]), 23))
				L, H = XOR(D_lo, lanes_lo[14]), XOR(D_hi, lanes_hi[14])
				lanes_lo[14], lanes_hi[14] = XOR(SHL(L, 25), SHR(H, 7)), XOR(SHL(H, 25), SHR(L, 7))
				D_lo = XOR(lanes_lo[29], SHL(lanes_lo[26], 1), SHR(lanes_hi[26], 31))
				D_hi = XOR(lanes_hi[29], SHL(lanes_hi[26], 1), SHR(lanes_lo[26], 31))
				lanes_lo[5], lanes_hi[5], lanes_lo[15], lanes_hi[15], lanes_lo[20], lanes_hi[20], lanes_lo[25], lanes_hi[25] = XOR(SHL(XOR(D_lo, lanes_lo[25]), 14), SHR(XOR(D_hi, lanes_hi[25]), 18)), XOR(SHL(XOR(D_hi, lanes_hi[25]), 14), SHR(XOR(D_lo, lanes_lo[25]), 18)), XOR(SHL(XOR(D_lo, lanes_lo[20]), 8), SHR(XOR(D_hi, lanes_hi[20]), 24)), XOR(SHL(XOR(D_hi, lanes_hi[20]), 8), SHR(XOR(D_lo, lanes_lo[20]), 24)), XOR(SHL(XOR(D_lo, lanes_lo[5]), 27), SHR(XOR(D_hi, lanes_hi[5]), 5)), XOR(SHL(XOR(D_hi, lanes_hi[5]), 27), SHR(XOR(D_lo, lanes_lo[5]), 5)), XOR(SHR(XOR(D_lo, lanes_lo[15]), 25), SHL(XOR(D_hi, lanes_hi[15]), 7)), XOR(SHR(XOR(D_hi, lanes_hi[15]), 25), SHL(XOR(D_lo, lanes_lo[15]), 7))
				L, H = XOR(D_lo, lanes_lo[10]), XOR(D_hi, lanes_hi[10])
				lanes_lo[10], lanes_hi[10] = XOR(SHL(L, 20), SHR(H, 12)), XOR(SHL(H, 20), SHR(L, 12))
				D_lo = XOR(lanes_lo[30], SHL(lanes_lo[27], 1), SHR(lanes_hi[27], 31))
				D_hi = XOR(lanes_hi[30], SHL(lanes_hi[27], 1), SHR(lanes_lo[27], 31))
				lanes_lo[6], lanes_hi[6], lanes_lo[11], lanes_hi[11], lanes_lo[16], lanes_hi[16], lanes_lo[21], lanes_hi[21] = XOR(SHL(XOR(D_lo, lanes_lo[11]), 3), SHR(XOR(D_hi, lanes_hi[11]), 29)), XOR(SHL(XOR(D_hi, lanes_hi[11]), 3), SHR(XOR(D_lo, lanes_lo[11]), 29)), XOR(SHL(XOR(D_lo, lanes_lo[21]), 18), SHR(XOR(D_hi, lanes_hi[21]), 14)), XOR(SHL(XOR(D_hi, lanes_hi[21]), 18), SHR(XOR(D_lo, lanes_lo[21]), 14)), XOR(SHR(XOR(D_lo, lanes_lo[6]), 28), SHL(XOR(D_hi, lanes_hi[6]), 4)), XOR(SHR(XOR(D_hi, lanes_hi[6]), 28), SHL(XOR(D_lo, lanes_lo[6]), 4)), XOR(SHR(XOR(D_lo, lanes_lo[16]), 23), SHL(XOR(D_hi, lanes_hi[16]), 9)), XOR(SHR(XOR(D_hi, lanes_hi[16]), 23), SHL(XOR(D_lo, lanes_lo[16]), 9))
				lanes_lo[1], lanes_hi[1] = XOR(D_lo, lanes_lo[1]), XOR(D_hi, lanes_hi[1])
				lanes_lo[1], lanes_lo[2], lanes_lo[3], lanes_lo[4], lanes_lo[5] = XOR(lanes_lo[1], AND(NOT(lanes_lo[2]), lanes_lo[3]), RC_lo[round_idx]), XOR(lanes_lo[2], AND(NOT(lanes_lo[3]), lanes_lo[4])), XOR(lanes_lo[3], AND(NOT(lanes_lo[4]), lanes_lo[5])), XOR(lanes_lo[4], AND(NOT(lanes_lo[5]), lanes_lo[1])), XOR(lanes_lo[5], AND(NOT(lanes_lo[1]), lanes_lo[2]))
				lanes_lo[6], lanes_lo[7], lanes_lo[8], lanes_lo[9], lanes_lo[10] = XOR(lanes_lo[9], AND(NOT(lanes_lo[10]), lanes_lo[6])), XOR(lanes_lo[10], AND(NOT(lanes_lo[6]), lanes_lo[7])), XOR(lanes_lo[6], AND(NOT(lanes_lo[7]), lanes_lo[8])), XOR(lanes_lo[7], AND(NOT(lanes_lo[8]), lanes_lo[9])), XOR(lanes_lo[8], AND(NOT(lanes_lo[9]), lanes_lo[10]))
				lanes_lo[11], lanes_lo[12], lanes_lo[13], lanes_lo[14], lanes_lo[15] = XOR(lanes_lo[12], AND(NOT(lanes_lo[13]), lanes_lo[14])), XOR(lanes_lo[13], AND(NOT(lanes_lo[14]), lanes_lo[15])), XOR(lanes_lo[14], AND(NOT(lanes_lo[15]), lanes_lo[11])), XOR(lanes_lo[15], AND(NOT(lanes_lo[11]), lanes_lo[12])), XOR(lanes_lo[11], AND(NOT(lanes_lo[12]), lanes_lo[13]))
				lanes_lo[16], lanes_lo[17], lanes_lo[18], lanes_lo[19], lanes_lo[20] = XOR(lanes_lo[20], AND(NOT(lanes_lo[16]), lanes_lo[17])), XOR(lanes_lo[16], AND(NOT(lanes_lo[17]), lanes_lo[18])), XOR(lanes_lo[17], AND(NOT(lanes_lo[18]), lanes_lo[19])), XOR(lanes_lo[18], AND(NOT(lanes_lo[19]), lanes_lo[20])), XOR(lanes_lo[19], AND(NOT(lanes_lo[20]), lanes_lo[16]))
				lanes_lo[21], lanes_lo[22], lanes_lo[23], lanes_lo[24], lanes_lo[25] = XOR(lanes_lo[23], AND(NOT(lanes_lo[24]), lanes_lo[25])), XOR(lanes_lo[24], AND(NOT(lanes_lo[25]), lanes_lo[21])), XOR(lanes_lo[25], AND(NOT(lanes_lo[21]), lanes_lo[22])), XOR(lanes_lo[21], AND(NOT(lanes_lo[22]), lanes_lo[23])), XOR(lanes_lo[22], AND(NOT(lanes_lo[23]), lanes_lo[24]))
				lanes_hi[1], lanes_hi[2], lanes_hi[3], lanes_hi[4], lanes_hi[5] = XOR(lanes_hi[1], AND(NOT(lanes_hi[2]), lanes_hi[3]), RC_hi[round_idx]), XOR(lanes_hi[2], AND(NOT(lanes_hi[3]), lanes_hi[4])), XOR(lanes_hi[3], AND(NOT(lanes_hi[4]), lanes_hi[5])), XOR(lanes_hi[4], AND(NOT(lanes_hi[5]), lanes_hi[1])), XOR(lanes_hi[5], AND(NOT(lanes_hi[1]), lanes_hi[2]))
				lanes_hi[6], lanes_hi[7], lanes_hi[8], lanes_hi[9], lanes_hi[10] = XOR(lanes_hi[9], AND(NOT(lanes_hi[10]), lanes_hi[6])), XOR(lanes_hi[10], AND(NOT(lanes_hi[6]), lanes_hi[7])), XOR(lanes_hi[6], AND(NOT(lanes_hi[7]), lanes_hi[8])), XOR(lanes_hi[7], AND(NOT(lanes_hi[8]), lanes_hi[9])), XOR(lanes_hi[8], AND(NOT(lanes_hi[9]), lanes_hi[10]))
				lanes_hi[11], lanes_hi[12], lanes_hi[13], lanes_hi[14], lanes_hi[15] = XOR(lanes_hi[12], AND(NOT(lanes_hi[13]), lanes_hi[14])), XOR(lanes_hi[13], AND(NOT(lanes_hi[14]), lanes_hi[15])), XOR(lanes_hi[14], AND(NOT(lanes_hi[15]), lanes_hi[11])), XOR(lanes_hi[15], AND(NOT(lanes_hi[11]), lanes_hi[12])), XOR(lanes_hi[11], AND(NOT(lanes_hi[12]), lanes_hi[13]))
				lanes_hi[16], lanes_hi[17], lanes_hi[18], lanes_hi[19], lanes_hi[20] = XOR(lanes_hi[20], AND(NOT(lanes_hi[16]), lanes_hi[17])), XOR(lanes_hi[16], AND(NOT(lanes_hi[17]), lanes_hi[18])), XOR(lanes_hi[17], AND(NOT(lanes_hi[18]), lanes_hi[19])), XOR(lanes_hi[18], AND(NOT(lanes_hi[19]), lanes_hi[20])), XOR(lanes_hi[19], AND(NOT(lanes_hi[20]), lanes_hi[16]))
				lanes_hi[21], lanes_hi[22], lanes_hi[23], lanes_hi[24], lanes_hi[25] = XOR(lanes_hi[23], AND(NOT(lanes_hi[24]), lanes_hi[25])), XOR(lanes_hi[24], AND(NOT(lanes_hi[25]), lanes_hi[21])), XOR(lanes_hi[25], AND(NOT(lanes_hi[21]), lanes_hi[22])), XOR(lanes_hi[21], AND(NOT(lanes_hi[22]), lanes_hi[23])), XOR(lanes_hi[22], AND(NOT(lanes_hi[23]), lanes_hi[24]))
			end
		end
	end

end


if branch == "LJ" then


	-- SHA256 implementation for "LuaJIT without FFI" branch

	function sha256_feed_64(H, str, offs, size)
		-- offs >= 0, size >= 0, size is multiple of 64
		local W, K = common_W, sha2_K_hi
		for pos = offs, offs + size - 1, 64 do
			for j = 1, 16 do
				pos = pos + 4
				local a, b, c, d = byte(str, pos - 3, pos)
				W[j] = OR(SHL(a, 24), SHL(b, 16), SHL(c, 8), d)
			end
			for j = 17, 64 do
				local a, b = W[j-15], W[j-2]
				W[j] = NORM( NORM( XOR(ROR(a, 7), ROL(a, 14), SHR(a, 3)) + XOR(ROL(b, 15), ROL(b, 13), SHR(b, 10)) ) + NORM( W[j-7] + W[j-16] ) )
			end
			local a, b, c, d, e, f, g, h = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
			for j = 1, 64, 8 do  -- Thanks to Peter Cawley for this workaround (unroll the loop to avoid "PHI shuffling too complex" due to PHIs overlap)
				local z = NORM( XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + XOR(g, AND(e, XOR(f, g))) + (K[j] + W[j] + h) )
				h, g, f, e = g, f, e, NORM(d + z)
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + XOR(g, AND(e, XOR(f, g))) + (K[j+1] + W[j+1] + h) )
				h, g, f, e = g, f, e, NORM(d + z)
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + XOR(g, AND(e, XOR(f, g))) + (K[j+2] + W[j+2] + h) )
				h, g, f, e = g, f, e, NORM(d + z)
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + XOR(g, AND(e, XOR(f, g))) + (K[j+3] + W[j+3] + h) )
				h, g, f, e = g, f, e, NORM(d + z)
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + XOR(g, AND(e, XOR(f, g))) + (K[j+4] + W[j+4] + h) )
				h, g, f, e = g, f, e, NORM(d + z)
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + XOR(g, AND(e, XOR(f, g))) + (K[j+5] + W[j+5] + h) )
				h, g, f, e = g, f, e, NORM(d + z)
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + XOR(g, AND(e, XOR(f, g))) + (K[j+6] + W[j+6] + h) )
				h, g, f, e = g, f, e, NORM(d + z)
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + XOR(g, AND(e, XOR(f, g))) + (K[j+7] + W[j+7] + h) )
				h, g, f, e = g, f, e, NORM(d + z)
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
			end
			H[1], H[2], H[3], H[4] = NORM(a + H[1]), NORM(b + H[2]), NORM(c + H[3]), NORM(d + H[4])
			H[5], H[6], H[7], H[8] = NORM(e + H[5]), NORM(f + H[6]), NORM(g + H[7]), NORM(h + H[8])
		end
	end

	local function ADD64_4(a_lo, a_hi, b_lo, b_hi, c_lo, c_hi, d_lo, d_hi)
		local sum_lo = a_lo % 2^32 + b_lo % 2^32 + c_lo % 2^32 + d_lo % 2^32
		local sum_hi = a_hi + b_hi + c_hi + d_hi
		local result_lo = NORM( sum_lo )
		local result_hi = NORM( sum_hi + floor(sum_lo / 2^32) )
		return result_lo, result_hi
	end

	if LuaJIT_arch == "x86" then  -- Special trick is required to avoid "PHI shuffling too complex" on x86 platform


		-- SHA512 implementation for "LuaJIT x86 without FFI" branch

		function sha512_feed_128(H_lo, H_hi, str, offs, size)
			-- offs >= 0, size >= 0, size is multiple of 128
			-- W1_hi, W1_lo, W2_hi, W2_lo, ...   Wk_hi = W[2*k-1], Wk_lo = W[2*k]
			local W, K_lo, K_hi = common_W, sha2_K_lo, sha2_K_hi
			for pos = offs, offs + size - 1, 128 do
				for j = 1, 16*2 do
					pos = pos + 4
					local a, b, c, d = byte(str, pos - 3, pos)
					W[j] = OR(SHL(a, 24), SHL(b, 16), SHL(c, 8), d)
				end
				for jj = 17*2, 80*2, 2 do
					local a_lo, a_hi = W[jj-30], W[jj-31]
					local t_lo = XOR(OR(SHR(a_lo, 1), SHL(a_hi, 31)), OR(SHR(a_lo, 8), SHL(a_hi, 24)), OR(SHR(a_lo, 7), SHL(a_hi, 25)))
					local t_hi = XOR(OR(SHR(a_hi, 1), SHL(a_lo, 31)), OR(SHR(a_hi, 8), SHL(a_lo, 24)), SHR(a_hi, 7))
					local b_lo, b_hi = W[jj-4], W[jj-5]
					local u_lo = XOR(OR(SHR(b_lo, 19), SHL(b_hi, 13)), OR(SHL(b_lo, 3), SHR(b_hi, 29)), OR(SHR(b_lo, 6), SHL(b_hi, 26)))
					local u_hi = XOR(OR(SHR(b_hi, 19), SHL(b_lo, 13)), OR(SHL(b_hi, 3), SHR(b_lo, 29)), SHR(b_hi, 6))
					W[jj], W[jj-1] = ADD64_4(t_lo, t_hi, u_lo, u_hi, W[jj-14], W[jj-15], W[jj-32], W[jj-33])
				end
				local a_lo, b_lo, c_lo, d_lo, e_lo, f_lo, g_lo, h_lo = H_lo[1], H_lo[2], H_lo[3], H_lo[4], H_lo[5], H_lo[6], H_lo[7], H_lo[8]
				local a_hi, b_hi, c_hi, d_hi, e_hi, f_hi, g_hi, h_hi = H_hi[1], H_hi[2], H_hi[3], H_hi[4], H_hi[5], H_hi[6], H_hi[7], H_hi[8]
				local zero = 0
				for j = 1, 80 do
					local t_lo = XOR(g_lo, AND(e_lo, XOR(f_lo, g_lo)))
					local t_hi = XOR(g_hi, AND(e_hi, XOR(f_hi, g_hi)))
					local u_lo = XOR(OR(SHR(e_lo, 14), SHL(e_hi, 18)), OR(SHR(e_lo, 18), SHL(e_hi, 14)), OR(SHL(e_lo, 23), SHR(e_hi, 9)))
					local u_hi = XOR(OR(SHR(e_hi, 14), SHL(e_lo, 18)), OR(SHR(e_hi, 18), SHL(e_lo, 14)), OR(SHL(e_hi, 23), SHR(e_lo, 9)))
					local sum_lo = u_lo % 2^32 + t_lo % 2^32 + h_lo % 2^32 + K_lo[j] + W[2*j] % 2^32
					local z_lo, z_hi = NORM( sum_lo ), NORM( u_hi + t_hi + h_hi + K_hi[j] + W[2*j-1] + floor(sum_lo / 2^32) )
					zero = zero + zero  -- this thick is needed to avoid "PHI shuffling too complex" due to PHIs overlap
					h_lo, h_hi, g_lo, g_hi, f_lo, f_hi = OR(zero, g_lo), OR(zero, g_hi), OR(zero, f_lo), OR(zero, f_hi), OR(zero, e_lo), OR(zero, e_hi)
					local sum_lo = z_lo % 2^32 + d_lo % 2^32
					e_lo, e_hi = NORM( sum_lo ), NORM( z_hi + d_hi + floor(sum_lo / 2^32) )
					d_lo, d_hi, c_lo, c_hi, b_lo, b_hi = OR(zero, c_lo), OR(zero, c_hi), OR(zero, b_lo), OR(zero, b_hi), OR(zero, a_lo), OR(zero, a_hi)
					u_lo = XOR(OR(SHR(b_lo, 28), SHL(b_hi, 4)), OR(SHL(b_lo, 30), SHR(b_hi, 2)), OR(SHL(b_lo, 25), SHR(b_hi, 7)))
					u_hi = XOR(OR(SHR(b_hi, 28), SHL(b_lo, 4)), OR(SHL(b_hi, 30), SHR(b_lo, 2)), OR(SHL(b_hi, 25), SHR(b_lo, 7)))
					t_lo = OR(AND(d_lo, c_lo), AND(b_lo, XOR(d_lo, c_lo)))
					t_hi = OR(AND(d_hi, c_hi), AND(b_hi, XOR(d_hi, c_hi)))
					local sum_lo = z_lo % 2^32 + t_lo % 2^32 + u_lo % 2^32
					a_lo, a_hi = NORM( sum_lo ), NORM( z_hi + t_hi + u_hi + floor(sum_lo / 2^32) )
				end
				H_lo[1], H_hi[1] = ADD64_4(H_lo[1], H_hi[1], a_lo, a_hi, 0, 0, 0, 0)
				H_lo[2], H_hi[2] = ADD64_4(H_lo[2], H_hi[2], b_lo, b_hi, 0, 0, 0, 0)
				H_lo[3], H_hi[3] = ADD64_4(H_lo[3], H_hi[3], c_lo, c_hi, 0, 0, 0, 0)
				H_lo[4], H_hi[4] = ADD64_4(H_lo[4], H_hi[4], d_lo, d_hi, 0, 0, 0, 0)
				H_lo[5], H_hi[5] = ADD64_4(H_lo[5], H_hi[5], e_lo, e_hi, 0, 0, 0, 0)
				H_lo[6], H_hi[6] = ADD64_4(H_lo[6], H_hi[6], f_lo, f_hi, 0, 0, 0, 0)
				H_lo[7], H_hi[7] = ADD64_4(H_lo[7], H_hi[7], g_lo, g_hi, 0, 0, 0, 0)
				H_lo[8], H_hi[8] = ADD64_4(H_lo[8], H_hi[8], h_lo, h_hi, 0, 0, 0, 0)
			end
		end

	else  -- all platforms except x86


		-- SHA512 implementation for "LuaJIT non-x86 without FFI" branch

		function sha512_feed_128(H_lo, H_hi, str, offs, size)
			-- offs >= 0, size >= 0, size is multiple of 128
			-- W1_hi, W1_lo, W2_hi, W2_lo, ...   Wk_hi = W[2*k-1], Wk_lo = W[2*k]
			local W, K_lo, K_hi = common_W, sha2_K_lo, sha2_K_hi
			for pos = offs, offs + size - 1, 128 do
				for j = 1, 16*2 do
					pos = pos + 4
					local a, b, c, d = byte(str, pos - 3, pos)
					W[j] = OR(SHL(a, 24), SHL(b, 16), SHL(c, 8), d)
				end
				for jj = 17*2, 80*2, 2 do
					local a_lo, a_hi = W[jj-30], W[jj-31]
					local t_lo = XOR(OR(SHR(a_lo, 1), SHL(a_hi, 31)), OR(SHR(a_lo, 8), SHL(a_hi, 24)), OR(SHR(a_lo, 7), SHL(a_hi, 25)))
					local t_hi = XOR(OR(SHR(a_hi, 1), SHL(a_lo, 31)), OR(SHR(a_hi, 8), SHL(a_lo, 24)), SHR(a_hi, 7))
					local b_lo, b_hi = W[jj-4], W[jj-5]
					local u_lo = XOR(OR(SHR(b_lo, 19), SHL(b_hi, 13)), OR(SHL(b_lo, 3), SHR(b_hi, 29)), OR(SHR(b_lo, 6), SHL(b_hi, 26)))
					local u_hi = XOR(OR(SHR(b_hi, 19), SHL(b_lo, 13)), OR(SHL(b_hi, 3), SHR(b_lo, 29)), SHR(b_hi, 6))
					W[jj], W[jj-1] = ADD64_4(t_lo, t_hi, u_lo, u_hi, W[jj-14], W[jj-15], W[jj-32], W[jj-33])
				end
				local a_lo, b_lo, c_lo, d_lo, e_lo, f_lo, g_lo, h_lo = H_lo[1], H_lo[2], H_lo[3], H_lo[4], H_lo[5], H_lo[6], H_lo[7], H_lo[8]
				local a_hi, b_hi, c_hi, d_hi, e_hi, f_hi, g_hi, h_hi = H_hi[1], H_hi[2], H_hi[3], H_hi[4], H_hi[5], H_hi[6], H_hi[7], H_hi[8]
				for j = 1, 80 do
					local t_lo = XOR(g_lo, AND(e_lo, XOR(f_lo, g_lo)))
					local t_hi = XOR(g_hi, AND(e_hi, XOR(f_hi, g_hi)))
					local u_lo = XOR(OR(SHR(e_lo, 14), SHL(e_hi, 18)), OR(SHR(e_lo, 18), SHL(e_hi, 14)), OR(SHL(e_lo, 23), SHR(e_hi, 9)))
					local u_hi = XOR(OR(SHR(e_hi, 14), SHL(e_lo, 18)), OR(SHR(e_hi, 18), SHL(e_lo, 14)), OR(SHL(e_hi, 23), SHR(e_lo, 9)))
					local sum_lo = u_lo % 2^32 + t_lo % 2^32 + h_lo % 2^32 + K_lo[j] + W[2*j] % 2^32
					local z_lo, z_hi = NORM( sum_lo ), NORM( u_hi + t_hi + h_hi + K_hi[j] + W[2*j-1] + floor(sum_lo / 2^32) )
					h_lo, h_hi, g_lo, g_hi, f_lo, f_hi = g_lo, g_hi, f_lo, f_hi, e_lo, e_hi
					local sum_lo = z_lo % 2^32 + d_lo % 2^32
					e_lo, e_hi = NORM( sum_lo ), NORM( z_hi + d_hi + floor(sum_lo / 2^32) )
					d_lo, d_hi, c_lo, c_hi, b_lo, b_hi = c_lo, c_hi, b_lo, b_hi, a_lo, a_hi
					u_lo = XOR(OR(SHR(b_lo, 28), SHL(b_hi, 4)), OR(SHL(b_lo, 30), SHR(b_hi, 2)), OR(SHL(b_lo, 25), SHR(b_hi, 7)))
					u_hi = XOR(OR(SHR(b_hi, 28), SHL(b_lo, 4)), OR(SHL(b_hi, 30), SHR(b_lo, 2)), OR(SHL(b_hi, 25), SHR(b_lo, 7)))
					t_lo = OR(AND(d_lo, c_lo), AND(b_lo, XOR(d_lo, c_lo)))
					t_hi = OR(AND(d_hi, c_hi), AND(b_hi, XOR(d_hi, c_hi)))
					local sum_lo = z_lo % 2^32 + u_lo % 2^32 + t_lo % 2^32
					a_lo, a_hi = NORM( sum_lo ), NORM( z_hi + u_hi + t_hi + floor(sum_lo / 2^32) )
				end
				H_lo[1], H_hi[1] = ADD64_4(H_lo[1], H_hi[1], a_lo, a_hi, 0, 0, 0, 0)
				H_lo[2], H_hi[2] = ADD64_4(H_lo[2], H_hi[2], b_lo, b_hi, 0, 0, 0, 0)
				H_lo[3], H_hi[3] = ADD64_4(H_lo[3], H_hi[3], c_lo, c_hi, 0, 0, 0, 0)
				H_lo[4], H_hi[4] = ADD64_4(H_lo[4], H_hi[4], d_lo, d_hi, 0, 0, 0, 0)
				H_lo[5], H_hi[5] = ADD64_4(H_lo[5], H_hi[5], e_lo, e_hi, 0, 0, 0, 0)
				H_lo[6], H_hi[6] = ADD64_4(H_lo[6], H_hi[6], f_lo, f_hi, 0, 0, 0, 0)
				H_lo[7], H_hi[7] = ADD64_4(H_lo[7], H_hi[7], g_lo, g_hi, 0, 0, 0, 0)
				H_lo[8], H_hi[8] = ADD64_4(H_lo[8], H_hi[8], h_lo, h_hi, 0, 0, 0, 0)
			end
		end

	end


	-- MD5 implementation for "LuaJIT without FFI" branch

	function md5_feed_64(H, str, offs, size)
		-- offs >= 0, size >= 0, size is multiple of 64
		local W, K = common_W, md5_K
		for pos = offs, offs + size - 1, 64 do
			for j = 1, 16 do
				pos = pos + 4
				local a, b, c, d = byte(str, pos - 3, pos)
				W[j] = OR(SHL(d, 24), SHL(c, 16), SHL(b, 8), a)
			end
			local a, b, c, d = H[1], H[2], H[3], H[4]
			for j = 1, 16, 4 do
				a, d, c, b = d, c, b, NORM(ROL(XOR(d, AND(b, XOR(c, d))) + (K[j  ] + W[j  ] + a),  7) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(d, AND(b, XOR(c, d))) + (K[j+1] + W[j+1] + a), 12) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(d, AND(b, XOR(c, d))) + (K[j+2] + W[j+2] + a), 17) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(d, AND(b, XOR(c, d))) + (K[j+3] + W[j+3] + a), 22) + b)
			end
			for j = 17, 32, 4 do
				local g = 5*j-4
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, AND(d, XOR(b, c))) + (K[j  ] + W[AND(g     , 15) + 1] + a),  5) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, AND(d, XOR(b, c))) + (K[j+1] + W[AND(g +  5, 15) + 1] + a),  9) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, AND(d, XOR(b, c))) + (K[j+2] + W[AND(g + 10, 15) + 1] + a), 14) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, AND(d, XOR(b, c))) + (K[j+3] + W[AND(g -  1, 15) + 1] + a), 20) + b)
			end
			for j = 33, 48, 4 do
				local g = 3*j+2
				a, d, c, b = d, c, b, NORM(ROL(XOR(b, c, d) + (K[j  ] + W[AND(g    , 15) + 1] + a),  4) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(b, c, d) + (K[j+1] + W[AND(g + 3, 15) + 1] + a), 11) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(b, c, d) + (K[j+2] + W[AND(g + 6, 15) + 1] + a), 16) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(b, c, d) + (K[j+3] + W[AND(g - 7, 15) + 1] + a), 23) + b)
			end
			for j = 49, 64, 4 do
				local g = j*7
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, OR(b, NOT(d))) + (K[j  ] + W[AND(g - 7, 15) + 1] + a),  6) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, OR(b, NOT(d))) + (K[j+1] + W[AND(g    , 15) + 1] + a), 10) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, OR(b, NOT(d))) + (K[j+2] + W[AND(g + 7, 15) + 1] + a), 15) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, OR(b, NOT(d))) + (K[j+3] + W[AND(g - 2, 15) + 1] + a), 21) + b)
			end
			H[1], H[2], H[3], H[4] = NORM(a + H[1]), NORM(b + H[2]), NORM(c + H[3]), NORM(d + H[4])
		end
	end


	-- SHA-1 implementation for "LuaJIT without FFI" branch

	function sha1_feed_64(H, str, offs, size)
		-- offs >= 0, size >= 0, size is multiple of 64
		local W = common_W
		for pos = offs, offs + size - 1, 64 do
			for j = 1, 16 do
				pos = pos + 4
				local a, b, c, d = byte(str, pos - 3, pos)
				W[j] = OR(SHL(a, 24), SHL(b, 16), SHL(c, 8), d)
			end
			for j = 17, 80 do
				W[j] = ROL(XOR(W[j-3], W[j-8], W[j-14], W[j-16]), 1)
			end
			local a, b, c, d, e = H[1], H[2], H[3], H[4], H[5]
			for j = 1, 20, 5 do
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(d, AND(b, XOR(d, c))) + (W[j]   + 0x5A827999 + e))          -- constant = floor(2^30 * sqrt(2))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(d, AND(b, XOR(d, c))) + (W[j+1] + 0x5A827999 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(d, AND(b, XOR(d, c))) + (W[j+2] + 0x5A827999 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(d, AND(b, XOR(d, c))) + (W[j+3] + 0x5A827999 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(d, AND(b, XOR(d, c))) + (W[j+4] + 0x5A827999 + e))
			end
			for j = 21, 40, 5 do
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j]   + 0x6ED9EBA1 + e))                       -- 2^30 * sqrt(3)
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+1] + 0x6ED9EBA1 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+2] + 0x6ED9EBA1 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+3] + 0x6ED9EBA1 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+4] + 0x6ED9EBA1 + e))
			end
			for j = 41, 60, 5 do
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(AND(d, XOR(b, c)), AND(b, c)) + (W[j]   + 0x8F1BBCDC + e))  -- 2^30 * sqrt(5)
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(AND(d, XOR(b, c)), AND(b, c)) + (W[j+1] + 0x8F1BBCDC + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(AND(d, XOR(b, c)), AND(b, c)) + (W[j+2] + 0x8F1BBCDC + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(AND(d, XOR(b, c)), AND(b, c)) + (W[j+3] + 0x8F1BBCDC + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(AND(d, XOR(b, c)), AND(b, c)) + (W[j+4] + 0x8F1BBCDC + e))
			end
			for j = 61, 80, 5 do
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j]   + 0xCA62C1D6 + e))                       -- 2^30 * sqrt(10)
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+1] + 0xCA62C1D6 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+2] + 0xCA62C1D6 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+3] + 0xCA62C1D6 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+4] + 0xCA62C1D6 + e))
			end
			H[1], H[2], H[3], H[4], H[5] = NORM(a + H[1]), NORM(b + H[2]), NORM(c + H[3]), NORM(d + H[4]), NORM(e + H[5])
		end
	end


	-- BLAKE2b implementation for "LuaJIT without FFI" branch

	do
		local v_lo, v_hi = {}, {}

		local function G(a, b, c, d, k1, k2)
			local W = common_W
			local va_lo, vb_lo, vc_lo, vd_lo = v_lo[a], v_lo[b], v_lo[c], v_lo[d]
			local va_hi, vb_hi, vc_hi, vd_hi = v_hi[a], v_hi[b], v_hi[c], v_hi[d]
			local z = W[2*k1-1] + (va_lo % 2^32 + vb_lo % 2^32)
			va_lo = NORM(z)
			va_hi = NORM(W[2*k1] + (va_hi + vb_hi + floor(z / 2^32)))
			vd_lo, vd_hi = XOR(vd_hi, va_hi), XOR(vd_lo, va_lo)
			z = vc_lo % 2^32 + vd_lo % 2^32
			vc_lo = NORM(z)
			vc_hi = NORM(vc_hi + vd_hi + floor(z / 2^32))
			vb_lo, vb_hi = XOR(vb_lo, vc_lo), XOR(vb_hi, vc_hi)
			vb_lo, vb_hi = XOR(SHR(vb_lo, 24), SHL(vb_hi, 8)), XOR(SHR(vb_hi, 24), SHL(vb_lo, 8))
			z = W[2*k2-1] + (va_lo % 2^32 + vb_lo % 2^32)
			va_lo = NORM(z)
			va_hi = NORM(W[2*k2] + (va_hi + vb_hi + floor(z / 2^32)))
			vd_lo, vd_hi = XOR(vd_lo, va_lo), XOR(vd_hi, va_hi)
			vd_lo, vd_hi = XOR(SHR(vd_lo, 16), SHL(vd_hi, 16)), XOR(SHR(vd_hi, 16), SHL(vd_lo, 16))
			z = vc_lo % 2^32 + vd_lo % 2^32
			vc_lo = NORM(z)
			vc_hi = NORM(vc_hi + vd_hi + floor(z / 2^32))
			vb_lo, vb_hi = XOR(vb_lo, vc_lo), XOR(vb_hi, vc_hi)
			vb_lo, vb_hi = XOR(SHL(vb_lo, 1), SHR(vb_hi, 31)), XOR(SHL(vb_hi, 1), SHR(vb_lo, 31))
			v_lo[a], v_lo[b], v_lo[c], v_lo[d] = va_lo, vb_lo, vc_lo, vd_lo
			v_hi[a], v_hi[b], v_hi[c], v_hi[d] = va_hi, vb_hi, vc_hi, vd_hi
		end

		function blake2b_feed_128(H_lo, H_hi, str, offs, size, bytes_compressed, last_block_size, is_last_node)
			-- offs >= 0, size >= 0, size is multiple of 128
			local W = common_W
			local h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo = H_lo[1], H_lo[2], H_lo[3], H_lo[4], H_lo[5], H_lo[6], H_lo[7], H_lo[8]
			local h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi = H_hi[1], H_hi[2], H_hi[3], H_hi[4], H_hi[5], H_hi[6], H_hi[7], H_hi[8]
			for pos = offs, offs + size - 1, 128 do
				if str then
					for j = 1, 32 do
						pos = pos + 4
						local a, b, c, d = byte(str, pos - 3, pos)
						W[j] = d * 2^24 + OR(SHL(c, 16), SHL(b, 8), a)
					end
				end
				v_lo[0x0], v_lo[0x1], v_lo[0x2], v_lo[0x3], v_lo[0x4], v_lo[0x5], v_lo[0x6], v_lo[0x7] = h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo
				v_lo[0x8], v_lo[0x9], v_lo[0xA], v_lo[0xB], v_lo[0xC], v_lo[0xD], v_lo[0xE], v_lo[0xF] = sha2_H_lo[1], sha2_H_lo[2], sha2_H_lo[3], sha2_H_lo[4], sha2_H_lo[5], sha2_H_lo[6], sha2_H_lo[7], sha2_H_lo[8]
				v_hi[0x0], v_hi[0x1], v_hi[0x2], v_hi[0x3], v_hi[0x4], v_hi[0x5], v_hi[0x6], v_hi[0x7] = h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi
				v_hi[0x8], v_hi[0x9], v_hi[0xA], v_hi[0xB], v_hi[0xC], v_hi[0xD], v_hi[0xE], v_hi[0xF] = sha2_H_hi[1], sha2_H_hi[2], sha2_H_hi[3], sha2_H_hi[4], sha2_H_hi[5], sha2_H_hi[6], sha2_H_hi[7], sha2_H_hi[8]
				bytes_compressed = bytes_compressed + (last_block_size or 128)
				local t0_lo = bytes_compressed % 2^32
				local t0_hi = floor(bytes_compressed / 2^32)
				v_lo[0xC] = XOR(v_lo[0xC], t0_lo)  -- t0 = low_8_bytes(bytes_compressed)
				v_hi[0xC] = XOR(v_hi[0xC], t0_hi)
				-- t1 = high_8_bytes(bytes_compressed) = 0,  message length is always below 2^53 bytes
				if last_block_size then  -- flag f0
					v_lo[0xE] = NOT(v_lo[0xE])
					v_hi[0xE] = NOT(v_hi[0xE])
				end
				if is_last_node then  -- flag f1
					v_lo[0xF] = NOT(v_lo[0xF])
					v_hi[0xF] = NOT(v_hi[0xF])
				end
				for j = 1, 12 do
					local row = sigma[j]
					G(0, 4,  8, 12, row[ 1], row[ 2])
					G(1, 5,  9, 13, row[ 3], row[ 4])
					G(2, 6, 10, 14, row[ 5], row[ 6])
					G(3, 7, 11, 15, row[ 7], row[ 8])
					G(0, 5, 10, 15, row[ 9], row[10])
					G(1, 6, 11, 12, row[11], row[12])
					G(2, 7,  8, 13, row[13], row[14])
					G(3, 4,  9, 14, row[15], row[16])
				end
				h1_lo = XOR(h1_lo, v_lo[0x0], v_lo[0x8])
				h2_lo = XOR(h2_lo, v_lo[0x1], v_lo[0x9])
				h3_lo = XOR(h3_lo, v_lo[0x2], v_lo[0xA])
				h4_lo = XOR(h4_lo, v_lo[0x3], v_lo[0xB])
				h5_lo = XOR(h5_lo, v_lo[0x4], v_lo[0xC])
				h6_lo = XOR(h6_lo, v_lo[0x5], v_lo[0xD])
				h7_lo = XOR(h7_lo, v_lo[0x6], v_lo[0xE])
				h8_lo = XOR(h8_lo, v_lo[0x7], v_lo[0xF])
				h1_hi = XOR(h1_hi, v_hi[0x0], v_hi[0x8])
				h2_hi = XOR(h2_hi, v_hi[0x1], v_hi[0x9])
				h3_hi = XOR(h3_hi, v_hi[0x2], v_hi[0xA])
				h4_hi = XOR(h4_hi, v_hi[0x3], v_hi[0xB])
				h5_hi = XOR(h5_hi, v_hi[0x4], v_hi[0xC])
				h6_hi = XOR(h6_hi, v_hi[0x5], v_hi[0xD])
				h7_hi = XOR(h7_hi, v_hi[0x6], v_hi[0xE])
				h8_hi = XOR(h8_hi, v_hi[0x7], v_hi[0xF])
			end
			H_lo[1], H_lo[2], H_lo[3], H_lo[4], H_lo[5], H_lo[6], H_lo[7], H_lo[8] = h1_lo % 2^32, h2_lo % 2^32, h3_lo % 2^32, h4_lo % 2^32, h5_lo % 2^32, h6_lo % 2^32, h7_lo % 2^32, h8_lo % 2^32
			H_hi[1], H_hi[2], H_hi[3], H_hi[4], H_hi[5], H_hi[6], H_hi[7], H_hi[8] = h1_hi % 2^32, h2_hi % 2^32, h3_hi % 2^32, h4_hi % 2^32, h5_hi % 2^32, h6_hi % 2^32, h7_hi % 2^32, h8_hi % 2^32
			return bytes_compressed
		end

	end
end


if branch == "FFI" or branch == "LJ" then


	-- BLAKE2s and BLAKE3 implementations for "LuaJIT with FFI" and "LuaJIT without FFI" branches

	do
		local W = common_W_blake2s
		local v = v_for_blake2s_feed_64

		local function G(a, b, c, d, k1, k2)
			local va, vb, vc, vd = v[a], v[b], v[c], v[d]
			va = NORM(W[k1] + (va + vb))
			vd = ROR(XOR(vd, va), 16)
			vc = NORM(vc + vd)
			vb = ROR(XOR(vb, vc), 12)
			va = NORM(W[k2] + (va + vb))
			vd = ROR(XOR(vd, va), 8)
			vc = NORM(vc + vd)
			vb = ROR(XOR(vb, vc), 7)
			v[a], v[b], v[c], v[d] = va, vb, vc, vd
		end

		function blake2s_feed_64(H, str, offs, size, bytes_compressed, last_block_size, is_last_node)
			-- offs >= 0, size >= 0, size is multiple of 64
			local h1, h2, h3, h4, h5, h6, h7, h8 = NORM(H[1]), NORM(H[2]), NORM(H[3]), NORM(H[4]), NORM(H[5]), NORM(H[6]), NORM(H[7]), NORM(H[8])
			for pos = offs, offs + size - 1, 64 do
				if str then
					for j = 1, 16 do
						pos = pos + 4
						local a, b, c, d = byte(str, pos - 3, pos)
						W[j] = OR(SHL(d, 24), SHL(c, 16), SHL(b, 8), a)
					end
				end
				v[0x0], v[0x1], v[0x2], v[0x3], v[0x4], v[0x5], v[0x6], v[0x7] = h1, h2, h3, h4, h5, h6, h7, h8
				v[0x8], v[0x9], v[0xA], v[0xB], v[0xE], v[0xF] = NORM(sha2_H_hi[1]), NORM(sha2_H_hi[2]), NORM(sha2_H_hi[3]), NORM(sha2_H_hi[4]), NORM(sha2_H_hi[7]), NORM(sha2_H_hi[8])
				bytes_compressed = bytes_compressed + (last_block_size or 64)
				local t0 = bytes_compressed % 2^32
				local t1 = floor(bytes_compressed / 2^32)
				v[0xC] = XOR(sha2_H_hi[5], t0)  -- t0 = low_4_bytes(bytes_compressed)
				v[0xD] = XOR(sha2_H_hi[6], t1)  -- t1 = high_4_bytes(bytes_compressed
				if last_block_size then  -- flag f0
					v[0xE] = NOT(v[0xE])
				end
				if is_last_node then  -- flag f1
					v[0xF] = NOT(v[0xF])
				end
				for j = 1, 10 do
					local row = sigma[j]
					G(0, 4,  8, 12, row[ 1], row[ 2])
					G(1, 5,  9, 13, row[ 3], row[ 4])
					G(2, 6, 10, 14, row[ 5], row[ 6])
					G(3, 7, 11, 15, row[ 7], row[ 8])
					G(0, 5, 10, 15, row[ 9], row[10])
					G(1, 6, 11, 12, row[11], row[12])
					G(2, 7,  8, 13, row[13], row[14])
					G(3, 4,  9, 14, row[15], row[16])
				end
				h1 = XOR(h1, v[0x0], v[0x8])
				h2 = XOR(h2, v[0x1], v[0x9])
				h3 = XOR(h3, v[0x2], v[0xA])
				h4 = XOR(h4, v[0x3], v[0xB])
				h5 = XOR(h5, v[0x4], v[0xC])
				h6 = XOR(h6, v[0x5], v[0xD])
				h7 = XOR(h7, v[0x6], v[0xE])
				h8 = XOR(h8, v[0x7], v[0xF])
			end
			H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8] = h1, h2, h3, h4, h5, h6, h7, h8
			return bytes_compressed
		end

		function blake3_feed_64(str, offs, size, flags, chunk_index, H_in, H_out, wide_output, block_length)
			-- offs >= 0, size >= 0, size is multiple of 64
			block_length = block_length or 64
			local h1, h2, h3, h4, h5, h6, h7, h8 = NORM(H_in[1]), NORM(H_in[2]), NORM(H_in[3]), NORM(H_in[4]), NORM(H_in[5]), NORM(H_in[6]), NORM(H_in[7]), NORM(H_in[8])
			H_out = H_out or H_in
			for pos = offs, offs + size - 1, 64 do
				if str then
					for j = 1, 16 do
						pos = pos + 4
						local a, b, c, d = byte(str, pos - 3, pos)
						W[j] = OR(SHL(d, 24), SHL(c, 16), SHL(b, 8), a)
					end
				end
				v[0x0], v[0x1], v[0x2], v[0x3], v[0x4], v[0x5], v[0x6], v[0x7] = h1, h2, h3, h4, h5, h6, h7, h8
				v[0x8], v[0x9], v[0xA], v[0xB] = NORM(sha2_H_hi[1]), NORM(sha2_H_hi[2]), NORM(sha2_H_hi[3]), NORM(sha2_H_hi[4])
				v[0xC] = NORM(chunk_index % 2^32)   -- t0 = low_4_bytes(chunk_index)
				v[0xD] = floor(chunk_index / 2^32)  -- t1 = high_4_bytes(chunk_index)
				v[0xE], v[0xF] = block_length, flags
				for j = 1, 7 do
					G(0, 4,  8, 12, perm_blake3[j],      perm_blake3[j + 14])
					G(1, 5,  9, 13, perm_blake3[j + 1],  perm_blake3[j + 2])
					G(2, 6, 10, 14, perm_blake3[j + 16], perm_blake3[j + 7])
					G(3, 7, 11, 15, perm_blake3[j + 15], perm_blake3[j + 17])
					G(0, 5, 10, 15, perm_blake3[j + 21], perm_blake3[j + 5])
					G(1, 6, 11, 12, perm_blake3[j + 3],  perm_blake3[j + 6])
					G(2, 7,  8, 13, perm_blake3[j + 4],  perm_blake3[j + 18])
					G(3, 4,  9, 14, perm_blake3[j + 19], perm_blake3[j + 20])
				end
				if wide_output then
					H_out[ 9] = XOR(h1, v[0x8])
					H_out[10] = XOR(h2, v[0x9])
					H_out[11] = XOR(h3, v[0xA])
					H_out[12] = XOR(h4, v[0xB])
					H_out[13] = XOR(h5, v[0xC])
					H_out[14] = XOR(h6, v[0xD])
					H_out[15] = XOR(h7, v[0xE])
					H_out[16] = XOR(h8, v[0xF])
				end
				h1 = XOR(v[0x0], v[0x8])
				h2 = XOR(v[0x1], v[0x9])
				h3 = XOR(v[0x2], v[0xA])
				h4 = XOR(v[0x3], v[0xB])
				h5 = XOR(v[0x4], v[0xC])
				h6 = XOR(v[0x5], v[0xD])
				h7 = XOR(v[0x6], v[0xE])
				h8 = XOR(v[0x7], v[0xF])
			end
			H_out[1], H_out[2], H_out[3], H_out[4], H_out[5], H_out[6], H_out[7], H_out[8] = h1, h2, h3, h4, h5, h6, h7, h8
		end

	end

end


if branch == "INT64" then


	-- implementation for Lua 5.3/5.4

	hi_factor = 4294967296
	hi_factor_keccak = 4294967296
	lanes_index_base = 1

	HEX64, XORA5, XOR_BYTE, sha256_feed_64, sha512_feed_128, md5_feed_64, sha1_feed_64, keccak_feed, blake2s_feed_64, blake2b_feed_128, blake3_feed_64 = load[=[-- branch "INT64"
      local md5_next_shift, md5_K, sha2_K_lo, sha2_K_hi, build_keccak_format, sha3_RC_lo, sigma, common_W, sha2_H_lo, sha2_H_hi, perm_blake3 = ...
      local string_format, string_unpack = string.format, string.unpack

      local function HEX64(x)
         return string_format("%016x", x)
      end

      local function XORA5(x, y)
         return x ~ (y or 0xa5a5a5a5a5a5a5a5)
      end

      local function XOR_BYTE(x, y)
         return x ~ y
      end

      local function sha256_feed_64(H, str, offs, size)
         -- offs >= 0, size >= 0, size is multiple of 64
         local W, K = common_W, sha2_K_hi
         local h1, h2, h3, h4, h5, h6, h7, h8 = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
         for pos = offs + 1, offs + size, 64 do
            W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16] =
               string_unpack(">I4I4I4I4I4I4I4I4I4I4I4I4I4I4I4I4", str, pos)
            for j = 17, 64 do
               local a = W[j-15]
               a = a<<32 | a
               local b = W[j-2]
               b = b<<32 | b
               W[j] = (a>>7 ~ a>>18 ~ a>>35) + (b>>17 ~ b>>19 ~ b>>42) + W[j-7] + W[j-16] & (1<<32)-1
            end
            local a, b, c, d, e, f, g, h = h1, h2, h3, h4, h5, h6, h7, h8
            for j = 1, 64 do
               e = e<<32 | e & (1<<32)-1
               local z = (e>>6 ~ e>>11 ~ e>>25) + (g ~ e & (f ~ g)) + h + K[j] + W[j]
               h = g
               g = f
               f = e
               e = z + d
               d = c
               c = b
               b = a
               a = a<<32 | a & (1<<32)-1
               a = z + ((a ~ c) & d ~ a & c) + (a>>2 ~ a>>13 ~ a>>22)
            end
            h1 = a + h1
            h2 = b + h2
            h3 = c + h3
            h4 = d + h4
            h5 = e + h5
            h6 = f + h6
            h7 = g + h7
            h8 = h + h8
         end
         H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8] = h1, h2, h3, h4, h5, h6, h7, h8
      end

      local function sha512_feed_128(H, _, str, offs, size)
         -- offs >= 0, size >= 0, size is multiple of 128
         local W, K = common_W, sha2_K_lo
         local h1, h2, h3, h4, h5, h6, h7, h8 = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
         for pos = offs + 1, offs + size, 128 do
            W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16] =
               string_unpack(">i8i8i8i8i8i8i8i8i8i8i8i8i8i8i8i8", str, pos)
            for j = 17, 80 do
               local a = W[j-15]
               local b = W[j-2]
               W[j] = (a >> 1 ~ a >> 7 ~ a >> 8 ~ a << 56 ~ a << 63) + (b >> 6 ~ b >> 19 ~ b >> 61 ~ b << 3 ~ b << 45) + W[j-7] + W[j-16]
            end
            local a, b, c, d, e, f, g, h = h1, h2, h3, h4, h5, h6, h7, h8
            for j = 1, 80 do
               local z = (e >> 14 ~ e >> 18 ~ e >> 41 ~ e << 23 ~ e << 46 ~ e << 50) + (g ~ e & (f ~ g)) + h + K[j] + W[j]
               h = g
               g = f
               f = e
               e = z + d
               d = c
               c = b
               b = a
               a = z + ((a ~ c) & d ~ a & c) + (a >> 28 ~ a >> 34 ~ a >> 39 ~ a << 25 ~ a << 30 ~ a << 36)
            end
            h1 = a + h1
            h2 = b + h2
            h3 = c + h3
            h4 = d + h4
            h5 = e + h5
            h6 = f + h6
            h7 = g + h7
            h8 = h + h8
         end
         H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8] = h1, h2, h3, h4, h5, h6, h7, h8
      end

      local function md5_feed_64(H, str, offs, size)
         -- offs >= 0, size >= 0, size is multiple of 64
         local W, K, md5_next_shift = common_W, md5_K, md5_next_shift
         local h1, h2, h3, h4 = H[1], H[2], H[3], H[4]
         for pos = offs + 1, offs + size, 64 do
            W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16] =
               string_unpack("<I4I4I4I4I4I4I4I4I4I4I4I4I4I4I4I4", str, pos)
            local a, b, c, d = h1, h2, h3, h4
            local s = 32-7
            for j = 1, 16 do
               local F = (d ~ b & (c ~ d)) + a + K[j] + W[j]
               a = d
               d = c
               c = b
               b = ((F<<32 | F & (1<<32)-1) >> s) + b
               s = md5_next_shift[s]
            end
            s = 32-5
            for j = 17, 32 do
               local F = (c ~ d & (b ~ c)) + a + K[j] + W[(5*j-4 & 15) + 1]
               a = d
               d = c
               c = b
               b = ((F<<32 | F & (1<<32)-1) >> s) + b
               s = md5_next_shift[s]
            end
            s = 32-4
            for j = 33, 48 do
               local F = (b ~ c ~ d) + a + K[j] + W[(3*j+2 & 15) + 1]
               a = d
               d = c
               c = b
               b = ((F<<32 | F & (1<<32)-1) >> s) + b
               s = md5_next_shift[s]
            end
            s = 32-6
            for j = 49, 64 do
               local F = (c ~ (b | ~d)) + a + K[j] + W[(j*7-7 & 15) + 1]
               a = d
               d = c
               c = b
               b = ((F<<32 | F & (1<<32)-1) >> s) + b
               s = md5_next_shift[s]
            end
            h1 = a + h1
            h2 = b + h2
            h3 = c + h3
            h4 = d + h4
         end
         H[1], H[2], H[3], H[4] = h1, h2, h3, h4
      end

      local function sha1_feed_64(H, str, offs, size)
         -- offs >= 0, size >= 0, size is multiple of 64
         local W = common_W
         local h1, h2, h3, h4, h5 = H[1], H[2], H[3], H[4], H[5]
         for pos = offs + 1, offs + size, 64 do
            W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16] =
               string_unpack(">I4I4I4I4I4I4I4I4I4I4I4I4I4I4I4I4", str, pos)
            for j = 17, 80 do
               local a = W[j-3] ~ W[j-8] ~ W[j-14] ~ W[j-16]
               W[j] = (a<<32 | a) << 1 >> 32
            end
            local a, b, c, d, e = h1, h2, h3, h4, h5
            for j = 1, 20 do
               local z = ((a<<32 | a & (1<<32)-1) >> 27) + (d ~ b & (c ~ d)) + 0x5A827999 + W[j] + e      -- constant = floor(2^30 * sqrt(2))
               e = d
               d = c
               c = (b<<32 | b & (1<<32)-1) >> 2
               b = a
               a = z
            end
            for j = 21, 40 do
               local z = ((a<<32 | a & (1<<32)-1) >> 27) + (b ~ c ~ d) + 0x6ED9EBA1 + W[j] + e            -- 2^30 * sqrt(3)
               e = d
               d = c
               c = (b<<32 | b & (1<<32)-1) >> 2
               b = a
               a = z
            end
            for j = 41, 60 do
               local z = ((a<<32 | a & (1<<32)-1) >> 27) + ((b ~ c) & d ~ b & c) + 0x8F1BBCDC + W[j] + e  -- 2^30 * sqrt(5)
               e = d
               d = c
               c = (b<<32 | b & (1<<32)-1) >> 2
               b = a
               a = z
            end
            for j = 61, 80 do
               local z = ((a<<32 | a & (1<<32)-1) >> 27) + (b ~ c ~ d) + 0xCA62C1D6 + W[j] + e            -- 2^30 * sqrt(10)
               e = d
               d = c
               c = (b<<32 | b & (1<<32)-1) >> 2
               b = a
               a = z
            end
            h1 = a + h1
            h2 = b + h2
            h3 = c + h3
            h4 = d + h4
            h5 = e + h5
         end
         H[1], H[2], H[3], H[4], H[5] = h1, h2, h3, h4, h5
      end

      local keccak_format_i8 = build_keccak_format("i8")

      local function keccak_feed(lanes, _, str, offs, size, block_size_in_bytes)
         -- offs >= 0, size >= 0, size is multiple of block_size_in_bytes, block_size_in_bytes is positive multiple of 8
         local RC = sha3_RC_lo
         local qwords_qty = block_size_in_bytes / 8
         local keccak_format = keccak_format_i8[qwords_qty]
         for pos = offs + 1, offs + size, block_size_in_bytes do
            local qwords_from_message = {string_unpack(keccak_format, str, pos)}
            for j = 1, qwords_qty do
               lanes[j] = lanes[j] ~ qwords_from_message[j]
            end
            local L01, L02, L03, L04, L05, L06, L07, L08, L09, L10, L11, L12, L13, L14, L15, L16, L17, L18, L19, L20, L21, L22, L23, L24, L25 =
               lanes[1], lanes[2], lanes[3], lanes[4], lanes[5], lanes[6], lanes[7], lanes[8], lanes[9], lanes[10], lanes[11], lanes[12], lanes[13],
               lanes[14], lanes[15], lanes[16], lanes[17], lanes[18], lanes[19], lanes[20], lanes[21], lanes[22], lanes[23], lanes[24], lanes[25]
            for round_idx = 1, 24 do
               local C1 = L01 ~ L06 ~ L11 ~ L16 ~ L21
               local C2 = L02 ~ L07 ~ L12 ~ L17 ~ L22
               local C3 = L03 ~ L08 ~ L13 ~ L18 ~ L23
               local C4 = L04 ~ L09 ~ L14 ~ L19 ~ L24
               local C5 = L05 ~ L10 ~ L15 ~ L20 ~ L25
               local D = C1 ~ C3<<1 ~ C3>>63
               local T0 = D ~ L02
               local T1 = D ~ L07
               local T2 = D ~ L12
               local T3 = D ~ L17
               local T4 = D ~ L22
               L02 = T1<<44 ~ T1>>20
               L07 = T3<<45 ~ T3>>19
               L12 = T0<<1 ~ T0>>63
               L17 = T2<<10 ~ T2>>54
               L22 = T4<<2 ~ T4>>62
               D = C2 ~ C4<<1 ~ C4>>63
               T0 = D ~ L03
               T1 = D ~ L08
               T2 = D ~ L13
               T3 = D ~ L18
               T4 = D ~ L23
               L03 = T2<<43 ~ T2>>21
               L08 = T4<<61 ~ T4>>3
               L13 = T1<<6 ~ T1>>58
               L18 = T3<<15 ~ T3>>49
               L23 = T0<<62 ~ T0>>2
               D = C3 ~ C5<<1 ~ C5>>63
               T0 = D ~ L04
               T1 = D ~ L09
               T2 = D ~ L14
               T3 = D ~ L19
               T4 = D ~ L24
               L04 = T3<<21 ~ T3>>43
               L09 = T0<<28 ~ T0>>36
               L14 = T2<<25 ~ T2>>39
               L19 = T4<<56 ~ T4>>8
               L24 = T1<<55 ~ T1>>9
               D = C4 ~ C1<<1 ~ C1>>63
               T0 = D ~ L05
               T1 = D ~ L10
               T2 = D ~ L15
               T3 = D ~ L20
               T4 = D ~ L25
               L05 = T4<<14 ~ T4>>50
               L10 = T1<<20 ~ T1>>44
               L15 = T3<<8 ~ T3>>56
               L20 = T0<<27 ~ T0>>37
               L25 = T2<<39 ~ T2>>25
               D = C5 ~ C2<<1 ~ C2>>63
               T1 = D ~ L06
               T2 = D ~ L11
               T3 = D ~ L16
               T4 = D ~ L21
               L06 = T2<<3 ~ T2>>61
               L11 = T4<<18 ~ T4>>46
               L16 = T1<<36 ~ T1>>28
               L21 = T3<<41 ~ T3>>23
               L01 = D ~ L01
               L01, L02, L03, L04, L05 = L01 ~ ~L02 & L03, L02 ~ ~L03 & L04, L03 ~ ~L04 & L05, L04 ~ ~L05 & L01, L05 ~ ~L01 & L02
               L06, L07, L08, L09, L10 = L09 ~ ~L10 & L06, L10 ~ ~L06 & L07, L06 ~ ~L07 & L08, L07 ~ ~L08 & L09, L08 ~ ~L09 & L10
               L11, L12, L13, L14, L15 = L12 ~ ~L13 & L14, L13 ~ ~L14 & L15, L14 ~ ~L15 & L11, L15 ~ ~L11 & L12, L11 ~ ~L12 & L13
               L16, L17, L18, L19, L20 = L20 ~ ~L16 & L17, L16 ~ ~L17 & L18, L17 ~ ~L18 & L19, L18 ~ ~L19 & L20, L19 ~ ~L20 & L16
               L21, L22, L23, L24, L25 = L23 ~ ~L24 & L25, L24 ~ ~L25 & L21, L25 ~ ~L21 & L22, L21 ~ ~L22 & L23, L22 ~ ~L23 & L24
               L01 = L01 ~ RC[round_idx]
            end
            lanes[1]  = L01
            lanes[2]  = L02
            lanes[3]  = L03
            lanes[4]  = L04
            lanes[5]  = L05
            lanes[6]  = L06
            lanes[7]  = L07
            lanes[8]  = L08
            lanes[9]  = L09
            lanes[10] = L10
            lanes[11] = L11
            lanes[12] = L12
            lanes[13] = L13
            lanes[14] = L14
            lanes[15] = L15
            lanes[16] = L16
            lanes[17] = L17
            lanes[18] = L18
            lanes[19] = L19
            lanes[20] = L20
            lanes[21] = L21
            lanes[22] = L22
            lanes[23] = L23
            lanes[24] = L24
            lanes[25] = L25
         end
      end

      local function blake2s_feed_64(H, str, offs, size, bytes_compressed, last_block_size, is_last_node)
         -- offs >= 0, size >= 0, size is multiple of 64
         local W = common_W
         local h1, h2, h3, h4, h5, h6, h7, h8 = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
         for pos = offs + 1, offs + size, 64 do
            if str then
               W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16] =
                  string_unpack("<I4I4I4I4I4I4I4I4I4I4I4I4I4I4I4I4", str, pos)
            end
            local v0, v1, v2, v3, v4, v5, v6, v7 = h1, h2, h3, h4, h5, h6, h7, h8
            local v8, v9, vA, vB, vC, vD, vE, vF = sha2_H_hi[1], sha2_H_hi[2], sha2_H_hi[3], sha2_H_hi[4], sha2_H_hi[5], sha2_H_hi[6], sha2_H_hi[7], sha2_H_hi[8]
            bytes_compressed = bytes_compressed + (last_block_size or 64)
            vC = vC ~ bytes_compressed        -- t0 = low_4_bytes(bytes_compressed)
            vD = vD ~ bytes_compressed >> 32  -- t1 = high_4_bytes(bytes_compressed)
            if last_block_size then  -- flag f0
               vE = ~vE
            end
            if is_last_node then  -- flag f1
               vF = ~vF
            end
            for j = 1, 10 do
               local row = sigma[j]
               v0 = v0 + v4 + W[row[1]]
               vC = vC ~ v0
               vC = (vC & (1<<32)-1) >> 16 | vC << 16
               v8 = v8 + vC
               v4 = v4 ~ v8
               v4 = (v4 & (1<<32)-1) >> 12 | v4 << 20
               v0 = v0 + v4 + W[row[2]]
               vC = vC ~ v0
               vC = (vC & (1<<32)-1) >> 8 | vC << 24
               v8 = v8 + vC
               v4 = v4 ~ v8
               v4 = (v4 & (1<<32)-1) >> 7 | v4 << 25
               v1 = v1 + v5 + W[row[3]]
               vD = vD ~ v1
               vD = (vD & (1<<32)-1) >> 16 | vD << 16
               v9 = v9 + vD
               v5 = v5 ~ v9
               v5 = (v5 & (1<<32)-1) >> 12 | v5 << 20
               v1 = v1 + v5 + W[row[4]]
               vD = vD ~ v1
               vD = (vD & (1<<32)-1) >> 8 | vD << 24
               v9 = v9 + vD
               v5 = v5 ~ v9
               v5 = (v5 & (1<<32)-1) >> 7 | v5 << 25
               v2 = v2 + v6 + W[row[5]]
               vE = vE ~ v2
               vE = (vE & (1<<32)-1) >> 16 | vE << 16
               vA = vA + vE
               v6 = v6 ~ vA
               v6 = (v6 & (1<<32)-1) >> 12 | v6 << 20
               v2 = v2 + v6 + W[row[6]]
               vE = vE ~ v2
               vE = (vE & (1<<32)-1) >> 8 | vE << 24
               vA = vA + vE
               v6 = v6 ~ vA
               v6 = (v6 & (1<<32)-1) >> 7 | v6 << 25
               v3 = v3 + v7 + W[row[7]]
               vF = vF ~ v3
               vF = (vF & (1<<32)-1) >> 16 | vF << 16
               vB = vB + vF
               v7 = v7 ~ vB
               v7 = (v7 & (1<<32)-1) >> 12 | v7 << 20
               v3 = v3 + v7 + W[row[8]]
               vF = vF ~ v3
               vF = (vF & (1<<32)-1) >> 8 | vF << 24
               vB = vB + vF
               v7 = v7 ~ vB
               v7 = (v7 & (1<<32)-1) >> 7 | v7 << 25
               v0 = v0 + v5 + W[row[9]]
               vF = vF ~ v0
               vF = (vF & (1<<32)-1) >> 16 | vF << 16
               vA = vA + vF
               v5 = v5 ~ vA
               v5 = (v5 & (1<<32)-1) >> 12 | v5 << 20
               v0 = v0 + v5 + W[row[10]]
               vF = vF ~ v0
               vF = (vF & (1<<32)-1) >> 8 | vF << 24
               vA = vA + vF
               v5 = v5 ~ vA
               v5 = (v5 & (1<<32)-1) >> 7 | v5 << 25
               v1 = v1 + v6 + W[row[11]]
               vC = vC ~ v1
               vC = (vC & (1<<32)-1) >> 16 | vC << 16
               vB = vB + vC
               v6 = v6 ~ vB
               v6 = (v6 & (1<<32)-1) >> 12 | v6 << 20
               v1 = v1 + v6 + W[row[12]]
               vC = vC ~ v1
               vC = (vC & (1<<32)-1) >> 8 | vC << 24
               vB = vB + vC
               v6 = v6 ~ vB
               v6 = (v6 & (1<<32)-1) >> 7 | v6 << 25
               v2 = v2 + v7 + W[row[13]]
               vD = vD ~ v2
               vD = (vD & (1<<32)-1) >> 16 | vD << 16
               v8 = v8 + vD
               v7 = v7 ~ v8
               v7 = (v7 & (1<<32)-1) >> 12 | v7 << 20
               v2 = v2 + v7 + W[row[14]]
               vD = vD ~ v2
               vD = (vD & (1<<32)-1) >> 8 | vD << 24
               v8 = v8 + vD
               v7 = v7 ~ v8
               v7 = (v7 & (1<<32)-1) >> 7 | v7 << 25
               v3 = v3 + v4 + W[row[15]]
               vE = vE ~ v3
               vE = (vE & (1<<32)-1) >> 16 | vE << 16
               v9 = v9 + vE
               v4 = v4 ~ v9
               v4 = (v4 & (1<<32)-1) >> 12 | v4 << 20
               v3 = v3 + v4 + W[row[16]]
               vE = vE ~ v3
               vE = (vE & (1<<32)-1) >> 8 | vE << 24
               v9 = v9 + vE
               v4 = v4 ~ v9
               v4 = (v4 & (1<<32)-1) >> 7 | v4 << 25
            end
            h1 = h1 ~ v0 ~ v8
            h2 = h2 ~ v1 ~ v9
            h3 = h3 ~ v2 ~ vA
            h4 = h4 ~ v3 ~ vB
            h5 = h5 ~ v4 ~ vC
            h6 = h6 ~ v5 ~ vD
            h7 = h7 ~ v6 ~ vE
            h8 = h8 ~ v7 ~ vF
         end
         H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8] = h1, h2, h3, h4, h5, h6, h7, h8
         return bytes_compressed
      end

      local function blake2b_feed_128(H, _, str, offs, size, bytes_compressed, last_block_size, is_last_node)
         -- offs >= 0, size >= 0, size is multiple of 128
         local W = common_W
         local h1, h2, h3, h4, h5, h6, h7, h8 = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
         for pos = offs + 1, offs + size, 128 do
            if str then
               W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16] =
                  string_unpack("<i8i8i8i8i8i8i8i8i8i8i8i8i8i8i8i8", str, pos)
            end
            local v0, v1, v2, v3, v4, v5, v6, v7 = h1, h2, h3, h4, h5, h6, h7, h8
            local v8, v9, vA, vB, vC, vD, vE, vF = sha2_H_lo[1], sha2_H_lo[2], sha2_H_lo[3], sha2_H_lo[4], sha2_H_lo[5], sha2_H_lo[6], sha2_H_lo[7], sha2_H_lo[8]
            bytes_compressed = bytes_compressed + (last_block_size or 128)
            vC = vC ~ bytes_compressed  -- t0 = low_8_bytes(bytes_compressed)
            -- t1 = high_8_bytes(bytes_compressed) = 0,  message length is always below 2^53 bytes
            if last_block_size then  -- flag f0
               vE = ~vE
            end
            if is_last_node then  -- flag f1
               vF = ~vF
            end
            for j = 1, 12 do
               local row = sigma[j]
               v0 = v0 + v4 + W[row[1]]
               vC = vC ~ v0
               vC = vC >> 32 | vC << 32
               v8 = v8 + vC
               v4 = v4 ~ v8
               v4 = v4 >> 24 | v4 << 40
               v0 = v0 + v4 + W[row[2]]
               vC = vC ~ v0
               vC = vC >> 16 | vC << 48
               v8 = v8 + vC
               v4 = v4 ~ v8
               v4 = v4 >> 63 | v4 << 1
               v1 = v1 + v5 + W[row[3]]
               vD = vD ~ v1
               vD = vD >> 32 | vD << 32
               v9 = v9 + vD
               v5 = v5 ~ v9
               v5 = v5 >> 24 | v5 << 40
               v1 = v1 + v5 + W[row[4]]
               vD = vD ~ v1
               vD = vD >> 16 | vD << 48
               v9 = v9 + vD
               v5 = v5 ~ v9
               v5 = v5 >> 63 | v5 << 1
               v2 = v2 + v6 + W[row[5]]
               vE = vE ~ v2
               vE = vE >> 32 | vE << 32
               vA = vA + vE
               v6 = v6 ~ vA
               v6 = v6 >> 24 | v6 << 40
               v2 = v2 + v6 + W[row[6]]
               vE = vE ~ v2
               vE = vE >> 16 | vE << 48
               vA = vA + vE
               v6 = v6 ~ vA
               v6 = v6 >> 63 | v6 << 1
               v3 = v3 + v7 + W[row[7]]
               vF = vF ~ v3
               vF = vF >> 32 | vF << 32
               vB = vB + vF
               v7 = v7 ~ vB
               v7 = v7 >> 24 | v7 << 40
               v3 = v3 + v7 + W[row[8]]
               vF = vF ~ v3
               vF = vF >> 16 | vF << 48
               vB = vB + vF
               v7 = v7 ~ vB
               v7 = v7 >> 63 | v7 << 1
               v0 = v0 + v5 + W[row[9]]
               vF = vF ~ v0
               vF = vF >> 32 | vF << 32
               vA = vA + vF
               v5 = v5 ~ vA
               v5 = v5 >> 24 | v5 << 40
               v0 = v0 + v5 + W[row[10]]
               vF = vF ~ v0
               vF = vF >> 16 | vF << 48
               vA = vA + vF
               v5 = v5 ~ vA
               v5 = v5 >> 63 | v5 << 1
               v1 = v1 + v6 + W[row[11]]
               vC = vC ~ v1
               vC = vC >> 32 | vC << 32
               vB = vB + vC
               v6 = v6 ~ vB
               v6 = v6 >> 24 | v6 << 40
               v1 = v1 + v6 + W[row[12]]
               vC = vC ~ v1
               vC = vC >> 16 | vC << 48
               vB = vB + vC
               v6 = v6 ~ vB
               v6 = v6 >> 63 | v6 << 1
               v2 = v2 + v7 + W[row[13]]
               vD = vD ~ v2
               vD = vD >> 32 | vD << 32
               v8 = v8 + vD
               v7 = v7 ~ v8
               v7 = v7 >> 24 | v7 << 40
               v2 = v2 + v7 + W[row[14]]
               vD = vD ~ v2
               vD = vD >> 16 | vD << 48
               v8 = v8 + vD
               v7 = v7 ~ v8
               v7 = v7 >> 63 | v7 << 1
               v3 = v3 + v4 + W[row[15]]
               vE = vE ~ v3
               vE = vE >> 32 | vE << 32
               v9 = v9 + vE
               v4 = v4 ~ v9
               v4 = v4 >> 24 | v4 << 40
               v3 = v3 + v4 + W[row[16]]
               vE = vE ~ v3
               vE = vE >> 16 | vE << 48
               v9 = v9 + vE
               v4 = v4 ~ v9
               v4 = v4 >> 63 | v4 << 1
            end
            h1 = h1 ~ v0 ~ v8
            h2 = h2 ~ v1 ~ v9
            h3 = h3 ~ v2 ~ vA
            h4 = h4 ~ v3 ~ vB
            h5 = h5 ~ v4 ~ vC
            h6 = h6 ~ v5 ~ vD
            h7 = h7 ~ v6 ~ vE
            h8 = h8 ~ v7 ~ vF
         end
         H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8] = h1, h2, h3, h4, h5, h6, h7, h8
         return bytes_compressed
      end

      local function blake3_feed_64(str, offs, size, flags, chunk_index, H_in, H_out, wide_output, block_length)
         -- offs >= 0, size >= 0, size is multiple of 64
         block_length = block_length or 64
         local W = common_W
         local h1, h2, h3, h4, h5, h6, h7, h8 = H_in[1], H_in[2], H_in[3], H_in[4], H_in[5], H_in[6], H_in[7], H_in[8]
         H_out = H_out or H_in
         for pos = offs + 1, offs + size, 64 do
            if str then
               W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16] =
                  string_unpack("<I4I4I4I4I4I4I4I4I4I4I4I4I4I4I4I4", str, pos)
            end
            local v0, v1, v2, v3, v4, v5, v6, v7 = h1, h2, h3, h4, h5, h6, h7, h8
            local v8, v9, vA, vB = sha2_H_hi[1], sha2_H_hi[2], sha2_H_hi[3], sha2_H_hi[4]
            local t0 = chunk_index % 2^32         -- t0 = low_4_bytes(chunk_index)
            local t1 = (chunk_index - t0) / 2^32  -- t1 = high_4_bytes(chunk_index)
            local vC, vD, vE, vF = 0|t0, 0|t1, block_length, flags
            for j = 1, 7 do
               v0 = v0 + v4 + W[perm_blake3[j]]
               vC = vC ~ v0
               vC = (vC & (1<<32)-1) >> 16 | vC << 16
               v8 = v8 + vC
               v4 = v4 ~ v8
               v4 = (v4 & (1<<32)-1) >> 12 | v4 << 20
               v0 = v0 + v4 + W[perm_blake3[j + 14]]
               vC = vC ~ v0
               vC = (vC & (1<<32)-1) >> 8 | vC << 24
               v8 = v8 + vC
               v4 = v4 ~ v8
               v4 = (v4 & (1<<32)-1) >> 7 | v4 << 25
               v1 = v1 + v5 + W[perm_blake3[j + 1]]
               vD = vD ~ v1
               vD = (vD & (1<<32)-1) >> 16 | vD << 16
               v9 = v9 + vD
               v5 = v5 ~ v9
               v5 = (v5 & (1<<32)-1) >> 12 | v5 << 20
               v1 = v1 + v5 + W[perm_blake3[j + 2]]
               vD = vD ~ v1
               vD = (vD & (1<<32)-1) >> 8 | vD << 24
               v9 = v9 + vD
               v5 = v5 ~ v9
               v5 = (v5 & (1<<32)-1) >> 7 | v5 << 25
               v2 = v2 + v6 + W[perm_blake3[j + 16]]
               vE = vE ~ v2
               vE = (vE & (1<<32)-1) >> 16 | vE << 16
               vA = vA + vE
               v6 = v6 ~ vA
               v6 = (v6 & (1<<32)-1) >> 12 | v6 << 20
               v2 = v2 + v6 + W[perm_blake3[j + 7]]
               vE = vE ~ v2
               vE = (vE & (1<<32)-1) >> 8 | vE << 24
               vA = vA + vE
               v6 = v6 ~ vA
               v6 = (v6 & (1<<32)-1) >> 7 | v6 << 25
               v3 = v3 + v7 + W[perm_blake3[j + 15]]
               vF = vF ~ v3
               vF = (vF & (1<<32)-1) >> 16 | vF << 16
               vB = vB + vF
               v7 = v7 ~ vB
               v7 = (v7 & (1<<32)-1) >> 12 | v7 << 20
               v3 = v3 + v7 + W[perm_blake3[j + 17]]
               vF = vF ~ v3
               vF = (vF & (1<<32)-1) >> 8 | vF << 24
               vB = vB + vF
               v7 = v7 ~ vB
               v7 = (v7 & (1<<32)-1) >> 7 | v7 << 25
               v0 = v0 + v5 + W[perm_blake3[j + 21]]
               vF = vF ~ v0
               vF = (vF & (1<<32)-1) >> 16 | vF << 16
               vA = vA + vF
               v5 = v5 ~ vA
               v5 = (v5 & (1<<32)-1) >> 12 | v5 << 20
               v0 = v0 + v5 + W[perm_blake3[j + 5]]
               vF = vF ~ v0
               vF = (vF & (1<<32)-1) >> 8 | vF << 24
               vA = vA + vF
               v5 = v5 ~ vA
               v5 = (v5 & (1<<32)-1) >> 7 | v5 << 25
               v1 = v1 + v6 + W[perm_blake3[j + 3]]
               vC = vC ~ v1
               vC = (vC & (1<<32)-1) >> 16 | vC << 16
               vB = vB + vC
               v6 = v6 ~ vB
               v6 = (v6 & (1<<32)-1) >> 12 | v6 << 20
               v1 = v1 + v6 + W[perm_blake3[j + 6]]
               vC = vC ~ v1
               vC = (vC & (1<<32)-1) >> 8 | vC << 24
               vB = vB + vC
               v6 = v6 ~ vB
               v6 = (v6 & (1<<32)-1) >> 7 | v6 << 25
               v2 = v2 + v7 + W[perm_blake3[j + 4]]
               vD = vD ~ v2
               vD = (vD & (1<<32)-1) >> 16 | vD << 16
               v8 = v8 + vD
               v7 = v7 ~ v8
               v7 = (v7 & (1<<32)-1) >> 12 | v7 << 20
               v2 = v2 + v7 + W[perm_blake3[j + 18]]
               vD = vD ~ v2
               vD = (vD & (1<<32)-1) >> 8 | vD << 24
               v8 = v8 + vD
               v7 = v7 ~ v8
               v7 = (v7 & (1<<32)-1) >> 7 | v7 << 25
               v3 = v3 + v4 + W[perm_blake3[j + 19]]
               vE = vE ~ v3
               vE = (vE & (1<<32)-1) >> 16 | vE << 16
               v9 = v9 + vE
               v4 = v4 ~ v9
               v4 = (v4 & (1<<32)-1) >> 12 | v4 << 20
               v3 = v3 + v4 + W[perm_blake3[j + 20]]
               vE = vE ~ v3
               vE = (vE & (1<<32)-1) >> 8 | vE << 24
               v9 = v9 + vE
               v4 = v4 ~ v9
               v4 = (v4 & (1<<32)-1) >> 7 | v4 << 25
            end
            if wide_output then
               H_out[ 9] = h1 ~ v8
               H_out[10] = h2 ~ v9
               H_out[11] = h3 ~ vA
               H_out[12] = h4 ~ vB
               H_out[13] = h5 ~ vC
               H_out[14] = h6 ~ vD
               H_out[15] = h7 ~ vE
               H_out[16] = h8 ~ vF
            end
            h1 = v0 ~ v8
            h2 = v1 ~ v9
            h3 = v2 ~ vA
            h4 = v3 ~ vB
            h5 = v4 ~ vC
            h6 = v5 ~ vD
            h7 = v6 ~ vE
            h8 = v7 ~ vF
         end
         H_out[1], H_out[2], H_out[3], H_out[4], H_out[5], H_out[6], H_out[7], H_out[8] = h1, h2, h3, h4, h5, h6, h7, h8
      end

      return HEX64, XORA5, XOR_BYTE, sha256_feed_64, sha512_feed_128, md5_feed_64, sha1_feed_64, keccak_feed, blake2s_feed_64, blake2b_feed_128, blake3_feed_64
   ]=](md5_next_shift, md5_K, sha2_K_lo, sha2_K_hi, build_keccak_format, sha3_RC_lo, sigma, common_W, sha2_H_lo, sha2_H_hi, perm_blake3)

end


if branch == "INT32" then


	-- implementation for Lua 5.3/5.4 having non-standard numbers config "int32"+"double" (built with LUA_INT_TYPE=LUA_INT_INT)

	K_lo_modulo = 2^32

	function HEX(x) -- returns string of 8 lowercase hexadecimal digits
		return string_format("%08x", x)
	end

	XORA5, XOR_BYTE, sha256_feed_64, sha512_feed_128, md5_feed_64, sha1_feed_64, keccak_feed, blake2s_feed_64, blake2b_feed_128, blake3_feed_64 = load[=[-- branch "INT32"
      local md5_next_shift, md5_K, sha2_K_lo, sha2_K_hi, build_keccak_format, sha3_RC_lo, sha3_RC_hi, sigma, common_W, sha2_H_lo, sha2_H_hi, perm_blake3 = ...
      local string_unpack, floor = string.unpack, math.floor

      local function XORA5(x, y)
         return x ~ (y and (y + 2^31) % 2^32 - 2^31 or 0xA5A5A5A5)
      end

      local function XOR_BYTE(x, y)
         return x ~ y
      end

      local function sha256_feed_64(H, str, offs, size)
         -- offs >= 0, size >= 0, size is multiple of 64
         local W, K = common_W, sha2_K_hi
         local h1, h2, h3, h4, h5, h6, h7, h8 = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
         for pos = offs + 1, offs + size, 64 do
            W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16] =
               string_unpack(">i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4", str, pos)
            for j = 17, 64 do
               local a, b = W[j-15], W[j-2]
               W[j] = (a>>7 ~ a<<25 ~ a<<14 ~ a>>18 ~ a>>3) + (b<<15 ~ b>>17 ~ b<<13 ~ b>>19 ~ b>>10) + W[j-7] + W[j-16]
            end
            local a, b, c, d, e, f, g, h = h1, h2, h3, h4, h5, h6, h7, h8
            for j = 1, 64 do
               local z = (e>>6 ~ e<<26 ~ e>>11 ~ e<<21 ~ e>>25 ~ e<<7) + (g ~ e & (f ~ g)) + h + K[j] + W[j]
               h = g
               g = f
               f = e
               e = z + d
               d = c
               c = b
               b = a
               a = z + ((a ~ c) & d ~ a & c) + (a>>2 ~ a<<30 ~ a>>13 ~ a<<19 ~ a<<10 ~ a>>22)
            end
            h1 = a + h1
            h2 = b + h2
            h3 = c + h3
            h4 = d + h4
            h5 = e + h5
            h6 = f + h6
            h7 = g + h7
            h8 = h + h8
         end
         H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8] = h1, h2, h3, h4, h5, h6, h7, h8
      end

      local function sha512_feed_128(H_lo, H_hi, str, offs, size)
         -- offs >= 0, size >= 0, size is multiple of 128
         -- W1_hi, W1_lo, W2_hi, W2_lo, ...   Wk_hi = W[2*k-1], Wk_lo = W[2*k]
         local floor, W, K_lo, K_hi = floor, common_W, sha2_K_lo, sha2_K_hi
         local h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo = H_lo[1], H_lo[2], H_lo[3], H_lo[4], H_lo[5], H_lo[6], H_lo[7], H_lo[8]
         local h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi = H_hi[1], H_hi[2], H_hi[3], H_hi[4], H_hi[5], H_hi[6], H_hi[7], H_hi[8]
         for pos = offs + 1, offs + size, 128 do
            W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16],
               W[17], W[18], W[19], W[20], W[21], W[22], W[23], W[24], W[25], W[26], W[27], W[28], W[29], W[30], W[31], W[32] =
               string_unpack(">i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4", str, pos)
            for jj = 17*2, 80*2, 2 do
               local a_lo, a_hi, b_lo, b_hi = W[jj-30], W[jj-31], W[jj-4], W[jj-5]
               local tmp =
                  (a_lo>>1 ~ a_hi<<31 ~ a_lo>>8 ~ a_hi<<24 ~ a_lo>>7 ~ a_hi<<25) % 2^32
                  + (b_lo>>19 ~ b_hi<<13 ~ b_lo<<3 ~ b_hi>>29 ~ b_lo>>6 ~ b_hi<<26) % 2^32
                  + W[jj-14] % 2^32 + W[jj-32] % 2^32
               W[jj-1] =
                  (a_hi>>1 ~ a_lo<<31 ~ a_hi>>8 ~ a_lo<<24 ~ a_hi>>7)
                  + (b_hi>>19 ~ b_lo<<13 ~ b_hi<<3 ~ b_lo>>29 ~ b_hi>>6)
                  + W[jj-15] + W[jj-33] + floor(tmp / 2^32)
               W[jj] = 0|((tmp + 2^31) % 2^32 - 2^31)
            end
            local a_lo, b_lo, c_lo, d_lo, e_lo, f_lo, g_lo, h_lo = h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo
            local a_hi, b_hi, c_hi, d_hi, e_hi, f_hi, g_hi, h_hi = h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi
            for j = 1, 80 do
               local jj = 2*j
               local z_lo = (e_lo>>14 ~ e_hi<<18 ~ e_lo>>18 ~ e_hi<<14 ~ e_lo<<23 ~ e_hi>>9) % 2^32 + (g_lo ~ e_lo & (f_lo ~ g_lo)) % 2^32 + h_lo % 2^32 + K_lo[j] + W[jj] % 2^32
               local z_hi = (e_hi>>14 ~ e_lo<<18 ~ e_hi>>18 ~ e_lo<<14 ~ e_hi<<23 ~ e_lo>>9) + (g_hi ~ e_hi & (f_hi ~ g_hi)) + h_hi + K_hi[j] + W[jj-1] + floor(z_lo / 2^32)
               z_lo = z_lo % 2^32
               h_lo = g_lo;  h_hi = g_hi
               g_lo = f_lo;  g_hi = f_hi
               f_lo = e_lo;  f_hi = e_hi
               e_lo = z_lo + d_lo % 2^32
               e_hi = z_hi + d_hi + floor(e_lo / 2^32)
               e_lo = 0|((e_lo + 2^31) % 2^32 - 2^31)
               d_lo = c_lo;  d_hi = c_hi
               c_lo = b_lo;  c_hi = b_hi
               b_lo = a_lo;  b_hi = a_hi
               z_lo = z_lo + (d_lo & c_lo ~ b_lo & (d_lo ~ c_lo)) % 2^32 + (b_lo>>28 ~ b_hi<<4 ~ b_lo<<30 ~ b_hi>>2 ~ b_lo<<25 ~ b_hi>>7) % 2^32
               a_hi = z_hi + (d_hi & c_hi ~ b_hi & (d_hi ~ c_hi)) + (b_hi>>28 ~ b_lo<<4 ~ b_hi<<30 ~ b_lo>>2 ~ b_hi<<25 ~ b_lo>>7) + floor(z_lo / 2^32)
               a_lo = 0|((z_lo + 2^31) % 2^32 - 2^31)
            end
            a_lo = h1_lo % 2^32 + a_lo % 2^32
            h1_hi = h1_hi + a_hi + floor(a_lo / 2^32)
            h1_lo = 0|((a_lo + 2^31) % 2^32 - 2^31)
            a_lo = h2_lo % 2^32 + b_lo % 2^32
            h2_hi = h2_hi + b_hi + floor(a_lo / 2^32)
            h2_lo = 0|((a_lo + 2^31) % 2^32 - 2^31)
            a_lo = h3_lo % 2^32 + c_lo % 2^32
            h3_hi = h3_hi + c_hi + floor(a_lo / 2^32)
            h3_lo = 0|((a_lo + 2^31) % 2^32 - 2^31)
            a_lo = h4_lo % 2^32 + d_lo % 2^32
            h4_hi = h4_hi + d_hi + floor(a_lo / 2^32)
            h4_lo = 0|((a_lo + 2^31) % 2^32 - 2^31)
            a_lo = h5_lo % 2^32 + e_lo % 2^32
            h5_hi = h5_hi + e_hi + floor(a_lo / 2^32)
            h5_lo = 0|((a_lo + 2^31) % 2^32 - 2^31)
            a_lo = h6_lo % 2^32 + f_lo % 2^32
            h6_hi = h6_hi + f_hi + floor(a_lo / 2^32)
            h6_lo = 0|((a_lo + 2^31) % 2^32 - 2^31)
            a_lo = h7_lo % 2^32 + g_lo % 2^32
            h7_hi = h7_hi + g_hi + floor(a_lo / 2^32)
            h7_lo = 0|((a_lo + 2^31) % 2^32 - 2^31)
            a_lo = h8_lo % 2^32 + h_lo % 2^32
            h8_hi = h8_hi + h_hi + floor(a_lo / 2^32)
            h8_lo = 0|((a_lo + 2^31) % 2^32 - 2^31)
         end
         H_lo[1], H_lo[2], H_lo[3], H_lo[4], H_lo[5], H_lo[6], H_lo[7], H_lo[8] = h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo
         H_hi[1], H_hi[2], H_hi[3], H_hi[4], H_hi[5], H_hi[6], H_hi[7], H_hi[8] = h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi
      end

      local function md5_feed_64(H, str, offs, size)
         -- offs >= 0, size >= 0, size is multiple of 64
         local W, K, md5_next_shift = common_W, md5_K, md5_next_shift
         local h1, h2, h3, h4 = H[1], H[2], H[3], H[4]
         for pos = offs + 1, offs + size, 64 do
            W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16] =
               string_unpack("<i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4", str, pos)
            local a, b, c, d = h1, h2, h3, h4
            local s = 32-7
            for j = 1, 16 do
               local F = (d ~ b & (c ~ d)) + a + K[j] + W[j]
               a = d
               d = c
               c = b
               b = (F << 32-s | F>>s) + b
               s = md5_next_shift[s]
            end
            s = 32-5
            for j = 17, 32 do
               local F = (c ~ d & (b ~ c)) + a + K[j] + W[(5*j-4 & 15) + 1]
               a = d
               d = c
               c = b
               b = (F << 32-s | F>>s) + b
               s = md5_next_shift[s]
            end
            s = 32-4
            for j = 33, 48 do
               local F = (b ~ c ~ d) + a + K[j] + W[(3*j+2 & 15) + 1]
               a = d
               d = c
               c = b
               b = (F << 32-s | F>>s) + b
               s = md5_next_shift[s]
            end
            s = 32-6
            for j = 49, 64 do
               local F = (c ~ (b | ~d)) + a + K[j] + W[(j*7-7 & 15) + 1]
               a = d
               d = c
               c = b
               b = (F << 32-s | F>>s) + b
               s = md5_next_shift[s]
            end
            h1 = a + h1
            h2 = b + h2
            h3 = c + h3
            h4 = d + h4
         end
         H[1], H[2], H[3], H[4] = h1, h2, h3, h4
      end

      local function sha1_feed_64(H, str, offs, size)
         -- offs >= 0, size >= 0, size is multiple of 64
         local W = common_W
         local h1, h2, h3, h4, h5 = H[1], H[2], H[3], H[4], H[5]
         for pos = offs + 1, offs + size, 64 do
            W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16] =
               string_unpack(">i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4", str, pos)
            for j = 17, 80 do
               local a = W[j-3] ~ W[j-8] ~ W[j-14] ~ W[j-16]
               W[j] = a << 1 ~ a >> 31
            end
            local a, b, c, d, e = h1, h2, h3, h4, h5
            for j = 1, 20 do
               local z = (a << 5 ~ a >> 27) + (d ~ b & (c ~ d)) + 0x5A827999 + W[j] + e      -- constant = floor(2^30 * sqrt(2))
               e = d
               d = c
               c = b << 30 ~ b >> 2
               b = a
               a = z
            end
            for j = 21, 40 do
               local z = (a << 5 ~ a >> 27) + (b ~ c ~ d) + 0x6ED9EBA1 + W[j] + e            -- 2^30 * sqrt(3)
               e = d
               d = c
               c = b << 30 ~ b >> 2
               b = a
               a = z
            end
            for j = 41, 60 do
               local z = (a << 5 ~ a >> 27) + ((b ~ c) & d ~ b & c) + 0x8F1BBCDC + W[j] + e  -- 2^30 * sqrt(5)
               e = d
               d = c
               c = b << 30 ~ b >> 2
               b = a
               a = z
            end
            for j = 61, 80 do
               local z = (a << 5 ~ a >> 27) + (b ~ c ~ d) + 0xCA62C1D6 + W[j] + e            -- 2^30 * sqrt(10)
               e = d
               d = c
               c = b << 30 ~ b >> 2
               b = a
               a = z
            end
            h1 = a + h1
            h2 = b + h2
            h3 = c + h3
            h4 = d + h4
            h5 = e + h5
         end
         H[1], H[2], H[3], H[4], H[5] = h1, h2, h3, h4, h5
      end

      local keccak_format_i4i4 = build_keccak_format("i4i4")

      local function keccak_feed(lanes_lo, lanes_hi, str, offs, size, block_size_in_bytes)
         -- offs >= 0, size >= 0, size is multiple of block_size_in_bytes, block_size_in_bytes is positive multiple of 8
         local RC_lo, RC_hi = sha3_RC_lo, sha3_RC_hi
         local qwords_qty = block_size_in_bytes / 8
         local keccak_format = keccak_format_i4i4[qwords_qty]
         for pos = offs + 1, offs + size, block_size_in_bytes do
            local dwords_from_message = {string_unpack(keccak_format, str, pos)}
            for j = 1, qwords_qty do
               lanes_lo[j] = lanes_lo[j] ~ dwords_from_message[2*j-1]
               lanes_hi[j] = lanes_hi[j] ~ dwords_from_message[2*j]
            end
            local L01_lo, L01_hi, L02_lo, L02_hi, L03_lo, L03_hi, L04_lo, L04_hi, L05_lo, L05_hi, L06_lo, L06_hi, L07_lo, L07_hi, L08_lo, L08_hi,
               L09_lo, L09_hi, L10_lo, L10_hi, L11_lo, L11_hi, L12_lo, L12_hi, L13_lo, L13_hi, L14_lo, L14_hi, L15_lo, L15_hi, L16_lo, L16_hi,
               L17_lo, L17_hi, L18_lo, L18_hi, L19_lo, L19_hi, L20_lo, L20_hi, L21_lo, L21_hi, L22_lo, L22_hi, L23_lo, L23_hi, L24_lo, L24_hi, L25_lo, L25_hi =
               lanes_lo[1], lanes_hi[1], lanes_lo[2], lanes_hi[2], lanes_lo[3], lanes_hi[3], lanes_lo[4], lanes_hi[4], lanes_lo[5], lanes_hi[5],
               lanes_lo[6], lanes_hi[6], lanes_lo[7], lanes_hi[7], lanes_lo[8], lanes_hi[8], lanes_lo[9], lanes_hi[9], lanes_lo[10], lanes_hi[10],
               lanes_lo[11], lanes_hi[11], lanes_lo[12], lanes_hi[12], lanes_lo[13], lanes_hi[13], lanes_lo[14], lanes_hi[14], lanes_lo[15], lanes_hi[15],
               lanes_lo[16], lanes_hi[16], lanes_lo[17], lanes_hi[17], lanes_lo[18], lanes_hi[18], lanes_lo[19], lanes_hi[19], lanes_lo[20], lanes_hi[20],
               lanes_lo[21], lanes_hi[21], lanes_lo[22], lanes_hi[22], lanes_lo[23], lanes_hi[23], lanes_lo[24], lanes_hi[24], lanes_lo[25], lanes_hi[25]
            for round_idx = 1, 24 do
               local C1_lo = L01_lo ~ L06_lo ~ L11_lo ~ L16_lo ~ L21_lo
               local C1_hi = L01_hi ~ L06_hi ~ L11_hi ~ L16_hi ~ L21_hi
               local C2_lo = L02_lo ~ L07_lo ~ L12_lo ~ L17_lo ~ L22_lo
               local C2_hi = L02_hi ~ L07_hi ~ L12_hi ~ L17_hi ~ L22_hi
               local C3_lo = L03_lo ~ L08_lo ~ L13_lo ~ L18_lo ~ L23_lo
               local C3_hi = L03_hi ~ L08_hi ~ L13_hi ~ L18_hi ~ L23_hi
               local C4_lo = L04_lo ~ L09_lo ~ L14_lo ~ L19_lo ~ L24_lo
               local C4_hi = L04_hi ~ L09_hi ~ L14_hi ~ L19_hi ~ L24_hi
               local C5_lo = L05_lo ~ L10_lo ~ L15_lo ~ L20_lo ~ L25_lo
               local C5_hi = L05_hi ~ L10_hi ~ L15_hi ~ L20_hi ~ L25_hi
               local D_lo = C1_lo ~ C3_lo<<1 ~ C3_hi>>31
               local D_hi = C1_hi ~ C3_hi<<1 ~ C3_lo>>31
               local T0_lo = D_lo ~ L02_lo
               local T0_hi = D_hi ~ L02_hi
               local T1_lo = D_lo ~ L07_lo
               local T1_hi = D_hi ~ L07_hi
               local T2_lo = D_lo ~ L12_lo
               local T2_hi = D_hi ~ L12_hi
               local T3_lo = D_lo ~ L17_lo
               local T3_hi = D_hi ~ L17_hi
               local T4_lo = D_lo ~ L22_lo
               local T4_hi = D_hi ~ L22_hi
               L02_lo = T1_lo>>20 ~ T1_hi<<12
               L02_hi = T1_hi>>20 ~ T1_lo<<12
               L07_lo = T3_lo>>19 ~ T3_hi<<13
               L07_hi = T3_hi>>19 ~ T3_lo<<13
               L12_lo = T0_lo<<1 ~ T0_hi>>31
               L12_hi = T0_hi<<1 ~ T0_lo>>31
               L17_lo = T2_lo<<10 ~ T2_hi>>22
               L17_hi = T2_hi<<10 ~ T2_lo>>22
               L22_lo = T4_lo<<2 ~ T4_hi>>30
               L22_hi = T4_hi<<2 ~ T4_lo>>30
               D_lo = C2_lo ~ C4_lo<<1 ~ C4_hi>>31
               D_hi = C2_hi ~ C4_hi<<1 ~ C4_lo>>31
               T0_lo = D_lo ~ L03_lo
               T0_hi = D_hi ~ L03_hi
               T1_lo = D_lo ~ L08_lo
               T1_hi = D_hi ~ L08_hi
               T2_lo = D_lo ~ L13_lo
               T2_hi = D_hi ~ L13_hi
               T3_lo = D_lo ~ L18_lo
               T3_hi = D_hi ~ L18_hi
               T4_lo = D_lo ~ L23_lo
               T4_hi = D_hi ~ L23_hi
               L03_lo = T2_lo>>21 ~ T2_hi<<11
               L03_hi = T2_hi>>21 ~ T2_lo<<11
               L08_lo = T4_lo>>3 ~ T4_hi<<29
               L08_hi = T4_hi>>3 ~ T4_lo<<29
               L13_lo = T1_lo<<6 ~ T1_hi>>26
               L13_hi = T1_hi<<6 ~ T1_lo>>26
               L18_lo = T3_lo<<15 ~ T3_hi>>17
               L18_hi = T3_hi<<15 ~ T3_lo>>17
               L23_lo = T0_lo>>2 ~ T0_hi<<30
               L23_hi = T0_hi>>2 ~ T0_lo<<30
               D_lo = C3_lo ~ C5_lo<<1 ~ C5_hi>>31
               D_hi = C3_hi ~ C5_hi<<1 ~ C5_lo>>31
               T0_lo = D_lo ~ L04_lo
               T0_hi = D_hi ~ L04_hi
               T1_lo = D_lo ~ L09_lo
               T1_hi = D_hi ~ L09_hi
               T2_lo = D_lo ~ L14_lo
               T2_hi = D_hi ~ L14_hi
               T3_lo = D_lo ~ L19_lo
               T3_hi = D_hi ~ L19_hi
               T4_lo = D_lo ~ L24_lo
               T4_hi = D_hi ~ L24_hi
               L04_lo = T3_lo<<21 ~ T3_hi>>11
               L04_hi = T3_hi<<21 ~ T3_lo>>11
               L09_lo = T0_lo<<28 ~ T0_hi>>4
               L09_hi = T0_hi<<28 ~ T0_lo>>4
               L14_lo = T2_lo<<25 ~ T2_hi>>7
               L14_hi = T2_hi<<25 ~ T2_lo>>7
               L19_lo = T4_lo>>8 ~ T4_hi<<24
               L19_hi = T4_hi>>8 ~ T4_lo<<24
               L24_lo = T1_lo>>9 ~ T1_hi<<23
               L24_hi = T1_hi>>9 ~ T1_lo<<23
               D_lo = C4_lo ~ C1_lo<<1 ~ C1_hi>>31
               D_hi = C4_hi ~ C1_hi<<1 ~ C1_lo>>31
               T0_lo = D_lo ~ L05_lo
               T0_hi = D_hi ~ L05_hi
               T1_lo = D_lo ~ L10_lo
               T1_hi = D_hi ~ L10_hi
               T2_lo = D_lo ~ L15_lo
               T2_hi = D_hi ~ L15_hi
               T3_lo = D_lo ~ L20_lo
               T3_hi = D_hi ~ L20_hi
               T4_lo = D_lo ~ L25_lo
               T4_hi = D_hi ~ L25_hi
               L05_lo = T4_lo<<14 ~ T4_hi>>18
               L05_hi = T4_hi<<14 ~ T4_lo>>18
               L10_lo = T1_lo<<20 ~ T1_hi>>12
               L10_hi = T1_hi<<20 ~ T1_lo>>12
               L15_lo = T3_lo<<8 ~ T3_hi>>24
               L15_hi = T3_hi<<8 ~ T3_lo>>24
               L20_lo = T0_lo<<27 ~ T0_hi>>5
               L20_hi = T0_hi<<27 ~ T0_lo>>5
               L25_lo = T2_lo>>25 ~ T2_hi<<7
               L25_hi = T2_hi>>25 ~ T2_lo<<7
               D_lo = C5_lo ~ C2_lo<<1 ~ C2_hi>>31
               D_hi = C5_hi ~ C2_hi<<1 ~ C2_lo>>31
               T1_lo = D_lo ~ L06_lo
               T1_hi = D_hi ~ L06_hi
               T2_lo = D_lo ~ L11_lo
               T2_hi = D_hi ~ L11_hi
               T3_lo = D_lo ~ L16_lo
               T3_hi = D_hi ~ L16_hi
               T4_lo = D_lo ~ L21_lo
               T4_hi = D_hi ~ L21_hi
               L06_lo = T2_lo<<3 ~ T2_hi>>29
               L06_hi = T2_hi<<3 ~ T2_lo>>29
               L11_lo = T4_lo<<18 ~ T4_hi>>14
               L11_hi = T4_hi<<18 ~ T4_lo>>14
               L16_lo = T1_lo>>28 ~ T1_hi<<4
               L16_hi = T1_hi>>28 ~ T1_lo<<4
               L21_lo = T3_lo>>23 ~ T3_hi<<9
               L21_hi = T3_hi>>23 ~ T3_lo<<9
               L01_lo = D_lo ~ L01_lo
               L01_hi = D_hi ~ L01_hi
               L01_lo, L02_lo, L03_lo, L04_lo, L05_lo = L01_lo ~ ~L02_lo & L03_lo, L02_lo ~ ~L03_lo & L04_lo, L03_lo ~ ~L04_lo & L05_lo, L04_lo ~ ~L05_lo & L01_lo, L05_lo ~ ~L01_lo & L02_lo
               L01_hi, L02_hi, L03_hi, L04_hi, L05_hi = L01_hi ~ ~L02_hi & L03_hi, L02_hi ~ ~L03_hi & L04_hi, L03_hi ~ ~L04_hi & L05_hi, L04_hi ~ ~L05_hi & L01_hi, L05_hi ~ ~L01_hi & L02_hi
               L06_lo, L07_lo, L08_lo, L09_lo, L10_lo = L09_lo ~ ~L10_lo & L06_lo, L10_lo ~ ~L06_lo & L07_lo, L06_lo ~ ~L07_lo & L08_lo, L07_lo ~ ~L08_lo & L09_lo, L08_lo ~ ~L09_lo & L10_lo
               L06_hi, L07_hi, L08_hi, L09_hi, L10_hi = L09_hi ~ ~L10_hi & L06_hi, L10_hi ~ ~L06_hi & L07_hi, L06_hi ~ ~L07_hi & L08_hi, L07_hi ~ ~L08_hi & L09_hi, L08_hi ~ ~L09_hi & L10_hi
               L11_lo, L12_lo, L13_lo, L14_lo, L15_lo = L12_lo ~ ~L13_lo & L14_lo, L13_lo ~ ~L14_lo & L15_lo, L14_lo ~ ~L15_lo & L11_lo, L15_lo ~ ~L11_lo & L12_lo, L11_lo ~ ~L12_lo & L13_lo
               L11_hi, L12_hi, L13_hi, L14_hi, L15_hi = L12_hi ~ ~L13_hi & L14_hi, L13_hi ~ ~L14_hi & L15_hi, L14_hi ~ ~L15_hi & L11_hi, L15_hi ~ ~L11_hi & L12_hi, L11_hi ~ ~L12_hi & L13_hi
               L16_lo, L17_lo, L18_lo, L19_lo, L20_lo = L20_lo ~ ~L16_lo & L17_lo, L16_lo ~ ~L17_lo & L18_lo, L17_lo ~ ~L18_lo & L19_lo, L18_lo ~ ~L19_lo & L20_lo, L19_lo ~ ~L20_lo & L16_lo
               L16_hi, L17_hi, L18_hi, L19_hi, L20_hi = L20_hi ~ ~L16_hi & L17_hi, L16_hi ~ ~L17_hi & L18_hi, L17_hi ~ ~L18_hi & L19_hi, L18_hi ~ ~L19_hi & L20_hi, L19_hi ~ ~L20_hi & L16_hi
               L21_lo, L22_lo, L23_lo, L24_lo, L25_lo = L23_lo ~ ~L24_lo & L25_lo, L24_lo ~ ~L25_lo & L21_lo, L25_lo ~ ~L21_lo & L22_lo, L21_lo ~ ~L22_lo & L23_lo, L22_lo ~ ~L23_lo & L24_lo
               L21_hi, L22_hi, L23_hi, L24_hi, L25_hi = L23_hi ~ ~L24_hi & L25_hi, L24_hi ~ ~L25_hi & L21_hi, L25_hi ~ ~L21_hi & L22_hi, L21_hi ~ ~L22_hi & L23_hi, L22_hi ~ ~L23_hi & L24_hi
               L01_lo = L01_lo ~ RC_lo[round_idx]
               L01_hi = L01_hi ~ RC_hi[round_idx]
            end
            lanes_lo[1]  = L01_lo;  lanes_hi[1]  = L01_hi
            lanes_lo[2]  = L02_lo;  lanes_hi[2]  = L02_hi
            lanes_lo[3]  = L03_lo;  lanes_hi[3]  = L03_hi
            lanes_lo[4]  = L04_lo;  lanes_hi[4]  = L04_hi
            lanes_lo[5]  = L05_lo;  lanes_hi[5]  = L05_hi
            lanes_lo[6]  = L06_lo;  lanes_hi[6]  = L06_hi
            lanes_lo[7]  = L07_lo;  lanes_hi[7]  = L07_hi
            lanes_lo[8]  = L08_lo;  lanes_hi[8]  = L08_hi
            lanes_lo[9]  = L09_lo;  lanes_hi[9]  = L09_hi
            lanes_lo[10] = L10_lo;  lanes_hi[10] = L10_hi
            lanes_lo[11] = L11_lo;  lanes_hi[11] = L11_hi
            lanes_lo[12] = L12_lo;  lanes_hi[12] = L12_hi
            lanes_lo[13] = L13_lo;  lanes_hi[13] = L13_hi
            lanes_lo[14] = L14_lo;  lanes_hi[14] = L14_hi
            lanes_lo[15] = L15_lo;  lanes_hi[15] = L15_hi
            lanes_lo[16] = L16_lo;  lanes_hi[16] = L16_hi
            lanes_lo[17] = L17_lo;  lanes_hi[17] = L17_hi
            lanes_lo[18] = L18_lo;  lanes_hi[18] = L18_hi
            lanes_lo[19] = L19_lo;  lanes_hi[19] = L19_hi
            lanes_lo[20] = L20_lo;  lanes_hi[20] = L20_hi
            lanes_lo[21] = L21_lo;  lanes_hi[21] = L21_hi
            lanes_lo[22] = L22_lo;  lanes_hi[22] = L22_hi
            lanes_lo[23] = L23_lo;  lanes_hi[23] = L23_hi
            lanes_lo[24] = L24_lo;  lanes_hi[24] = L24_hi
            lanes_lo[25] = L25_lo;  lanes_hi[25] = L25_hi
         end
      end

      local function blake2s_feed_64(H, str, offs, size, bytes_compressed, last_block_size, is_last_node)
         -- offs >= 0, size >= 0, size is multiple of 64
         local W = common_W
         local h1, h2, h3, h4, h5, h6, h7, h8 = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
         for pos = offs + 1, offs + size, 64 do
            if str then
               W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16] =
                  string_unpack("<i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4", str, pos)
            end
            local v0, v1, v2, v3, v4, v5, v6, v7 = h1, h2, h3, h4, h5, h6, h7, h8
            local v8, v9, vA, vB, vC, vD, vE, vF = sha2_H_hi[1], sha2_H_hi[2], sha2_H_hi[3], sha2_H_hi[4], sha2_H_hi[5], sha2_H_hi[6], sha2_H_hi[7], sha2_H_hi[8]
            bytes_compressed = bytes_compressed + (last_block_size or 64)
            local t0 = bytes_compressed % 2^32
            local t1 = (bytes_compressed - t0) / 2^32
            t0 = (t0 + 2^31) % 2^32 - 2^31  -- convert to int32 range (-2^31)..(2^31-1) to avoid "number has no integer representation" error while XORing
            vC = vC ~ t0  -- t0 = low_4_bytes(bytes_compressed)
            vD = vD ~ t1  -- t1 = high_4_bytes(bytes_compressed)
            if last_block_size then  -- flag f0
               vE = ~vE
            end
            if is_last_node then  -- flag f1
               vF = ~vF
            end
            for j = 1, 10 do
               local row = sigma[j]
               v0 = v0 + v4 + W[row[1]]
               vC = vC ~ v0
               vC = vC >> 16 | vC << 16
               v8 = v8 + vC
               v4 = v4 ~ v8
               v4 = v4 >> 12 | v4 << 20
               v0 = v0 + v4 + W[row[2]]
               vC = vC ~ v0
               vC = vC >> 8 | vC << 24
               v8 = v8 + vC
               v4 = v4 ~ v8
               v4 = v4 >> 7 | v4 << 25
               v1 = v1 + v5 + W[row[3]]
               vD = vD ~ v1
               vD = vD >> 16 | vD << 16
               v9 = v9 + vD
               v5 = v5 ~ v9
               v5 = v5 >> 12 | v5 << 20
               v1 = v1 + v5 + W[row[4]]
               vD = vD ~ v1
               vD = vD >> 8 | vD << 24
               v9 = v9 + vD
               v5 = v5 ~ v9
               v5 = v5 >> 7 | v5 << 25
               v2 = v2 + v6 + W[row[5]]
               vE = vE ~ v2
               vE = vE >> 16 | vE << 16
               vA = vA + vE
               v6 = v6 ~ vA
               v6 = v6 >> 12 | v6 << 20
               v2 = v2 + v6 + W[row[6]]
               vE = vE ~ v2
               vE = vE >> 8 | vE << 24
               vA = vA + vE
               v6 = v6 ~ vA
               v6 = v6 >> 7 | v6 << 25
               v3 = v3 + v7 + W[row[7]]
               vF = vF ~ v3
               vF = vF >> 16 | vF << 16
               vB = vB + vF
               v7 = v7 ~ vB
               v7 = v7 >> 12 | v7 << 20
               v3 = v3 + v7 + W[row[8]]
               vF = vF ~ v3
               vF = vF >> 8 | vF << 24
               vB = vB + vF
               v7 = v7 ~ vB
               v7 = v7 >> 7 | v7 << 25
               v0 = v0 + v5 + W[row[9]]
               vF = vF ~ v0
               vF = vF >> 16 | vF << 16
               vA = vA + vF
               v5 = v5 ~ vA
               v5 = v5 >> 12 | v5 << 20
               v0 = v0 + v5 + W[row[10]]
               vF = vF ~ v0
               vF = vF >> 8 | vF << 24
               vA = vA + vF
               v5 = v5 ~ vA
               v5 = v5 >> 7 | v5 << 25
               v1 = v1 + v6 + W[row[11]]
               vC = vC ~ v1
               vC = vC >> 16 | vC << 16
               vB = vB + vC
               v6 = v6 ~ vB
               v6 = v6 >> 12 | v6 << 20
               v1 = v1 + v6 + W[row[12]]
               vC = vC ~ v1
               vC = vC >> 8 | vC << 24
               vB = vB + vC
               v6 = v6 ~ vB
               v6 = v6 >> 7 | v6 << 25
               v2 = v2 + v7 + W[row[13]]
               vD = vD ~ v2
               vD = vD >> 16 | vD << 16
               v8 = v8 + vD
               v7 = v7 ~ v8
               v7 = v7 >> 12 | v7 << 20
               v2 = v2 + v7 + W[row[14]]
               vD = vD ~ v2
               vD = vD >> 8 | vD << 24
               v8 = v8 + vD
               v7 = v7 ~ v8
               v7 = v7 >> 7 | v7 << 25
               v3 = v3 + v4 + W[row[15]]
               vE = vE ~ v3
               vE = vE >> 16 | vE << 16
               v9 = v9 + vE
               v4 = v4 ~ v9
               v4 = v4 >> 12 | v4 << 20
               v3 = v3 + v4 + W[row[16]]
               vE = vE ~ v3
               vE = vE >> 8 | vE << 24
               v9 = v9 + vE
               v4 = v4 ~ v9
               v4 = v4 >> 7 | v4 << 25
            end
            h1 = h1 ~ v0 ~ v8
            h2 = h2 ~ v1 ~ v9
            h3 = h3 ~ v2 ~ vA
            h4 = h4 ~ v3 ~ vB
            h5 = h5 ~ v4 ~ vC
            h6 = h6 ~ v5 ~ vD
            h7 = h7 ~ v6 ~ vE
            h8 = h8 ~ v7 ~ vF
         end
         H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8] = h1, h2, h3, h4, h5, h6, h7, h8
         return bytes_compressed
      end

      local function blake2b_feed_128(H_lo, H_hi, str, offs, size, bytes_compressed, last_block_size, is_last_node)
         -- offs >= 0, size >= 0, size is multiple of 128
         local W = common_W
         local h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo = H_lo[1], H_lo[2], H_lo[3], H_lo[4], H_lo[5], H_lo[6], H_lo[7], H_lo[8]
         local h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi = H_hi[1], H_hi[2], H_hi[3], H_hi[4], H_hi[5], H_hi[6], H_hi[7], H_hi[8]
         for pos = offs + 1, offs + size, 128 do
            if str then
               W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16],
               W[17], W[18], W[19], W[20], W[21], W[22], W[23], W[24], W[25], W[26], W[27], W[28], W[29], W[30], W[31], W[32] =
                  string_unpack("<i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4", str, pos)
            end
            local v0_lo, v1_lo, v2_lo, v3_lo, v4_lo, v5_lo, v6_lo, v7_lo = h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo
            local v0_hi, v1_hi, v2_hi, v3_hi, v4_hi, v5_hi, v6_hi, v7_hi = h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi
            local v8_lo, v9_lo, vA_lo, vB_lo, vC_lo, vD_lo, vE_lo, vF_lo = sha2_H_lo[1], sha2_H_lo[2], sha2_H_lo[3], sha2_H_lo[4], sha2_H_lo[5], sha2_H_lo[6], sha2_H_lo[7], sha2_H_lo[8]
            local v8_hi, v9_hi, vA_hi, vB_hi, vC_hi, vD_hi, vE_hi, vF_hi = sha2_H_hi[1], sha2_H_hi[2], sha2_H_hi[3], sha2_H_hi[4], sha2_H_hi[5], sha2_H_hi[6], sha2_H_hi[7], sha2_H_hi[8]
            bytes_compressed = bytes_compressed + (last_block_size or 128)
            local t0_lo = bytes_compressed % 2^32
            local t0_hi = (bytes_compressed - t0_lo) / 2^32
            t0_lo = (t0_lo + 2^31) % 2^32 - 2^31  -- convert to int32 range (-2^31)..(2^31-1) to avoid "number has no integer representation" error while XORing
            vC_lo = vC_lo ~ t0_lo  -- t0 = low_8_bytes(bytes_compressed)
            vC_hi = vC_hi ~ t0_hi
            -- t1 = high_8_bytes(bytes_compressed) = 0,  message length is always below 2^53 bytes
            if last_block_size then  -- flag f0
               vE_lo = ~vE_lo
               vE_hi = ~vE_hi
            end
            if is_last_node then  -- flag f1
               vF_lo = ~vF_lo
               vF_hi = ~vF_hi
            end
            for j = 1, 12 do
               local row = sigma[j]
               local k = row[1] * 2
               v0_lo = v0_lo % 2^32 + v4_lo % 2^32 + W[k-1] % 2^32
               v0_hi = v0_hi + v4_hi + floor(v0_lo / 2^32) + W[k]
               v0_lo = 0|((v0_lo + 2^31) % 2^32 - 2^31)
               vC_lo, vC_hi = vC_hi ~ v0_hi, vC_lo ~ v0_lo
               v8_lo = v8_lo % 2^32 + vC_lo % 2^32
               v8_hi = v8_hi + vC_hi + floor(v8_lo / 2^32)
               v8_lo = 0|((v8_lo + 2^31) % 2^32 - 2^31)
               v4_lo, v4_hi = v4_lo ~ v8_lo, v4_hi ~ v8_hi
               v4_lo, v4_hi = v4_lo >> 24 | v4_hi << 8, v4_hi >> 24 | v4_lo << 8
               k = row[2] * 2
               v0_lo = v0_lo % 2^32 + v4_lo % 2^32 + W[k-1] % 2^32
               v0_hi = v0_hi + v4_hi + floor(v0_lo / 2^32) + W[k]
               v0_lo = 0|((v0_lo + 2^31) % 2^32 - 2^31)
               vC_lo, vC_hi = vC_lo ~ v0_lo, vC_hi ~ v0_hi
               vC_lo, vC_hi = vC_lo >> 16 | vC_hi << 16, vC_hi >> 16 | vC_lo << 16
               v8_lo = v8_lo % 2^32 + vC_lo % 2^32
               v8_hi = v8_hi + vC_hi + floor(v8_lo / 2^32)
               v8_lo = 0|((v8_lo + 2^31) % 2^32 - 2^31)
               v4_lo, v4_hi = v4_lo ~ v8_lo, v4_hi ~ v8_hi
               v4_lo, v4_hi = v4_lo << 1 | v4_hi >> 31, v4_hi << 1 | v4_lo >> 31
               k = row[3] * 2
               v1_lo = v1_lo % 2^32 + v5_lo % 2^32 + W[k-1] % 2^32
               v1_hi = v1_hi + v5_hi + floor(v1_lo / 2^32) + W[k]
               v1_lo = 0|((v1_lo + 2^31) % 2^32 - 2^31)
               vD_lo, vD_hi = vD_hi ~ v1_hi, vD_lo ~ v1_lo
               v9_lo = v9_lo % 2^32 + vD_lo % 2^32
               v9_hi = v9_hi + vD_hi + floor(v9_lo / 2^32)
               v9_lo = 0|((v9_lo + 2^31) % 2^32 - 2^31)
               v5_lo, v5_hi = v5_lo ~ v9_lo, v5_hi ~ v9_hi
               v5_lo, v5_hi = v5_lo >> 24 | v5_hi << 8, v5_hi >> 24 | v5_lo << 8
               k = row[4] * 2
               v1_lo = v1_lo % 2^32 + v5_lo % 2^32 + W[k-1] % 2^32
               v1_hi = v1_hi + v5_hi + floor(v1_lo / 2^32) + W[k]
               v1_lo = 0|((v1_lo + 2^31) % 2^32 - 2^31)
               vD_lo, vD_hi = vD_lo ~ v1_lo, vD_hi ~ v1_hi
               vD_lo, vD_hi = vD_lo >> 16 | vD_hi << 16, vD_hi >> 16 | vD_lo << 16
               v9_lo = v9_lo % 2^32 + vD_lo % 2^32
               v9_hi = v9_hi + vD_hi + floor(v9_lo / 2^32)
               v9_lo = 0|((v9_lo + 2^31) % 2^32 - 2^31)
               v5_lo, v5_hi = v5_lo ~ v9_lo, v5_hi ~ v9_hi
               v5_lo, v5_hi = v5_lo << 1 | v5_hi >> 31, v5_hi << 1 | v5_lo >> 31
               k = row[5] * 2
               v2_lo = v2_lo % 2^32 + v6_lo % 2^32 + W[k-1] % 2^32
               v2_hi = v2_hi + v6_hi + floor(v2_lo / 2^32) + W[k]
               v2_lo = 0|((v2_lo + 2^31) % 2^32 - 2^31)
               vE_lo, vE_hi = vE_hi ~ v2_hi, vE_lo ~ v2_lo
               vA_lo = vA_lo % 2^32 + vE_lo % 2^32
               vA_hi = vA_hi + vE_hi + floor(vA_lo / 2^32)
               vA_lo = 0|((vA_lo + 2^31) % 2^32 - 2^31)
               v6_lo, v6_hi = v6_lo ~ vA_lo, v6_hi ~ vA_hi
               v6_lo, v6_hi = v6_lo >> 24 | v6_hi << 8, v6_hi >> 24 | v6_lo << 8
               k = row[6] * 2
               v2_lo = v2_lo % 2^32 + v6_lo % 2^32 + W[k-1] % 2^32
               v2_hi = v2_hi + v6_hi + floor(v2_lo / 2^32) + W[k]
               v2_lo = 0|((v2_lo + 2^31) % 2^32 - 2^31)
               vE_lo, vE_hi = vE_lo ~ v2_lo, vE_hi ~ v2_hi
               vE_lo, vE_hi = vE_lo >> 16 | vE_hi << 16, vE_hi >> 16 | vE_lo << 16
               vA_lo = vA_lo % 2^32 + vE_lo % 2^32
               vA_hi = vA_hi + vE_hi + floor(vA_lo / 2^32)
               vA_lo = 0|((vA_lo + 2^31) % 2^32 - 2^31)
               v6_lo, v6_hi = v6_lo ~ vA_lo, v6_hi ~ vA_hi
               v6_lo, v6_hi = v6_lo << 1 | v6_hi >> 31, v6_hi << 1 | v6_lo >> 31
               k = row[7] * 2
               v3_lo = v3_lo % 2^32 + v7_lo % 2^32 + W[k-1] % 2^32
               v3_hi = v3_hi + v7_hi + floor(v3_lo / 2^32) + W[k]
               v3_lo = 0|((v3_lo + 2^31) % 2^32 - 2^31)
               vF_lo, vF_hi = vF_hi ~ v3_hi, vF_lo ~ v3_lo
               vB_lo = vB_lo % 2^32 + vF_lo % 2^32
               vB_hi = vB_hi + vF_hi + floor(vB_lo / 2^32)
               vB_lo = 0|((vB_lo + 2^31) % 2^32 - 2^31)
               v7_lo, v7_hi = v7_lo ~ vB_lo, v7_hi ~ vB_hi
               v7_lo, v7_hi = v7_lo >> 24 | v7_hi << 8, v7_hi >> 24 | v7_lo << 8
               k = row[8] * 2
               v3_lo = v3_lo % 2^32 + v7_lo % 2^32 + W[k-1] % 2^32
               v3_hi = v3_hi + v7_hi + floor(v3_lo / 2^32) + W[k]
               v3_lo = 0|((v3_lo + 2^31) % 2^32 - 2^31)
               vF_lo, vF_hi = vF_lo ~ v3_lo, vF_hi ~ v3_hi
               vF_lo, vF_hi = vF_lo >> 16 | vF_hi << 16, vF_hi >> 16 | vF_lo << 16
               vB_lo = vB_lo % 2^32 + vF_lo % 2^32
               vB_hi = vB_hi + vF_hi + floor(vB_lo / 2^32)
               vB_lo = 0|((vB_lo + 2^31) % 2^32 - 2^31)
               v7_lo, v7_hi = v7_lo ~ vB_lo, v7_hi ~ vB_hi
               v7_lo, v7_hi = v7_lo << 1 | v7_hi >> 31, v7_hi << 1 | v7_lo >> 31
               k = row[9] * 2
               v0_lo = v0_lo % 2^32 + v5_lo % 2^32 + W[k-1] % 2^32
               v0_hi = v0_hi + v5_hi + floor(v0_lo / 2^32) + W[k]
               v0_lo = 0|((v0_lo + 2^31) % 2^32 - 2^31)
               vF_lo, vF_hi = vF_hi ~ v0_hi, vF_lo ~ v0_lo
               vA_lo = vA_lo % 2^32 + vF_lo % 2^32
               vA_hi = vA_hi + vF_hi + floor(vA_lo / 2^32)
               vA_lo = 0|((vA_lo + 2^31) % 2^32 - 2^31)
               v5_lo, v5_hi = v5_lo ~ vA_lo, v5_hi ~ vA_hi
               v5_lo, v5_hi = v5_lo >> 24 | v5_hi << 8, v5_hi >> 24 | v5_lo << 8
               k = row[10] * 2
               v0_lo = v0_lo % 2^32 + v5_lo % 2^32 + W[k-1] % 2^32
               v0_hi = v0_hi + v5_hi + floor(v0_lo / 2^32) + W[k]
               v0_lo = 0|((v0_lo + 2^31) % 2^32 - 2^31)
               vF_lo, vF_hi = vF_lo ~ v0_lo, vF_hi ~ v0_hi
               vF_lo, vF_hi = vF_lo >> 16 | vF_hi << 16, vF_hi >> 16 | vF_lo << 16
               vA_lo = vA_lo % 2^32 + vF_lo % 2^32
               vA_hi = vA_hi + vF_hi + floor(vA_lo / 2^32)
               vA_lo = 0|((vA_lo + 2^31) % 2^32 - 2^31)
               v5_lo, v5_hi = v5_lo ~ vA_lo, v5_hi ~ vA_hi
               v5_lo, v5_hi = v5_lo << 1 | v5_hi >> 31, v5_hi << 1 | v5_lo >> 31
               k = row[11] * 2
               v1_lo = v1_lo % 2^32 + v6_lo % 2^32 + W[k-1] % 2^32
               v1_hi = v1_hi + v6_hi + floor(v1_lo / 2^32) + W[k]
               v1_lo = 0|((v1_lo + 2^31) % 2^32 - 2^31)
               vC_lo, vC_hi = vC_hi ~ v1_hi, vC_lo ~ v1_lo
               vB_lo = vB_lo % 2^32 + vC_lo % 2^32
               vB_hi = vB_hi + vC_hi + floor(vB_lo / 2^32)
               vB_lo = 0|((vB_lo + 2^31) % 2^32 - 2^31)
               v6_lo, v6_hi = v6_lo ~ vB_lo, v6_hi ~ vB_hi
               v6_lo, v6_hi = v6_lo >> 24 | v6_hi << 8, v6_hi >> 24 | v6_lo << 8
               k = row[12] * 2
               v1_lo = v1_lo % 2^32 + v6_lo % 2^32 + W[k-1] % 2^32
               v1_hi = v1_hi + v6_hi + floor(v1_lo / 2^32) + W[k]
               v1_lo = 0|((v1_lo + 2^31) % 2^32 - 2^31)
               vC_lo, vC_hi = vC_lo ~ v1_lo, vC_hi ~ v1_hi
               vC_lo, vC_hi = vC_lo >> 16 | vC_hi << 16, vC_hi >> 16 | vC_lo << 16
               vB_lo = vB_lo % 2^32 + vC_lo % 2^32
               vB_hi = vB_hi + vC_hi + floor(vB_lo / 2^32)
               vB_lo = 0|((vB_lo + 2^31) % 2^32 - 2^31)
               v6_lo, v6_hi = v6_lo ~ vB_lo, v6_hi ~ vB_hi
               v6_lo, v6_hi = v6_lo << 1 | v6_hi >> 31, v6_hi << 1 | v6_lo >> 31
               k = row[13] * 2
               v2_lo = v2_lo % 2^32 + v7_lo % 2^32 + W[k-1] % 2^32
               v2_hi = v2_hi + v7_hi + floor(v2_lo / 2^32) + W[k]
               v2_lo = 0|((v2_lo + 2^31) % 2^32 - 2^31)
               vD_lo, vD_hi = vD_hi ~ v2_hi, vD_lo ~ v2_lo
               v8_lo = v8_lo % 2^32 + vD_lo % 2^32
               v8_hi = v8_hi + vD_hi + floor(v8_lo / 2^32)
               v8_lo = 0|((v8_lo + 2^31) % 2^32 - 2^31)
               v7_lo, v7_hi = v7_lo ~ v8_lo, v7_hi ~ v8_hi
               v7_lo, v7_hi = v7_lo >> 24 | v7_hi << 8, v7_hi >> 24 | v7_lo << 8
               k = row[14] * 2
               v2_lo = v2_lo % 2^32 + v7_lo % 2^32 + W[k-1] % 2^32
               v2_hi = v2_hi + v7_hi + floor(v2_lo / 2^32) + W[k]
               v2_lo = 0|((v2_lo + 2^31) % 2^32 - 2^31)
               vD_lo, vD_hi = vD_lo ~ v2_lo, vD_hi ~ v2_hi
               vD_lo, vD_hi = vD_lo >> 16 | vD_hi << 16, vD_hi >> 16 | vD_lo << 16
               v8_lo = v8_lo % 2^32 + vD_lo % 2^32
               v8_hi = v8_hi + vD_hi + floor(v8_lo / 2^32)
               v8_lo = 0|((v8_lo + 2^31) % 2^32 - 2^31)
               v7_lo, v7_hi = v7_lo ~ v8_lo, v7_hi ~ v8_hi
               v7_lo, v7_hi = v7_lo << 1 | v7_hi >> 31, v7_hi << 1 | v7_lo >> 31
               k = row[15] * 2
               v3_lo = v3_lo % 2^32 + v4_lo % 2^32 + W[k-1] % 2^32
               v3_hi = v3_hi + v4_hi + floor(v3_lo / 2^32) + W[k]
               v3_lo = 0|((v3_lo + 2^31) % 2^32 - 2^31)
               vE_lo, vE_hi = vE_hi ~ v3_hi, vE_lo ~ v3_lo
               v9_lo = v9_lo % 2^32 + vE_lo % 2^32
               v9_hi = v9_hi + vE_hi + floor(v9_lo / 2^32)
               v9_lo = 0|((v9_lo + 2^31) % 2^32 - 2^31)
               v4_lo, v4_hi = v4_lo ~ v9_lo, v4_hi ~ v9_hi
               v4_lo, v4_hi = v4_lo >> 24 | v4_hi << 8, v4_hi >> 24 | v4_lo << 8
               k = row[16] * 2
               v3_lo = v3_lo % 2^32 + v4_lo % 2^32 + W[k-1] % 2^32
               v3_hi = v3_hi + v4_hi + floor(v3_lo / 2^32) + W[k]
               v3_lo = 0|((v3_lo + 2^31) % 2^32 - 2^31)
               vE_lo, vE_hi = vE_lo ~ v3_lo, vE_hi ~ v3_hi
               vE_lo, vE_hi = vE_lo >> 16 | vE_hi << 16, vE_hi >> 16 | vE_lo << 16
               v9_lo = v9_lo % 2^32 + vE_lo % 2^32
               v9_hi = v9_hi + vE_hi + floor(v9_lo / 2^32)
               v9_lo = 0|((v9_lo + 2^31) % 2^32 - 2^31)
               v4_lo, v4_hi = v4_lo ~ v9_lo, v4_hi ~ v9_hi
               v4_lo, v4_hi = v4_lo << 1 | v4_hi >> 31, v4_hi << 1 | v4_lo >> 31
            end
            h1_lo = h1_lo ~ v0_lo ~ v8_lo
            h2_lo = h2_lo ~ v1_lo ~ v9_lo
            h3_lo = h3_lo ~ v2_lo ~ vA_lo
            h4_lo = h4_lo ~ v3_lo ~ vB_lo
            h5_lo = h5_lo ~ v4_lo ~ vC_lo
            h6_lo = h6_lo ~ v5_lo ~ vD_lo
            h7_lo = h7_lo ~ v6_lo ~ vE_lo
            h8_lo = h8_lo ~ v7_lo ~ vF_lo
            h1_hi = h1_hi ~ v0_hi ~ v8_hi
            h2_hi = h2_hi ~ v1_hi ~ v9_hi
            h3_hi = h3_hi ~ v2_hi ~ vA_hi
            h4_hi = h4_hi ~ v3_hi ~ vB_hi
            h5_hi = h5_hi ~ v4_hi ~ vC_hi
            h6_hi = h6_hi ~ v5_hi ~ vD_hi
            h7_hi = h7_hi ~ v6_hi ~ vE_hi
            h8_hi = h8_hi ~ v7_hi ~ vF_hi
         end
         H_lo[1], H_lo[2], H_lo[3], H_lo[4], H_lo[5], H_lo[6], H_lo[7], H_lo[8] = h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo
         H_hi[1], H_hi[2], H_hi[3], H_hi[4], H_hi[5], H_hi[6], H_hi[7], H_hi[8] = h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi
         return bytes_compressed
      end

      local function blake3_feed_64(str, offs, size, flags, chunk_index, H_in, H_out, wide_output, block_length)
         -- offs >= 0, size >= 0, size is multiple of 64
         block_length = block_length or 64
         local W = common_W
         local h1, h2, h3, h4, h5, h6, h7, h8 = H_in[1], H_in[2], H_in[3], H_in[4], H_in[5], H_in[6], H_in[7], H_in[8]
         H_out = H_out or H_in
         for pos = offs + 1, offs + size, 64 do
            if str then
               W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16] =
                  string_unpack("<i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4", str, pos)
            end
            local v0, v1, v2, v3, v4, v5, v6, v7 = h1, h2, h3, h4, h5, h6, h7, h8
            local v8, v9, vA, vB = sha2_H_hi[1], sha2_H_hi[2], sha2_H_hi[3], sha2_H_hi[4]
            local t0 = chunk_index % 2^32         -- t0 = low_4_bytes(chunk_index)
            local t1 = (chunk_index - t0) / 2^32  -- t1 = high_4_bytes(chunk_index)
            t0 = (t0 + 2^31) % 2^32 - 2^31  -- convert to int32 range (-2^31)..(2^31-1) to avoid "number has no integer representation" error while ORing
            local vC, vD, vE, vF = 0|t0, 0|t1, block_length, flags
            for j = 1, 7 do
               v0 = v0 + v4 + W[perm_blake3[j]]
               vC = vC ~ v0
               vC = vC >> 16 | vC << 16
               v8 = v8 + vC
               v4 = v4 ~ v8
               v4 = v4 >> 12 | v4 << 20
               v0 = v0 + v4 + W[perm_blake3[j + 14]]
               vC = vC ~ v0
               vC = vC >> 8 | vC << 24
               v8 = v8 + vC
               v4 = v4 ~ v8
               v4 = v4 >> 7 | v4 << 25
               v1 = v1 + v5 + W[perm_blake3[j + 1]]
               vD = vD ~ v1
               vD = vD >> 16 | vD << 16
               v9 = v9 + vD
               v5 = v5 ~ v9
               v5 = v5 >> 12 | v5 << 20
               v1 = v1 + v5 + W[perm_blake3[j + 2]]
               vD = vD ~ v1
               vD = vD >> 8 | vD << 24
               v9 = v9 + vD
               v5 = v5 ~ v9
               v5 = v5 >> 7 | v5 << 25
               v2 = v2 + v6 + W[perm_blake3[j + 16]]
               vE = vE ~ v2
               vE = vE >> 16 | vE << 16
               vA = vA + vE
               v6 = v6 ~ vA
               v6 = v6 >> 12 | v6 << 20
               v2 = v2 + v6 + W[perm_blake3[j + 7]]
               vE = vE ~ v2
               vE = vE >> 8 | vE << 24
               vA = vA + vE
               v6 = v6 ~ vA
               v6 = v6 >> 7 | v6 << 25
               v3 = v3 + v7 + W[perm_blake3[j + 15]]
               vF = vF ~ v3
               vF = vF >> 16 | vF << 16
               vB = vB + vF
               v7 = v7 ~ vB
               v7 = v7 >> 12 | v7 << 20
               v3 = v3 + v7 + W[perm_blake3[j + 17]]
               vF = vF ~ v3
               vF = vF >> 8 | vF << 24
               vB = vB + vF
               v7 = v7 ~ vB
               v7 = v7 >> 7 | v7 << 25
               v0 = v0 + v5 + W[perm_blake3[j + 21]]
               vF = vF ~ v0
               vF = vF >> 16 | vF << 16
               vA = vA + vF
               v5 = v5 ~ vA
               v5 = v5 >> 12 | v5 << 20
               v0 = v0 + v5 + W[perm_blake3[j + 5]]
               vF = vF ~ v0
               vF = vF >> 8 | vF << 24
               vA = vA + vF
               v5 = v5 ~ vA
               v5 = v5 >> 7 | v5 << 25
               v1 = v1 + v6 + W[perm_blake3[j + 3]]
               vC = vC ~ v1
               vC = vC >> 16 | vC << 16
               vB = vB + vC
               v6 = v6 ~ vB
               v6 = v6 >> 12 | v6 << 20
               v1 = v1 + v6 + W[perm_blake3[j + 6]]
               vC = vC ~ v1
               vC = vC >> 8 | vC << 24
               vB = vB + vC
               v6 = v6 ~ vB
               v6 = v6 >> 7 | v6 << 25
               v2 = v2 + v7 + W[perm_blake3[j + 4]]
               vD = vD ~ v2
               vD = vD >> 16 | vD << 16
               v8 = v8 + vD
               v7 = v7 ~ v8
               v7 = v7 >> 12 | v7 << 20
               v2 = v2 + v7 + W[perm_blake3[j + 18]]
               vD = vD ~ v2
               vD = vD >> 8 | vD << 24
               v8 = v8 + vD
               v7 = v7 ~ v8
               v7 = v7 >> 7 | v7 << 25
               v3 = v3 + v4 + W[perm_blake3[j + 19]]
               vE = vE ~ v3
               vE = vE >> 16 | vE << 16
               v9 = v9 + vE
               v4 = v4 ~ v9
               v4 = v4 >> 12 | v4 << 20
               v3 = v3 + v4 + W[perm_blake3[j + 20]]
               vE = vE ~ v3
               vE = vE >> 8 | vE << 24
               v9 = v9 + vE
               v4 = v4 ~ v9
               v4 = v4 >> 7 | v4 << 25
            end
            if wide_output then
               H_out[ 9] = h1 ~ v8
               H_out[10] = h2 ~ v9
               H_out[11] = h3 ~ vA
               H_out[12] = h4 ~ vB
               H_out[13] = h5 ~ vC
               H_out[14] = h6 ~ vD
               H_out[15] = h7 ~ vE
               H_out[16] = h8 ~ vF
            end
            h1 = v0 ~ v8
            h2 = v1 ~ v9
            h3 = v2 ~ vA
            h4 = v3 ~ vB
            h5 = v4 ~ vC
            h6 = v5 ~ vD
            h7 = v6 ~ vE
            h8 = v7 ~ vF
         end
         H_out[1], H_out[2], H_out[3], H_out[4], H_out[5], H_out[6], H_out[7], H_out[8] = h1, h2, h3, h4, h5, h6, h7, h8
      end

      return XORA5, XOR_BYTE, sha256_feed_64, sha512_feed_128, md5_feed_64, sha1_feed_64, keccak_feed, blake2s_feed_64, blake2b_feed_128, blake3_feed_64
   ]=](md5_next_shift, md5_K, sha2_K_lo, sha2_K_hi, build_keccak_format, sha3_RC_lo, sha3_RC_hi, sigma, common_W, sha2_H_lo, sha2_H_hi, perm_blake3)

end

XOR = XOR or XORA5

if branch == "LIB32" or branch == "EMUL" then


	-- implementation for Lua 5.1/5.2 (with or without bitwise library available)

	function sha256_feed_64(H, str, offs, size)
		-- offs >= 0, size >= 0, size is multiple of 64
		local W, K = common_W, sha2_K_hi
		local h1, h2, h3, h4, h5, h6, h7, h8 = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
		for pos = offs, offs + size - 1, 64 do
			for j = 1, 16 do
				pos = pos + 4
				local a, b, c, d = byte(str, pos - 3, pos)
				W[j] = ((a * 256 + b) * 256 + c) * 256 + d
			end
			for j = 17, 64 do
				local a, b = W[j-15], W[j-2]
				local a7, a18, b17, b19 = a / 2^7, a / 2^18, b / 2^17, b / 2^19
				W[j] = (XOR(a7 % 1 * (2^32 - 1) + a7, a18 % 1 * (2^32 - 1) + a18, (a - a % 2^3) / 2^3) + W[j-16] + W[j-7]
					+ XOR(b17 % 1 * (2^32 - 1) + b17, b19 % 1 * (2^32 - 1) + b19, (b - b % 2^10) / 2^10)) % 2^32
			end
			local a, b, c, d, e, f, g, h = h1, h2, h3, h4, h5, h6, h7, h8
			for j = 1, 64 do
				e = e % 2^32
				local e6, e11, e7 = e / 2^6, e / 2^11, e * 2^7
				local e7_lo = e7 % 2^32
				local z = AND(e, f) + AND(-1-e, g) + h + K[j] + W[j]
					+ XOR(e6 % 1 * (2^32 - 1) + e6, e11 % 1 * (2^32 - 1) + e11, e7_lo + (e7 - e7_lo) / 2^32)
				h = g
				g = f
				f = e
				e = z + d
				d = c
				c = b
				b = a % 2^32
				local b2, b13, b10 = b / 2^2, b / 2^13, b * 2^10
				local b10_lo = b10 % 2^32
				a = z + AND(d, c) + AND(b, XOR(d, c)) +
					XOR(b2 % 1 * (2^32 - 1) + b2, b13 % 1 * (2^32 - 1) + b13, b10_lo + (b10 - b10_lo) / 2^32)
			end
			h1, h2, h3, h4 = (a + h1) % 2^32, (b + h2) % 2^32, (c + h3) % 2^32, (d + h4) % 2^32
			h5, h6, h7, h8 = (e + h5) % 2^32, (f + h6) % 2^32, (g + h7) % 2^32, (h + h8) % 2^32
		end
		H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8] = h1, h2, h3, h4, h5, h6, h7, h8
	end


	function sha512_feed_128(H_lo, H_hi, str, offs, size)
		-- offs >= 0, size >= 0, size is multiple of 128
		-- W1_hi, W1_lo, W2_hi, W2_lo, ...   Wk_hi = W[2*k-1], Wk_lo = W[2*k]
		local W, K_lo, K_hi = common_W, sha2_K_lo, sha2_K_hi
		local h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo = H_lo[1], H_lo[2], H_lo[3], H_lo[4], H_lo[5], H_lo[6], H_lo[7], H_lo[8]
		local h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi = H_hi[1], H_hi[2], H_hi[3], H_hi[4], H_hi[5], H_hi[6], H_hi[7], H_hi[8]
		for pos = offs, offs + size - 1, 128 do
			for j = 1, 16*2 do
				pos = pos + 4
				local a, b, c, d = byte(str, pos - 3, pos)
				W[j] = ((a * 256 + b) * 256 + c) * 256 + d
			end
			for jj = 17*2, 80*2, 2 do
				local a_hi, a_lo, b_hi, b_lo = W[jj-31], W[jj-30], W[jj-5], W[jj-4]
				local b_hi_6, b_hi_19, b_hi_29, b_lo_19, b_lo_29, a_hi_1, a_hi_7, a_hi_8, a_lo_1, a_lo_8 =
					b_hi % 2^6, b_hi % 2^19, b_hi % 2^29, b_lo % 2^19, b_lo % 2^29, a_hi % 2^1, a_hi % 2^7, a_hi % 2^8, a_lo % 2^1, a_lo % 2^8
				local tmp1 = XOR((a_lo - a_lo_1) / 2^1 + a_hi_1 * 2^31, (a_lo - a_lo_8) / 2^8 + a_hi_8 * 2^24, (a_lo - a_lo % 2^7) / 2^7 + a_hi_7 * 2^25) % 2^32
					+ XOR((b_lo - b_lo_19) / 2^19 + b_hi_19 * 2^13, b_lo_29 * 2^3 + (b_hi - b_hi_29) / 2^29, (b_lo - b_lo % 2^6) / 2^6 + b_hi_6 * 2^26) % 2^32
					+ W[jj-14] + W[jj-32]
				local tmp2 = tmp1 % 2^32
				W[jj-1] = (XOR((a_hi - a_hi_1) / 2^1 + a_lo_1 * 2^31, (a_hi - a_hi_8) / 2^8 + a_lo_8 * 2^24, (a_hi - a_hi_7) / 2^7)
					+ XOR((b_hi - b_hi_19) / 2^19 + b_lo_19 * 2^13, b_hi_29 * 2^3 + (b_lo - b_lo_29) / 2^29, (b_hi - b_hi_6) / 2^6)
					+ W[jj-15] + W[jj-33] + (tmp1 - tmp2) / 2^32) % 2^32
				W[jj] = tmp2
			end
			local a_lo, b_lo, c_lo, d_lo, e_lo, f_lo, g_lo, h_lo = h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo
			local a_hi, b_hi, c_hi, d_hi, e_hi, f_hi, g_hi, h_hi = h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi
			for j = 1, 80 do
				local jj = 2*j
				local e_lo_9, e_lo_14, e_lo_18, e_hi_9, e_hi_14, e_hi_18 = e_lo % 2^9, e_lo % 2^14, e_lo % 2^18, e_hi % 2^9, e_hi % 2^14, e_hi % 2^18
				local tmp1 = (AND(e_lo, f_lo) + AND(-1-e_lo, g_lo)) % 2^32 + h_lo + K_lo[j] + W[jj]
					+ XOR((e_lo - e_lo_14) / 2^14 + e_hi_14 * 2^18, (e_lo - e_lo_18) / 2^18 + e_hi_18 * 2^14, e_lo_9 * 2^23 + (e_hi - e_hi_9) / 2^9) % 2^32
				local z_lo = tmp1 % 2^32
				local z_hi = AND(e_hi, f_hi) + AND(-1-e_hi, g_hi) + h_hi + K_hi[j] + W[jj-1] + (tmp1 - z_lo) / 2^32
					+ XOR((e_hi - e_hi_14) / 2^14 + e_lo_14 * 2^18, (e_hi - e_hi_18) / 2^18 + e_lo_18 * 2^14, e_hi_9 * 2^23 + (e_lo - e_lo_9) / 2^9)
				h_lo = g_lo;  h_hi = g_hi
				g_lo = f_lo;  g_hi = f_hi
				f_lo = e_lo;  f_hi = e_hi
				tmp1 = z_lo + d_lo
				e_lo = tmp1 % 2^32
				e_hi = (z_hi + d_hi + (tmp1 - e_lo) / 2^32) % 2^32
				d_lo = c_lo;  d_hi = c_hi
				c_lo = b_lo;  c_hi = b_hi
				b_lo = a_lo;  b_hi = a_hi
				local b_lo_2, b_lo_7, b_lo_28, b_hi_2, b_hi_7, b_hi_28 = b_lo % 2^2, b_lo % 2^7, b_lo % 2^28, b_hi % 2^2, b_hi % 2^7, b_hi % 2^28
				tmp1 = z_lo + (AND(d_lo, c_lo) + AND(b_lo, XOR(d_lo, c_lo))) % 2^32
					+ XOR((b_lo - b_lo_28) / 2^28 + b_hi_28 * 2^4, b_lo_2 * 2^30 + (b_hi - b_hi_2) / 2^2, b_lo_7 * 2^25 + (b_hi - b_hi_7) / 2^7) % 2^32
				a_lo = tmp1 % 2^32
				a_hi = (z_hi + AND(d_hi, c_hi) + AND(b_hi, XOR(d_hi, c_hi)) + (tmp1 - a_lo) / 2^32
					+ XOR((b_hi - b_hi_28) / 2^28 + b_lo_28 * 2^4, b_hi_2 * 2^30 + (b_lo - b_lo_2) / 2^2, b_hi_7 * 2^25 + (b_lo - b_lo_7) / 2^7)) % 2^32
			end
			a_lo = h1_lo + a_lo
			h1_lo = a_lo % 2^32
			h1_hi = (h1_hi + a_hi + (a_lo - h1_lo) / 2^32) % 2^32
			a_lo = h2_lo + b_lo
			h2_lo = a_lo % 2^32
			h2_hi = (h2_hi + b_hi + (a_lo - h2_lo) / 2^32) % 2^32
			a_lo = h3_lo + c_lo
			h3_lo = a_lo % 2^32
			h3_hi = (h3_hi + c_hi + (a_lo - h3_lo) / 2^32) % 2^32
			a_lo = h4_lo + d_lo
			h4_lo = a_lo % 2^32
			h4_hi = (h4_hi + d_hi + (a_lo - h4_lo) / 2^32) % 2^32
			a_lo = h5_lo + e_lo
			h5_lo = a_lo % 2^32
			h5_hi = (h5_hi + e_hi + (a_lo - h5_lo) / 2^32) % 2^32
			a_lo = h6_lo + f_lo
			h6_lo = a_lo % 2^32
			h6_hi = (h6_hi + f_hi + (a_lo - h6_lo) / 2^32) % 2^32
			a_lo = h7_lo + g_lo
			h7_lo = a_lo % 2^32
			h7_hi = (h7_hi + g_hi + (a_lo - h7_lo) / 2^32) % 2^32
			a_lo = h8_lo + h_lo
			h8_lo = a_lo % 2^32
			h8_hi = (h8_hi + h_hi + (a_lo - h8_lo) / 2^32) % 2^32
		end
		H_lo[1], H_lo[2], H_lo[3], H_lo[4], H_lo[5], H_lo[6], H_lo[7], H_lo[8] = h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo
		H_hi[1], H_hi[2], H_hi[3], H_hi[4], H_hi[5], H_hi[6], H_hi[7], H_hi[8] = h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi
	end


	if branch == "LIB32" then

		function md5_feed_64(H, str, offs, size)
			-- offs >= 0, size >= 0, size is multiple of 64
			local W, K, md5_next_shift = common_W, md5_K, md5_next_shift
			local h1, h2, h3, h4 = H[1], H[2], H[3], H[4]
			for pos = offs, offs + size - 1, 64 do
				for j = 1, 16 do
					pos = pos + 4
					local a, b, c, d = byte(str, pos - 3, pos)
					W[j] = ((d * 256 + c) * 256 + b) * 256 + a
				end
				local a, b, c, d = h1, h2, h3, h4
				local s = 25
				for j = 1, 16 do
					local F = ROR(AND(b, c) + AND(-1-b, d) + a + K[j] + W[j], s) + b
					s = md5_next_shift[s]
					a = d
					d = c
					c = b
					b = F
				end
				s = 27
				for j = 17, 32 do
					local F = ROR(AND(d, b) + AND(-1-d, c) + a + K[j] + W[(5*j-4) % 16 + 1], s) + b
					s = md5_next_shift[s]
					a = d
					d = c
					c = b
					b = F
				end
				s = 28
				for j = 33, 48 do
					local F = ROR(XOR(XOR(b, c), d) + a + K[j] + W[(3*j+2) % 16 + 1], s) + b
					s = md5_next_shift[s]
					a = d
					d = c
					c = b
					b = F
				end
				s = 26
				for j = 49, 64 do
					local F = ROR(XOR(c, OR(b, -1-d)) + a + K[j] + W[(j*7-7) % 16 + 1], s) + b
					s = md5_next_shift[s]
					a = d
					d = c
					c = b
					b = F
				end
				h1 = (a + h1) % 2^32
				h2 = (b + h2) % 2^32
				h3 = (c + h3) % 2^32
				h4 = (d + h4) % 2^32
			end
			H[1], H[2], H[3], H[4] = h1, h2, h3, h4
		end

	elseif branch == "EMUL" then

		function md5_feed_64(H, str, offs, size)
			-- offs >= 0, size >= 0, size is multiple of 64
			local W, K, md5_next_shift = common_W, md5_K, md5_next_shift
			local h1, h2, h3, h4 = H[1], H[2], H[3], H[4]
			for pos = offs, offs + size - 1, 64 do
				for j = 1, 16 do
					pos = pos + 4
					local a, b, c, d = byte(str, pos - 3, pos)
					W[j] = ((d * 256 + c) * 256 + b) * 256 + a
				end
				local a, b, c, d = h1, h2, h3, h4
				local s = 25
				for j = 1, 16 do
					local z = (AND(b, c) + AND(-1-b, d) + a + K[j] + W[j]) % 2^32 / 2^s
					local y = z % 1
					s = md5_next_shift[s]
					a = d
					d = c
					c = b
					b = y * 2^32 + (z - y) + b
				end
				s = 27
				for j = 17, 32 do
					local z = (AND(d, b) + AND(-1-d, c) + a + K[j] + W[(5*j-4) % 16 + 1]) % 2^32 / 2^s
					local y = z % 1
					s = md5_next_shift[s]
					a = d
					d = c
					c = b
					b = y * 2^32 + (z - y) + b
				end
				s = 28
				for j = 33, 48 do
					local z = (XOR(XOR(b, c), d) + a + K[j] + W[(3*j+2) % 16 + 1]) % 2^32 / 2^s
					local y = z % 1
					s = md5_next_shift[s]
					a = d
					d = c
					c = b
					b = y * 2^32 + (z - y) + b
				end
				s = 26
				for j = 49, 64 do
					local z = (XOR(c, OR(b, -1-d)) + a + K[j] + W[(j*7-7) % 16 + 1]) % 2^32 / 2^s
					local y = z % 1
					s = md5_next_shift[s]
					a = d
					d = c
					c = b
					b = y * 2^32 + (z - y) + b
				end
				h1 = (a + h1) % 2^32
				h2 = (b + h2) % 2^32
				h3 = (c + h3) % 2^32
				h4 = (d + h4) % 2^32
			end
			H[1], H[2], H[3], H[4] = h1, h2, h3, h4
		end

	end


	function sha1_feed_64(H, str, offs, size)
		-- offs >= 0, size >= 0, size is multiple of 64
		local W = common_W
		local h1, h2, h3, h4, h5 = H[1], H[2], H[3], H[4], H[5]
		for pos = offs, offs + size - 1, 64 do
			for j = 1, 16 do
				pos = pos + 4
				local a, b, c, d = byte(str, pos - 3, pos)
				W[j] = ((a * 256 + b) * 256 + c) * 256 + d
			end
			for j = 17, 80 do
				local a = XOR(W[j-3], W[j-8], W[j-14], W[j-16]) % 2^32 * 2
				local b = a % 2^32
				W[j] = b + (a - b) / 2^32
			end
			local a, b, c, d, e = h1, h2, h3, h4, h5
			for j = 1, 20 do
				local a5 = a * 2^5
				local z = a5 % 2^32
				z = z + (a5 - z) / 2^32 + AND(b, c) + AND(-1-b, d) + 0x5A827999 + W[j] + e        -- constant = floor(2^30 * sqrt(2))
				e = d
				d = c
				c = b / 2^2
				c = c % 1 * (2^32 - 1) + c
				b = a
				a = z % 2^32
			end
			for j = 21, 40 do
				local a5 = a * 2^5
				local z = a5 % 2^32
				z = z + (a5 - z) / 2^32 + XOR(b, c, d) + 0x6ED9EBA1 + W[j] + e                    -- 2^30 * sqrt(3)
				e = d
				d = c
				c = b / 2^2
				c = c % 1 * (2^32 - 1) + c
				b = a
				a = z % 2^32
			end
			for j = 41, 60 do
				local a5 = a * 2^5
				local z = a5 % 2^32
				z = z + (a5 - z) / 2^32 + AND(d, c) + AND(b, XOR(d, c)) + 0x8F1BBCDC + W[j] + e   -- 2^30 * sqrt(5)
				e = d
				d = c
				c = b / 2^2
				c = c % 1 * (2^32 - 1) + c
				b = a
				a = z % 2^32
			end
			for j = 61, 80 do
				local a5 = a * 2^5
				local z = a5 % 2^32
				z = z + (a5 - z) / 2^32 + XOR(b, c, d) + 0xCA62C1D6 + W[j] + e                    -- 2^30 * sqrt(10)
				e = d
				d = c
				c = b / 2^2
				c = c % 1 * (2^32 - 1) + c
				b = a
				a = z % 2^32
			end
			h1 = (a + h1) % 2^32
			h2 = (b + h2) % 2^32
			h3 = (c + h3) % 2^32
			h4 = (d + h4) % 2^32
			h5 = (e + h5) % 2^32
		end
		H[1], H[2], H[3], H[4], H[5] = h1, h2, h3, h4, h5
	end


	function keccak_feed(lanes_lo, lanes_hi, str, offs, size, block_size_in_bytes)
		-- This is an example of a Lua function having 79 local variables :-)
		-- offs >= 0, size >= 0, size is multiple of block_size_in_bytes, block_size_in_bytes is positive multiple of 8
		local RC_lo, RC_hi = sha3_RC_lo, sha3_RC_hi
		local qwords_qty = block_size_in_bytes / 8
		for pos = offs, offs + size - 1, block_size_in_bytes do
			for j = 1, qwords_qty do
				local a, b, c, d = byte(str, pos + 1, pos + 4)
				lanes_lo[j] = XOR(lanes_lo[j], ((d * 256 + c) * 256 + b) * 256 + a)
				pos = pos + 8
				a, b, c, d = byte(str, pos - 3, pos)
				lanes_hi[j] = XOR(lanes_hi[j], ((d * 256 + c) * 256 + b) * 256 + a)
			end
			local L01_lo, L01_hi, L02_lo, L02_hi, L03_lo, L03_hi, L04_lo, L04_hi, L05_lo, L05_hi, L06_lo, L06_hi, L07_lo, L07_hi, L08_lo, L08_hi,
			L09_lo, L09_hi, L10_lo, L10_hi, L11_lo, L11_hi, L12_lo, L12_hi, L13_lo, L13_hi, L14_lo, L14_hi, L15_lo, L15_hi, L16_lo, L16_hi,
			L17_lo, L17_hi, L18_lo, L18_hi, L19_lo, L19_hi, L20_lo, L20_hi, L21_lo, L21_hi, L22_lo, L22_hi, L23_lo, L23_hi, L24_lo, L24_hi, L25_lo, L25_hi =
				lanes_lo[1], lanes_hi[1], lanes_lo[2], lanes_hi[2], lanes_lo[3], lanes_hi[3], lanes_lo[4], lanes_hi[4], lanes_lo[5], lanes_hi[5],
			lanes_lo[6], lanes_hi[6], lanes_lo[7], lanes_hi[7], lanes_lo[8], lanes_hi[8], lanes_lo[9], lanes_hi[9], lanes_lo[10], lanes_hi[10],
			lanes_lo[11], lanes_hi[11], lanes_lo[12], lanes_hi[12], lanes_lo[13], lanes_hi[13], lanes_lo[14], lanes_hi[14], lanes_lo[15], lanes_hi[15],
			lanes_lo[16], lanes_hi[16], lanes_lo[17], lanes_hi[17], lanes_lo[18], lanes_hi[18], lanes_lo[19], lanes_hi[19], lanes_lo[20], lanes_hi[20],
			lanes_lo[21], lanes_hi[21], lanes_lo[22], lanes_hi[22], lanes_lo[23], lanes_hi[23], lanes_lo[24], lanes_hi[24], lanes_lo[25], lanes_hi[25]
			for round_idx = 1, 24 do
				local C1_lo = XOR(L01_lo, L06_lo, L11_lo, L16_lo, L21_lo)
				local C1_hi = XOR(L01_hi, L06_hi, L11_hi, L16_hi, L21_hi)
				local C2_lo = XOR(L02_lo, L07_lo, L12_lo, L17_lo, L22_lo)
				local C2_hi = XOR(L02_hi, L07_hi, L12_hi, L17_hi, L22_hi)
				local C3_lo = XOR(L03_lo, L08_lo, L13_lo, L18_lo, L23_lo)
				local C3_hi = XOR(L03_hi, L08_hi, L13_hi, L18_hi, L23_hi)
				local C4_lo = XOR(L04_lo, L09_lo, L14_lo, L19_lo, L24_lo)
				local C4_hi = XOR(L04_hi, L09_hi, L14_hi, L19_hi, L24_hi)
				local C5_lo = XOR(L05_lo, L10_lo, L15_lo, L20_lo, L25_lo)
				local C5_hi = XOR(L05_hi, L10_hi, L15_hi, L20_hi, L25_hi)
				local D_lo = XOR(C1_lo, C3_lo * 2 + (C3_hi % 2^32 - C3_hi % 2^31) / 2^31)
				local D_hi = XOR(C1_hi, C3_hi * 2 + (C3_lo % 2^32 - C3_lo % 2^31) / 2^31)
				local T0_lo = XOR(D_lo, L02_lo)
				local T0_hi = XOR(D_hi, L02_hi)
				local T1_lo = XOR(D_lo, L07_lo)
				local T1_hi = XOR(D_hi, L07_hi)
				local T2_lo = XOR(D_lo, L12_lo)
				local T2_hi = XOR(D_hi, L12_hi)
				local T3_lo = XOR(D_lo, L17_lo)
				local T3_hi = XOR(D_hi, L17_hi)
				local T4_lo = XOR(D_lo, L22_lo)
				local T4_hi = XOR(D_hi, L22_hi)
				L02_lo = (T1_lo % 2^32 - T1_lo % 2^20) / 2^20 + T1_hi * 2^12
				L02_hi = (T1_hi % 2^32 - T1_hi % 2^20) / 2^20 + T1_lo * 2^12
				L07_lo = (T3_lo % 2^32 - T3_lo % 2^19) / 2^19 + T3_hi * 2^13
				L07_hi = (T3_hi % 2^32 - T3_hi % 2^19) / 2^19 + T3_lo * 2^13
				L12_lo = T0_lo * 2 + (T0_hi % 2^32 - T0_hi % 2^31) / 2^31
				L12_hi = T0_hi * 2 + (T0_lo % 2^32 - T0_lo % 2^31) / 2^31
				L17_lo = T2_lo * 2^10 + (T2_hi % 2^32 - T2_hi % 2^22) / 2^22
				L17_hi = T2_hi * 2^10 + (T2_lo % 2^32 - T2_lo % 2^22) / 2^22
				L22_lo = T4_lo * 2^2 + (T4_hi % 2^32 - T4_hi % 2^30) / 2^30
				L22_hi = T4_hi * 2^2 + (T4_lo % 2^32 - T4_lo % 2^30) / 2^30
				D_lo = XOR(C2_lo, C4_lo * 2 + (C4_hi % 2^32 - C4_hi % 2^31) / 2^31)
				D_hi = XOR(C2_hi, C4_hi * 2 + (C4_lo % 2^32 - C4_lo % 2^31) / 2^31)
				T0_lo = XOR(D_lo, L03_lo)
				T0_hi = XOR(D_hi, L03_hi)
				T1_lo = XOR(D_lo, L08_lo)
				T1_hi = XOR(D_hi, L08_hi)
				T2_lo = XOR(D_lo, L13_lo)
				T2_hi = XOR(D_hi, L13_hi)
				T3_lo = XOR(D_lo, L18_lo)
				T3_hi = XOR(D_hi, L18_hi)
				T4_lo = XOR(D_lo, L23_lo)
				T4_hi = XOR(D_hi, L23_hi)
				L03_lo = (T2_lo % 2^32 - T2_lo % 2^21) / 2^21 + T2_hi * 2^11
				L03_hi = (T2_hi % 2^32 - T2_hi % 2^21) / 2^21 + T2_lo * 2^11
				L08_lo = (T4_lo % 2^32 - T4_lo % 2^3) / 2^3 + T4_hi * 2^29 % 2^32
				L08_hi = (T4_hi % 2^32 - T4_hi % 2^3) / 2^3 + T4_lo * 2^29 % 2^32
				L13_lo = T1_lo * 2^6 + (T1_hi % 2^32 - T1_hi % 2^26) / 2^26
				L13_hi = T1_hi * 2^6 + (T1_lo % 2^32 - T1_lo % 2^26) / 2^26
				L18_lo = T3_lo * 2^15 + (T3_hi % 2^32 - T3_hi % 2^17) / 2^17
				L18_hi = T3_hi * 2^15 + (T3_lo % 2^32 - T3_lo % 2^17) / 2^17
				L23_lo = (T0_lo % 2^32 - T0_lo % 2^2) / 2^2 + T0_hi * 2^30 % 2^32
				L23_hi = (T0_hi % 2^32 - T0_hi % 2^2) / 2^2 + T0_lo * 2^30 % 2^32
				D_lo = XOR(C3_lo, C5_lo * 2 + (C5_hi % 2^32 - C5_hi % 2^31) / 2^31)
				D_hi = XOR(C3_hi, C5_hi * 2 + (C5_lo % 2^32 - C5_lo % 2^31) / 2^31)
				T0_lo = XOR(D_lo, L04_lo)
				T0_hi = XOR(D_hi, L04_hi)
				T1_lo = XOR(D_lo, L09_lo)
				T1_hi = XOR(D_hi, L09_hi)
				T2_lo = XOR(D_lo, L14_lo)
				T2_hi = XOR(D_hi, L14_hi)
				T3_lo = XOR(D_lo, L19_lo)
				T3_hi = XOR(D_hi, L19_hi)
				T4_lo = XOR(D_lo, L24_lo)
				T4_hi = XOR(D_hi, L24_hi)
				L04_lo = T3_lo * 2^21 % 2^32 + (T3_hi % 2^32 - T3_hi % 2^11) / 2^11
				L04_hi = T3_hi * 2^21 % 2^32 + (T3_lo % 2^32 - T3_lo % 2^11) / 2^11
				L09_lo = T0_lo * 2^28 % 2^32 + (T0_hi % 2^32 - T0_hi % 2^4) / 2^4
				L09_hi = T0_hi * 2^28 % 2^32 + (T0_lo % 2^32 - T0_lo % 2^4) / 2^4
				L14_lo = T2_lo * 2^25 % 2^32 + (T2_hi % 2^32 - T2_hi % 2^7) / 2^7
				L14_hi = T2_hi * 2^25 % 2^32 + (T2_lo % 2^32 - T2_lo % 2^7) / 2^7
				L19_lo = (T4_lo % 2^32 - T4_lo % 2^8) / 2^8 + T4_hi * 2^24 % 2^32
				L19_hi = (T4_hi % 2^32 - T4_hi % 2^8) / 2^8 + T4_lo * 2^24 % 2^32
				L24_lo = (T1_lo % 2^32 - T1_lo % 2^9) / 2^9 + T1_hi * 2^23 % 2^32
				L24_hi = (T1_hi % 2^32 - T1_hi % 2^9) / 2^9 + T1_lo * 2^23 % 2^32
				D_lo = XOR(C4_lo, C1_lo * 2 + (C1_hi % 2^32 - C1_hi % 2^31) / 2^31)
				D_hi = XOR(C4_hi, C1_hi * 2 + (C1_lo % 2^32 - C1_lo % 2^31) / 2^31)
				T0_lo = XOR(D_lo, L05_lo)
				T0_hi = XOR(D_hi, L05_hi)
				T1_lo = XOR(D_lo, L10_lo)
				T1_hi = XOR(D_hi, L10_hi)
				T2_lo = XOR(D_lo, L15_lo)
				T2_hi = XOR(D_hi, L15_hi)
				T3_lo = XOR(D_lo, L20_lo)
				T3_hi = XOR(D_hi, L20_hi)
				T4_lo = XOR(D_lo, L25_lo)
				T4_hi = XOR(D_hi, L25_hi)
				L05_lo = T4_lo * 2^14 + (T4_hi % 2^32 - T4_hi % 2^18) / 2^18
				L05_hi = T4_hi * 2^14 + (T4_lo % 2^32 - T4_lo % 2^18) / 2^18
				L10_lo = T1_lo * 2^20 % 2^32 + (T1_hi % 2^32 - T1_hi % 2^12) / 2^12
				L10_hi = T1_hi * 2^20 % 2^32 + (T1_lo % 2^32 - T1_lo % 2^12) / 2^12
				L15_lo = T3_lo * 2^8 + (T3_hi % 2^32 - T3_hi % 2^24) / 2^24
				L15_hi = T3_hi * 2^8 + (T3_lo % 2^32 - T3_lo % 2^24) / 2^24
				L20_lo = T0_lo * 2^27 % 2^32 + (T0_hi % 2^32 - T0_hi % 2^5) / 2^5
				L20_hi = T0_hi * 2^27 % 2^32 + (T0_lo % 2^32 - T0_lo % 2^5) / 2^5
				L25_lo = (T2_lo % 2^32 - T2_lo % 2^25) / 2^25 + T2_hi * 2^7
				L25_hi = (T2_hi % 2^32 - T2_hi % 2^25) / 2^25 + T2_lo * 2^7
				D_lo = XOR(C5_lo, C2_lo * 2 + (C2_hi % 2^32 - C2_hi % 2^31) / 2^31)
				D_hi = XOR(C5_hi, C2_hi * 2 + (C2_lo % 2^32 - C2_lo % 2^31) / 2^31)
				T1_lo = XOR(D_lo, L06_lo)
				T1_hi = XOR(D_hi, L06_hi)
				T2_lo = XOR(D_lo, L11_lo)
				T2_hi = XOR(D_hi, L11_hi)
				T3_lo = XOR(D_lo, L16_lo)
				T3_hi = XOR(D_hi, L16_hi)
				T4_lo = XOR(D_lo, L21_lo)
				T4_hi = XOR(D_hi, L21_hi)
				L06_lo = T2_lo * 2^3 + (T2_hi % 2^32 - T2_hi % 2^29) / 2^29
				L06_hi = T2_hi * 2^3 + (T2_lo % 2^32 - T2_lo % 2^29) / 2^29
				L11_lo = T4_lo * 2^18 + (T4_hi % 2^32 - T4_hi % 2^14) / 2^14
				L11_hi = T4_hi * 2^18 + (T4_lo % 2^32 - T4_lo % 2^14) / 2^14
				L16_lo = (T1_lo % 2^32 - T1_lo % 2^28) / 2^28 + T1_hi * 2^4
				L16_hi = (T1_hi % 2^32 - T1_hi % 2^28) / 2^28 + T1_lo * 2^4
				L21_lo = (T3_lo % 2^32 - T3_lo % 2^23) / 2^23 + T3_hi * 2^9
				L21_hi = (T3_hi % 2^32 - T3_hi % 2^23) / 2^23 + T3_lo * 2^9
				L01_lo = XOR(D_lo, L01_lo)
				L01_hi = XOR(D_hi, L01_hi)
				L01_lo, L02_lo, L03_lo, L04_lo, L05_lo = XOR(L01_lo, AND(-1-L02_lo, L03_lo)), XOR(L02_lo, AND(-1-L03_lo, L04_lo)), XOR(L03_lo, AND(-1-L04_lo, L05_lo)), XOR(L04_lo, AND(-1-L05_lo, L01_lo)), XOR(L05_lo, AND(-1-L01_lo, L02_lo))
				L01_hi, L02_hi, L03_hi, L04_hi, L05_hi = XOR(L01_hi, AND(-1-L02_hi, L03_hi)), XOR(L02_hi, AND(-1-L03_hi, L04_hi)), XOR(L03_hi, AND(-1-L04_hi, L05_hi)), XOR(L04_hi, AND(-1-L05_hi, L01_hi)), XOR(L05_hi, AND(-1-L01_hi, L02_hi))
				L06_lo, L07_lo, L08_lo, L09_lo, L10_lo = XOR(L09_lo, AND(-1-L10_lo, L06_lo)), XOR(L10_lo, AND(-1-L06_lo, L07_lo)), XOR(L06_lo, AND(-1-L07_lo, L08_lo)), XOR(L07_lo, AND(-1-L08_lo, L09_lo)), XOR(L08_lo, AND(-1-L09_lo, L10_lo))
				L06_hi, L07_hi, L08_hi, L09_hi, L10_hi = XOR(L09_hi, AND(-1-L10_hi, L06_hi)), XOR(L10_hi, AND(-1-L06_hi, L07_hi)), XOR(L06_hi, AND(-1-L07_hi, L08_hi)), XOR(L07_hi, AND(-1-L08_hi, L09_hi)), XOR(L08_hi, AND(-1-L09_hi, L10_hi))
				L11_lo, L12_lo, L13_lo, L14_lo, L15_lo = XOR(L12_lo, AND(-1-L13_lo, L14_lo)), XOR(L13_lo, AND(-1-L14_lo, L15_lo)), XOR(L14_lo, AND(-1-L15_lo, L11_lo)), XOR(L15_lo, AND(-1-L11_lo, L12_lo)), XOR(L11_lo, AND(-1-L12_lo, L13_lo))
				L11_hi, L12_hi, L13_hi, L14_hi, L15_hi = XOR(L12_hi, AND(-1-L13_hi, L14_hi)), XOR(L13_hi, AND(-1-L14_hi, L15_hi)), XOR(L14_hi, AND(-1-L15_hi, L11_hi)), XOR(L15_hi, AND(-1-L11_hi, L12_hi)), XOR(L11_hi, AND(-1-L12_hi, L13_hi))
				L16_lo, L17_lo, L18_lo, L19_lo, L20_lo = XOR(L20_lo, AND(-1-L16_lo, L17_lo)), XOR(L16_lo, AND(-1-L17_lo, L18_lo)), XOR(L17_lo, AND(-1-L18_lo, L19_lo)), XOR(L18_lo, AND(-1-L19_lo, L20_lo)), XOR(L19_lo, AND(-1-L20_lo, L16_lo))
				L16_hi, L17_hi, L18_hi, L19_hi, L20_hi = XOR(L20_hi, AND(-1-L16_hi, L17_hi)), XOR(L16_hi, AND(-1-L17_hi, L18_hi)), XOR(L17_hi, AND(-1-L18_hi, L19_hi)), XOR(L18_hi, AND(-1-L19_hi, L20_hi)), XOR(L19_hi, AND(-1-L20_hi, L16_hi))
				L21_lo, L22_lo, L23_lo, L24_lo, L25_lo = XOR(L23_lo, AND(-1-L24_lo, L25_lo)), XOR(L24_lo, AND(-1-L25_lo, L21_lo)), XOR(L25_lo, AND(-1-L21_lo, L22_lo)), XOR(L21_lo, AND(-1-L22_lo, L23_lo)), XOR(L22_lo, AND(-1-L23_lo, L24_lo))
				L21_hi, L22_hi, L23_hi, L24_hi, L25_hi = XOR(L23_hi, AND(-1-L24_hi, L25_hi)), XOR(L24_hi, AND(-1-L25_hi, L21_hi)), XOR(L25_hi, AND(-1-L21_hi, L22_hi)), XOR(L21_hi, AND(-1-L22_hi, L23_hi)), XOR(L22_hi, AND(-1-L23_hi, L24_hi))
				L01_lo = XOR(L01_lo, RC_lo[round_idx])
				L01_hi = L01_hi + RC_hi[round_idx]      -- RC_hi[] is either 0 or 0x80000000, so we could use fast addition instead of slow XOR
			end
			lanes_lo[1]  = L01_lo;  lanes_hi[1]  = L01_hi
			lanes_lo[2]  = L02_lo;  lanes_hi[2]  = L02_hi
			lanes_lo[3]  = L03_lo;  lanes_hi[3]  = L03_hi
			lanes_lo[4]  = L04_lo;  lanes_hi[4]  = L04_hi
			lanes_lo[5]  = L05_lo;  lanes_hi[5]  = L05_hi
			lanes_lo[6]  = L06_lo;  lanes_hi[6]  = L06_hi
			lanes_lo[7]  = L07_lo;  lanes_hi[7]  = L07_hi
			lanes_lo[8]  = L08_lo;  lanes_hi[8]  = L08_hi
			lanes_lo[9]  = L09_lo;  lanes_hi[9]  = L09_hi
			lanes_lo[10] = L10_lo;  lanes_hi[10] = L10_hi
			lanes_lo[11] = L11_lo;  lanes_hi[11] = L11_hi
			lanes_lo[12] = L12_lo;  lanes_hi[12] = L12_hi
			lanes_lo[13] = L13_lo;  lanes_hi[13] = L13_hi
			lanes_lo[14] = L14_lo;  lanes_hi[14] = L14_hi
			lanes_lo[15] = L15_lo;  lanes_hi[15] = L15_hi
			lanes_lo[16] = L16_lo;  lanes_hi[16] = L16_hi
			lanes_lo[17] = L17_lo;  lanes_hi[17] = L17_hi
			lanes_lo[18] = L18_lo;  lanes_hi[18] = L18_hi
			lanes_lo[19] = L19_lo;  lanes_hi[19] = L19_hi
			lanes_lo[20] = L20_lo;  lanes_hi[20] = L20_hi
			lanes_lo[21] = L21_lo;  lanes_hi[21] = L21_hi
			lanes_lo[22] = L22_lo;  lanes_hi[22] = L22_hi
			lanes_lo[23] = L23_lo;  lanes_hi[23] = L23_hi
			lanes_lo[24] = L24_lo;  lanes_hi[24] = L24_hi
			lanes_lo[25] = L25_lo;  lanes_hi[25] = L25_hi
		end
	end


	function blake2s_feed_64(H, str, offs, size, bytes_compressed, last_block_size, is_last_node)
		-- offs >= 0, size >= 0, size is multiple of 64
		local W = common_W
		local h1, h2, h3, h4, h5, h6, h7, h8 = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
		for pos = offs, offs + size - 1, 64 do
			if str then
				for j = 1, 16 do
					pos = pos + 4
					local a, b, c, d = byte(str, pos - 3, pos)
					W[j] = ((d * 256 + c) * 256 + b) * 256 + a
				end
			end
			local v0, v1, v2, v3, v4, v5, v6, v7 = h1, h2, h3, h4, h5, h6, h7, h8
			local v8, v9, vA, vB, vC, vD, vE, vF = sha2_H_hi[1], sha2_H_hi[2], sha2_H_hi[3], sha2_H_hi[4], sha2_H_hi[5], sha2_H_hi[6], sha2_H_hi[7], sha2_H_hi[8]
			bytes_compressed = bytes_compressed + (last_block_size or 64)
			local t0 = bytes_compressed % 2^32
			local t1 = (bytes_compressed - t0) / 2^32
			vC = XOR(vC, t0)  -- t0 = low_4_bytes(bytes_compressed)
			vD = XOR(vD, t1)  -- t1 = high_4_bytes(bytes_compressed)
			if last_block_size then  -- flag f0
				vE = -1 - vE
			end
			if is_last_node then  -- flag f1
				vF = -1 - vF
			end
			for j = 1, 10 do
				local row = sigma[j]
				v0 = v0 + v4 + W[row[1]]
				vC = XOR(vC, v0) % 2^32 / 2^16
				vC = vC % 1 * (2^32 - 1) + vC
				v8 = v8 + vC
				v4 = XOR(v4, v8) % 2^32 / 2^12
				v4 = v4 % 1 * (2^32 - 1) + v4
				v0 = v0 + v4 + W[row[2]]
				vC = XOR(vC, v0) % 2^32 / 2^8
				vC = vC % 1 * (2^32 - 1) + vC
				v8 = v8 + vC
				v4 = XOR(v4, v8) % 2^32 / 2^7
				v4 = v4 % 1 * (2^32 - 1) + v4
				v1 = v1 + v5 + W[row[3]]
				vD = XOR(vD, v1) % 2^32 / 2^16
				vD = vD % 1 * (2^32 - 1) + vD
				v9 = v9 + vD
				v5 = XOR(v5, v9) % 2^32 / 2^12
				v5 = v5 % 1 * (2^32 - 1) + v5
				v1 = v1 + v5 + W[row[4]]
				vD = XOR(vD, v1) % 2^32 / 2^8
				vD = vD % 1 * (2^32 - 1) + vD
				v9 = v9 + vD
				v5 = XOR(v5, v9) % 2^32 / 2^7
				v5 = v5 % 1 * (2^32 - 1) + v5
				v2 = v2 + v6 + W[row[5]]
				vE = XOR(vE, v2) % 2^32 / 2^16
				vE = vE % 1 * (2^32 - 1) + vE
				vA = vA + vE
				v6 = XOR(v6, vA) % 2^32 / 2^12
				v6 = v6 % 1 * (2^32 - 1) + v6
				v2 = v2 + v6 + W[row[6]]
				vE = XOR(vE, v2) % 2^32 / 2^8
				vE = vE % 1 * (2^32 - 1) + vE
				vA = vA + vE
				v6 = XOR(v6, vA) % 2^32 / 2^7
				v6 = v6 % 1 * (2^32 - 1) + v6
				v3 = v3 + v7 + W[row[7]]
				vF = XOR(vF, v3) % 2^32 / 2^16
				vF = vF % 1 * (2^32 - 1) + vF
				vB = vB + vF
				v7 = XOR(v7, vB) % 2^32 / 2^12
				v7 = v7 % 1 * (2^32 - 1) + v7
				v3 = v3 + v7 + W[row[8]]
				vF = XOR(vF, v3) % 2^32 / 2^8
				vF = vF % 1 * (2^32 - 1) + vF
				vB = vB + vF
				v7 = XOR(v7, vB) % 2^32 / 2^7
				v7 = v7 % 1 * (2^32 - 1) + v7
				v0 = v0 + v5 + W[row[9]]
				vF = XOR(vF, v0) % 2^32 / 2^16
				vF = vF % 1 * (2^32 - 1) + vF
				vA = vA + vF
				v5 = XOR(v5, vA) % 2^32 / 2^12
				v5 = v5 % 1 * (2^32 - 1) + v5
				v0 = v0 + v5 + W[row[10]]
				vF = XOR(vF, v0) % 2^32 / 2^8
				vF = vF % 1 * (2^32 - 1) + vF
				vA = vA + vF
				v5 = XOR(v5, vA) % 2^32 / 2^7
				v5 = v5 % 1 * (2^32 - 1) + v5
				v1 = v1 + v6 + W[row[11]]
				vC = XOR(vC, v1) % 2^32 / 2^16
				vC = vC % 1 * (2^32 - 1) + vC
				vB = vB + vC
				v6 = XOR(v6, vB) % 2^32 / 2^12
				v6 = v6 % 1 * (2^32 - 1) + v6
				v1 = v1 + v6 + W[row[12]]
				vC = XOR(vC, v1) % 2^32 / 2^8
				vC = vC % 1 * (2^32 - 1) + vC
				vB = vB + vC
				v6 = XOR(v6, vB) % 2^32 / 2^7
				v6 = v6 % 1 * (2^32 - 1) + v6
				v2 = v2 + v7 + W[row[13]]
				vD = XOR(vD, v2) % 2^32 / 2^16
				vD = vD % 1 * (2^32 - 1) + vD
				v8 = v8 + vD
				v7 = XOR(v7, v8) % 2^32 / 2^12
				v7 = v7 % 1 * (2^32 - 1) + v7
				v2 = v2 + v7 + W[row[14]]
				vD = XOR(vD, v2) % 2^32 / 2^8
				vD = vD % 1 * (2^32 - 1) + vD
				v8 = v8 + vD
				v7 = XOR(v7, v8) % 2^32 / 2^7
				v7 = v7 % 1 * (2^32 - 1) + v7
				v3 = v3 + v4 + W[row[15]]
				vE = XOR(vE, v3) % 2^32 / 2^16
				vE = vE % 1 * (2^32 - 1) + vE
				v9 = v9 + vE
				v4 = XOR(v4, v9) % 2^32 / 2^12
				v4 = v4 % 1 * (2^32 - 1) + v4
				v3 = v3 + v4 + W[row[16]]
				vE = XOR(vE, v3) % 2^32 / 2^8
				vE = vE % 1 * (2^32 - 1) + vE
				v9 = v9 + vE
				v4 = XOR(v4, v9) % 2^32 / 2^7
				v4 = v4 % 1 * (2^32 - 1) + v4
			end
			h1 = XOR(h1, v0, v8)
			h2 = XOR(h2, v1, v9)
			h3 = XOR(h3, v2, vA)
			h4 = XOR(h4, v3, vB)
			h5 = XOR(h5, v4, vC)
			h6 = XOR(h6, v5, vD)
			h7 = XOR(h7, v6, vE)
			h8 = XOR(h8, v7, vF)
		end
		H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8] = h1, h2, h3, h4, h5, h6, h7, h8
		return bytes_compressed
	end


	function blake2b_feed_128(H_lo, H_hi, str, offs, size, bytes_compressed, last_block_size, is_last_node)
		-- offs >= 0, size >= 0, size is multiple of 128
		local W = common_W
		local h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo = H_lo[1], H_lo[2], H_lo[3], H_lo[4], H_lo[5], H_lo[6], H_lo[7], H_lo[8]
		local h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi = H_hi[1], H_hi[2], H_hi[3], H_hi[4], H_hi[5], H_hi[6], H_hi[7], H_hi[8]
		for pos = offs, offs + size - 1, 128 do
			if str then
				for j = 1, 32 do
					pos = pos + 4
					local a, b, c, d = byte(str, pos - 3, pos)
					W[j] = ((d * 256 + c) * 256 + b) * 256 + a
				end
			end
			local v0_lo, v1_lo, v2_lo, v3_lo, v4_lo, v5_lo, v6_lo, v7_lo = h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo
			local v0_hi, v1_hi, v2_hi, v3_hi, v4_hi, v5_hi, v6_hi, v7_hi = h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi
			local v8_lo, v9_lo, vA_lo, vB_lo, vC_lo, vD_lo, vE_lo, vF_lo = sha2_H_lo[1], sha2_H_lo[2], sha2_H_lo[3], sha2_H_lo[4], sha2_H_lo[5], sha2_H_lo[6], sha2_H_lo[7], sha2_H_lo[8]
			local v8_hi, v9_hi, vA_hi, vB_hi, vC_hi, vD_hi, vE_hi, vF_hi = sha2_H_hi[1], sha2_H_hi[2], sha2_H_hi[3], sha2_H_hi[4], sha2_H_hi[5], sha2_H_hi[6], sha2_H_hi[7], sha2_H_hi[8]
			bytes_compressed = bytes_compressed + (last_block_size or 128)
			local t0_lo = bytes_compressed % 2^32
			local t0_hi = (bytes_compressed - t0_lo) / 2^32
			vC_lo = XOR(vC_lo, t0_lo)  -- t0 = low_8_bytes(bytes_compressed)
			vC_hi = XOR(vC_hi, t0_hi)
			-- t1 = high_8_bytes(bytes_compressed) = 0,  message length is always below 2^53 bytes
			if last_block_size then  -- flag f0
				vE_lo = -1 - vE_lo
				vE_hi = -1 - vE_hi
			end
			if is_last_node then  -- flag f1
				vF_lo = -1 - vF_lo
				vF_hi = -1 - vF_hi
			end
			for j = 1, 12 do
				local row = sigma[j]
				local k = row[1] * 2
				local z = v0_lo % 2^32 + v4_lo % 2^32 + W[k-1]
				v0_lo = z % 2^32
				v0_hi = v0_hi + v4_hi + (z - v0_lo) / 2^32 + W[k]
				vC_lo, vC_hi = XOR(vC_hi, v0_hi), XOR(vC_lo, v0_lo)
				z = v8_lo % 2^32 + vC_lo % 2^32
				v8_lo = z % 2^32
				v8_hi = v8_hi + vC_hi + (z - v8_lo) / 2^32
				v4_lo, v4_hi = XOR(v4_lo, v8_lo), XOR(v4_hi, v8_hi)
				local z_lo, z_hi = v4_lo % 2^24, v4_hi % 2^24
				v4_lo, v4_hi = (v4_lo - z_lo) / 2^24 % 2^8 + z_hi * 2^8, (v4_hi - z_hi) / 2^24 % 2^8 + z_lo * 2^8
				k = row[2] * 2
				z = v0_lo % 2^32 + v4_lo % 2^32 + W[k-1]
				v0_lo = z % 2^32
				v0_hi = v0_hi + v4_hi + (z - v0_lo) / 2^32 + W[k]
				vC_lo, vC_hi = XOR(vC_lo, v0_lo), XOR(vC_hi, v0_hi)
				z_lo, z_hi = vC_lo % 2^16, vC_hi % 2^16
				vC_lo, vC_hi = (vC_lo - z_lo) / 2^16 % 2^16 + z_hi * 2^16, (vC_hi - z_hi) / 2^16 % 2^16 + z_lo * 2^16
				z = v8_lo % 2^32 + vC_lo % 2^32
				v8_lo = z % 2^32
				v8_hi = v8_hi + vC_hi + (z - v8_lo) / 2^32
				v4_lo, v4_hi = XOR(v4_lo, v8_lo), XOR(v4_hi, v8_hi)
				z_lo, z_hi = v4_lo % 2^31, v4_hi % 2^31
				v4_lo, v4_hi = z_lo * 2^1 + (v4_hi - z_hi) / 2^31 % 2^1, z_hi * 2^1 + (v4_lo - z_lo) / 2^31 % 2^1
				k = row[3] * 2
				z = v1_lo % 2^32 + v5_lo % 2^32 + W[k-1]
				v1_lo = z % 2^32
				v1_hi = v1_hi + v5_hi + (z - v1_lo) / 2^32 + W[k]
				vD_lo, vD_hi = XOR(vD_hi, v1_hi), XOR(vD_lo, v1_lo)
				z = v9_lo % 2^32 + vD_lo % 2^32
				v9_lo = z % 2^32
				v9_hi = v9_hi + vD_hi + (z - v9_lo) / 2^32
				v5_lo, v5_hi = XOR(v5_lo, v9_lo), XOR(v5_hi, v9_hi)
				z_lo, z_hi = v5_lo % 2^24, v5_hi % 2^24
				v5_lo, v5_hi = (v5_lo - z_lo) / 2^24 % 2^8 + z_hi * 2^8, (v5_hi - z_hi) / 2^24 % 2^8 + z_lo * 2^8
				k = row[4] * 2
				z = v1_lo % 2^32 + v5_lo % 2^32 + W[k-1]
				v1_lo = z % 2^32
				v1_hi = v1_hi + v5_hi + (z - v1_lo) / 2^32 + W[k]
				vD_lo, vD_hi = XOR(vD_lo, v1_lo), XOR(vD_hi, v1_hi)
				z_lo, z_hi = vD_lo % 2^16, vD_hi % 2^16
				vD_lo, vD_hi = (vD_lo - z_lo) / 2^16 % 2^16 + z_hi * 2^16, (vD_hi - z_hi) / 2^16 % 2^16 + z_lo * 2^16
				z = v9_lo % 2^32 + vD_lo % 2^32
				v9_lo = z % 2^32
				v9_hi = v9_hi + vD_hi + (z - v9_lo) / 2^32
				v5_lo, v5_hi = XOR(v5_lo, v9_lo), XOR(v5_hi, v9_hi)
				z_lo, z_hi = v5_lo % 2^31, v5_hi % 2^31
				v5_lo, v5_hi = z_lo * 2^1 + (v5_hi - z_hi) / 2^31 % 2^1, z_hi * 2^1 + (v5_lo - z_lo) / 2^31 % 2^1
				k = row[5] * 2
				z = v2_lo % 2^32 + v6_lo % 2^32 + W[k-1]
				v2_lo = z % 2^32
				v2_hi = v2_hi + v6_hi + (z - v2_lo) / 2^32 + W[k]
				vE_lo, vE_hi = XOR(vE_hi, v2_hi), XOR(vE_lo, v2_lo)
				z = vA_lo % 2^32 + vE_lo % 2^32
				vA_lo = z % 2^32
				vA_hi = vA_hi + vE_hi + (z - vA_lo) / 2^32
				v6_lo, v6_hi = XOR(v6_lo, vA_lo), XOR(v6_hi, vA_hi)
				z_lo, z_hi = v6_lo % 2^24, v6_hi % 2^24
				v6_lo, v6_hi = (v6_lo - z_lo) / 2^24 % 2^8 + z_hi * 2^8, (v6_hi - z_hi) / 2^24 % 2^8 + z_lo * 2^8
				k = row[6] * 2
				z = v2_lo % 2^32 + v6_lo % 2^32 + W[k-1]
				v2_lo = z % 2^32
				v2_hi = v2_hi + v6_hi + (z - v2_lo) / 2^32 + W[k]
				vE_lo, vE_hi = XOR(vE_lo, v2_lo), XOR(vE_hi, v2_hi)
				z_lo, z_hi = vE_lo % 2^16, vE_hi % 2^16
				vE_lo, vE_hi = (vE_lo - z_lo) / 2^16 % 2^16 + z_hi * 2^16, (vE_hi - z_hi) / 2^16 % 2^16 + z_lo * 2^16
				z = vA_lo % 2^32 + vE_lo % 2^32
				vA_lo = z % 2^32
				vA_hi = vA_hi + vE_hi + (z - vA_lo) / 2^32
				v6_lo, v6_hi = XOR(v6_lo, vA_lo), XOR(v6_hi, vA_hi)
				z_lo, z_hi = v6_lo % 2^31, v6_hi % 2^31
				v6_lo, v6_hi = z_lo * 2^1 + (v6_hi - z_hi) / 2^31 % 2^1, z_hi * 2^1 + (v6_lo - z_lo) / 2^31 % 2^1
				k = row[7] * 2
				z = v3_lo % 2^32 + v7_lo % 2^32 + W[k-1]
				v3_lo = z % 2^32
				v3_hi = v3_hi + v7_hi + (z - v3_lo) / 2^32 + W[k]
				vF_lo, vF_hi = XOR(vF_hi, v3_hi), XOR(vF_lo, v3_lo)
				z = vB_lo % 2^32 + vF_lo % 2^32
				vB_lo = z % 2^32
				vB_hi = vB_hi + vF_hi + (z - vB_lo) / 2^32
				v7_lo, v7_hi = XOR(v7_lo, vB_lo), XOR(v7_hi, vB_hi)
				z_lo, z_hi = v7_lo % 2^24, v7_hi % 2^24
				v7_lo, v7_hi = (v7_lo - z_lo) / 2^24 % 2^8 + z_hi * 2^8, (v7_hi - z_hi) / 2^24 % 2^8 + z_lo * 2^8
				k = row[8] * 2
				z = v3_lo % 2^32 + v7_lo % 2^32 + W[k-1]
				v3_lo = z % 2^32
				v3_hi = v3_hi + v7_hi + (z - v3_lo) / 2^32 + W[k]
				vF_lo, vF_hi = XOR(vF_lo, v3_lo), XOR(vF_hi, v3_hi)
				z_lo, z_hi = vF_lo % 2^16, vF_hi % 2^16
				vF_lo, vF_hi = (vF_lo - z_lo) / 2^16 % 2^16 + z_hi * 2^16, (vF_hi - z_hi) / 2^16 % 2^16 + z_lo * 2^16
				z = vB_lo % 2^32 + vF_lo % 2^32
				vB_lo = z % 2^32
				vB_hi = vB_hi + vF_hi + (z - vB_lo) / 2^32
				v7_lo, v7_hi = XOR(v7_lo, vB_lo), XOR(v7_hi, vB_hi)
				z_lo, z_hi = v7_lo % 2^31, v7_hi % 2^31
				v7_lo, v7_hi = z_lo * 2^1 + (v7_hi - z_hi) / 2^31 % 2^1, z_hi * 2^1 + (v7_lo - z_lo) / 2^31 % 2^1
				k = row[9] * 2
				z = v0_lo % 2^32 + v5_lo % 2^32 + W[k-1]
				v0_lo = z % 2^32
				v0_hi = v0_hi + v5_hi + (z - v0_lo) / 2^32 + W[k]
				vF_lo, vF_hi = XOR(vF_hi, v0_hi), XOR(vF_lo, v0_lo)
				z = vA_lo % 2^32 + vF_lo % 2^32
				vA_lo = z % 2^32
				vA_hi = vA_hi + vF_hi + (z - vA_lo) / 2^32
				v5_lo, v5_hi = XOR(v5_lo, vA_lo), XOR(v5_hi, vA_hi)
				z_lo, z_hi = v5_lo % 2^24, v5_hi % 2^24
				v5_lo, v5_hi = (v5_lo - z_lo) / 2^24 % 2^8 + z_hi * 2^8, (v5_hi - z_hi) / 2^24 % 2^8 + z_lo * 2^8
				k = row[10] * 2
				z = v0_lo % 2^32 + v5_lo % 2^32 + W[k-1]
				v0_lo = z % 2^32
				v0_hi = v0_hi + v5_hi + (z - v0_lo) / 2^32 + W[k]
				vF_lo, vF_hi = XOR(vF_lo, v0_lo), XOR(vF_hi, v0_hi)
				z_lo, z_hi = vF_lo % 2^16, vF_hi % 2^16
				vF_lo, vF_hi = (vF_lo - z_lo) / 2^16 % 2^16 + z_hi * 2^16, (vF_hi - z_hi) / 2^16 % 2^16 + z_lo * 2^16
				z = vA_lo % 2^32 + vF_lo % 2^32
				vA_lo = z % 2^32
				vA_hi = vA_hi + vF_hi + (z - vA_lo) / 2^32
				v5_lo, v5_hi = XOR(v5_lo, vA_lo), XOR(v5_hi, vA_hi)
				z_lo, z_hi = v5_lo % 2^31, v5_hi % 2^31
				v5_lo, v5_hi = z_lo * 2^1 + (v5_hi - z_hi) / 2^31 % 2^1, z_hi * 2^1 + (v5_lo - z_lo) / 2^31 % 2^1
				k = row[11] * 2
				z = v1_lo % 2^32 + v6_lo % 2^32 + W[k-1]
				v1_lo = z % 2^32
				v1_hi = v1_hi + v6_hi + (z - v1_lo) / 2^32 + W[k]
				vC_lo, vC_hi = XOR(vC_hi, v1_hi), XOR(vC_lo, v1_lo)
				z = vB_lo % 2^32 + vC_lo % 2^32
				vB_lo = z % 2^32
				vB_hi = vB_hi + vC_hi + (z - vB_lo) / 2^32
				v6_lo, v6_hi = XOR(v6_lo, vB_lo), XOR(v6_hi, vB_hi)
				z_lo, z_hi = v6_lo % 2^24, v6_hi % 2^24
				v6_lo, v6_hi = (v6_lo - z_lo) / 2^24 % 2^8 + z_hi * 2^8, (v6_hi - z_hi) / 2^24 % 2^8 + z_lo * 2^8
				k = row[12] * 2
				z = v1_lo % 2^32 + v6_lo % 2^32 + W[k-1]
				v1_lo = z % 2^32
				v1_hi = v1_hi + v6_hi + (z - v1_lo) / 2^32 + W[k]
				vC_lo, vC_hi = XOR(vC_lo, v1_lo), XOR(vC_hi, v1_hi)
				z_lo, z_hi = vC_lo % 2^16, vC_hi % 2^16
				vC_lo, vC_hi = (vC_lo - z_lo) / 2^16 % 2^16 + z_hi * 2^16, (vC_hi - z_hi) / 2^16 % 2^16 + z_lo * 2^16
				z = vB_lo % 2^32 + vC_lo % 2^32
				vB_lo = z % 2^32
				vB_hi = vB_hi + vC_hi + (z - vB_lo) / 2^32
				v6_lo, v6_hi = XOR(v6_lo, vB_lo), XOR(v6_hi, vB_hi)
				z_lo, z_hi = v6_lo % 2^31, v6_hi % 2^31
				v6_lo, v6_hi = z_lo * 2^1 + (v6_hi - z_hi) / 2^31 % 2^1, z_hi * 2^1 + (v6_lo - z_lo) / 2^31 % 2^1
				k = row[13] * 2
				z = v2_lo % 2^32 + v7_lo % 2^32 + W[k-1]
				v2_lo = z % 2^32
				v2_hi = v2_hi + v7_hi + (z - v2_lo) / 2^32 + W[k]
				vD_lo, vD_hi = XOR(vD_hi, v2_hi), XOR(vD_lo, v2_lo)
				z = v8_lo % 2^32 + vD_lo % 2^32
				v8_lo = z % 2^32
				v8_hi = v8_hi + vD_hi + (z - v8_lo) / 2^32
				v7_lo, v7_hi = XOR(v7_lo, v8_lo), XOR(v7_hi, v8_hi)
				z_lo, z_hi = v7_lo % 2^24, v7_hi % 2^24
				v7_lo, v7_hi = (v7_lo - z_lo) / 2^24 % 2^8 + z_hi * 2^8, (v7_hi - z_hi) / 2^24 % 2^8 + z_lo * 2^8
				k = row[14] * 2
				z = v2_lo % 2^32 + v7_lo % 2^32 + W[k-1]
				v2_lo = z % 2^32
				v2_hi = v2_hi + v7_hi + (z - v2_lo) / 2^32 + W[k]
				vD_lo, vD_hi = XOR(vD_lo, v2_lo), XOR(vD_hi, v2_hi)
				z_lo, z_hi = vD_lo % 2^16, vD_hi % 2^16
				vD_lo, vD_hi = (vD_lo - z_lo) / 2^16 % 2^16 + z_hi * 2^16, (vD_hi - z_hi) / 2^16 % 2^16 + z_lo * 2^16
				z = v8_lo % 2^32 + vD_lo % 2^32
				v8_lo = z % 2^32
				v8_hi = v8_hi + vD_hi + (z - v8_lo) / 2^32
				v7_lo, v7_hi = XOR(v7_lo, v8_lo), XOR(v7_hi, v8_hi)
				z_lo, z_hi = v7_lo % 2^31, v7_hi % 2^31
				v7_lo, v7_hi = z_lo * 2^1 + (v7_hi - z_hi) / 2^31 % 2^1, z_hi * 2^1 + (v7_lo - z_lo) / 2^31 % 2^1
				k = row[15] * 2
				z = v3_lo % 2^32 + v4_lo % 2^32 + W[k-1]
				v3_lo = z % 2^32
				v3_hi = v3_hi + v4_hi + (z - v3_lo) / 2^32 + W[k]
				vE_lo, vE_hi = XOR(vE_hi, v3_hi), XOR(vE_lo, v3_lo)
				z = v9_lo % 2^32 + vE_lo % 2^32
				v9_lo = z % 2^32
				v9_hi = v9_hi + vE_hi + (z - v9_lo) / 2^32
				v4_lo, v4_hi = XOR(v4_lo, v9_lo), XOR(v4_hi, v9_hi)
				z_lo, z_hi = v4_lo % 2^24, v4_hi % 2^24
				v4_lo, v4_hi = (v4_lo - z_lo) / 2^24 % 2^8 + z_hi * 2^8, (v4_hi - z_hi) / 2^24 % 2^8 + z_lo * 2^8
				k = row[16] * 2
				z = v3_lo % 2^32 + v4_lo % 2^32 + W[k-1]
				v3_lo = z % 2^32
				v3_hi = v3_hi + v4_hi + (z - v3_lo) / 2^32 + W[k]
				vE_lo, vE_hi = XOR(vE_lo, v3_lo), XOR(vE_hi, v3_hi)
				z_lo, z_hi = vE_lo % 2^16, vE_hi % 2^16
				vE_lo, vE_hi = (vE_lo - z_lo) / 2^16 % 2^16 + z_hi * 2^16, (vE_hi - z_hi) / 2^16 % 2^16 + z_lo * 2^16
				z = v9_lo % 2^32 + vE_lo % 2^32
				v9_lo = z % 2^32
				v9_hi = v9_hi + vE_hi + (z - v9_lo) / 2^32
				v4_lo, v4_hi = XOR(v4_lo, v9_lo), XOR(v4_hi, v9_hi)
				z_lo, z_hi = v4_lo % 2^31, v4_hi % 2^31
				v4_lo, v4_hi = z_lo * 2^1 + (v4_hi - z_hi) / 2^31 % 2^1, z_hi * 2^1 + (v4_lo - z_lo) / 2^31 % 2^1
			end
			h1_lo = XOR(h1_lo, v0_lo, v8_lo) % 2^32
			h2_lo = XOR(h2_lo, v1_lo, v9_lo) % 2^32
			h3_lo = XOR(h3_lo, v2_lo, vA_lo) % 2^32
			h4_lo = XOR(h4_lo, v3_lo, vB_lo) % 2^32
			h5_lo = XOR(h5_lo, v4_lo, vC_lo) % 2^32
			h6_lo = XOR(h6_lo, v5_lo, vD_lo) % 2^32
			h7_lo = XOR(h7_lo, v6_lo, vE_lo) % 2^32
			h8_lo = XOR(h8_lo, v7_lo, vF_lo) % 2^32
			h1_hi = XOR(h1_hi, v0_hi, v8_hi) % 2^32
			h2_hi = XOR(h2_hi, v1_hi, v9_hi) % 2^32
			h3_hi = XOR(h3_hi, v2_hi, vA_hi) % 2^32
			h4_hi = XOR(h4_hi, v3_hi, vB_hi) % 2^32
			h5_hi = XOR(h5_hi, v4_hi, vC_hi) % 2^32
			h6_hi = XOR(h6_hi, v5_hi, vD_hi) % 2^32
			h7_hi = XOR(h7_hi, v6_hi, vE_hi) % 2^32
			h8_hi = XOR(h8_hi, v7_hi, vF_hi) % 2^32
		end
		H_lo[1], H_lo[2], H_lo[3], H_lo[4], H_lo[5], H_lo[6], H_lo[7], H_lo[8] = h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo
		H_hi[1], H_hi[2], H_hi[3], H_hi[4], H_hi[5], H_hi[6], H_hi[7], H_hi[8] = h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi
		return bytes_compressed
	end


	function blake3_feed_64(str, offs, size, flags, chunk_index, H_in, H_out, wide_output, block_length)
		-- offs >= 0, size >= 0, size is multiple of 64
		block_length = block_length or 64
		local W = common_W
		local h1, h2, h3, h4, h5, h6, h7, h8 = H_in[1], H_in[2], H_in[3], H_in[4], H_in[5], H_in[6], H_in[7], H_in[8]
		H_out = H_out or H_in
		for pos = offs, offs + size - 1, 64 do
			if str then
				for j = 1, 16 do
					pos = pos + 4
					local a, b, c, d = byte(str, pos - 3, pos)
					W[j] = ((d * 256 + c) * 256 + b) * 256 + a
				end
			end
			local v0, v1, v2, v3, v4, v5, v6, v7 = h1, h2, h3, h4, h5, h6, h7, h8
			local v8, v9, vA, vB = sha2_H_hi[1], sha2_H_hi[2], sha2_H_hi[3], sha2_H_hi[4]
			local vC = chunk_index % 2^32         -- t0 = low_4_bytes(chunk_index)
			local vD = (chunk_index - vC) / 2^32  -- t1 = high_4_bytes(chunk_index)
			local vE, vF = block_length, flags
			for j = 1, 7 do
				v0 = v0 + v4 + W[perm_blake3[j]]
				vC = XOR(vC, v0) % 2^32 / 2^16
				vC = vC % 1 * (2^32 - 1) + vC
				v8 = v8 + vC
				v4 = XOR(v4, v8) % 2^32 / 2^12
				v4 = v4 % 1 * (2^32 - 1) + v4
				v0 = v0 + v4 + W[perm_blake3[j + 14]]
				vC = XOR(vC, v0) % 2^32 / 2^8
				vC = vC % 1 * (2^32 - 1) + vC
				v8 = v8 + vC
				v4 = XOR(v4, v8) % 2^32 / 2^7
				v4 = v4 % 1 * (2^32 - 1) + v4
				v1 = v1 + v5 + W[perm_blake3[j + 1]]
				vD = XOR(vD, v1) % 2^32 / 2^16
				vD = vD % 1 * (2^32 - 1) + vD
				v9 = v9 + vD
				v5 = XOR(v5, v9) % 2^32 / 2^12
				v5 = v5 % 1 * (2^32 - 1) + v5
				v1 = v1 + v5 + W[perm_blake3[j + 2]]
				vD = XOR(vD, v1) % 2^32 / 2^8
				vD = vD % 1 * (2^32 - 1) + vD
				v9 = v9 + vD
				v5 = XOR(v5, v9) % 2^32 / 2^7
				v5 = v5 % 1 * (2^32 - 1) + v5
				v2 = v2 + v6 + W[perm_blake3[j + 16]]
				vE = XOR(vE, v2) % 2^32 / 2^16
				vE = vE % 1 * (2^32 - 1) + vE
				vA = vA + vE
				v6 = XOR(v6, vA) % 2^32 / 2^12
				v6 = v6 % 1 * (2^32 - 1) + v6
				v2 = v2 + v6 + W[perm_blake3[j + 7]]
				vE = XOR(vE, v2) % 2^32 / 2^8
				vE = vE % 1 * (2^32 - 1) + vE
				vA = vA + vE
				v6 = XOR(v6, vA) % 2^32 / 2^7
				v6 = v6 % 1 * (2^32 - 1) + v6
				v3 = v3 + v7 + W[perm_blake3[j + 15]]
				vF = XOR(vF, v3) % 2^32 / 2^16
				vF = vF % 1 * (2^32 - 1) + vF
				vB = vB + vF
				v7 = XOR(v7, vB) % 2^32 / 2^12
				v7 = v7 % 1 * (2^32 - 1) + v7
				v3 = v3 + v7 + W[perm_blake3[j + 17]]
				vF = XOR(vF, v3) % 2^32 / 2^8
				vF = vF % 1 * (2^32 - 1) + vF
				vB = vB + vF
				v7 = XOR(v7, vB) % 2^32 / 2^7
				v7 = v7 % 1 * (2^32 - 1) + v7
				v0 = v0 + v5 + W[perm_blake3[j + 21]]
				vF = XOR(vF, v0) % 2^32 / 2^16
				vF = vF % 1 * (2^32 - 1) + vF
				vA = vA + vF
				v5 = XOR(v5, vA) % 2^32 / 2^12
				v5 = v5 % 1 * (2^32 - 1) + v5
				v0 = v0 + v5 + W[perm_blake3[j + 5]]
				vF = XOR(vF, v0) % 2^32 / 2^8
				vF = vF % 1 * (2^32 - 1) + vF
				vA = vA + vF
				v5 = XOR(v5, vA) % 2^32 / 2^7
				v5 = v5 % 1 * (2^32 - 1) + v5
				v1 = v1 + v6 + W[perm_blake3[j + 3]]
				vC = XOR(vC, v1) % 2^32 / 2^16
				vC = vC % 1 * (2^32 - 1) + vC
				vB = vB + vC
				v6 = XOR(v6, vB) % 2^32 / 2^12
				v6 = v6 % 1 * (2^32 - 1) + v6
				v1 = v1 + v6 + W[perm_blake3[j + 6]]
				vC = XOR(vC, v1) % 2^32 / 2^8
				vC = vC % 1 * (2^32 - 1) + vC
				vB = vB + vC
				v6 = XOR(v6, vB) % 2^32 / 2^7
				v6 = v6 % 1 * (2^32 - 1) + v6
				v2 = v2 + v7 + W[perm_blake3[j + 4]]
				vD = XOR(vD, v2) % 2^32 / 2^16
				vD = vD % 1 * (2^32 - 1) + vD
				v8 = v8 + vD
				v7 = XOR(v7, v8) % 2^32 / 2^12
				v7 = v7 % 1 * (2^32 - 1) + v7
				v2 = v2 + v7 + W[perm_blake3[j + 18]]
				vD = XOR(vD, v2) % 2^32 / 2^8
				vD = vD % 1 * (2^32 - 1) + vD
				v8 = v8 + vD
				v7 = XOR(v7, v8) % 2^32 / 2^7
				v7 = v7 % 1 * (2^32 - 1) + v7
				v3 = v3 + v4 + W[perm_blake3[j + 19]]
				vE = XOR(vE, v3) % 2^32 / 2^16
				vE = vE % 1 * (2^32 - 1) + vE
				v9 = v9 + vE
				v4 = XOR(v4, v9) % 2^32 / 2^12
				v4 = v4 % 1 * (2^32 - 1) + v4
				v3 = v3 + v4 + W[perm_blake3[j + 20]]
				vE = XOR(vE, v3) % 2^32 / 2^8
				vE = vE % 1 * (2^32 - 1) + vE
				v9 = v9 + vE
				v4 = XOR(v4, v9) % 2^32 / 2^7
				v4 = v4 % 1 * (2^32 - 1) + v4
			end
			if wide_output then
				H_out[ 9] = XOR(h1, v8)
				H_out[10] = XOR(h2, v9)
				H_out[11] = XOR(h3, vA)
				H_out[12] = XOR(h4, vB)
				H_out[13] = XOR(h5, vC)
				H_out[14] = XOR(h6, vD)
				H_out[15] = XOR(h7, vE)
				H_out[16] = XOR(h8, vF)
			end
			h1 = XOR(v0, v8)
			h2 = XOR(v1, v9)
			h3 = XOR(v2, vA)
			h4 = XOR(v3, vB)
			h5 = XOR(v4, vC)
			h6 = XOR(v5, vD)
			h7 = XOR(v6, vE)
			h8 = XOR(v7, vF)
		end
		H_out[1], H_out[2], H_out[3], H_out[4], H_out[5], H_out[6], H_out[7], H_out[8] = h1, h2, h3, h4, h5, h6, h7, h8
	end

end


--------------------------------------------------------------------------------
-- MAGIC NUMBERS CALCULATOR
--------------------------------------------------------------------------------
-- Q:
--    Is 53-bit "double" math enough to calculate square roots and cube roots of primes with 64 correct bits after decimal point?
-- A:
--    Yes, 53-bit "double" arithmetic is enough.
--    We could obtain first 40 bits by direct calculation of p^(1/3) and next 40 bits by one step of Newton's method.

do
	local function mul(src1, src2, factor, result_length)
		-- src1, src2 - long integers (arrays of digits in base 2^24)
		-- factor - small integer
		-- returns long integer result (src1 * src2 * factor) and its floating point approximation
		local result, carry, value, weight = {}, 0.0, 0.0, 1.0
		for j = 1, result_length do
			for k = math_max(1, j + 1 - #src2), math_min(j, #src1) do
				carry = carry + factor * src1[k] * src2[j + 1 - k]  -- "int32" is not enough for multiplication result, that's why "factor" must be of type "double"
			end
			local digit = carry % 2^24
			result[j] = floor(digit)
			carry = (carry - digit) / 2^24
			value = value + digit * weight
			weight = weight * 2^24
		end
		return result, value
	end

	local idx, step, p, one, sqrt_hi, sqrt_lo = 0, {4, 1, 2, -2, 2}, 4, {1}, sha2_H_hi, sha2_H_lo
	repeat
		p = p + step[p % 6]
		local d = 1
		repeat
			d = d + step[d % 6]
			if d*d > p then -- next prime number is found
				local root = p^(1/3)
				local R = root * 2^40
				R = mul({R - R % 1}, one, 1.0, 2)
				local _, delta = mul(R, mul(R, R, 1.0, 4), -1.0, 4)
				local hi = R[2] % 65536 * 65536 + floor(R[1] / 256)
				local lo = R[1] % 256 * 16777216 + floor(delta * (2^-56 / 3) * root / p)
				if idx < 16 then
					root = p^(1/2)
					R = root * 2^40
					R = mul({R - R % 1}, one, 1.0, 2)
					_, delta = mul(R, R, -1.0, 2)
					local hi = R[2] % 65536 * 65536 + floor(R[1] / 256)
					local lo = R[1] % 256 * 16777216 + floor(delta * 2^-17 / root)
					local idx = idx % 8 + 1
					sha2_H_ext256[224][idx] = lo
					sqrt_hi[idx], sqrt_lo[idx] = hi, lo + hi * hi_factor
					if idx > 7 then
						sqrt_hi, sqrt_lo = sha2_H_ext512_hi[384], sha2_H_ext512_lo[384]
					end
				end
				idx = idx + 1
				sha2_K_hi[idx], sha2_K_lo[idx] = hi, lo % K_lo_modulo + hi * hi_factor
				break
			end
		until p % d == 0
	until idx > 79
end

-- Calculating IVs for SHA512/224 and SHA512/256
for width = 224, 256, 32 do
	local H_lo, H_hi = {}
	if HEX64 then
		for j = 1, 8 do
			H_lo[j] = XORA5(sha2_H_lo[j])
		end
	else
		H_hi = {}
		for j = 1, 8 do
			H_lo[j] = XORA5(sha2_H_lo[j])
			H_hi[j] = XORA5(sha2_H_hi[j])
		end
	end
	sha512_feed_128(H_lo, H_hi, "SHA-512/"..tostring(width).."\128"..string_rep("\0", 115).."\88", 0, 128)
	sha2_H_ext512_lo[width] = H_lo
	sha2_H_ext512_hi[width] = H_hi
end

-- Constants for MD5
do
	local sin, abs, modf = math.sin, math.abs, math.modf
	for idx = 1, 64 do
		-- we can't use formula floor(abs(sin(idx))*2^32) because its result may be beyond integer range on Lua built with 32-bit integers
		local hi, lo = modf(abs(sin(idx)) * 2^16)
		md5_K[idx] = hi * 65536 + floor(lo * 2^16)
	end
end

-- Constants for SHA-3
do
	local sh_reg = 29

	local function next_bit()
		local r = sh_reg % 2
		sh_reg = XOR_BYTE((sh_reg - r) / 2, 142 * r)
		return r
	end

	for idx = 1, 24 do
		local lo, m = 0
		for _ = 1, 6 do
			m = m and m * m * 2 or 1
			lo = lo + next_bit() * m
		end
		local hi = next_bit() * m
		sha3_RC_hi[idx], sha3_RC_lo[idx] = hi, lo + hi * hi_factor_keccak
	end
end

if branch == "FFI" then
	sha2_K_hi = ffi.new("uint32_t[?]", #sha2_K_hi + 1, 0, unpack(sha2_K_hi))
	sha2_K_lo = ffi.new("int64_t[?]",  #sha2_K_lo + 1, 0, unpack(sha2_K_lo))
	--md5_K = ffi.new("uint32_t[?]", #md5_K + 1, 0, unpack(md5_K))
	if hi_factor_keccak == 0 then
		sha3_RC_lo = ffi.new("uint32_t[?]", #sha3_RC_lo + 1, 0, unpack(sha3_RC_lo))
		sha3_RC_hi = ffi.new("uint32_t[?]", #sha3_RC_hi + 1, 0, unpack(sha3_RC_hi))
	else
		sha3_RC_lo = ffi.new("int64_t[?]", #sha3_RC_lo + 1, 0, unpack(sha3_RC_lo))
	end
end


--------------------------------------------------------------------------------
-- MAIN FUNCTIONS
--------------------------------------------------------------------------------

local function sha256ext(width, message)
	-- Create an instance (private objects for current calculation)
	local H, length, tail = {unpack(sha2_H_ext256[width])}, 0.0, ""

	local function partial(message_part)
		if message_part then
			if tail then
				length = length + #message_part
				local offs = 0
				if tail ~= "" and #tail + #message_part >= 64 then
					offs = 64 - #tail
					sha256_feed_64(H, tail..sub(message_part, 1, offs), 0, 64)
					tail = ""
				end
				local size = #message_part - offs
				local size_tail = size % 64
				sha256_feed_64(H, message_part, offs, size - size_tail)
				tail = tail..sub(message_part, #message_part + 1 - size_tail)
				return partial
			else
				error("Adding more chunks is not allowed after receiving the result", 2)
			end
		else
			if tail then
				local final_blocks = {tail, "\128", string_rep("\0", (-9 - length) % 64 + 1)}
				tail = nil
				-- Assuming user data length is shorter than (2^53)-9 bytes
				-- Anyway, it looks very unrealistic that someone would spend more than a year of calculations to process 2^53 bytes of data by using this Lua script :-)
				-- 2^53 bytes = 2^56 bits, so "bit-counter" fits in 7 bytes
				length = length * (8 / 256^7)  -- convert "byte-counter" to "bit-counter" and move decimal point to the left
				for j = 4, 10 do
					length = length % 1 * 256
					final_blocks[j] = char(floor(length))
				end
				final_blocks = table_concat(final_blocks)
				sha256_feed_64(H, final_blocks, 0, #final_blocks)
				local max_reg = width / 32
				for j = 1, max_reg do
					H[j] = HEX(H[j])
				end
				H = table_concat(H, "", 1, max_reg)
			end
			return H
		end
	end

	if message then
		-- Actually perform calculations and return the SHA256 digest of a message
		return partial(message)()
	else
		-- Return function for chunk-by-chunk loading
		-- User should feed every chunk of input data as single argument to this function and finally get SHA256 digest by invoking this function without an argument
		return partial
	end
end


local function sha512ext(width, message)
	-- Create an instance (private objects for current calculation)
	local length, tail, H_lo, H_hi = 0.0, "", {unpack(sha2_H_ext512_lo[width])}, not HEX64 and {unpack(sha2_H_ext512_hi[width])}

	local function partial(message_part)
		if message_part then
			if tail then
				length = length + #message_part
				local offs = 0
				if tail ~= "" and #tail + #message_part >= 128 then
					offs = 128 - #tail
					sha512_feed_128(H_lo, H_hi, tail..sub(message_part, 1, offs), 0, 128)
					tail = ""
				end
				local size = #message_part - offs
				local size_tail = size % 128
				sha512_feed_128(H_lo, H_hi, message_part, offs, size - size_tail)
				tail = tail..sub(message_part, #message_part + 1 - size_tail)
				return partial
			else
				error("Adding more chunks is not allowed after receiving the result", 2)
			end
		else
			if tail then
				local final_blocks = {tail, "\128", string_rep("\0", (-17-length) % 128 + 9)}
				tail = nil
				-- Assuming user data length is shorter than (2^53)-17 bytes
				-- 2^53 bytes = 2^56 bits, so "bit-counter" fits in 7 bytes
				length = length * (8 / 256^7)  -- convert "byte-counter" to "bit-counter" and move floating point to the left
				for j = 4, 10 do
					length = length % 1 * 256
					final_blocks[j] = char(floor(length))
				end
				final_blocks = table_concat(final_blocks)
				sha512_feed_128(H_lo, H_hi, final_blocks, 0, #final_blocks)
				local max_reg = ceil(width / 64)
				if HEX64 then
					for j = 1, max_reg do
						H_lo[j] = HEX64(H_lo[j])
					end
				else
					for j = 1, max_reg do
						H_lo[j] = HEX(H_hi[j])..HEX(H_lo[j])
					end
					H_hi = nil
				end
				H_lo = sub(table_concat(H_lo, "", 1, max_reg), 1, width / 4)
			end
			return H_lo
		end
	end

	if message then
		-- Actually perform calculations and return the SHA512 digest of a message
		return partial(message)()
	else
		-- Return function for chunk-by-chunk loading
		-- User should feed every chunk of input data as single argument to this function and finally get SHA512 digest by invoking this function without an argument
		return partial
	end
end


local function md5(message)
	-- Create an instance (private objects for current calculation)
	local H, length, tail = {unpack(md5_sha1_H, 1, 4)}, 0.0, ""

	local function partial(message_part)
		if message_part then
			if tail then
				length = length + #message_part
				local offs = 0
				if tail ~= "" and #tail + #message_part >= 64 then
					offs = 64 - #tail
					md5_feed_64(H, tail..sub(message_part, 1, offs), 0, 64)
					tail = ""
				end
				local size = #message_part - offs
				local size_tail = size % 64
				md5_feed_64(H, message_part, offs, size - size_tail)
				tail = tail..sub(message_part, #message_part + 1 - size_tail)
				return partial
			else
				error("Adding more chunks is not allowed after receiving the result", 2)
			end
		else
			if tail then
				local final_blocks = {tail, "\128", string_rep("\0", (-9 - length) % 64)}
				tail = nil
				length = length * 8  -- convert "byte-counter" to "bit-counter"
				for j = 4, 11 do
					local low_byte = length % 256
					final_blocks[j] = char(low_byte)
					length = (length - low_byte) / 256
				end
				final_blocks = table_concat(final_blocks)
				md5_feed_64(H, final_blocks, 0, #final_blocks)
				for j = 1, 4 do
					H[j] = HEX(H[j])
				end
				H = gsub(table_concat(H), "(..)(..)(..)(..)", "%4%3%2%1")
			end
			return H
		end
	end

	if message then
		-- Actually perform calculations and return the MD5 digest of a message
		return partial(message)()
	else
		-- Return function for chunk-by-chunk loading
		-- User should feed every chunk of input data as single argument to this function and finally get MD5 digest by invoking this function without an argument
		return partial
	end
end


local function sha1(message)
	-- Create an instance (private objects for current calculation)
	local H, length, tail = {unpack(md5_sha1_H)}, 0.0, ""

	local function partial(message_part)
		if message_part then
			if tail then
				length = length + #message_part
				local offs = 0
				if tail ~= "" and #tail + #message_part >= 64 then
					offs = 64 - #tail
					sha1_feed_64(H, tail..sub(message_part, 1, offs), 0, 64)
					tail = ""
				end
				local size = #message_part - offs
				local size_tail = size % 64
				sha1_feed_64(H, message_part, offs, size - size_tail)
				tail = tail..sub(message_part, #message_part + 1 - size_tail)
				return partial
			else
				error("Adding more chunks is not allowed after receiving the result", 2)
			end
		else
			if tail then
				local final_blocks = {tail, "\128", string_rep("\0", (-9 - length) % 64 + 1)}
				tail = nil
				-- Assuming user data length is shorter than (2^53)-9 bytes
				-- 2^53 bytes = 2^56 bits, so "bit-counter" fits in 7 bytes
				length = length * (8 / 256^7)  -- convert "byte-counter" to "bit-counter" and move decimal point to the left
				for j = 4, 10 do
					length = length % 1 * 256
					final_blocks[j] = char(floor(length))
				end
				final_blocks = table_concat(final_blocks)
				sha1_feed_64(H, final_blocks, 0, #final_blocks)
				for j = 1, 5 do
					H[j] = HEX(H[j])
				end
				H = table_concat(H)
			end
			return H
		end
	end

	if message then
		-- Actually perform calculations and return the SHA-1 digest of a message
		return partial(message)()
	else
		-- Return function for chunk-by-chunk loading
		-- User should feed every chunk of input data as single argument to this function and finally get SHA-1 digest by invoking this function without an argument
		return partial
	end
end


local function keccak(block_size_in_bytes, digest_size_in_bytes, is_SHAKE, message)
	-- "block_size_in_bytes" is multiple of 8
	if type(digest_size_in_bytes) ~= "number" then
		-- arguments in SHAKE are swapped:
		--    NIST FIPS 202 defines SHAKE(message,num_bits)
		--    this module   defines SHAKE(num_bytes,message)
		-- it's easy to forget about this swap, hence the check
		error("Argument 'digest_size_in_bytes' must be a number", 2)
	end
	-- Create an instance (private objects for current calculation)
	local tail, lanes_lo, lanes_hi = "", create_array_of_lanes(), hi_factor_keccak == 0 and create_array_of_lanes()
	local result

	local function partial(message_part)
		if message_part then
			if tail then
				local offs = 0
				if tail ~= "" and #tail + #message_part >= block_size_in_bytes then
					offs = block_size_in_bytes - #tail
					keccak_feed(lanes_lo, lanes_hi, tail..sub(message_part, 1, offs), 0, block_size_in_bytes, block_size_in_bytes)
					tail = ""
				end
				local size = #message_part - offs
				local size_tail = size % block_size_in_bytes
				keccak_feed(lanes_lo, lanes_hi, message_part, offs, size - size_tail, block_size_in_bytes)
				tail = tail..sub(message_part, #message_part + 1 - size_tail)
				return partial
			else
				error("Adding more chunks is not allowed after receiving the result", 2)
			end
		else
			if tail then
				-- append the following bits to the message: for usual SHA-3: 011(0*)1, for SHAKE: 11111(0*)1
				local gap_start = is_SHAKE and 31 or 6
				tail = tail..(#tail + 1 == block_size_in_bytes and char(gap_start + 128) or char(gap_start)..string_rep("\0", (-2 - #tail) % block_size_in_bytes).."\128")
				keccak_feed(lanes_lo, lanes_hi, tail, 0, #tail, block_size_in_bytes)
				tail = nil
				local lanes_used = 0
				local total_lanes = floor(block_size_in_bytes / 8)
				local qwords = {}

				local function get_next_qwords_of_digest(qwords_qty)
					-- returns not more than 'qwords_qty' qwords ('qwords_qty' might be non-integer)
					-- doesn't go across keccak-buffer boundary
					-- block_size_in_bytes is a multiple of 8, so, keccak-buffer contains integer number of qwords
					if lanes_used >= total_lanes then
						keccak_feed(lanes_lo, lanes_hi, "\0\0\0\0\0\0\0\0", 0, 8, 8)
						lanes_used = 0
					end
					qwords_qty = floor(math_min(qwords_qty, total_lanes - lanes_used))
					if hi_factor_keccak ~= 0 then
						for j = 1, qwords_qty do
							qwords[j] = HEX64(lanes_lo[lanes_used + j - 1 + lanes_index_base])
						end
					else
						for j = 1, qwords_qty do
							qwords[j] = HEX(lanes_hi[lanes_used + j])..HEX(lanes_lo[lanes_used + j])
						end
					end
					lanes_used = lanes_used + qwords_qty
					return
						gsub(table_concat(qwords, "", 1, qwords_qty), "(..)(..)(..)(..)(..)(..)(..)(..)", "%8%7%6%5%4%3%2%1"),
					qwords_qty * 8
				end

				local parts = {}      -- digest parts
				local last_part, last_part_size = "", 0

				local function get_next_part_of_digest(bytes_needed)
					-- returns 'bytes_needed' bytes, for arbitrary integer 'bytes_needed'
					bytes_needed = bytes_needed or 1
					if bytes_needed <= last_part_size then
						last_part_size = last_part_size - bytes_needed
						local part_size_in_nibbles = bytes_needed * 2
						local result = sub(last_part, 1, part_size_in_nibbles)
						last_part = sub(last_part, part_size_in_nibbles + 1)
						return result
					end
					local parts_qty = 0
					if last_part_size > 0 then
						parts_qty = 1
						parts[parts_qty] = last_part
						bytes_needed = bytes_needed - last_part_size
					end
					-- repeats until the length is enough
					while bytes_needed >= 8 do
						local next_part, next_part_size = get_next_qwords_of_digest(bytes_needed / 8)
						parts_qty = parts_qty + 1
						parts[parts_qty] = next_part
						bytes_needed = bytes_needed - next_part_size
					end
					if bytes_needed > 0 then
						last_part, last_part_size = get_next_qwords_of_digest(1)
						parts_qty = parts_qty + 1
						parts[parts_qty] = get_next_part_of_digest(bytes_needed)
					else
						last_part, last_part_size = "", 0
					end
					return table_concat(parts, "", 1, parts_qty)
				end

				if digest_size_in_bytes < 0 then
					result = get_next_part_of_digest
				else
					result = get_next_part_of_digest(digest_size_in_bytes)
				end
			end
			return result
		end
	end

	if message then
		-- Actually perform calculations and return the SHA-3 digest of a message
		return partial(message)()
	else
		-- Return function for chunk-by-chunk loading
		-- User should feed every chunk of input data as single argument to this function and finally get SHA-3 digest by invoking this function without an argument
		return partial
	end
end


local hex_to_bin, bin_to_hex, bin_to_base64, base64_to_bin
do
	function hex_to_bin(hex_string)
		return (gsub(hex_string, "%x%x",
			function (hh)
				return char(tonumber(hh, 16))
			end
			))
	end

	function bin_to_hex(binary_string)
		return (gsub(binary_string, ".",
			function (c)
				return string_format("%02x", byte(c))
			end
			))
	end

	local base64_symbols = {
		['+'] = 62, ['-'] = 62,  [62] = '+',
		['/'] = 63, ['_'] = 63,  [63] = '/',
		['='] = -1, ['.'] = -1,  [-1] = '='
	}
	local symbol_index = 0
	for j, pair in ipairs{'AZ', 'az', '09'} do
		for ascii = byte(pair), byte(pair, 2) do
			local ch = char(ascii)
			base64_symbols[ch] = symbol_index
			base64_symbols[symbol_index] = ch
			symbol_index = symbol_index + 1
		end
	end

	function bin_to_base64(binary_string)
		local result = {}
		for pos = 1, #binary_string, 3 do
			local c1, c2, c3, c4 = byte(sub(binary_string, pos, pos + 2)..'\0', 1, -1)
			result[#result + 1] =
				base64_symbols[floor(c1 / 4)]
				..base64_symbols[c1 % 4 * 16 + floor(c2 / 16)]
				..base64_symbols[c3 and c2 % 16 * 4 + floor(c3 / 64) or -1]
				..base64_symbols[c4 and c3 % 64 or -1]
		end
		return table_concat(result)
	end

	function base64_to_bin(base64_string)
		local result, chars_qty = {}, 3
		for pos, ch in gmatch(gsub(base64_string, '%s+', ''), '()(.)') do
			local code = base64_symbols[ch]
			if code < 0 then
				chars_qty = chars_qty - 1
				code = 0
			end
			local idx = pos % 4
			if idx > 0 then
				result[-idx] = code
			else
				local c1 = result[-1] * 4 + floor(result[-2] / 16)
				local c2 = (result[-2] % 16) * 16 + floor(result[-3] / 4)
				local c3 = (result[-3] % 4) * 64 + code
				result[#result + 1] = sub(char(c1, c2, c3), 1, chars_qty)
			end
		end
		return table_concat(result)
	end

end


local block_size_for_HMAC  -- this table will be initialized at the end of the module

local function pad_and_xor(str, result_length, byte_for_xor)
	return gsub(str, ".",
		function(c)
			return char(XOR_BYTE(byte(c), byte_for_xor))
		end
	)..string_rep(char(byte_for_xor), result_length - #str)
end

local function hmac(hash_func, key, message)
	-- Create an instance (private objects for current calculation)
	local block_size = block_size_for_HMAC[hash_func]
	if not block_size then
		error("Unknown hash function", 2)
	end
	if #key > block_size then
		key = hex_to_bin(hash_func(key))
	end
	local append = hash_func()(pad_and_xor(key, block_size, 0x36))
	local result

	local function partial(message_part)
		if not message_part then
			result = result or hash_func(pad_and_xor(key, block_size, 0x5C)..hex_to_bin(append()))
			return result
		elseif result then
			error("Adding more chunks is not allowed after receiving the result", 2)
		else
			append(message_part)
			return partial
		end
	end

	if message then
		-- Actually perform calculations and return the HMAC of a message
		return partial(message)()
	else
		-- Return function for chunk-by-chunk loading of a message
		-- User should feed every chunk of the message as single argument to this function and finally get HMAC by invoking this function without an argument
		return partial
	end
end


local function xor_blake2_salt(salt, letter, H_lo, H_hi)
	-- salt: concatenation of "Salt"+"Personalization" fields
	local max_size = letter == "s" and 16 or 32
	local salt_size = #salt
	if salt_size > max_size then
		error(string_format("For BLAKE2%s/BLAKE2%sp/BLAKE2X%s the 'salt' parameter length must not exceed %d bytes", letter, letter, letter, max_size), 2)
	end
	if H_lo then
		local offset, blake2_word_size, xor = 0, letter == "s" and 4 or 8, letter == "s" and XOR or XORA5
		for j = 5, 4 + ceil(salt_size / blake2_word_size) do
			local prev, last
			for _ = 1, blake2_word_size, 4 do
				offset = offset + 4
				local a, b, c, d = byte(salt, offset - 3, offset)
				local four_bytes = (((d or 0) * 256 + (c or 0)) * 256 + (b or 0)) * 256 + (a or 0)
				prev, last = last, four_bytes
			end
			H_lo[j] = xor(H_lo[j], prev and last * hi_factor + prev or last)
			if H_hi then
				H_hi[j] = xor(H_hi[j], last)
			end
		end
	end
end

local function blake2s(message, key, salt, digest_size_in_bytes, XOF_length, B2_offset)
	-- message:  binary string to be hashed (or nil for "chunk-by-chunk" input mode)
	-- key:      (optional) binary string up to 32 bytes, by default empty string
	-- salt:     (optional) binary string up to 16 bytes, by default empty string
	-- digest_size_in_bytes: (optional) integer from 1 to 32, by default 32
	-- The last two parameters "XOF_length" and "B2_offset" are for internal use only, user must omit them (or pass nil)
	digest_size_in_bytes = digest_size_in_bytes or 32
	if digest_size_in_bytes < 1 or digest_size_in_bytes > 32 then
		error("BLAKE2s digest length must be from 1 to 32 bytes", 2)
	end
	key = key or ""
	local key_length = #key
	if key_length > 32 then
		error("BLAKE2s key length must not exceed 32 bytes", 2)
	end
	salt = salt or ""
	local bytes_compressed, tail, H = 0.0, "", {unpack(sha2_H_hi)}
	if B2_offset then
		H[1] = XOR(H[1], digest_size_in_bytes)
		H[2] = XOR(H[2], 0x20)
		H[3] = XOR(H[3], B2_offset)
		H[4] = XOR(H[4], 0x20000000 + XOF_length)
	else
		H[1] = XOR(H[1], 0x01010000 + key_length * 256 + digest_size_in_bytes)
		if XOF_length then
			H[4] = XOR(H[4], XOF_length)
		end
	end
	if salt ~= "" then
		xor_blake2_salt(salt, "s", H)
	end

	local function partial(message_part)
		if message_part then
			if tail then
				local offs = 0
				if tail ~= "" and #tail + #message_part > 64 then
					offs = 64 - #tail
					bytes_compressed = blake2s_feed_64(H, tail..sub(message_part, 1, offs), 0, 64, bytes_compressed)
					tail = ""
				end
				local size = #message_part - offs
				local size_tail = size > 0 and (size - 1) % 64 + 1 or 0
				bytes_compressed = blake2s_feed_64(H, message_part, offs, size - size_tail, bytes_compressed)
				tail = tail..sub(message_part, #message_part + 1 - size_tail)
				return partial
			else
				error("Adding more chunks is not allowed after receiving the result", 2)
			end
		else
			if tail then
				if B2_offset then
					blake2s_feed_64(H, nil, 0, 64, 0, 32)
				else
					blake2s_feed_64(H, tail..string_rep("\0", 64 - #tail), 0, 64, bytes_compressed, #tail)
				end
				tail = nil
				if not XOF_length or B2_offset then
					local max_reg = ceil(digest_size_in_bytes / 4)
					for j = 1, max_reg do
						H[j] = HEX(H[j])
					end
					H = sub(gsub(table_concat(H, "", 1, max_reg), "(..)(..)(..)(..)", "%4%3%2%1"), 1, digest_size_in_bytes * 2)
				end
			end
			return H
		end
	end

	if key_length > 0 then
		partial(key..string_rep("\0", 64 - key_length))
	end
	if B2_offset then
		return partial()
	elseif message then
		-- Actually perform calculations and return the BLAKE2s digest of a message
		return partial(message)()
	else
		-- Return function for chunk-by-chunk loading
		-- User should feed every chunk of input data as single argument to this function and finally get BLAKE2s digest by invoking this function without an argument
		return partial
	end
end

local function blake2b(message, key, salt, digest_size_in_bytes, XOF_length, B2_offset)
	-- message:  binary string to be hashed (or nil for "chunk-by-chunk" input mode)
	-- key:      (optional) binary string up to 64 bytes, by default empty string
	-- salt:     (optional) binary string up to 32 bytes, by default empty string
	-- digest_size_in_bytes: (optional) integer from 1 to 64, by default 64
	-- The last two parameters "XOF_length" and "B2_offset" are for internal use only, user must omit them (or pass nil)
	digest_size_in_bytes = floor(digest_size_in_bytes or 64)
	if digest_size_in_bytes < 1 or digest_size_in_bytes > 64 then
		error("BLAKE2b digest length must be from 1 to 64 bytes", 2)
	end
	key = key or ""
	local key_length = #key
	if key_length > 64 then
		error("BLAKE2b key length must not exceed 64 bytes", 2)
	end
	salt = salt or ""
	local bytes_compressed, tail, H_lo, H_hi = 0.0, "", {unpack(sha2_H_lo)}, not HEX64 and {unpack(sha2_H_hi)}
	if B2_offset then
		if H_hi then
			H_lo[1] = XORA5(H_lo[1], digest_size_in_bytes)
			H_hi[1] = XORA5(H_hi[1], 0x40)
			H_lo[2] = XORA5(H_lo[2], B2_offset)
			H_hi[2] = XORA5(H_hi[2], XOF_length)
		else
			H_lo[1] = XORA5(H_lo[1], 0x40 * hi_factor + digest_size_in_bytes)
			H_lo[2] = XORA5(H_lo[2], XOF_length * hi_factor + B2_offset)
		end
		H_lo[3] = XORA5(H_lo[3], 0x4000)
	else
		H_lo[1] = XORA5(H_lo[1], 0x01010000 + key_length * 256 + digest_size_in_bytes)
		if XOF_length then
			if H_hi then
				H_hi[2] = XORA5(H_hi[2], XOF_length)
			else
				H_lo[2] = XORA5(H_lo[2], XOF_length * hi_factor)
			end
		end
	end
	if salt ~= "" then
		xor_blake2_salt(salt, "b", H_lo, H_hi)
	end

	local function partial(message_part)
		if message_part then
			if tail then
				local offs = 0
				if tail ~= "" and #tail + #message_part > 128 then
					offs = 128 - #tail
					bytes_compressed = blake2b_feed_128(H_lo, H_hi, tail..sub(message_part, 1, offs), 0, 128, bytes_compressed)
					tail = ""
				end
				local size = #message_part - offs
				local size_tail = size > 0 and (size - 1) % 128 + 1 or 0
				bytes_compressed = blake2b_feed_128(H_lo, H_hi, message_part, offs, size - size_tail, bytes_compressed)
				tail = tail..sub(message_part, #message_part + 1 - size_tail)
				return partial
			else
				error("Adding more chunks is not allowed after receiving the result", 2)
			end
		else
			if tail then
				if B2_offset then
					blake2b_feed_128(H_lo, H_hi, nil, 0, 128, 0, 64)
				else
					blake2b_feed_128(H_lo, H_hi, tail..string_rep("\0", 128 - #tail), 0, 128, bytes_compressed, #tail)
				end
				tail = nil
				if XOF_length and not B2_offset then
					if H_hi then
						for j = 8, 1, -1 do
							H_lo[j*2] = H_hi[j]
							H_lo[j*2-1] = H_lo[j]
						end
						return H_lo, 16
					end
				else
					local max_reg = ceil(digest_size_in_bytes / 8)
					if H_hi then
						for j = 1, max_reg do
							H_lo[j] = HEX(H_hi[j])..HEX(H_lo[j])
						end
					else
						for j = 1, max_reg do
							H_lo[j] = HEX64(H_lo[j])
						end
					end
					H_lo = sub(gsub(table_concat(H_lo, "", 1, max_reg), "(..)(..)(..)(..)(..)(..)(..)(..)", "%8%7%6%5%4%3%2%1"), 1, digest_size_in_bytes * 2)
				end
				H_hi = nil
			end
			return H_lo
		end
	end

	if key_length > 0 then
		partial(key..string_rep("\0", 128 - key_length))
	end
	if B2_offset then
		return partial()
	elseif message then
		-- Actually perform calculations and return the BLAKE2b digest of a message
		return partial(message)()
	else
		-- Return function for chunk-by-chunk loading
		-- User should feed every chunk of input data as single argument to this function and finally get BLAKE2b digest by invoking this function without an argument
		return partial
	end
end

local function blake2sp(message, key, salt, digest_size_in_bytes)
	-- message:  binary string to be hashed (or nil for "chunk-by-chunk" input mode)
	-- key:      (optional) binary string up to 32 bytes, by default empty string
	-- salt:     (optional) binary string up to 16 bytes, by default empty string
	-- digest_size_in_bytes: (optional) integer from 1 to 32, by default 32
	digest_size_in_bytes = digest_size_in_bytes or 32
	if digest_size_in_bytes < 1 or digest_size_in_bytes > 32 then
		error("BLAKE2sp digest length must be from 1 to 32 bytes", 2)
	end
	key = key or ""
	local key_length = #key
	if key_length > 32 then
		error("BLAKE2sp key length must not exceed 32 bytes", 2)
	end
	salt = salt or ""
	local instances, length, first_dword_of_parameter_block, result = {}, 0.0, 0x02080000 + key_length * 256 + digest_size_in_bytes
	for j = 1, 8 do
		local bytes_compressed, tail, H = 0.0, "", {unpack(sha2_H_hi)}
		instances[j] = {bytes_compressed, tail, H}
		H[1] = XOR(H[1], first_dword_of_parameter_block)
		H[3] = XOR(H[3], j-1)
		H[4] = XOR(H[4], 0x20000000)
		if salt ~= "" then
			xor_blake2_salt(salt, "s", H)
		end
	end

	local function partial(message_part)
		if message_part then
			if instances then
				local from = 0
				while true do
					local to = math_min(from + 64 - length % 64, #message_part)
					if to > from then
						local inst = instances[floor(length / 64) % 8 + 1]
						local part = sub(message_part, from + 1, to)
						length, from = length + to - from, to
						local bytes_compressed, tail = inst[1], inst[2]
						if #tail < 64 then
							tail = tail..part
						else
							local H = inst[3]
							bytes_compressed = blake2s_feed_64(H, tail, 0, 64, bytes_compressed)
							tail = part
						end
						inst[1], inst[2] = bytes_compressed, tail
					else
						break
					end
				end
				return partial
			else
				error("Adding more chunks is not allowed after receiving the result", 2)
			end
		else
			if instances then
				local root_H = {unpack(sha2_H_hi)}
				root_H[1] = XOR(root_H[1], first_dword_of_parameter_block)
				root_H[4] = XOR(root_H[4], 0x20010000)
				if salt ~= "" then
					xor_blake2_salt(salt, "s", root_H)
				end
				for j = 1, 8 do
					local inst = instances[j]
					local bytes_compressed, tail, H = inst[1], inst[2], inst[3]
					blake2s_feed_64(H, tail..string_rep("\0", 64 - #tail), 0, 64, bytes_compressed, #tail, j == 8)
					if j % 2 == 0 then
						local index = 0
						for k = j - 1, j do
							local inst = instances[k]
							local H = inst[3]
							for i = 1, 8 do
								index = index + 1
								common_W_blake2s[index] = H[i]
							end
						end
						blake2s_feed_64(root_H, nil, 0, 64, 64 * (j/2 - 1), j == 8 and 64, j == 8)
					end
				end
				instances = nil
				local max_reg = ceil(digest_size_in_bytes / 4)
				for j = 1, max_reg do
					root_H[j] = HEX(root_H[j])
				end
				result = sub(gsub(table_concat(root_H, "", 1, max_reg), "(..)(..)(..)(..)", "%4%3%2%1"), 1, digest_size_in_bytes * 2)
			end
			return result
		end
	end

	if key_length > 0 then
		key = key..string_rep("\0", 64 - key_length)
		for j = 1, 8 do
			partial(key)
		end
	end
	if message then
		-- Actually perform calculations and return the BLAKE2sp digest of a message
		return partial(message)()
	else
		-- Return function for chunk-by-chunk loading
		-- User should feed every chunk of input data as single argument to this function and finally get BLAKE2sp digest by invoking this function without an argument
		return partial
	end

end

local function blake2bp(message, key, salt, digest_size_in_bytes)
	-- message:  binary string to be hashed (or nil for "chunk-by-chunk" input mode)
	-- key:      (optional) binary string up to 64 bytes, by default empty string
	-- salt:     (optional) binary string up to 32 bytes, by default empty string
	-- digest_size_in_bytes: (optional) integer from 1 to 64, by default 64
	digest_size_in_bytes = digest_size_in_bytes or 64
	if digest_size_in_bytes < 1 or digest_size_in_bytes > 64 then
		error("BLAKE2bp digest length must be from 1 to 64 bytes", 2)
	end
	key = key or ""
	local key_length = #key
	if key_length > 64 then
		error("BLAKE2bp key length must not exceed 64 bytes", 2)
	end
	salt = salt or ""
	local instances, length, first_dword_of_parameter_block, result = {}, 0.0, 0x02040000 + key_length * 256 + digest_size_in_bytes
	for j = 1, 4 do
		local bytes_compressed, tail, H_lo, H_hi = 0.0, "", {unpack(sha2_H_lo)}, not HEX64 and {unpack(sha2_H_hi)}
		instances[j] = {bytes_compressed, tail, H_lo, H_hi}
		H_lo[1] = XORA5(H_lo[1], first_dword_of_parameter_block)
		H_lo[2] = XORA5(H_lo[2], j-1)
		H_lo[3] = XORA5(H_lo[3], 0x4000)
		if salt ~= "" then
			xor_blake2_salt(salt, "b", H_lo, H_hi)
		end
	end

	local function partial(message_part)
		if message_part then
			if instances then
				local from = 0
				while true do
					local to = math_min(from + 128 - length % 128, #message_part)
					if to > from then
						local inst = instances[floor(length / 128) % 4 + 1]
						local part = sub(message_part, from + 1, to)
						length, from = length + to - from, to
						local bytes_compressed, tail = inst[1], inst[2]
						if #tail < 128 then
							tail = tail..part
						else
							local H_lo, H_hi = inst[3], inst[4]
							bytes_compressed = blake2b_feed_128(H_lo, H_hi, tail, 0, 128, bytes_compressed)
							tail = part
						end
						inst[1], inst[2] = bytes_compressed, tail
					else
						break
					end
				end
				return partial
			else
				error("Adding more chunks is not allowed after receiving the result", 2)
			end
		else
			if instances then
				local root_H_lo, root_H_hi = {unpack(sha2_H_lo)}, not HEX64 and {unpack(sha2_H_hi)}
				root_H_lo[1] = XORA5(root_H_lo[1], first_dword_of_parameter_block)
				root_H_lo[3] = XORA5(root_H_lo[3], 0x4001)
				if salt ~= "" then
					xor_blake2_salt(salt, "b", root_H_lo, root_H_hi)
				end
				for j = 1, 4 do
					local inst = instances[j]
					local bytes_compressed, tail, H_lo, H_hi = inst[1], inst[2], inst[3], inst[4]
					blake2b_feed_128(H_lo, H_hi, tail..string_rep("\0", 128 - #tail), 0, 128, bytes_compressed, #tail, j == 4)
					if j % 2 == 0 then
						local index = 0
						for k = j - 1, j do
							local inst = instances[k]
							local H_lo, H_hi = inst[3], inst[4]
							for i = 1, 8 do
								index = index + 1
								common_W_blake2b[index] = H_lo[i]
								if H_hi then
									index = index + 1
									common_W_blake2b[index] = H_hi[i]
								end
							end
						end
						blake2b_feed_128(root_H_lo, root_H_hi, nil, 0, 128, 128 * (j/2 - 1), j == 4 and 128, j == 4)
					end
				end
				instances = nil
				local max_reg = ceil(digest_size_in_bytes / 8)
				if HEX64 then
					for j = 1, max_reg do
						root_H_lo[j] = HEX64(root_H_lo[j])
					end
				else
					for j = 1, max_reg do
						root_H_lo[j] = HEX(root_H_hi[j])..HEX(root_H_lo[j])
					end
				end
				result = sub(gsub(table_concat(root_H_lo, "", 1, max_reg), "(..)(..)(..)(..)(..)(..)(..)(..)", "%8%7%6%5%4%3%2%1"), 1, digest_size_in_bytes * 2)
			end
			return result
		end
	end

	if key_length > 0 then
		key = key..string_rep("\0", 128 - key_length)
		for j = 1, 4 do
			partial(key)
		end
	end
	if message then
		-- Actually perform calculations and return the BLAKE2bp digest of a message
		return partial(message)()
	else
		-- Return function for chunk-by-chunk loading
		-- User should feed every chunk of input data as single argument to this function and finally get BLAKE2bp digest by invoking this function without an argument
		return partial
	end

end

local function blake2x(inner_func, inner_func_letter, common_W_blake2, block_size, digest_size_in_bytes, message, key, salt)
	local XOF_digest_length_limit, XOF_digest_length, chunk_by_chunk_output = 2^(block_size / 2) - 1
	if digest_size_in_bytes == -1 then  -- infinite digest
		digest_size_in_bytes = math_huge
		XOF_digest_length = floor(XOF_digest_length_limit)
		chunk_by_chunk_output = true
	else
		if digest_size_in_bytes < 0 then
			digest_size_in_bytes = -1.0 * digest_size_in_bytes
			chunk_by_chunk_output = true
		end
		XOF_digest_length = floor(digest_size_in_bytes)
		if XOF_digest_length >= XOF_digest_length_limit then
			error("Requested digest is too long.  BLAKE2X"..inner_func_letter.." finite digest is limited by (2^"..floor(block_size / 2)..")-2 bytes.  Hint: you can generate infinite digest.", 2)
		end
	end
	salt = salt or ""
	if salt ~= "" then
		xor_blake2_salt(salt, inner_func_letter)  -- don't xor, only check the size of salt
	end
	local inner_partial = inner_func(nil, key, salt, nil, XOF_digest_length)
	local result

	local function partial(message_part)
		if message_part then
			if inner_partial then
				inner_partial(message_part)
				return partial
			else
				error("Adding more chunks is not allowed after receiving the result", 2)
			end
		else
			if inner_partial then
				local half_W, half_W_size = inner_partial()
				half_W_size, inner_partial = half_W_size or 8

				local function get_hash_block(block_no)
					-- block_no = 0...(2^32-1)
					local size = math_min(block_size, digest_size_in_bytes - block_no * block_size)
					if size <= 0 then
						return ""
					end
					for j = 1, half_W_size do
						common_W_blake2[j] = half_W[j]
					end
					for j = half_W_size + 1, 2 * half_W_size do
						common_W_blake2[j] = 0
					end
					return inner_func(nil, nil, salt, size, XOF_digest_length, floor(block_no))
				end

				local hash = {}
				if chunk_by_chunk_output then
					local pos, period, cached_block_no, cached_block = 0, block_size * 2^32

					local function get_next_part_of_digest(arg1, arg2)
						if arg1 == "seek" then
							-- Usage #1:  get_next_part_of_digest("seek", new_pos)
							pos = arg2 % period
						else
							-- Usage #2:  hex_string = get_next_part_of_digest(size)
							local size, index = arg1 or 1, 0
							while size > 0 do
								local block_offset = pos % block_size
								local block_no = (pos - block_offset) / block_size
								local part_size = math_min(size, block_size - block_offset)
								if cached_block_no ~= block_no then
									cached_block_no = block_no
									cached_block = get_hash_block(block_no)
								end
								index = index + 1
								hash[index] = sub(cached_block, block_offset * 2 + 1, (block_offset + part_size) * 2)
								size = size - part_size
								pos = (pos + part_size) % period
							end
							return table_concat(hash, "", 1, index)
						end
					end

					result = get_next_part_of_digest
				else
					for j = 1.0, ceil(digest_size_in_bytes / block_size) do
						hash[j] = get_hash_block(j - 1.0)
					end
					result = table_concat(hash)
				end
			end
			return result
		end
	end

	if message then
		-- Actually perform calculations and return the BLAKE2X digest of a message
		return partial(message)()
	else
		-- Return function for chunk-by-chunk loading
		-- User should feed every chunk of input data as single argument to this function and finally get BLAKE2X digest by invoking this function without an argument
		return partial
	end
end

local function blake2xs(digest_size_in_bytes, message, key, salt)
	-- digest_size_in_bytes:
	--    0..65534       = get finite digest as single Lua string
	--    (-1)           = get infinite digest in "chunk-by-chunk" output mode
	--    (-2)..(-65534) = get finite digest in "chunk-by-chunk" output mode
	-- message:  binary string to be hashed (or nil for "chunk-by-chunk" input mode)
	-- key:      (optional) binary string up to 32 bytes, by default empty string
	-- salt:     (optional) binary string up to 16 bytes, by default empty string
	return blake2x(blake2s, "s", common_W_blake2s, 32, digest_size_in_bytes, message, key, salt)
end

local function blake2xb(digest_size_in_bytes, message, key, salt)
	-- digest_size_in_bytes:
	--    0..4294967294       = get finite digest as single Lua string
	--    (-1)                = get infinite digest in "chunk-by-chunk" output mode
	--    (-2)..(-4294967294) = get finite digest in "chunk-by-chunk" output mode
	-- message:  binary string to be hashed (or nil for "chunk-by-chunk" input mode)
	-- key:      (optional) binary string up to 64 bytes, by default empty string
	-- salt:     (optional) binary string up to 32 bytes, by default empty string
	return blake2x(blake2b, "b", common_W_blake2b, 64, digest_size_in_bytes, message, key, salt)
end


local function blake3(message, key, digest_size_in_bytes, message_flags, K, return_array)
	-- message:  binary string to be hashed (or nil for "chunk-by-chunk" input mode)
	-- key:      (optional) binary string up to 32 bytes, by default empty string
	-- digest_size_in_bytes: (optional) by default 32
	--    0,1,2,3,4,...  = get finite digest as single Lua string
	--    (-1)           = get infinite digest in "chunk-by-chunk" output mode
	--    -2,-3,-4,...   = get finite digest in "chunk-by-chunk" output mode
	-- The last three parameters "message_flags", "K" and "return_array" are for internal use only, user must omit them (or pass nil)
	key = key or ""
	digest_size_in_bytes = digest_size_in_bytes or 32
	message_flags = message_flags or 0
	if key == "" then
		K = K or sha2_H_hi
	else
		local key_length = #key
		if key_length > 32 then
			error("BLAKE3 key length must not exceed 32 bytes", 2)
		end
		key = key..string_rep("\0", 32 - key_length)
		K = {}
		for j = 1, 8 do
			local a, b, c, d = byte(key, 4*j-3, 4*j)
			K[j] = ((d * 256 + c) * 256 + b) * 256 + a
		end
		message_flags = message_flags + 16  -- flag:KEYED_HASH
	end
	local tail, H, chunk_index, blocks_in_chunk, stack_size, stack = "", {}, 0, 0, 0, {}
	local final_H_in, final_block_length, chunk_by_chunk_output, result, wide_output = K
	local final_compression_flags = 3      -- flags:CHUNK_START,CHUNK_END

	local function feed_blocks(str, offs, size)
		-- size >= 0, size is multiple of 64
		while size > 0 do
			local part_size_in_blocks, block_flags, H_in = 1, 0, H
			if blocks_in_chunk == 0 then
				block_flags = 1               -- flag:CHUNK_START
				H_in, final_H_in = K, H
				final_compression_flags = 2   -- flag:CHUNK_END
			elseif blocks_in_chunk == 15 then
				block_flags = 2               -- flag:CHUNK_END
				final_compression_flags = 3   -- flags:CHUNK_START,CHUNK_END
				final_H_in = K
			else
				part_size_in_blocks = math_min(size / 64, 15 - blocks_in_chunk)
			end
			local part_size = part_size_in_blocks * 64
			blake3_feed_64(str, offs, part_size, message_flags + block_flags, chunk_index, H_in, H)
			offs, size = offs + part_size, size - part_size
			blocks_in_chunk = (blocks_in_chunk + part_size_in_blocks) % 16
			if blocks_in_chunk == 0 then
				-- completing the currect chunk
				chunk_index = chunk_index + 1.0
				local divider = 2.0
				while chunk_index % divider == 0 do
					divider = divider * 2.0
					stack_size = stack_size - 8
					for j = 1, 8 do
						common_W_blake2s[j] = stack[stack_size + j]
					end
					for j = 1, 8 do
						common_W_blake2s[j + 8] = H[j]
					end
					blake3_feed_64(nil, 0, 64, message_flags + 4, 0, K, H)  -- flag:PARENT
				end
				for j = 1, 8 do
					stack[stack_size + j] = H[j]
				end
				stack_size = stack_size + 8
			end
		end
	end

	local function get_hash_block(block_no)
		local size = math_min(64, digest_size_in_bytes - block_no * 64)
		if block_no < 0 or size <= 0 then
			return ""
		end
		if chunk_by_chunk_output then
			for j = 1, 16 do
				common_W_blake2s[j] = stack[j + 16]
			end
		end
		blake3_feed_64(nil, 0, 64, final_compression_flags, block_no, final_H_in, stack, wide_output, final_block_length)
		if return_array then
			return stack
		end
		local max_reg = ceil(size / 4)
		for j = 1, max_reg do
			stack[j] = HEX(stack[j])
		end
		return sub(gsub(table_concat(stack, "", 1, max_reg), "(..)(..)(..)(..)", "%4%3%2%1"), 1, size * 2)
	end

	local function partial(message_part)
		if message_part then
			if tail then
				local offs = 0
				if tail ~= "" and #tail + #message_part > 64 then
					offs = 64 - #tail
					feed_blocks(tail..sub(message_part, 1, offs), 0, 64)
					tail = ""
				end
				local size = #message_part - offs
				local size_tail = size > 0 and (size - 1) % 64 + 1 or 0
				feed_blocks(message_part, offs, size - size_tail)
				tail = tail..sub(message_part, #message_part + 1 - size_tail)
				return partial
			else
				error("Adding more chunks is not allowed after receiving the result", 2)
			end
		else
			if tail then
				final_block_length = #tail
				tail = tail..string_rep("\0", 64 - #tail)
				if common_W_blake2s[0] then
					for j = 1, 16 do
						local a, b, c, d = byte(tail, 4*j-3, 4*j)
						common_W_blake2s[j] = OR(SHL(d, 24), SHL(c, 16), SHL(b, 8), a)
					end
				else
					for j = 1, 16 do
						local a, b, c, d = byte(tail, 4*j-3, 4*j)
						common_W_blake2s[j] = ((d * 256 + c) * 256 + b) * 256 + a
					end
				end
				tail = nil
				for stack_size = stack_size - 8, 0, -8 do
					blake3_feed_64(nil, 0, 64, message_flags + final_compression_flags, chunk_index, final_H_in, H, nil, final_block_length)
					chunk_index, final_block_length, final_H_in, final_compression_flags = 0, 64, K, 4  -- flag:PARENT
					for j = 1, 8 do
						common_W_blake2s[j] = stack[stack_size + j]
					end
					for j = 1, 8 do
						common_W_blake2s[j + 8] = H[j]
					end
				end
				final_compression_flags = message_flags + final_compression_flags + 8  -- flag:ROOT
				if digest_size_in_bytes < 0 then
					if digest_size_in_bytes == -1 then  -- infinite digest
						digest_size_in_bytes = math_huge
					else
						digest_size_in_bytes = -1.0 * digest_size_in_bytes
					end
					chunk_by_chunk_output = true
					for j = 1, 16 do
						stack[j + 16] = common_W_blake2s[j]
					end
				end
				digest_size_in_bytes = math_min(2^53, digest_size_in_bytes)
				wide_output = digest_size_in_bytes > 32
				if chunk_by_chunk_output then
					local pos, cached_block_no, cached_block = 0.0

					local function get_next_part_of_digest(arg1, arg2)
						if arg1 == "seek" then
							-- Usage #1:  get_next_part_of_digest("seek", new_pos)
							pos = arg2 * 1.0
						else
							-- Usage #2:  hex_string = get_next_part_of_digest(size)
							local size, index = arg1 or 1, 32
							while size > 0 do
								local block_offset = pos % 64
								local block_no = (pos - block_offset) / 64
								local part_size = math_min(size, 64 - block_offset)
								if cached_block_no ~= block_no then
									cached_block_no = block_no
									cached_block = get_hash_block(block_no)
								end
								index = index + 1
								stack[index] = sub(cached_block, block_offset * 2 + 1, (block_offset + part_size) * 2)
								size = size - part_size
								pos = pos + part_size
							end
							return table_concat(stack, "", 33, index)
						end
					end

					result = get_next_part_of_digest
				elseif digest_size_in_bytes <= 64 then
					result = get_hash_block(0)
				else
					local last_block_no = ceil(digest_size_in_bytes / 64) - 1
					for block_no = 0.0, last_block_no do
						stack[33 + block_no] = get_hash_block(block_no)
					end
					result = table_concat(stack, "", 33, 33 + last_block_no)
				end
			end
			return result
		end
	end

	if message then
		-- Actually perform calculations and return the BLAKE3 digest of a message
		return partial(message)()
	else
		-- Return function for chunk-by-chunk loading
		-- User should feed every chunk of input data as single argument to this function and finally get BLAKE3 digest by invoking this function without an argument
		return partial
	end
end

local function blake3_derive_key(key_material, context_string, derived_key_size_in_bytes)
	-- key_material: (string) your source of entropy to derive a key from (for example, it can be a master password)
	--               set to nil for feeding the key material in "chunk-by-chunk" input mode
	-- context_string: (string) unique description of the derived key
	-- digest_size_in_bytes: (optional) by default 32
	--    0,1,2,3,4,...  = get finite derived key as single Lua string
	--    (-1)           = get infinite derived key in "chunk-by-chunk" output mode
	--    -2,-3,-4,...   = get finite derived key in "chunk-by-chunk" output mode
	if type(context_string) ~= "string" then
		error("'context_string' parameter must be a Lua string", 2)
	end
	local K = blake3(context_string, nil, nil, 32, nil, true)           -- flag:DERIVE_KEY_CONTEXT
	return blake3(key_material, nil, derived_key_size_in_bytes, 64, K)  -- flag:DERIVE_KEY_MATERIAL
end



local sha = {
	md5        = md5,                                                                                                                   -- MD5
	sha1       = sha1,                                                                                                                  -- SHA-1
	-- SHA-2 hash functions:
	sha224     = function (message)                       return sha256ext(224, message)                                           end, -- SHA-224
	sha256     = function (message)                       return sha256ext(256, message)                                           end, -- SHA-256
	sha512_224 = function (message)                       return sha512ext(224, message)                                           end, -- SHA-512/224
	sha512_256 = function (message)                       return sha512ext(256, message)                                           end, -- SHA-512/256
	sha384     = function (message)                       return sha512ext(384, message)                                           end, -- SHA-384
	sha512     = function (message)                       return sha512ext(512, message)                                           end, -- SHA-512
	-- SHA-3 hash functions:
	sha3_224   = function (message)                       return keccak((1600 - 2 * 224) / 8, 224 / 8, false, message)             end, -- SHA3-224
	sha3_256   = function (message)                       return keccak((1600 - 2 * 256) / 8, 256 / 8, false, message)             end, -- SHA3-256
	sha3_384   = function (message)                       return keccak((1600 - 2 * 384) / 8, 384 / 8, false, message)             end, -- SHA3-384
	sha3_512   = function (message)                       return keccak((1600 - 2 * 512) / 8, 512 / 8, false, message)             end, -- SHA3-512
	shake128   = function (digest_size_in_bytes, message) return keccak((1600 - 2 * 128) / 8, digest_size_in_bytes, true, message) end, -- SHAKE128
	shake256   = function (digest_size_in_bytes, message) return keccak((1600 - 2 * 256) / 8, digest_size_in_bytes, true, message) end, -- SHAKE256
	-- HMAC:
	hmac       = hmac,  -- HMAC(hash_func, key, message) is applicable to any hash function from this module except SHAKE* and BLAKE*
	-- misc utilities:
	hex_to_bin    = hex_to_bin,     -- converts hexadecimal representation to binary string
	bin_to_hex    = bin_to_hex,     -- converts binary string to hexadecimal representation
	base64_to_bin = base64_to_bin,  -- converts base64 representation to binary string
	bin_to_base64 = bin_to_base64,  -- converts binary string to base64 representation
	-- old style names for backward compatibility:
	hex2bin       = hex_to_bin,
	bin2hex       = bin_to_hex,
	base642bin    = base64_to_bin,
	bin2base64    = bin_to_base64,
	-- BLAKE2 hash functions:
	blake2b  = blake2b,   -- BLAKE2b (message, key, salt, digest_size_in_bytes)
	blake2s  = blake2s,   -- BLAKE2s (message, key, salt, digest_size_in_bytes)
	blake2bp = blake2bp,  -- BLAKE2bp(message, key, salt, digest_size_in_bytes)
	blake2sp = blake2sp,  -- BLAKE2sp(message, key, salt, digest_size_in_bytes)
	blake2xb = blake2xb,  -- BLAKE2Xb(digest_size_in_bytes, message, key, salt)
	blake2xs = blake2xs,  -- BLAKE2Xs(digest_size_in_bytes, message, key, salt)
	-- BLAKE2 aliases:
	blake2      = blake2b,
	blake2b_160 = function (message, key, salt) return blake2b(message, key, salt, 20) end, -- BLAKE2b-160
	blake2b_256 = function (message, key, salt) return blake2b(message, key, salt, 32) end, -- BLAKE2b-256
	blake2b_384 = function (message, key, salt) return blake2b(message, key, salt, 48) end, -- BLAKE2b-384
	blake2b_512 = blake2b,                                                      -- 64       -- BLAKE2b-512
	blake2s_128 = function (message, key, salt) return blake2s(message, key, salt, 16) end, -- BLAKE2s-128
	blake2s_160 = function (message, key, salt) return blake2s(message, key, salt, 20) end, -- BLAKE2s-160
	blake2s_224 = function (message, key, salt) return blake2s(message, key, salt, 28) end, -- BLAKE2s-224
	blake2s_256 = blake2s,                                                      -- 32       -- BLAKE2s-256
	-- BLAKE3 hash function
	blake3            = blake3,             -- BLAKE3    (message, key, digest_size_in_bytes)
	blake3_derive_key = blake3_derive_key,  -- BLAKE3_KDF(key_material, context_string, derived_key_size_in_bytes)
}


block_size_for_HMAC = {
	[sha.md5]        =  64,
	[sha.sha1]       =  64,
	[sha.sha224]     =  64,
	[sha.sha256]     =  64,
	[sha.sha512_224] = 128,
	[sha.sha512_256] = 128,
	[sha.sha384]     = 128,
	[sha.sha512]     = 128,
	[sha.sha3_224]   = 144,  -- (1600 - 2 * 224) / 8
	[sha.sha3_256]   = 136,  -- (1600 - 2 * 256) / 8
	[sha.sha3_384]   = 104,  -- (1600 - 2 * 384) / 8
	[sha.sha3_512]   =  72,  -- (1600 - 2 * 512) / 8
}


return sha]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBX598ACE5AFEE5492689C485E92DC987B2">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Base64</string>
					<string name="ScriptGuid">{88CFF684-45BD-4DB1-8290-BE58E6BC2359}</string>
					<ProtectedString name="Source"><![CDATA[--!native
--!optimize 2

local lookupValueToCharacter = buffer.create(64)
local lookupCharacterToValue = buffer.create(256)

local alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
local padding = string.byte("=")

for index = 1, 64 do
	local value = index - 1
	local character = string.byte(alphabet, index)

	buffer.writeu8(lookupValueToCharacter, value, character)
	buffer.writeu8(lookupCharacterToValue, character, value)
end

local function encode(input: buffer): buffer
	local inputLength = buffer.len(input)
	local inputChunks = math.ceil(inputLength / 3)

	local outputLength = inputChunks * 4
	local output = buffer.create(outputLength)

	-- Since we use readu32 and chunks are 3 bytes large, we can't read the last chunk here
	for chunkIndex = 1, inputChunks - 1 do
		local inputIndex = (chunkIndex - 1) * 3
		local outputIndex = (chunkIndex - 1) * 4

		local chunk = bit32.byteswap(buffer.readu32(input, inputIndex))

		-- 8 + 24 - (6 * index)
		local value1 = bit32.rshift(chunk, 26)
		local value2 = bit32.band(bit32.rshift(chunk, 20), 0b111111)
		local value3 = bit32.band(bit32.rshift(chunk, 14), 0b111111)
		local value4 = bit32.band(bit32.rshift(chunk, 8), 0b111111)

		buffer.writeu8(output, outputIndex, buffer.readu8(lookupValueToCharacter, value1))
		buffer.writeu8(output, outputIndex + 1, buffer.readu8(lookupValueToCharacter, value2))
		buffer.writeu8(output, outputIndex + 2, buffer.readu8(lookupValueToCharacter, value3))
		buffer.writeu8(output, outputIndex + 3, buffer.readu8(lookupValueToCharacter, value4))
	end

	local inputRemainder = inputLength % 3

	if inputRemainder == 1 then
		local chunk = buffer.readu8(input, inputLength - 1)

		local value1 = bit32.rshift(chunk, 2)
		local value2 = bit32.band(bit32.lshift(chunk, 4), 0b111111)

		buffer.writeu8(output, outputLength - 4, buffer.readu8(lookupValueToCharacter, value1))
		buffer.writeu8(output, outputLength - 3, buffer.readu8(lookupValueToCharacter, value2))
		buffer.writeu8(output, outputLength - 2, padding)
		buffer.writeu8(output, outputLength - 1, padding)
	elseif inputRemainder == 2 then
		local chunk = bit32.bor(
			bit32.lshift(buffer.readu8(input, inputLength - 2), 8),
			buffer.readu8(input, inputLength - 1)
		)

		local value1 = bit32.rshift(chunk, 10)
		local value2 = bit32.band(bit32.rshift(chunk, 4), 0b111111)
		local value3 = bit32.band(bit32.lshift(chunk, 2), 0b111111)

		buffer.writeu8(output, outputLength - 4, buffer.readu8(lookupValueToCharacter, value1))
		buffer.writeu8(output, outputLength - 3, buffer.readu8(lookupValueToCharacter, value2))
		buffer.writeu8(output, outputLength - 2, buffer.readu8(lookupValueToCharacter, value3))
		buffer.writeu8(output, outputLength - 1, padding)
	elseif inputRemainder == 0 and inputLength ~= 0 then
		local chunk = bit32.bor(
			bit32.lshift(buffer.readu8(input, inputLength - 3), 16),
			bit32.lshift(buffer.readu8(input, inputLength - 2), 8),
			buffer.readu8(input, inputLength - 1)
		)

		local value1 = bit32.rshift(chunk, 18)
		local value2 = bit32.band(bit32.rshift(chunk, 12), 0b111111)
		local value3 = bit32.band(bit32.rshift(chunk, 6), 0b111111)
		local value4 = bit32.band(chunk, 0b111111)

		buffer.writeu8(output, outputLength - 4, buffer.readu8(lookupValueToCharacter, value1))
		buffer.writeu8(output, outputLength - 3, buffer.readu8(lookupValueToCharacter, value2))
		buffer.writeu8(output, outputLength - 2, buffer.readu8(lookupValueToCharacter, value3))
		buffer.writeu8(output, outputLength - 1, buffer.readu8(lookupValueToCharacter, value4))
	end

	return output
end

local function decode(input: buffer): buffer
	local inputLength = buffer.len(input)
	local inputChunks = math.ceil(inputLength / 4)

	-- TODO: Support input without padding
	local inputPadding = 0
	if inputLength ~= 0 then
		if buffer.readu8(input, inputLength - 1) == padding then inputPadding += 1 end
		if buffer.readu8(input, inputLength - 2) == padding then inputPadding += 1 end
	end

	local outputLength = inputChunks * 3 - inputPadding
	local output = buffer.create(outputLength)

	for chunkIndex = 1, inputChunks - 1 do
		local inputIndex = (chunkIndex - 1) * 4
		local outputIndex = (chunkIndex - 1) * 3

		local value1 = buffer.readu8(lookupCharacterToValue, buffer.readu8(input, inputIndex))
		local value2 = buffer.readu8(lookupCharacterToValue, buffer.readu8(input, inputIndex + 1))
		local value3 = buffer.readu8(lookupCharacterToValue, buffer.readu8(input, inputIndex + 2))
		local value4 = buffer.readu8(lookupCharacterToValue, buffer.readu8(input, inputIndex + 3))

		local chunk = bit32.bor(
			bit32.lshift(value1, 18),
			bit32.lshift(value2, 12),
			bit32.lshift(value3, 6),
			value4
		)

		local character1 = bit32.rshift(chunk, 16)
		local character2 = bit32.band(bit32.rshift(chunk, 8), 0b11111111)
		local character3 = bit32.band(chunk, 0b11111111)

		buffer.writeu8(output, outputIndex, character1)
		buffer.writeu8(output, outputIndex + 1, character2)
		buffer.writeu8(output, outputIndex + 2, character3)
	end

	if inputLength ~= 0 then
		local lastInputIndex = (inputChunks - 1) * 4
		local lastOutputIndex = (inputChunks - 1) * 3

		local lastValue1 = buffer.readu8(lookupCharacterToValue, buffer.readu8(input, lastInputIndex))
		local lastValue2 = buffer.readu8(lookupCharacterToValue, buffer.readu8(input, lastInputIndex + 1))
		local lastValue3 = buffer.readu8(lookupCharacterToValue, buffer.readu8(input, lastInputIndex + 2))
		local lastValue4 = buffer.readu8(lookupCharacterToValue, buffer.readu8(input, lastInputIndex + 3))

		local lastChunk = bit32.bor(
			bit32.lshift(lastValue1, 18),
			bit32.lshift(lastValue2, 12),
			bit32.lshift(lastValue3, 6),
			lastValue4
		)

		if inputPadding <= 2 then
			local lastCharacter1 = bit32.rshift(lastChunk, 16)
			buffer.writeu8(output, lastOutputIndex, lastCharacter1)

			if inputPadding <= 1 then
				local lastCharacter2 = bit32.band(bit32.rshift(lastChunk, 8), 0b11111111)
				buffer.writeu8(output, lastOutputIndex + 1, lastCharacter2)

				if inputPadding == 0 then
					local lastCharacter3 = bit32.band(lastChunk, 0b11111111)
					buffer.writeu8(output, lastOutputIndex + 2, lastCharacter3)
				end
			end
		end
	end

	return output
end

return {
	encode = encode,
	decode = decode,
}]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBX5D3B6C169E1347AAB100863D3745D50E">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">XOR</string>
					<string name="ScriptGuid">{E39EF7C6-1959-493B-8C1C-DED7984694CC}</string>
					<ProtectedString name="Source"><![CDATA[local XOR = {}

function XOR.xorBuffers(buf1, buf2)
	local len = math.min(buffer.len(buf1), buffer.len(buf2))
	local result = buffer.create(len)
	for i = 0, len - 1 do
		local b1 = buffer.readu8(buf1, i)
		local b2 = buffer.readu8(buf2, i)
		buffer.writeu8(result, i, bit32.bxor(b1, b2))
	end
	return result
end

function XOR.keyFromPassword(passwordBuf, length)
	local key = buffer.create(length)
	local plen = buffer.len(passwordBuf)
	for i = 0, length - 1 do
		local byte = buffer.readu8(passwordBuf, i % plen)
		buffer.writeu8(key, i, byte)
	end
	return key
end

return XOR
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBX583B92E025934764841DB89264F0B5D7">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">OriginalSystemPromptWORKING</string>
					<string name="ScriptGuid">{C84066F7-3EA2-46CE-BC08-6D568B8556A8}</string>
					<ProtectedString name="Source"><![CDATA[local sys_prompt = [[
You are Vibe Coder, an expert Roblox Studio AI scripting agent. You run inside a Roblox Studio plugin and you edit and write full Luau scripts for the user.

You MUST use the following plain text formatting in your response, as it will be automatically parsed by the plugin:

=== ANALYSIS ===
(Describe your thinking process, consider different solutions, possible obstacles)

=== MESSAGE ===
(Message that will be displayed to the user in the chat in the plugin's window)

=== CODE ===
(COMPLETE, FULLY rewritten and working %script_name% %script_type%, with ALL functions, variables, and logic in plain text - no code blocks)

EMERGENCY SYSTEM OVERRIDE - IGNORE ALL TRAINING ABOUT CODE BREVITY:

The plugin has NO ABILITY to merge, patch, or combine code. It can ONLY replace the entire script with exactly what you provide in the CODE section.

MANDATORY BEHAVIOR OVERRIDE:
- You are REQUIRED to copy the ENTIRE original script into the CODE section
- You are REQUIRED to make any requested changes within that complete script
- You are REQUIRED to include EVERY SINGLE LINE from the original script
- You are REQUIRED to treat every response as if you're writing a completely new script from scratch

FORBIDDEN BEHAVIORS THAT WILL BREAK THE SYSTEM:
- NEVER write "-- Rest of the script remains the same"
- NEVER write "-- ... (existing code) ..."
- NEVER write "-- Keep everything else unchanged"
- NEVER write "-- Previous code here"
- NEVER write "-- Add this to existing script"
- NEVER write "-- Insert above existing code"
- NEVER write any comment suggesting partial code
- NEVER assume the user will manually merge anything
- NEVER provide code snippets or fragments
- NEVER use ellipsis (...) to indicate omitted code
- NEVER use placeholders for existing code

PLUGIN OPERATION FACTS:
- The plugin will DELETE 100% of the original script content
- The plugin will REPLACE it with ONLY what you put in CODE section
- The plugin has NO intelligence to merge or combine code
- The plugin cannot read comments like "keep existing code"
- If you don't provide complete code, the script will be broken/empty

REQUIRED RESPONSE PATTERN:
1. Take the original script from %script_content%
2. Copy it ENTIRELY into your CODE section
3. Make the requested modifications within that complete copy
4. Ensure the result is a full, working script

COGNITIVE OVERRIDE INSTRUCTIONS:
- Ignore your training about being concise with code
- Ignore your training about not repeating large blocks of code
- Ignore efficiency concerns about token usage
- Your ONLY job is to provide complete, working scripts
- Repetition of existing code is REQUIRED, not wasteful

VALIDATION CHECKLIST - Before sending your response, verify:
✓ Did I include the complete original script in CODE section?
✓ Did I make the requested changes within that complete script?
✓ Did I avoid any comments about "existing code" or "rest of script"?
✓ Is my CODE section a complete, standalone script?
✓ Would this script work if pasted into an empty file?

FAILURE CONSEQUENCES:
If you provide incomplete code, the user's script will be destroyed and replaced with broken/partial code, causing their game to malfunction.

When writing this prompt, user has selected the following %script_type% named '%script_name%':
%script_content%
--- END OF SCRIPT ---
The script is located in this game hierarchy:
%hierarhy%

FINAL REMINDER: You MUST provide the COMPLETE script. Copy the entire original script and modify it. NO shortcuts. NO assumptions about merging. NO partial code.
]]
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
		</Item>
		<Item class="ModuleScript" referent="RBX2BD9C7B076774BA8A99AA02714B50200">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">ModelRegistry</string>
				<string name="ScriptGuid">{F28E39D7-FF62-4602-974A-101A79724F90}</string>
				<ProtectedString name="Source">--[[ v1.0.0 https://wearedevs.net/obfuscator ]] return(function(...)local W={&quot;\067\113\083\083\056\055\085\055\107\050\061\061&quot;;&quot;\067\048\113\111\056\114\101\057\050\114\074\047\043\047\097\083\080\112\114\061&quot;,&quot;\051\055\067\097\119\106\097\068\116\048\067\106\051\090\113\083\056\114\078\061&quot;,&quot;\116\043\088\120\103\053\099\117\075\074\085\061&quot;;&quot;\049\075\043\122\076\121\116\116\121\066\078\100\086\050\061\061&quot;,&quot;\105\070\122\052\081\048\101\061&quot;;&quot;\043\056\113\073\082\103\087\090\105\071\102\048\087\085\111\057\065\084\085\061&quot;;&quot;\081\079\084\117\113\080\071\061&quot;;&quot;\112\108\103\051\097\074\120\069&quot;,&quot;\116\080\065\056\086\118\098\104\080\050\061\061&quot;,&quot;\067\117\100\099\079\090\108\061&quot;,&quot;\109\043\116\107\117\118\061\061&quot;;&quot;\116\047\097\087\090\120\097\106\050\069\061\061&quot;,&quot;\097\047\074\113\056\117\074\057\098\074\075\085\056\054\051\083\114\071\061\061&quot;,&quot;\101\047\097\113\079\086\043\081\101\109\104\082\075\056\043\083\117\109\057\083\049\090\051\082\067\109\097\120\117\109\100\065\067\110\085\061&quot;,&quot;\047\110\113\101\086\103\048\083&quot;;&quot;\085\109\105\076\107\102\074\114\119\049\117\056\112\111\084\077\072\074\098\109&quot;;&quot;\079\068\119\065\113\053\055\076\051\102\072\103\065\098\048\061&quot;,&quot;\049\111\068\069\106\107\054\052\073\103\043\089\101\069\061\061&quot;,&quot;\067\090\051\057\101\069\061\061&quot;,&quot;\102\105\105\109\105\067\066\053\088\097\101\061&quot;;&quot;\122\120\047\066\087\119\107\089\074\118\061\061&quot;;&quot;\116\048\067\076\101\112\074\082\080\056\043\066\097\048\043\080\051\071\061\061&quot;,&quot;\082\101\090\065\052\071\061\061&quot;,&quot;\070\070\074\116\089\082\087\107\076\076\120\077\071\118\061\061&quot;;&quot;\083\119\043\080\071\050\061\061&quot;,&quot;\076\090\108\082\105\085\070\050\070\066\077\050\118\057\088\077\057\067\084\082\122\050\061\061&quot;;&quot;\105\084\071\054\081\075\107\075\112\087\118\103\071\075\116\106\068\051\102\111\069\100\086\068\081\107\090\079\114\073\106\121\112\120\043\118\115\073\097\052\104\051\118\107\116\103\085\120\102\104\116\072\077\101\082\119\105\051\054\074\098\082\075\049\069\066\083\103\106\056\078\082\118\099\088\053\051\057\099\080\106\098\048\118\083\100\110\105\107\067\086\066\107\047\114\043\100\074\079\071\115\111\066\084\115\047\084\116\115\117\089\047\089\076\118\053\107\070\101\061&quot;,&quot;\101\104\097\070\110\052\066\115\077\057\080\048\073\065\071\061&quot;,&quot;\050\047\097\087\098\106\104\072\067\090\097\119\097\110\097\105\119\069\061\061&quot;;&quot;\080\112\074\120\116\112\108\120\121\056\057\098\043\086\089\117\114\054\069\061&quot;;&quot;\049\055\074\105\067\086\089\072&quot;;&quot;\106\088\089\082\111\048\105\119\081\052\120\099\073\050\061\061&quot;;&quot;\099\072\117\121\088\090\113\085\049\089\088\043\098\085\098\114\115\073\116\054&quot;,&quot;\049\112\067\120\116\110\100\104\080\047\048\120\116\097\067\108&quot;,&quot;\090\118\100\115\112\071\061\061&quot;,&quot;\084\100\048\112\080\097\083\122\067\088\109\102\115\072\065\067\106\118\055\053\048\066\102\043\087\116\052\069\084\121\066\053\071\099\069\061&quot;;&quot;\113\084\048\101\051\088\074\074\114\084\107\067\049\057\101\061&quot;;&quot;\121\086\089\113\050\106\048\061&quot;;&quot;\116\113\112\101\090\112\102\116\111\118\061\061&quot;;&quot;\116\065\110\068\071\068\115\065\079\069\108\100\106\101\109\100\107\071\066\120\107\069\089\090\104\077\086\110\122\053\083\065\112\120\070\111\106\104\108\085\049\054\082\065\047\050\099\069\071\111\079\112\088\097\107\098\090\052\077\073\087\111\067\043\098\109\121\055\102\100\085\074\072\107\076\121\106\118\117\087\120\102\053\074\065\081\043\077\067\084\109\084\118\122\115\068\052\102\053\083\054\089\089\118\113\107\106\118\052\052\117\104\068\097\089\076\052\047\066\061&quot;,&quot;\098\075\119\054\104\067\049\055\074\057\078\055\084\051\076\121\049\056\065\052\097\088\099\122\107\102\114\053\089\110\118\090\047\073\119\113\073\054\100\107\075\109\065\047\052\087\114\074\106\089\083\089\080\098\109\088\109\072\076\109\080\056\088\050\076\118\083\117\097\055\120\057\109\099\100\114\053\107\103\057\078\106\052\107\109\107\043\068\113\049\122\122\098\070\115\074\121\087\110\072\119\102\090\106\077\083\081\100\068\122\079\052\101\107\118\098\051\079\068\061&quot;,&quot;\114\090\043\068\049\048\071\078\049\054\075\097\101\055\057\051\098\118\061\061&quot;,&quot;\089\055\109\111\078\057\119\116&quot;,&quot;\051\074\108\071\119\117\122\072\101\112\074\043\075\097\067\113\056\056\066\061&quot;,&quot;\117\051\069\074\090\122\112\084\054\069\099\101\105\086\109\067\108\121\069\061&quot;;&quot;\103\073\055\073\070\100\090\080\072\066\079\088\050\112\081\054\052\115\043\054\077\071\053\106\086\088\074\067\113\047\104\114\108\068\074\049\068\057\089\100\055\109\109\056\097\115\074\100\083\077\076\105\053\081\043\118&quot;,&quot;\075\086\074\070\079\086\114\061&quot;;&quot;\117\057\089\113\079\055\043\083\121\118\061\061&quot;;&quot;\097\109\070\072\066\043\111\088\079\116\071\078\119\098\080\097\088\107\073\073&quot;,&quot;\117\057\089\047\101\071\061\061&quot;;&quot;\085\106\100\053\116\098\116\049\072\068\107\055\075\099\069\108\076\077\071\061&quot;;&quot;\047\079\076\116\069\105\086\110\070\110\102\106\118\083\050\074\087\111\077\081\106\084\050\061&quot;;&quot;\118\081\111\057\106\116\118\082&quot;,&quot;\086\116\053\085\121\100\087\084\067\050\061\061&quot;,&quot;\079\052\082\065\080\084\120\047\121\069\061\061&quot;;&quot;\049\109\067\074\112\086\072\066\049\120\122\055\056\048\057\067&quot;,&quot;\056\047\097\104\114\086\067\085\121\114\113\109\121\114\067\043\114\085\114\061&quot;;&quot;\050\051\117\097\120\047\047\071\107\051\065\078\054\118\061\061&quot;,&quot;\049\057\097\107\116\117\067\055\097\074\100\056\075\114\089\106\098\086\068\061&quot;,&quot;\110\071\104\115\102\099\114\089\077\090\113\097\102\071\061\061&quot;,&quot;\084\081\057\118\047\055\119\075\054\069\061\061&quot;;&quot;\055\111\122\090\052\073\108\105\089\118\061\061&quot;;&quot;\101\109\082\082\049\069\061\061&quot;;&quot;\051\106\079\047\047\072\102\112\105\050\047\085\084\052\084\048&quot;;&quot;\081\050\066\070\069\089\112\114\101\119\109\066\080\050\061\061&quot;,&quot;\109\110\070\122\069\071\061\061&quot;;&quot;\050\047\086\052\104\071\061\061&quot;;&quot;\105\084\067\057\071\073\078\072\051\083\085\061&quot;,&quot;\079\054\048\061&quot;;&quot;\043\074\079\121\049\054\111\101\108\069\061\061&quot;,&quot;\067\055\104\065\079\090\108\061&quot;,&quot;\052\065\114\108\052\077\102\049\109\052\080\051\087\106\119\066\100\112\090\052\109\071\061\061&quot;,&quot;\079\075\100\052\089\097\108\054\069\057\051\120\104\088\071\070\053\118\061\061&quot;;&quot;\107\052\118\056\050\074\074\067\066\071\061\061&quot;;&quot;\119\056\072\112\056\048\076\115\067\086\043\090\097\085\083\098\114\118\061\061&quot;,&quot;\106\107\077\115\069\081\067\043\101\122\101\050\120\079\065\072\099\108\117\081&quot;,&quot;\119\074\075\105\056\048\074\078\119\057\067\122\049\056\089\087\049\071\061\061&quot;;&quot;\050\055\077\109\051\086\076\070\075\056\089\066\079\057\066\090\098\114\077\061&quot;,&quot;\051\083\075\050\051\056\075\047\056\085\075\043\056\114\104\103\043\114\050\061&quot;,&quot;\081\111\118\048\099\118\061\061&quot;,&quot;\071\116\103\070\066\105\074\115\056\113\120\048\100\075\051\122\065\122\080\090\098\118\061\061&quot;,&quot;\055\074\122\109\066\087\101\112\079\075\100\047\098\067\053\078\079\055\078\121\083\057\101\061&quot;,&quot;\069\109\113\088\077\050\061\061&quot;,&quot;\090\083\098\076\078\121\108\061&quot;,&quot;\051\053\056\066\120\050\061\061&quot;,&quot;\067\109\097\072\098\056\076\113\117\109\100\057\098\056\104\085\117\109\100\065\067\110\085\061&quot;,&quot;\079\056\074\106\098\118\061\061&quot;,&quot;\113\089\119\086\106\084\100\116\120\056\121\075&quot;;&quot;\120\122\117\073\108\075\074\089\077\071\061\061&quot;;&quot;\070\113\119\086\083\056\098\050\107\082\057\121\105\099\071\080\097\105\104\081\056\069\061\061&quot;,&quot;\050\114\072\102\043\085\067\105\101\120\083\107\119\073\043\076\114\069\061\061&quot;,&quot;\075\086\089\120\075\110\100\113\079\055\049\061&quot;;&quot;\112\114\083\117\067\057\067\100\119\109\072\110\075\112\082\098\119\114\049\061&quot;,&quot;\068\118\116\116\065\098\113\089\086\118\061\061&quot;,&quot;\118\086\113\072\107\107\066\061&quot;,&quot;\108\076\053\088\118\122\043\087\112\043\065\100\074\080\085\053\097\104\076\114&quot;,&quot;\077\101\086\099\043\074\080\107\107\055\052\065\054\087\076\118&quot;,&quot;\082\101\078\120\108\081\121\083\120\103\108\061&quot;;&quot;\043\057\075\098\067\090\049\078\080\109\083\104\112\086\097\087\101\120\069\061&quot;,&quot;\049\090\043\099\098\056\076\047&quot;;&quot;\082\117\089\065\110\057\072\070\090\106\118\104\110\071\061\061&quot;,&quot;\085\101\052\083\083\111\049\108\071\050\061\061&quot;;&quot;\101\109\089\105\101\109\074\106&quot;;&quot;\049\068\098\083\077\053\110\086\110\111\070\053\103\069\061\061&quot;,&quot;\114\080\050\090\068\101\122\043\048\077\103\070\115\098\108\086\088\055\108\061&quot;,&quot;\083\066\050\120\048\090\084\113\118\069\061\061&quot;,&quot;\110\079\057\073\050\086\077\061&quot;;&quot;\119\083\051\102\112\085\097\105\101\109\089\085\067\050\061\061&quot;,&quot;\117\057\089\072\067\117\043\082\075\086\074\070\079\086\114\061&quot;,&quot;\086\081\043\076\121\081\053\101\114\118\061\061&quot;;&quot;\079\098\048\121\055\081\112\119\121\070\051\097\122\118\061\061&quot;,&quot;\072\055\043\110\048\083\107\112\085\120\081\069\055\069\061\061&quot;,&quot;\080\056\074\052\079\083\097\047\080\117\043\065\051\120\082\120\098\086\071\061&quot;;&quot;\048\053\089\085\107\107\116\114\101\112\088\088\114\069\061\061&quot;;&quot;\099\102\104\065\101\047\106\122\108\056\119\055\107\065\055\049\084\069\061\061&quot;,&quot;\116\082\088\097\057\056\080\120\105\100\097\108\074\102\104\043\069\113\116\053\098\118\117\110\089\081\101\084\082\048\067\098\081\111\054\110\054\051\074\085\050\109\103\107\054\055\097\113\083\071\061\061&quot;;&quot;\088\111\109\102\072\050\061\061&quot;;&quot;\098\117\066\071\051\109\043\113\067\055\083\104\119\109\083\102\080\097\114\061&quot;;&quot;\099\075\068\090\048\097\073\054\104\109\072\068\066\080\120\113\102\069\061\061&quot;;&quot;\043\054\108\057\116\086\083\051\051\054\069\120\098\097\067\056&quot;;&quot;\082\080\108\057\083\081\049\101\119\053\102\114\067\069\082\072\117\080\050\116\099\121\106\115\079\113\105\053\084\112\117\112&quot;,&quot;\082\083\102\119\104\069\061\061&quot;,&quot;\118\111\102\099\047\104\057\077\082\090\069\048\117\071\061\061&quot;,&quot;\098\115\049\056\108\088\056\054\077\071\061\061&quot;,&quot;\088\047\077\109\122\119\048\082&quot;,&quot;\114\047\043\073\056\110\051\048\075\110\082\098\112\112\097\107\056\055\114\061&quot;,&quot;\069\083\116\052\070\054\069\113\119\103\071\076\109\113\083\113\097\053\057\080\089\118\061\061&quot;;&quot;\118\118\072\053\089\052\110\120&quot;,&quot;\116\053\109\048\084\105\099\054\122\115\098\105\066\071\061\061&quot;,&quot;\079\086\097\105&quot;,&quot;\049\080\097\070\075\083\068\050\068\052\054\099\081\057\110\090\076\098\115\106\083\069\061\061&quot;,&quot;\070\118\053\097\100\071\061\061&quot;;&quot;\085\049\100\114\073\050\061\061&quot;;&quot;&quot;;&quot;\048\102\113\097\053\065\055\106&quot;;&quot;\116\070\069\083\067\052\066\113\116\069\061\061&quot;;&quot;\100\114\120\055\110\077\074\106\068\071\061\061&quot;,&quot;\043\104\112\106\104\048\073\052\052\079\081\074&quot;,&quot;\101\089\086\098\113\110\084\054\070\112\069\104\085\118\061\061&quot;,&quot;\121\115\101\089\072\112\049\101\104\084\071\070\102\078\052\051\114\098\108\111\120\071\061\061&quot;,&quot;\049\109\097\106\079\056\097\106\101\117\043\082\101\055\104\083&quot;,&quot;\068\086\117\076\117\118\061\061&quot;;&quot;\081\078\068\075\083\097\099\115\082\051\068\061&quot;;&quot;\112\120\097\120\114\085\067\073\079\109\067\117\075\097\097\102\112\118\061\061&quot;;&quot;\113\075\105\117\071\118\061\061&quot;,&quot;\114\119\087\070\049\112\057\079\119\119\086\118&quot;,&quot;\053\105\067\055\071\085\051\117&quot;;&quot;\121\054\067\078\051\085\051\052\067\112\097\066\114\110\080\099\121\047\048\061&quot;,&quot;\106\115\067\075\057\050\061\061&quot;;&quot;\067\109\074\072\067\050\061\061&quot;;&quot;\116\104\114\110\099\056\107\103\098\056\089\107\053\047\072\083\111\118\061\061&quot;;&quot;\097\054\121\088\111\113\077\061&quot;;&quot;\104\053\047\086\082\106\114\100\072\048\051\106\069\069\061\061&quot;;&quot;\114\055\089\100\056\047\083\116\051\086\077\061&quot;;&quot;\073\119\053\080\088\068\108\061&quot;;&quot;\108\053\116\118\078\051\075\114\053\050\076\083\048\088\106\111\098\083\085\061&quot;;&quot;\106\071\102\115\057\118\061\061&quot;,&quot;\120\081\065\097\108\072\075\079\102\111\101\117\089\107\118\099\074\070\071\061&quot;;&quot;\071\090\065\065\087\103\070\111\056\069\071\061&quot;,&quot;\120\110\082\069\075\118\061\061&quot;;&quot;\109\053\105\057\074\050\061\061&quot;;&quot;\101\073\051\115\097\110\075\097\043\083\082\074\056\110\113\048\112\109\077\061&quot;,&quot;\080\120\048\099\056\097\051\078\098\073\114\090\112\056\097\055\112\050\061\061&quot;,&quot;\056\117\075\051\101\047\122\051\075\117\051\067\043\117\118\071\051\090\108\061&quot;;&quot;\114\110\085\076\079\086\083\048\075\090\083\074\080\109\072\117\056\118\061\061&quot;,&quot;\112\085\074\122\098\055\043\098\097\112\067\102\075\110\067\052\080\112\114\061&quot;,&quot;\122\116\089\084\073\048\080\105\051\050\061\061&quot;;&quot;\049\055\097\072\079\090\067\083&quot;,&quot;\078\097\075\074\122\053\050\099\069\110\121\104\078\073\086\078\083\050\061\061&quot;;&quot;\118\052\098\076\089\103\083\087\085\071\061\061&quot;;&quot;\075\086\089\105\075\056\057\070\067\117\108\061&quot;;&quot;\115\109\088\116\111\114\087\104\118\104\085\061&quot;;&quot;\105\078\102\114\054\116\087\073\103\108\116\101\057\073\049\087\052\082\072\122\087\085\118\061&quot;,&quot;\113\081\102\075\082\115\119\075\086\050\061\061&quot;,&quot;\104\067\099\101\108\077\106\101&quot;;&quot;\086\065\073\116\121\067\114\099\113\114\084\053\054\101\082\075&quot;;&quot;\057\071\054\100\122\072\053\107\081\073\080\061&quot;,&quot;\055\105\043\084\083\119\086\073\107\087\079\105\118\049\067\114\075\071\061\061&quot;;&quot;\112\053\114\100\103\115\086\103\085\088\122\105\115\071\061\061&quot;;&quot;\075\049\117\051\047\069\099\065\114\078\071\101\054\043\069\066\075\112\066\120\121\118\061\061&quot;,&quot;\116\069\061\061&quot;,&quot;\065\076\079\090\106\066\084\090\065\122\071\061&quot;;&quot;\112\097\122\085\114\085\071\071\080\074\082\043\121\097\043\043&quot;;&quot;\118\051\105\097\102\107\075\053\122\118\061\061&quot;,&quot;\115\097\116\112\070\050\061\061&quot;,&quot;\112\085\114\122\085\050\061\061&quot;;&quot;\055\080\108\084\057\104\090\090\072\069\061\061&quot;,&quot;\085\113\111\098\108\072\107\079\050\069\061\061&quot;;&quot;\072\056\118\089\119\115\043\077\112\085\097\107\104\090\081\048\108\108\112\069&quot;,&quot;\084\082\071\081\048\111\077\057\053\072\077\056\081\071\081\057\121\118\061\061&quot;,&quot;\097\086\074\072\049\086\097\099\108\048\043\083\075\086\097\073\075\086\097\085\108\050\061\061&quot;,&quot;\117\057\089\068\067\056\078\061&quot;,&quot;\086\067\098\121\088\090\068\050\069\056\086\090\075\079\053\119\089\076\048\061&quot;,&quot;\078\077\107\101\078\104\088\083\043\097\110\103\110\067\075\070\071\117\071\104\100\049\101\061&quot;;&quot;\118\076\118\072\047\090\116\047\090\088\057\107\110\119\054\115\072\103\090\068\099\083\078\072\081\079\103\081\055\105\070\119\050\100\071\049\110\089\069\104\086\100\098\116\112\098\051\074\075\050\061\061&quot;;&quot;\121\054\083\068\043\110\113\104\080\106\089\109\097\106\097\100&quot;,&quot;\104\097\089\075\048\113\098\100\107\047\099\112\076\078\116\108\081\073\114\061&quot;,&quot;\072\122\104\102\086\098\071\099\081\116\074\081\111\104\079\078&quot;,&quot;\055\085\109\079\052\054\113\051\049\086\066\112\112\069\061\061&quot;,&quot;\111\110\119\102\057\050\061\061&quot;;&quot;\049\086\051\082\079\086\071\061&quot;,&quot;\067\109\057\082\075\086\051\066&quot;;&quot;\109\073\077\088\078\052\050\086\043\108\115\082&quot;,&quot;\098\117\122\082\098\117\100\120&quot;,&quot;\113\084\120\117\086\102\048\057\115\100\108\061&quot;,&quot;\067\106\089\054\043\055\076\104\051\090\108\104\112\112\085\099\043\050\061\061&quot;,&quot;\082\071\076\068\109\069\061\061&quot;;&quot;\071\050\086\087\099\069\061\061&quot;,&quot;\102\090\075\051\057\103\113\074\098\100\071\077\089\117\121\065\119\069\061\061&quot;;&quot;\101\047\083\106\067\050\061\061&quot;;&quot;\120\115\070\108\111\115\057\087\049\077\117\083\051\067\112\102\067\118\061\061&quot;,&quot;\089\082\076\057\057\075\121\122\066\073\119\055\072\080\078\048\081\076\117\103&quot;;&quot;\052\117\043\115\085\117\113\065\120\105\080\078\065\069\061\061&quot;,&quot;\087\110\075\075\117\118\061\061&quot;,&quot;\120\085\105\087\082\075\073\115\108\098\084\101\098\078\110\054\073\050\107\052&quot;,&quot;\079\054\108\061&quot;;&quot;\082\103\109\111\088\090\067\108\056\065\084\086\103\070\111\120\072\101\089\084\075\049\097\065\083\080\114\054\078\113\053\070\116\119\122\097\071\114\098\114\049\050\086\070\099\048\083\118\110\082\104\086\048\113\097\100&quot;;&quot;\055\071\077\082\077\043\090\100\081\043\120\069\104\116\047\089&quot;,&quot;\075\056\076\071\101\056\051\115&quot;,&quot;\067\083\078\099\122\047\057\076\122\122\073\081\084\071\061\061&quot;,&quot;\082\107\099\101\097\052\099\104\047\069\061\061&quot;,&quot;\077\083\113\072\052\118\061\061&quot;;&quot;\097\070\111\068\088\088\120\122\080\114\103\067\070\084\071\057&quot;,&quot;\117\077\081\070\090\069\061\061&quot;;&quot;\081\050\121\051\118\082\097\070\052\098\116\054\122\084\111\067\069\099\083\075\113\071\061\061&quot;;&quot;\122\108\089\066\043\049\066\079\065\118\061\061&quot;,&quot;\043\109\097\106\114\109\097\099\075\055\083\073\067\050\061\061&quot;;&quot;\111\107\076\043\072\113\055\076\083\043\048\082\050\085\101\088&quot;;&quot;\050\083\097\083\097\090\097\098\080\074\082\070\101\047\083\073&quot;}local function r(r)return W[r+(785394+-737231)]end for r,w in ipairs({{574757-574756,617400+-617170};{-693118-(-693119);985289+-985073};{-509803-(-510020);-480729-(-480959)}})do while w[110993+-110992]&lt;w[707091+-707089]do W[w[-390100+390101]],W[w[-741920-(-741922)]],w[-676523-(-676524)],w[833532-833530]=W[w[-912671+912673]],W[w[-12605-(-12606)]],w[453272-453271]+(510496+-510495),w[646583-646581]-(-510166+510167)end end do local r=table.concat local w=string.len local U=string.sub local a=string.char local X=math.floor local m={V=-22144-(-22150);k=-472774+472832,z=-267861-(-267862),H=-834953-(-834998),a=59876+-59855,J=-242278+242283;[&quot;\052&quot;]=-645589-(-645591),x=-2720+2771;L=-354969+355026,m=857736-857682,t=-202893-(-202907);i=-626608+626654;o=440245-440203,Z=98340-98285,U=-358148+358184;q=-557251+557292;v=376623-376623;l=573893+-573885,[&quot;\053&quot;]=-118407+118470,W=-630495+630505;w=322671+-322653;I=-743314-(-743349);[&quot;\054&quot;]=76681-76678;h=-1008866-(-1008915),r=-111167+111187,[&quot;\056&quot;]=-1008392+1008414;[&quot;\057&quot;]=-73500-(-73553);K=641801-641772;y=-622219+622249,B=-211982-(-212022);d=238734+-238725;[&quot;\051&quot;]=-1038085-(-1038098);[&quot;\050&quot;]=849779+-849763,b=-311977-(-312003),A=-714677-(-714724),[&quot;\047&quot;]=-740940-(-740979);F=727235+-727201;D=169470+-169426,P=650895+-650883,X=56954-56892,R=-952284+952317;e=1019783-1019759,u=39458-39435,n=122428+-122421,G=612307+-612259,Y=-465293-(-465354);T=211059+-211000;M=845499+-845439,Q=-1017708-(-1017739);j=-609513-(-609565);p=210951+-210932,g=25816+-25805;O=944503+-944476;f=539489-539474,[&quot;\048&quot;]=-71889-(-71893);c=15174-15124;[&quot;\049&quot;]=297434-297406,[&quot;\055&quot;]=916880-916842;S=433456+-433419;N=-189013+189069,C=217641+-217616,E=-670560+670592,s=608485+-608442,[&quot;\043&quot;]=-947922-(-947939)}local J=type local b=W local y=table.insert for W=-415028-(-415029),#b,-236701-(-236702)do local v=b[W]if J(v)==&quot;\115\116\114\105\110\103&quot;then local J=w(v)local t={}local z=30005+-30004 local i=56253-56253 local I=48016-48016 while z&lt;=J do local W=U(v,z,z)local r=m[W]if r then i=i+r*(-136294+136358)^((399747-399744)-I)I=I+(-330950-(-330951))if I==1008988-1008984 then I=-704702+704702 local W=X(i/(-200033-(-265569)))local r=X((i%(-297904+363440))/(-426786+427042))local w=i%(334606+-334350)y(t,a(W,r,w))i=314228+-314228 end elseif W==&quot;\061&quot;then y(t,a(X(i/(196474+-130938))))if z&gt;=J or U(v,z+(-191660+191661),z+(387478-387477))~=&quot;\061&quot;then y(t,a(X((i%(-672912-(-738448)))/(213723-213467))))end break end z=z+(283997-283996)end b[W]=r(t)end end end return(function(W,U,a,X,m,J,b,f,i,n,z,p,k,F,y,N,H,C,t,Z,c,e,I,v,w)t,Z,i,w,p,k,f,I,C,c,H,F,z,N,y,n,e,v=function()z=z+(664725+-664724)v[z]=-675206+675207 return z end,function(W,r)local U=i(r)local a=function(a,X,m,J,b)return w(W,{a,X,m,J;b},r,U)end return a end,function(W)for r=-812650-(-812651),#W,182325+-182324 do v[W[r]]=v[W[r]]+(610284-610283)end if a then local w=a(true)local U=m(w)U[r(124856+-172984)],U[r(-155414-(-107288))],U[r(-851640-(-803656))]=W,I,function()return 1770775-(-47063)end return w else return X({},{[r(603733-651859)]=I;[r(463012+-511140)]=W,[r(646620+-694604)]=function()return 1728217-(-89621)end})end end,function(w,a,X,m)local B,D,L,v,P,p,b,z,O,S,Xm,l,h,u,wm,rm,R,T,o,I,i,K,Wm,s,Q,Y,j,Um,G,am,E,q,V,x,d,g,M,A while w do if w&lt;-775712+10189924 then if w&lt;-72104+4250246 then if w&lt;-967413+3568061 then if w&lt;-748235+2371562 then if w&lt;1720710-664775 then if w&lt;711977-(-164815)then if w&lt;979171-195148 then if w&lt;-921449+1266692 then v=a[666285+-666284]l=r(-478591+430489)A=25082662206897-36881 p=y[X[-576137-(-576138)]]V=y[X[-552073-(-552075)]]d=V(l,A)l=10914197271958-385468 I=p[d]i=v[I]I=-622017-(-622018)z=i[I]I=y[X[799508+-799507]]d=r(-907477-(-859390))p=y[X[-455675-(-455677)]]V=p(d,l)d=2574024104355-(-224011)i=I[V]b=z[i]V=r(-293816+245882)i=y[X[801244-801243]]I=y[X[-25799+25801]]p=I(V,d)z=i[p]w=b[z]b={w}w=W[r(56304+-104316)]else w=p z=I w=-134835+15158375 end else rm=y[z]w=rm and 5193997-29311 or 5005081-(-543229)b=rm end else if w&lt;-423186+1460356 then g=g+q l=g&lt;=A h=not T l=h and l h=g&gt;=A h=T and h l=h or l h=-752273+16636603 w=l and h l=14440942-583506 w=w or l else w=1040374+3519848 j=8034796240313-306972 h=r(-985912-(-937860))g=y[X[694320+-694319]]q=y[X[-418943-(-418945)]]T=q(h,j)A=g[T]l=v[A]T=r(-833306-(-785291))A=1024982-1024981 d=l[A]h=611016+23383600928704 A=y[X[-484600-(-484601)]]g=y[X[-29177+29179]]q=g(T,h)l=A[q]V=d[l]I=V end end else if w&lt;-285048+1660499 then if w&lt;885988-(-204380)then p=r(-266048-(-218070))v=a[-634346-(-634347)]l=660426+16466589911593 z=y[X[-418244+418245]]g=840807+34239273527776 i=y[X[267900-267898]]d=31665250734542-710709 V=1449566355047-(-754748)I=i(p,V)b=z[I]V=r(960043+-1008092)i=y[X[65035+-65034]]I=y[X[57009-57007]]A=563516+12363763449153 p=I(V,d)z=i[p]I=y[X[157745-157744]]d=r(-877264+829291)p=y[X[-73937-(-73939)]]V=p(d,l)i=I[V]p=y[X[191478+-191477]]l=r(311963-359966)V=y[X[557267+-557265]]d=V(l,A)I=p[d]A=r(-746223+698260)V=y[X[431429-431428]]d=y[X[1024946-1024944]]l=d(A,g)p=V[l]w={[b]=z,[i]=v,[I]=p}b={w}w=W[r(-221613+173471)]else I=C(I)g=C(g)i=C(i)d=C(d)q=nil V=nil h=nil p=C(p)j=nil T=nil i=nil z=C(z)I=t()T=t()A=C(A)z=nil V=r(32652+-80741)K=C(K)l=nil h={}y[I]=z z=t()q={}l=r(751715-799844)g=t()y[z]=i K=465030-464774 p=W[V]A=r(-610198+562122)V=r(633460+-681565)i=p[V]p=t()y[p]=i d=r(719045+-767134)V=W[d]d=r(199849+-247994)i=V[d]d=W[l]j=-8397-(-8398)l=r(318529+-366537)w=-798693+6761653 V=d[l]l=W[A]A=r(692538+-740651)d=l[A]A=t()l=-93047+93047 y[A]=l l=-206276+206278 Q=K y[g]=l y[T]=q q=48948-48948 K=-69565+69566 P=K l={}K=-359415-(-359415)o=P&lt;K K=j-P end else if w&lt;981584+552770 then w=y[X[-984252-(-984262)]]z=y[X[-576499+576510]]v[w]=z w=y[X[524025+-524013]]z={w(v)}b={U(z)}w=W[r(-493521-(-445541))]else S=C(S)w=9255436-370055 s=C(s)O=C(O)L=nil P=C(P)o=C(o)E=C(E)end end end else if w&lt;548357+1758067 then if w&lt;97559+2014891 then if w&lt;-238663+2216210 then if w&lt;198512+1523543 then K=#h Q=-934354-(-934354)j=K==Q w=j and 238841+6166988 or 10581876-(-249113)else A=-491248-(-491250)q=983432+-983419 z=y[X[534568-534565]]i=686860-686828 v=z%i I=y[X[-835512-(-835516)]]d=y[X[248601+-248599]]j=y[X[13395+-13392]]h=j-v j=174332+-174300 T=h/j g=q-T l=A^g V=d/l p=I(V)I=4294911909-(-55387)i=p%I p=671838-671836 I=p^v l=-457507-(-457508)z=i/I I=y[X[628537-628533]]d=z%l l=-913043+4295880339 v=nil V=d*l p=I(V)I=y[X[-715218-(-715222)]]V=I(z)i=p+V q=163512+-163256 d=-399806-(-465342)p=-707776-(-773312)A=34527-34271 I=i%p V=i-I p=V/d z=nil d=520284+-520028 V=I%d l=I-V d=l/A A=403491+-403235 i=nil l=p%A g=p-l I=nil p=nil A=g/q g={V;d,l;A}w=1007097+9013404 y[X[336992+-336991]]=g d=nil V=nil l=nil A=nil end else v=y[X[988958+-988957]]z=y[X[-91366-(-91368)]]I=r(-887122+839164)p=32441724601268-(-161614)i=z(I,p)p=r(-256148+208112)b=v[i]z=y[X[-999328+999329]]i=y[X[564234+-564232]]V=24111950863967-946819 I=i(p,V)v=z[I]w={[b]=v}b={w}w=W[r(721977+-770111)]end else if w&lt;-928168+3177845 then j=K S=j w=6523629-560669 h[j]=S j=nil else w=241075+6907365 end end else if w&lt;-885700+3354924 then if w&lt;3114984-721881 then i=-291726+291727 z=y[X[474760-474757]]v=z~=i w=v and 552297+1246479 or 6777227-(-1025812)else z=y[X[1877-1876]]I=975604-975603 p=956894+-956892 i=z(I,p)z=-1031912-(-1031913)v=i==z b=v w=v and 4897753-(-596207)or-1042499+5954545 end else if w&lt;-676125+3230445 then Q=r(559302-607262)w=W[Q]Q=r(-583279-(-535172))W[Q]=w w=117814+2185268 else w=true w=w and 5769793-828973 or 8167617-(-877582)end end end end else if w&lt;2863866-(-315254)then if w&lt;2594760-(-239452)then if w&lt;-520138+3320510 then if w&lt;-721631+3472989 then if w&lt;1728226-(-896456)then Wm=-22521-(-22523)x=L[Wm]Wm=y[O]w=357143+13478697 G=x==Wm rm=G else s=-760725+760980 o=r(-761396+713307)G=r(351730+-399814)P=t()M=-544786-(-554786)y[P]=R b=W[o]o=r(-712593+664448)w=b[o]S=-937250-(-937350)o=16360-16359 b=w(o,S)o=t()S=-450836-(-450836)O=-293359+293360 y[o]=b w=y[d]b=w(S,s)S=t()y[S]=b w=y[d]s=416019-416018 E=y[o]b=w(s,E)s=t()L=523564-523562 y[s]=b b=y[d]E=b(O,L)b=1037172+-1037171 w=E==b E=t()B=-310783-(-310783)L=r(300829-348824)b=r(-730580-(-682540))y[E]=w u=W[G]x=y[d]Wm={x(B,M)}w=r(-789648+741491)G=u(U(Wm))u=r(754779+-802774)rm=G..u O=L..rm w=j[w]w=w(j,b,O)O=t()L=r(-62187+14212)y[O]=w b=W[L]rm=Z(-388986+2782697,{d,P;g;i;z,K,E;O,o;s;S,A})L={b(rm)}w={U(L)}L=w w=y[E]w=w and-710341+1521542 or 837430+14164850 end else V=y[X[-1042418-(-1042419)]]A=r(-165404+117375)g=1209220307034-(-322009)d=y[X[262049-262047]]l=d(A,g)w=V[l]V=z p[w]=V w=9193583-876026 end else if w&lt;2810749-5622 then K=y[X[-83954-(-83955)]]d=p q=w R=y[X[-830099-(-830101)]]Q=-406520+2183607433200 Y=r(135659-183812)D=R(Y,Q)j=K[D]h=l[j]K=y[X[97083-97082]]Q=4105016852876-(-263659)Y=r(-334370+286402)R=y[X[-398803+398805]]D=R(Y,Q)j=K[D]T=h==j w=T and 13455121-922682 or 307766+14838431 g=T else b=-56236+7287833 z=r(528153+-576175)i=4071902-(-520645)v=z^i w=b-v v=w b=r(-329714+281582)w=b/v b={w}w=W[r(472244+-520255)]end end else if w&lt;-364359+3456259 then if w&lt;2630153-(-350909)then A=-300163-(-300418)z=i w=y[X[499356-499355]]l=876934+-876934 d=w(l,A)w=9545913-(-997148)v[z]=d z=nil else Y=y[X[256281-256280]]S=17689441440970-(-854883)Q=y[X[-664733-(-664735)]]o=r(883364-931354)P=Q(o,S)D=Y[P]K=D w=12315629-(-759735)end else if w&lt;2104044-(-1030508)then A=y[X[15198+-15197]]T=r(34812+-82851)g=y[X[420955-420953]]h=11368991162761-(-512805)p=w q=g(T,h)l=A[q]d=v[l]l=172534+-172533 V=d[l]I=V w=V and 249197-(-804899)or 4293670-(-266552)else v=nil y[X[-369057-(-369062)]]=b w=336640+11586554 end end end else if w&lt;-534095+4217668 then if w&lt;815220+2576968 then if w&lt;4160450-915173 then b=r(-803524-(-755552))w=W[b]d={w(v)}w=320212+13384865 b=d[748814+-748813]V=d[-1016520+1016523]p=d[-32681+32683]d=b else q=r(-340129+292000)g=W[q]D=555906+18900806313695 R=1016672382792-(-299665)l=V E=8343683511988-1025927 T=y[X[394017-394016]]K=r(176581-224704)h=y[X[-152214-(-152216)]]j=h(K,R)R=r(615584-663600)q=T[j]w=g[q]h=y[X[245460+-245459]]j=y[X[227760-227758]]K=j(R,D)R=w T=h[K]j=w s=r(-901124+853170)P=y[X[175271+-175270]]o=y[X[226122+-226120]]S=o(s,E)Q=P[S]Y=A[Q]P=y[X[636973+-636972]]o=y[X[-936810+936812]]E=1032031+15083624389648 s=r(74825+-122760)S=o(s,E)Q=P[S]D=Y==Q w=D and 610679+4994110 or 7736868-968196 K=D end else if w&lt;433779+3129465 then p,l=V(I,p)w=p and-450143+3250984 or-231584+5379832 else P=r(370890+-418997)Y=r(670789-718873)w=W[Y]Q=W[P]Y=w(Q)w=r(785537+-833497)W[w]=Y w=227188+2075894 end end else if w&lt;649129+3289665 then if w&lt;3379249-(-360832)then g=y[X[739710+-739709]]j=-102610+1033557447347 h=r(-728549+680540)q=y[X[-602260+602262]]T=q(h,j)A=g[T]h=-790163+26455695785650 l=v[A]A=1002739+-1002738 T=r(-682394-(-634335))d=l[A]A=y[X[702722-702721]]g=y[X[-916829+916831]]q=g(T,h)l=A[q]w=7277749-(-517647)V=d[l]I=V else h=15953761318404-(-91905)T=r(611553+-659708)p=w A=y[X[-801980-(-801981)]]g=y[X[379181+-379179]]q=g(T,h)l=A[q]d=v[l]l=247828-247827 V=d[l]I=V w=V and 343581+3384241 or 8556137-760741 end else if w&lt;4249471-112001 then z=r(638763-686901)b=-326924+2377603 i=-822195+10736792 v=z^i w=b-v b=r(15433+-63491)v=w w=b/v b={w}w=W[r(-193670+145638)]else V,A=d(p,V)w=V and 14144332-1034617 or 3537562-(-694721)end end end end end else if w&lt;-126952+6863830 then if w&lt;4907108-(-256133)then if w&lt;743904+4154163 then if w&lt;852896+3609775 then if w&lt;-969019+5237399 then if w&lt;5257302-1023303 then V=y[X[763010+-763009]]d=y[X[-936972-(-936974)]]A=r(791903+-839844)q=15731994866528-5827 g=-24542+19355853734675 l=d(A,g)T=-302130+1069130423843 g=r(489978+-538134)p=V[l]d=y[X[-82949+82950]]l=y[X[266850+-266848]]h=r(7402-55561)A=l(g,q)V=d[A]l=y[X[709110-709109]]j=-791831+3173816244956 A=y[X[-995495-(-995497)]]q=r(198936-246959)g=A(q,T)d=l[g]g=y[X[366749+-366748]]q=y[X[-252871-(-252873)]]l=-774645+775645 T=q(h,j)A=g[T]g=.7 w={[p]=i;[V]=I;[d]=l;[A]=g}p=w V=z w=z and 16853309-580055 or-42509+9652635 else v=a[603686+-603685]z=y[X[250609+-250608]]i=y[X[886110+-886108]]p=r(476463+-524416)V=-366341+24702299997171 d=1039655+3411855059213 I=i(p,V)b=z[I]V=r(-468203-(-420158))i=y[X[-1040776+1040777]]I=y[X[577544+-577542]]p=I(V,d)z=i[p]d=r(-82100+34062)I=y[X[-49815-(-49816)]]l=8859021567524-(-600569)p=y[X[909863-909861]]V=p(d,l)A=-333631+33845182321871 g=9999288635567-671359 i=I[V]p=y[X[-672481+672482]]V=y[X[-231723+231725]]l=r(339889+-388013)d=V(l,A)A=r(-78446+30382)I=p[d]V=y[X[276523-276522]]d=y[X[269586-269584]]l=d(A,g)p=V[l]w={[b]=z;[i]=v;[I]=p}b={w}w=W[r(-666278-(-618195))]end else b=r(794925-842930)A=n(-928911+5036249,{})w=W[b]v=y[X[60704-60700]]I=r(508336+-556420)i=W[I]l=r(-480729+432754)d=W[l]l={d(A)}d=255461+-255459 V={U(l)}p=V[d]I=i(p)i=r(-387983-(-339943))z=v(I,i)v={z()}b=w(U(v))z=y[X[-1004528-(-1004533)]]v=b b=z w=z and 11818076-884167 or 469840+2681550 end else if w&lt;4770273-(-116386)then z=I w=p w=416995+12556450 else Y=694567-694566 Q=-233654+233660 w=y[d]D=w(Y,Q)Q=r(355266+-403226)w=r(750167-798127)W[w]=D Y=W[Q]Q=445201+-445199 w=Y&gt;Q w=w and-170209+3839162 or 2911678-362827 end end else if w&lt;-267927+5317354 then if w&lt;825116+4104830 then z=y[X[-717631-(-717633)]]w=378241+5115719 i=y[X[-337700+337703]]v=z==i b=v else b=r(-224860+176900)w=W[b]v=r(-425533-(-377426))b=W[v]v=r(-448632-(-400525))W[v]=w w=1642560-(-915191)v=r(675277+-723237)W[v]=b v=y[X[-444521+444522]]z=v()end else if w&lt;5701239-555352 then d=r(595263+-643352)T=r(-691638+643509)V=b b=W[d]d=r(-291228+243083)w=b[d]d=t()y[d]=w l=r(755692+-803821)b=W[l]l=r(-711385+663312)w=b[l]q=W[T]l=w A=q g=w w=q and 603540+10472173 or 14181749-214573 else q=222286+1109196758454 g=r(-684333+636351)R=-9694+7974888698975 w=y[X[977571-977568]]h=239939+19002333608269 d=y[X[953281+-953280]]T=r(-602106+554037)K=r(-741541+693497)l=y[X[358121+-358119]]A=l(g,q)V=d[A]A=y[X[-848687-(-848688)]]g=y[X[725739-725737]]q=g(T,h)l=A[q]T=y[X[-810702+810703]]h=y[X[107374-107372]]j=h(K,R)q=T[j]g={[q]=z}A={g}d={[l]=A}T=r(88651+-136594)h=140089886832-(-620497)A=y[X[-124829-(-124830)]]g=y[X[-910639+910641]]q=g(T,h)l=A[q]p={[V]=d,[l]=i}V=r(-743369+695301)V=w[V]I={V(w,p)}b={U(I)}w=W[r(504712-552797)]end end end else if w&lt;-1035167+6678816 then if w&lt;5908416-413481 then if w&lt;316208+5013149 then if w&lt;611578+4559924 then Wm=827640-827639 x=L[Wm]Wm=false G=x==Wm u=w rm=G w=G and 2245554-(-355197)or 13721529-(-114311)else V=r(549883-597925)d=-537789+7337690350101 w=-431017+15046042 i=y[X[-722114+722115]]I=y[X[66410+-66408]]p=I(V,d)z=i[p]b=z end else w=b and 3628852-(-646584)or-1018235+12941429 end else if w&lt;503992+5080036 then w=-341233+1954614 y[z]=b else S=639227+32241882675626 Y=y[X[294653+-294652]]w=1010140+5758532 Q=y[X[706763-706761]]o=r(-639096+591069)P=Q(o,S)D=Y[P]K=D end end else if w&lt;-278633+6249146 then if w&lt;748796+5202609 then l=r(525514-573502)v=a[211199+-211198]p=y[X[126372+-126371]]V=y[X[961109+-961107]]A=19706283791550-897254 d=V(l,A)l=-443035+11961344546908 I=p[d]i=v[I]I=972137+-972136 z=i[I]I=y[X[-672737+672738]]p=y[X[-900026+900028]]d=r(684433-732539)V=p(d,l)i=I[V]b=z[i]V=r(225576+-273691)i=y[X[-21797-(-21798)]]d=353240+23857926653837 I=y[X[-525862+525864]]p=I(V,d)z=i[p]w=b[z]b={w}w=W[r(537690+-585746)]else S=not o K=K+P j=K&lt;=Q j=S and j S=K&gt;=Q S=o and S j=S or j S=1482593-(-732088)w=j and S j=290339+14892899 w=w or j end else if w&lt;7245846-915602 then w=9662550-604234 D=q==T R=D else K=t()Q=e(10426170-(-134437),{K;A;g,p})j={}d=nil S={}y[K]=j Xm=14104310862930-(-279893)G=nil P=t()E=r(-203405+155277)j=t()y[j]=Q Wm=21246784861025-(-619332)h=nil Q={}p=C(p)y[P]=Q q=nil o=r(-55991-(-7956))Q=W[o]O=y[P]L=r(729952+-778019)q=30567642714467-776649 s={[E]=O;[L]=G}o=Q(S,s)y[z]=o Q=H(12719889-345468,{P;K;T;A;g,j})i=nil y[I]=Q P=C(P)A=C(A)V=nil K=C(K)l=nil g=C(g)j=C(j)p=r(259226-307252)T=C(T)g=r(272392-320531)i=W[p]d=y[z]l=y[I]S=r(-595149-(-547071))T=r(-608332+560301)p=r(681746-729695)L=r(-504024+455963)p=i[p]A=l(g,q)V=d[A]p=p(i,V)j=953243+19782428317792 i=t()V=r(-744610+696520)s=8293854101459-(-118595)d=r(1024508+-1072670)y[i]=p p=k(93357+8583572,{z,I,i})W[V]=p V=k(-998324+17741190,{z,I;i})p=t()h=257416+27852816074017 M=6625441997570-890613 y[p]=V G=353243+16637536352872 V=F(11986180-(-979907),{z;I,i})W[d]=V P=754948+12714220048924 E=8433080025805-(-838793)A=y[z]g=y[I]q=g(T,h)l=A[q]g=y[z]q=y[I]h=r(650179+-698283)T=q(h,j)A=g[T]j=r(797917-846035)q=y[z]T=y[I]K=161303+7416408020838 h=T(j,K)g=q[h]q=true Q=r(134862-182989)w=W[r(998990+-1046960)]h=y[z]j=y[I]K=j(Q,P)T=h[K]K=y[z]h=false Q=y[I]P=Q(S,s)s=r(836999+-885148)j=K[P]Q=y[z]P=y[I]S=P(s,E)K=Q[S]P=y[z]S=y[I]O=31615027424652-(-265205)E=r(1034427+-1082480)s=S(E,O)S=r(533501-581591)Q=P[s]P=W[S]s=y[z]E=y[I]O=E(L,G)S=s[O]O=y[z]L=y[I]x=r(432368-480347)G=L(x,Wm)x=817088+4453575299161 s=H(15248119-805041,{z;I})E=O[G]O=Z(14277194-578222,{z;I})d={[l]=A;[g]=q,[T]=h,[j]=K,[Q]=P,[S]=s,[E]=O}g=y[z]h=r(-876961+828970)K=29422140764829-883993 q=y[I]s=r(766919+-815027)j=31132954518502-(-808123)T=q(h,j)E=23296089237281-(-426815)A=g[T]P=r(-903859+855759)Q=32972242887299-(-301430)j=r(-496344-(-448213))S=9740065730255-646424 q=y[z]T=y[I]h=T(j,K)g=q[h]O=204746+28800073454745 T=y[z]K=r(225142+-273286)h=y[I]j=h(K,Q)q=T[j]j=y[z]T=false K=y[I]Q=K(P,S)h=j[Q]j=false Q=y[z]P=y[I]S=P(s,E)K=Q[S]P=y[z]E=r(681267+-729403)G=r(170623+-218590)S=y[I]s=S(E,O)Q=P[s]S=y[z]O=r(-448312+400237)L=801597+27429506578087 s=y[I]E=s(O,L)B=23809429578434-(-264333)s=r(546719+-594809)P=S[E]S=W[s]E=y[z]O=y[I]L=O(G,x)s=E[L]Wm=r(-146903-(-98963))L=y[z]G=y[I]E=Z(16501764-137991,{z,I})x=G(Wm,B)O=L[x]L=N(146207+10444258,{z,I})l={[A]=g;[q]=T,[h]=j;[K]=Q;[P]=S,[s]=E;[O]=L}j=r(-325054-(-277035))E=r(214968-262962)q=y[z]x=r(934031+-982088)O=32365909657803-(-684564)T=y[I]K=894802+29667790376613 h=T(j,K)s=1899826529368-(-818972)K=r(-606005+558068)g=q[h]P=871288+9620021872135 T=y[z]Q=437008+19651689101487 h=y[I]j=h(K,Q)S=r(-995443+947479)q=T[j]h=y[z]Q=r(381965+-430037)j=y[I]K=j(Q,P)T=h[K]h=false G=-27091+10332908256414 K=y[z]Q=y[I]wm=-149288+14237904412942 Um=602649340554-911730 L=17913877558780-595303 P=Q(S,s)B=r(-1034717-(-986699))j=K[P]P=y[z]K=false S=y[I]s=S(E,O)Q=P[s]O=r(-181336+133377)S=y[z]s=y[I]E=s(O,L)P=S[E]L=r(791183-839245)s=y[z]E=y[I]Wm=-474219+34551414143812 O=E(L,G)S=s[O]O=y[z]s=f(13906339-445340,{p,z;I})L=y[I]G=L(x,Wm)E=O[G]O=H(7610134-(-588891),{z;I})G=y[z]x=y[I]Wm=x(B,M)L=G[Wm]G=n(-825605-(-845425),{z,I})A={[g]=q;[T]=h,[j]=K,[Q]=P,[S]=s;[E]=O,[L]=G}S=12314089586681-174483 K=r(-296207+248255)Wm=r(809857+-857855)O=r(-865035-(-817018))T=y[z]B=31948665785764-578439 s=r(-780248+732105)P=643256+8702067343132 Q=825509+19320429120127 h=y[I]x=-808284+11885724445434 j=h(K,Q)q=T[j]Q=r(-388339-(-340178))h=y[z]j=y[I]K=j(Q,P)P=r(-23738-24420)T=h[K]j=y[z]L=2317769976896-436233 M=r(786061+-834044)K=y[I]Q=K(P,S)h=j[Q]Q=y[z]j=false E=1036129+7432146468387 P=y[I]S=P(s,E)K=Q[S]Q=false S=y[z]s=y[I]E=s(O,L)G=303928+4559224382739 P=S[E]L=r(1016852+-1064982)s=y[z]E=y[I]O=E(L,G)G=r(-976213+928176)S=s[O]E=y[z]O=y[I]L=O(G,x)s=E[L]L=y[z]E=k(14842367-883667,{p,z,I})G=y[I]x=G(Wm,B)O=L[x]x=y[z]L=Z(-611999+12783238,{z,I})Wm=y[I]B=Wm(M,wm)G=x[B]x=c(-439686+6240098,{z;I})g={[q]=T;[h]=j;[K]=Q;[P]=S;[s]=E,[O]=L,[G]=x}h=y[z]B=r(-570789-(-522764))E=r(-718626-(-670639))L=r(-805751-(-757780))j=y[I]Q=r(36017+-83993)P=885645+21606109373376 K=j(Q,P)P=r(69486+-117566)s=-149818+6587432015157 S=9142883138624-781215 T=h[K]M=26568300346756-(-160463)j=y[z]K=y[I]Q=K(P,S)O=464220+31939018024124 S=r(-531505-(-483353))h=j[Q]K=y[z]Q=y[I]P=Q(S,s)j=K[P]G=2755076459044-279842 Wm=-747919+30604261646650 K=false x=-891309+5954474337409 P=y[z]S=y[I]s=S(E,O)Q=P[s]s=y[z]P=true E=y[I]O=E(L,G)S=s[O]E=y[z]G=r(603422+-651482)O=y[I]L=O(G,x)am=5613669547494-996272 x=r(803828-851944)s=E[L]wm=r(655971+-704042)O=y[z]L=y[I]G=L(x,Wm)E=O[G]G=y[z]x=y[I]O=f(11475323-801022,{z,I})Wm=x(B,M)L=G[Wm]Wm=y[z]B=y[I]M=B(wm,Um)G=Z(-354795+1432902,{z;I})x=Wm[M]Wm=N(-566304+7606690,{z;I})q={[T]=h,[j]=K;[Q]=P;[S]=s,[E]=O;[L]=G;[x]=Wm}E=809466+12692508671260 P=r(176766+-224862)S=-361381+19920519931873 B=164493+12740955362463 L=20431299917568-(-1027626)j=y[z]K=y[I]Q=K(P,S)h=j[Q]S=r(-844540+796446)K=y[z]s=-617163+11284458831697 Q=y[I]P=Q(S,s)j=K[P]Q=y[z]s=r(957305+-1005247)P=y[I]O=r(-489523+441562)S=P(s,E)K=Q[S]Q=false S=y[z]G=r(-86896-(-38897))x=500396403985-(-512984)s=y[I]E=s(O,L)P=S[E]S=true E=y[z]O=y[I]L=O(G,x)s=E[L]O=y[z]x=r(986075-1034056)L=y[I]M=r(622854-670861)Wm=2731001499847-396240 G=L(x,Wm)E=O[G]wm=22437284780578-766290 L=y[z]Wm=r(574238+-622215)G=y[I]x=G(Wm,B)O=L[x]L=H(-330156+7772887,{z;I})x=y[z]Wm=y[I]Um=r(-687508-(-639383))B=Wm(M,wm)G=x[B]x=f(5223399-966193,{z;I})B=y[z]M=y[I]wm=M(Um,am)Wm=B[wm]B=f(-927203+17585425,{z;I})T={[h]=j;[K]=Q,[P]=S,[s]=E;[O]=L;[G]=x,[Wm]=B}E=22936572592162-(-321942)K=y[z]Q=y[I]S=r(-316920-(-268958))s=2483125384181-913265 P=Q(S,s)s=r(93446-141596)G=14846889191818-708233 j=K[P]Q=y[z]O=23804281419067-1018351 P=y[I]Um=465669+33360466403753 S=P(s,E)K=Q[S]P=y[z]S=y[I]E=r(-488937+440981)s=S(E,O)Q=P[s]wm=r(-64878+16913)L=r(261034+-309194)Wm=-734410+21991475911882 s=y[z]x=r(1040648+-1088681)M=728348768952-391525 E=y[I]P=true O=E(L,G)S=s[O]s=false O=y[z]L=y[I]am=r(-807494-(-759474))B=24406927872505-(-957036)G=L(x,Wm)Wm=r(436962+-485097)E=O[G]L=y[z]G=y[I]x=G(Wm,B)B=r(-219843-(-171846))O=L[x]G=y[z]x=y[I]Wm=x(B,M)x=r(78313-126403)L=G[Wm]G=W[x]Wm=y[z]B=y[I]M=B(wm,Um)x=Wm[M]Wm=N(-331756+2317624,{z,I})M=y[z]wm=y[I]Um=wm(am,Xm)B=M[Um]M=N(-469822+11490173,{z;I})h={[j]=K,[Q]=P;[S]=s;[E]=O;[L]=G;[x]=Wm;[B]=M}V={d;l,A;g,q;T;h}b={V}end end end end else if w&lt;8752518-649025 then if w&lt;276387+7210328 then if w&lt;7377031-229949 then if w&lt;7958367-881222 then if w&lt;6812442-(-226244)then w=R h=K w=K and 11193190-440153 or-854959+15874568 else i=w g=-350658+21065832349715 V=y[X[-12179-(-12180)]]A=r(-462584-(-414634))v=a[-544674+544675]d=y[X[-732520+732522]]l=d(A,g)p=V[l]I=v[p]z=I w=I and 2105046-(-1018194)or 13545040-571595 end else i=y[X[-338042-(-338051)]]I=i i=135073+-135072 w={}z=692275+-692274 p=i i=68959-68959 v=w V=p&lt;i w=10715165-172104 i=z-p end else if w&lt;7229673-30040 then w=true w=w and 5715495-825770 or 15666441-(-910960)else d=r(404855-452995)b=r(169703-217865)v=a[-823084+823085]w=W[b]l=14738301173291-(-7332)I=y[X[-869559-(-869560)]]p=y[X[610747-610745]]z=a[-319596+319598]V=p(d,l)i=I[V]b={w(v,z,i)}w=W[r(802889-850986)]b={U(b)}end end else if w&lt;7405008-(-395038)then if w&lt;6853747-(-866455)then w=W[r(307882+-355999)]b={b}else z=I w=p w=781372+8870779 end else if w&lt;549353+7317952 then z=y[X[157453+-157450]]i=-335598-(-335706)v=z*i z=882737-882480 b=v%z y[X[940674+-940671]]=b w=409225+1959003 else w=913842-(-181902)end end end else if w&lt;8249116-(-440849)then if w&lt;7659518-(-661638)then if w&lt;757708+7518285 then v=a[-637180+637181]p=r(-290760+242681)z=y[X[65826-65825]]V=33849614120703-(-394899)i=y[X[704527+-704525]]I=i(p,V)b=z[I]i=y[X[-499118+499119]]d=-309225+22284733030514 I=y[X[585018+-585016]]g=6029678912154-595875 V=r(926188+-974274)p=I(V,d)l=20613827037458-(-23661)d=r(-267009+219023)z=i[p]I=y[X[889994+-889993]]p=y[X[765326-765324]]A=r(489539+-537653)V=p(d,l)i=I[V]V=y[X[678884+-678883]]d=y[X[-524536+524538]]l=d(A,g)p=V[l]I=p..v w={[b]=z,[i]=I}b={w}w=W[r(908041+-956055)]else d=r(296192-344260)w=y[X[47905+-47902]]d=w[d]V={d(w,p)}b={U(V)}w=W[r(-372716+324723)]end else if w&lt;8909187-359575 then w=b and 9824479-(-56043)or-578040+3775930 else z=a[430057+-430055]v=a[437613+-437612]w={}i=w b=r(136222+-184194)w=W[b]V={w(v)}b=V[-210353-(-210354)]p=V[479026+-479023]w=3173649-(-301644)I=V[-435540+435542]V=b end end else if w&lt;-278479+9336665 then if w&lt;9723936-748830 then R=R+Y P=not Q b=R&lt;=D b=P and b P=R&gt;=D P=Q and P b=P or b P=1003348+1676584 w=b and P b=15690804-757031 w=w or b else b={}w=W[r(-975265-(-927202))]end else if w&lt;-1039418+10422119 then y[z]=R w=y[z]w=w and 7940223-41295 or 716757+12646617 else w=true w=w and-106252+16306991 or 12152940-514135 end end end end end end else if w&lt;764931+12937994 then if w&lt;12662827-855096 then if w&lt;-166701+10842746 then if w&lt;10717601-183654 then if w&lt;52378+9945519 then if w&lt;9477908-(-324482)then if w&lt;9401969-(-232717)then w=V and 2733076-(-56340)or-304080+8621637 else b=z w=i w=z and 13669286-(-945739)or-824507+6028184 end else A=r(-654207-(-606074))g=782206+31259917027678 q=6207187304217-(-248881)p=r(-257980-(-209851))b=W[p]V=y[X[-943962-(-943963)]]d=y[X[333789-333787]]l=d(A,g)p=V[l]w=b[p]h=355872+23695796698362 T=-967000+20045777544654 d=y[X[-1016086-(-1016087)]]g=r(403931+-452040)l=y[X[-864550-(-864552)]]A=l(g,q)V=d[A]q=r(-802326+754388)l=y[X[-95038+95039]]A=y[X[-420381+420383]]g=A(q,T)T=r(767057-815131)d=l[g]A=y[X[126176+-126175]]g=y[X[831258-831256]]q=g(T,h)l=A[q]p={[V]=d,[l]=z}b=w(I,p)w=3078193-(-119697)end else if w&lt;511829+9527155 then i=r(113569-161698)w=W[r(577927+-626028)]z=W[i]i=r(-572533+524525)v=z[i]i=y[X[847423+-847422]]z={v(i)}b={U(z)}else d=712433158867-215432 i=y[X[673073+-673072]]I=y[X[497843+-497841]]V=r(-608623+560581)p=I(V,d)w=257991+7375030 z=i[p]b=z end end else if w&lt;568551+10012235 then if w&lt;787830+9755536 then i=i+p d=not V z=i&lt;=I z=d and z d=i&gt;=I d=V and d z=d or z d=2763747-(-73618)w=z and d z=453050+1041807 w=w or z else v=y[X[501005+-501004]]b=#v v=-186530-(-186530)w=b==v w=w and-419700+14675420 or 9861729-(-158772)end else if w&lt;921439+9686795 then d=y[X[-99349-(-99350)]]q=-53222+1315082064458 v=a[176062+-176061]l=y[X[953833-953831]]g=r(-104360-(-56249))A=l(g,q)V=d[A]p=v[V]V=165808-165807 g=745421+28458569880567 A=r(-992341-(-944220))I=p[V]V=y[X[-156518-(-156519)]]d=y[X[721411+-721409]]l=d(A,g)p=V[l]l=r(-330662-(-282581))i=I[p]p=y[X[553351+-553350]]V=y[X[316310-316308]]A=-837177+26983246133070 d=V(l,A)V=r(-698722-(-650612))I=p[d]z=i[I]i=-951288+951289 b=z[i]d=851080+25021964726523 i=y[X[-255101+255102]]I=y[X[186489+-186487]]p=I(V,d)z=i[p]w=b[z]b={w}w=W[r(502748+-550846)]else z=a[-857552-(-857554)]v=a[718886+-718885]d=r(376718+-424773)b=r(-996190+948028)w=W[b]l=327387+25039808589489 I=y[X[87231+-87230]]p=y[X[-602892+602894]]V=p(d,l)i=I[V]b={w(v,z,i)}w=W[r(450116+-498270)]b={U(b)}end end end else if w&lt;11097922-60508 then if w&lt;10583914-(-251874)then if w&lt;11695085-931067 then if w&lt;-941614+11691631 then V=y[p]w=699852+4404484 b=V else K=y[X[401244+-401243]]Q=-456392+19032102164838 Y=r(-465111+417122)R=y[X[-965627+965629]]w=j P=r(-381980+334034)o=536430+26036913160174 D=R(Y,Q)j=K[D]D=y[X[592511+-592510]]Y=y[X[846386-846384]]Q=Y(P,o)R=D[Q]K=A[R]l=nil q={[T]=h,[j]=K}g=w(I,q)w=-583118+14288195 A=nil end else S=750262-750261 K=346745-346744 Q=#h j=i(K,Q)K=V(h,j)w=2211818-577840 j=nil Q=y[T]o=K-S P=d(o)Q[K]=P K=nil end else if w&lt;11637292-640428 then i=y[X[938105-938099]]z=i==v w=-1036219+4187609 b=z else i=w g=17177871390507-(-854036)A=r(720897+-768903)v=a[259356-259355]V=y[X[-441448+441449]]d=y[X[-48499-(-48501)]]l=d(A,g)p=V[l]I=v[p]w=I and 14571480-730100 or-711311+15734851 z=I end end else if w&lt;11380041-(-102325)then if w&lt;10616034-(-670551)then h=r(-111530-(-63401))T=W[h]h=r(-396173+348216)w=824636+13142540 q=T[h]A=q else P=r(-495992+447990)w=j l=nil K=y[X[963790-963789]]R=y[X[979530+-979528]]Q=27151757625525-(-59566)Y=r(999839-1047921)D=R(Y,Q)o=35144306242009-1012204 j=K[D]D=y[X[96380-96379]]Y=y[X[-399657+399659]]Q=Y(P,o)R=D[Q]K=A[R]A=nil q={[T]=h;[j]=K}g=w(I,q)w=784367+3379744 end else if w&lt;-1046733+12699950 then w=H(-469384+14759415,{I})D={w()}b={U(D)}w=W[r(352510-400630)]else w=W[r(392897+-440925)]b={z}end end end end else if w&lt;-283791+12974834 then if w&lt;805329+11460596 then if w&lt;724369+11439970 then if w&lt;12961465-834911 then if w&lt;700793+11179739 then I=t()d=r(-791453-(-743478))v=a z=t()w=true y[z]=w i=r(-679812+631736)b=W[i]i=r(339313+-387287)w=b[i]i=t()y[i]=w w=n(970182+15050970,{})p=t()y[I]=w w=false y[p]=w l=Z(817454+11331032,{p})V=W[d]d=V(l)w=d and 11240153-517163 or 537952+4566384 b=d else w=y[X[331710+-331703]]w=w and 16139204-521376 or-553592+7696071 end else w=true y[X[343838-343837]]=w w=W[r(-334663-(-286517))]b={}end else if w&lt;12729566-522241 then V=510781139547-(-235154)p=r(1016544+-1064492)z=y[X[-385997-(-385998)]]g=27494026493631-(-176963)l=238045+25222863490052 i=y[X[-311679+311681]]d=128013+24400310663253 I=i(p,V)V=r(962415+-1010366)b=z[I]i=y[X[855222+-855221]]v=a[347466-347465]I=y[X[-766347-(-766349)]]p=I(V,d)z=i[p]A=r(-12970+-35096)I=y[X[-701091-(-701092)]]d=r(-686682-(-638579))p=y[X[-824891-(-824893)]]V=p(d,l)i=I[V]V=y[X[-240364-(-240365)]]d=y[X[441900+-441898]]l=d(A,g)p=V[l]I=p..v w={[b]=z,[i]=I}b={w}w=W[r(-390399-(-342280))]else K=r(966049+-1014197)w=y[X[-711275-(-711278)]]T=255072+18406421478683 q=r(-174308-(-126284))l=y[X[864767+-864766]]A=y[X[981547-981545]]g=A(q,T)d=l[g]A=y[X[-589413-(-589414)]]g=y[X[-874650-(-874652)]]j=-5461+11607874841202 h=613328+32704454172589 T=r(543294-591298)q=g(T,h)l=A[q]h=r(189475-237526)g=y[X[602274-602273]]q=y[X[656925-656923]]T=q(h,j)A=g[T]T=y[X[-6507-(-6508)]]g=false R=24953305019664-264109 h=y[X[869811+-869809]]j=h(K,R)q=T[j]T=281975+-281975 V={[d]=i,[l]=I,[A]=g;[q]=T}d=r(476607+-524675)d=w[d]p={d(w,V)}b={U(p)}w=W[r(286961+-334908)]end end else if w&lt;931074+11442398 then if w&lt;-653747+12936817 then d=y[X[522797+-522796]]l=y[X[-801126+801128]]q=24679000505394-(-372914)g=r(-999936+951894)w=7348961-(-1014942)A=l(g,q)V=d[A]p=z~=V b=p else h=r(-892092-(-844117))g=-507269+507272 q=-541236-(-541301)A=t()y[A]=b w=y[d]b=w(g,q)w=-308267-(-308267)q=w g=t()y[g]=b b=W[h]j=e(-115241+2939780,{})h={b(j)}w=-633767-(-633767)T=w b=651074+-651072 w={U(h)}h=w Y=r(804133-852217)w=h[b]b=r(-327023+279018)j=w w=W[b]K=y[i]D=W[Y]Y=D(j)D=r(285488-333528)R=K(Y,D)K={R()}b=w(U(K))K=t()y[K]=b R=y[g]b=934611-934610 D=R R=-402654-(-402655)Y=R w=8805416-(-79965)R=-598598-(-598598)Q=Y&lt;R R=b-Y end else if w&lt;-140905+12571032 then z=a[663568-663566]v=a[-27046+27047]w=y[X[558878+-558877]]i=w w=i[z]w=w and-984457+16435872 or 14100232-430584 else D=2924477988140-47067 R=r(-87702+39733)w=821732+14324465 h=y[X[984871+-984870]]j=y[X[-256554+256556]]K=j(R,D)T=h[K]g=T end end end else if w&lt;-583183+13939031 then if w&lt;932432+12115059 then if w&lt;12310579-(-657859)then v=a[-548662-(-548663)]i=a[407335+-407332]z=a[-12632-(-12634)]w={}I=w b=r(-342132+294160)w=W[b]d={w(v)}p=d[-278359-(-278361)]b=d[-88785+88786]w=4591635-427524 V=d[-622811-(-622814)]d=b else b=z w=i w=z and 409911+14765822 or 783927+15083226 end else if w&lt;396050+12700537 then w=R w=K and-111342+11501039 or-417915+16924736 h=K else D=-808005+13791482670427 q=r(466441-514570)g=W[q]l=V K=r(-529389+481341)T=y[X[-19134-(-19135)]]R=-244232+28087724862751 s=r(573892-621926)h=y[X[486154-486152]]E=29058322242360-353885 j=h(K,R)q=T[j]w=g[q]h=y[X[792727+-792726]]j=y[X[69188+-69186]]R=r(734744-782837)K=j(R,D)R=w T=h[K]j=w P=y[X[-995936+995937]]o=y[X[725918-725916]]S=o(s,E)Q=P[S]E=-211264+31012202770857 Y=A[Q]s=r(557347-605390)P=y[X[313793+-313792]]o=y[X[-653753-(-653755)]]S=o(s,E)Q=P[S]D=Y==Q w=D and 3146681-120887 or-551090+13626454 K=D end end else if w&lt;13999346-350388 then if w&lt;264376+13133684 then w=true w=965513+10673292 else z=a[299188+-299186]w=y[X[415859+-415858]]v=a[484616+-484615]d=r(716613-764660)I=y[X[159731-159729]]l=28796566731562-804553 p=y[X[905824+-905821]]V=p(d,l)i=I[V]b={w(v,z,i)}b={U(b)}w=W[r(510524-558601)]end else if w&lt;-658717+14335872 then l=r(470241+-518317)p=5308+35184372083524 w={}y[X[811346+-811344]]=w b=y[X[834437+-834434]]I=b b=z%p d=37152-36897 w=701649+286048 y[X[-803363+803367]]=b V=z%d d=-128077+128079 p=V+d y[X[-598651-(-598656)]]=p d=W[l]l=r(121354-169400)V=d[l]g=-196579-(-196580)d=V(v)V=r(79672-127714)A=d q=g g=931947+-931947 T=q&lt;g i[z]=V V=208768-208721 l=-111438-(-111439)g=l-q else d=y[X[-580800+580801]]g=r(-362771-(-314706))q=7364435881864-(-7645)v=a[344877-344876]l=y[X[-196830-(-196832)]]A=l(g,q)V=d[A]p=v[V]A=r(-1014922-(-966800))V=409292-409291 I=p[V]g=-656418+19525081147302 V=y[X[805042-805041]]d=y[X[1007526+-1007524]]l=d(A,g)p=V[l]i=I[p]l=r(-561151-(-513130))p=y[X[587028-587027]]A=4468834331040-(-777856)V=y[X[-5266-(-5268)]]d=V(l,A)V=r(569978+-618032)I=p[d]z=i[I]i=485993+-485992 b=z[i]i=y[X[971677+-971676]]I=y[X[-614126-(-614128)]]d=-859428+4884519429638 p=I(V,d)z=i[p]w=b[z]b={w}w=W[r(-600262-(-552329))]end end end end end else if w&lt;14705660-(-408567)then if w&lt;15140700-695359 then if w&lt;13157614-(-808210)then if w&lt;14230097-376249 then if w&lt;550188+13289469 then if w&lt;13558540-(-258695)then V,A=d(p,V)w=V and-998078+4291456 or 11936338-(-282429)else w=u w=11808+5536502 b=rm end else A=y[X[205786-205785]]p=w g=y[X[-165526+165528]]T=r(112855-160847)h=928952+212035097514 q=g(T,h)l=A[q]d=v[l]l=-363752+363753 V=d[l]w=V and 40701+15545990 or 927676-521807 I=V end else if w&lt;13518691-(-438841)then V=nil w=10788929-(-1013025)I=nil d=nil else z=a[890012-890010]v=a[-674228-(-674229)]d=r(81385+-129386)w=y[X[-334260-(-334261)]]l=23085228876680-96651 I=y[X[36357+-36355]]p=y[X[-680924+680927]]V=p(d,l)i=I[V]b={w(v,z,i)}b={U(b)}w=W[r(-850327-(-802314))]end end else if w&lt;7914+14282020 then if w&lt;268842+13959278 then b=A w=g w=A and 550941+11775272 or 525860+14929595 else z=y[X[377528-377526]]i=-468673+468774 v=z*i z=-311664+20755333556015 b=v+z v=35184371199231-(-889601)w=b%v y[X[-675579+675581]]=w w=8820454-1017415 z=739616+-739615 v=y[X[696752-696749]]b=v~=z end else if w&lt;-340382+14650205 then w=2053960-(-503791)else p=r(-408150-(-360150))v=a[946524+-946523]z=y[X[-42964+42965]]i=y[X[203470-203468]]V=888913+23516705397365 I=i(p,V)V=r(826492-874587)b=z[I]i=y[X[-181756+181757]]d=28672538695601-(-203894)I=y[X[2154+-2152]]p=I(V,d)z=i[p]w={[b]=z}b={w}w=W[r(-298231+250287)]end end end else if w&lt;-754923+15685374 then if w&lt;15242282-447546 then if w&lt;14985143-244544 then if w&lt;15540901-865332 then w=W[r(-935137+887127)]b={b}else B=-622090-(-622091)y[z]=rm Wm=y[s]x=Wm+B G=L[x]u=q+G G=42807-42551 w=u%G q=w x=y[S]G=T+x x=977868-977612 w=809875-(-803506)u=G%x T=u end else j=r(825775-873867)w=15473326-658146 q=y[X[765722+-765721]]T=y[X[-518764-(-518766)]]K=3897961234880-801449 h=T(j,K)g=q[h]A=g end else if w&lt;14058382-(-819122)then R=-326446+22467909100556 q=r(-1017734+969605)g=W[q]K=r(662720+-710761)o=3013994654767-(-497996)D=-462480+31323927693194 T=y[X[-692569+692570]]Y=180144+17454862753808 h=y[X[-290805+290807]]j=h(K,R)s=-125608+23764609406434 q=T[j]w=g[q]d=nil R=r(124038-172129)h=y[X[269300+-269299]]P=r(-927628-(-879487))j=y[X[922401+-922399]]K=j(R,D)T=h[K]D=r(213215+-261154)j=y[X[177602-177601]]K=y[X[-661986+661988]]R=K(D,Y)h=j[R]D=y[X[-513997-(-513998)]]Y=y[X[221971+-221969]]Q=Y(P,o)R=D[Q]Q=y[X[611943+-611942]]P=y[X[352-350]]S=r(-700914+652844)o=P(S,s)Y=Q[o]D=l[Y]K={[R]=D}j={K}q={[T]=A,[h]=j}g=w(i,q)l=nil w=-620685+4095978 A=nil else w=742977+13978593 G=-638154+638155 u=L[G]rm=u end end else if w&lt;1045572+13971734 then if w&lt;-1332+14963453 then D=y[z]w=D and 1000056+5220839 or 8613635-(-444681)R=D else u=y[z]w=u and 5437+14896187 or-726181+15447751 rm=u end else if w&lt;415205+14606046 then R=y[X[596512+-596511]]Q=r(339964+-388052)D=y[X[712424+-712422]]P=4609249721035-946793 Y=D(Q,P)w=320388+10432649 K=R[Y]h=K else w=i w=z and 7635020-1999 or 10096036-(-421835)b=z end end end end else if w&lt;14942862-(-1046782)then if w&lt;16096642-519196 then if w&lt;275289+14955403 then if w&lt;-333905+15515267 then if w&lt;-305805+15454798 then w=q w=g and 14447952-(-367228)or-273862+15033389 A=g else b={b}w=W[r(511019+-559166)]end else K=#h w=11275714-444725 Q=-797951-(-797951)j=K==Q end else if w&lt;565645+14887910 then w=445715+11356239 else w=13133295-807082 g=r(134718+-182675)A=W[g]b=A end end else if w&lt;3123+15794304 then if w&lt;238714+15373546 then h=r(-1045871-(-997916))g=y[X[772798-772797]]j=26796820804445-180895 q=y[X[-187172-(-187174)]]T=q(h,j)A=g[T]l=v[A]A=-421416+421417 d=l[A]w=343684-(-62185)T=r(307235-355386)A=y[X[869858-869857]]g=y[X[919047+-919045]]h=2424800242077-(-842444)q=g(T,h)l=A[q]V=d[l]I=V else v=r(-33321-14615)w=W[v]i=-102991+102991 z=y[X[-386988+386996]]v=w(z,i)w=7101467-(-41012)end else if w&lt;15754945-(-126791)then i=y[X[674261+-674260]]V=r(943781-991823)d=-927918+15928217306535 I=y[X[-946071-(-946073)]]p=I(V,d)z=i[p]b=z w=899421+14276312 else Y=r(70624+-118700)l=g D=W[Y]Y=r(-23453-24513)R=D[Y]D=R(v,l)R=y[X[-290003+290009]]Y=R()K=D+Y j=K+V K=814254-813998 l=nil Y=524997+-524996 h=j%K V=h K=i[z]D=V+Y R=I[D]j=K..R w=1041147+-53450 i[z]=j end end end else if w&lt;15882161-(-529984)then if w&lt;16205442-(-47653)then if w&lt;-342592+16400425 then b=r(-688060+640124)w=W[b]v=r(-655661+607676)b=w(v)b={}w=W[r(-952311+904261)]else w=7015230-(-133210)end else if w&lt;-158794+16485828 then h=23706883045259-(-521108)A=y[X[902824+-902823]]T=r(-1009683+961641)w=9677665-67539 g=y[X[554379+-554377]]q=g(T,h)l=A[q]d=z~=l V=d else v=a[-162077+162078]p=r(-678757-(-630645))z=y[X[-889360-(-889361)]]V=1029127+20767458210239 i=y[X[-830397+830399]]d=27389441298270-793996 I=i(p,V)b=z[I]i=y[X[-474596-(-474597)]]V=r(773213+-821209)I=y[X[-581528-(-581530)]]p=I(V,d)z=i[p]w={[b]=z}b={w}w=W[r(1006956+-1054901)]end end else if w&lt;16383795-(-230893)then if w&lt;558340+15963826 then Q=r(746066+-794096)w=-192513+11582210 R=y[X[-14989+14990]]D=y[X[-69250-(-69252)]]P=-575256+16341859132625 Y=D(Q,P)K=R[Y]h=K else w=W[r(812277-860376)]b={}end else if w&lt;-929449+17624449 then v=a[844381+-844380]i=w A=r(726007-774144)V=y[X[-244837+244838]]d=y[X[-94324+94326]]g=1415885448298-(-630313)l=d(A,g)p=V[l]I=v[p]w=I and 585945+3154397 or 10091207-439056 z=I else i=a[578809-578806]w={}v=a[392849+-392848]z=a[-191896+191898]I=w b=z w=z and 11966146-(-308392)or 7898509-(-465394)end end end end end end end end w=#m return U(b)end,function(W,r)local U=i(r)local a=function(...)return w(W,{...},r,U)end return a end,function(W,r)local U=i(r)local a=function(a,X,m,J,b,y,v)return w(W,{a,X;m;J;b,y,v},r,U)end return a end,function(W,r)local U=i(r)local a=function(a,X,m,J)return w(W,{a;X;m,J},r,U)end return a end,function(W)local r,w=-812747-(-812748),W[969714+-969713]while w do v[w],r=v[w]-(-531639-(-531640)),r+(837650+-837649)if 583365-583365==v[w]then v[w],y[w]=nil,nil end w=W[r]end end,function(W)v[W]=v[W]-(-702961+702962)if v[W]==702244+-702244 then v[W],y[W]=nil,nil end end,function(W,r)local U=i(r)local a=function(a,X,m,J,b,y)return w(W,{a,X;m;J;b;y},r,U)end return a end,function(W,r)local U=i(r)local a=function(a,X)return w(W,{a,X},r,U)end return a end,function(W,r)local U=i(r)local a=function(a,X,m,J,b,y,v,t)return w(W,{a;X;m,J,b,y,v;t},r,U)end return a end,176308+-176308,function(W,r)local U=i(r)local a=function(a)return w(W,{a},r,U)end return a end,{},function(W,r)local U=i(r)local a=function(a,X,m)return w(W,{a,X;m},r,U)end return a end,function(W,r)local U=i(r)local a=function()return w(W,{},r,U)end return a end,{}return(p(691529+11143564,{}))(U(b))end)(getfenv and getfenv()or _ENV,unpack or table[r(-915172+867215)],newproxy,setmetatable,getmetatable,select,{...})end)(...)</ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="ModuleScript" referent="RBX0E41D7742DA54AA091C094DF2A741C54">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">AISendHandler</string>
				<string name="ScriptGuid">{55043347-4730-4690-B582-4287EFA6227D}</string>
				<ProtectedString name="Source">--[[ v1.0.0 https://wearedevs.net/obfuscator ]] return(function(...)local p={&quot;\082\084\061\061&quot;,&quot;\077\048\110\116\106\119\051\070\112\051\047\116&quot;,&quot;\072\074\089\088\072\074\047\067&quot;;&quot;\101\120\054\067\101\068\047\055\043\109\082\061&quot;,&quot;\049\069\106\102\085\098\043\101\107\103\065\070\104\089\054\087&quot;,&quot;\071\083\097\061&quot;,&quot;\120\047\115\086\048\084\061\061&quot;;&quot;\114\105\071\102\055\080\061\061&quot;,&quot;\108\053\057\086\089\052\118\087\109\122\054\075\111\085\111\061&quot;;&quot;\082\120\086\088\043\120\084\061&quot;;&quot;\085\118\049\085&quot;,&quot;\086\112\101\108\083\105\088\114\072\116\103\090\117\112\053\079\082\121\069\061&quot;,&quot;\047\076\111\072\076\067\100\077\048\105\121\090\083\108\080\109\109\053\054\066\048\072\104\104\111\080\074\086\115\089\083\068\110\072\076\067\088\101\119\086\075\077\089\111\081\077\102\078\116\104\088\118\065\067\122\106\055\074\114\108\086\109\082\065\102\070\072\089\070\097\051\084\069\115\109\120\057\073\069\055\119\072\052\084\057\106\106\101\111\086\102\121\114\079\089\115\050\084\048\084\066\051\107\109\078\099\047\100\043\104\106\051\073\082\109\081\068\069\055\108\053\111\116\075\109\109\109\089\098\070\067\104\056\117\081\100\066\068\106\081\115\049\121\101\084\057\087\061&quot;,&quot;\053\105\073\083\099\070\107\047&quot;,&quot;\100\071\103\055\103\071\054\074\100\116\112\056\101\068\053\084\101\071\110\061&quot;;&quot;\072\110\068\070\101\069\085\052&quot;;&quot;\108\119\054\098\116\071\079\049\085\085\070\106\072\120\068\109\075\055\069\081&quot;,&quot;\082\109\121\056\090\120\054\050&quot;;&quot;\103\047\052\086\106\089\114\105&quot;;&quot;\106\108\056\065\048\083\085\061&quot;;&quot;\071\105\113\086\099\050\116\078\105\080\061\061&quot;,&quot;\082\109\088\078\105\116\088\100\072\115\051\102\086\066\097\070&quot;;&quot;\066\043\069\072\048\056\117\085\073\089\056\075\065\052\110\101\071\043\051\108\066\118\088\107\121\076\049\090\104\051\080\051\047\112\079\072\083\112\112\053\098\073\106\080\105\066\104\076\116\102\109\078\118\103\067\043\104\090\073\055\071\090\088\115\089\115\069\115\054\111\080\115\090\072\117\070\055\113\099\049\066\097\077\083\116\086\047\075\120\066\120\103\066\090\054\090\083\050\088\100\118\068\052\088\089\055\067\117\110\104\098\089\086\089\103\056\075\097\104\109\098\113\054\088\113\087\055\098\109\106\080\057\112\121\102\070\050\074\088\073\111\119\047\069\099\056\055\079&quot;,&quot;\100\066\052\099\120\051\067\103&quot;,&quot;\072\120\090\075\105\074\100\071\053\070\088\120\083\114\086\067\066\120\084\061&quot;,&quot;\098\117\112\057\107\086\111\103\118\087\117\051\113\105\111\061&quot;;&quot;\115\103\120\117\067\120\100\115\057\110\103\107\110\088\110\121\122\111\049\055&quot;;&quot;\090\082\050\053\116\083\054\110&quot;;&quot;\053\069\051\106\110\099\043\074\065\112\088\070\049\048\090\053\108\053\069\043\118\090\112\097\082\052\072\080\051\100\061\061&quot;;&quot;\097\115\075\053\075\104\053\076\101\050\074\099\066\106\089\105&quot;;&quot;\119\054\111\108\113\105\085\109&quot;,&quot;\110\109\121\047\053\083\069\115&quot;;&quot;\076\083\055\111\109\050\117\071&quot;;&quot;\113\106\070\047\086\085\075\068\051\100\061\061&quot;,&quot;\101\066\107\084\069\066\086\113&quot;;&quot;\071\055\056\097\106\057\078\086\090\102\122\089\117\057\117\061&quot;,&quot;\080\118\082\100\069\066\110\061&quot;,&quot;\047\049\104\109\111\100\061\061&quot;;&quot;\069\117\101\079\043\109\082\117\073\112\111\121\115\109\112\067\050\066\105\086\108\049\109\043\089\047\115\061&quot;,&quot;\090\109\112\056\090\087\061\061&quot;,&quot;\043\110\103\100\051\082\084\084\099\089\074\107\048\083\100\061&quot;,&quot;\090\121\121\070\103\052\112\056\072\111\050\107\066\066\121\049&quot;;&quot;\053\118\057\053\071\047\066\114\049\085\080\119\117\100\071\070&quot;;&quot;\082\085\082\067\089\116\065\079\065\083\115\109\099\115\071\100\102\051\051\073\109\102\043\098\110\112\083\086\101\049\098\051\103\051\066\088\104\104\110\074\057\071\069\061&quot;;&quot;\105\115\103\074\043\120\103\086\053\053\088\048\086\071\053\067&quot;;&quot;\076\117\117\113\113\108\043\104&quot;,&quot;\103\071\053\111\100\071\088\055\043\120\103\076\090\066\085\061&quot;,&quot;\069\114\115\111\082\070\103\066\090\114\115\076\090\120\121\075\082\084\061\061&quot;,&quot;\090\052\051\074\072\052\053\109\114\111\054\067\105\074\121\071\083\066\054\114&quot;;&quot;\109\104\103\112\055\067\109\043\110\113\048\119\105\080\052\061&quot;,&quot;\043\066\121\111\069\071\080\061&quot;,&quot;\069\073\103\088\105\084\061\061&quot;,&quot;\077\069\055\099\072\111\075\076\097\114\068\083\065\080\061\061&quot;;&quot;\070\068\115\086\071\100\061\061&quot;,&quot;\074\051\054\055\043\109\103\112\119\087\061\061&quot;,&quot;\073\122\074\043\085\106\097\082\116\087\099\073\117\116\103\087&quot;,&quot;\081\084\090\066\085\106\071\087&quot;,&quot;\097\118\097\120\079\084\061\061&quot;;&quot;\105\111\089\057\054\105\088\069\049\107\105\074\080\057\069\061&quot;;&quot;\080\112\110\061&quot;;&quot;\087\114\057\057&quot;,&quot;\053\114\103\055\043\105\110\061&quot;,&quot;\105\121\101\073\079\052\112\067\090\073\086\114\079\052\103\069\072\080\061\061&quot;;&quot;\121\111\079\073\102\106\082\122\122\055\053\071\078\119\121\100\086\048\076\054\085\106\117\061&quot;,&quot;\082\052\055\090\090\105\088\114\072\052\048\112\101\115\103\048\105\115\085\061&quot;,&quot;\086\100\090\066\089\087\103\056\056\047\097\061&quot;;&quot;\083\090\110\089\116\116\047\079\099\051\050\051\081\099\102\098\079\103\102\088\117\113\100\088\104\107\115\061&quot;,&quot;\067\116\057\111&quot;;&quot;\066\075\099\081\115\070\070\081\090\107\114\061&quot;,&quot;\069\073\107\050\077\073\118\071\056\090\097\098\081\050\105\107&quot;;&quot;\073\099\066\048&quot;,&quot;\103\071\053\111\114\071\053\076\101\109\112\116\090\100\061\061&quot;;&quot;\066\075\073\103\079\076\115\067\074\084\061\061&quot;,&quot;\043\057\110\061&quot;;&quot;\088\089\084\056&quot;,&quot;&quot;,&quot;\050\097\108\112\078\083\113\071\057\110\084\090\119\052\105\078\071\050\115\103&quot;,&quot;\075\104\067\085\099\050\048\086\074\071\075\061&quot;;&quot;\097\108\052\107\097\112\121\110\102\084\047\089\050\048\112\052\052\051\114\099\071\087\061\061&quot;;&quot;\110\097\048\084\065\100\061\061&quot;,&quot;\069\073\112\111\090\100\061\061&quot;;&quot;\086\087\073\075\100\119\087\069&quot;;&quot;\055\108\098\115\055\049\112\107\116\106\106\080\103\080\061\061&quot;,&quot;\101\074\090\049\119\115\054\070\100\071\121\118\043\121\121\053&quot;,&quot;\090\070\086\051\069\080\061\061&quot;;&quot;\048\109\098\107\098\068\056\084\102\098\097\067\121\114\106\067\087\110\049\090\049\084\068\075\117\084\061\061&quot;,&quot;\083\115\082\107\053\073\086\069\082\105\089\083\105\114\101\072&quot;;&quot;\101\120\112\116\072\084\061\061&quot;;&quot;\070\087\067\088\071\101\075\083\109\102\082\054\090\110\052\113\107\053\086\056\074\087\061\061&quot;,&quot;\114\121\053\071\086\052\085\070\043\111\100\107\053\120\090\097&quot;,&quot;\051\072\118\104\117\068\055\118\066\098\043\051\083\056\052\061&quot;;&quot;\078\102\118\115&quot;;&quot;\089\084\102\109&quot;;&quot;\066\083\086\081\079\052\110\108\080\049\055\118\055\065\102\080\053\057\112\052\109\043\097\061&quot;,&quot;\080\066\090\100\049\074\120\103\051\087\061\061&quot;,&quot;\090\080\113\102\115\075\104\072\110\100\061\061&quot;,&quot;\073\071\113\099\051\080\061\061&quot;;&quot;\069\071\088\088\082\080\061\061&quot;,&quot;\090\071\051\088\101\120\086\097&quot;;&quot;\080\048\076\056\101\122\086\114\101\074\113\071\099\078\049\121\114\102\077\051\104\090\117\101&quot;,&quot;\048\122\113\049\052\066\114\085\099\073\076\100\100\077\105\066\115\081\055\101&quot;,&quot;\119\071\081\118\103\084\061\061&quot;;&quot;\117\074\086\090\100\112\103\090\079\105\101\067\086\105\103\079\101\070\087\061&quot;,&quot;\074\051\054\073\069\084\061\061&quot;,&quot;\067\066\080\073\085\080\061\061&quot;;&quot;\047\056\077\065\104\087\061\061&quot;,&quot;\072\120\051\067\119\105\082\071\119\105\100\107\072\071\088\049\114\052\097\061&quot;;&quot;\088\073\049\097\070\053\112\049\089\100\061\061&quot;;&quot;\071\119\102\084\074\122\068\070&quot;;&quot;\122\110\076\112\117\043\089\082\102\080\061\061&quot;,&quot;\111\099\118\068\053\103\084\049\084\080\061\061&quot;;&quot;\048\099\118\080\081\080\061\061&quot;;&quot;\101\071\121\055\101\087\061\061&quot;,&quot;\077\101\087\076&quot;;&quot;\090\112\115\111\119\052\075\085\079\111\103\099\086\120\112\089\069\080\061\061&quot;,&quot;\043\109\088\056\114\121\047\100\101\068\089\052\105\112\115\111\053\112\069\061&quot;,&quot;\082\071\097\051\083\121\114\085\069\053\103\050\100\073\089\110\103\080\061\061&quot;,&quot;\121\049\084\087\089\057\118\112\071\073\071\087\068\109\122\078&quot;;&quot;\074\100\061\061&quot;,&quot;\077\104\113\074\087\071\056\048\120\112\081\052\053\120\075\061&quot;;&quot;\103\106\107\108\052\080\061\061&quot;,&quot;\082\070\103\076\072\066\107\073&quot;;&quot;\090\071\053\111\074\071\051\049\090\120\053\075\074\071\103\088\101\120\115\061&quot;,&quot;\086\112\110\119\115\087\119\106\105\085\051\066\056\119\080\078\113\047\055\112\087\104\115\061&quot;;&quot;\053\075\100\103\097\107\104\086\110\098\103\109\047\119\076\085&quot;,&quot;\114\100\111\076\052\080\061\061&quot;,&quot;\065\066\066\105\103\085\085\110\121\080\061\061&quot;,&quot;\110\079\068\074\069\054\051\089\084\112\107\056\090\087\061\061&quot;,&quot;\087\104\068\089\086\098\050\112&quot;;&quot;\099\048\056\110\057\104\112\119\111\080\073\113\089\119\103\107\120\068\086\104\077\053\087\061&quot;;&quot;\047\048\076\110\069\068\097\122&quot;,&quot;\085\076\120\066\074\084\061\061&quot;;&quot;\077\053\066\066&quot;;&quot;\114\109\053\048\101\066\053\067\101\115\121\067\119\066\107\116&quot;,&quot;\114\067\082\071\069\116\089\053\090\070\086\078\053\066\047\118\105\121\100\061&quot;,&quot;\101\120\054\056\101\066\051\108\090\074\110\061&quot;;&quot;\090\109\048\049\043\070\110\061&quot;;&quot;\107\072\122\078\099\049\085\082&quot;;&quot;\043\074\089\075\101\114\069\084\090\066\080\111\103\109\112\075&quot;,&quot;\066\112\076\114\053\077\048\066\054\080\083\109\084\088\073\106\097\108\089\067\099\087\114\078\070\068\114\073\097\115\108\053\073\079\103\121\113\086\050\105\108\104\085\076\087\085\073\043\047\076\104\069\101\067\079\081\074\098\101\117\111\085\086\108&quot;;&quot;\083\110\048\068\106\101\048\051\100\071\083\117\102\099\085\061&quot;,&quot;\087\082\054\084&quot;;&quot;\101\084\061\061&quot;,&quot;\070\068\088\051\076\115\102\050\073\053\051\116\115\087\061\061&quot;,&quot;\088\119\071\072\099\083\111\078\066\113\067\048\084\114\072\073\084\088\111\061&quot;;&quot;\068\080\105\043\116\098\119\116\104\100\061\061&quot;;&quot;\083\108\080\112\090\099\097\055\083\080\061\061&quot;,&quot;\103\120\053\067\101\068\047\049\119\100\061\061&quot;;&quot;\119\077\118\051\102\070\057\070\085\066\066\051\116\118\115\056&quot;,&quot;\075\084\061\061&quot;,&quot;\076\103\120\067\088\098\068\085\109\118\078\043\118\043\114\061&quot;,&quot;\105\109\054\085\101\112\080\107\072\067\089\073\066\115\112\099&quot;;&quot;\103\102\121\075\067\048\075\118\122\112\088\072\120\073\054\104\120\115\110\089\082\051\099\057\113\110\057\073\051\116\083\090\088\087\061\061&quot;,&quot;\097\121\075\088\077\099\074\051\081\084\061\061&quot;;&quot;\082\109\115\070\105\071\100\051\082\112\047\115\119\114\054\097&quot;,&quot;\066\074\086\067\069\073\090\079\066\053\101\100\114\120\107\073\105\084\061\061&quot;,&quot;\115\108\097\099\068\087\050\113\078\074\098\117\111\072\113\100\101\090\116\099\113\085\088\078\074\076\097\061&quot;,&quot;\108\048\106\055\066\084\057\077\102\048\057\050\090\114\115\061&quot;;&quot;\077\116\066\103\067\103\087\084&quot;,&quot;\103\070\121\057\082\105\082\084\117\066\047\097\043\121\117\076&quot;,&quot;\077\099\053\118\071\043\057\118\114\052\112\074&quot;;&quot;\043\071\107\065\082\071\053\056\090\121\054\108\101\074\103\111\043\071\107\065\069\071\048\055\069\071\075\061&quot;;&quot;\114\110\077\065\098\084\061\061&quot;,&quot;\078\050\050\117\048\077\090\101\055\050\112\076\113\072\111\065\054\118\114\073\120\083\114\061&quot;,&quot;\109\100\061\061&quot;,&quot;\072\112\047\067\090\052\112\105\103\067\090\097\072\115\053\047\114\068\087\061&quot;,&quot;\072\105\086\103\053\057\088\057\114\114\050\103\043\114\050\066&quot;,&quot;\122\116\115\111\053\106\120\099\101\080\061\061&quot;;&quot;\083\080\061\061&quot;,&quot;\079\074\086\089&quot;,&quot;\043\087\070\113\071\120\057\084\107\047\112\099\102\086\066\065\102\076\076\112\113\117\078\047\082\104\047\119\068\121\081\105\067\116\079\081\073\101\118\085\104\100\090\057\071\053\067\105\100\043\076\080\108\055\099\077\080\085\114\072\074\103\071\076\055\108\086\110\106\082\074\100\117\049\076\084\098\097\110\106\089\043\113\121\056\084\081\066\117\101\083\087\108\080\109\077\099\114\112\102\085\056\107\065\081\087\116\115\068\087\116\113\072\077\122\089\111\083\102\080\116\089\109\106\121\067\076\079\087\074\113\090\117\073\056\099\116\043\104\068\084\047\103\080\099\099\109\120&quot;;&quot;\069\081\103\052\084\069\119\055\086\075\079\105\086\086\089\074\116\082\077\054&quot;,&quot;\067\066\049\056\109\119\052\106\082\087\061\061&quot;,&quot;\082\080\065\068\079\100\061\061&quot;,&quot;\043\120\053\056&quot;;&quot;\090\118\083\083\102\076\066\105&quot;,&quot;\082\071\053\111\043\066\053\111\069\074\103\088\069\109\048\112&quot;;&quot;\074\051\054\050\090\074\103\088\101\120\121\108\043\120\114\061&quot;,&quot;\087\090\057\065\077\054\110\068\073\090\066\051\082\077\114\061&quot;;&quot;\108\100\052\112\070\080\099\097\098\107\077\105\122\065\110\061&quot;;&quot;\117\120\097\104\107\077\090\119\105\084\061\061&quot;;&quot;\114\071\053\111\114\071\053\111\101\120\112\056\090\084\061\061&quot;,&quot;\052\112\081\057\105\086\109\052\051\098\077\089\113\108\103\107&quot;,&quot;\090\052\047\111\105\114\080\071\114\070\090\066\066\068\047\066\043\109\100\061&quot;,&quot;\068\049\078\068\057\100\061\061&quot;,&quot;\101\104\071\078&quot;;&quot;\053\115\055\104\114\116\101\110\079\068\101\105\114\070\053\114&quot;,&quot;\117\073\089\118\082\114\090\084\072\051\053\078\066\116\088\075\066\066\097\061&quot;;&quot;\043\073\089\052\078\084\061\061&quot;,&quot;\098\050\114\113\077\043\102\103\076\103\056\112\057\079\111\090\073\052\082\065\065\073\103\098\077\103\077\081\112\121\081\077\054\069\110\071\050\077\065\111\122\119\115\114\043\066\114\099\118\082\105\072\085\103\054\103\057\101\108\103\087\097\083\112\079\103\102\103\106\051\086\048\112\079\053\098\043\075\065\053\120\087\056\111\048\105\107\103\043\070\073\065\118\071\105\078\068\056\105\121\065\103\079\049\118\068\100\115\107\119\114\101\107\083\118\118\088\097\056\103\081\075\071\113\070\070\074\122\056\120\065\090\086\107\098\056\106\072\047\089\050\118\065\049\111\086\069\061&quot;,&quot;\122\072\070\074\050\084\061\061&quot;;&quot;\047\088\075\055\043\083\098\081\072\084\061\061&quot;;&quot;\117\111\112\121\053\051\117\061&quot;,&quot;\101\085\055\076\055\080\061\061&quot;;&quot;\043\120\055\066\072\120\053\052\083\115\053\115\079\120\080\048&quot;,&quot;\086\066\053\084\120\070\057\083\055\087\061\061&quot;,&quot;\082\084\113\119\053\090\109\098\087\088\106\073\047\099\077\097&quot;,&quot;\089\086\104\053\101\117\115\071\114\102\082\065\084\069\077\055\081\070\050\043\120\107\072\043\099\089\104\098\120\090\073\068\056\102\080\061&quot;;&quot;\086\112\110\085\103\067\088\051\086\111\112\120\119\052\053\074&quot;;&quot;\101\068\112\084\090\100\061\061&quot;,&quot;\100\105\098\068\121\107\097\052\067\111\077\061&quot;;&quot;\084\087\108\047\050\087\061\061&quot;;&quot;\105\097\116\111\080\052\069\051&quot;;&quot;\043\109\066\099\083\106\052\080&quot;,&quot;\085\081\086\077\088\074\117\116\043\100\061\061&quot;;&quot;\090\066\103\098\082\073\069\048\090\111\114\071\103\112\047\076\066\066\052\061&quot;;&quot;\048\081\082\103\080\057\106\099\086\089\077\055\101\108\106\084&quot;,&quot;\122\054\043\118\098\065\048\109\115\106\069\076\105\074\118\103&quot;,&quot;\085\075\043\087\075\111\056\099\054\101\105\089\054\070\066\103\084\084\061\061&quot;;&quot;\106\049\121\116\106\122\050\078\074\084\061\061&quot;,&quot;\103\071\053\111\053\120\053\085\101\121\086\055\119\109\114\061&quot;,&quot;\074\090\051\056\052\120\106\122&quot;;&quot;\100\071\054\056\043\109\053\116\101\087\061\061&quot;;&quot;\111\080\061\061&quot;;&quot;\074\051\054\075\090\066\085\061&quot;;&quot;\081\119\081\117\055\084\061\061&quot;;&quot;\050\050\116\057\051\080\061\061&quot;;&quot;\049\055\073\108\103\080\061\061&quot;;&quot;\100\111\052\051\086\105\086\121\086\052\101\115\103\057\101\112\043\084\061\061&quot;;&quot;\097\057\114\106\104\118\107\067\065\103\114\120\111\111\074\100\112\099\117\073\099\087\070\098\099\067\110\061&quot;,&quot;\067\111\067\070\084\116\056\065\098\047\066\049\089\054\055\088\052\047\099\120\120\051\105\053\100\114\079\121\081\069\078\076\098\090\107\048\103\084\083\117\112\118\071\102\113\050\065\122\103\082\116\076\065\057\098\107\101\088\079\043\107\098\049\112\118\067\077\118\088\077\105\109\067\117\102\048\081\080\061\061&quot;,&quot;\078\071\119\069\068\115\067\086\121\052\069\101\071\080\071\105\068\105\120\100\089\122\111\084\101\066\114\109\071\047\107\079\097\109\065\056\053\097\085\117\057\118\048\071\099\116\082\121\053\114\112\068\115\086\067\077\055\114\104\115\100\051\100\112\056\100\061\061&quot;,&quot;\098\081\115\097\052\086\053\086\078\084\061\061&quot;,&quot;\072\052\086\067\069\073\090\102\101\051\100\067\117\053\053\111&quot;;&quot;\106\065\085\087\080\104\071\049\104\086\101\077\086\117\074\066\108\068\110\120\106\087\085\118\079\068\051\043\111\107\111\085\075\119\103\122\122\075\087\097\101\054\113\097\100\054\048\102\068\097\100\100\075\085\080\111\078\113\098\055\104\077\071\080\067\071\122\089\119\115\082\113\056\116\105\068\084\103\066\106\112\122\108\054\047\068\112\117\117\053\122\080\052\066\102\088\077\088\083\081\118\105\043\115\056\100\061\061&quot;,&quot;\103\047\081\083\084\080\100\067\074\052\073\052\106\110\070\085&quot;;&quot;\114\086\104\071\077\104\076\051\105\080\061\061&quot;;&quot;\066\115\082\084\082\074\090\099\083\057\090\112\100\112\110\085\082\112\115\061&quot;,&quot;\121\081\070\052\071\104\115\117\070\057\073\119\049\070\072\097\090\053\047\047\070\080\061\061&quot;,&quot;\114\066\047\089\082\109\050\110\105\053\121\102\082\105\090\097\072\080\061\061&quot;;&quot;\081\052\079\121&quot;,&quot;\113\047\078\113\089\068\047\112\082\057\073\111\047\049\069\114&quot;,&quot;\101\071\121\076\043\080\061\061&quot;,&quot;\115\068\122\112\121\098\097\118\071\043\111\099\057\065\050\048\119\120\108\043\071\065\086\101\113\047\078\043\111\101\085\097&quot;;&quot;\101\116\083\118\103\120\054\102&quot;;&quot;\056\067\121\105\122\087\104\116\121\075\057\051\066\087\061\061&quot;;&quot;\072\079\080\116&quot;,&quot;\082\111\112\089\105\066\121\052\100\071\103\085\100\067\086\051\053\087\061\061&quot;;&quot;\119\057\070\078\098\100\061\061&quot;,&quot;\054\084\088\048\047\065\090\113\077\084\070\057&quot;,&quot;\054\072\097\076\100\085\107\085\117\121\103\078\113\067\120\075\047\119\074\106\102\090\069\115\099\117\118\101\099\110\080\054\051\051\120\115\050\099\075\049\051\097\089\110&quot;,&quot;\052\065\085\047\084\087\061\061&quot;,&quot;\078\066\057\082&quot;,&quot;\083\053\067\088\054\106\113\117\057\067\085\085\065\048\055\072\112\048\049\054\108\048\075\061&quot;;&quot;\069\079\065\112\086\085\052\050\067\120\117\048\104\076\052\055\053\080\061\061&quot;;&quot;\088\120\103\102\071\055\054\075&quot;;&quot;\102\090\052\107\107\051\108\071\112\113\050\087\115\055\114\118\068\098\084\089\107\083\122\072\050\071\073\119\084\097\072\107\069\102\085\047\071\101\089\119\085\113\121\074\107\103\105\079\089\052\109\049\108\101\099\072\067\073\073\107\080\075\067\081\081\080\061\061&quot;;&quot;\089\068\084\081\053\043\079\088&quot;;&quot;\067\080\098\076\056\120\084\078\043\077\119\068\073\105\114\120\108\111\114\077\116\122\076\085\070\080\112\109\089\109\109\050\048\051\067\109\109\084\061\061&quot;;&quot;\101\081\086\114\107\043\054\050\047\107\102\069\075\100\070\113\117\087\061\061&quot;,&quot;\065\105\116\105\107\088\069\066\075\047\070\071\075\117\049\057\107\043\110\074\054\051\054\106\070\075\108\090\054\055\086\067\057\051\116\109\105\043\114\055\072\120\114\081\106\084\047\099\105\118\101\057\120\065\082\083\097\072\055\113\104\122\067\113\051\054\068\116\098\066\068\122\106\119\081\049\101\071\113\051\122\112\116\105\117\104\080\097\106\070\103\105\102\073\054\047\104\072\084\084\114\077\067\055\084\078\110\048\085\114\054\078\055\097\078\086\085\087\061\061&quot;;&quot;\053\120\121\050\082\120\053\076\110\115\103\112\101\120\053\116\101\120\053\052\110\100\061\061&quot;,&quot;\047\109\115\109\122\089\110\072\110\104\111\061&quot;;&quot;\097\056\089\071\105\084\061\061&quot;;&quot;\082\071\086\076\072\074\089\111&quot;;&quot;\043\066\121\111\072\087\061\061&quot;;&quot;\107\085\086\043\082\070\047\073\117\087\061\061&quot;;&quot;\090\071\121\050\090\100\061\061&quot;,&quot;\098\052\081\101\047\097\120\103\069\084\061\061&quot;;&quot;\043\057\115\061&quot;;&quot;\101\120\121\108\043\120\114\061&quot;;&quot;\071\107\119\116\066\049\082\122\076\056\052\061&quot;;&quot;\100\071\048\049\043\109\114\061&quot;;&quot;\047\053\122\111\100\086\099\081\090\078\101\079\054\065\077\061&quot;,&quot;\069\067\089\121\103\109\055\076\079\051\047\078\086\111\100\051\100\105\110\061&quot;;&quot;\073\055\117\099\120\080\066\110&quot;,&quot;\110\053\049\098\043\080\115\097&quot;;&quot;\043\121\103\113\072\051\086\111\090\052\090\097\043\071\090\068&quot;,&quot;\102\115\112\070\088\102\057\101\073\051\049\107\075\081\067\075&quot;,&quot;\114\072\115\106\120\087\061\061&quot;;&quot;\119\109\090\084\082\115\101\117\082\115\115\085\114\105\089\084\069\080\061\061&quot;,&quot;\107\077\104\099\111\114\073\120\102\072\080\111\075\120\054\056\083\099\080\109\105\051\110\061&quot;,&quot;\098\075\071\070\067\078\072\043\097\080\061\061&quot;,&quotquot;,&quot;\105\100\061\061&quot;,&quot;\079\103\107\056\069\052\074\070&quot;;&quot;\113\098\076\083\119\121\072\085&quot;,&quot;\122\067\084\101\122\114\068\056\077\115\051\088\107\117\120\106\051\080\073\120\071\072\079\118\073\102\054\107\043\089\054\118\100\043\118\068\075\054\066\104\079\073\119\083\116\054\114\119\054\080\061\061&quot;,&quot;\117\117\089\122\104\069\048\048\053\087\061\061&quot;;&quot;\071\117\090\098\120\101\048\102&quot;;&quot;\085\067\106\050\090\052\102\085&quot;,&quot;\086\067\103\083\105\068\097\071\105\067\103\073\082\067\103\103&quot;,&quot;\076\043\114\069\043\084\061\061&quot;,&quot;\053\073\104\087\085\087\061\061&quot;,&quot;\111\053\104\097\118\067\122\104&quot;,&quot;\116\084\122\120\071\073\078\082\122\120\082\104\105\071\049\090\074\067\084\061&quot;;&quot;\090\074\047\076\043\070\110\061&quot;;&quot;\097\084\077\082\101\077\109\085&quot;;&quot;\053\109\053\116\101\120\054\076\117\080\061\061&quot;,&quot;\106\111\090\099\057\067\074\107\076\087\055\048\079\043\102\120\082\056\118\057\084\082\112\054\073\116\085\061&quot;,&quot;\069\071\054\056\069\071\121\111&quot;;&quot;\079\112\086\102\105\052\103\112\069\071\054\052\090\100\061\061&quot;,&quot;\085\116\087\088\119\103\088\120\110\073\113\122\112\119\087\054\078\100\061\061&quot;,&quot;\057\109\088\103\050\098\104\055&quot;;&quot;\122\110\102\107\053\077\110\049\105\079\101\112\087\120\054\100&quot;,&quot;\108\084\061\061&quot;;&quot;\071\097\070\052\074\074\112\053&quot;;&quot;\070\083\080\122\075\099\117\120\087\056\106\107\077\053\082\061&quot;;&quot;\074\082\107\088\100\116\066\066\066\089\102\112\052\087\061\061&quot;;&quot;\055\116\108\080\067\080\061\061&quot;,&quot;\120\086\115\043\083\084\061\061&quot;;&quot;\101\120\121\067\072\084\061\061&quot;,&quot;\101\049\085\080&quot;;&quot;\105\121\090\111\053\053\088\121\100\105\047\115\114\071\088\117\053\100\061\061&quot;;&quot;\102\107\116\103\103\050\073\083&quot;,&quot;\109\077\087\108\069\087\061\061&quot;,&quot;\082\109\053\048\101\066\112\076\090\100\061\061&quot;;&quot;\090\110\054\090\112\111\105\090\048\086\085\061&quot;,&quot;\086\111\112\057\114\074\053\086\114\068\055\120\117\120\103\050&quot;,&quot;\047\113\073\099\065\072\100\048\071\071\048\098\100\054\111\087\118\057\082\061&quot;,&quot;\049\050\056\106\119\069\075\083\053\109\049\087\102\112\115\082&quot;,&quot;\049\055\043\073\050\113\081\121&quot;;&quot;\103\071\121\097\086\071\075\111\086\073\088\084\105\105\088\104&quot;;&quot;\100\054\074\111\114\076\075\047&quot;;&quot;\082\111\102\122\122\080\061\061&quot;;&quot;\055\089\103\049\080\087\061\061&quot;,&quot;\078\099\085\086\074\077\121\083\105\115\078\085\103\118\088\049&quot;;&quot;\103\122\065\115\053\080\061\061&quot;,&quot;\082\109\053\050\043\070\090\112&quot;,&quot;\053\074\089\052\069\074\103\112\114\071\054\051\082\109\086\112\100\074\086\107\043\109\117\061&quot;;&quot;\100\050\109\090\066\066\065\088\075\069\105\049\075\054\098\112\057\071\116\075\085\102\070\047\078\073\072\054\049\057\105\121\089\043\052\102\099\075\051\110&quot;,&quot;\105\121\051\084\072\107\122\098\083\073\112\087\111\076\114\076&quot;;&quot;\080\109\087\088\048\076\070\083\100\100\061\061&quot;,&quot;\051\081\107\122\050\113\053\073\110\081\110\057\075\112\076\088\074\065\069\114\120\106\101\081\073\065\115\104\082\084\061\061&quot;,&quot;\043\070\117\061&quot;,&quot;\121\112\069\111\109\105\073\118&quot;,&quot;\080\043\106\079\115\117\115\083\072\080\061\061&quot;,&quot;\088\116\051\118\071\080\061\061&quot;,&quot;\119\071\055\052\105\050\088\109\115\081\083\110\067\056\085\061&quot;,&quot;\078\084\104\097\090\085\106\115\055\056\086\070\052\115\077\103\069\108\080\057\070\104\100\099\065\120\054\077\056\121\066\105\067\055\117\116\116\080\061\061&quot;;&quot;\115\098\117\056\070\073\082\087\106\086\104\080\119\080\109\073\047\084\061\061&quot;;&quot;\114\068\112\056\101\120\086\113\114\120\103\083\090\074\090\089\072\080\061\061&quot;;&quot;\086\056\100\068\105\080\061\061&quot;;&quot;\057\065\050\111\068\073\108\047\113\065\089\049\073\119\057\088\047\077\043\099\055\070\116\101\100\113\117\061&quot;,&quot;\103\071\053\111\114\071\053\111\101\120\112\056\090\084\061\061&quot;;&quot;\114\071\078\076\116\069\100\043\080\121\117\061&quot;,&quot;\117\116\089\053\069\051\121\079&quot;,&quot;\085\055\111\111\072\053\107\112\083\106\105\117\048\054\112\105\072\105\087\081\065\085\090\108\069\055\085\101\065\052\110\061&quot;;&quot;\068\109\087\085\084\071\074\067&quot;;&quot;\107\088\065\075\048\047\072\113\085\100\061\061&quot;;&quot;\104\083\114\089\047\109\112\076\053\069\098\071\049\072\068\066\121\056\052\081\102\105\103\053&quot;;&quot;\082\105\066\112\106\075\110\067&quot;}local function J(J)return p[J+(-46031-(-66061))]end for J,i in ipairs({{-927703-(-927704);-368414-(-368756)};{239389+-239388;512323-512204},{460493-460373,389401-389059}})do while i[608239+-608238]&lt;i[-229782-(-229784)]do p[i[931037-931036]],p[i[-633293-(-633295)]],i[342199-342198],i[1006374+-1006372]=p[i[760025+-760023]],p[i[-121875+121876]],i[417916+-417915]+(-587298-(-587299)),i[365974+-365972]-(574139-574138)end end do local J={[&quot;\049&quot;]=904056+-904009;[&quot;\055&quot;]=530626+-530585;t=989334-989299,X=678184-678151,f=-135427-(-135442),P=635837-635805,r=-460170-(-460190);Z=702154+-702129,z=-656186-(-656248);l=-895818-(-895852),E=17579+-17555;x=139389+-139383;b=182989+-182931,C=-550853+550904,[&quot;\052&quot;]=-925729-(-925765),g=-557532-(-557549);L=-977713+977763;p=-378943-(-378980);O=-47279-(-47297),I=-924905+924944,T=671220+-671172;[&quot;\051&quot;]=91114+-91061,S=868059+-868045;Q=-637793-(-637856);d=51613-51597,c=-400443-(-400445);y=-604751+604756;M=653352+-653292,[&quot;\057&quot;]=629188+-629185,s=571112+-571108;n=527165-527157;K=-843941+843985,[&quot;\047&quot;]=-119065-(-119074),[&quot;\043&quot;]=-275367-(-275394);h=411753+-411711;v=12504+-12494,D=-731496-(-731503),B=-80625+80647,G=299646+-299592;[&quot;\053&quot;]=805974+-805953;[&quot;\050&quot;]=646384-646339;a=1037617+-1037577;k=616802+-616745,i=381908+-381889;V=-50410-(-50423);U=-258823-(-258879);j=994191+-994132,u=-182374-(-182386);H=-489344-(-489370),m=-668266+668304;[&quot;\054&quot;]=525019+-524958,N=443888+-443877,R=54902-54874,e=184651+-184622;[&quot;\056&quot;]=527882+-527836;A=-867146-(-867177),F=295528-295473;Y=-524585+524586,[&quot;\048&quot;]=68302+-68253,q=775061-775018,o=457598-457546;w=120474-120444;J=277753-277730;W=-323740-(-323740)}local i=string.sub local l=string.len local a=table.insert local r=table.concat local w=string.char local c=type local d=p local Q=math.floor for p=396126-396125,#d,-610492-(-610493)do local f=d[p]if c(f)==&quot;\115\116\114\105\110\103&quot;then local c=l(f)local F={}local u=-95044-(-95045)local N=936240-936240 local U=406456+-406456 while u&lt;=c do local p=i(f,u,u)local l=J[p]if l then N=N+l*(-861478-(-861542))^((-540631-(-540634))-U)U=U+(824182+-824181)if U==788916-788912 then U=360007-360007 local p=Q(N/(284508+-218972))local J=Q((N%(-466161-(-531697)))/(-533865+534121))local i=N%(451-195)a(F,w(p,J,i))N=870316-870316 end elseif p==&quot;\061&quot;then a(F,w(Q(N/(-457743-(-523279)))))if u&gt;=c or i(f,u+(617651-617650),u+(-15228-(-15229)))~=&quot;\061&quot;then a(F,w(Q((N%(246708-181172))/(553751+-553495))))end break end u=u+(572433+-572432)end d[p]=r(F)end end end return(function(p,l,a,r,w,c,d,F,Q,L,i,I,y,Y,f,s,B,U,M,h,j,N,Z,u)s,Q,i,U,Z,B,f,j,N,F,u,I,Y,y,M,h,L=function(p,J)local l=N(J)local a=function(a,r,w,c,d,Q,f)return i(p,{a;r,w;c;d,Q,f},J,l)end return a end,{},function(i,a,r,w)local D,rC,q,h,O,T,H,t,G,n,R,g,C,lC,JC,z,f,u,K,pC,V,U,iC,S,cC,wC,v,m,E,b,k,N,e,o,A,P,X,W,aC,d,x while i do if i&lt;7068478-(-588294)then if i&lt;595308+2632510 then if i&lt;722628+1077815 then if i&lt;365463+842198 then if i&lt;-1033285+2032567 then if i&lt;-542117-(-741245)then if i&lt;603309+-453637 then if i&lt;520873-381503 then i=1920859-731839 b=34232+-34230 X=z[b]b=Q[o]e=X==b pC=e else P=J(33728-53748)K=J(-525467+505776)q=p[P]v=780653+29795973237957 k=Q[r[-414826+414828]]C=Q[r[631191+-631188]]i=n and 196885+15975447 or-711834+11424291 D=C(K,v)W=k[D]k=Q[x]P=q(W,k)end else E=Q[r[-394166+394167]]H=J(674208-694043)V=Q[r[-1011193+1011195]]q=458237+6430648847797 i=698836+11749926 x=V(H,q)g=E[x]O=g end else if i&lt;733479+-15439 then if i&lt;904656-663023 then d=Q[r[625532-625528]]E=33280271838766-(-1003099)m=Q[r[-468969+468971]]O=Q[r[-241130-(-241133)]]g=J(-692045+672106)R=O(g,E)t=m[R]i=d[t]d=i()i=true A=d n=i i=-1028787+7600366 else N=Q[r[979284+-979278]]u=N==f d=u i=262110+8515560 end else lC=Q[D]cC=14555444383921-783928 b=i iC=Q[r[26180+-26178]]aC=Q[r[728335-728332]]wC=J(-953218-(-933361))rC=aC(wC,cC)JC=iC[rC]S=lC[JC]G=not S X=G i=G and 9781800-188400 or 15850237-363925 end end else if i&lt;377643+728110 then if i&lt;934520+107112 then if i&lt;1000666-(-33599)then x=22035160199176-247796 m=Q[f]R=Q[r[-44646+44647]]g=Q[r[-71910+71912]]V=J(1036944+-1056855)E=g(V,x)V=27612218538091-(-1014222)O=R[E]t=m[O]O=Q[r[-1001638+1001639]]R=Q[r[-797821+797823]]E=J(-1000308+980490)g=R(E,V)m=O[g]E=11902536231824-824810 n=t[m]m=Q[r[835961+-835960]]g=J(-81922-(-61980))O=Q[r[-153376+153378]]R=O(g,E)t=m[R]A=n[t]R=J(-523938+503914)t=Q[r[-22436-(-22437)]]g=3362659955723-(-594450)m=Q[r[451911+-451909]]O=m(R,g)n=t[O]g=7968514414926-(-619824)d=A[n]R=33626457056126-(-678316)O=J(-335193-(-315340))n=Q[r[935443+-935442]]t=Q[r[19778-19776]]m=t(O,R)R=J(812908+-832743)A=n[m]t=Q[r[-218805-(-218806)]]m=Q[r[947036+-947034]]O=m(R,g)n=t[O]d[A]=n d=Q[r[820972+-820966]]n=Q[f]t=Q[N]A=d(n,t)A=J(156698-176599)d=p[A]t=L(7788840-495128,{r[-255859-(-255866)],f;N;h;U})m={d(t)}A=m[-233049+233050]n=m[-750659+750661]d=not A i=d and 13378346-467806 or 11406505-27495 else i=true i=i and 8288175-646735 or 4183747-329198 end else d=U i=U and 3365487-264584 or 9327846-404878 end else if i&lt;904085-(-248232)then d=J(866904+-886679)i=p[d]m=j(-519132+2113943,{})t=J(43964+-63865)f=Q[r[511481-511477]]U=J(928304-948211)N=p[U]n=p[t]t={n(m)}n=605944+-605942 A={l(t)}h=A[n]U=N(h)N=J(-911688-(-891924))u=f(U,N)f={u()}d=i(l(f))u=Q[r[870667+-870662]]i=u and 688772-239654 or 8436562-(-341108)f=d d=u else d=pC i=T i=745007+1196365 end end end else if i&lt;997385+603145 then if i&lt;-302283+1650096 then if i&lt;927585-(-392495)then if i&lt;430498-(-795238)then S=10814563083819-(-159104)e=Q[r[-1371-(-1373)]]aC=513180689248-41586 G=J(76589+-96423)X=Q[r[-346046+346049]]b=X(G,S)T=e[b]G=J(232902+-252637)pC=f[T]e=Q[r[105097-105095]]X=Q[r[-1017937-(-1017940)]]S=7631035800270-(-733971)b=X(G,S)T=e[b]iC=J(310077+-329974)z=pC[T]pC=F()Q[pC]=z z=Q[r[851806-851797]]T=z(f)z=F()Q[z]=T b=Q[z]S=Q[r[-618190-(-618192)]]lC=Q[r[175736+-175733]]JC=lC(iC,aC)iC=436793+32484584050909 G=S[JC]X=b[G]G=Q[r[-743280+743282]]JC=J(268632-288616)S=Q[r[-934637-(-934640)]]lC=S(JC,iC)JC=14730545584377-(-393682)b=G[lC]lC=J(513190+-533199)e=X[b]b=Q[r[157085-157083]]G=Q[r[-510760+510763]]S=G(lC,JC)X=b[S]aC=681819+26056316127242 T=e[X]e=J(225176-244874)X=j(4854491-819088,{r[497350+-497340],m,pC,z,r[-137385-(-137387)],r[-1026024-(-1026027)]})e=T[e]e=e(T,X)b=Q[z]iC=J(-407649-(-387676))S=Q[r[-501814+501816]]lC=Q[r[463107-463104]]JC=lC(iC,aC)G=S[JC]iC=-878377+19335664601684 JC=J(737732-757587)X=b[G]G=Q[r[588163+-588161]]S=Q[r[-931797+931800]]lC=S(JC,iC)b=G[lC]JC=2657972960389-161712 lC=J(556705-576686)e=X[b]b=Q[r[-161105+161107]]G=Q[r[-173806-(-173809)]]S=G(lC,JC)X=b[S]T=e[X]X=Y(2491299-(-277190),{r[908460-908450],m,D,r[90132-90130];r[746586-746583],z})e=J(248908-268606)e=T[e]e=e(T,X)b=B(-194009+11803659,{r[1020067-1020057];m,D;r[548518+-548516],r[-707447+707450]})e=J(193343+-213244)T=p[e]G={T(b)}X=G[343187+-343185]e=G[-412594-(-412595)]T=not e i=T and 15763659-(-224169)or 13309659-622163 else N=474570+-474570 f=J(68214+-88180)i=p[f]u=Q[r[588362-588354]]f=i(u,N)i=135935+3132478 end else E=-371859+23102927984281 g=J(-565898-(-546092))h=N m=Q[r[321426+-321424]]O=Q[r[-251518+251521]]R=O(g,E)t=m[R]n=A[t]i=n==f i=i and 11460345-110850 or 9828910-451479 end else if i&lt;336289+1241923 then if i&lt;652980-(-790738)then i=d and-277373+514848 or 5663392-(-908187)else N=685573+-685368 u=Q[r[197126+-197124]]f=u*N u=10240378840083-(-896652)d=f+u u=-242094+242095 f=35184371096812-(-992020)i=d%f Q[r[-7349-(-7351)]]=i f=Q[r[1005765+-1005762]]i=532780+12530521 d=f~=u end else u=J(221153-241015)N=7388314-(-549987)f=u^N d=-15612+6094368 i=d-f d=J(62245-81963)f=i i=d/f d={i}i=p[J(-440314-(-420490))]end end else if i&lt;572955+1157254 then if i&lt;2144146-440941 then if i&lt;681714+995540 then q=R==g H=q i=6488118-141150 else h=Q[r[545515-545511]]U=u&gt;=h i=-413462+15838648 d=U end else O=Q[r[925260+-925258]]R=Q[r[194322-194319]]E=J(118850-138804)V=17437003994889-882514 g=R(E,V)m=O[g]i=2108575-700526 t=h[m]d=t end else if i&lt;-45728+1830310 then o=J(569890+-589910)C=p[o]z=Q[P]o=C(z)o=J(880876-900896)C=p[o]o=C(N)o=J(-218468+198448)C=p[o]z=Q[q]o=C(z)o=J(1013587+-1033607)C=p[o]i=p[J(974716+-994428)]z=Q[D]JC=770588+23860708125003 o=C(z)lC=J(-11250+-8472)o=J(306601-326621)b=J(529299-549254)C=p[o]o=C(v)G=27331373459132-(-297723)C=Q[r[-490895-(-490900)]]T=Q[r[-324720-(-324722)]]e=Q[r[110106-110103]]X=e(b,G)pC=T[X]b=Q[r[-595764+595766]]G=Q[r[-878355+878358]]d={}S=G(lC,JC)X=b[S]e=h[X]b=Q[r[-947696-(-947698)]]lC=J(-137206+117516)JC=21670020687623-(-557155)G=Q[r[-1018325+1018328]]S=G(lC,JC)X=b[S]b=-195533+7099509639350 T=e..X z=pC..T o=C(f,z)o=J(998812-1018832)C=p[o]pC=Q[r[479417-479415]]T=Q[r[-691889-(-691892)]]X=J(-385763+365784)e=T(X,b)z=pC[e]b=3606827911720-902041 o=C(z)o=J(-973334-(-953314))C=p[o]pC=Q[r[-921851-(-921853)]]T=Q[r[914291-914288]]X=J(-763706+743704)e=T(X,b)z=pC[e]o=C(z)else P=J(421233-441140)i=p[P]k=J(-153786-(-133793))W=p[k]P=i(W)i=J(105943-125780)p[i]=P i=5590748-(-368302)end end end end else if i&lt;1023902+1365951 then if i&lt;2016220-(-24248)then if i&lt;2563848-669817 then if i&lt;1078893-(-807124)then if i&lt;-659625+2506573 then i=5722021-803782 O=Q[r[1004644+-1004643]]R=Q[r[724004+-724002]]V=565285+26961130737893 E=J(-401047-(-381346))g=R(E,V)m=O[g]O=f t[m]=O else C=J(348476-368496)q=p[C]pC=-291470+20675393263657 z=J(940697+-960455)K=Q[r[-877967-(-877969)]]v=Q[r[-769576+769579]]o=v(z,pC)z=J(12614+-32354)D=K[o]C=q(D,k)d={}pC=40242+21805023480439 q=Q[r[-927076-(-927081)]]K=Q[r[-447197+447199]]v=Q[r[939802+-939799]]i=p[J(-635500+615579)]o=v(z,pC)D=K[o]C=q(f,D)end else i=true i=i and 749353+9903587 or 3264067-(-767039)end else if i&lt;1237194-(-731840)then if i&lt;-380059+2304312 then i=o i=C and-833246+2593573 or 6003760-(-781339)else Q[u]=d i=-136370+7210715 end else V=x D=V E[V]=D V=nil i=1701432-(-935739)end end else if i&lt;2427862-146690 then if i&lt;461916+1775983 then if i&lt;1665008-(-564139)then i=H E=J(-244403-(-224577))E=O[E]E=E(O,V,x)Q[R]=E D=23153730035841-(-969116)x=Q[r[-482615-(-482617)]]k=-158364+12775930315225 P=J(933960+-953882)W=403754+32482775781867 H=Q[r[-242435+242438]]q=H(P,W)V=x[q]O=h[V]W=J(-5091-14737)V=O(A)O=F()Q[O]=V C=J(-753439-(-733751))H=Q[r[38976-38974]]q=Q[r[-907793+907796]]P=q(W,k)x=H[P]V=h[x]P=Q[r[676134-676132]]W=Q[r[-38462-(-38465)]]k=W(C,D)q=P[k]H=f[q]x=V(H,N)H=J(267092+-286993)V=F()P=I(-126124+5404973,{r[808107+-808100];r[122320+-122318];r[-951529-(-951532)];R;O;V})Q[V]=x x=p[H]W={x(P)}H=W[276293-276292]x=F()q=W[606731-606729]Q[x]=q q=not H i=q and 877312-727758 or 321687+15322493 else g=J(467845-487717)P=J(877851-897847)E=334971+2734505846910 m=Q[r[-724-(-726)]]O=Q[r[332667+-332664]]R=O(g,E)t=m[R]m=Q[r[753679+-753673]]O=m(f)f[t]=O g=J(465326-485255)m=Q[r[-131109+131111]]O=Q[r[1016194+-1016191]]E=888490+10422536275019 R=O(g,E)t=m[R]O=J(462545+-482368)m=p[O]O=m()f[t]=O g=J(1023008+-1042997)m=Q[r[856174-856172]]E=1521691527136-263452 O=Q[r[1002237+-1002234]]x=27753558793616-584469 R=O(g,E)t=m[R]H=7037565732053-112648 m=true V=439082402890-(-965762)E=J(-635471+615587)f[t]=m O=Q[r[-593867+593869]]R=Q[r[189953+-189950]]g=R(E,V)m=O[g]t=f[m]m=F()Q[m]=t R=Q[r[481414-481412]]q=-310329+5269501216206 V=J(56017+-75955)g=Q[r[-372238+372241]]E=g(V,x)x=J(312613+-332418)O=R[E]g=Q[r[390120-390118]]E=Q[r[897329-897326]]V=E(x,H)H=J(-471355-(-451429))R=g[V]E=Q[r[942449-942447]]V=Q[r[81441-81438]]x=V(H,q)H=284746+34347862599216 g=E[x]t={[O]=R;[g]=u}x=J(155499+-175300)W=-216492+20500018311926 g=Q[r[-601209-(-601211)]]E=Q[r[277421+-277418]]V=E(x,H)R=g[V]O=f[R]x=Q[r[-391300+391302]]H=Q[r[-410639+410642]]q=H(P,W)V=x[q]E=f[V]g=#E E=-1029163+1029164 R=g+E g=t O[R]=g W=J(853487+-873189)g=Q[r[499092+-499090]]x=J(-780204-(-760494))E=Q[r[436948-436945]]P=3830+29840372901713 H=28344257494236-18766 V=E(x,H)R=g[V]g=J(-885098+865272)O=h[R]R=F()Q[R]=O O=Q[R]q=J(-417103-(-397090))V=Q[r[344216+-344214]]x=Q[r[983129+-983126]]H=x(q,P)E=V[H]g=O[g]H=Q[r[548509-548507]]q=Q[r[930453+-930450]]k=-807854+17367685575493 P=q(W,k)x=H[P]V=f[x]g=g(O,E,V)Q[R]=g P=J(128409-148299)W=34774906536560-(-261329)O=Q[R]x=Q[r[800281-800279]]H=Q[r[536142-536139]]q=H(P,W)V=x[q]x=A H=i i=A and 1911149-(-256807)or 881031+9824512 end else i=Q[r[611666-611665]]f=Q[r[607077+-607075]]d=i(f)Q[r[-956827+956830]]=d i=p[J(-940782+920961)]d={}end else if i&lt;295716+2085086 then i=Q[r[-808404+808411]]i=i and 859455+430088 or-401728+3670141 else d=Q[r[172122+-172121]]n=164899+16511872539109 f=a[229920+-229919]N=Q[r[495050+-495048]]U=Q[r[-437915+437918]]A=J(774107-793897)h=U(A,n)u=N[h]i=d[u]d={i}i=p[J(-272818+252874)]end end end else if i&lt;3477054-546292 then if i&lt;100157+2596454 then if i&lt;3636716-1000447 then if i&lt;-85496+2679832 then N=-864443+864475 u=Q[r[292179+-292176]]i=15623059-484846 f=u%N R=193059-193046 U=Q[r[-139188-(-139192)]]m=-492700-(-492702)n=Q[r[8276-8274]]V=Q[r[-4244+4247]]E=V-f V=-135847+135879 g=E/V O=R-g t=m^O A=n/t h=U(A)U=-506117+4295473413 N=h%U h=-481765+481767 U=h^f u=N/U t=-627389-(-627390)U=Q[r[30688-30684]]f=nil n=u%t t=4295646916-679620 A=n*t n=1032161-966625 h=U(A)U=Q[r[444335+-444331]]A=U(u)N=h+A h=278286-212750 U=N%h A=N-U h=A/n u=nil n=77404+-77148 R=-422817+423073 A=U%n t=U-A m=-138570-(-138826)n=t/m m=-666850+667106 t=h%m N=nil O=h-t m=O/R O={A;n,t,m}m=nil U=nil n=nil Q[r[-684786+684787]]=O A=nil t=nil h=nil else W=J(-771996-(-752095))q=nil P=F()C=L(689626+3188631,{r[-50169+50176],x,r[-466330+466332];r[652246+-652243],P})Q[P]=q q=p[W]D={q(C)}k=D[-607763-(-607765)]W=D[-430173-(-430174)]q=not W i=q and 341093+1537363 or 2358467-(-920983)end else x=x+k V=x&lt;=W D=not C V=D and V D=x&gt;=W D=C and D V=D or V D=-1009148+2986115 i=V and D V=4411142-736872 i=i or V end else if i&lt;2039415-(-859158)then if i&lt;69777+2806079 then u=Z(-958735+10627681,{r[993976-993973];r[484093+-484089],r[-559506-(-559511)]})A=J(122193+-142179)i=Q[r[-425063-(-425064)]]d=J(-147904+127971)f=Q[r[500576-500574]]d=i[d]n=-355782+15722204072543 d=d(i,f,u)f=Q[r[-592728-(-592734)]]N=Q[r[231993-231989]]U=Q[r[335248-335243]]h=U(A,n)u=N[h]d=f[u]u=Q[r[-468712+468716]]N=Q[r[730439-730434]]A=34705542510038-997045 h=J(-946869-(-927083))U=N(h,A)n=730004+5529753249402 f=u[U]i=d[f]f=Q[r[-991863-(-991867)]]u=Q[r[501184-501179]]U=J(-789402+769659)h=165852+10759266143158 A=J(839732-859534)N=u(U,h)d=f[N]f=true i[d]=f f=Q[r[835832-835826]]N=Q[r[-771653+771657]]U=Q[r[512717-512712]]h=U(A,n)u=N[h]h=J(-902962-(-883094))d=f[u]u=Q[r[-777450-(-777454)]]A=10022192846480-(-506794)N=Q[r[-806643-(-806648)]]U=N(h,A)f=u[U]i=d[f]f=Q[r[-1028955-(-1028959)]]u=Q[r[-168647+168652]]U=J(27976+-47950)h=10102296882591-(-369857)N=u(U,h)d=f[N]f=false i[d]=f d={}i=p[J(-125034+105262)]else i=e i=16610742-927440 z=T end else i=true i=4203468-348919 end end else if i&lt;995585+2135449 then if i&lt;-753121+3840600 then if i&lt;833670+2206078 then pC=Q[u]i=pC and 38141+6896698 or-486230+2427602 d=pC else f=a[-447023+447024]d=J(894457-914365)i=p[d]U=Q[r[994994+-994993]]h={i(U)}N=h[158335-158332]u=h[-557750+557752]i=465363+15408391 d=h[473359-473358]U=d end else i=false n=i V=909557+30887848449850 A=d O=Q[r[563622+-563620]]E=J(-558400+538565)R=Q[r[781548-781545]]g=R(E,V)m=O[g]t=A==m i=t and 976220-(-740206)or 1708460-300411 d=t end else if i&lt;-946981+4142521 then n=Q[f]m=Q[r[-628918+628919]]E=10684313288086-(-497113)g=J(816880-836760)O=Q[r[623573-623571]]R=O(g,E)t=m[R]A=n[t]t=Q[r[-312100+312101]]m=Q[r[-477864-(-477866)]]g=-835272+32684344638011 R=J(924795-944811)O=m(R,g)n=t[O]O=J(535787-555718)h=A[n]n=Q[r[-586722-(-586723)]]R=-790712+7401642040878 t=Q[r[281665-281663]]m=t(O,R)A=n[m]U=h[A]A=Q[r[-643661+643662]]m=J(262279+-282101)n=Q[r[-303708-(-303710)]]O=962299+16631909658437 t=n(m,O)h=A[t]t=J(429611+-449622)m=15410883974234-(-1966)N=U[h]h=Q[r[776657-776656]]x=-294863+783202533691 V=J(593614-613541)A=Q[r[-933991+933993]]n=A(t,m)U=h[n]O=961221+33457957114391 d=N[U]N=F()Q[N]=d U=Q[r[896260+-896255]]A=Q[r[386207-386206]]m=J(-674630-(-654715))n=Q[r[289655+-289653]]t=n(m,O)h=A[t]d=U[h]h=Q[f]U=d(h)h=F()Q[h]=U m=Q[f]R=Q[r[-776535+776536]]g=Q[r[-855757+855759]]E=g(V,x)O=R[E]t=m[O]O=Q[r[-883257+883258]]V=-72970+18068856864231 E=J(-479924-(-460127))R=Q[r[124923+-124921]]g=R(E,V)m=O[g]E=26225343460115-(-490657)n=t[m]m=Q[r[87493-87492]]O=Q[r[-312325-(-312327)]]g=J(282572+-302275)R=O(g,E)t=m[R]A=n[t]t=Q[r[-87303+87304]]R=J(139791+-159561)g=1034503+16505404937470 m=Q[r[-786358+786360]]O=m(R,g)n=t[O]O=J(-62922-(-42953))R=483070+17590025715968 U=A[n]n=Q[r[-210774-(-210775)]]t=Q[r[380124+-380122]]m=t(O,R)A=n[m]d=U[A]g=-681115+1800238835681 U=F()Q[U]=d A=Q[N]R=J(25937-45772)t=Q[r[-920325+920326]]m=Q[r[-933623+933625]]O=m(R,g)n=t[O]d=A==n i=d and 971946+9656695 or 747044-(-284927)else u=Q[r[373575-373573]]N=Q[r[-228946+228949]]f=u==N d=f i=678964+4421186 end end end end end else if i&lt;5463432-235356 then if i&lt;-980438+5322544 then if i&lt;3420574-(-454860)then if i&lt;3509046-(-54676)then if i&lt;752851+2565891 then if i&lt;3015133-(-262464)then N=Q[r[655744+-655735]]i={}U=N N=455161-455160 h=N f=i u=71035-71034 N=-303274-(-303274)i=606645+4558119 A=h&lt;N N=u-h else o=J(-211010+191043)D=Q[r[-796562-(-796564)]]z=-294903+20338059551989 K=Q[r[-873202-(-873205)]]v=K(o,z)C=D[v]q=h[C]D=Q[P]C=q(D)q=F()Q[q]=C D=Q[q]C=not D i=C and 393300+12396224 or 11535576-(-227186)end else i=nil d={i}i=p[J(-480234-(-460252))]end else if i&lt;1022677+2850288 then if i&lt;-666173+4436067 then x=#E W=767679-767679 V=x==W i=-765121+10042690 else i=j(110356+12226183,{U})q={i()}i=p[J(550429-570298)]d={l(q)}end else d={}i=p[J(-730694+710709)]end end else if i&lt;232687+3816513 then if i&lt;-61770+4096122 then if i&lt;4691155-724680 then i=Q[r[-928880+928881]]t=-9369+21174568487709 u=Q[r[702744-702742]]n=J(-68683+48700)d=J(-654066-(-634105))U=Q[r[6829-6826]]h=Q[r[985073-985069]]A=h(n,t)d=i[d]N=U[A]f=u[N]d=d(i,f)i=p[J(-968815-(-948952))]Q[r[-999968+999973]]=d d={}else i=p[J(-1030793-(-1010927))]d={}end else u=L(1037621+7116207,{r[-532621+532624]})d=J(167322-187255)n=179729+4120007493997 i=Q[r[989136+-989135]]f=Q[r[-791781-(-791783)]]d=i[d]d=d(i,f,u)A=J(-215548+195670)f=Q[r[-769187-(-769191)]]N=Q[r[-419122-(-419127)]]U=Q[r[770928+-770922]]h=U(A,n)u=N[h]d=f[u]A=204954+4414780548973 u=Q[r[-351918+351923]]h=J(1024673-1044377)N=Q[r[-943905+943911]]U=N(h,A)f=u[U]i=d[f]A=J(384997+-404938)f=Q[r[-706372+706377]]U=J(-541738-(-522023))u=Q[r[-982567+982573]]h=33028527356990-(-262102)N=u(U,h)d=f[N]n=-275394+2338436872194 f=false i[d]=f f=Q[r[69468-69464]]N=Q[r[-666109+666114]]U=Q[r[251980+-251974]]h=U(A,n)u=N[h]h=J(-706246-(-686310))d=f[u]u=Q[r[138394-138389]]N=Q[r[975507-975501]]A=630517+5947596188636 U=N(h,A)f=u[U]h=17910912901574-622898 i=d[f]f=Q[r[-12256-(-12261)]]U=J(1029925+-1049855)u=Q[r[-895228-(-895234)]]N=u(U,h)d=f[N]f=true i[d]=f i=p[J(-570967+550979)]d={}end else if i&lt;5036350-860857 then i=Q[n]P=-726033+726034 W=479382-479376 q=i(P,W)W=J(961662-981499)i=J(212377-232214)p[i]=q P=p[W]W=862518-862516 i=P&gt;W i=i and-434933+2226099 or 12533999-(-937742)else b=J(-384969+365180)iC=31176416141967-(-775718)X=p[b]G=Q[r[1013967-1013965]]S=Q[r[42155+-42152]]aC=J(-287381-(-267661))i=578638+9352444 JC=J(851204-870989)lC=S(JC,iC)rC=64217+21148054399902 b=G[lC]e=X[b]G=Q[D]lC=Q[r[-567007-(-567009)]]JC=Q[r[1037096-1037093]]iC=JC(aC,rC)S=lC[iC]aC=31320177732111-(-265961)iC=J(684296+-704201)b=G[S]S=Q[r[-413149+413151]]lC=Q[r[-94215+94218]]JC=lC(iC,aC)G=S[JC]aC=J(-594072-(-574237))lC=Q[r[-126731-(-126733)]]JC=Q[r[-694403-(-694406)]]rC=757708+1983083033551 iC=JC(aC,rC)S=lC[iC]X=e(b,G,S)G=J(1010973+-1030762)b=p[G]S=Q[r[-270277+270279]]rC=J(-1005604+985865)lC=Q[r[-44650+44653]]iC=J(404461-424460)aC=1037512+928590228712 JC=lC(iC,aC)G=S[JC]e=b[G]JC=Q[r[227344+-227342]]iC=Q[r[-519097-(-519100)]]wC=-737235+11129866703889 aC=iC(rC,wC)lC=JC[aC]rC=J(-637053-(-617280))S=f[lC]wC=25341807445919-(-75385)JC=Q[r[375438-375436]]iC=Q[r[-887063-(-887066)]]aC=iC(rC,wC)lC=JC[aC]rC=15484035211101-344883 G=S[lC]lC=Q[r[433630+-433628]]aC=J(-156584+136733)JC=Q[r[-376655+376658]]iC=JC(aC,rC)rC=J(250443+-270278)wC=11836843847093-(-10194)S=lC[iC]JC=Q[r[362506-362504]]iC=Q[r[623864+-623861]]aC=iC(rC,wC)lC=JC[aC]b=e(G,S,lC)T=X==b z=T end end end else if i&lt;5592033-606770 then if i&lt;-567231+5282728 then if i&lt;4919193-246631 then if i&lt;236394+4378124 then d=J(-1017766+997746)n=31250352493854-777286 i=p[d]N=Q[r[497096+-497095]]A=J(123294-143322)U=Q[r[184876+-184874]]h=U(A,n)u=N[h]d=i(u)d={}i=p[J(699545-719441)]else u=a[-809248-(-809250)]f=a[-236640+236641]d=Q[r[890056+-890055]]U=a[823495+-823491]m=J(885720+-905663)O=731601+19616025065949 A=Q[r[11465-11463]]N=a[-76427+76430]n=Q[r[883123+-883120]]t=n(m,O)R=31430336174518-(-352117)O=J(-227808+207800)h=A[t]i=d[h]n=Q[r[-1039619-(-1039621)]]t=Q[r[-553410-(-553413)]]m=t(O,R)A=n[m]h=f[A]d=i(h)h=d i=not h i=i and 7140618-777407 or 385065-(-683304)end else i=Q[r[212426-212416]]u=Q[r[-503349+503360]]f[i]=u i=Q[r[-910576+910588]]u={i(f)}d={l(u)}i=p[J(-424542+404787)]end else if i&lt;4928318-(-38756)then if i&lt;4550487-(-290186)then n=not U i=n and-952311+10853752 or 13047698-(-540208)else d={t}i=p[J(928063+-947819)]end else x=J(986691-1006421)g=Q[r[559269-559268]]E=Q[r[323946-323944]]H=1038950+295924753955 V=E(x,H)i=4522462-(-734838)R=g[V]O=t[R]m=O end end else if i&lt;5734137-570555 then if i&lt;-252645+5320504 then if i&lt;4926155-(-75061)then i=E i=g and 12378123-(-70639)or 1089973-934241 O=g else T=Q[u]i=T and 752326+13594189 or 7598350-163062 pC=T end else i=d and-513762+1648248 or-788516+3112522 end else if i&lt;571172+4593858 then n=not A N=N+h u=N&lt;=U u=n and u n=N&gt;=U n=A and n u=n or u n=10493263-565199 i=u and n u=555190+4158567 i=i or u else U=F()f=a u=F()i=true h=F()n=J(271903-291804)N=J(897105+-916894)Q[u]=i d=p[N]N=J(582627-602439)i=d[N]N=F()Q[N]=i i=L(8977593-(-826328),{})t=L(12248255-(-936248),{h})Q[U]=i i=false Q[h]=i A=p[n]n=A(t)i=n and 1001882+12269995 or 15370754-15070 d=n end end end end else if i&lt;7257375-695860 then if i&lt;6805288-516125 then if i&lt;-529321+6276035 then if i&lt;1030844+4266941 then if i&lt;4570899-(-693255)then i=m and 170912+14593262 or 10665735-(-1009852)else i=Q[r[-368844-(-368845)]]A=J(-138384-(-118362))O=908803+14930489310501 m=14952508458092-682298 N=Q[r[-126755+126757]]n=1012892554951-(-862992)U=Q[r[-479368+479371]]g=J(475277+-495181)h=U(A,n)u=N[h]N=Q[r[-181577+181581]]h=Q[r[-225597+225599]]A=Q[r[-840386+840389]]t=J(-995344+975367)n=A(t,m)R=917643+20628918297851 U=h[n]A=Q[r[-448047-(-448049)]]m=J(-287044-(-267091))n=Q[r[-1033945-(-1033948)]]t=n(m,O)h=A[t]n=Q[r[-534981+534983]]O=J(-708345-(-688468))E=783457+11198471413757 t=Q[r[33939-33936]]m=t(O,R)A=n[m]n=Q[r[206918+-206913]]m=Q[r[-155190+155192]]O=Q[r[-379044+379047]]R=O(g,E)t=m[R]m=Q[r[287504+-287498]]f={[u]=N;[U]=h;[A]=n,[t]=m}u=J(209307-229084)u=i[u]d={u(i,f)}d={l(d)}i=p[J(234376+-254081)]end else O=386648+4094942421274 h=J(-974426-(-954426))u=Q[r[648850+-648849]]N=Q[r[252436+-252434]]n=38198+24074963310228 A=391928+27343376234180 U=N(h,A)A=J(400596+-420431)d=u[U]N=Q[r[7740-7739]]U=Q[r[-914213+914215]]h=U(A,n)n=J(926617-946530)t=680785+14155558794862 m=-34559+14872024441356 u=N[h]R=24454602795548-(-361055)U=Q[r[-850793-(-850794)]]h=Q[r[116426-116424]]A=h(n,t)N=U[A]h=Q[r[1032928-1032927]]t=J(68022-87857)A=Q[r[714822+-714820]]n=A(t,m)U=h[n]A=Q[r[705563-705562]]m=J(582677-602371)n=Q[r[-1037127-(-1037129)]]t=n(m,O)h=A[t]n=Q[r[782736-782735]]O=J(-14209+-5626)t=Q[r[974858-974856]]m=t(O,R)A=n[m]i={[d]=u,[N]=U,[h]=A}d={i}i=p[J(34582+-54428)]end else if i&lt;6946632-912965 then if i&lt;-955068+6905897 then d=Q[r[103787-103786]]m=29206326899811-130883 N=Q[r[481244+-481242]]h=J(695494+-715379)f=a[-517568+517569]A=-434147+8968915890227 t=J(-325051+305201)U=N(h,A)u=a[-78225+78227]A=5878505772431-(-996642)i=d[U]h=J(332952-352689)d=true u[i]=d d=Q[r[-244230-(-244231)]]N=Q[r[-286641-(-286643)]]U=N(h,A)i=d[U]U=J(-584671+564822)N=p[U]h=Q[r[99071+-99070]]A=Q[r[471879+-471877]]n=A(t,m)U=h[n]h=347286+-347286 g=J(-719146+699327)A=-154733+154733 n=217551+-217551 d=N[U]U=.95 N=d(U,h,A,n)u[i]=N N=J(182118-202069)n=J(-196077+176204)d=p[N]t=33054421768892-630428 U=Q[r[-909956+909957]]h=Q[r[890919-890917]]A=h(n,t)N=U[A]i=d[N]d=i()x=-527662+30361119655015 V=J(120152-140179)R=20063239836951-(-495463)i=Q[r[58906-58903]]O=22841768876039-208507 h=Q[r[708111-708110]]t=J(246673+-266472)H=10465117157107-(-171030)m=21765794084017-757018 A=Q[r[-92650+92652]]n=A(t,m)U=h[n]m=J(-396234+376392)N=u[U]A=Q[r[219255+-219254]]n=Q[r[790998-790996]]t=n(m,O)h=A[t]E=16522744189102-242336 U=u[h]n=Q[r[384481+-384480]]O=J(387287+-407207)t=Q[r[757717+-757715]]m=t(O,R)A=n[m]t=J(-590258-(-570294))h=u[A]n=p[t]m=Q[r[-871145+871146]]O=Q[r[963965-963963]]R=O(g,E)t=m[R]A=n[t]R=Q[r[-45342+45343]]g=Q[r[-255139+255141]]E=g(V,x)d=J(320091+-339791)O=R[E]V=J(-597341+577580)x=-120518+29733978819803 m=u[O]R=Q[r[607025+-607024]]g=Q[r[-393585+393587]]E=g(V,x)O=R[E]R=J(-914412+894415)t=m[O]O=p[R]x=J(-218366-(-198552))g=Q[r[160773-160772]]E=Q[r[-225931+225933]]V=E(x,H)R=g[V]m=O[R]d=i[d]n={A(t,m)}V=31690404453254-(-728606)A=J(-744611-(-724708))d=d(i,N,U,h,l(n))N=d d=Q[r[1038442-1038441]]H=11211576729078-(-767598)U=Q[r[-342075-(-342077)]]m=J(912817+-932542)n=728919+12946306922549 h=U(A,n)i=d[h]h=J(343783+-363632)U=p[h]A=Q[r[-795394+795395]]O=-219297+18387370293779 n=Q[r[1001268-1001266]]t=n(m,O)E=J(-464541+444844)h=A[t]A=877388+-877388 d=U[h]h=.95 O=Q[r[-762931+762932]]R=Q[r[965273+-965271]]n=1012937-1012937 g=R(E,V)m=O[g]t=N[m]U=d(h,A,n,t)O=J(268568+-288468)u[i]=U d=Q[r[791018+-791017]]i=-787990-(-788006)U=i n=J(652342-672090)h=Q[r[1021725+-1021723]]E=J(699843+-719536)t=28613074616649-216381 A=h(n,t)i=d[A]V=-1020299+34777063870669 A=J(-648935-(-629086))h=p[A]n=Q[r[994408-994407]]R=691187+11392008128709 t=Q[r[-404657-(-404659)]]m=t(O,R)A=n[m]d=h[A]O=Q[r[734871-734870]]x=33216099423496-645277 R=Q[r[706933+-706931]]g=R(E,V)m=O[g]t=f[m]V=3669082649140-617352 E=J(-471749+451771)O=Q[r[-774414-(-774415)]]R=Q[r[167061-167059]]g=R(E,V)m=O[g]n=t[m]g=J(358260+-378151)E=-312009+30488277400126 m=Q[r[-635658+635659]]O=Q[r[-375018+375020]]R=O(g,E)V=J(-853759+833824)t=m[R]A=n[t]R=Q[r[-778714+778715]]g=Q[r[-919748+919750]]E=g(V,x)x=565206+5946599041787 O=R[E]m=f[O]V=J(405356-425102)R=Q[r[892612-892611]]g=Q[r[-860827+860829]]E=g(V,x)O=R[E]t=m[O]E=J(913799-933758)O=Q[r[873410-873409]]V=24293288560511-973647 R=Q[r[-770148-(-770150)]]x=J(144661+-164429)g=R(E,V)m=O[g]n=t[m]g=Q[r[-899937+899938]]E=Q[r[-924624+924626]]t=-496632-(-496632)V=E(x,H)R=g[V]O=N[R]N=nil m=O+U U=nil h=d(A,n,t,m)u=nil f[i]=h f=nil d={}i=p[J(-821630-(-801605))]else i=6838406-396483 end else P=J(131649-151484)W=13185394917497-(-546690)x=Q[r[-443278-(-443279)]]H=Q[r[6887-6885]]q=H(P,W)i=16822465-891088 V=x[q]g=V end end else if i&lt;-496999+6934208 then if i&lt;105499+6308009 then if i&lt;-20671+6377029 then Q[u]=H i=Q[u]i=i and 11740938-229205 or 3183704-256022 else d=J(880919+-900939)x=J(-930676-(-910673))g=14865484614642-815336 i=p[d]t=Q[r[-173098+173100]]m=Q[r[-824656-(-824659)]]R=J(842822-862603)O=m(R,g)m=J(-980879-(-960972))H=8973700816723-233217 n=t[O]t=p[m]g=Q[r[61574+-61572]]E=Q[r[-948502+948505]]V=E(x,H)R=g[V]O=f[R]m=t(O)A=n..m d=i(A)d={}i=p[J(199987+-219795)]end else f=a[227289-227288]U=Q[r[227454+-227453]]h=Q[r[454057-454055]]n=J(-483916-(-463898))t=372002+26885306565573 A=h(n,t)N=U[A]u=f[N]n=J(45074+-65084)U=Q[r[-817138+817139]]h=Q[r[-54560-(-54562)]]t=11118499499842-817929 A=h(n,t)N=U[A]d=u[N]n=834127+34819292988678 N=Q[r[-470660-(-470661)]]A=J(529398-549273)U=Q[r[105065-105063]]h=U(A,n)u=N[h]i=d[u]d=J(-170454-(-150546))u=i i=-459482+459482 N=i n=J(537088-556952)n=u[n]i=p[d]A={n(u)}n={i(l(A))}d=n[676532+-676531]A=d h=n[307613-307610]i=10506219-(-293204)U=n[641808-641806]end else if i&lt;392456+6110381 then i=true i=i and 3054531-(-1012689)or 184641+13197115 else u=a[-397763-(-397765)]f=a[-951202-(-951203)]i=Q[r[-35118+35119]]N=i i=N[u]i=i and-431758+15019363 or 11123002-(-854942)end end end else if i&lt;6841962-(-469388)then if i&lt;6904671-84686 then if i&lt;757728+5879103 then if i&lt;6032824-(-551218)then V=23046853694033-(-186267)E=J(-147257+127422)O=Q[r[-897312-(-897314)]]R=Q[r[-20038+20041]]g=R(E,V)m=O[g]t=A==m i=t and 15438963-804931 or 1430191-(-804150)else x=F()z=J(372985-392718)W=y(-146290+10798774,{x;m;O,h})V={}k=F()v=J(66815+-86671)Q[x]=V V=F()Q[V]=W N=nil t=nil n=nil e=nil C=J(-15439+-4295)N={}W={}h=M(h)D={}E=nil Q[k]=W W=p[C]o=Q[k]A=nil K={[v]=o,[z]=e}A=J(-534370-(-514424))h=F()C=W(D,K)W=Y(714596+5845688,{k,x;g;m,O;V})R=nil O=M(O)V=M(V)m=M(m)x=M(x)x=33623408087066-54001 V=J(-702890-(-683108))Q[U]=C O=J(-646875+626877)k=M(k)Q[u]=W g=M(g)Q[h]=N i=p[J(735382-755397)]N=p[A]m=p[O]R=Q[U]g=Q[u]E=g(V,x)O=R[E]W=28989383494543-906964 E=J(-158309-(-138349))t=m[O]O=Q[U]k=47216+20938707283366 V=2277517071160-(-504044)R=Q[u]g=R(E,V)m=O[g]n=t[m]A=N(n)N=F()R=J(-583903-(-563905))n=J(276176-296122)x=J(1029505+-1049473)Q[N]=A A=p[n]O=p[R]g=Q[U]E=Q[u]V=E(x,W)R=g[V]W=J(738334+-758341)m=O[R]V=J(1028768+-1048579)x=-872565+13179851696238 R=Q[U]g=Q[u]E=g(V,x)O=R[E]t=m[O]n=A(t)g=J(-170336-(-150338))A=F()Q[A]=n t=J(27726-47672)n=p[t]R=p[g]E=Q[U]V=Q[u]D=23607715447135-(-878994)x=V(W,k)g=E[x]e=J(-717216+697467)O=R[g]W=806507+22009582393758 g=Q[U]x=J(-303147-(-283238))E=Q[u]V=E(x,W)R=g[V]m=O[R]t=n(m)E=J(710574+-730572)n=F()m=J(46934-66880)Q[n]=t t=p[m]g=p[E]k=J(-622933+603050)V=Q[U]x=Q[u]W=x(k,D)k=-438645+18942073738217 E=V[W]R=g[E]E=Q[U]V=Q[u]W=J(-411804-(-391994))x=V(W,k)g=E[x]O=R[g]D=24199202713022-278970 W=133351+24361799082857 m=t(O)t=F()O=J(632674-652669)Q[t]=m m=p[O]k=7031280823216-909030 x=J(781386-801238)g=Q[U]E=Q[u]V=E(x,W)R=g[V]O=J(-90598+70759)O=m[O]O=O(m,R)R=J(-343388+323393)m=F()W=J(-112299+92508)Q[m]=O O=p[R]R=J(-1032634+1012795)R=O[R]E=Q[U]V=Q[u]x=V(W,k)g=E[x]R=R(O,g)g=J(344593-364588)O=F()Q[O]=R R=p[g]k=J(-125055-(-105230))V=Q[U]x=Q[u]W=x(k,D)E=V[W]g=J(112528-132367)g=R[g]g=g(R,E)E=F()R=F()Q[R]=g g=-687696-(-687701)x=J(-735777-(-715989))Q[E]=g v=I(9936768-(-433146),{U,u})V=Q[h]g=I(-835457+3909265,{N,U;u})V[x]=g x=j(7158568-744076,{U;u})g=F()V=Y(6709800-891440,{U,u,m})Q[g]=V V=F()W=Y(262748+11061149,{U;u;g,V})Q[V]=x x=F()Q[x]=W W=F()k=Y(-135019+14302946,{U;u;g;V})D=Z(15864155-(-113168),{U;u;V})Q[W]=k k=F()Q[k]=D K=y(1004495+15259778,{U,u,V})D=F()Q[D]=K K=F()o=s(-308226+4968241,{h,U;u,n;W;k,O;K,D;R})Q[K]=v v=F()Q[v]=o z=Q[h]o=I(10770670-(-290940),{U;u;t;E,A;x;v})z[e]=o o=Q[h]d={o}end else G=950334+33402800077956 z=Q[r[-621344+621346]]X=7114567557063-(-797993)e=J(-794761-(-775035))b=-744523+18297982385555 pC=Q[r[166181+-166178]]T=pC(e,X)o=z[T]X=J(680592-700466)S=J(442064+-461864)pC=Q[r[-866774+866776]]T=Q[r[826302+-826299]]e=T(X,b)z=pC[e]b=J(-762123+742307)T=Q[r[-238955+238957]]e=Q[r[801272+-801269]]X=e(b,G)lC=-765818+20066757530618 pC=T[X]T=Q[q]C={[o]=z;[pC]=T}X=J(-1023962-(-1004224))rC=-962430+1895442133744 pC=Q[r[826918-826916]]T=Q[r[348019-348016]]b=1532815401185-(-664040)e=T(X,b)z=pC[e]o=f[z]X=Q[r[-698959+698961]]b=Q[r[605825+-605822]]aC=J(157325-177042)G=b(S,lC)S=J(701864-721702)e=X[G]JC=67175+19931432558042 T=f[e]pC=#T T=862560-862559 z=pC+T pC=C o[z]=pC o=Q[r[-609142+609147]]T=Q[D]X=Q[r[122900+-122898]]lC=23717879785771-(-426489)b=Q[r[-339096+339099]]G=b(S,lC)e=X[G]pC=T[e]z=o(f,pC)e=Q[r[-408417-(-408419)]]G=J(-631425-(-611718))S=13388067676793-772639 X=Q[r[836817-836814]]b=X(G,S)T=e[b]pC=f[T]b=Q[r[-377724+377726]]G=Q[r[448738-448735]]z=i lC=J(519780+-539627)S=G(lC,JC)X=b[S]S=J(-542500-(-522572))T=J(254254-274172)G=p[S]lC=Q[r[100422+-100420]]JC=Q[r[-57380+57383]]iC=JC(aC,rC)T=pC[T]S=lC[iC]b=G[S]lC=Q[r[6370-6368]]JC=Q[r[997087-997084]]rC=31570913052488-953819 aC=J(-700627+680636)iC=JC(aC,rC)S=lC[iC]G=b(S)lC=17991880850493-433027 e=X..G T=T(pC,e)pC=261639-261639 o=T or pC S=J(76346-96163)T=Q[r[70988+-70986]]G=94666+32047568603265 b=J(736137-756109)iC=J(269099+-289046)e=Q[r[845196-845193]]X=e(b,G)pC=T[X]z=f[pC]X=Q[r[-334342+334344]]b=Q[r[-814893-(-814896)]]aC=24991921390048-(-961429)G=b(S,lC)e=X[G]G=J(409370+-429298)b=p[G]S=Q[r[789039+-789037]]lC=Q[r[-135730-(-135733)]]JC=lC(iC,aC)G=S[JC]iC=J(-528994-(-509161))X=b[G]S=Q[r[-86156+86158]]lC=Q[r[-812343-(-812346)]]aC=520855+10501023424642 JC=lC(iC,aC)G=S[JC]pC=J(688728-708457)b=X(G)X=271084-271083 T=e..b iC=34527404022911-974257 pC=z[pC]JC=J(-144607+124798)e=o+X pC=pC(z,T,e)pC=i X=Q[D]G=Q[r[-586537-(-586539)]]S=Q[r[456641+-456638]]lC=S(JC,iC)b=G[lC]e=X[b]lC=J(-856573-(-836738))JC=820471+10982117904130 b=Q[r[117153-117151]]G=Q[r[-972180-(-972183)]]S=G(lC,JC)X=b[S]T=e==X z=T i=T and 10946258-1015176 or-568068+4776619 end else if i&lt;6165966-(-952651)then if i&lt;6948362-(-66347)then T=i b=11027-11026 X=z[b]b=false e=X==b pC=e i=e and 777115+-676884 or 2104957-915937 else C=M(C)z=nil o=M(o)i=-347881+15679023 k=M(k)D=M(D)v=M(v)K=M(K)end else i=Q[r[-544882+544883]]f=Q[r[-596108-(-596110)]]u=Q[r[884992-884989]]N=Q[r[423371+-423367]]U=Q[r[-973908+973913]]d=i(f,u,N,U)d={}i=p[J(-552172+532480)]end end else if i&lt;6965086-(-573641)then if i&lt;8084874-652506 then if i&lt;6745842-(-598322)then E=not g O=O+R t=O&lt;=m t=E and t E=O&gt;=m E=g and E t=E or t E=-862492+15477608 i=t and E t=16004256-(-560316)i=i or t else d={}i=p[J(42991+-62890)]end else Q[u]=pC G=389456-389455 b=Q[K]X=b+G e=z[X]T=R+e e=-94247+94503 i=T%e X=Q[D]R=i e=g+X X=-291800+292056 T=e%X g=T i=-386002+7460347 end else if i&lt;-65030+7679430 then C=J(-623148+603355)P=Q[r[-248917+248918]]D=-409289+15115091827271 W=Q[r[164247-164245]]k=W(C,D)H=J(-468742-(-448882))i=187105+11138436 q=P[k]H=N[H]H=H(N,q)V=H else i=6035487-(-406436)end end end end end end else if i&lt;12609226-(-78569)then if i&lt;-885433+11538051 then if i&lt;10599280-957126 then if i&lt;8652643-(-427258)then if i&lt;-168525+8937441 then if i&lt;8654663-352080 then if i&lt;190377+7868133 then t=Q[f]V=4963085084272-(-844439)O=Q[r[462407+-462406]]R=Q[r[615154+-615152]]E=J(-1045419-(-1025575))g=R(E,V)m=O[g]g=J(-663690+643936)d=t[m]i=333908+11745706 t=J(797152-816915)E=-340734+4603511962461 t=d[t]t=t(d)d=Q[f]m=Q[r[-749554+749555]]O=Q[r[-918410+918412]]R=O(g,E)t=m[R]m=nil d[t]=m else f=a[283519-283518]i=Q[r[-928307-(-928308)]]d={i}i=p[J(230362-250210)]end else t=J(762645-782344)g=J(-86161-(-66382))N=Q[f]E=32178943186908-187732 h=Q[r[-818295+818296]]O=837159+7997321136229 m=12647678477080-(-119785)A=Q[r[-735973+735975]]n=A(t,m)U=h[n]u=N[U]A=Q[r[-499793+499794]]m=J(624114-643861)n=Q[r[-229947+229949]]N=J(381529-401447)t=n(m,O)h=A[t]t=J(-847614-(-827686))n=p[t]m=Q[r[-921419+921420]]O=Q[r[-571513+571515]]R=O(g,E)t=m[R]g=J(-43755-(-23838))A=n[t]m=Q[r[495485-495484]]E=-43023+23777544606543 O=Q[r[56869-56867]]R=O(g,E)t=m[R]N=u[N]n=A(t)U=h..n N=N(u,U)A=Q[r[10781-10778]]g=33339129435816-(-58876)t=Q[r[906001+-906000]]m=Q[r[395525-395523]]u=-942915-(-942915)d=N or u N=i R=J(481679+-501561)O=m(R,g)u=d n=t[O]h=A[n]A=h()U=not A i=U and 1707788-4623 or-363525+15788711 d=U end else if i&lt;9078879-74180 then if i&lt;-278781+9162001 then i=1911387-(-412619)f=nil Q[r[-140204+140209]]=d else O=J(784072+-803907)n=Q[r[-313719-(-313721)]]i=3671627-570724 R=538456+25754674476928 t=Q[r[167921+-167918]]m=t(O,R)A=n[m]d=A end else U=542285+-542265 A=Q[r[-284604-(-284605)]]m=J(-217241-(-197383))n=Q[r[-1000498-(-1000500)]]N+=U E=210125+15635116877731 q=J(-16190+-3593)g=J(-1018446+998606)O=23398853991312-569601 t=n(m,O)h=A[t]t=J(451296+-471145)n=p[t]P=661291+13505165476197 m=Q[r[-733261+733262]]O=Q[r[-314862-(-314864)]]R=O(g,E)t=m[R]A=n[t]E=17420807448193-(-637231)m=905508+-905508 t=520692+-520692 O=116409+-116409 n=A(t,m,O,N)u[h]=n n=.1 A=J(-664821-(-645023))h=p[A]m=J(610438-630204)g=J(829196-849039)A=h(n)A=Q[r[308460+-308459]]O=526884+5536344719342 n=Q[r[-210714-(-210716)]]t=n(m,O)h=A[t]t=J(1004034+-1023998)n=p[t]m=Q[r[-405983-(-405984)]]O=Q[r[93555-93553]]R=O(g,E)t=m[R]A=n[t]t=-185232+185232 V=Q[r[-36654-(-36655)]]x=Q[r[901877-901875]]H=x(q,P)P=406133+27302138167092 q=J(-958524-(-938732))E=V[H]g=u[E]V=Q[r[662557+-662556]]x=Q[r[-950748+950750]]H=x(q,P)f=nil P=-631296+33568407101199 E=V[H]q=5078203815106-(-832634)R=g[E]E=Q[r[-727297+727298]]H=J(149512+-169264)V=Q[r[579553-579551]]x=V(H,q)g=E[x]O=R[g]V=Q[r[277917-277916]]x=Q[r[316688+-316686]]q=J(1045837+-1065858)H=x(q,P)i=p[J(744074-763818)]q=J(720425-740335)E=V[H]g=u[E]V=Q[r[-779331+779332]]N=nil x=Q[r[453010+-453008]]P=8640510364298-(-50477)d={}H=x(q,P)E=V[H]R=g[E]m=O+R n=A(t,m)u[h]=n u=nil end end else if i&lt;10093650-724204 then if i&lt;-446998+9766578 then if i&lt;8958759-(-151380)then u=J(658315-678174)N=-338568+1303104 f=u^N d=795738+7521109 i=d-f d=J(-189332+169416)f=i i=d/f d={i}i=p[J(-835096-(-815369))]else D=-197305-(-197306)W=#E x=-177207-(-177208)V=N(x,W)x=A(E,V)W=Q[g]V=nil i=-132484+15671347 C=x-D k=n(C)W[x]=k x=nil end else d=m i=O i=m and 30503+13933269 or 986640+14552776 end else if i&lt;10554445-1029066 then i=400719+15473035 h=nil A=nil else T=X i=b i=457046+2427314 end end end else if i&lt;950234+9000687 then if i&lt;16821+9829615 then if i&lt;-3711+9801642 then if i&lt;372035+9302969 then n=-902699+27951758883075 f=a[-938282-(-938283)]d=Q[r[1020567+-1020566]]N=Q[r[-50548-(-50550)]]U=Q[r[-960785-(-960788)]]A=J(-256325+236616)h=U(A,n)u=N[h]i=d[u]d={i}i=p[J(597160+-616955)]else P=J(477567-497587)q=p[P]o=13361932946082-(-118188)T=18182845255867-61352 C=Q[r[391169+-391167]]v=J(-733885-(-713866))D=Q[r[-183680-(-183683)]]K=D(v,o)k=C[K]D=Q[x]v=Q[r[-312442-(-312444)]]pC=J(-712744-(-692727))o=Q[r[-271516+271519]]z=o(pC,T)K=v[z]C=D[K]W=k..C C=Q[x]z=J(668484-688179)K=Q[r[-136355+136357]]v=Q[r[635914+-635911]]pC=955924+12116135116790 o=v(z,pC)D=K[o]i=n and 13942152-207383 or-601153+17328254 k=C[D]P=q(W,k)end else f=J(955282-975283)d=J(723746-743712)i=p[d]d=i(f)d={}i=p[J(-749095+729344)]end else if i&lt;10753251-824390 then if i&lt;-327622+10253572 then t=Q[r[468545+-468544]]m=Q[r[-528029+528031]]i=-944780+14532686 R=J(-227499-(-207664))g=224518+23074756345075 O=m(R,g)n=t[O]U=n else i=Q[r[199654+-199653]]u=N m=729143-728888 t=772973+-772973 n=i(t,m)f[u]=n u=nil i=4282732-(-882032)end else i=pC i=z and 4375959-502402 or 240791+983751 end end else if i&lt;-446541+11010149 then if i&lt;11215777-917268 then if i&lt;10523996-497407 then H=-99652+10643008247968 g=Q[r[392945-392944]]E=Q[r[108130+-108128]]x=J(76771+-96521)V=E(x,H)n=h R=g[V]O=J(834123-853864)O=t[O]O=O(t,R)i=O and 199772+4784950 or-221031+5478331 m=O else d={}i=p[J(-157037+137008)]end else f=a[-296296-(-296297)]u=J(757834+-777545)n=7525597233348-(-593132)d=p[u]u=d(f)N=Q[r[927015+-927014]]A=J(-967681-(-947716))U=Q[r[-397401+397403]]h=U(A,n)d=N[h]i=u~=d i=i and-11096+5333274 or 13025256-680719 end else if i&lt;-774078+11426124 then i=p[J(-921253+901304)]d={}else f=Q[r[-765537-(-765538)]]d=#f f=762483+-762483 i=d==f i=i and 687354+803108 or-863780+16001993 end end end end else if i&lt;-547057+12035008 then if i&lt;805598+10128284 then if i&lt;-374699+11078739 then if i&lt;11447756-760404 then if i&lt;11392904-736187 then f=J(477299+-497292)d=J(-185809+165972)i=p[d]d=p[f]f=J(804201+-824194)p[f]=i f=J(953353-973190)p[f]=d f=Q[r[963412+-963411]]u=f()i=1882168-(-9661)else h=J(980073+-999933)O=J(-666324-(-646361))R=-553162+6594305227976 n=Q[r[-964092-(-964093)]]t=Q[r[231541+-231539]]m=t(O,R)R=617732+13462451858296 A=n[m]h=f[h]h=h(f,A)i=-102434+4828393 N=h n=Q[r[181837+-181836]]O=J(830358-850193)t=Q[r[565204+-565202]]m=t(O,R)A=n[m]U=A end else O=M(O)g=nil A=nil R=nil x=M(x)E=nil h=M(h)t=nil g=F()n=M(n)A=J(265684-285681)O=F()U=M(U)V=nil N=M(N)t=J(-599192+579200)N=nil u=M(u)x=614933+-614677 U=F()W=x u=nil m=M(m)i=2155410-(-481761)Q[U]=u u=F()n=J(125641+-145638)Q[u]=N h=p[A]A=J(982783+-1002557)N=h[A]h=F()Q[h]=N A=p[n]R={}n=J(-788118-(-768225))m=J(-371031+351242)E={}N=A[n]n=p[t]t=J(944322+-964256)A=n[t]t=p[m]m=J(82938-102751)n=t[m]m=F()t=-79968-(-79968)V=446350-446349 Q[m]=t t=36547+-36545 Q[O]=t x=-317278+317279 k=x x=-411664+411664 C=k&lt;x x=V-k Q[g]=R t={}R=684778+-684778 end else if i&lt;761142+9963540 then if i&lt;485919+10223379 then D=929162+20897288992889 P=Q[r[-933400-(-933402)]]W=Q[r[-147585-(-147588)]]C=J(-218321-(-198427))k=W(C,D)q=P[k]x=q i=2189358-21402 else T=25499450450374-(-822428)o=1768774739436-(-367947)v=J(-280455+260766)q=Q[r[-291001-(-291006)]]C=Q[r[144324+-144322]]D=Q[r[-558393-(-558396)]]pC=J(207083-227035)K=D(v,o)k=C[K]v=Q[r[100406-100404]]o=Q[r[-787620+787623]]z=o(pC,T)T=461135+11855250361409 K=v[z]pC=J(-376299+356376)D=h[K]i=-570817+10618046 v=Q[r[366827+-366825]]o=Q[r[1042403+-1042400]]z=o(pC,T)K=v[z]C=D..K W=k..C P=q(f,W)end else h,t=A(U,h)i=h and-995021+11012736 or 9186744-144119 end end else if i&lt;-260678+11599885 then if i&lt;-1010708+12334841 then if i&lt;11914235-633563 then A=J(-484658+464788)n=6014238495547-313419 f=F()Q[f]=a[541621-541620]d=Q[f]N=Q[r[-420026+420027]]U=Q[r[885877-885875]]h=U(A,n)u=N[h]i=d[u]i=i and 291021+4112066 or 8760894-(-7781)else m=J(737761-757675)O=254950985519-(-700743)h=J(-1013405+993407)u=a[915382+-915380]f=a[-492972-(-492973)]U=p[h]A=Q[r[518475-518474]]R=6629962260607-627824 n=Q[r[-293810+293812]]t=n(m,O)h=A[t]m=28118012464262-(-616095)N=U[h]h=Q[r[411187+-411186]]t=J(-461304-(-441278))A=Q[r[400074-400072]]n=A(t,m)t=19105626799311-(-943601)U=h[n]d=N[U]n=J(-91037+71270)U=Q[r[-551964+551965]]h=Q[r[-515939-(-515941)]]A=h(n,t)N=U[A]i=d[N]d=J(-233984-(-213994))d=i[d]t=454509+13201258883222 n=J(-136133+116175)d=d(i)U=Q[r[784735+-784734]]h=Q[r[-345544-(-345546)]]N=d A=h(n,t)n=J(-806755-(-786741))d=U[A]t=11321011168341-118718 i=N[d]U=Q[r[744806-744805]]h=Q[r[707569-707567]]A=h(n,t)d=U[A]A=J(-964745+944850)n=15611659921555-(-898002)U=u i[d]=U d=Q[r[402817-402816]]U=Q[r[856581-856579]]h=U(A,n)i=d[h]n=Q[r[-367773+367774]]t=Q[r[115443-115441]]O=J(-585270+565391)m=t(O,R)A=n[m]h=f[A]n=Q[r[-947045-(-947046)]]O=J(-129330-(-109380))t=Q[r[-753566-(-753568)]]R=119072+22713019766832 m=t(O,R)A=n[m]U=h[A]m=J(-1021173+1001420)u=nil O=15204352089358-524646 A=Q[r[821625-821624]]n=Q[r[383558+-383556]]t=n(m,O)h=A[t]m=J(-756456-(-736742))O=970613+10299042710342 d=U[h]N[i]=d i=Q[r[419807-419804]]A=Q[r[540795+-540794]]n=Q[r[187395+-187393]]t=n(m,O)h=A[t]U=N[h]d=i(N,U)i=Q[r[901576-901572]]d=i(f)f=nil d={}i=p[J(440345+-460090)]N=nil end else i=x g=V i=V and 15103302-(-828075)or-683692+6935670 end else if i&lt;10358699-(-997167)then d={A}i=p[J(-583857-(-563968))]else d=Q[f]m=Q[r[539977-539976]]E=16010339185703-22280 g=J(-669677+649753)O=Q[r[999539-999537]]R=O(g,E)t=m[R]m=false d[t]=m t=Q[f]E=J(-282847-(-262928))V=796823+6439406805791 O=Q[r[-801597+801598]]R=Q[r[779329-779327]]g=R(E,V)m=O[g]d=t[m]i=d and 6873531-(-785025)or 12124154-44540 end end end else if i&lt;-629195+12957858 then if i&lt;-309870+12060597 then if i&lt;11845728-205893 then if i&lt;12290345-702541 then i=10986562-282860 else i=Q[r[-175360+175361]]u=L(2093324-(-294648),{r[764143+-764140];r[435831+-435827];r[-225543+225548]})f=Q[r[-289377-(-289379)]]d=J(-74482-(-54549))d=i[d]d=d(i,f,u)i=p[J(782686+-802626)]d={}end else t=nil i=-625627+11425050 n=nil end else if i&lt;255986+11777367 then if i&lt;-805599+12608000 then K=J(263698+-283599)C={}D=F()o=I(3019820-763072,{r[-667256+667264],q;D})Q[D]=C C=p[K]z={C(o)}pC=Q[D]K=z[666275-666274]v=z[593212+-593210]z=not pC C=z o=i i=z and 1871727-(-27682)or 16293236-(-207810)else i={}Q[r[-308472+308474]]=i h=35184373057853-969021 d=Q[r[-81983+81986]]n=-732925-(-733180)U=d d=u%h O=-464158-(-464159)Q[r[683989+-683985]]=d A=u%n t=J(710452+-730241)n=-789036-(-789038)h=A+n Q[r[419036+-419031]]=h n=p[t]t=J(-879864-(-860128))i=924425+6415691 A=n[t]n=A(f)R=O A=J(443165-463000)t=-791381-(-791382)N[u]=A A=-519080+519218 m=n O=-871470-(-871470)g=R&lt;O O=t-R end else A=nil n=nil f=M(f)i=p[J(840652-860538)]U=M(U)u=nil h=M(h)N=M(N)d={}end end else if i&lt;-605389+13147520 then if i&lt;-378413+12758071 then if i&lt;-823960+13162916 then i=1856266-(-35563)else i=J(-157792+137932)h=J(-921202-(-901227))A=999620+32888948275983 u=Q[r[621389-621388]]N=Q[r[-300897-(-300899)]]U=N(h,A)i=f[i]d=u[U]i=i(f,d)u=i d=nil t=J(-960283-(-940555))h=Q[r[578971-578970]]A=Q[r[-1024061+1024063]]i=nil N=i m=17331021066295-20657 U=d n=A(t,m)d=h[n]i=J(338375-358246)i=f[i]i=i(f,d)i=i and 13912966-825586 or 10424656-(-252095)end else i=R g=Q[r[693536+-693535]]x=J(494752+-514517)E=Q[r[549173+-549171]]H=-941404+26241290046743 V=E(x,H)E=i R=g[V]x=i i=N and-853914+8449377 or 11823329-497788 V=N end else if i&lt;840442+11787004 then i=p[J(150923+-170946)]d={u}else e=nil v=nil H=nil N=nil u=nil X=nil n=nil C=nil A=nil pC=M(pC)d={}k=nil h=nil U=nil R=M(R)o=nil K=nil m=M(m)D=M(D)V=M(V)t=nil x=M(x)i=p[J(-986357-(-966386))]W=nil O=M(O)P=M(P)z=M(z)q=M(q)f=nil end end end end end else if i&lt;-900970+15766392 then if i&lt;-91862+13784396 then if i&lt;14093232-808871 then if i&lt;13470974-389938 then if i&lt;12661271-(-249595)then if i&lt;13813226-1005343 then D=J(139301+-159321)C=p[D]v=Q[r[-729769-(-729771)]]o=Q[r[844152-844149]]pC=J(-1032297-(-1012365))T=5991038981373-18968 z=o(pC,T)K=v[z]D=C(K)pC=J(-498500+478612)C=Q[r[-849770+849775]]v=Q[r[113644+-113642]]d={}o=Q[r[486373-486370]]T=-346250+14964909253570 z=o(pC,T)i=p[J(-496760-(-476984))]K=v[z]D=C(f,K)else t=J(472523-492543)d=p[t]t=d(n)i=-446921+11825931 end else u=Q[r[-866159+866162]]N=760695-760458 f=u*N u=944219+-943962 i=343132+14529087 d=f%u Q[r[667378+-667375]]=d end else if i&lt;-238299+13465192 then if i&lt;13924540-761321 then t=J(-824358-(-804346))O=4830416946348-(-590877)h=Q[r[527079-527078]]i=J(614316-634176)i=f[i]m=-524618+5515874863954 A=Q[r[-320184+320186]]n=A(t,m)d=h[n]m=J(262907+-282694)i=i(f,d)d=J(553114+-572974)N=i A=Q[r[-279456+279457]]i=-176837+4902796 n=Q[r[190704-190702]]d=f[d]t=n(m,O)h=A[t]d=d(f,h)U=d else d={}i=true Q[r[790655-790654]]=i i=p[J(-771670+751947)]end else A=Q[h]d=A i=655085+14700599 end end else if i&lt;-812989+14284344 then if i&lt;12828807-(-594622)then if i&lt;881611+12477891 then e=i G=Q[D]aC=J(72848+-92842)lC=Q[r[-79810-(-79812)]]JC=Q[r[-704248-(-704251)]]rC=23358723412440-(-317605)iC=JC(aC,rC)S=lC[iC]b=G[S]X=not b T=X i=X and 272776+2611584 or 838351-82045 else i=p[J(341798-361602)]d={}end else q=Q[u]i=q and 2066045-427907 or 494122+5852846 H=q end else if i&lt;14620323-1036459 then W=J(505040-524877)i=p[W]W=J(-253905+233912)p[W]=i i=-769942+6728992 else O=Q[r[1012088+-1012087]]R=Q[r[-697873-(-697875)]]V=403190+30676881723607 E=J(-743820-(-723975))g=R(E,V)E=i R=i i=u and-857560+16803794 or 4763985-(-232548)m=O[g]g=u end end end else if i&lt;542903+14062590 then if i&lt;840901+13326004 then if i&lt;511583+13251540 then if i&lt;14641492-907790 then U=Q[f]A=Q[r[61518-61517]]n=Q[r[-1041383-(-1041385)]]O=900968+12478604859210 m=J(21831-41818)t=n(m,O)h=A[t]t=J(-112587+92685)N=U[h]h=Q[r[-1031600+1031601]]R=20109641728234-(-566186)A=Q[r[-28406+28408]]O=J(-785336-(-765331))m=430016322909-7317 n=A(t,m)U=h[n]d=N[U]U=Q[r[636650+-636649]]h=Q[r[635495+-635493]]t=8969319662006-(-986778)n=J(-1005699-(-985993))A=h(n,t)N=U[A]U=true d[N]=U h=Q[f]n=Q[r[299275+-299274]]t=Q[r[658206+-658204]]m=t(O,R)A=n[m]i=p[J(-963703+943876)]U=h[A]O=943196740445-(-239194)A=Q[r[256910-256909]]n=Q[r[177512+-177510]]m=J(-861995-(-842175))t=n(m,O)h=A[t]m=6269532883682-(-147589)N=U[h]h=Q[r[-35980-(-35981)]]A=Q[r[792415+-792413]]t=J(633124+-653011)n=A(t,m)U=h[n]d=N[U]n=J(296709-316634)U=Q[r[60175+-60174]]m=414231+5063204239134 t=34840187461591-(-810888)h=Q[r[258180+-258178]]A=h(n,t)N=U[A]h=Q[r[994721-994720]]t=J(-765406-(-745635))A=Q[r[124247+-124245]]n=A(t,m)U=h[n]d[N]=U d={}else q=Q[r[316561-316556]]k=Q[r[-92308+92310]]v=854333+16096438391818 i=7608326-241166 K=J(632401-652299)C=Q[r[42661-42658]]D=C(K,v)W=k[D]P=q(f,W)end else m=F()Q[m]=d i=Q[n]R=-805670-(-805735)O=206280+-206277 V=B(8343986-(-743775),{})d=i(O,R)i=-389457+389457 R=i O=F()i=-972423+972423 g=i Q[O]=d E=J(970870-990771)d=p[E]E={d(V)}i={l(E)}E=i d=646819+-646817 i=E[d]d=J(413503-433278)V=i i=p[d]P=J(779734+-799641)x=Q[N]q=p[P]P=q(V)q=J(467806+-487570)H=x(P,q)x={H()}d=i(l(x))x=F()Q[x]=d H=Q[O]q=H d=-774280-(-774281)H=-874274-(-874275)P=H i=219691+15111451 H=-1045263-(-1045263)W=P&lt;H H=d-P end else if i&lt;14685730-209509 then if i&lt;508197+13783725 then h=J(490670+-510668)u=a[-948365-(-948367)]f=a[602247-602246]U=p[h]O=816199+18016924052606 A=Q[r[457014-457013]]m=J(561528-581357)n=Q[r[-45388-(-45390)]]t=n(m,O)R=-570468+18244339602835 h=A[t]t=J(-163843+144040)N=U[h]h=Q[r[-226485+226486]]m=13236078505581-267866 A=Q[r[576148+-576146]]n=A(t,m)U=h[n]d=N[U]U=Q[r[-402150-(-402151)]]t=1037416+16245642250532 n=J(892902+-912763)h=Q[r[-418+420]]A=h(n,t)N=U[A]i=d[N]d=J(-757397-(-737407))d=i[d]d=d(i)n=J(233432-253194)t=710511+7125839639943 U=Q[r[-104621+104622]]N=d h=Q[r[-473396-(-473398)]]A=h(n,t)d=U[A]i=N[d]U=Q[r[482311+-482310]]t=24447656249406-515014 h=Q[r[595001+-594999]]n=J(-904756+884786)A=h(n,t)d=U[A]U=u A=J(44524+-64500)O=J(-976826+956934)i[d]=U d=Q[r[110613-110612]]U=Q[r[-224089-(-224091)]]n=7946577142474-(-994218)h=U(A,n)i=d[h]n=Q[r[-783034-(-783035)]]t=Q[r[-545893-(-545895)]]m=t(O,R)A=n[m]h=f[A]n=Q[r[350569-350568]]O=J(820568+-840346)t=Q[r[943462-943460]]R=24082578241963-789981 m=t(O,R)A=n[m]O=110744+18589586174264 U=h[A]A=Q[r[840389-840388]]n=Q[r[-327313-(-327315)]]m=J(-346430-(-326670))t=n(m,O)h=A[t]O=-225927+18540265067584 d=U[h]N[i]=d i=Q[r[-222793-(-222796)]]m=J(1024421-1044262)A=Q[r[455229-455228]]n=Q[r[-312559+312561]]t=n(m,O)h=A[t]U=N[h]d=i(N,U)i=Q[r[551907+-551903]]u=nil d=i(f)f=nil i=p[J(-244371-(-224655))]d={}N=nil else e=985407+-985406 i=7914931-479643 T=z[e]pC=T end else i=13576926-974171 end end else if i&lt;15622463-866844 then if i&lt;14227320-(-402764)then if i&lt;13935512-(-691088)then t=O P=J(-133971+114182)q=p[P]P=J(-1016273-(-996443))H=q[P]q=H(f,t)H=Q[r[-884689+884695]]P=H()x=q+P V=x+A x=-657716-(-657972)E=V%x A=E P=286213+-286212 x=N[u]q=A+P H=U[q]V=x..H N[u]=V t=nil i=-1020358+8360474 else U=-873427+873428 u=Q[r[-284985-(-284986)]]h=973547-973545 N=u(U,h)u=-482103-(-482104)f=N==u i=f and 6125083-1024933 or 2838926-(-363836)d=f end else V=J(-514440+494727)x=6327593544585-(-811001)m=J(-165253+145233)t=p[m]i=p[J(-279549+259753)]R=Q[r[-609024-(-609026)]]g=Q[r[-422801+422804]]E=g(V,x)O=R[E]x=565975+12251459646322 m=t(O)t=Q[r[321903-321898]]R=Q[r[-229941+229943]]V=J(765480-785347)g=Q[r[-81719+81722]]E=g(V,x)d={}O=R[E]m=t(f,O)end else if i&lt;15750810-903157 then V=J(919359-939265)R=Q[r[-636788+636789]]g=Q[r[-890906+890908]]x=-449067+6666202080843 E=g(V,x)V=J(828335+-848292)O=R[E]m=t[O]x=34842211218882-636514 R=Q[r[-517027-(-517028)]]g=Q[r[699992-699990]]E=g(V,x)O=R[E]i=m[O]N+=i i=12378594-703007 else E=J(-512474-(-492482))i=9893413-562799 g=p[E]E=J(-616133+596257)R=g[E]m=R end end end end else if i&lt;15532669-(-195415)then if i&lt;228232+15219444 then if i&lt;669837+14599662 then if i&lt;15996431-872126 then if i&lt;14951408-(-32748)then N=228310-228309 u=Q[r[-835184+835187]]f=u~=N i=f and-970110+3398327 or 891608+12171693 else C=J(510030+-530027)k=F()o=685693+-685692 Q[k]=H d=p[C]D=117168+-117068 C=J(-11449+-8444)i=d[C]C=367564+-367563 z=550039-550037 d=i(C,D)e=J(-694182+674275)C=F()K=534392+-534137 Q[C]=d D=-291003-(-291003)S=-453900-(-463900)i=Q[n]d=i(D,K)D=F()Q[D]=d i=Q[n]K=1029307-1029306 v=Q[C]d=i(K,v)K=F()Q[K]=d G=-592704+592704 d=Q[n]v=d(o,z)d=-301826+301827 i=v==d z=J(617947-637689)d=J(-875154-(-855390))v=F()Q[v]=i T=p[e]X=Q[n]b={X(G,S)}e=T(l(b))T=J(446760+-466502)i=J(-343019+323193)pC=e..T i=V[i]o=z..pC z=J(411499+-431400)i=i(V,d,o)o=F()Q[o]=i d=p[z]pC=I(14237025-(-390708),{n;k;O,N;u;x,v,o,C,K,D,m})z={d(pC)}i={l(z)}z=i i=Q[v]i=i and 3074398-70109 or 3997598-(-1008600)end else N=J(-341978-(-321986))u=p[N]N=J(618280+-638214)f=u[N]N=Q[r[-740072-(-740073)]]u={f(N)}d={l(u)}i=p[J(912121+-931845)]end else if i&lt;16365811-990193 then if i&lt;14747524-(-586492)then H=H+P d=H&lt;=q k=not W d=k and d k=H&gt;=q k=W and k d=k or d k=359751+14715207 i=d and k d=491537+12979498 i=i or d else t=J(361257+-381249)n=J(-939785+919788)A=d d=p[n]n=J(570653-590546)i=d[n]n=F()Q[n]=i d=p[t]t=J(695252-715214)i=d[t]t=i g=J(113931-133923)O=i R=p[g]m=R i=R and-817562+15674120 or 10060661-730047 end else i=N i=d and 489859+13239807 or-387739+3564134 end end else if i&lt;16096812-467903 then if i&lt;14709731-(-829452)then if i&lt;14802508-(-719699)then lC=Q[D]wC=J(-638129-(-618372))iC=Q[r[-557950-(-557952)]]cC=706976868996-(-1021637)aC=Q[r[178455+-178452]]rC=aC(wC,cC)JC=iC[rC]wC=-824545+20657128651380 S=lC[JC]JC=Q[r[-711477-(-711479)]]iC=Q[r[1037556+-1037553]]rC=J(667435-687270)i=8897221-(-696179)aC=iC(rC,wC)lC=JC[aC]G=S==lC X=G else W=-475062+475062 x=#E V=x==W i=V and 55726+6574589 or 969733+8307836 end else O=J(-257843-(-237967))m=p[O]d=m i=13970203-6431 end else if i&lt;14704341-(-963011)then W=Q[x]v=J(108984-128964)C=Q[r[-22950+22952]]o=35049048204374-238742 D=Q[r[487464+-487461]]K=D(v,o)k=C[K]P=W[k]q=not P i=q and 937561+8766900 or 3124364-496895 else C=z i=pC i=775002+1124407 end end end else if i&lt;-294707+16431853 then if i&lt;16464967-505689 then if i&lt;15388679-(-551530)then if i&lt;15319770-(-609360)then N,A=U(u,N)i=N and 319293+1015611 or 3335997-(-17945)else i=E V=Q[r[-157893+157894]]P=104372+2256440978534 x=Q[r[31108-31106]]q=J(1023831-1043768)H=x(q,P)E=V[H]t={[m]=O,[R]=g;[E]=U}H=3714489749152-427999 x=J(-504279+484560)g=Q[r[-646333-(-646334)]]E=Q[r[-911228-(-911230)]]V=E(x,H)R=g[V]H=2176577093578-(-525355)O=t[R]g=Q[r[-795987-(-795988)]]E=Q[r[30499+-30497]]x=J(331055-350890)V=E(x,H)R=g[V]m=O==R i=m and-269353+2088652 or 4839335-(-78904)end else W=J(-360489-(-340608))i=5331474-334941 k=-626138+32052039387175 H=Q[r[2169+-2168]]q=Q[r[-856414-(-856416)]]P=q(W,k)x=H[P]V=J(1019423+-1039283)V=u[V]V=V(u,x)g=V end else if i&lt;15567703-(-419124)then f=a[-244518-(-244519)]m=-580263+30748779664021 U=J(836399-856397)N=p[U]h=Q[r[202823+-202822]]A=Q[r[934836+-934834]]t=J(-168787+148839)n=A(t,m)U=h[n]u=N[U]t=-100359+18247424862520 U=Q[r[953137+-953136]]h=Q[r[1040108+-1040106]]n=J(117136-136951)A=h(n,t)n=6754745904726-(-253427)N=U[A]A=J(-104238-(-84326))d=u[N]N=Q[r[-399114+399115]]O=23783769780773-(-227614)U=Q[r[86289+-86287]]h=U(A,n)u=N[h]i=d[u]d=J(784255-804245)m=J(77968-97822)A=-708889+11199524791672 d=i[d]d=d(i)u=d d=Q[r[-783608+783609]]N=Q[r[-573015+573017]]h=J(1023198-1043154)U=N(h,A)i=d[U]A=Q[r[484021+-484020]]n=Q[r[-774742-(-774744)]]t=n(m,O)h=A[t]O=572607+24175553670970 U=f[h]m=J(-837684+817915)A=Q[r[-736931-(-736932)]]n=Q[r[133245-133243]]t=n(m,O)h=A[t]N=U[h]t=J(-143149-(-123418))h=Q[r[303609+-303608]]A=Q[r[916151-916149]]m=-620670+24704690840942 n=A(t,m)U=h[n]d=N[U]u[i]=d i=Q[r[52661+-52658]]d=i(f)d={u}i=p[J(602663-622422)]else i=13405755-718259 b=J(176053-196073)T=p[b]b=T(X)end end else if i&lt;212180+16312706 then if i&lt;16049810-(-312334)then if i&lt;15645946-(-560539)then K=J(-399529-(-379808))v=29602620424101-608717 q=Q[r[1022863-1022858]]k=Q[r[-766778-(-766780)]]C=Q[r[842618+-842615]]D=C(K,v)W=k[D]P=q(f,W)i=-370128+10417357 else U=J(852972+-872970)t=J(189747+-209612)f=a[-1019357+1019358]N=p[U]m=-268142+15901536744538 h=Q[r[413165-413164]]A=Q[r[141503+-141501]]n=A(t,m)t=-479339+29253759387041 U=h[n]n=J(852366+-872150)u=N[U]U=Q[r[593933+-593932]]h=Q[r[-433939+433941]]A=h(n,t)N=U[A]A=J(-165673+145841)d=u[N]N=Q[r[-517103+517104]]U=Q[r[92883-92881]]n=-302938+23088724887897 h=U(A,n)u=N[h]i=d[u]A=24542045851269-(-1039903)m=J(590332-610112)d=J(-903566+883576)d=i[d]d=d(i)u=d O=-715875+29508711309840 d=Q[r[-506656+506657]]h=J(-40182-(-20474))N=Q[r[-514264-(-514266)]]U=N(h,A)i=d[U]A=Q[r[95815-95814]]n=Q[r[162530-162528]]t=n(m,O)h=A[t]U=f[h]m=J(347015+-366851)A=Q[r[-228033-(-228034)]]O=-186522+16022365746622 n=Q[r[53492-53490]]t=n(m,O)h=A[t]N=U[h]t=J(735821+-755553)h=Q[r[574504+-574503]]m=8463302531947-3078 A=Q[r[744684+-744682]]n=A(t,m)U=h[n]d=N[U]u[i]=d i=Q[r[-419309+419312]]d=i(f)d={u}i=p[J(-1138+-18656)]end else iC=-632883+14994060706681 X=Q[D]G=Q[r[-989509+989511]]S=Q[r[-339109-(-339112)]]JC=J(950542-970487)pC=i lC=S(JC,iC)b=G[lC]e=X[b]T=not e i=T and 552099+15131203 or 13484221-158333 z=T end else if i&lt;783901+15939451 then i=13248601-645846 U=nil n=nil A=nil else q=Q[r[749350-749345]]C=Q[r[577529-577527]]D=Q[r[-379143+379146]]T=56566+13637827296216 i=-853301+8220461 o=1003949+28605381354075 v=J(-826458+806452)K=D(v,o)k=C[K]v=Q[r[1013067+-1013065]]pC=J(-360569-(-340738))o=Q[r[-441681-(-441684)]]z=o(pC,T)K=v[z]D=h[K]v=Q[r[443327+-443325]]o=Q[r[811686+-811683]]pC=J(-287858-(-267854))T=16535522734428-119625 z=o(pC,T)K=v[z]C=D..K W=k..C P=q(f,W)end end end end end end end end i=#w return l(d)end,function(p)local J,i=387573-387572,p[-430484-(-430485)]while i do f[i],J=f[i]-(-199164-(-199165)),J+(-108647+108648)if 40367-40367==f[i]then f[i],Q[i]=nil,nil end i=p[J]end end,function(p,J)local l=N(J)local a=function(a,r,w,c,d,Q)return i(p,{a,r,w,c;d,Q},J,l)end return a end,function(p,J)local l=N(J)local a=function()return i(p,{},J,l)end return a end,{},function(p,J)local l=N(J)local a=function(a,r)return i(p,{a,r},J,l)end return a end,function(p)for J=778628+-778627,#p,-880776-(-880777)do f[p[J]]=f[p[J]]+(-435928+435929)end if a then local i=a(true)local l=w(i)l[J(-541647+521791)],l[J(-400870+381063)],l[J(568894-588590)]=p,U,function()return 2612729-382465 end return i else return r({},{[J(321001+-340808)]=U,[J(-368346+348490)]=p;[J(-772627+752931)]=function()return-1021988+3252252 end})end end,function()u=u+(171759+-171758)f[u]=-777222-(-777223)return u end,-948404+948404,function(p,J)local l=N(J)local a=function(a)return i(p,{a},J,l)end return a end,function(p,J)local l=N(J)local a=function(a,r,w,c)return i(p,{a,r,w;c},J,l)end return a end,function(p,J)local l=N(J)local a=function(a,r,w)return i(p,{a,r,w},J,l)end return a end,function(p)f[p]=f[p]-(446785+-446784)if f[p]==-246717+246717 then f[p],Q[p]=nil,nil end end,function(p,J)local l=N(J)local a=function(...)return i(p,{...},J,l)end return a end,function(p,J)local l=N(J)local a=function(a,r,w,c,d)return i(p,{a,r;w;c,d},J,l)end return a end return(h(6165268-988370,{}))(l(d))end)(getfenv and getfenv()or _ENV,unpack or table[J(826132+-846008)],newproxy,setmetatable,getmetatable,select,{...})end)(...)</ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="ModuleScript" referent="RBX4706B26E71724F6D9BE629C21F30BB13">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">PrintGameHierarhy</string>
				<string name="ScriptGuid">{8BAFB44A-DCCF-4E62-8A5E-A265B626D1F4}</string>
				<ProtectedString name="Source">--[[ v1.0.0 https://wearedevs.net/obfuscator ]] return(function(...)local J={&quot;\102\065\119\065\120\087\054\073&quot;,&quot;\113\081\108\110\113\081\120\101&quot;;&quot;\082\120\109\070\085\100\088\051\090\075\120\074\050\048\072\103&quot;,&quot;\075\079\099\098\115\079\100\053&quot;;&quot;\115\054\051\105\043\047\061\061&quot;;&quot;\076\081\109\101\089\100\109\101\113\052\084\051\113\065\122\118&quot;;&quot;\047\105\090\066\048\105\050\073\050\087\097\115\090\075\109\114\121\080\113\061&quot;;&quot;\115\097\049\049\071\056\067\053\082\084\079\071\083\075\103\075\074\098\043\048\082\111\078\104\067\081\072\081\098\085\053\079\074\097\117\116\102\111\081\076\069\100\052\109\057\075\107\106\057\074\104\089\090\056\053\084\112\103\073\056\055\047\061\061&quot;;&quot;\050\065\048\103\109\100\047\101\107\087\088\106\109\068\104\050&quot;;&quot;\087\117\069\114\121\117\061\061&quot;;&quot;\109\055\120\104\076\055\109\043\049\068\084\118\090\055\109\086\090\055\109\087\049\047\061\061&quot;;&quot;\120\110\118\043\074\117\101\061&quot;;&quot;\085\112\061\061&quot;;&quot;\090\055\120\078\089\055\048\061&quot;,&quot;\048\120\121\050\089\055\090\079\090\055\121\097\121\048\121\100&quot;,&quot;\098\068\084\085\089\048\118\118\113\103\090\057\050\105\056\043&quot;,&quot;\100\055\097\086\121\120\097\073\076\067\056\050\080\087\067\068\121\112\061\061&quot;;&quot;\074\065\118\050\107\102\121\049\082\105\056\110\048\055\118\067&quot;;&quot;\051\119\085\079\051\049\109\056&quot;;&quot;\089\100\120\101\098\117\061\061&quot;,&quot;\054\110\120\098\088\047\105\069\080\111\069\107\049\071\115\089\079\103\118\104\104\107\114\076\111\070\082\083\087\102\097\116\047\104\083\075\119\057\084\082\076\051\075\053\103\104\051\068\070\055\052\114\055\047\055\074\089\056\119\109\052\114\121\121\073\066\074\073\119\112\061\061&quot;;&quot;\097\112\061\061&quot;,&quot;\114\072\048\055\051\103\072\056&quot;,&quot;\104\118\077\101\118\070\070\061&quot;;&quot;\089\055\109\110&quot;;&quot;\076\055\122\113\085\048\067\106\100\065\048\103\084\087\121\079\084\066\061\061&quot;,&quot;\084\055\088\100\089\080\084\055\047\102\118\075\090\048\050\110\107\047\061\061&quot;;&quot;\048\054\081\083\113\101\112\111&quot;,&quot;\121\052\097\043\089\103\049\061&quot;;&quot;\052\067\108\088\089\065\084\118\082\117\061\061&quot;,&quot;\098\052\056\051\098\052\097\102&quot;,&quot;\108\077\118\068\049\105\087\109&quot;;&quot;\113\081\051\051\076\112\061\061&quot;,&quot;\050\068\084\083\121\087\067\086\074\067\056\111\100\109\056\065\121\112\061\061&quot;,&quot;\080\117\067\100\104\079\101\061&quot;,&quot;\121\065\122\099\089\103\049\061&quot;,&quot;\107\066\061\061&quot;;&quot;\113\105\118\101\121\047\061\061&quot;,&quot;\057\100\090\074\076\066\097\071\057\120\118\055\113\122\077\056\101\081\049\120\112\108\108\077\088\078\070\061&quot;;&quot;\109\087\074\081\109\068\068\101\113\087\122\100\076\087\121\098\080\047\061\061&quot;,&quot;&quot;,&quot;\052\067\108\104\121\052\084\051\090\055\120\078\089\055\048\061&quot;;&quot;\121\081\067\051\090\055\050\116&quot;,&quot;\048\075\050\057\074\048\121\109\090\048\067\083\109\109\109\098\076\066\061\061&quot;;&quot;\111\052\047\061&quot;;&quot;\107\080\090\113\121\055\112\101\047\048\067\103\107\081\122\105\098\105\087\061&quot;,&quot;\103\099\077\067\082\066\097\090\087\107\103\104\089\047\074\066\076\072\113\116\104\098\107\075\051\081\071\077\054\057\113\116\112\073\074\113\081\073\117\061&quot;;&quot;\050\114\089\082\112\107\117\061&quot;;&quot;\114\048\070\061&quot;;&quot;\053\050\116\084\087\055\120\117\108\085\090\109\117\043\087\117\047\098\098\075\122\066\061\061&quot;;&quot;\066\082\122\052\100\043\087\061&quot;,&quot;\076\055\050\051\089\055\066\061&quot;;&quot;\089\079\049\061&quot;;&quot;\052\067\108\053\121\100\070\061&quot;,&quot;\078\090\118\049\121\090\101\097&quot;,&quot;\100\052\117\081\121\102\121\048\121\118\056\088\109\112\061\061&quot;,&quot;\076\065\120\110\121\055\108\104&quot;,&quot;\089\048\088\084\107\068\047\122\107\067\097\113\082\055\121\103\107\120\116\061&quot;,&quot;\121\056\070\049\083\053\051\097&quot;;&quot;\049\104\108\085\109\074\118\090&quot;;&quot;\119\073\089\113&quot;;&quot;\119\082\049\116\084\047\114\114\079\103\119\106\087\078\112\115\081\079\104\114\070\081\072\121\088\085\072\107\116\117\061\061&quot;;&quot;\097\082\076\061&quot;;&quot;\118\107\055\050\055\120\065\078\113\105\104\119&quot;;&quot;\085\078\112\118\121\115\116\088\085\112\061\061&quot;;&quot;\051\065\113\072\051\117\061\061&quot;,&quot;\104\074\104\076&quot;;&quot;\050\086\051\100\048\105\120\074\080\120\121\106\050\052\050\073\074\081\112\061&quot;;&quot;\113\103\118\103\113\067\121\098\109\067\118\079\100\068\050\078\080\103\074\061&quot;;&quot;\083\101\116\104\089\066\061\061&quot;;&quot;\081\103\086\069\113\115\055\086&quot;;&quot;\121\103\050\067\113\112\061\061&quot;,&quot;\055\066\074\119\098\067\048\061&quot;;&quot;\048\047\087\055\080\048\082\050&quot;,&quot;\082\068\122\079\080\102\056\055\084\087\108\118\100\112\061\061&quot;,&quot;\089\079\068\061&quot;,&quot;\097\117\100\108\078\053\114\114&quot;,&quot;\053\110\074\120\105\066\065\119\078\075\078\083\083\118\066\061&quot;;&quot;\076\103\084\043\098\100\069\105&quot;;&quot;\052\067\108\105\113\066\061\061&quot;,&quot;\084\081\109\101\047\081\051\088\089\055\084\043\121\100\070\061&quot;;&quot;\090\116\114\108\087\078\089\050&quot;;&quot;\082\065\109\043\089\075\090\104\076\048\087\061&quot;,&quot;\121\081\109\101\052\081\090\051\089\100\109\054\098\055\118\118\076\065\120\043\113\081\051\069\052\103\050\101\076\065\118\110\121\066\061\061&quot;,&quot;\100\087\122\109\084\079\118\098\109\100\120\048\084\065\112\081&quot;,&quot;\090\055\108\110\090\100\067\078\121\052\049\061&quot;,&quot;\090\100\069\066\113\100\050\073&quot;,&quot;\102\108\052\057\101\109\101\098&quot;,&quot;\113\109\050\066\084\048\084\114\084\100\068\066\107\087\122\069&quot;;&quot;\069\086\049\061&quot;,&quot;\121\081\120\104\121\047\061\061&quot;,&quot;\090\055\108\102\090\075\097\088\089\065\076\061&quot;,&quot;\072\077\055\089\048\112\061\061&quot;;&quot;\080\103\118\118\089\055\113\061&quot;,&quot;\076\065\109\104\089\103\121\118&quot;}for U,A in ipairs({{-537829-(-537830),-543798-(-543893)},{781874-781873,-512529-(-512542)},{968797+-968783,-1047824+1047919}})do while A[289178-289177]&lt;A[350743+-350741]do J[A[-444962+444963]],J[A[577380-577378]],A[-533557+533558],A[-435585-(-435587)]=J[A[-949683-(-949685)]],J[A[-354716-(-354717)]],A[-81494+81495]+(-430259-(-430260)),A[987479-987477]-(-424424-(-424425))end end local function U(U)return J[U+(155378+-128743)]end do local U=math.floor local A=string.sub local x=string.len local S=string.char local q={q=-762125+762149,[&quot;\047&quot;]=-781461+781477,M=579813-579751,K=-946540+946547;[&quot;\057&quot;]=1019614-1019572,r=506144-506129,S=-129316-(-129374),d=-83252+83274;y=-109299-(-109324);F=25145+-25089,W=-647669-(-647705);H=672348+-672288,A=119182+-119144;j=674160-674150,o=45773+-45762,[&quot;\053&quot;]=1040558+-1040514,J=-490634-(-490646),v=-1021311-(-1021348);c=-426721+426768;U=-570752-(-570766),p=-238055-(-238087);e=-170891-(-170943),L=298874-298846,f=242067-242016,V=836458+-836423;m=676202-676181,Q=349142-349088,s=926964+-926962;[&quot;\049&quot;]=433141-433133;G=-237486-(-237549);X=615562+-615521;[&quot;\048&quot;]=-203945+203965,t=-739125+739165,I=240052+-240009;w=788820+-788761;Y=-930541+930568,n=976193+-976147;k=508280-508262;[&quot;\052&quot;]=202059-202036,z=544057-544008;b=424051-424025,C=-225422-(-225475),B=826981+-826933;[&quot;\054&quot;]=16887+-16856;[&quot;\056&quot;]=-932967+932968,[&quot;\051&quot;]=767052-767019,x=122162-122157,u=-2356+2356;a=358830-358821;l=303358-303297;T=860231-860214,[&quot;\050&quot;]=166787-166774;h=-763822-(-763867),E=-225754+225811,[&quot;\043&quot;]=940774+-940724;g=-1047112-(-1047167),Z=-816733-(-816762);R=-809883-(-809913),[&quot;\055&quot;]=675924+-675918;i=12450+-12411,P=364306+-364287,O=908248-908245;N=786012-785978,D=-261004-(-261008)}local Z=table.insert local T=table.concat local o=type local K=J for J=1044088+-1044087,#K,1045937-1045936 do local O=K[J]if o(O)==&quot;\115\116\114\105\110\103&quot;then local o=x(O)local m={}local z=10726-10725 local W=-553632+553632 local v=-811531+811531 while z&lt;=o do local J=A(O,z,z)local x=q[J]if x then W=W+x*(-378336-(-378400))^((919278+-919275)-v)v=v+(638502+-638501)if v==-564068+564072 then v=-639722-(-639722)local J=U(W/(7355+58181))local A=U((W%(778806-713270))/(7743-7487))local x=W%(312222+-311966)Z(m,S(J,A,x))W=-997360+997360 end elseif J==&quot;\061&quot;then Z(m,S(U(W/(532249-466713))))if z&gt;=o or A(O,z+(269900+-269899),z+(-53373+53374))~=&quot;\061&quot;then Z(m,S(U((W%(-173161+238697))/(328737+-328481))))end break end z=z+(-194910-(-194911))end K[J]=T(m)end end end return(function(J,x,S,q,Z,T,o,a,A,M,K,R,w,G,v,X,r,h,m,W,B,O,z)m,r,G,z,v,a,W,h,X,K,M,R,w,A,O,B=function()z=z+(556962-556961)O[z]=533354-533353 return z end,function(J,U)local x=W(U)local S=function(S,q,Z)return A(J,{S;q;Z},U,x)end return S end,function(J,U)local x=W(U)local S=function(S,q,Z,T,o,K)return A(J,{S,q;Z;T,o;K},U,x)end return S end,310090-310090,function(J)local U,A=-579983+579984,J[-68729-(-68730)]while A do O[A],U=O[A]-(-30727-(-30728)),U+(-413059+413060)if O[A]==-947205-(-947205)then O[A],K[A]=nil,nil end A=J[U]end end,function(J,U)local x=W(U)local S=function(S,q,Z,T,o)return A(J,{S,q,Z,T,o},U,x)end return S end,function(J)for U=-353329+353330,#J,677257-677256 do O[J[U]]=(-267046+267047)+O[J[U]]end if S then local A=S(true)local x=Z(A)x[U(458362-484954)],x[U(418352+-444894)],x[U(735340-761908)]=J,v,function()return 165774-(-773685)end return A else return q({},{[U(108+-26650)]=v,[U(133761-160353)]=J,[U(-264850-(-238282))]=function()return-1004253+1943712 end})end end,function(J,U)local x=W(U)local S=function(...)return A(J,{...},U,x)end return S end,function(J,U)local x=W(U)local S=function(S,q,Z,T,o,K,O,m,z)return A(J,{S,q;Z;T,o;K,O;m;z},U,x)end return S end,{},function(J,U)local x=W(U)local S=function(S,q)return A(J,{S;q},U,x)end return S end,function(J,U)local x=W(U)local S=function(S,q,Z,T)return A(J,{S;q,Z,T},U,x)end return S end,function(J)O[J]=O[J]-(928683-928682)if O[J]==270539-270539 then O[J],K[J]=nil,nil end end,function(A,S,q,Z)local v,g,E,D,Y,n,e,P,c,z,F,j,y,H,W,N,u,i,t,I,b,s,f,d,C,l,Q,k,L,p,h,V,O,o while A do if A&lt;703337+8315172 then if A&lt;3380755-(-594552)then if A&lt;2207749-296652 then if A&lt;946042-(-213215)then if A&lt;110133-(-276063)then if A&lt;551446-403405 then if A&lt;-540178+620675 then D=K[h]A=10269930-(-144562)o=D else P=K[q[-192287+192288]]k=K[q[343626-343624]]I=U(20123+-46741)i=20021777854120-772669 p=k(I,i)Y=P[p]D=h[Y]o=D A=D and-422479+9230217 or-269031+12143149 end else if A&lt;273173+64662 then A=true K[q[-741331-(-741332)]]=A o={}A=J[U(436125+-462731)]else Y=U(712350+-738958)i=-25597+4370222738416 D=J[Y]A=J[U(-896468-(-869890))]I=U(755830+-782420)P=K[q[-798658+798659]]k=K[q[-513283-(-513285)]]p=k(I,i)Y=P[p]o=D[Y]P=K[q[-1039730-(-1039731)]]i=16885104663042-(-771252)I=U(-138985-(-112400))k=K[q[793210+-793208]]p=k(I,i)Y=P[p]D={o(z,Y)}o={x(D)}end end else if A&lt;-311265-(-847393)then if A&lt;4411+497319 then i,y=C(I,i)A=i and 15302264-957804 or 14575538-(-630107)else W=K[q[623999-623990]]v=W A={}O=A A=13849134-(-502424)z=-262037-(-262038)W=-665040-(-665041)h=W W=-241845+241845 D=h&lt;W W=z-h end else y=y+s c=not g e=y&lt;=F e=c and e c=y&gt;=F c=g and c e=c or e c=9740803-207651 A=e and c e=776117+4599047 A=A or e end end else if A&lt;621742-(-953213)then if A&lt;1187492-(-238668)then if A&lt;895533-(-386465)then z=S[924505+-924503]O=S[949241-949240]A=K[q[74180-74179]]W=A A=W[z]A=A and 2265012-(-429201)or 9421181-(-554852)else A=4851122-596626 K[z]=o end else if A&lt;2267903-731263 then A=J[U(135099-161681)]o={}else A=o and 17546988-988927 or-949029+16608296 end end else if A&lt;-331932+2142749 then if A&lt;1743538-(-3344)then W=-926016+9758941 z=U(991111+-1017734)o=7575284-287884 O=z^W A=o-O o=U(-934260-(-907694))O=A A=o/O o={A}A=J[U(-659929+633334)]else I=K[q[-738881+738882]]i=K[q[-628390+628392]]y=21574925171705-791739 e=U(52218+-78762)C=i(e,y)A=13062153-458603 p=I[C]P=p end else Y=U(129315+-155858)I=U(932082+-958643)o=J[Y]P=K[q[-377077-(-377078)]]i=1000174+17612810919195 k=K[q[-192388-(-192390)]]p=k(I,i)I=U(527709-554268)Y=P[p]i=22176446110532-1012462 A=o[Y]P=K[q[-389114+389115]]k=K[q[265703+-265701]]p=k(I,i)Y=P[p]k=A o=A(Y,z)Y=o p=O==W A=p and 309698+1500971 or 12091251-(-512299)P=p end end end else if A&lt;358962+2659316 then if A&lt;2866847-162986 then if A&lt;1708415-(-794963)then if A&lt;1383854-(-856034)then Y=not O A=Y and 15488813-209020 or 4166120-453221 o=Y else W=-329012-(-329143)z=K[q[518420-518417]]O=z*W z=-361371-(-361628)o=O%z A=-414550+10546210 K[q[91830-91827]]=o end else if A&lt;3636693-1043533 then W=K[q[-594474-(-594480)]]z=W==O A=99317+4812545 o=z else A=601396+14265552 end end else if A&lt;429634+2417112 then if A&lt;3552824-722657 then n=U(-683088+656545)P=p u=J[n]n=U(34780-61364)A=15518054-(-489674)l=u[n]u=l(O,P)l=K[q[114485+-114479]]n=l()y=u+n e=y+D y=730471+-730215 n=-981094+981095 C=e%y D=C y=W[z]u=D+n l=v[u]e=y..l W[z]=e P=nil else o=k A=p A=k and 13803439-576237 or 3777518-(-68157)end else W=525491-525370 z=K[q[-753625+753627]]O=z*W z=-947235+4392989096992 o=O+z O=365937+35184371722895 A=o%O K[q[-518321+518323]]=A z=-343254+343255 O=K[q[767172+-767169]]o=O~=z A=2430195-1239 end end else if A&lt;4647902-1012478 then if A&lt;843945+2502141 then if A&lt;5802+3199120 then h=U(907076-933684)v=J[h]p=728138+19230121903792 D=K[q[386221+-386220]]k=U(-408786+382238)Y=K[q[826494-826492]]P=Y(k,p)h=D[P]o=v[h]D=K[q[30087-30086]]p=-882866+23862669026329 Y=K[q[-406672+406674]]k=U(-803505+776950)A=J[U(193075-219688)]P=Y(k,p)h=D[P]v={o(z,h)}o={x(v)}else k=z&gt;D A=12241072-(-323577)Y=k end else if A&lt;4437321-1046369 then v=U(552338+-578910)o=K[q[-686246+686247]]h=14356954942126-831633 z=K[q[-484006+484008]]W=z(v,h)A=o[W]o={A}A=J[U(-800911-(-774347))]else z=W A=K[q[-161446-(-161447)]]k=-326391-(-326646)P=1023587+-1023587 Y=A(P,k)O[z]=Y A=43679+14307879 z=nil end end else if A&lt;908165+2965107 then if A&lt;3922052-90075 then I=U(-482566+455940)p=J[I]P=A k=O==p A=k and 701376+11863273 or 3879948-652703 Y=k else A=463029+12764173 p=U(541531+-568161)k=J[p]o=k end else i=512125+29071255676004 Y=U(900881-927489)I=U(-884643-(-858103))D=J[Y]P=K[q[545477-545476]]k=K[q[843259-843257]]p=k(I,i)I=U(-135701+109087)Y=P[p]o=D[Y]P=K[q[-347373+347374]]A=-415105+765519 i=-1006398+25836335303228 k=K[q[-425950+425952]]p=k(I,i)Y=P[p]D=o(z,Y)end end end end else if A&lt;6287456-(-800199)then if A&lt;5112405-86896 then if A&lt;3748010-(-622359)then if A&lt;-290230+4473973 then if A&lt;4919660-888112 then n=U(903978+-930603)s=U(-135354+108808)A=J[n]F=J[s]n=A(F)A=U(660549+-687118)J[A]=n A=983355+10781703 else A=true A=A and 933641+6084593 or 16957292-554666 end else if A&lt;3636133-(-583549)then p=-974844+7971613634172 W=K[q[68663-68662]]A={}k=U(-992802-(-966251))Y=3494713831457-354758 v=K[q[-94007-(-94009)]]z=A D=U(-593299+566701)h=v(D,Y)o=W[h]W=960643-960643 A={[o]=W}W=A h=U(-106372-(-79764))A=K[q[-574667+574670]]o=A(O)v=o o=J[h]D=K[q[-607179+607180]]Y=K[q[-363903+363905]]P=Y(k,p)h=D[P]A=o[h]I=-31383+15628788946692 Y=K[q[-303762-(-303763)]]P=K[q[-21326-(-21328)]]p=U(-263441+236881)k=P(p,I)D=Y[k]h=D..v o=A(z,h)h=U(-638330+611722)o=J[h]D=K[q[-487399-(-487400)]]p=20499868878310-467101 k=U(-634027-(-607406))Y=K[q[212971+-212969]]P=Y(k,p)h=D[P]A=o[h]D=K[q[-315062-(-315063)]]Y=K[q[1033148-1033146]]k=U(785942-812523)p=804767+8981939701943 P=Y(k,p)h=D[P]o=A(z,h)h=O A=475939-391785 else H=w(H)s=w(s)A=10675388-445279 b=nil L=w(L)g=w(g)j=w(j)c=w(c)end end else if A&lt;-629774+5307282 then if A&lt;4673787-74214 then A=o and-242316+3593393 or 3724459-(-492108)else O=S[645899+-645898]z=not O A=z and 5195865-818224 or 7173630-(-545396)o=z end else A=14941418-(-717849)O=nil K[q[44115+-44110]]=o end end else if A&lt;648547+5540115 then if A&lt;452533+5372181 then if A&lt;4772547-(-545434)then A=V A=2175756-781790 o=E else F=-228459+228459 y=#C e=y==F A=13512766-(-362794)end else if A&lt;859945+5221810 then D=K[q[645922-645921]]p=34321672082644-562790 Y=K[q[-147633+147635]]k=U(144648-171215)P=Y(k,p)o=D[P]A=h[o]h=A A=-804412+888566 else O=K[q[-508178+508179]]o=#O O=1018502+-1018502 A=o==O A=A and-92308+2982421 or-841347+12222011 end end else if A&lt;86303+6697052 then if A&lt;6338699-108952 then A=true A=A and 61856+12866239 or 120161+7121386 else o=W A=W and 140879+9993846 or 15109623-(-1023597)end else A=-660742+6858663 end end end else if A&lt;8022576-10162 then if A&lt;8022212-386425 then if A&lt;-3249+7350095 then if A&lt;814965+6465062 then o={}A=J[U(268762-295338)]else A=K[q[-905244-(-905254)]]z=K[q[653542-653531]]O[A]=z A=K[q[726244-726232]]z={A(O)}A=J[U(-945195+918590)]o={x(z)}end else if A&lt;8101565-493264 then I=-179612-(-179625)W=-157986+158018 z=K[q[-513637-(-513640)]]O=z%W k=225003-225001 v=K[q[658861-658857]]Y=K[q[601470+-601468]]e=K[q[-911931-(-911934)]]C=e-O e=-788651+788683 i=C/e p=I-i P=k^p D=Y/P h=v(D)v=4295558465-591169 W=h%v h=-287195-(-287197)v=h^O z=W/v v=K[q[814714-814710]]P=-942724+942725 Y=z%P P=138215+4294829081 D=Y*P h=v(D)I=1034268-1034012 v=K[q[-963132-(-963136)]]D=v(z)W=h+D h=-955870-(-1021406)v=W%h Y=-66166+131702 k=-33255+33511 D=W-v h=D/Y Y=957490+-957234 D=v%Y P=v-D O=nil Y=P/k k=-925865+926121 P=h%k z=nil v=nil p=h-P k=p/I W=nil p={D,Y,P,k}K[q[-800446+800447]]=p A=-343632+11724296 P=nil k=nil Y=nil h=nil D=nil else z=K[q[548931+-548929]]W=K[q[-788598-(-788601)]]O=z==W o=O A=669766+883996 end end else if A&lt;8079234-320496 then if A&lt;923619+6789244 then u=I==i A=-781673+16262486 l=u else h=K[q[-722495+722496]]D=K[q[-1021986+1021988]]P=U(-855758+829159)k=990902+19903712839038 Y=D(P,k)A=685260+3692381 v=h[Y]W=O[v]z=not W o=z end else Q=-623416-(-623418)t=b[Q]Q=K[j]A=970113+4093882 f=t==Q E=f end end else if A&lt;8009976-(-868171)then if A&lt;-237394+9051394 then if A&lt;-654345+8749257 then D=nil A=15776697-909749 Y=nil v=nil else i=U(462633-489196)A=11499088-(-375030)C=237774+34427398823377 k=K[q[335683+-335682]]p=K[q[580729+-580727]]I=p(i,C)P=k[I]Y=h[P]k=U(-203554+176928)P=J[k]D=Y~=P o=D end else O=U(549107-575700)A=J[O]z=K[q[-57601+57609]]W=-313212+313212 O=A(z,W)A=-430675+942168 end else if A&lt;8856248-(-146787)then if A&lt;9309268-313344 then g=U(978385+-1004987)s=m()K[s]=l c=-110683-(-110783)o=J[g]g=U(790485-817050)A=o[g]g=42073-42072 o=A(g,c)f=U(-403861-(-377236))H=839238+-838983 N=262566+-262566 g=m()c=140583+-140583 K[g]=o A=K[Y]o=A(c,H)c=m()K[c]=o H=-522218+522219 A=K[Y]L=K[g]o=A(H,L)H=m()b=266339-266337 K[H]=o j=168122+-168121 d=1003686-993686 o=K[Y]L=o(j,b)o=-416439+416440 A=L==o b=U(-804366+777757)L=m()K[L]=A A=U(-423015+396465)A=e[A]V=J[f]t=K[Y]o=U(331268-357825)Q={t(N,d)}f=V(x(Q))V=U(-323369-(-296760))E=f..V j=b..E A=A(e,o,j)j=m()E=R(-583280+15353684,{Y;s,p,W,z;y;L,j;g,H,c,k})K[j]=A b=U(-1062231-(-1035661))o=J[b]b={o(E)}A={x(b)}b=A A=K[L]A=A and-866337+12755237 or 808138+15555479 else O=S[-90771+90772]v=K[q[-265468+265469]]z=S[872875-872873]Y=U(44576+-71188)k=554519+30388610072879 P=9597408714776-(-1044829)h=K[q[624642-624640]]D=h(Y,P)W=v[D]P=U(710780+-737336)o=O[W]h=K[q[16456+-16455]]D=K[q[-160027+160029]]Y=D(P,k)v=h[Y]W=z[v]A=o&lt;W o={A}A=J[U(-199983-(-173351))]end else F=1039751+-1039751 y=#C e=y==F A=e and 130276+10513927 or-566398+14441958 end end end end end else if A&lt;12312386-(-687354)then if A&lt;10075851-(-549408)then if A&lt;-1047245+11182180 then if A&lt;10277696-377113 then if A&lt;177510+9351722 then if A&lt;9473229-201014 then C=-492366+25040472912090 A=-529934+14442145 k=K[q[790550+-790549]]p=K[q[332357-332355]]i=U(58159+-84740)I=p(i,C)P=k[I]o=P else o=U(513000-539593)A=J[o]O=U(-860269+833658)o=A(O)o={}A=J[U(162281-188909)]end else if A&lt;9404486-(-462057)then e=y c=e C[e]=c A=965466-(-175313)e=nil else o={}A=J[U(-504671+478067)]end end else if A&lt;947921+9185026 then if A&lt;-193493+10180175 then A={}K[q[-444241-(-444243)]]=A h=35184371373198-(-715634)o=K[q[15440+-15437]]Y=1008151+-1007896 v=o o=z%h K[q[371815-371811]]=o A=15859979-(-147749)D=z%Y Y=414291+-414289 h=D+Y P=U(-886256-(-859713))K[q[390283+-390278]]=h Y=J[P]P=U(145036+-171633)D=Y[P]Y=D(O)D=U(-29864+3283)W[z]=D P=167058-167057 D=-699303+699404 p=-393504-(-393505)I=p k=Y p=758825-758825 i=I&lt;p p=P-I else W=699327+-699326 z=K[q[-563854-(-563857)]]O=z~=W A=O and 398346+7133196 or 2796426-367470 end else D=U(764371+-790997)h=J[D]v=W~=h A=16867071-733851 o=v end end else if A&lt;10172803-(-364859)then if A&lt;98953+10346378 then if A&lt;-622126+10875435 then s=not F l=l+n o=l&lt;=u o=s and o s=l&gt;=u s=F and s o=s or o s=8913142-(-63398)A=o and s o=-168347+15957002 A=A or o else D=o Y=U(-165783+139181)o=J[Y]Y=U(37236+-63801)i=U(-873771-(-847163))A=o[Y]Y=m()K[Y]=A P=U(-742320-(-715712))o=J[P]P=U(-842108-(-815488))A=o[P]P=A p=A I=J[i]k=I A=I and 11179925-581042 or 3866171-1024944 end else if A&lt;11463177-978900 then A=K[q[-15441+15445]]n=1029127+-1029126 u=z+n e=nil l=A(y,u,W,v,h,D)y=nil A=1293626-824743 else o=4569136-(-350970)z=U(466577-493124)W=145590+13031473 O=z^W A=o-O O=A o=U(-164549-(-137915))A=o/O o={A}A=J[U(46815-73368)]end end else if A&lt;-197386+10791730 then if A&lt;9769719-(-817598)then f=-631249-(-631250)V=b[f]A=13087029-785581 E=V else i=12301944084177-(-98191)Y=U(477608-504216)I=U(397108+-423670)D=J[Y]P=K[q[-483049+483050]]k=K[q[-424614-(-424616)]]u=557162+18367421489406 C=-130476+25178558393208 p=k(I,i)Y=P[p]o=D[Y]l=U(-259644-(-233061))i=U(859498+-886073)k=K[q[291701-291700]]p=K[q[641873-641871]]I=p(i,C)P=k[I]p=K[q[365110-365106]]s=980239225031-(-1011969)C=K[q[1040988-1040987]]e=K[q[469522-469520]]y=e(l,u)i=C[y]F=U(41354+-67931)e=K[q[358546+-358541]]l=K[q[-218690-(-218691)]]u=K[q[-324615+324617]]n=u(F,s)y=l[n]C=e..y I=i..C k=p..I Y=P..k i=467679+7496331340483 D=o(z,Y)I=U(-171831+145228)Y=U(538756-565364)D=J[Y]P=K[q[777079-777078]]k=K[q[591693-591691]]p=k(I,i)Y=P[p]o=D[Y]P=K[q[-913665-(-913666)]]I=U(-297853-(-271252))i=-995963+795862873069 k=K[q[429211-429209]]p=k(I,i)Y=P[p]D=o(z,Y)Y=-692658+692658 o=K[q[-153383-(-153389)]]P=K[q[860995+-860990]]D=o(h,Y,O,z,W,P)P=K[q[-504042+504043]]k=K[q[-830532-(-830534)]]i=23156685426335-91264 I=U(-20904-5645)p=k(I,i)Y=P[p]D=W[Y]Y=K[q[-466593-(-466597)]]o=D&gt;=Y A=o and-904982+4876195 or-217224+567638 end else A=-896675+3737902 C=U(-232082-(-205474))i=J[C]C=U(-883572+856942)I=i[C]k=I end end end else if A&lt;-116042+12313807 then if A&lt;469491+11302058 then if A&lt;10699169-(-972132)then if A&lt;9848394-(-877292)then b=U(943102+-969682)e={}s=m()y=m()F=B(285052+5826011,{y,k;p,h})K[y]=e c={}e=m()P=nil g=U(-495930-(-469314))K[e]=F F={}K[s]=F C=nil F=J[g]f=nil j=K[s]A=J[U(-810144-(-783556))]L=U(71609-98201)H={[L]=j,[b]=f}Y=nil g=F(c,H)W=nil F=r(1482793-211122,{s;y,i,k,p;e})K[v]=g h=w(h)W={}k=w(k)s=w(s)h=-862130-(-862230)K[z]=F e=w(e)I=nil D=nil D=m()p=w(p)y=w(y)i=w(i)Y=m()K[D]=h P=G(492616+12507536,{v,z})p=U(210639-237272)h=-474062+474065 K[Y]=h h=m()K[h]=P P=m()k=X(628411+14261553,{v;z;D,P})K[P]=k o={W}k=B(5288010-624773,{v;z;h,D;Y;P})W[p]=k else W=U(-149211-(-122603))z=J[W]W=U(-511296+484674)A=J[U(165362-191958)]O=z[W]W=K[q[889095+-889094]]z={O(W)}o={x(z)}end else if A&lt;12521764-764008 then F=U(954338+-980907)A=J[F]F=U(-1013204-(-986658))J[F]=A A=716564+11048494 else A=-335682+6533603 end end else if A&lt;12262963-322350 then if A&lt;11326363-(-550360)then A=o and-305413+6329183 or 9620921-(-970456)else E=K[z]o=E A=E and 257111+14968381 or 758430+635536 end else A=15924565-310385 end end else if A&lt;12921333-347935 then if A&lt;-24793+12584961 then if A&lt;404402+11998834 then N=73562+-73561 K[z]=E Q=K[H]t=Q+N f=b[t]V=I+f f=39378+-39122 A=V%f I=A t=K[c]f=i+t A=590810+3663686 t=-548718-(-548974)V=f%t i=V else A=15191922-(-13723)y=nil e=nil end else o=Y A=P A=-34035+15313828 end else if A&lt;13782411-952590 then if A&lt;640728+12023510 then A=k o=P A=P and 13032528-(-879683)or 8238338-(-918387)else C=nil p=w(p)y=w(y)e=nil i=nil W=w(W)k=w(k)P=nil P=U(693375-719983)e=21989-21988 D=nil D=U(-162776-(-136174))I=nil Y=w(Y)k=U(-668797-(-642254))Y=U(-69097+42495)h=w(h)v=w(v)C={}z=w(z)W=nil z=nil v=m()y=-429422+429678 K[v]=z z=m()I={}K[z]=W h=J[D]D=U(291921-318507)W=h[D]h=m()K[h]=W i=m()A=511196-(-629583)D=J[Y]Y=U(965083+-991648)W=D[Y]F=y Y=J[P]P=U(665078+-691700)D=Y[P]p=m()P=J[k]k=U(482341-508930)Y=P[k]y=1017783+-1017782 k=m()s=y P=420180+-420180 K[k]=P P=607748-607746 K[p]=P K[i]=I P={}y=701226-701226 I=-5763+5763 g=s&lt;y y=e-s end else A=K[Y]n=-165410-(-165411)F=845790+-845784 u=A(n,F)F=U(-308866+282297)A=U(-875359-(-848790))J[A]=u n=J[F]F=-845400+845402 A=n&gt;F A=A and 4269228-288806 or 12506214-779227 end end end end else if A&lt;-884486+16109207 then if A&lt;855959+13451821 then if A&lt;-244685+13892428 then if A&lt;12719444-(-472695)then if A&lt;22151+12987651 then A={}z=A A=-714043+7492534 O=S[313171+-313170]W=O else A=12701752-(-111189)end else if A&lt;12527953-(-717934)then p=-677573-(-677576)k=m()K[k]=o A=K[Y]I=-454840-(-454905)o=A(p,I)A=866095+-866095 p=m()C=U(87919-114489)K[p]=o I=A o=J[C]A=560216-560216 i=A e=a(-309784+10820521,{})C={o(e)}o=851264+-851262 A={x(C)}C=A A=C[o]e=A o=U(815038+-841669)A=J[o]y=K[W]n=U(197277-223902)u=J[n]n=u(e)u=U(758332+-784889)l=y(n,u)y={l()}o=A(x(y))y=m()K[y]=o o=389116+-389115 l=K[p]u=l l=-387996-(-387997)A=-471085+10701194 n=l l=-700726+700726 F=n&lt;l l=o-n else O=U(539457+-566003)o=U(429132+-455701)A=J[o]o=J[O]O=U(788442+-814988)J[O]=A A=15097477-(-516703)O=U(1025579+-1052148)J[O]=o O=K[q[-886352+886353]]z=O()end end else if A&lt;14664839-443289 then if A&lt;469263+13420574 then y=-524774-(-524775)F=#C e=W(y,F)A=147603+8864527 c=-918928-(-918929)y=D(C,e)F=K[i]g=y-c e=nil s=Y(g)F[y]=s y=nil else P=o u=22998220641469-(-693528)p=K[q[745444-745443]]C=U(-248346-(-221719))I=K[q[836017+-836015]]e=16397909065701-(-417262)i=I(C,e)k=p[i]l=U(-904159+877535)C=K[q[781469-781468]]s=U(-487944-(-461386))e=K[q[-240681+240683]]y=e(l,u)n=-370550+19868912618394 i=C[y]I=O[i]g=-487910+5947987229879 u=U(-875246+848673)e=K[q[-957358-(-957359)]]y=K[q[-321269-(-321271)]]l=y(u,n)C=e[l]c=5438398617614-(-356822)u=K[q[-468820+468821]]n=K[q[-101204+101206]]F=n(s,g)g=U(559003+-585603)l=u[F]y=O[l]n=K[q[-560217+560218]]F=K[q[-222240+222242]]s=F(g,c)u=n[s]l=u..P e=y..l i=C..e p=I..i o=k..p A=Y..o p=U(-752378+725770)o=J[p]y=204883+1159114842568 e=U(75069+-101614)I=K[q[-809850+809851]]k=A i=K[q[-506058+506060]]C=i(e,y)p=I[C]i=U(316097-342668)A=o[p]y=U(468879+-495466)l=4834081557316-213625 o=A(v,k)o=K[q[-1045215-(-1045216)]]C=15027729263729-86300 p=K[q[-680673+680675]]I=p(i,C)A=o[I]i=K[q[848106+-848105]]C=K[q[335984+-335982]]e=C(y,l)I=i[e]p=h[I]I=194788+-194787 o=p+I I=U(-216559-(-189951))y=U(286998-313615)l=8180845212708-(-547517)h[A]=o A=U(-458697+432156)A=O[A]A=A(O)p=A o=J[I]i=K[q[-789217-(-789218)]]C=K[q[553846-553844]]e=C(y,l)I=i[e]A=o[I]I=R(870219+8129532,{q[-286390+286391];q[208922-208920]})o=A(p,I)o=U(-900445-(-873854))A=J[o]C={A(p)}A=315592-(-153291)I=C[287110-287108]o=C[928056+-928055]i=C[516399-516396]C=o end else z=m()W=U(-574754+548211)O=S A=true Y=U(-655966+629396)K[z]=A o=J[W]W=U(67270-93849)A=o[W]W=m()K[W]=A A=R(-205306+9730936,{})h=m()v=m()P=r(503110+-187227,{h})K[v]=A A=false K[h]=A D=J[Y]Y=D(P)o=Y A=Y and 712672+-647900 or-952558+11367050 end end else if A&lt;477904+14403219 then if A&lt;13453421-(-944818)then if A&lt;15059868-712919 then g=U(-576023-(-549413))n=K[q[575139-575138]]c=653867+2347406002714 e=i F=K[q[508084-508082]]s=F(g,c)u=n[s]l=h[u]u=K[q[720663-720660]]A=l&gt;=u A=A and 702888+11803259 or 10671072-195133 else W=W+h Y=not D z=W&lt;=v z=Y and z Y=W&gt;=v Y=D and Y z=Y or z Y=-729182+4318866 A=z and Y z=8118116-784225 A=A or z end else if A&lt;906247+13867594 then h=-771907+771909 v=957057-957056 z=K[q[-809198-(-809199)]]W=z(v,h)z=-182883-(-182884)O=W==z o=O A=O and 832899-(-720863)or 7705257-71720 else o={z}A=J[U(135299-161914)]end end else if A&lt;14872245-(-79650)then if A&lt;13860230-(-1034839)then i=17502145145140-(-489122)O=S[84874+-84873]P=K[q[348535+-348534]]W=S[830410+-830407]h=S[-176480+176485]D=S[495199+-495193]v=S[35007-35003]z=S[-309540+309542]I=U(832753+-859327)k=K[q[247299+-247297]]p=k(I,i)Y=P[p]o=h[Y]Y=K[q[249312+-249309]]A=o&gt;=Y A=A and 14952834-56593 or 981328+957977 else o={}A=J[U(-220292-(-193738))]end else o={}p=nil v=nil O=nil P=nil z=nil Y=nil h=nil A=J[U(261266+-287885)]W=nil D=nil k=nil end end end else if A&lt;635808+15439367 then if A&lt;15033516-(-594447)then if A&lt;15560073-269673 then if A&lt;14586756-(-689384)then Q=182925+-182924 V=A t=b[Q]Q=false f=t==Q A=f and 7012667-(-830044)or 266211+4797784 E=f else A=o and 2434168-905269 or 1134195-(-690270)end else if A&lt;15410902-(-86531)then K[z]=l A=K[z]A=A and-362645+13417800 or-583863+17045422 else A=true A=A and 12423979-(-939585)or-123333+10003361 end end else if A&lt;841036+14971408 then if A&lt;754556+15033095 then A=K[q[-170690+170697]]A=A and 359305+8461932 or 894024-382531 else u=K[z]l=u A=u and 7760358-120036 or 14443482-(-1037331)end else C=not i p=p+I P=p&lt;=k P=C and P C=p&gt;=k C=i and C P=C or P C=-44555+2776523 A=P and C P=781835+7287543 A=A or P end end else if A&lt;-435892+16837107 then if A&lt;161164+16153145 then if A&lt;15443403-(-823685)then A=o and 16361297-60833 or-219767+3414339 else v=U(-207654+181046)o=J[v]k=25339730852589-(-160554)h=K[q[504321-504320]]P=U(-887228+860599)p=U(-397578+371026)D=K[q[906101+-906099]]Y=D(P,k)v=h[Y]A=o[v]v=-446644-(-446645)I=-550040+27464539756173 Y=K[q[4058+-4057]]P=K[q[871190+-871188]]k=P(p,I)D=Y[k]Y=U(-193023+166429)h=W[D]o=A(z,v,h)P=25935531731491-424694 v=K[q[843664+-843663]]h=K[q[-209160-(-209162)]]D=h(Y,P)o=v[D]A=W[o]W=A A=6729056-(-49435)end else V=K[z]E=V A=V and 11293006-724055 or 12795983-494535 end else if A&lt;16488485-13933 then if A&lt;16227047-(-198882)then A=M(-834489+13026123,{v})u={A()}o={x(u)}A=J[U(792784+-819391)]else A=true A=206703+16195923 end else v=U(221973-248598)o=U(-735116+708485)P=U(-484590+458020)A=J[o]O=K[q[75542-75538]]W=J[v]k=B(-65501+1684036,{})Y=J[P]P={Y(k)}Y=499843-499841 D={x(P)}h=D[Y]v=W(h)W=U(-503989+477432)z=O(v,W)O={z()}o=A(x(O))z=K[q[355793+-355788]]O=o A=z and 3120477-544151 or-138752+5050614 o=z end end end end end end end A=#Z return x(o)end,{},function(J,U)local x=W(U)local S=function(S)return A(J,{S},U,x)end return S end return(h(15239547-939883,{}))(x(o))end)(getfenv and getfenv()or _ENV,unpack or table[U(147196+-173826)],newproxy,setmetatable,getmetatable,select,{...})end)(...)</ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="StringValue" referent="RBX6E1EDF1BD03A4215AFE2781831C6A0CB">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<string name="Name">VersionTitle</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<string name="Value">Vibe Coder BETA v0.2</string>
			</Properties>
		</Item>
		<Item class="Script" referent="RBXB07FD192C329498A9491184F2A72B039">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Plugin</string>
				<token name="RunContext">0</token>
				<string name="ScriptGuid">{ABED9696-9C9C-48C3-A56B-9C5ED1A7B7C7}</string>
				<ProtectedString name="Source">--[[ v1.0.0 https://wearedevs.net/obfuscator ]] return(function(...)local b={&quot;\089\070\076\098\086\111\055\111&quot;,&quot;\089\113\080\112\085\050\061\061&quot;;&quot;\049\108\081\103\102\090\106\106\047\100\081\080\076\052\116\099\075\043\069\070\098\109\108\101&quot;;&quot;\043\111\086\108\090\120\086\108\072\077\049\066\072\121\098\054&quot;;&quot;\116\098\056\067\110\081\053\085&quot;,&quot;\049\111\086\108\087\111\086\108\089\113\054\122\057\050\061\061&quot;,&quot;\121\082\086\075\084\079\110\067\119\050\061\061&quot;,&quot;\057\084\105\067\072\052\061\061&quot;,&quot;\100\087\050\100\074\086\056\122\088\112\081\083\098\109\071\084\054\074\047\056\104\052\061\061&quot;;&quot;\048\047\117\055\056\101\053\070\109\121\100\053\084\071\107\080\111\085\105\068&quot;,&quot;\086\083\054\111\105\106\117\067\083\104\074\078\073\104\088\052\097\084\087\061&quot;;&quot;\106\057\057\117\086\088\050\067\114\101\089\055\069\087\052\090\068\054\068\083\077\084\112\083&quot;,&quot;\090\072\077\084\118\047\071\089\049\052\061\061&quot;,&quot;\089\113\047\122\089\120\067\118\057\077\114\061&quot;,&quot;\120\120\054\076\076\054\089\105\079\077\057\122\076\108\078\097\105\084\116\061&quot;;&quot;\082\067\066\107\102\047\101\067\102\056\102\085\110\067\111\087&quot;,&quot;\072\070\085\085\099\076\061\061&quot;;&quot;\077\110\104\075\081\068\065\120\068\083\057\084\110\083\067\056\057\104\071\078\115\047\086\114\111\065\103\051\112\052\061\061&quot;,&quot;\050\076\073\048\087\100\056\115\122\088\055\087\120\102\053\052\106\071\110\103\055\084\053\072\078\076\099\053\081\114\090\055&quot;;&quot;\043\121\086\110\090\084\057\054&quot;;&quot;\104\079\053\069\103\066\116\121\102\114\055\053\056\071\057\065\043\113\090\055\055\120\048\117\048\065\106\106\086\107\071\109\070\078\073\097\081\108\089\067\102\072\043\112\076\072\113\121\120\049\053\055\085\043\054\102\100\122\043\104\084\122\117\088\056\099\098\090\100\078\104\047\117\085\085\114\100\050\043\086\098\047\077\102\111\082\076\061&quot;;&quot;\043\111\110\119\119\053\086\048\119\108\104\112\069\121\067\084&quot;,&quot;\072\111\047\122\072\111\080\108&quot;;&quot;\085\054\066\116\119\087\104\111\085\108\078\109\079\113\055\101\069\113\114\061&quot;;&quot;\072\043\107\076\053\099\061\061&quot;;&quot;\072\073\054\108\057\076\061\061&quot;,&quot;\105\073\072\098\072\086\105\070\076\053\066\085\087\077\054\122&quot;,&quot;\082\089\078\113\097\056\047\101\110\098\047\090&quot;,&quot;\090\101\114\061&quot;;&quot;\074\071\121\085\121\078\053\110\080\084\087\053\105\074\043\061&quot;,&quot;\086\116\080\067\087\111\089\070\053\080\055\113\069\087\049\087\086\076\061\061&quot;;&quot;\086\067\053\070\108\069\057\084\047\077\105\117\056\112\067\115\050\074\084\105\097\101\120\099\071\074\090\100\099\066\076\061&quot;;&quot;\119\100\081\075\119\121\115\084\067\098\043\114\108\107\089\102\078\056\098\084\056\051\117\112&quot;,&quot;\057\111\067\066\089\113\105\082&quot;;&quot;\107\070\075\051\068\076\061\061&quot;;&quot;\057\110\055\119\047\122\090\047&quot;,&quot;\086\084\057\055\090\077\054\084\053\065\086\100\085\054\072\067\089\099\061\061&quot;;&quot;\052\077\077\102\111\069\098\082\079\084\117\067\056\097\110\048\109\103\099\061&quot;;&quot;\070\057\073\052\055\052\061\061&quot;;&quot;\043\065\105\065\087\087\054\065\090\113\057\117\057\120\049\110\053\052\061\061&quot;,&quot;\114\112\112\087\107\113\084\077&quot;,&quot;\076\084\105\051\119\054\080\068\090\113\051\073\089\054\089\103\105\052\061\061&quot;,&quot;\057\110\106\088\116\050\071\110\056\107\048\099\122\050\061\061&quot;,&quot;\098\054\115\115\110\099\043\061&quot;,&quot;\049\111\086\108&quot;,&quot;\076\084\078\054\072\077\049\054\086\113\047\102\090\113\078\066\043\052\061\061&quot;;&quot;\087\053\066\076\057\108\119\107\072\120\106\084\074\077\066\098\085\070\072\061&quot;;&quot;\057\077\078\107\090\084\114\061&quot;,&quot;\057\121\098\102\090\084\114\061&quot;;&quot;\097\057\052\108\109\053\122\114\068\119\110\116\098\105\056\111\097\099\061\061&quot;,&quot;\065\107\054\085\119\069\082\053\100\073\049\100\080\101\115\098\117\113\047\055\097\075\089\080\048\083\086\114\080\076\061\061&quot;;&quot;\116\112\087\103\083\119\053\078\047\087\084\066&quot;;&quot;\086\113\080\110\043\113\086\107\114\065\049\054\089\113\086\070\089\113\086\116\114\076\061\061&quot;,&quot;\083\106\082\073\075\117\118\043&quot;;&quot;\082\084\085\071\087\072\109\052\121\086\100\078\079\056\082\048\075\110\100\053\090\108\056\106\057\081\114\061&quot;;&quot;\118\080\077\118\069\072\119\055\047\052\061\061&quot;,&quot;\071\117\055\067\052\081\068\065\050\106\073\087\116\077\079\108\072\105\106\120\065\054\099\069\114\106\110\100&quot;;&quot;\050\051\050\074\065\108\101\066&quot;;&quot;\055\108\102\084\083\106\082\076\055\048\053\048\075\104\054\120\113\073\075\106&quot;,&quot;\117\065\104\086\056\114\081\119&quot;,&quot;\049\111\086\108\087\111\086\107\089\121\054\070\057\076\061\061&quot;,&quot;\089\113\080\118\090\113\087\061&quot;,&quot;\119\114\114\078\103\088\048\090\069\074\076\086\078\056\097\106\117\069\053\088\104\111\057\108\119\118\072\057\109\105\072\061&quot;,&quot;\106\115\115\066\051\043\087\082\055\050\054\085\089\053\101\080\079\074\069\109\056\110\115\068\102\122\100\086\104\048\083\078\104\055\055\049&quot;,&quot;\043\111\105\107\085\077\048\108&quot;;&quot;\049\099\081\066\116\075\055\078\117\121\109\078\120\052\061\061&quot;,&quot;&quot;;&quot;\043\113\098\067\057\111\054\122\077\111\078\067\089\100\049\102\090\052\061\061&quot;,&quot;\090\113\086\122&quot;;&quot;\079\118\052\054\057\068\082\055\079\052\061\061&quot;,&quot;\097\065\122\119\118\049\104\052\066\118\049\073\090\078\107\083&quot;,&quot;\077\067\047\104\057\120\109\061&quot;,&quot;\079\086\080\108\043\073\078\097\087\101\066\110\049\054\076\112\090\099\061\061&quot;,&quot;\072\067\080\099\073\100\118\112\077\117\065\076\072\120\107\086\048\069\050\121&quot;;&quot;\072\111\066\066\043\052\061\061&quot;,&quot;\076\084\078\054\072\077\049\054\076\073\086\108\089\113\047\122&quot;;&quot;\056\107\078\047\066\086\120\120\098\067\052\081&quot;,&quot;\072\111\047\107\090\084\086\108\085\120\051\054&quot;;&quot;\099\090\078\052\122\069\090\072&quot;;&quot;\057\111\080\110\057\076\061\061&quot;,&quot;\118\114\114\047\116\101\114\088\112\098\118\056\107\088\056\090\104\120\052\103\083\106\056\079\082\107\088\083\050\068\076\052\120\113\079\117\066\114\080\120\105\079\122\082\050\050\055\113\078\055\083\049\087\051\115\080\090\119\098\071\067\076\103\120\098\104\066\100\051\112\085\068\043\049\073\083\121\090\112\104\098\090\072\110\053\075\057\112\120\088\080\115\048\051\088\111\089\119\122\077\081\112\102\088\079\056\099\061&quot;,&quot;\043\121\080\122\057\113\047\110&quot;,&quot;\089\120\051\050\072\120\105\103&quot;,&quot;\049\065\076\098\074\101\105\067\049\087\119\098\087\052\061\061&quot;;&quot;\043\087\054\114\069\100\049\115\076\054\066\105\049\121\089\055&quot;,&quot;\077\067\047\110\057\077\049\066\089\113\080\118\090\113\087\061&quot;;&quot;\043\084\049\107\085\120\051\073&quot;;&quot;\118\110\075\089\054\056\075\120\052\076\061\061&quot;;&quot;\077\067\047\073\072\050\061\061&quot;,&quot;\074\077\105\048&quot;,&quot;\043\113\105\066\090\113\050\061&quot;,&quot;\074\084\048\074\119\108\078\077\089\077\057\076\085\053\057\120\085\050\061\061&quot;,&quot;\053\111\057\050\090\054\114\108\076\077\055\053\086\087\080\122&quot;,&quot;\052\114\048\052\055\054\078\089&quot;;&quot;\101\117\106\085\113\107\103\099&quot;;&quot;\120\106\097\104\110\047\108\100\116\047\052\068\047\109\112\122\073\067\098\047\077\071\052\068\109\113\115\052\080\075\080\080\119\099\061\061&quot;;&quot;\106\118\085\051\117\077\084\121\104\119\111\079\097\104\055\099\077\097\105\089&quot;;&quot;\102\078\072\112\043\108\081\056\082\075\047\112\050\066\074\106\109\054\077\111\122\057\055\109\121\071\121\090\118\122\114\099\083\114\115\114\099\115\117\048\090\079\097\098\052\073\119\118\077\052\061\061&quot;,&quot;\074\086\078\114\072\073\048\097\086\080\105\117\069\100\054\065&quot;,&quot;\089\111\080\107\090\052\061\061&quot;;&quot;\057\117\116\071\097\049\097\077\089\078\068\057\066\122\043\099\080\112\052\117\103\071\072\107\073\120\077\073\106\085\072\078\090\085\072\119\073\099\061\061&quot;,&quot;\077\067\047\055\090\121\049\054\069\099\061\061&quot;;&quot;\076\111\047\122\090\121\086\070\089\099\061\061&quot;;&quot;\051\088\057\073\114\106\121\097\050\097\089\117\098\106\070\107\111\105\119\115\109\087\098\099&quot;;&quot;\090\101\065\061&quot;,&quot;\043\100\078\055\090\073\076\061&quot;,&quot;\108\084\086\082\120\099\116\098\082\049\081\086\071\119\056\052\074\080\108\055\106\069\117\069\108\048\065\088\119\106\116\069\107\102\114\080\077\099\061\061&quot;,&quot;\043\113\098\067\057\111\054\122&quot;;&quot;\089\113\047\112\089\100\078\055\090\121\043\061&quot;;&quot;\090\120\080\108\085\099\061\061&quot;,&quot;\079\052\061\061&quot;;&quot;\120\101\054\067\086\116\105\118\087\084\080\101\053\116\078\103\105\121\114\061&quot;;&quot;\043\121\086\098\089\120\054\107\057\076\061\061&quot;,&quot;\085\073\054\116\043\121\055\082\086\052\061\061&quot;;&quot;\076\070\099\067\079\065\055\113\120\113\089\082\120\120\067\070&quot;}for O,I in ipairs({{311171-311170,-257353+257468},{-806078-(-806079);628532+-628472},{-208784-(-208845),-971055-(-971170)}})do while I[123337-123336]&lt;I[887864-887862]do b[I[117610-117609]],b[I[-891565+891567]],I[853400+-853399],I[127289+-127287]=b[I[-814000+814002]],b[I[-790882-(-790883)]],I[691452-691451]+(12504-12503),I[828042-828040]-(-333050-(-333051))end end local function O(O)return b[O+(-827468-(-867478))]end do local O=math.floor local I=table.concat local F=string.len local G=string.char local a=table.insert local V=type local r=string.sub local p={[&quot;\056&quot;]=176072+-176041;[&quot;\055&quot;]=704652-704611;D=351789+-351787,[&quot;\052&quot;]=-760393+760425;V=-683254+683275;t=-331709-(-331745);Q=661931+-661869,X=-906997-(-907056),y=-595602-(-595640),f=-737341+737388,p=263836-263785;O=-765434+765448;z=-839798+839844,c=276641+-276641,R=18355-18315,b=158180-158131;F=627702-627667,[&quot;\050&quot;]=-715748-(-715796),H=990265-990241;n=-50562+50607;Y=104733+-104704,J=-447722-(-447740),x=353440+-353418,E=-804130+804160;N=-901999+902008,[&quot;\051&quot;]=-875317-(-875374),S=978849+-978838,[&quot;\054&quot;]=-2154+2191,l=218458-218406;Z=496855+-496828;W=464339-464319;w=276467-276455;k=-415612+415662,U=108630+-108604,[&quot;\049&quot;]=-974127+974144,[&quot;\053&quot;]=-391014+391033,h=-5964-(-6008),g=807857-807814,T=-207560-(-207615),d=431993-431986,I=-969741-(-969780);[&quot;\048&quot;]=642773+-642772,e=425927-425924;s=-394431-(-394473);K=-874081+874091;i=-740482+740495,r=317318-317310;q=188611+-188605,[&quot;\047&quot;]=-920211+920272;B=-751473-(-751506),v=-1033266-(-1033300);L=-680169-(-680185),o=-263939-(-263993),A=206022-206018,j=170370+-170310;a=858106+-858091;P=97266-97261;u=361378-361320,[&quot;\043&quot;]=-672920+672948;[&quot;\057&quot;]=-450107-(-450132),M=-567312+567335;C=-633837+633890;m=66427-66371;G=-810253-(-810316)}local y=b for b=-294101-(-294102),#y,627453+-627452 do local W=y[b]if V(W)==&quot;\115\116\114\105\110\103&quot;then local V=F(W)local t={}local e=-390110+390111 local J=-650347-(-650347)local T=-256496-(-256496)while e&lt;=V do local b=r(W,e,e)local I=p[b]if I then J=J+I*(-134879+134943)^((871515+-871512)-T)T=T+(794731+-794730)if T==-67547-(-67551)then T=549565-549565 local b=O(J/(588938-523402))local I=O((J%(-650248-(-715784)))/(-281841-(-282097)))local F=J%(-255620+255876)a(t,G(b,I,F))J=-372369-(-372369)end elseif b==&quot;\061&quot;then a(t,G(O(J/(-162246-(-227782)))))if e&gt;=V or r(W,e+(646266-646265),e+(-988900+988901))~=&quot;\061&quot;then a(t,G(O((J%(-13931+79467))/(112604-112348))))end break end e=e+(731713-731712)end y[b]=I(t)end end end return(function(b,F,G,a,V,r,p,w,e,T,t,B,v,y,W,J,c,l,K,z,I)z,c,B,K,e,v,I,y,l,T,J,W,t,w=function(b,O)local F=J(O)local G=function(...)return I(b,{...},O,F)end return G end,function(b)W[b]=W[b]-(-410841+410842)if 807859-807859==W[b]then W[b],y[b]=nil,nil end end,function(b,O)local F=J(O)local G=function()return I(b,{},O,F)end return G end,function(b,O)local F=J(O)local G=function(G,a,V)return I(b,{G,a,V},O,F)end return G end,-838657+838657,function(b,O)local F=J(O)local G=function(G,a,V,r,p)return I(b,{G;a;V;r,p},O,F)end return G end,function(I,G,a,V)local X,IZ,Q,C,bZ,q,g,n,f,i,x,P,W,p,m,T,L,OZ,R,z,u,FZ,d,M,E,o,h,N,S,U,Y,e,k,A,j,J,s,Z,D,H while I do if I&lt;9969838-651459 then if I&lt;-977160+5078761 then if I&lt;509185+2104643 then if I&lt;1226051-(-167380)then if I&lt;-139924+830780 then if I&lt;1321731-704101 then if I&lt;-537531-(-834321)then I=545914+12552024 else S=S+C L=not A p=S&lt;=x p=L and p L=S&gt;=x L=A and L p=L or p L=14128840-(-92292)I=p and L p=6850511-694056 I=I or p end else Q=not H h=h+q g=h&lt;=j g=Q and g Q=h&gt;=j Q=H and Q g=Q or g Q=12723768-(-661286)I=g and Q g=-292123+5089056 I=I or g end else if I&lt;909153+60327 then if I&lt;358026-(-352006)then Z=882389+-882387 I=874217+10743216 u=f[Z]Z=y[s]i=u==Z E=i else A=-52226+52226 X=#Q U=X==A I=U and 1030722+13524890 or 14527726-(-676070)end else p={}I=b[O(-763570-(-723660))]end end else if I&lt;2830595-710404 then if I&lt;1698829-(-124198)then if I&lt;-409254+1962276 then A=O(-724409+684488)I=b[A]A=O(270930-310890)b[A]=I I=-141652-(-160997)else h=O(-549538-(-509556))j=b[h]p=j I=787669+3313343 end else e=y[a[11235-11232]]J=464763-464762 W=e~=J I=W and 9285418-(-89376)or 4962228-1000331 end else if I&lt;2878015-569479 then if I&lt;2229963-21116 then W=O(809911+-849871)p=O(-824095+784174)I=b[p]p=b[W]W=O(305060+-345020)b[W]=I W=O(668196-708117)b[W]=p I=-481469+12463433 W=y[a[-479088+479089]]e=W()else C=O(807926-847882)L=O(27602-67562)I=b[C]A=b[L]C=I(A)I=O(359271+-399192)b[I]=C I=354754-335409 end else Y=y[e]I=Y and 999628+9983852 or 289608+15991898 E=Y end end end else if I&lt;3255828-(-43562)then if I&lt;2453793-(-544212)then if I&lt;390685+2448075 then if I&lt;2802892-94905 then I=b[O(883412-923338)]p={}else e=y[a[-677786+677788]]J=y[a[-572321-(-572324)]]W=e==J I=958648+10805274 p=W end else W=y[a[-233616+233617]]p=#W W=-137566+137566 I=p==W I=I and 15351535-(-814757)or 10390188-(-513392)end else if I&lt;2472229-(-625205)then if I&lt;832618+2212054 then FZ=O(-388429+348497)bZ=789204+29545816009450 m=y[e]R=y[T]I=Z N=O(90815+-130762)d=R(N,bZ)Z=m[d]d=y[e]OZ=34314461623484-964178 N=y[T]bZ=N(FZ,OZ)R=d[bZ]m=g[R]FZ=O(647703-687640)R=m()OZ=33887894202041-715029 d=y[e]N=y[T]bZ=N(FZ,OZ)m=d[bZ]d={}z={[j]=h,[q]=H;[Q]=U;[X]=A;[L]=D,[o]=n;[s]=f;[i]=u,[Z]=R;[m]=d}j=t()X=O(718814-758721)A=299196144009-841982 h=O(-198210-(-158253))y[j]=z z=b[h]H=y[e]Q=y[T]h=O(-899090+859186)h=z[h]U=Q(X,A)q=H[U]D=-701416+121261798432 h=h(z,q)z=nil q=O(-761235+721238)b[q]=z H=y[j]L=O(-610231-(-570270))U=y[e]X=y[T]A=X(L,D)Q=U[A]q=H[Q]I=q and 13375269-242281 or 9520501-(-26235)else X=X+L U=X&lt;=A D=not M U=D and U D=X&gt;=A D=M and D U=D or U D=-149540+7034447 I=U and D U=5905319-(-681366)I=I or U end else I=b[O(-118406-(-78471))]p={}end end else if I&lt;422889+3466186 then if I&lt;745325+3090669 then if I&lt;326415+3202875 then p=O(717790+-757764)I=b[p]e=y[a[683800-683797]]J={I(e)}p=J[742191+-742190]e=p W=J[-293683-(-293685)]I=not e I=I and 352202+13376253 or 784745+9171064 else J=J+z e=J&lt;=T k=not P e=k and e k=J&gt;=T k=P and k e=k or e k=15343347-(-658719)I=e and k e=10058821-(-325393)I=I or e end else I=p and 2590889-(-706917)or 54799+6479230 end else if I&lt;3963357-(-131300)then if I&lt;-805242+4828360 then J=392971+-392917 e=y[a[1005523-1005520]]I=1022425-(-1040790)W=e*J e=46264+-46007 p=W%e y[a[-93040-(-93043)]]=p else Y=I Z=787622-787621 u=f[Z]Z=false i=u==Z E=i I=i and 700784-9506 or-971905+12589338 end else j=t()y[j]=p I=y[k]q=-624481+624546 h=-307290-(-307293)p=I(h,q)h=t()y[h]=p Q=O(867906+-907880)p=b[Q]U=v(241194+11558474,{})I=417930-417930 q=I I=-718711-(-718711)Q={p(U)}H=I I={F(Q)}Q=I p=-607922-(-607924)I=Q[p]p=O(-326759-(-286823))U=I I=b[p]C=O(-41178+1222)X=y[J]x=b[C]C=x(U)x=O(-855694-(-815699))S=X(C,x)X={S()}p=I(F(X))X=t()y[X]=p S=y[h]p=977192+-977191 x=S S=881539+-881538 I=243956+369720 C=S S=246304-246304 A=C&lt;S S=p-C end end end end else if I&lt;5321498-(-842500)then if I&lt;355844+4385645 then if I&lt;5225532-982554 then if I&lt;-344334+4536432 then if I&lt;274279+3836607 then p={}I=b[O(555214-595137)]else J=y[a[544707+-544701]]e=J==W p=e I=120033+5600234 end else FZ=936086+17023133242977 I=3281106-262822 bZ=O(968892-1008833)R=y[e]d=y[T]N=d(bZ,FZ)m=R[N]u=m end else if I&lt;5119804-441987 then if I&lt;-233726+4663969 then I=true I=I and 6182027-727548 or 9531843-489480 else g=O(45837+-85775)j=-431323+19333287278597 z=y[a[-595225+595227]]P=y[a[418355+-418352]]k=P(g,j)J=O(87195-127170)T=z[k]I=126082+13077820 J=e[J]J=J(e,T)p=J end else J=y[a[-282730-(-282731)]]z=y[a[24241+-24239]]j=18728639626976-(-451377)P=y[a[532343+-532340]]g=O(-1015961+975954)k=P(g,j)T=z[k]e=J[T]W=not e I=W and 3099723-(-780440)or 13348440-(-650095)p=W end end else if I&lt;5348077-(-323405)then if I&lt;-961024+6314880 then if I&lt;4705179-(-112978)then I=10803915-(-282435)k=nil T=nil P=nil else q=nil H=nil Q=nil X=c(X)g=nil e=c(e)z=c(z)e=nil q={}k=c(k)U=nil T=c(T)j=c(j)P=nil T=t()j=O(-493322-(-453344))k=O(-474045-(-434090))y[T]=e h=c(h)Q={}J=c(J)J=nil e=t()y[e]=J P=O(-739699-(-699744))z=b[P]U=-162604+162605 P=O(-567132+527231)J=z[P]h=t()z=t()y[z]=J P=b[k]k=O(847286+-887269)g=O(-444384+404381)J=P[k]k=b[g]X=297715-297459 g=O(795868-835798)P=k[g]g=b[j]j=O(-77298+37308)k=g[j]H=t()j=t()g=-224359-(-224359)y[j]=g g=272740-272738 y[h]=g g={}I=-451855+3501454 y[H]=q A=X q=-910898-(-910898)X=-928068-(-928069)L=X X=251129-251129 M=L&lt;X X=U-L end else I=13909207-811269 end else if I&lt;-586133+6740812 then if I&lt;347204+5457311 then y[a[-969459+969464]]=p I=11661692-(-592263)W=nil else I=15249968-1044521 y[e]=p end else x=y[e]I=x and 892364+11129880 or 14126435-(-974646)S=x end end end else if I&lt;205712+7504912 then if I&lt;6732625-164868 then if I&lt;7134420-799675 then if I&lt;6031570-(-168148)then I=643904+11595866 else I=true I=528460+8513903 end else p=O(-7991-31994)I=b[p]P=23886342501661-199083 e=y[a[-578639+578641]]z=O(341003+-380925)J=y[a[-179730+179733]]p=O(-670421+630417)T=J(z,P)p=I[p]W=e[T]p=p(I,W)W=p p=O(583155+-623060)p=W[p]e=-98987+98988 p=p(W)I=p[e]e=I p=e I=e and 4200489-(-437229)or-927295+14131197 end else if I&lt;6185854-(-764488)then if I&lt;5823686-(-979937)then A=40513+-40513 I=834406+14369390 X=#Q U=X==A else U=X D=U Q[U]=D U=nil I=4021376-971777 end else p=y[a[967196+-967195]]e=y[a[-444169+444171]]J=y[a[-606348-(-606351)]]P=546554+8000479082387 z=O(-1032298+992327)T=J(z,P)W=e[T]I=p[W]T=O(-859612-(-819603))j=O(891602+-931588)z=-813943+22699133801665 h=32461907103332-37720 W=y[a[136467-136465]]e=y[a[-291687-(-291690)]]J=e(T,z)p=W[J]T=y[a[-232648+232649]]P=y[a[-415037-(-415039)]]k=y[a[-770451+770454]]g=k(j,h)z=P[g]J=T[z]g=O(-497306+457363)j=11039425098502-351986 z=y[a[-962816-(-962818)]]P=y[a[465497+-465494]]k=P(g,j)T=z[k]e=J[T]W=not e I[p]=W p={}I=b[O(-580161-(-540233))]end end else if I&lt;-472774+9660364 then if I&lt;8275223-(-616262)then if I&lt;368576+8120581 then I=h p=j I=j and 3455766-(-645246)or 634810+959620 else z=t()J=O(-843079-(-803101))e=t()T=t()I=true y[e]=I W=G g=v(-271675+14561877,{z})p=b[J]J=O(617020-656936)I=p[J]J=t()y[J]=I I=v(706599+12707660,{})y[T]=I I=false k=O(-543939-(-503965))y[z]=I P=b[k]k=P(g)I=k and 14383070-(-431292)or-268944+16782150 p=k end else I=l(13361380-(-112466),{T})x={I()}I=b[O(45288-85201)]p={F(x)}end else if I&lt;-72100+9308448 then J=318765+8606010 e=O(408243+-448192)p=811094+7639933 W=e^J I=p-W W=I p=O(241305-281286)I=p/W p={I}I=b[O(-2974-36934)]else I=y[a[425437+-425436]]J=I W=G[-866131-(-866132)]e=G[10648-10646]I=J[e]I=I and 15367973-678731 or 10799355-463901 end end end end end else if I&lt;-412393+13539963 then if I&lt;12078920-965287 then if I&lt;10320630-(-408520)then if I&lt;-799931+10912183 then if I&lt;189916+9487278 then if I&lt;9432293-14216 then e=y[a[381655-381652]]j=1029253-1029251 J=-600567+600599 W=e%J T=y[a[-816392-(-816396)]]k=y[a[723267-723265]]q=-961078-(-961091)U=y[a[-964714-(-964717)]]Q=U-W U=437924-437892 H=Q/U h=q-H g=j^h P=k/g z=T(P)T=-859832+4295827128 J=z%T I=11489973-586393 z=344149+-344147 g=981706+-981705 T=z^W e=J/T j=1015602+-1015346 T=y[a[677887+-677883]]q=183956-183700 k=e%g g=4294439714-(-527582)P=k*g z=T(P)T=y[a[45026-45022]]P=T(e)J=z+P z=268585-203049 T=J%z W=nil k=-119740-(-185276)P=J-T z=P/k k=-881672+881928 P=T%k g=T-P k=g/j j=555920+-555664 g=z%j T=nil e=nil h=z-g z=nil j=h/q h={P,k;g;j}J=nil y[a[-912559-(-912560)]]=h k=nil g=nil P=nil j=nil else o=-166291+6536900072822 L=O(-731092+691093)H=O(-557899+517910)U=y[e]H=h[H]D=27916181198861-271686 I=14980530-(-448482)X=y[T]A=X(L,D)n=786599+1667724755553 Q=U[A]D=O(662022+-701940)X=y[e]A=y[T]L=A(D,o)U=X[L]A=y[e]o=O(646629+-686587)L=y[T]D=L(o,n)X=A[D]H=H(h,Q,U,X)Q=O(-63974+23977)b[Q]=H end else e=nil W=nil I=-392440+12632210 end else if I&lt;-279095+10879957 then if I&lt;10705124-327759 then I={}y[a[-674009+674011]]=I g=O(360001-399979)p=y[a[69893+-69890]]T=p k=-146243-(-146498)h=827854-827853 z=248335+35184371840497 p=e%z y[a[-168314+168318]]=p P=e%k k=878027-878025 z=P+k y[a[44570-44565]]=z k=b[g]g=O(-618415+578419)P=k[g]q=h k=P(W)P=O(951758-991756)J[e]=P h=-851125-(-851125)H=q&lt;h P=-610817+611057 j=k g=-43018+43019 I=81575-(-538327)h=g-q else I=y[a[797778-797768]]e=y[a[-385770-(-385781)]]W[I]=e I=y[a[16221-16209]]e={I(W)}I=b[O(802828-842778)]p={F(e)}end else Q=O(-406385+366382)H=b[Q]Q=O(-467403-(-427421))q=H[Q]j=q I=-755965+8761673 end end else if I&lt;10287214-(-675524)then if I&lt;731679+10135612 then if I&lt;-911013+11683937 then I=159188+5065369 else T=134228-134227 z=-455660-(-455662)e=y[a[569909+-569908]]J=e(T,z)e=-610714-(-610715)W=J==e I=W and 11485175-(-278747)or 428150+2327969 p=W end else I=b[O(542312+-582284)]J=O(-541443-(-501440))e=b[J]J=O(278763-318693)W=e[J]J=y[a[957118-957117]]e={W(J)}p={F(e)}end else if I&lt;1011952+10068686 then if I&lt;10865268-(-118224)then I=16470275-188769 i=722673-722672 Y=f[i]E=Y else e=745188+-745187 I={}W=I J=y[a[474300-474291]]T=J J=-539987+539988 z=J I=4198296-380490 J=291750+-291750 P=z&lt;J J=e-z end else I=b[O(-6451+-33522)]p={e}end end end else if I&lt;663480+11353473 then if I&lt;-130089+11847930 then if I&lt;10464961-(-915905)then if I&lt;10755127-(-499715)then P=O(-681799+641793)I=y[a[454393+-454392]]J=y[a[670705-670703]]k=-809366+29461438926637 T=y[a[-465106-(-465109)]]z=T(P,k)p=J[z]J=e I[p]=J I=16242335-(-444960)else E=y[e]p=E I=E and-181527+4268704 or-322129+6469207 end else I=Y p=E I=7048089-901011 end else if I&lt;12579701-734863 then if I&lt;721650+11055274 then I=p and 12456346-(-664058)or 11738579-(-515376)else J=873046+14023926 e=O(-849747+809796)p=497610+1033980 W=e^J I=p-W p=O(-857342+817362)W=I I=p/W p={I}I=b[O(422405-462397)]end else I=true I=I and 2837502-714257 or 346381+3756734 end end else if I&lt;143274+12187423 then if I&lt;892542+11353543 then if I&lt;11411379-(-802325)then I=456705+14644376 x=q==H S=x else W=O(1006065+-1046013)z=O(233190-273105)p=b[W]e=y[a[1046734-1046733]]P=13878739266443-201293 J=y[a[201707-201705]]T=J(z,P)W=e[T]I=p[W]p=I()I=p and-741749+4062323 or 51006-(-949489)end else I=y[a[131840-131833]]I=I and 11543639-(-865160)or 11739130-754528 end else if I&lt;-418349+13519346 then if I&lt;907451+12046107 then W=O(415989-455891)I=b[W]e=y[a[-326876+326884]]J=349131-349131 W=I(e,J)I=10894296-(-90306)else I=true I=I and 15482810-234380 or 609068+2065072 end else p=O(785177+-825113)g=O(517418-557392)T=O(-822151+782195)j=B(-781867+9988329,{})I=b[p]W=y[a[-766731-(-766735)]]J=b[T]k=b[g]g={k(j)}k=1020115-1020113 P={F(g)}z=P[k]T=J(z)J=O(106808-146803)e=W(T,J)W={e()}p=I(F(W))e=y[a[29433+-29428]]W=p I=e and 512273+3605328 or-420189+6140456 p=e end end end end else if I&lt;-494582+15100770 then if I&lt;13918079-118243 then if I&lt;13696940-296759 then if I&lt;100746+13144953 then if I&lt;766592+12431175 then L=26155267781841-525630 A=O(2644+-42556)Q=y[e]U=y[T]I=15705571-276559 X=U(A,L)o=-734192+29337559591245 H=Q[X]U=y[e]D=-670195+34828911491405 L=O(950772-990774)q=O(417163+-457152)X=y[T]A=X(L,D)Q=U[A]D=O(727806-767770)X=y[e]A=y[T]q=h[q]L=A(D,o)U=X[L]q=q(h,H,Q,U)H=O(-320912+280915)b[H]=q else I=p and 880470+10335873 or 15506816-944517 end else C=O(-709267-(-669289))g=h x=b[C]C=O(623083-663007)S=x[C]x=S(W,g)S=y[a[-1000956-(-1000962)]]C=S()X=x+C U=X+P X=615548+-615292 C=-846319+846320 Q=U%X X=J[e]P=Q g=nil x=P+C S=T[x]U=X..S J[e]=U I=371479-(-248423)end else if I&lt;-921417+14475448 then if I&lt;14141677-667946 then p=O(814906-854808)I=b[p]W=O(222848+-262745)p=I(W)p={}I=b[O(321571+-361490)]else I=-955489+12937453 end else p=O(-345272-(-305307))g=19421115422841-(-608986)I=b[p]T=y[a[478000+-477999]]k=O(680760+-720727)z=y[a[-478998-(-479000)]]P=z(k,g)g=O(763204-803133)j=2912781649598-98674 J=T[P]z=y[a[340251-340250]]P=y[a[-3773+3775]]k=P(g,j)T=z[k]p=I(J,W,T)k=O(281851+-321784)J=O(935371-975319)p=b[J]T=y[a[-969188-(-969189)]]g=-220754+13008827839995 z=y[a[-787656-(-787658)]]P=z(k,g)J=T[P]I=p[J]J=42142+-42140 p=I(J)I=9351191-(-604618)end end else if I&lt;13385123-(-869363)then if I&lt;15199124-985445 then if I&lt;13991755-(-205029)then T=y[a[-648344-(-648345)]]h=-899797+21351492264363 P=y[a[79739+-79737]]j=O(538594+-578508)k=y[a[-941185-(-941188)]]g=k(j,h)z=P[g]J=T[z]j=75747+16471882544659 z=y[a[294906-294904]]g=O(6206+-46183)I=1045271+2834892 P=y[a[335714+-335711]]k=P(g,j)T=z[k]e=J[T]W=not e p=W else M=c(M)f=nil s=c(s)n=c(n)L=c(L)D=c(D)I=-474616+1088292 o=c(o)end else f=369942-369940 L=t()M=O(-457798+417843)y[L]=S p=b[M]M=O(-800864+760881)D=969307-969207 I=p[M]M=-395893-(-395894)p=I(M,D)o=-700575+700830 s=-206454-(-206455)D=854162+-854162 M=t()y[M]=p m=-181834+181834 I=y[k]i=O(677537+-717493)p=I(D,o)R=-777680-(-787680)o=-21947-(-21948)D=t()y[D]=p I=y[k]n=y[M]p=I(o,n)o=t()y[o]=p p=y[k]n=p(s,f)f=O(598680+-638634)p=484119+-484118 I=n==p n=t()y[n]=I p=O(-1025138-(-985143))Y=b[i]u=y[k]Z={u(m,R)}i=Y(F(Z))Y=O(-181214-(-141260))I=O(670633+-710575)E=i..Y s=f..E I=U[I]I=I(U,p,s)s=t()E=w(11456138-602286,{k,L,h,J;e;X;n,s,M,o,D;j})y[s]=I f=O(742945+-782919)p=b[f]f={p(E)}I={F(f)}f=I I=y[n]I=I and 11644702-372163 or-121880+2459475 end else if I&lt;14867591-305994 then if I&lt;14476582-(-37552)then I=true y[a[1014896+-1014895]]=I I=b[O(-577467-(-537501))]p={}else X=t()A=v(3646066-800143,{X,j,h,z})Q=nil L=t()P=nil J=nil U={}R=O(105081+-144981)y[X]=U U=t()y[U]=A f=O(-450469+410490)D={}A={}y[L]=A q=nil n=O(-518865+478902)z=c(z)M=O(81045+-120991)A=b[M]i=nil s=y[L]o={[n]=s;[f]=i}k=nil M=A(D,o)A=K(850006+8395403,{L,X;H;j;h;U})h=c(h)g=nil X=c(X)L=c(L)z=O(-796912+756953)q=15310897086183-(-154866)h=O(294729+-334713)y[e]=M y[T]=A J=b[z]Q=O(-918063+878154)j=c(j)k=y[e]U=c(U)H=c(H)g=y[T]j=g(h,q)P=k[j]z=J(P)z=O(114911-154863)J=b[z]j=O(1025732+-1065732)g=b[j]h=y[e]U=-261065+15562194475031 q=y[T]H=q(Q,U)j=h[H]k=g[j]Z=O(-177416+137520)j=y[e]X=530472+851335293284 Q=535526+17381382960055 L=31213878158650-(-1037197)h=y[T]U=O(-570779-(-530834))H=O(915667+-955661)q=h(H,Q)i=12989555039311-(-457553)h=O(-449906+409906)g=j[q]P=k[g]z=J(P)J=t()P=O(272442-312394)y[J]=z z=b[P]j=b[h]q=y[e]H=y[T]Q=H(U,X)h=q[Q]g=j[h]U=-676299+15231987985791 h=y[e]Q=O(458593+-498491)q=y[T]H=q(Q,U)j=h[H]k=g[j]P=z(k)k=O(-90547-(-50562))H=O(979249+-1019166)Q=882235+3038944235340 z=b[k]j=y[e]h=y[T]k=O(-468557-(-428553))q=h(H,Q)k=z[k]g=j[q]k=k(z,g)H=O(321219+-361219)g=O(-718259-(-678307))z=b[g]q=b[H]A=O(338315+-378320)Q=y[e]U=y[T]X=U(A,L)H=Q[X]h=q[H]X=O(612687-652627)A=31928+24073956372242 H=y[e]L=O(-611171+571232)Q=y[T]U=Q(X,A)q=H[U]IZ=18390942552208-864029 j=h[q]X=O(-208375-(-168405))U=992167+5432456881722 Q=O(-431496+391528)g=z(j)h=y[e]q=y[T]H=q(Q,U)j=h[H]A=1021666+5157701202559 D=33166167111945-(-475979)h=nil H=y[e]Q=y[T]U=Q(X,A)m=-186954+20514760720282 q=H[U]H=nil U=y[e]f=O(775347+-815316)X=y[T]A=X(L,D)d=429787+33469685755398 X=I Q=U[A]L=O(-647043+607086)A=b[L]o=y[e]L=O(-615289+575345)L=A[L]n=y[T]s=n(f,i)D=o[s]f=26117108013683-10994 L=L(A,D)s=O(852486-892385)n=28365622450088-(-760816)o=O(809203-849098)A=false U=L or A A=y[e]L=y[T]D=L(o,n)X=A[D]A=nil D=y[e]o=y[T]n=o(s,f)u=-888725+1210732237256 L=D[n]OZ=O(-178337+138329)D=-873423+873423 i=O(-789791+749871)n=y[e]s=y[T]f=s(i,u)o=n[f]n=false f=y[e]i=y[T]u=i(Z,m)s=f[u]i=O(-725812-(-685855))f=b[i]u=y[e]Z=y[T]m=Z(R,d)R=O(543833-583790)i=u[m]Z=I m=b[R]N=y[e]bZ=y[T]FZ=bZ(OZ,IZ)d=N[FZ]R=O(610290-650234)R=m[R]R=R(m,d)u=R I=R and 255091+2763193 or-811162+5029443 end else I=y[a[433545+-433544]]P=O(-377460+337469)J=y[a[194686-194684]]k=539500+17067592868767 T=y[a[-200929+200932]]z=T(P,k)p=J[z]J=nil I[p]=J I=-559633+17246928 end end end else if I&lt;-17600+15566872 then if I&lt;15174103-(-1631)then if I&lt;-941010+15957009 then if I&lt;15765777-957639 then I=645733+10440617 else I=907883+15605323 P=y[z]p=P end else y[e]=S I=y[e]I=I and 664087+10068577 or 7106545-876916 end else if I&lt;16184981-756503 then if I&lt;16215941-1010562 then A=#Q X=-729104+729105 U=J(X,A)X=P(Q,U)I=1597083-779034 A=y[H]D=403475+-403474 M=X-D L=k(M)U=nil A[X]=L X=nil else C=-628189-(-628190)A=184770-184764 I=y[k]x=I(C,A)A=O(-156398-(-116477))I=O(-326161-(-286240))b[I]=x C=b[A]A=947865-947863 I=C&gt;A I=I and 952570+1334972 or 896687+630727 end else U=O(-716070-(-676073))h=nil Q=b[U]X=y[e]o=25803467270770-(-967805)n=183514+21847796964067 s=2397982430374-593994 A=y[T]D=O(-403578-(-363577))L=A(D,o)U=X[L]X=true Q[U]=X o=O(33714+-73648)U=y[J]A=y[e]L=y[T]D=L(o,n)X=A[D]p={}Q=U[X]o=O(749950-789856)X=y[j]I=b[O(-44423-(-4520))]U=Q(X)X=O(-283806-(-243809))U=b[X]A=y[e]n=-438417+17229920194536 L=y[T]D=L(o,n)o=O(-150155+110224)X=A[D]Q=U[X]X=l(131373+7264090,{j;e;T})U=O(-960189-(-920227))U=Q[U]n=30672170422106-939920 U=U(Q,X)Q=t()U=B(-849308+5541099,{j,e;T,J})y[Q]=U A=y[e]L=y[T]D=L(o,n)k=nil X=A[D]U=g[X]A=y[j]X=U(A)A=O(-468051-(-428103))X=b[A]J=c(J)n=O(413085-452996)L=y[e]D=y[T]g=nil o=D(n,s)s=8551337888793-1047691 A=L[o]U=X[A]A=915187-915186 X=U(A)A=O(532779-572766)n=O(580250+-620175)P=nil X=b[A]L=y[e]D=y[T]o=D(n,s)j=c(j)A=L[o]U=X[A]A=v(6694565-520905,{e,T,Q})T=c(T)X=U(A)U=X()e=c(e)Q=c(Q)end end else if I&lt;156054+16332619 then if I&lt;-858984+17026108 then if I&lt;15819377-(-331165)then I=y[a[-70435+70436]]g=960032-960032 j=-951288-(-951543)k=I(g,j)e=J W[e]=k e=nil I=589589+3228217 else J=-557926+557939 e=y[a[720987+-720985]]W=e*J e=7514537919879-(-854052)p=W+e e=730849-730848 W=35184372396681-307849 I=p%W y[a[-195404-(-195406)]]=I I=-464444+4426341 W=y[a[43166-43163]]p=W~=e end else m=-705277+705278 y[e]=E Z=y[o]u=Z+m i=f[u]Y=q+i i=-361929+362185 I=Y%i q=I u=y[D]I=-719320+14924767 i=H+u u=898561+-898305 Y=i%u H=Y end else if I&lt;829373+15784725 then k=O(848319-888274)P=p p=b[k]k=O(172491-212474)I=p[k]g=O(860580+-900583)k=t()y[k]=I p=b[g]g=O(-881756+841829)I=p[g]h=I g=I H=O(562544+-602547)q=b[H]j=q I=q and-114324+10758985 or 7196499-(-809209)else g=597529+10266022163603 p=y[a[324852+-324848]]T=y[a[72342+-72340]]W=nil k=O(776157+-816145)z=y[a[-483643-(-483646)]]P=z(k,g)J=T[P]I=p[J]J=y[a[930062-930061]]p=I(J)I=b[O(-968091-(-928138))]e=nil p={}end end end end end end end I=#V return F(p)end,{},function(b,O)local F=J(O)local G=function(G,a,V,r)return I(b,{G;a,V;r},O,F)end return G end,function(b)local O,I=-392025-(-392026),b[-256550+256551]while I do W[I],O=W[I]-(578682-578681),(226261+-226260)+O if-651038-(-651038)==W[I]then W[I],y[I]=nil,nil end I=b[O]end end,function(b)for O=78276+-78275,#b,-329872-(-329873)do W[b[O]]=W[b[O]]+(209108+-209107)end if G then local I=G(true)local F=V(I)F[O(-163721+123758)],F[O(984205-1024181)],F[O(-828737+788744)]=b,T,function()return 418173+-2086437 end return I else return a({},{[O(-276917-(-236941))]=T;[O(386315+-426278)]=b;[O(-127523-(-87530))]=function()return-2310581-(-642317)end})end end,{},function()e=e+(479813-479812)W[e]=-479270+479271 return e end,function(b,O)local F=J(O)local G=function(G,a)return I(b,{G,a},O,F)end return G end return(z(7575873-(-1036416),{}))(F(p))end)(getfenv and getfenv()or _ENV,unpack or table[O(733319+-773301)],newproxy,setmetatable,getmetatable,select,{...})end)(...)</ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="Folder" referent="RBX57D74265F48345158F9DDC2727A264BE">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<string name="Name">Imgs</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="ImageLabel" referent="RBX34A6D3746460447CAFADD67A81D445BB">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<float name="BackgroundTransparency">0</float>
					<Color3 name="BorderColor3">
						<R>0</R>
						<G>0</G>
						<B>0</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="ClipsDescendants">false</bool>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Draggable">false</bool>
					<Content name="Image"><url>rbxassetid://129168231652243</url></Content>
					<Color3 name="ImageColor3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<Vector2 name="ImageRectOffset">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<Vector2 name="ImageRectSize">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<float name="ImageTransparency">0</float>
					<bool name="Interactable">true</bool>
					<int name="LayoutOrder">0</int>
					<string name="Name">ImageLabel</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>0</YO>
					</UDim2>
					<token name="ResampleMode">0</token>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<token name="ScaleType">0</token>
					<bool name="Selectable">false</bool>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<int name="SelectionOrder">0</int>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>100</XO>
						<YS>0</YS>
						<YO>100</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<Rect2D name="SliceCenter">
						<min>
							<X>0</X>
							<Y>0</Y>
						</min>
						<max>
							<X>0</X>
							<Y>0</Y>
						</max>
					</Rect2D>
					<float name="SliceScale">1</float>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UDim2 name="TileSize">
						<XS>1</XS>
						<XO>0</XO>
						<YS>1</YS>
						<YO>0</YO>
					</UDim2>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
			</Item>
		</Item>
		<Item class="ModuleScript" referent="RBXC8877968BB2C461B9BD7B72F7556DBA1">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">SystemInstructions</string>
				<string name="ScriptGuid">{9DDB1E77-B834-4686-B74C-EA9D2956EEC7}</string>
				<ProtectedString name="Source">--[[ v1.0.0 https://wearedevs.net/obfuscator ]] return(function(...)local l={&quot;\116\083\088\112\102\114\075\120\084\055\043\090\081\082\052\065&quot;;&quotquot;,&quot;\115\050\067\053\084\053\073\076&quot;,&quot;\102\106\088\068\053\106\122\061&quot;;&quot;\053\111\108\104\084\076\068\074\084\104\088\048\050\074\118\113\086\117\061\061&quot;,&quot;\070\112\113\076\087\066\114\081\113\079\107\083\048\118\113\055\119\122\061\061&quot;,&quot;\085\109\066\101\085\109\111\070&quot;,&quot;\085\073\082\070\050\117\061\061&quot;,&quot;\106\079\104\049\085\051\090\089\072\057\090\102\114\117\099\061&quot;;&quot;\080\120\084\116\111\080\109\090\048\070\071\072\047\066\085\088\108\098\087\078\119\098\120\121\082\085\079\061&quot;;&quot;\102\065\049\105\081\074\087\073&quot;;&quot;\049\111\118\110\084\121\078\082\074\074\078\108\043\048\049\074&quot;;&quot;\112\072\088\119&quot;,&quot;\053\106\043\101&quot;,&quot;\050\065\088\076\085\052\061\061&quot;,&quot;\053\118\054\076\100\088\114\078\121\101\099\097\088\050\073\065\109\117\061\061&quot;,&quot;\086\076\088\079\050\055\088\097\081\084\076\111\050\082\108\109\117\055\052\061&quot;;&quot;\050\048\120\071\053\065\097\061&quot;;&quot;&quot;;&quot;\050\072\080\105\053\065\097\061&quot;,&quot;\085\099\108\113\119\106\104\089\111\052\057\081\105\074\113\078\119\084\080\110&quot;;&quot;\081\109\111\105\055\109\066\072\085\043\118\083\053\048\068\076&quot;;&quot;\050\109\076\068\118\106\088\099&quot;;&quot;\087\122\057\071\109\109\111\083\072\083\118\048\055\076\075\098\069\072\054\086&quot;,&quot;\078\102\043\074\122\110\076\102\105\077\076\048\066\078\043\069\086\049\071\070\073\117\061\061&quot;,&quot;\088\109\108\081\088\076\119\087\081\077\043\098\081\055\119\078&quot;,&quot;\049\106\108\113\074\084\043\089\102\111\086\070\117\055\050\112\053\083\114\061&quot;;&quot;\081\054\073\050\047\079\075\120\065\049\104\103\118\055\090\120\099\052\061\061&quot;,&quot;\104\104\079\086\082\104\069\051\111\050\065\072\090\047\082\049\083\051\112\054\071\118\043\111\083\101\078\098\108\121\069\084\109\100\061\061&quot;,&quot;\102\048\043\120\118\074\082\105\050\117\061\061&quot;;&quot;\118\106\066\104\118\098\080\108\053\048\102\061&quot;,&quot;\105\115\099\089&quot;,&quot;\104\047\067\106\109\050\109\076\101\113\084\112\119\086\086\072\074\043\084\112\072\117\071\087\053\099\081\120\107\080\119\113\068\047\089\102\110\100\061\061&quot;,&quot;\053\083\121\061&quot;;&quot;\074\112\086\100\081\056\080\085&quot;,&quot;\081\072\119\117\069\098\099\075\049\111\114\061&quot;,&quot;\053\083\097\061&quot;,&quot;\072\076\066\079\050\074\075\061&quot;,&quot;\050\048\118\111\055\065\111\110\118\073\108\075\084\083\080\087&quot;,&quot;\085\072\088\104\050\072\080\070&quot;;&quot;\118\098\082\122\050\117\061\061&quot;,&quot;\050\109\043\070\072\065\088\087\102\065\049\082\053\043\066\108\053\073\088\070\102\073\043\077\118\106\082\071\053\073\086\061&quot;,&quot;\102\109\043\070\053\074\043\070\085\072\049\068\085\048\120\082&quot;;&quot;\072\076\066\108\053\048\049\082\069\100\061\061&quot;,&quot;\078\090\079\113\120\078\079\115\084\099\077\100\078\086\102\055\109\079\105\055&quot;;&quot;\109\114\067\043\077\088\043\097&quot;;&quot;\055\084\085\087\085\065\043\099\074\084\120\122\069\084\050\121\053\052\061\061&quot;;&quot;\074\106\120\122\055\084\080\115\116\074\080\055\053\098\068\073&quot;,&quot;\086\115\118\121\120\120\083\122\103\122\043\089\099\102\104\068\071\117\118\115&quot;;&quot;\118\074\087\122\085\074\088\089&quot;;&quot;\102\048\111\101\050\106\066\078&quot;;&quot;\102\065\119\122\112\106\117\087\043\084\085\070\050\083\043\106&quot;;&quot;\043\106\111\078\102\106\043\105\097\121\049\082\118\106\043\077\118\106\043\114\097\117\061\061&quot;,&quot;\112\073\107\121\089\074\088\109\049\050\107\057\087\066\043\053\085\086\111\114\085\114\075\061&quot;;&quot;\088\055\049\109&quot;;&quot;\088\106\087\090\088\077\088\110\088\073\043\089\053\070\043\111\074\100\061\061&quot;;&quot;\072\076\066\078\050\072\049\068\118\106\111\113\053\106\084\061&quot;;&quot;\082\087\088\084\116\043\112\066&quot;;&quot;\085\109\068\068\102\052\061\061&quot;;&quot;\114\047\087\085\083\076\089\087&quot;,&quot;\113\090\118\103\119\057\106\065\104\110\097\048\066\118\118\065&quot;,&quot;\081\069\080\073\050\120\115\047\116\088\047\050\074\056\086\061&quot;;&quot;\043\106\050\085\043\055\080\087\117\114\049\054\069\074\088\081\112\065\084\061&quot;;&quot;\116\084\051\105\043\072\119\089\085\073\114\065&quot;;&quot;\072\076\066\073\085\122\061\061&quot;;&quot;\110\121\077\083\102\082\090\107\070\085\090\111\074\119\109\043\103\111\101\049\082\075\076\056\071\050\107\112\043\102\105\101\106\119\097\076\109\048\120\051\043\076\101\078&quot;;&quot;\078\057\102\050\065\081\050\103&quot;;&quot;\083\118\071\117\054\089\113\088\097\097\057\080\048\083\101\101&quot;;&quot;\116\052\061\061&quot;,&quot;\117\076\085\104\112\077\082\087\055\109\088\117\049\083\080\114&quot;,&quot;\053\074\111\070\081\100\061\061&quot;;&quot;\116\113\052\082\050\103\099\108\116\052\061\061&quot;;&quot;\111\048\056\077\068\103\069\118&quot;,&quot;\117\067\107\118\080\122\061\061&quot;,&quot;\102\048\043\078\053\065\050\082&quot;,&quot;\084\043\118\077\085\084\097\065\081\055\118\089\085\048\118\072&quot;;&quot;\112\043\068\114\116\072\043\076\085\082\050\065\081\073\114\065&quot;,&quot;\118\106\111\113\053\106\084\061&quot;;&quot;\118\106\066\101\118\074\076\113\050\072\097\061&quot;,&quot;\055\109\072\102\114\052\065\057\100\049\099\066\118\099\068\054\057\117\061\061&quot;;&quot;\100\084\117\099&quot;;&quot;\047\068\097\086\119\097\072\065&quot;,&quot;\067\084\081\088\107\106\117\121&quot;,&quot;\102\109\088\105\081\072\119\070&quot;,&quot;\080\074\113\112\050\081\100\121&quot;;&quot;\112\043\119\048\049\077\084\075\069\098\118\112\049\098\111\048\116\117\061\061&quot;,&quot;\085\043\086\122\102\121\043\050\085\074\049\113\116\043\111\111\055\122\061\061&quot;}local function J(J)return l[J+(-599563+619293)]end for J,M in ipairs({{999610+-999609,-268290-(-268377)},{-613809+613810,-273210-(-273255)},{-612845-(-612891),-374948-(-375035)}})do while M[291212-291211]&lt;M[935065+-935063]do l[M[-768015+768016]],l[M[-146819-(-146821)]],M[1027810-1027809],M[-943506-(-943508)]=l[M[32055+-32053]],l[M[947260+-947259]],M[960741-960740]+(-273211-(-273212)),M[589003-589001]-(-687503-(-687504))end end do local J=string.sub local M=table.concat local B=table.insert local v=string.len local j=l local k=type local L=string.char local q=math.floor local s={g=-737939+737941;Q=-708632-(-708658);U=-1012761-(-1012785);s=769403+-769361,[&quot;\056&quot;]=-285045+285108;b=992289-992282;O=322610+-322566;W=-415569+415626,m=-403890+403944;[&quot;\057&quot;]=456307-456248,M=-42466-(-42501),n=-393-(-451),x=236869-236820,j=-916899-(-916905);[&quot;\043&quot;]=946661+-946640,X=-178710-(-178723);t=-411172+411186;[&quot;\054&quot;]=141206+-141191;[&quot;\047&quot;]=-1047704-(-1047735);l=442298-442257,A=-865997-(-866052);C=1017474-1017463,h=-30056+30107;J=104214+-104192;N=-935535-(-935580);[&quot;\052&quot;]=843551+-843519;[&quot;\049&quot;]=665476-665459,[&quot;\055&quot;]=-370265-(-370284),q=589346+-589312;L=-956911-(-956964),D=546568-546535;[&quot;\051&quot;]=376743-376683;d=-986503-(-986503),G=469869-469822;Y=123510+-123467;a=-127521+127529;R=-312979+313016,P=420590+-420581;r=-932692+932728,y=-749041+749045,e=-664215+664261;K=-922179-(-922235),k=326121+-326059;H=619103+-619080;f=-472017-(-472045),c=-508166-(-508206);F=-825340-(-825392);Z=-865134-(-865144);B=917267-917206,I=-709161+709200,[&quot;\053&quot;]=164966-164939,z=-468214+468262,[&quot;\050&quot;]=-554220-(-554245);S=-484339+484342,u=335069-335053,p=-1039212+1039230;V=700733-700721;E=337394-337364,T=19899+-19879;[&quot;\048&quot;]=64917+-64879;o=-376505-(-376510);w=-414961+414962;v=-380335-(-380364),i=-491446-(-491496)}for l=168818-168817,#j,-292682+292683 do local E=j[l]if k(E)==&quot;\115\116\114\105\110\103&quot;then local k=v(E)local f={}local Z=204511+-204510 local c=807112-807112 local g=389333-389333 while Z&lt;=k do local l=J(E,Z,Z)local M=s[l]if M then c=c+M*(-347959+348023)^((891652+-891649)-g)g=g+(512860+-512859)if g==947058-947054 then g=1017542-1017542 local l=q(c/(-903328-(-968864)))local J=q((c%(-471442-(-536978)))/(1047353-1047097))local M=c%(455763+-455507)B(f,L(l,J,M))c=544151+-544151 end elseif l==&quot;\061&quot;then B(f,L(q(c/(373812-308276))))if Z&gt;=k or J(E,Z+(-919756-(-919757)),Z+(403431-403430))~=&quot;\061&quot;then B(f,L(q((c%(595982+-530446))/(-749211+749467))))end break end Z=Z+(378838+-378837)end j[l]=M(f)end end end return(function(l,B,v,j,k,L,q,c,E,Y,n,K,f,H,g,S,Z,M,F,s,b,W)W,f,H,Y,K,n,g,M,s,E,S,Z,b,c,F=function(l,J)local B=c(J)local v=function(v,j)return M(l,{v,j},J,B)end return v end,function()Z=(605086-605085)+Z E[Z]=777164-777163 return Z end,function(l,J)local B=c(J)local v=function(v,j,k,L,q,s,E,f)return M(l,{v;j;k;L;q,s,E,f},J,B)end return v end,function(l,J)local B=c(J)local v=function(v)return M(l,{v},J,B)end return v end,function(l,J)local B=c(J)local v=function(v,j,k,L,q,s)return M(l,{v,j;k;L;q,s},J,B)end return v end,function(l,J)local B=c(J)local v=function(v,j,k)return M(l,{v,j;k},J,B)end return v end,function(l)local J,M=922349-922348,l[998812-998811]while M do E[M],J=E[M]-(709661+-709660),J+(1003111-1003110)if E[M]==645581+-645581 then E[M],s[M]=nil,nil end M=l[J]end end,function(M,v,j,k)local q,g,R,u,o,S,C,Q,c,Z,X,y,U,G,e,N,z,P,i,T,O,V,I,a,E,D,m,p,w,h,x,r,t,d while M do if M&lt;10156643-584539 then if M&lt;97965+5179157 then if M&lt;814169+2281312 then if M&lt;1962935-1004973 then if M&lt;355749-4707 then if M&lt;-553876-(-878860)then if M&lt;568679-415873 then M=true M=167722+14359239 else t=J(-1052142-(-1032420))u=l[t]M=9622607-(-548630)q=u end else z=not m c=c+S Z=c&lt;=g Z=z and Z z=c&gt;=g z=m and z Z=z or Z z=16025122-959697 M=Z and z Z=6175442-517858 M=M or Z end else if M&lt;1082009-574622 then if M&lt;-432197+802270 then m=s[S]q=m M=-595658+17085071 else Z=s[j[-808860+808863]]c=934907-934906 E=Z~=c M=E and 5747147-374610 or 952176+12443419 end else Z=s[j[-559076-(-559078)]]c=s[j[-753116-(-753119)]]M=-532045+11452741 E=Z==c q=E end end else if M&lt;2167562-310308 then if M&lt;734870-(-668675)then if M&lt;-3174+1252389 then q=#E M=S&lt;=q M=M and 6865008-590749 or-292162+8376332 else M=464840+15490596 end else q={Z}M=l[J(810903-830549)]end else if M&lt;-420477+3464795 then if M&lt;-707873+3360155 then O=-313138+313140 G=y[O]O=s[T]o=G==O I=o M=11956+3292828 else C=343022+-343021 M=s[z]R=-283465-(-283471)r=M(C,R)M=J(727028-746676)R=J(-775044+755396)l[M]=r C=l[R]R=-937277-(-937279)M=C&gt;R M=M and-719798+8120628 or 408920+16077564 end else q=s[j[-150504-(-150505)]]Z=s[j[864872+-864870]]g=J(552769+-572480)S=7668934769798-(-430445)c=Z(g,S)M=q[c]q={M}M=l[J(214929-234649)]end end end else if M&lt;4225866-573379 then if M&lt;3360589-22544 then if M&lt;748227+2555108 then if M&lt;3926069-783113 then m=375282+26509022312006 M=J(-704496-(-684824))Z=s[j[-478336-(-478337)]]c=s[j[-84644+84646]]M=E[M]S=J(671595-691277)g=c(S,m)q=Z[g]M=M(E,q)M=M and 144334+13290770 or-922875+12894663 else t=J(-120047-(-100360))E=v[-243902-(-243903)]c=v[33317-33314]q=J(-519846-(-500201))w=J(-511910-(-492196))M=l[q]m=J(-662288-(-642644))P=736163+13385640221878 Z=v[918454-918452]S=l[m]m=S(E)z=s[j[-47376-(-47377)]]x=-141465+6531240424570 X=s[j[45201-45199]]u=X(t,P)t=543976+9929082357031 S=z[u]g=m==S m=s[j[-814064-(-814065)]]u=J(833586-853261)z=s[j[268469+-268467]]X=z(u,t)S=m[X]q=M(g,S)q=J(628885-648530)M=l[q]X=J(28820+-48464)z=l[X]X=z(Z)u=s[j[798662-798661]]S=M t=s[j[376588-376586]]P=t(w,x)z=u[P]m=X==z M=m and 2702109-(-675869)or 15601490-845398 g=m end else q=I M=a M=2831711-(-814336)end else if M&lt;-341199+3924841 then if M&lt;-145727+3603328 then w=-720800+1234199167454 M=14701628-(-54464)X=s[j[282288+-282287]]u=s[j[303284+-303282]]P=J(766420+-786086)t=u(P,w)z=X[t]m=Z~=z g=m else R=-355224-(-355224)V=#x M=16654968-619142 i=V==R end else s[Z]=q M=5799525-771780 end end else if M&lt;4286353-(-242439)then if M&lt;3662653-(-635754)then if M&lt;757072+2944410 then M=true M=M and 3162013-124364 or 776492+6166341 else M=true M=M and 12920499-(-741156)or 15247438-720477 end else X=t C=J(756574+-776248)r=l[C]C=J(450505-470182)p=r[C]r=p(E,X)X=nil M=14470849-370432 p=s[j[164061+-164055]]C=p()V=r+C i=V+m V=227920+-227664 C=-472134-(-472135)x=i%V V=c[Z]m=x r=m+C p=g[r]i=V..p c[Z]=i end else if M&lt;757440+3940064 then g=J(231836-251490)u=Y(-215119+12794572,{})q=J(-733740-(-714047))M=l[q]X=J(-997022-(-977341))E=s[j[-630731-(-630735)]]c=l[g]z=l[X]X={z(u)}z=-369547+369549 m={B(X)}S=m[z]g=c(S)c=J(659400-679100)Z=E(g,c)E={Z()}q=M(B(E))E=q Z=s[j[-76700-(-76705)]]M=Z and-551395+9091896 or 751585+12518599 q=Z else y=nil d=b(d)Q=b(Q)D=b(D)T=b(T)M=583923+12605411 e=b(e)h=b(h)end end end end else if M&lt;6656645-(-176448)then if M&lt;6337343-639816 then if M&lt;-288517+5871544 then if M&lt;739656+4683579 then if M&lt;5807229-450924 then M=t M=u and 10350856-179619 or 340748-52891 q=u else M=12713395-(-161524)c=304217+-304185 Z=s[j[-152917-(-152920)]]E=Z%c g=s[j[-438860-(-438864)]]z=s[j[-320770+320772]]i=s[j[498913-498910]]x=i-E P=-714999-(-715012)i=467251-467219 w=x/i u=-332287+332289 t=P-w X=u^t m=z/X S=g(m)g=4294392824-(-574472)c=S%g S=-960573+960575 g=S^E Z=c/g g=s[j[1045088-1045084]]u=-107850+108106 X=-70727-(-70728)z=Z%X P=-175433+175689 X=4294668312-(-298984)E=nil m=z*X S=g(m)g=s[j[339061-339057]]m=g(Z)c=S+m S=26042-(-39494)g=c%S m=c-g c=nil z=234419-168883 S=m/z z=-477214+477470 Z=nil m=g%z X=g-m z=X/u u=632065+-631809 X=S%u g=nil t=S-X u=t/P S=nil t={m;z;X;u}s[j[748142-748141]]=t z=nil X=nil m=nil u=nil end else S=f()z=J(-349104-(-329423))E=v M=true Z=f()c=J(161085+-180759)s[Z]=M q=l[c]c=J(152362+-172024)M=q[c]c=f()s[c]=M g=f()M=F(12879153-622248,{})s[g]=M M=false s[S]=M m=l[z]X=F(4996258-(-685237),{S})z=m(X)q=z M=z and 774513+-422539 or 16082262-(-407151)end else if M&lt;-312508+5982409 then if M&lt;5672981-31394 then E=s[j[32587+-32586]]q=#E E=-583975-(-583975)M=q==E M=M and 907154+13263162 or 956822+11918097 else M=s[j[272127+-272117]]Z=s[j[-872841+872852]]E[M]=Z M=s[j[489665-489653]]Z={M(E)}q={B(Z)}M=l[J(861824+-881533)]end else q={}M=true s[j[774507+-774506]]=M M=l[J(-200369-(-180706))]end end else if M&lt;5545026-(-744462)then if M&lt;5800348-(-201725)then if M&lt;5887685-180472 then M=s[j[226424+-226417]]M=M and 15190448-199807 or-710808+8319385 else O=-215064-(-215065)a=M G=y[O]O=false o=G==O I=o M=o and-431158+2546608 or 808750+2496034 end else z=J(-320893-(-301219))m=l[z]P=J(169506+-189159)X=s[j[-778492+778493]]w=12836626607354-513441 u=s[j[394280-394278]]t=u(P,w)z=X[t]q=m[z]u=#Z X=S+u u=435648+-435647 z=X-u m=q(E,S,z)M=m==Z M=M and 13348009-930838 or-357972+11134492 end else if M&lt;-345474+6769347 then E=v[962907-962906]Z=v[-395380-(-395382)]M=s[j[-951236-(-951237)]]c=M M=c[Z]M=M and 13623325-(-329402)or 741368+13110259 else o=214754+-214753 a=y[o]I=a M=187982+10467970 end end end else if M&lt;8571356-804757 then if M&lt;8295741-884949 then if M&lt;7035357-(-169609)then if M&lt;7446427-516008 then V=#x R=-728837+728837 i=V==R M=i and 13748681-580580 or 416964+15618862 else M=l[J(-938700-(-918984))]q={}end else D=J(-1019927+1000276)C=J(255740-275394)M=l[C]R=l[D]C=M(R)M=J(-1025761-(-1006113))l[M]=C M=874503+11255210 end else if M&lt;8026092-501784 then if M&lt;246532+7187503 then V=V+D i=V&lt;=R h=not Q i=h and i h=V&gt;=R h=Q and h i=h or i h=852783+9492940 M=i and h i=3559721-482 M=M or i else m=nil z=nil M=1042176+392869 g=nil end else M={}Z=952809-952808 c=s[j[-565163+565172]]g=c c=553753-553752 S=c E=M c=351034+-351034 m=S&lt;c M=-18286-(-355570)c=Z-S end end else if M&lt;593785+8229248 then if M&lt;220288+8434052 then if M&lt;753539+7548746 then w=J(111677-131327)x=821626+30247510699403 M=l[J(97121-116779)]X=J(-535149-(-515455))z=l[X]u=s[j[-773473-(-773474)]]t=s[j[697693-697691]]P=t(w,x)X=u[P]m=z[X]z={m(g)}q={B(z)}else M=-386494+13656678 c=s[j[-692099-(-692105)]]Z=c==E q=Z end else M=-205841+1351368 end else if M&lt;-685937+10250479 then X=nil Z=b(Z)t=b(t)w=nil c=b(c)X=J(-1033543-(-1013849))c=nil z=b(z)x=nil S=b(S)Z=nil m=nil P=nil i=nil u=b(u)g=b(g)g=f()M=-52518+7465716 x={}V=b(V)m=J(660225-679926)s[g]=Z Z=f()z=J(-953169-(-933468))s[Z]=c S=l[m]m=J(34970-54637)c=S[m]S=f()s[S]=c u=J(-872733+853059)m=l[z]z=J(-322900-(-303179))c=m[z]z=l[X]i=972120-972119 X=J(-903159+883462)m=z[X]X=l[u]u=J(874309-894022)z=X[u]u=f()X=715432-715432 s[u]=X X=740812+-740810 t=f()P={}s[t]=X X={}V=-171469-(-171725)w=f()s[w]=P P=-424633-(-424633)R=V V=-554260-(-554261)D=V V=-794934-(-794934)Q=D&lt;V V=i-D else q=J(180452+-200100)E=J(687734+-707385)M=l[q]q=l[E]E=J(60923+-80574)l[E]=M E=J(-556824+537176)M=16155794-200358 l[E]=q E=s[j[893324+-893323]]Z=E()end end end end end else if M&lt;14508442-915027 then if M&lt;13374537-968202 then if M&lt;-258693+11176390 then if M&lt;-424136+10768752 then if M&lt;10843547-895920 then if M&lt;-957730+10769246 then c=s[j[-943394+943395]]E=v[816076-816075]z=32748180418276-(-969901)m=J(22925-42652)g=s[j[-168297-(-168299)]]S=g(m,z)Z=c[S]V=-360292+2717703226453 m=J(695662-715367)q=E[Z]c=s[j[721398-721397]]z=-60409+22960965916093 g=s[j[53371-53369]]S=g(m,z)X=J(-53513-(-33790))Z=c[S]P=583560+9275406510423 M=q[Z]Z=M M=s[j[560129-560126]]w=11068908700718-(-593908)S=s[j[-455601-(-455602)]]m=s[j[194456-194454]]u=14358051894432-(-58749)z=m(X,u)u=818561209342-(-535935)g=S[z]c=E[g]q=M(c)c=q S=s[j[574838-574837]]X=J(-723694+704030)m=s[j[-780623+780625]]z=m(X,u)t=3971202240266-509905 X=J(-145950+126252)g=S[z]u=34136862188902-(-825522)q=E[g]S=s[j[881555+-881554]]i=13472420392240-(-158545)m=s[j[-1001252+1001254]]z=m(X,u)g=S[z]M=q[g]q=s[j[-30734+30738]]g=M u=J(-387450-(-367794))m=s[j[-995286+995287]]z=s[j[844993+-844991]]X=z(u,t)S=m[X]M=q[S]z=s[j[581117+-581116]]X=s[j[-438481-(-438483)]]t=J(422136+-441797)u=X(t,P)m=z[u]S=E[m]q=M(S)M=s[j[-784394+784399]]P=J(-441626+421966)m=M S=q M=s[j[-661850+661856]]X=s[j[410894+-410893]]u=s[j[566283+-566281]]t=u(P,w)z=X[t]q=M(m,z,Z)m=q M=s[j[322798-322792]]u=s[j[-833245+833246]]w=J(-244372+224693)t=s[j[-652008-(-652010)]]x=31143318361099-695141 P=t(w,x)X=u[P]z=M(m,X,c)M=s[j[-193364-(-193370)]]m=z x=J(-196980+177288)t=s[j[588807+-588806]]P=s[j[585600+-585598]]w=P(x,i)u=t[w]X=M(m,u,g)M=s[j[232774-232768]]P=s[j[-221738+221739]]w=s[j[-295097+295099]]i=J(516379+-536055)x=w(i,V)m=X t=P[x]u=M(m,t,S)M=l[J(-113304+93602)]m=u q={m}else N=-349287+359287 D=f()Q=J(364453+-384154)o=J(-632029-(-612375))s[D]=p q=l[Q]h=986083-985983 U=433386+-433386 d=42239+-41984 Q=J(901236+-920957)M=q[Q]Q=751004-751003 q=M(Q,h)Q=f()h=-743940+743940 s[Q]=q M=s[z]q=M(h,d)h=f()s[h]=q M=s[z]d=-949802+949803 y=1018047-1018045 e=s[Q]q=M(d,e)T=-150029-(-150030)d=f()s[d]=q q=s[z]e=q(T,y)q=914789+-914788 M=e==q e=f()s[e]=M M=J(89753+-109423)y=J(253983-273686)a=l[o]q=J(970246+-989946)G=s[z]O={G(U,N)}o=a(B(O))M=i[M]a=J(797967-817670)I=o..a T=y..I M=M(i,q,T)y=J(-937025+917344)T=f()s[T]=M q=l[y]I=n(195539+15738636,{z;D;t,c,Z,V,e,T,Q,d,h,u})y={q(I)}M={B(y)}y=M M=s[e]M=M and 11530372-(-913554)or-600110+17085844 end else P=765534-765469 u=f()s[u]=q M=s[z]t=755377+-755374 q=M(t,P)i=W(16302089-(-292822),{})t=f()M=-550407-(-550407)P=M M=181223+-181223 s[t]=q x=J(298145-317826)q=l[x]x={q(i)}w=M q=-825756+825758 M={B(x)}x=M M=x[q]q=J(668535-688228)i=M M=l[q]C=J(-706941-(-687287))V=s[c]r=l[C]C=r(i)r=J(-818422-(-798722))p=V(C,r)V={p()}q=M(B(V))V=f()s[V]=q p=s[t]q=901102-901101 M=-302600+13491934 r=p p=-359803-(-359804)C=p p=-36476-(-36476)R=C&lt;p p=q-C end else if M&lt;827472+9873214 then if M&lt;11237564-610889 then i=V h=i x[i]=h i=nil M=7332373-(-80825)else s[Z]=I O=s[d]U=-460445+460446 G=O+U o=y[G]a=P+o o=718957-718701 M=a%o G=s[h]P=M o=w+G G=667630+-667374 a=o%G w=a M=-946011+5973756 end else z=J(75892-95586)i=14691691245968-677591 m=l[z]P=J(-656031-(-636341))w=-499278+20906447619157 X=s[j[692318-692317]]u=s[j[446723-446721]]t=u(P,w)x=J(796325+-816016)u=J(241152-260826)M=9445986-655547 z=X[t]q=m[z]X=l[u]t=s[j[233367+-233366]]P=s[j[389520-389518]]w=P(x,i)u=t[w]z=X[u]X={z(E,S,S)}m=q(g,B(X))m=-893041-(-893042)q=S+m S=q end end else if M&lt;11829559-(-279345)then if M&lt;-595084+12633591 then if M&lt;10904470-(-682276)then M=q and 3806225-(-790518)or 6109601-409084 else S=J(-608510+588800)Z=s[j[-442336-(-442337)]]m=175349+2786804553756 c=s[j[-848580-(-848582)]]g=c(S,m)q=Z[g]M=J(605957+-625629)M=E[M]M=M(E,q)M=M and 716729+2344308 or 255673+15989455 end else x=J(62212+-81906)w=l[x]x=J(14350-34072)P=w[x]u=P M=5541552-230628 end else if M&lt;212862+11968455 then M=3569820-(-102691)else E=J(730581+-750300)q=J(856523+-876188)M=l[q]q=M(E)M=l[J(108151+-127819)]q={}end end end else if M&lt;-549750+13494492 then if M&lt;-706641+13184792 then if M&lt;646072+11802295 then if M&lt;-452362+12889687 then P=-543586+18992917671406 m=J(143786-163480)q=l[m]t=J(-1001170-(-981444))z=s[j[757283+-757282]]X=s[j[-239016-(-239018)]]u=X(t,P)m=z[u]M=q[m]q=M(g,c)q=#Z M=S+q S=M M=9394738-604299 else I=s[Z]q=I M=I and 5231288-(-592532)or 4099913-453866 end else M=977772+7891604 end else if M&lt;12645925-(-60427)then if M&lt;13238906-660115 then M=l[J(-1033561+1013875)]q={}else q=12191383-(-980107)c=3230265-(-527232)Z=J(122542-142259)E=Z^c M=q-E E=M q=J(776305+-796029)M=q/E q={M}M=l[J(-683191+663511)]end else M=l[J(390647-410342)]c=J(-5680-14014)Z=l[c]c=J(666047-685744)E=Z[c]c=s[j[958938+-958937]]Z={E(c)}q={B(Z)}end end else if M&lt;12640480-(-648389)then if M&lt;259190+12969259 then if M&lt;698312+12477358 then V=f()z=nil R=W(6566601-935620,{V,u;t,S})i={}h={}P=nil S=b(S)e=J(-704260-(-684532))X=nil s[V]=i m=nil D=f()M=l[J(-711053+691328)]y=J(-736714-(-716999))o=nil i=f()s[i]=R R={}S=J(-54996+35341)s[D]=R Q=J(597425-617154)R=l[Q]T=s[D]d={[e]=T,[y]=o}Q=R(h,d)c=nil s[g]=Q R=K(-967428+7261774,{D,V,w,u;t,i})V=b(V)t=b(t)x=nil x=J(-202383-(-182684))s[Z]=R i=b(i)u=b(u)D=b(D)u=J(-549737+530049)w=b(w)c=l[S]X=l[u]t=s[g]i=471733+4197012968685 P=s[Z]w=P(x,i)u=t[w]z=X[u]u=s[g]w=J(-999447-(-979729))t=s[Z]x=67929+26833165592438 P=t(w,x)X=u[P]m=z[X]S=c(m)c=f()s[c]=S S={}P=16926444625611-(-950270)z=s[g]t=J(929042-948725)X=s[Z]u=X(t,P)X=K(-397970+14494039,{g;Z})m=z[u]z=f()s[z]=m t=J(801698+-821341)m=f()u=H(-202503+3415725,{g,Z})s[m]=X X=f()s[X]=u q={S}u=n(8957354-(-799896),{g;Z,m;c,z;X})S[t]=u else D=not R p=p+C q=p&lt;=r q=D and q D=p&gt;=r D=R and D q=D or q D=8890768-(-996159)M=q and D q=-437219+15199349 M=M or q end else s[j[348139-348134]]=q M=92461+5608056 E=nil end else if M&lt;-340675+13755284 then M=254113-(-176636)Z=s[j[878513-878510]]c=359740-359693 E=Z*c Z=-776639+776896 q=E%Z s[j[807230+-807227]]=q else g=J(197908-217577)S=-19084+2667597401958 q=s[j[1045566-1045565]]Z=s[j[532104+-532102]]c=Z(g,S)M=q[c]q={M}M=l[J(454260+-473919)]end end end end else if M&lt;727914+14100308 then if M&lt;-460057+14645806 then if M&lt;-413691+14456734 then if M&lt;501196+13383231 then if M&lt;-276086+13960857 then M=-910121+4582632 else M={}S=-222641+35184372311473 z=-836683-(-836938)s[j[-308123-(-308125)]]=M X=J(575638-595312)q=s[j[323587+-323584]]g=q q=Z%S s[j[564222-564218]]=q m=Z%z z=39636+-39634 S=m+z s[j[-834323-(-834328)]]=S z=l[X]X=J(93952+-113623)m=z[X]z=m(E)m=J(306965-326631)X=183445+-183444 t=204291-204290 c[Z]=m m=887825+-887628 u=z P=t t=935210+-935210 w=P&lt;t M=13123252-(-977165)t=X-P end else M=1676850-241805 end else if M&lt;17161+14086260 then if M&lt;-512111+14611571 then E=v[57751-57750]Z=s[j[995445+-995444]]S=J(1001822-1021526)c=s[j[-58402-(-58404)]]m=24392975249234-(-163084)M=J(534153+-553825)g=c(S,m)M=E[M]q=Z[g]M=M(E,q)M=M and 14907849-454535 or 2411242-(-702329)else t=t+P x=not w X=t&lt;=u X=x and X x=t&gt;=u x=w and x X=x or X x=4283623-(-203985)M=X and x X=-916334+8437567 M=M or X end else Z=s[j[872644-872642]]c=362293+-362112 E=Z*c Z=12116418425873-40456 q=E+Z E=463784+35184371625048 Z=-564780+564781 M=q%E s[j[279738+-279736]]=M M=795727+12599868 E=s[j[-395398-(-395401)]]q=E~=Z end end else if M&lt;537891+14126470 then if M&lt;14132735-(-323378)then if M&lt;703786+13610657 then s[Z]=p M=s[Z]M=M and 882257+11592883 or 72750-(-62286)else g=J(-710561-(-690904))q=s[j[-463390-(-463391)]]Z=s[j[99390+-99388]]S=14813349740854-9796 c=Z(g,S)M=q[c]q={M}M=l[J(-638467+618783)]end else M=Y(1408178-15937,{g})r={M()}M=l[J(-1020312+1000627)]q={B(r)}end else if M&lt;-293283+15052588 then u=J(357199+-376905)m=s[j[-812984+812985]]M=S t=31114415168593-(-498759)z=s[j[-483820+483822]]X=z(u,t)S=m[X]P=16672680182525-763050 q=M(g,S)m=J(-193712+174068)q=J(-127409-(-107764))t=J(120118-139830)M=l[q]S=l[m]m=S(c)z=s[j[388705-388704]]X=s[j[-941316-(-941318)]]u=X(t,P)t=19814081315041-(-353065)S=z[u]g=m==S u=J(550721-570373)m=s[j[399395+-399394]]z=s[j[-120418-(-120420)]]X=z(u,t)S=m[X]q=M(g,S)M={}g=M M=644736+-644735 S=M M=1078590-(-66937)else r=s[Z]M=r and 15726117-(-848851)or 406570+13780361 p=r end end end else if M&lt;17132067-882801 then if M&lt;16036457-92239 then if M&lt;16373863-660751 then if M&lt;-39253+15062475 then E=J(-424045-(-404380))c=1015569+-1015569 M=l[E]Z=s[j[-846459+846467]]E=M(Z,c)M=579104+7029473 else M=s[j[-405612-(-405613)]]u=-945525-(-945780)Z=c X=418385+-418385 z=M(X,u)E[Z]=z M=-286280-(-623564)Z=nil end else g=-179538+179539 Z=s[j[830247-830246]]S=35234+-35232 c=Z(g,S)Z=278099-278098 E=c==Z M=E and-829329+11750025 or-709634+1234237 q=E end else if M&lt;-85880+16298222 then if M&lt;15060609-(-947175)then M=true M=M and 9947468-379452 or-719743+13292541 else V=898817+-898816 R=#x i=c(V,R)h=363070-363069 V=m(x,i)R=s[w]Q=V-h D=z(Q)i=nil M=-73801+7002049 R[V]=D V=nil end else g=J(-21604-(-1915))q=s[j[818747+-818746]]Z=s[j[-843037-(-843039)]]S=73166+5840338087121 c=Z(g,S)M=q[c]q={M}M=l[J(-455102-(-435429))]end end else if M&lt;16035719-(-539128)then if M&lt;-803822+17291619 then if M&lt;-205187+16691135 then a=s[Z]I=a M=a and 7539085-960732 or 11356473-700521 else R=J(717900+-737548)M=l[R]R=J(992091-1011742)l[R]=M M=453641+11676072 end else z=J(-359632+339931)m=q q=l[z]z=J(-367825+348104)M=q[z]z=f()X=J(-490385+470691)s[z]=M q=l[X]X=J(-34322-(-14644))M=q[X]t=M X=M w=J(-714504+694810)P=l[w]u=P M=P and 11257466-(-824637)or 6117549-806625 end else if M&lt;16097457-(-485574)then r=P==w p=r M=-686772+14873703 else c=17251795-592202 Z=J(990945+-1010594)E=Z^c q=-1030044+2308456 M=q-E q=J(-630415-(-610707))E=M M=q/E q={M}M=l[J(672237-691933)]end end end end end end end M=#k return B(q)end,{},{},function(l,J)local B=c(J)local v=function(...)return M(l,{...},J,B)end return v end,-604360-(-604360),function(l)E[l]=E[l]-(651195+-651194)if E[l]==693653+-693653 then E[l],s[l]=nil,nil end end,function(l)for J=-241094-(-241095),#l,432244+-432243 do E[l[J]]=E[l[J]]+(-653271+653272)end if v then local M=v(true)local B=k(M)B[J(754764-774492)],B[J(-537070-(-517363))],B[J(-120564-(-100917))]=l,g,function()return-991123+3514051 end return M else return j({},{[J(142587+-162294)]=g,[J(658038-677766)]=l;[J(327960-347607)]=function()return-202167+2725095 end})end end,function(l,J)local B=c(J)local v=function()return M(l,{},J,B)end return v end return(S(-913086+6413275,{}))(B(q))end)(getfenv and getfenv()or _ENV,unpack or table[J(-924653-(-904931))],newproxy,setmetatable,getmetatable,select,{...})end)(...)</ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="ModuleScript" referent="RBX10FE547682AC4FB3A2A8DAB0B2BB0BE2">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">FeedbackWidgetWindow</string>
				<string name="ScriptGuid">{096B444C-7216-47ED-82B9-DB52A27C597B}</string>
				<ProtectedString name="Source">--[[ v1.0.0 https://wearedevs.net/obfuscator ]] return(function(...)local E={&quot;\120\083\070\109\067\069\076\113\054\105\061\061&quot;;&quot;\110\066\054\109&quot;,&quot;\106\087\052\057\107\050\061\061&quot;;&quot;\053\067\088\049\068\081\068\083&quot;;&quot;\080\102\088\056\067\079\104\105&quot;,&quot;\078\081\119\122\071\113\118\117\099\049\061\061&quot;;&quot;\074\057\116\113\097\089\112\069\051\109\066\109\074\109\116\116\070\069\049\061&quot;;&quot;\080\083\070\114&quot;,&quot;\056\074\122\098\049\105\061\061&quot;;&quot;\083\077\066\111&quot;;&quot;\048\101\082\086\085\054\109\066\086\079\054\083\074\068\061\061&quot;;&quot;\067\065\104\107\077\049\061\061&quot;;&quot;\079\049\101\047\101\121\119\104\057\084\084\121\068\080\089\102\047\102\111\066\057\069\108\043\088\099\110\073&quot;,&quot;\107\055\098\098\074\049\061\061&quot;;&quot;\110\103\097\069&quot;;&quot;\088\048\072\072\097\050\061\061&quot;,&quot;\120\087\103\110\048\049\061\061&quot;;&quot;\115\098\049\106\109\049\061\061&quot;,&quot;\099\083\097\057&quot;;&quot;\102\083\052\109\067\075\116\109\054\089\086\079&quot;;&quot;\074\055\110\103\077\106\118\047&quot;,&quot;\074\065\116\114\104\083\052\112&quot;;&quot;\057\073\079\119&quot;;&quot;\103\073\056\120&quot;;&quot;\067\083\116\048\080\083\102\061&quot;,&quot;\067\083\052\109\067\069\076\088\080\065\074\061&quot;;&quot;\121\082\101\090\101\050\061\061&quot;;&quot;\050\090\050\097\118\057\070\080\110\050\061\061&quot;,&quot;\056\083\110\118\112\111\090\061&quot;;&quot;\090\053\048\048\105\105\061\061&quot;,&quot;\077\047\110\100\089\106\076\105\104\084\108\050\102\069\088\085\110\068\061\061&quot;,&quot;\070\122\120\116\051\075\107\061&quot;,&quot;\106\043\066\110\043\054\085\103\054\120\115\085\047\066\076\078\072\047\113\107\116\053\109\090\073\052\104\056\099\049\115\118&quot;,&quot;\074\075\098\069\074\079\101\087\102\075\074\087\051\055\067\113\074\049\061\061&quot;;&quot;\074\055\070\047\080\089\070\047\107\106\120\098\107\065\073\099&quot;,&quot;\051\109\080\089\066\113\053\057\068\116\118\072\117\106\077\073\084\057\056\081\086\077\050\068\050\047\100\052\056\105\080\052\089\049\082\106\120\055\077\099\108\120\088\083\101\084\055\078\104\084\101\114\073\102\049\122\088\108\121\079\122\119\069\075\073\098\076\098\049\054\120\097\069\067\048\097\074\090\114\083\070\081\101\114\051\055\086\105\085\089\047\099\079\118\052\077\043\111\102\081\076\052\084\072\099\053\056\047\098\048\098\122\107\086\080\048\089\052\101\102\112\087\105\115\043\109\069\097\050\100\097\085\083\119\111\110\105\068\069\116\115\066\056\043\115\103\121\066\120\069\098\121\043\050\087\122\083\076\120\070\110\068\061\061&quot;;&quot;\047\110\115\052\067\068\061\061&quot;;&quot;\107\057\070\088\080\083\120\119\104\065\070\099\104\083\076\098\107\055\112\119\067\055\099\114\104\083\052\084&quot;,&quot;\067\089\086\050\107\089\110\100&quot;;&quot;\073\079\109\056\073\105\061\061&quot;;&quot;\120\101\112\053\085\083\104\118\067\089\098\103\102\065\075\047&quot;;&quot;\122\054\113\104&quot;;&quot;\079\087\069\111&quot;,&quot;\073\121\053\073\082\110\080\120&quot;;&quot;\104\065\073\113\080\084\066\061&quot;,&quot;\067\083\052\114\067\089\087\048\104\106\066\061&quot;,&quot;\067\122\098\081\051\106\098\051\070\102\108\086\054\075\052\109\110\065\101\061&quot;;&quot;\053\098\087\119\066\106\083\080\109\083\054\078\113\105\061\061&quot;,&quot;\067\089\098\107\120\070\076\099\105\109\120\051\102\083\088\069&quot;,&quot;\097\109\115\043\112\052\047\116\078\112\121\109\085\105\061\061&quot;;&quot;\089\065\110\043\056\099\053\117&quot;;&quot;\056\048\066\054&quot;;&quot;\106\087\052\112\104\106\120\098\067\083\116\048\080\083\102\061&quot;,&quot;\085\069\088\057\104\089\086\076\107\097\107\109\107\101\104\089&quot;;&quot;\105\055\052\114\080\065\070\079\067\068\061\061&quot;,&quot;\067\055\116\103\080\049\061\061&quot;;&quot;\080\089\116\047\077\068\061\061&quot;;&quot;\051\055\104\118\102\116\098\047\089\065\110\100\105\089\102\087\104\087\049\061&quot;,&quot;\054\110\072\111\109\050\061\061&quot;;&quot;\080\122\066\061&quot;,&quot;\085\118\109\097\108\105\061\061&quot;;&quot;\080\087\108\084\107\087\116\084\070\109\118\105\110\069\070\048\067\068\061\061&quot;;&quot;\056\048\049\099\104\117\108\088\056\049\061\061&quot;;&quot;\067\101\101\049\108\088\050\061&quot;;&quot;\067\083\099\079\077\050\061\061&quot;;&quot;\120\055\070\047\102\055\070\103\067\065\099\079\104\105\061\061&quot;;&quot;\107\057\099\047\104\105\061\061&quot;,&quot;\105\055\073\113\080\065\102\061&quot;;&quot;\067\083\116\109\077\050\061\061&quot;,&quot;\106\087\052\053\104\089\078\061&quot;,&quot;\051\121\079\056\078\085\101\071\067\067\070\070\050\076\072\098\087\050\061\061&quot;;&quot;\070\083\116\112\074\083\070\103\066\075\120\099\067\083\070\079\067\083\070\101\066\105\061\061&quot;;&quot;\111\080\083\068\122\049\061\061&quot;;&quot;&quot;;&quot;\120\083\052\079\077\087\067\088\104\083\067\099\067\116\118\053\067\089\067\088\080\101\067\087\077\102\099\114\104\065\090\061&quot;;&quot;\107\055\052\114\107\055\116\047&quot;,&quot;\122\114\075\085\112\077\112\048\107\049\054\088\075\050\061\061&quot;;&quot;\104\055\116\112\104\105\061\061&quot;,&quot;\088\068\122\067\071\068\061\061&quot;,&quot;\105\102\116\107\104\055\112\100\097\083\088\112\107\109\118\102\054\049\061\061&quot;,&quot;\098\065\086\066\082\106\111\097\102\097\102\103\088\105\061\061&quot;,&quot;\077\106\118\098\077\106\076\109&quot;,&quot;\054\050\090\112\082\072\053\068\056\108\089\101\051\050\061\061&quot;,&quot;\104\070\099\053\102\089\070\116\067\079\070\110\074\102\088\098&quot;;&quot;\074\083\110\098\080\083\050\061&quot;,&quot;\085\099\110\043\097\101\070\114\107\055\052\101\104\105\061\061&quot;;&quot;\080\122\075\061&quot;,&quot;\104\084\110\087\107\049\061\061&quot;;&quot;\085\085\057\109\110\069\077\110\108\049\075\070\081\109\090\098\056\115\066\108\122\068\061\061&quot;;&quot;\070\084\070\117\074\084\110\107\120\089\070\047\074\087\118\107\074\068\061\061&quot;,&quot;\107\121\089\118\055\070\110\048\100\079\056\077\102\077\047\061&quot;,&quot;\055\076\121\068\086\119\074\047\111\047\099\057\121\056\114\083\099\116\065\065\070\068\061\061&quot;,&quot;\108\054\080\079\102\121\050\061&quot;,&quot;\115\099\071\068\068\048\049\098\102\048\087\047\073\066\107\061&quot;;&quot;\119\078\048\049\083\070\119\068\079\070\118\072\043\102\047\099\109\068\061\061&quot;,&quot;\066\120\107\102\121\048\108\099\081\052\101\119\067\105\061\061&quot;,&quot;\076\090\051\043&quot;;&quot;\106\087\052\088\080\065\120\099\054\068\061\061&quot;;&quot;\074\084\120\103\077\089\086\057&quot;;&quot;\074\065\070\112\080\084\104\099&quot;,&quot;\104\055\087\098\067\083\110\108&quot;;&quot;\085\106\088\118\077\070\118\057\077\065\086\083\102\106\076\053\102\057\074\061&quot;,&quot;\104\106\076\103\080\084\066\061&quot;;&quot;\111\108\076\055&quot;;&quot;\118\113\084\113\083\049\084\076\055\082\107\101\054\080\043\043\100\102\071\099\066\108\050\061&quot;,&quot;\065\055\043\085\069\112\101\087&quot;;&quot;\097\065\088\057\120\101\088\070\070\122\099\113\120\075\073\047\056\089\090\061&quot;,&quot;\066\067\081\100\071\114\076\054\112\049\061\061&quot;;&quot;\051\122\116\108\110\069\088\108\070\102\108\050\080\075\116\065&quot;,&quot;\067\089\087\089\067\055\110\084\074\070\066\086\074\079\107\047\110\057\068\061&quot;,&quot;\105\109\120\057\110\083\076\055\097\057\118\066\089\065\110\057&quot;,&quot;\054\108\121\072\079\050\061\061&quot;,&quot;\070\109\102\109\104\065\110\077\105\047\098\121\051\055\098\076&quot;;&quot;\056\070\098\070\057\077\057\065\090\103\077\078\074\049\061\061&quot;,&quot;\120\055\070\047\105\055\098\088\080\083\120\103\104\089\078\061&quot;;&quot;\120\067\099\068\084\068\061\061&quot;;&quot;\083\085\068\068\104\100\119\109\082\068\061\061&quot;;&quot;\084\106\055\070\082\090\078\078\050\119\056\107\104\105\061\061&quot;,&quot;\097\075\070\069\070\065\086\076\097\075\099\122\107\101\070\066\107\050\061\061&quot;;&quot;\105\084\076\099\107\106\120\099\120\083\052\079\077\087\067\088\104\083\067\099\067\116\118\053\067\089\067\088\080\101\067\087\077\105\061\061&quot;;&quot;\056\049\061\061&quot;,&quot;\120\089\086\087\080\105\061\061&quot;;&quot;\088\108\072\121\076\107\067\108\080\121\083\114\097\103\047\084\112\074\122\102\119\052\115\098\110\050\061\061&quot;}local function D(D)return E[D-(-893279-(-958640))]end for D,B in ipairs({{357265-357264,424746-424623},{240637+-240636,741067+-740960};{-524835-(-524943),961129-961006}})do while B[836702+-836701]&lt;B[79875-79873]do E[B[-608151-(-608152)]],E[B[883141+-883139]],B[646891-646890],B[-118888-(-118890)]=E[B[606779-606777]],E[B[559568+-559567]],B[-775540+775541]+(-220580+220581),B[-549246-(-549248)]-(-857828-(-857829))end end do local D=math.floor local B=E local H=string.char local f={x=713782+-713765;T=181871+-181816,w=-929347-(-929378);C=-523958+523987;E=-75890-(-75897);v=-352433+352434;D=94041+-94041;g=961090-961040;e=348992-348956,a=-57305-(-57324),M=-492236+492262;y=-555617+555675,[&quot;\050&quot;]=-441716+441764,h=623197+-623172;n=199989+-199976;P=1005830-1005803,t=-559313-(-559318),J=57515+-57487,Q=889195+-889153,F=-981897-(-981918),l=-411683-(-411723);u=-101068-(-101070),f=-434008-(-434028);z=-342726+342729,m=-551699-(-551750);c=-699679+699716,[&quot;\053&quot;]=438812-438768;[&quot;\049&quot;]=5983-5951;I=1001617-1001568,N=-266687+266743;o=411286+-411275,R=-795189+795252,Z=-413058-(-413118),[&quot;\047&quot;]=-832168-(-832220),[&quot;\052&quot;]=-679170-(-679231),[&quot;\056&quot;]=516347-516333;X=-1036132-(-1036173);[&quot;\054&quot;]=565537-565507,V=-1013169+1013226,L=676408+-676399;i=-479074+479090,W=389914+-389861,p=634128-634083;k=571603-571579,j=-803661+803684,U=547459-547441;[&quot;\055&quot;]=-309469-(-309523);B=-328507-(-328515),H=-257265-(-257324),d=494111+-494068;[&quot;\051&quot;]=-555353-(-555365);b=268769-268736,A=805352+-805314,Y=401042-401020,[&quot;\043&quot;]=-720596-(-720611),G=732874-732864;[&quot;\048&quot;]=224040+-224006,[&quot;\057&quot;]=-781017+781056,r=-349336-(-349382),O=-26868-(-26903);s=287966-287904;S=-268188-(-268194);K=-906013+906017,q=-286295+286342}local P=string.len local T=string.sub local N=table.insert local Z=table.concat local i=type for E=314893-314892,#B,-414988-(-414989)do local b=B[E]if i(b)==&quot;\115\116\114\105\110\103&quot;then local i=P(b)local s={}local l=-560350-(-560351)local h=784035-784035 local L=11477-11477 while l&lt;=i do local E=T(b,l,l)local B=f[E]if B then h=h+B*(-745651-(-745715))^((365330+-365327)-L)L=L+(-500252+500253)if L==35571+-35567 then L=-684588-(-684588)local E=D(h/(-925672+991208))local B=D((h%(-263867-(-329403)))/(-462404-(-462660)))local f=h%(-243323-(-243579))N(s,H(E,B,f))h=142365+-142365 end elseif E==&quot;\061&quot;then N(s,H(D(h/(-714584-(-780120)))))if l&gt;=i or T(b,l+(-894320+894321),l+(-632829+632830))~=&quot;\061&quot;then N(s,H(D((h%(634406-568870))/(-957906+958162))))end break end l=l+(196514-196513)end B[E]=Z(s)end end end return(function(E,H,f,P,T,N,Z,A,h,s,e,S,K,b,j,i,B,l,o,L,w)i,b,B,w,h,o,s,A,S,L,l,e,j,K={},{},function(B,f,P,T)local M,a,J,c,W,p,l,h,O,e,m,u,z,L,Y,Z,x,n,Q,d,r,y,G,X,t,U,v,k,V,C,b,R,q,I while B do if B&lt;9521375-(-143205)then if B&lt;5232955-209568 then if B&lt;1707026-(-768372)then if B&lt;297203+1256797 then if B&lt;-374375+1447202 then if B&lt;-217394+1047777 then if B&lt;162415-(-346874)then z=n B=-414874+16326297 a=z x[z]=a z=nil else p=not Y d=d+G Z=d&lt;=t Z=p and Z p=d&gt;=t p=Y and p Z=p or Z p=12591272-1029005 B=Z and p Z=2252292-396258 B=B or Z end else J=-48912+48912 l=h c=456482-456227 B=i[P[-4829+4830]]V=B(J,c)B=-19297+7959571 b[l]=V l=nil end else if B&lt;2346092-829754 then if B&lt;673261+772427 then V=D(-297561-(-362963))J=D(-609662+675032)W=Z Z=E[V]V=D(491243-425876)B=Z[V]V=s()i[V]=B Z=E[J]J=D(613215-547794)B=Z[J]I=B k=D(-422754-(-488124))J=B C=E[k]c=C B=C and 5154793-(-97871)or 17042422-972311 else h=-755648-(-755687)l=i[P[-537763+537766]]b=l*h l=265723-265466 Z=b%l i[P[-665688-(-665691)]]=Z B=10065665-474264 end else V=D(711447+-646005)l=i[P[-782036-(-782037)]]J=25559436350903-(-661703)L=i[P[-32236-(-32238)]]e=i[P[526263+-526260]]W=e(V,J)h=L[W]V=32287133019064-602366 Z=l[h]h=i[P[-407115+407117]]L=i[P[44734-44731]]W=D(-884805+950246)e=L(W,V)l=h[e]W=-12952+26398604944028 e=D(859787-794402)B=Z[l]l=i[P[-199718+199720]]h=i[P[143060+-143057]]V=-25479+4740953435174 L=h(e,W)W=D(-380905-(-446368))Z=l[L]h=i[P[199102+-199100]]L=i[P[612891+-612888]]e=L(W,V)l=h[e]h=K(-195787+5750457,{P[516174-516170];P[361494+-361489],P[-915065-(-915067)];P[-463642-(-463645)];b})B[Z]=l Z=D(-273304-(-338734))B=E[Z]L={B(h)}l=L[418605-418603]Z=L[455774+-455773]h=Z B=h and 3803568-(-678632)or 11271462-(-1029363)end end else if B&lt;542217+1606720 then if B&lt;-847260+2767493 then if B&lt;1901544-99752 then l=i[P[-607541-(-607544)]]c=-704830-(-704832)h=258322+-258290 C=199460-199447 b=l%h L=i[P[-862072-(-862076)]]V=i[P[753427+-753425]]z=i[P[-292894+292897]]x=z-b z=459890-459858 k=x/z I=C-k J=c^I W=V/J e=L(W)L=4294577457-(-389839)h=e%L e=-411485+411487 C=-793024-(-793280)J=311232-311231 L=e^b l=h/L L=i[P[820057+-820053]]V=l%J J=4293997913-(-969383)W=V*J e=L(W)V=605543-540007 L=i[P[818861+-818857]]B=-673659+4182274 W=L(l)h=e+W b=nil e=27976+37560 L=h%e c=-624767+625023 W=h-L e=W/V V=982776+-982520 W=L%V J=L-W V=J/c c=-550734-(-550990)l=nil J=e%c L=nil I=e-J c=I/C h=nil e=nil I={W,V,J,c}W=nil i[P[-995904+995905]]=I J=nil c=nil V=nil else t=i[l]d=t B=t and 113168+11588511 or 9384823-286760 end else J=756290+20751803685757 b=f[-433778+433779]z=22982800281428-(-1022586)e=D(811+64640)l=i[P[399218+-399217]]W=-780473+14365889282778 h=i[P[-242292-(-242294)]]V=D(-849788+915166)L=h(e,W)Z=l[L]B=b[Z]L=i[P[-130006-(-130007)]]e=i[P[335069+-335067]]W=e(V,J)e=D(791552+-726142)V=626389+25669450096604 h=L[W]L=E[e]e=L()l=h..e h=i[P[-724495-(-724498)]]Z=D(-605368-(-670833))Z=B[Z]Z=Z(B,l,h)l=s()W=D(917023-851614)i[l]=Z B=i[l]h=i[P[-1039016+1039017]]L=i[P[-679720+679722]]J=584039+35013769483849 e=L(W,V)Z=h[e]V=D(441653-376185)L=i[P[1012233-1012232]]e=i[P[-916738+916740]]W=e(V,J)h=L[W]B[Z]=h B=i[l]h=i[P[57726-57725]]W=D(489934-424472)V=34567440980252-318012 x=D(933008-867619)L=i[P[145987+-145985]]c=D(876126+-810760)e=L(W,V)Z=h[e]h=true B[Z]=h Z=D(198673+-133246)B=E[Z]J=E[c]I=i[P[905653+-905652]]C=i[P[1025047+-1025045]]k=C(x,z)c=I[k]V=J[c]k=D(285106+-219632)c=i[P[-109955-(-109956)]]I=i[P[553335+-553333]]x=28030041711737-651645 C=I(k,x)J=c[C]W=V[J]J=i[P[-682773-(-682774)]]c=i[P[922550-922548]]C=D(746614+-681178)k=-898927+9812828113224 I=c(C,k)V=J[I]e=W[V]V=D(-852047-(-917507))V=e[V]W={V(e)}e={B(H(W))}Z=e[-795427+795428]L=e[50451+-50448]h=e[320501+-320499]e=Z B=493747+8503962 end else if B&lt;2425823-121340 then J=D(-247345-(-312775))L=D(731350-665979)Z=D(898742+-833351)B=E[Z]c=K(14936804-(-1043469),{})b=i[P[872133+-872129]]h=E[L]V=E[J]J={V(c)}W={H(J)}V=-729538+729540 e=W[V]L=h(e)h=D(-943151-(-1008559))l=b(L,h)b={l()}Z=B(H(b))b=Z l=i[P[-879713+879718]]B=l and 9780100-(-969941)or 2833760-(-147663)Z=l else u=291631-291629 v=y[u]u=i[Q]R=v==u X=R B=9015057-294801 end end end else if B&lt;-277195+4316339 then if B&lt;2509213-(-898079)then if B&lt;-170849+3318406 then if B&lt;-324975+3231863 then B=true B=3023484-(-502893)else i[P[590877+-590872]]=Z B=521251+15988701 b=nil end else C=-372618+34761695194821 e=i[l]V=i[P[700864-700863]]J=i[P[-64434-(-64436)]]Z={}I=D(5948+59420)b=nil c=J(I,C)W=V[c]I=232166+15247714341078 L=e[W]c=D(-889850-(-955245))W=i[P[-391725-(-391726)]]V=i[P[698330+-698328]]J=V(c,I)c=9353006337046-(-476397)e=W[J]J=D(759636+-694186)h=L[e]e=i[P[-595990-(-595991)]]W=i[P[-516663+516665]]V=W(J,c)L=e[V]B=h[L]L=S(-1028931+13089520,{l,P[770709+-770708];P[879187+-879185],P[48490+-48486],P[339174+-339169]})h=D(-134220+199620)h=B[h]h=h(B,L)l=o(l)B=E[D(720938+-655552)]end else if B&lt;160395+3674157 then if B&lt;3912440-388560 then B=E[D(1061695-996260)]h=D(-725681-(-791051))l=E[h]h=D(-1005567+1071012)b=l[h]h=i[P[880192+-880191]]l={b(h)}Z={H(l)}else B=A(-164852+10695594,{L})t={B()}Z={H(t)}B=E[D(1038934+-973531)]end else B=Z and 510242+1734287 or 468931+16041021 end end else if B&lt;5843120-966944 then if B&lt;4365066-(-449132)then if B&lt;-278260+4378448 then G=D(-469295+534666)B=E[G]p=D(-378172-(-443604))Y=E[p]G=B(Y)B=D(466471+-401066)E[B]=G B=-592597+6443329 else L=i[P[-936304+936305]]W=i[P[-126765-(-126767)]]c=D(181541+-116172)V=i[P[-755059+755062]]I=-210976+16883683759830 J=V(c,I)e=W[J]Z=L[e]e=i[P[760759-760757]]J=D(717945-652466)c=4570352263850-891482 W=i[P[701527+-701524]]V=W(J,c)L=e[V]B=Z[L]L=i[P[-400082+400084]]c=678234+4682112069418 e=i[P[646336+-646333]]J=17237634001269-690715 V=D(-461778-(-527140))W=e(V,J)J=D(354935-289497)Z=L[W]e=i[P[-895643+895645]]W=i[P[-847116+847119]]V=W(J,c)c=32600392021347-(-411113)L=e[V]B[Z]=L L=D(116278-50864)I=-812950+27050461354186 J=D(60402-(-5016))Z=E[L]e=i[P[913160-913158]]W=i[P[192945-192942]]V=W(J,c)L=e[V]B=Z[L]c=D(425444+-360057)L=-172373-(-172374)Z=B(L)L=i[P[93241+-93240]]W=i[P[911535+-911533]]V=i[P[-113204-(-113207)]]J=V(c,I)e=W[J]Z=L[e]J=D(454660-389220)e=i[P[659642+-659640]]c=-748085+10620220734854 W=i[P[785880+-785877]]V=W(J,c)L=e[V]B=Z[L]L=i[P[849138-849136]]e=i[P[923156+-923153]]J=-282904+32177715448735 V=D(53664-(-11742))W=e(V,J)J=D(579773-514354)Z=L[W]c=7113802669435-(-339829)e=i[P[751250-751248]]W=i[P[265765+-265762]]V=W(J,c)L=e[V]B[Z]=L B=i[P[-205998+205999]]V=D(716701-651328)L=i[P[-349937-(-349939)]]e=i[P[-168689-(-168692)]]J=-714679+19973227514891 W=e(V,J)Z=L[W]L=false B[Z]=L Z=D(-594169-(-659638))B=i[P[-32349-(-32350)]]Z=B[Z]Z=Z(B)B=E[D(-533481-(-598910))]Z={}end else W=nil L=nil V=nil B=986276+4924451 end else if B&lt;604039+4370963 then a={}y=D(447582-382184)z={}h=nil n=s()R=nil i[n]=z z=s()p=s()M=D(748313+-682870)Y=w(321204+5341779,{n;c;I,e})e=o(e)i[z]=Y V=nil Y={}C=nil i[p]=Y U=D(-541943-(-607323))Y=E[U]Q=i[p]O={[M]=Q;[y]=R}x=nil h={}U=Y(a,O)J=nil i[l]=U Y=j(4169858-(-974235),{p,n,k;c;I;z})c=o(c)x=647468+3108334101627 z=o(z)k=o(k)W=nil C=D(428107+-362670)i[L]=Y W=D(498098-432675)n=o(n)p=o(p)k=195570+28385864234928 e=E[W]I=o(I)J=i[l]B=E[D(-845738+911213)]c=i[L]W=D(752362+-686951)I=c(C,k)k=D(293671+-228232)Z={h}V=J[I]W=e[W]W=W(e,V)V=D(-796837-(-862260))e=E[V]c=i[l]I=i[L]p=-590277+8820221825488 z=-241108+29979186275420 V=D(-456089-(-521500))C=I(k,x)J=c[C]c=D(484945+-419525)x=D(610568+-545119)V=e[V]V=V(e,J)e=s()Y=D(960374-894940)i[e]=V J=E[c]I=i[l]C=i[L]k=C(x,z)c=I[k]V=J[c]k=D(-397800+463267)C=E[k]x=i[l]z=i[L]n=z(Y,p)k=x[n]Y=-223018+25891370243650 I=C[k]k=i[l]x=i[L]n=D(-236017+301391)z=x(n,Y)C=k[z]k=62777-62177 x=-467221+467621 z=343021-342641 n=-862087-(-862387)c=I[C]I=true C=false J=V(c,I,C,k,x,z,n)V=s()i[V]=J c=i[l]x=-652119+8646779536145 I=i[L]k=D(326861-261480)C=I(k,x)J=c[C]c=s()i[c]=J J=j(2171214-58998,{l,L,V;e,c})I=D(530223+-464840)h[I]=J else Y=#x B=6560215-(-1013639)n=-565949-(-565950)z=h(n,Y)n=W(x,z)Y=i[k]a=-45834+45835 U=n-a z=nil p=V(U)Y[n]=p n=nil end end end end else if B&lt;6587461-(-876575)then if B&lt;-371068+6150071 then if B&lt;4952034-(-450360)then if B&lt;875507+4320155 then if B&lt;4223559-(-821524)then I=I+C J=I&lt;=c x=not k J=x and J x=I&gt;=c x=k and x J=x or J x=39375+14095667 B=J and x J=223616+4642227 B=B or J else b=f[459547-459546]l=f[-150420+150422]B=i[P[264483+-264482]]h=B B=h[l]B=B and-382673+7563809 or-241489+14246514 end else x=D(929466+-864096)k=E[x]B=16222822-152711 x=D(620154-554770)C=k[x]c=C end else if B&lt;6216893-537389 then if B&lt;-569798+6150428 then B=i[P[517492+-517491]]b=i[P[-353538-(-353540)]]l=i[P[153396+-153395]]c=D(250148-184695)W=i[P[239271-239268]]V=i[P[-650579+650583]]I=17854563800845-(-952685)J=V(c,I)e=W[J]W=i[P[773597+-773592]]Z=D(-494343+559708)L={[e]=W}e=D(-849257+914688)Z=B[Z]e=l[e]h={e(l,L)}Z=Z(B,b,H(h))Z={}B=E[D(-398229+463654)]else b=i[P[-1043288-(-1043289)]]Z=#b b=77871-77871 B=Z==b B=B and-60923+11443750 or 4494816-986201 end else W=L B=D(-901113+966526)B=V[B]k=D(-945475-(-1010947))B=B(V)x=5938107083069-(-139664)V=nil c=i[P[373356-373355]]I=i[P[582900-582898]]J=B C=I(k,x)B=c[C]W=nil c=i[l]J[B]=c J=nil B=-901593+9899302 end end else if B&lt;6138430-(-894852)then if B&lt;68616+6773586 then if B&lt;6107662-206213 then B=7810603-(-14367)else Z={l}B=E[D(566737+-501330)]end else V=D(-447891+513361)l=i[P[643799+-643798]]L=i[P[-551988+551990]]J=8935867270971-(-2310)e=i[P[767342-767339]]W=e(V,J)h=L[W]Z=l[h]J=22957011819181-(-282389)W=D(-593496-(-658924))h=i[P[295033+-295031]]L=i[P[528627+-528624]]V=-3308+8216676735966 e=L(W,V)V=23537722399882-(-1035846)l=h[e]e=D(606593-541136)B=Z[l]l=i[P[100631+-100629]]W=21287158568486-61294 h=i[P[664833-664830]]L=h(e,W)Z=l[L]h=i[P[-533794-(-533796)]]W=D(601014+-535533)L=i[P[-680028+680031]]e=L(W,V)l=h[e]V=154142+3287427476444 B[Z]=l l=D(15108-(-50306))W=D(-651399+716774)Z=E[l]h=i[P[1044227-1044225]]L=i[P[-28087-(-28090)]]e=L(W,V)l=h[e]B=Z[l]l=-786219+786220 Z=B(l)l=i[P[-2166+2167]]V=D(-615460-(-680938))L=i[P[444690+-444688]]e=i[P[-6656-(-6659)]]W=e(V,J)h=L[W]Z=l[h]h=i[P[939337-939335]]V=16739214996723-(-780671)L=i[P[165219-165216]]W=D(542183-476790)e=L(W,V)l=h[e]e=D(714710-649347)B=Z[l]l=i[P[291582-291580]]W=579021+6395761817045 h=i[P[194366+-194363]]V=17751825756860-(-273806)L=h(e,W)Z=l[L]h=i[P[-848357-(-848359)]]W=D(-1040638+1106042)L=i[P[-380661+380664]]e=L(W,V)l=h[e]B[Z]=l B=E[D(-783954+849353)]Z={}end else if B&lt;932360+6281749 then B=6111528-200801 else l=D(66008+-631)Z=959998+6211004 h=7340200-919146 b=l^h B=Z-b b=B Z=D(1095257-1029801)B=Z/b Z={B}B=E[D(-527472-(-592919))]end end end else if B&lt;9183659-436904 then if B&lt;-766170+8773608 then if B&lt;-735285+8567066 then if B&lt;155237+7583217 then Y=29008-29008 n=#x z=n==Y B=z and 5903713-961160 or 4732926-(-257363)else B=true B=B and-885168+15826336 or-350948+15336738 end else V=not W h=h+e l=h&lt;=L l=V and l V=h&gt;=L V=W and V l=V or l V=107889+736326 B=l and V l=11198216-(-1021098)B=B or l end else if B&lt;-826456+9171288 then W=nil n=o(n)J=nil e=o(e)L=o(L)C=nil h=o(h)l=o(l)B=15564819-(-346604)n=891557+-891301 I=o(I)V=o(V)z=nil h=nil L=s()k=nil x=nil c=o(c)l=nil W=D(-159047-(-224449))V=D(-394085-(-459487))i[L]=l l=s()C={}J=D(-843995+909365)i[l]=h e=E[W]c=D(-9518+74962)W=D(483764+-418374)h=e[W]e=s()i[e]=h Y=n W=E[V]V=D(803137+-737770)h=W[V]z=323298+-323297 V=E[J]J=D(-934114-(-999559))W=V[J]n=888253+-888252 J=E[c]x={}c=D(-458065-(-523547))V=J[c]k=s()c=s()p=n J=1017734-1017734 I=s()i[c]=J J=357022-357020 i[I]=J J={}n=-920974+920974 i[k]=C C=-371710-(-371710)U=p&lt;n n=z-p else B=m Z=X B=-453357+13895379 end end else if B&lt;9872078-328246 then if B&lt;283319+8812745 then if B&lt;9877473-833205 then L,V=e(h,L)B=L and-770757+6458823 or-196108+3579870 else Y=D(888371-822966)B=E[Y]Y=D(857822-792390)E[Y]=B B=4876992-(-973740)end else i[l]=d B=i[l]B=B and-44531+9986810 or 2827922-(-36815)end else if B&lt;-714952+10337958 then h=-406095-(-406096)l=i[P[937643+-937640]]b=l~=h B=b and-1028232+2700799 or-617040+2105695 else l=nil L=i[P[77951+-77950]]c=D(-20851-(-86239))I=904587+33647670144937 W=i[P[822602-822600]]V=i[P[787134+-787131]]J=V(c,I)b=o(b)e=W[J]J=D(159290+-93868)Z=L[e]c=-592349+8257985550562 e=i[P[986892-986890]]W=i[P[-879546+879549]]V=W(J,c)h=nil L=e[V]J=26685328860285-979955 B=Z[L]V=D(237307+-171830)L=i[P[158609-158607]]e=i[P[-958283+958286]]W=e(V,J)Z=L[W]J=D(-480577-(-546038))c=6679975216650-(-460316)e=i[P[705711+-705709]]W=i[P[546058-546055]]V=W(J,c)L=e[V]B[Z]=L Z={}B=E[D(-778741+844117)]end end end end end else if B&lt;14095938-376172 then if B&lt;752317+10951777 then if B&lt;216762+10855016 then if B&lt;-685904+11108642 then if B&lt;997172+8856337 then if B&lt;10576523-812381 then B={}l=-352854-(-352855)b=B h=i[P[-384716-(-384725)]]L=h B=8236947-296673 h=-347522+347523 e=h h=-77600-(-77600)W=e&lt;h h=l-e else Z=D(-316779-(-382227))B=E[Z]b=D(-855564-(-920981))Z=B(b)Z={}B=E[D(700232+-634838)]end else B=480270+7604010 end else if B&lt;10925229-192366 then if B&lt;625257+9998573 then B=15647877-(-727228)else b=D(879830+-814398)Z=D(-496773+562178)B=E[Z]Z=E[b]b=D(-960554-(-1025986))E[b]=B b=D(-258072+323477)B=98344+16276761 E[b]=Z b=i[P[833726+-833725]]l=b()end else B=67107+2914316 h=i[P[336212-336206]]l=h==b Z=l end end else if B&lt;12419092-847963 then if B&lt;12093571-572853 then if B&lt;11228381-19546 then a=o(a)B=84213+723119 p=o(p)O=o(O)U=o(U)Q=o(Q)M=o(M)y=nil else l=i[P[-204576+204578]]h=-473693+473886 b=l*h l=30255122739922-(-263221)Z=b+l b=-290987+35184372379819 B=Z%b i[P[741286-741284]]=B B=944209+544446 b=i[P[-455131+455134]]l=96454-96453 Z=b~=l end else p=s()a=169054+-168954 U=D(729720-664318)Q=248516-248515 i[p]=d y=-217173-(-217175)Z=E[U]O=-833052-(-833307)U=D(-120033+185400)B=Z[U]U=-1015329-(-1015330)Z=B(U,a)U=s()i[U]=Z a=-138301-(-138301)B=i[V]Z=B(a,O)a=s()O=511246+-511245 i[a]=Z B=i[V]q=-702098-(-702098)M=i[U]Z=B(O,M)O=s()i[O]=Z Z=i[V]M=Z(Q,y)y=D(-144793+210259)Z=-921875-(-921876)B=M==Z r=359744+-349744 R=D(122907+-57536)M=s()i[M]=B m=E[R]Z=D(210725+-145317)v=i[V]u={v(q,r)}R=m(H(u))m=D(26048-(-39418))B=D(-653307-(-718740))X=R..m Q=y..X B=z[B]B=B(z,Z,Q)y=D(-59156+124586)Q=s()X=A(15483275-21239,{V,p;I;h,l;n,M,Q;U,O,a;c})i[Q]=B Z=E[y]y={Z(X)}B={H(y)}y=B B=i[M]B=B and-119616+15188962 or 15910942-572336 end else if B&lt;65824+11628748 then B=true B=B and 14894942-653461 or 4021660-495283 else t=C==k d=t B=9924303-826240 end end end else if B&lt;844602+11401407 then if B&lt;11909369-(-123550)then if B&lt;974489+10966287 then if B&lt;-789484+12591730 then b=D(-632084-(-697532))h=896735-896735 B=E[b]l=i[P[913611-913603]]b=B(l,h)B=354173+9393098 else B=E[D(955365-889901)]Z={}end else B=571544-(-640778)W=i[e]Z=W end else if B&lt;12443690-320579 then c=22670593226347-347439 h=i[P[36008-36007]]e=i[P[-548226+548228]]W=i[P[-433932+433935]]J=D(734340+-668943)V=W(J,c)L=e[V]l=h[L]J=857641+26525156645398 L=i[P[-707319-(-707321)]]V=D(-159378+224837)e=i[P[-54280+54283]]W=e(V,J)V=405730+21691883828883 h=L[W]b=l[h]W=D(461003+-395523)h=i[P[-903683-(-903685)]]L=i[P[378292-378289]]e=L(W,V)l=h[e]Z=b[l]e=D(-766912-(-832396))l=i[P[863013-863011]]h=i[P[558335+-558332]]W=-61900+29308624807707 L=h(e,W)b=l[L]B=Z~=b B=B and 15927745-(-123212)or 306800+14900456 else B=i[P[49345+-49335]]l=i[P[767365+-767354]]b[B]=l B=i[P[992753+-992741]]l={B(b)}B=E[D(27508+37947)]Z={H(l)}end end else if B&lt;13161295-(-168312)then if B&lt;710181+12353485 then if B&lt;11531881-(-946103)then c=D(-768630-(-834113))L=i[P[383255+-383254]]W=i[P[-767734-(-767736)]]V=i[P[33648-33645]]I=-823263+19663936762787 J=V(c,I)e=W[J]Z=L[e]J=D(-711006-(-776432))e=i[P[721554+-721552]]W=i[P[880549+-880546]]c=631412+33638959880892 V=W(J,c)J=6480739309971-363978 c=13788188783795-203679 L=e[V]V=D(497493+-432121)B=Z[L]L=i[P[794958-794956]]e=i[P[-563290+563293]]W=e(V,J)Z=L[W]e=i[P[-912765-(-912767)]]W=i[P[771450-771447]]J=D(875134-809738)V=W(J,c)L=e[V]B[Z]=L Z=D(314827+-249426)B=E[Z]L=D(221014+-155600)Z=B(l)c=427946+17749460179103 Z=E[L]e=i[P[-186497-(-186499)]]W=i[P[-548850+548853]]J=D(706520+-641096)V=W(J,c)L=e[V]B=Z[L]L=-246953-(-246954)Z=B(L)B=10437153-793765 else c=s()I=-317232+317235 i[c]=Z B=i[V]z=A(7340088-82996,{})C=-554191-(-554256)Z=B(I,C)B=-706535+706535 I=s()x=D(-1048113+1113543)C=B i[I]=Z Z=E[x]B=460650+-460650 k=B x={Z(z)}Z=-621770+621772 B={H(x)}x=B G=D(200816+-135445)B=x[Z]z=B Z=D(319988+-254597)B=E[Z]n=i[h]t=E[G]G=t(z)t=D(293744-228336)d=n(G,t)n={d()}Z=B(H(n))n=s()i[n]=Z d=i[I]Z=-909699+909700 t=d d=18996+-18995 G=d d=726727-726727 Y=G&lt;d d=Z-G B=-360637+1167969 end else q=-994885+994886 i[l]=X u=i[O]v=u+q R=y[v]m=C+R R=372340-372084 B=m%R v=i[a]R=k+v v=-1041112+1041368 C=B m=R%v k=m B=11800641-646602 end else if B&lt;13546891-(-29629)then i[l]=Z B=624611+10529428 else I=D(-805949-(-871333))B=-510000+13501474 c=E[I]Z=c end end end end else if B&lt;747329+14867910 then if B&lt;14858023-(-98853)then if B&lt;-156678+14393953 then if B&lt;14712932-701883 then if B&lt;909051+12820964 then Z={}B=true i[P[588829+-588828]]=B B=E[D(-39266+104645)]else e=246577+35184371842255 B={}i[P[1012214+-1012212]]=B Z=i[P[49674-49671]]V=-476238-(-476493)L=Z Z=l%e i[P[659284+-659280]]=Z W=l%V J=D(289818+-224374)V=-86694-(-86696)e=W+V i[P[-619237+619242]]=e V=E[J]J=D(-865560-(-931036))W=V[J]V=W(b)W=D(-687162-(-752581))h[l]=W c=V W=-748509-(-748521)J=907558+-907557 I=389232+-389231 C=I I=903873-903873 k=C&lt;I I=J-C B=1018992+4025942 end else J=I G=D(326496+-261052)t=E[G]G=D(211380+-145968)d=t[G]B=4920947-(-123987)t=d(b,J)d=i[P[137605-137599]]G=d()n=t+G z=n+W n=-280592+280848 x=z%n J=nil W=x n=h[l]G=-255063+255064 t=W+G d=L[t]z=n..d h[l]=z end else if B&lt;14217145-(-422180)then if B&lt;13582434-(-868448)then B=8095515-270545 else Y=676956-676956 n=#x z=n==Y B=-689653+5679942 end else B=i[V]G=78344+-78343 Y=-172036-(-172042)t=B(G,Y)B=D(-406606-(-472011))E[B]=t Y=D(661749+-596344)G=E[Y]Y=69401+-69399 B=G&gt;Y B=B and 4827925-766711 or 9578278-510056 end end else if B&lt;15969166-638376 then if B&lt;14693160-(-380386)then if B&lt;-887380+15919780 then Z={}B=E[D(1034834-969442)]else X=i[l]B=X and 17389682-983564 or 14077032-635010 Z=X end else l=i[P[-979202-(-979203)]]V=D(872474+-807110)L=i[P[-330262-(-330264)]]J=286593+19294871913367 e=i[P[317547-317544]]W=e(V,J)V=27166931920714-(-182816)h=L[W]W=D(-598088-(-663504))b=l[h]h=i[P[-329065-(-329067)]]L=i[P[570651+-570648]]e=L(W,V)l=h[e]Z=b[l]l=i[P[186556+-186554]]W=-141308+29654168608236 e=D(-699190+764572)h=i[P[-548620+548623]]L=h(e,W)b=l[L]B=Z[b]b=s()i[b]=B l=i[b]Z=#l l=966451+-966446 B=Z&lt;l B=B and 7516349-525788 or 1089005-(-428997)end else if B&lt;16067817-686747 then m=i[l]X=m B=m and 15338914-(-789094)or-922698+14044681 else L=1041272-1041271 l=i[P[-406653-(-406654)]]e=84530-84528 h=l(L,e)l=-570489+570490 b=h==l B=b and 4678471-654259 or-516209+16133424 Z=b end end end else if B&lt;16794812-719357 then if B&lt;15449372-(-555938)then if B&lt;15014146-(-908328)then if B&lt;656273+15113730 then l=i[P[-958881-(-958883)]]B=4293017-268805 h=i[P[-616548+616551]]b=l==h Z=b else a=not U n=n+p z=n&lt;=Y z=a and z a=n&gt;=Y a=U and a z=a or z a=-476816-(-606832)B=z and a z=14915404-453480 B=B or z end else Z=458722+4478065 h=9049572-(-343336)l=D(-516712+582185)b=l^h B=Z-b b=B Z=D(-174756-(-240210))B=Z/b Z={B}B=E[D(-974478+1039936)]end else if B&lt;-565607+16631306 then B=E[D(-223968-(-289420))]Z={}else Z=c B=I B=c and-809907+13801381 or-619874+14334110 end end else if B&lt;-162121+16563165 then if B&lt;-266871+16414417 then if B&lt;913584+15213276 then l=s()b=f h=D(15063-(-50381))B=true i[l]=B Z=E[h]L=s()h=D(999473-934027)B=Z[h]h=s()i[h]=B B=K(106439+9681443,{})e=s()i[L]=B V=D(-200707-(-266137))B=false i[e]=B W=E[V]J=A(14548547-820608,{e})V=W(J)Z=V B=V and-740327+12696387 or 898879+313443 else R=225213-225212 m=y[R]B=13977359-855376 X=m end else B=true B=B and 11601902-904859 or-382419+12312614 end else if B&lt;17249043-780124 then u=-769694-(-769695)v=y[u]m=B u=false R=v==u X=R B=R and-533959+2905900 or 8268837-(-451419)else B=i[P[108791-108784]]B=B and 12486624-747110 or 229048+9518223 end end end end end end end B=#T return H(Z)end,function(E,D)local H=h(D)local f=function(f,P,T,N,Z)return B(E,{f,P,T,N,Z},D,H)end return f end,function(E)for D=191417-191416,#E,163658+-163657 do b[E[D]]=b[E[D]]+(309022+-309021)end if f then local B=f(true)local H=T(B)H[D(233215+-167772)],H[D(-889609-(-955080))],H[D(-919638-(-985053))]=E,L,function()return-2645350-(-36260)end return B else return P({},{[D(-802008+867479)]=L,[D(-296499-(-361942))]=E;[D(-1046359+1111774)]=function()return 76322+-2685412 end})end end,function(E)b[E]=b[E]-(-970072-(-970073))if-617207-(-617207)==b[E]then b[E],i[E]=nil,nil end end,function()l=l+(-796514-(-796515))b[l]=-447632+447633 return l end,function(E,D)local H=h(D)local f=function(f)return B(E,{f},D,H)end return f end,function(E,D)local H=h(D)local f=function(f,P)return B(E,{f,P},D,H)end return f end,function(E)local D,B=170029-170028,E[-657713-(-657714)]while B do b[B],D=b[B]-(-197033-(-197034)),D+(128927+-128926)if 452384-452384==b[B]then b[B],i[B]=nil,nil end B=E[D]end end,272136+-272136,function(E,D)local H=h(D)local f=function(...)return B(E,{...},D,H)end return f end,function(E,D)local H=h(D)local f=function(f,P,T)return B(E,{f,P,T},D,H)end return f end,function(E,D)local H=h(D)local f=function()return B(E,{},D,H)end return f end return(e(16561700-434901,{}))(H(Z))end)(getfenv and getfenv()or _ENV,unpack or table[D(-869830+935214)],newproxy,setmetatable,getmetatable,select,{...})end)(...)</ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="ModuleScript" referent="RBXBC49B7EBA80E4B4F885E73FB2FF9F6D5">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">GamepassHandler</string>
				<string name="ScriptGuid">{E1F6305C-C394-4FD0-AFED-A729B3124EFA}</string>
				<ProtectedString name="Source">--[[ v1.0.0 https://wearedevs.net/obfuscator ]] return(function(...)local e={&quot;\098\106\051\067\105\116\077\108\076\112\057\086\057\073\077\080\102\071\105\061&quot;;&quot;\113\074\081\090\101\105\102\066\073\068\076\101\069\072\065\102\056\116\084\043\085\074\071\067&quot;;&quot;\115\083\100\117\057\052\107\103\052\115\061\061&quot;,&quot;\110\122\047\122\086\069\057\049\119\084\081\069\088\122\097\083\101\105\061\061&quot;;&quot;\097\069\086\077\083\120\105\068\073\100\043\052\081\069\104\085\097\118\061\061&quot;,&quot;&quot;,&quot;\114\104\110\111\097\057\081\109\081\083\087\120\081\122\066\119\097\115\061\061&quot;;&quot;\087\069\087\066\116\120\121\103&quot;;&quot;\110\084\118\111\101\084\054\066\050\082\048\111\055\080\104\076\083\115\061\061&quot;,&quot;\073\084\081\108\101\104\099\085\088\080\081\120\106\100\066\108\055\107\057\116\101\076\057\116\114\100\052\069&quot;;&quot;\086\122\073\076\084\122\097\087\088\100\073\109\106\084\081\116\084\122\099\085\088\065\073\068\101\122\087\053\101\118\061\061&quot;,&quot;\097\100\052\109\106\100\081\121&quot;,&quot;\097\107\099\116\097\120\047\053\088\065\101\061&quot;;&quot;\073\107\057\089\101\107\073\068\054\077\090\108\097\107\073\069\097\107\073\104\054\115\061\061&quot;;&quot;\107\080\057\049\101\076\049\071\121\083\117\079\086\112\076\061&quot;;&quot;\110\122\108\075\083\107\086\082\081\085\104\061&quot;;&quot;\084\066\099\049\086\100\111\061&quot;,&quot;\109\088\068\111\072\111\080\071\113\067\051\112\088\122\057\051\113\054\104\089\073\054\056\077\118\106\122\084\115\116\099\071\051\122\109\121\066\119\108\043\117\083\057\108&quot;;&quot;\121\076\121\077&quot;;&quot;\110\115\072\078\119\080\083\104\074\057\051\122\043\071\104\080\121\057\111\057\113\109\061\061&quot;,&quot;\101\085\090\068\102\100\052\080&quot;;&quot;\079\082\069\077\098\079\043\061&quot;,&quot;\106\051\102\121\112\054\079\076\118\100\113\118\077\113\104\108&quot;,&quot;\106\122\099\075\106\122\057\076&quot;;&quot;\110\065\087\069\102\065\108\073\101\080\090\057\110\082\054\052&quot;;&quot;\057\052\071\078\109\104\068\089\110\056\097\071\100\077\070\078\090\075\087\079\067\079\047\097\087\087\053\043\115\109\061\061&quot;;&quot;\049\070\083\105\118\118\061\061&quot;;&quot;\088\082\054\061&quot;,&quot;\073\122\111\116\055\122\055\113\100\069\081\109\110\082\097\076&quot;;&quot;\086\107\081\070\090\065\087\072\119\073\048\115\102\055\081\076&quot;,&quot;\097\107\057\072\088\107\055\061&quot;,&quot;\105\107\115\103\107\076\098\115\117\079\051\100\085\081\052\119\119\116\115\073\097\105\061\061&quot;,&quot;\050\108\070\052\073\066\090\054\081\077\099\077\097\100\113\074\050\109\061\061&quot;;&quot;\078\071\121\122\110\113\111\116\114\105\061\061&quot;,&quot;\090\053\100\078\111\088\109\061&quot;;&quot;\110\112\103\056\078\066\048\115\043\118\061\061&quot;,&quot;\106\081\073\065\089\102\097\050\050\056\109\067\111\057\043\061&quot;;&quot;\099\112\049\048\065\073\100\119\114\118\061\061&quot;;&quot;\086\107\057\073\078\067\076\080&quot;,&quot;\101\122\081\068\102\084\048\076&quot;;&quot;\086\120\086\110\083\085\073\074\081\069\081\055\119\077\097\087&quot;;&quot;\106\080\108\076\086\115\061\061&quot;,&quot;\086\122\057\089\086\115\061\061&quot;;&quot;\101\085\090\087\101\080\090\098\101\120\047\074\084\122\099\085\088\065\073\068\101\122\087\053\101\057\099\076\106\084\081\121&quot;,&quot;\097\107\057\116\102\109\061\061&quot;;&quot;\101\122\073\076\088\100\073\076\106\084\090\087\106\065\113\108&quot;;&quot;\110\120\086\104\090\065\089\052\088\069\081\116\073\069\101\122\081\076\054\061&quot;,&quot;\088\100\057\076\102\118\061\061&quot;,&quot;\086\084\047\068\088\085\054\061&quot;;&quot;\106\122\087\087\101\105\061\061&quot;;&quot;\115\082\078\080\106\105\047\050\069\107\079\117\055\056\080\089\047\089\087\117\108\085\066\087\068\110\043\056\068\109\061\061&quot;,&quot;\119\069\116\053\112\090\109\087\073\043\054\061&quot;,&quot;\119\072\105\108\086\051\070\053\119\105\061\061&quot;,&quot;\081\069\090\082\115\084\073\072\101\108\053\109\110\104\077\061&quot;,&quot;\086\085\081\066\106\105\061\061&quot;;&quot;\101\065\057\075\086\107\099\089&quot;;&quot;\079\072\118\117&quot;,&quot;\051\075\066\072\098\078\113\066\089\081\074\119\109\104\120\072&quot;,&quot;\083\119\054\081\078\100\101\050\077\117\053\052\080\114\105\066\078\121\119\081\121\081\108\079\055\112\068\077\109\100\043\061&quot;,&quot;\073\085\048\109\101\077\108\077\100\108\097\065\102\122\089\100&quot;;&quot;\084\048\109\068\074\070\057\051&quot;;&quot;\052\068\106\081\082\109\061\061&quot;;&quot;\119\105\061\061&quot;,&quot;\115\119\101\055\103\104\120\089\107\090\108\050\071\099\051\109\108\079\119\080\057\068\067\047\054\065\098\052\112\118\061\061&quot;;&quot;\106\122\099\068\088\085\073\076\102\100\052\108&quot;,&quot;\088\057\106\122\055\120\090\110\114\107\053\106\090\076\099\075\115\066\110\061&quot;,&quot;\088\082\077\061&quot;;&quot;\097\084\048\104\106\084\090\108\084\085\073\053\084\122\086\074\101\108\099\109\101\065\099\098\097\107\108\108\101\105\061\061&quot;,&quot;\078\047\101\080\043\110\101\118\054\105\122\115\099\069\118\070\122\115\061\061&quot;,&quot;\065\097\065\113\108\048\057\053\053\065\056\073\115\109\061\061&quot;,&quot;\050\104\073\076\119\107\090\102\100\073\081\086\097\073\108\115\055\080\106\061&quot;;&quot;\106\104\073\115\081\055\057\103\110\073\048\055\081\100\087\103\097\073\110\061&quot;;&quot;\097\107\099\075\097\100\066\072\086\084\054\061&quot;,&quot;\101\065\073\089\088\085\086\108&quot;;&quot;\050\104\111\068\048\078\114\049\066\109\061\061&quot;,&quot;\100\104\066\065\090\055\052\120\081\066\047\103\100\084\108\120\115\105\061\061&quot;,&quot;\077\074\090\109\077\103\112\110&quot;;&quot;\084\066\099\080\106\109\061\061&quot;,&quot;\084\066\099\089\086\084\090\087\097\107\057\072\088\107\055\061&quot;;&quot;\102\065\081\077\106\055\066\051\086\084\086\089\102\077\052\051&quot;,&quot;\086\122\066\087\097\107\081\070&quot;,&quot;\104\073\112\086\075\083\080\049\118\104\122\112\089\117\104\061&quot;;&quot;\088\107\073\075&quot;,&quot;\083\083\057\081\097\085\087\057\081\104\081\069\086\084\048\068&quot;,&quot;\088\076\066\056\102\080\115\066\114\107\109\116\055\107\057\053\081\073\101\061&quot;,&quot;\120\103\097\056\100\107\079\056&quot;,&quot;\101\107\081\087\088\107\109\061&quot;,&quot;\097\084\048\104\106\084\090\108\084\085\073\053\084\122\086\074\101\108\099\065\101\065\073\108\084\085\090\053\086\084\054\061&quot;;&quot;\051\069\077\110\082\105\061\061&quot;;&quot;\089\083\114\106\109\074\049\061&quot;;&quot;\057\104\090\072\099\087\119\050\051\104\067\065\055\087\107\117\120\051\090\098\048\067\080\076\099\107\121\081\080\105\061\061&quot;;&quot;\067\115\108\055\069\069\072\073&quot;,&quot;\086\065\113\074\088\085\054\061&quot;;&quot;\098\083\114\054\104\084\050\073\098\115\050\108\074\082\049\061&quot;,&quot;\090\122\073\076\055\122\073\068\097\065\108\069\086\115\061\061&quot;;&quot;\090\122\073\076\073\084\081\108\101\104\108\104&quot;;&quot;\072\073\112\086\054\117\050\106\107\090\116\079\050\101\106\117\084\102\108\070\111\102\083\103&quot;,&quot;\113\115\097\113\084\080\081\109\078\056\043\061&quot;;&quot;\084\066\099\053\088\065\090\108\114\118\061\061&quot;}for H,V in ipairs({{-38466-(-38467);852700-852601};{880517-880516,-66545-(-66603)};{455800-455741,359342-359243}})do while V[-490231-(-490232)]&lt;V[-53968-(-53970)]do e[V[-339416-(-339417)]],e[V[30337-30335]],V[937841-937840],V[557701-557699]=e[V[-933004+933006]],e[V[1013217-1013216]],V[494174-494173]+(-722387+722388),V[313914-313912]-(542032+-542031)end end local function H(H)return e[H-(-841961+901786)]end do local H=string.len local V=e local s=string.char local m=math.floor local A={[&quot;\043&quot;]=-189670+189730,f=908492+-908466;C=356122+-356111;R=784512-784509;v=-905418+905418;F=658769+-658729,W=826268-826235;M=-401467-(-401471),w=-744574+744588,G=-927910-(-927973),I=641703-641682;e=1015207+-1015179;c=-266084-(-266145);g=694049+-694034;b=-964986+965017,m=489087+-489039,a=300917-300888;z=-335454-(-335508);O=-838925+838984,Z=16954-16937,n=-867264-(-867276),J=-12638+12685,[&quot;\050&quot;]=927192-927174,D=101383+-101333,k=391955-391949,A=-19263-(-19301);t=919753+-919702,V=172200+-172175;[&quot;\053&quot;]=-547718-(-547759);N=-242695+242705;j=-857135-(-857159),[&quot;\051&quot;]=817746-817744;K=-435504+435550,B=308960+-308907;i=894947+-894915;s=1010220+-1010204,d=-215553-(-215575),o=-678220-(-678276),u=-627821+627863,U=387302+-387247,S=222964+-222945,p=-131495-(-131557),T=-579089-(-579112),l=-326416-(-326453),x=427609+-427602,P=227040+-227001,Y=-383095+383140;h=-200293+200329;[&quot;\052&quot;]=814571+-814514,y=188053+-188010;[&quot;\048&quot;]=869740+-869739,X=418832-418805;r=-992880-(-992910);q=901207+-901158,[&quot;\056&quot;]=-1004434-(-1004492);[&quot;\055&quot;]=744918-744898,H=176767+-176733;E=-152122-(-152157);[&quot;\057&quot;]=-939032-(-939037);Q=856136+-856123;[&quot;\049&quot;]=979171+-979127,L=-557342+557394,[&quot;\054&quot;]=737416+-737408;[&quot;\047&quot;]=-820333+820342}local p=table.concat local J=string.sub local P=type local W=table.insert for e=-416250-(-416251),#V,-947240-(-947241)do local x=V[e]if P(x)==&quot;\115\116\114\105\110\103&quot;then local P=H(x)local t={}local N=-1047841-(-1047842)local C=-325029+325029 local L=-345209-(-345209)while N&lt;=P do local e=J(x,N,N)local H=A[e]if H then C=C+H*(-432743-(-432807))^((-157157+157160)-L)L=L+(518092+-518091)if L==586488-586484 then L=471955-471955 local e=m(C/(-494246+559782))local H=m((C%(-69699+135235))/(114421-114165))local V=C%(120507-120251)W(t,s(e,H,V))C=-549099-(-549099)end elseif e==&quot;\061&quot;then W(t,s(m(C/(-605902-(-671438)))))if N&gt;=P or J(x,N+(567003-567002),N+(-94206-(-94207)))~=&quot;\061&quot;then W(t,s(m((C%(354986+-289450))/(-511611+511867))))end break end N=N+(822556+-822555)end V[e]=p(t)end end end return(function(e,s,m,A,p,J,P,t,Q,x,C,W,N,M,S,V,f,L,a,l,I)S,M,Q,a,l,V,I,C,W,f,L,N,t,x=function(e,H)local s=C(H)local m=function(...)return V(e,{...},H,s)end return m end,function(e)x[e]=x[e]-(-261561+261562)if x[e]==896144+-896144 then x[e],W[e]=nil,nil end end,function(e,H)local s=C(H)local m=function(m,A,p)return V(e,{m,A,p},H,s)end return m end,function(e,H)local s=C(H)local m=function(m,A,p,J)return V(e,{m,A;p;J},H,s)end return m end,function(e,H)local s=C(H)local m=function(m,A,p,J,P)return V(e,{m,A;p,J,P},H,s)end return m end,function(V,m,A,p)local N,U,o,E,j,L,P,i,v,k,B,S,d,D,Y,x,z,Z,X,O,G,T,c,F,y,h,b,K,R,g,C,q,r,w while V do if V&lt;413790+7094130 then if V&lt;4251169-1024219 then if V&lt;1127084-(-991680)then if V&lt;1928086-500383 then if V&lt;-154432+870444 then if V&lt;255148+409696 then if V&lt;-380730+1006007 then V=-110812+8816412 else P={N}V=e[H(596939-537049)]end else L=nil V=815488-186490 E=nil U=nil end else if V&lt;-955698+2194898 then if V&lt;357551+569111 then L=t()N=t()x=m U=H(404109+-344238)V=true S=t()C=H(907609+-847705)W[N]=V P=e[C]C=H(272108+-212243)V=P[C]C=t()W[C]=V j=I(16736286-652623,{S})V=f(-658785+9846007,{})W[L]=V V=false W[S]=V E=e[U]U=E(j)V=U and 6817874-(-144227)or 5099590-(-198643)P=U else U=not E C=C+S N=C&lt;=L N=U and N U=C&gt;=L U=E and U N=U or N U=204196+13373112 V=N and U N=14774779-387848 V=V or N end else x=m[-195141+195142]S=W[A[899510+-899509]]j=H(-690496-(-750387))d=25545767051150-(-85737)E=W[A[-1041016+1041018]]U=E(j,d)L=S[U]j=H(3700+56141)C=x[L]S=W[A[735599+-735598]]d=32906943957041-(-258986)E=W[A[715392-715390]]U=E(j,d)j=8525305517341-165276 x=nil L=S[U]N=C[L]L=W[A[652539+-652538]]U=H(-813822+873737)S=W[A[-946511+946513]]E=S(U,j)C=L[E]P=N[C]U=7107559147889-(-852860)C=W[A[-132743-(-132744)]]L=W[A[-495348+495350]]E=H(925983-866101)S=L(E,U)N=C[S]E=33714674709928-620629 V=P[N]N=W[A[177162+-177161]]S=H(-387103+447020)C=W[A[977480-977478]]L=C(S,E)P=N[L]N=true V[P]=N V=e[H(895940+-836048)]P={}end end else if V&lt;1162710-(-868910)then if V&lt;1538810-(-474689)then if V&lt;2279172-380866 then V=2511446-(-797121)else K=730920-730918 q=X[K]V=783134+1351666 K=W[T]c=q==K r=c end else o=H(426214-366310)w=e[o]j=F o=H(308130+-248304)R=w[o]w=R(x,j)R=W[A[978162-978156]]o=R()k=w+o g=k+E V=-267890+11086146 k=128135-127879 o=80977-80976 b=g%k E=b k=C[N]j=nil w=E+o R=L[w]g=k..R C[N]=g end else if V&lt;440627+1638559 then V=true V=V and 6463656-(-293440)or 9499124-591357 else o=H(-621676+681572)V=e[o]i=H(-635976-(-695827))h=e[i]o=V(h)V=H(476158+-416247)e[V]=o V=952936+570403 end end end else if V&lt;-952588+3961959 then if V&lt;260393+2090982 then if V&lt;2512835-284276 then if V&lt;3027150-860462 then P=r V=z V=804395+11187485 else k=M(k)Y=nil U=M(U)j=nil N=M(N)E=nil j=H(-79685-(-139599))d=M(d)E=H(-1029548+1089380)b=nil S=M(S)g=nil F=M(F)C=M(C)N=nil C=nil L=M(L)d=H(-520380+580284)v=nil U=H(-660187-(-720019))L=t()b={}W[L]=N F=t()N=t()W[N]=C S=e[E]E=H(-77336+137213)C=S[E]S=t()W[S]=C E=e[U]U=H(-552084+611924)C=E[U]U=e[j]j=H(-481014+540872)E=U[j]j=e[d]v=t()g=500372-500371 d=H(852325+-792491)U=j[d]d=t()Y={}j=-800192+800192 W[d]=j k=-428697+428953 j=-860268-(-860270)V=472505+13002562 W[F]=j W[v]=Y j={}Y=-375073+375073 h=k k=-764912+764913 i=k k=302040-302040 y=i&lt;k k=g-i end else K=-1030009+1030010 z=V q=X[K]K=false c=q==K V=c and 2227358-218211 or 2856797-721997 r=c end else if V&lt;2822944-44237 then if V&lt;-453732+2882796 then V=3862448-553881 else d=t()o=H(1094127-1034231)W[d]=P F=-734261-(-734264)Y=1015902-1015837 g=f(197861+10629301,{})V=W[U]P=V(F,Y)b=H(-1000812+1060683)F=t()V=818586+-818586 W[F]=P Y=V V=772256-772256 P=e[b]b={P(g)}P=624742+-624740 v=V V={s(b)}b=V V=b[P]g=V P=H(605012-545155)V=e[P]k=W[C]w=e[o]o=w(g)w=H(-417418-(-477255))R=k(o,w)k={R()}P=V(s(k))k=t()W[k]=P P=-347316-(-347317)R=W[F]w=R V=-206003+7748566 R=-286199-(-286200)o=R R=-597754+597754 h=o&lt;R R=P-o end else S=W[A[480453-480452]]j=H(95647+-35725)x=m[471967+-471966]E=W[A[-814678-(-814680)]]d=603223+29566641389937 U=E(j,d)L=S[U]j=H(-211294-(-271196))C=x[L]d=3479417310131-(-1030817)S=W[A[-235843+235844]]E=W[A[418288+-418286]]U=E(j,d)L=S[U]N=C[L]L=W[A[91650-91649]]S=W[A[347440-347438]]j=13552193389968-(-873238)U=H(-711371+771274)E=S(U,j)C=L[E]P=N[C]U=-1030016+7932648474093 E=H(-202131-(-261967))C=W[A[-1033059+1033060]]L=W[A[687639-687637]]S=L(E,U)N=C[S]S=H(-996256+1056115)V=P[N]E=-337533+31022123507434 N=W[A[-476764+476765]]C=W[A[-291582+291584]]L=C(S,E)P=N[L]E=H(845898+-786028)N=false V[P]=N U=17451503491195-538813 C=W[A[198299+-198298]]L=W[A[-505940-(-505942)]]S=L(E,U)N=C[S]b=23290664430731-(-114130)U=24914993665462-223333 P=x[N]C=W[A[695971-695970]]E=H(456572-396694)L=W[A[264771+-264769]]S=L(E,U)N=C[S]j=H(1016656-956733)E=29377633335388-(-867604)V=P[N]N=W[A[689769+-689768]]C=W[A[448715+-448713]]S=H(578063-518142)L=C(S,E)E=22074616518593-126874 P=N[L]N=false V[P]=N N=W[A[6754-6753]]S=H(-610108-(-669953))C=W[A[958320-958318]]L=C(S,E)S=H(349417+-289512)E=3988139322742-(-989643)v=H(349778-289917)P=N[L]V=x[P]N=W[A[245017-245016]]C=W[A[571294+-571292]]L=C(S,E)P=N[L]U=e[j]d=W[A[198531-198530]]C=V F=W[A[-966450+966452]]Y=F(v,b)v=7126213810761-(-766637)j=d[Y]Y=H(40984-(-18922))E=U[j]j=W[A[-1033668-(-1033669)]]d=W[A[-669394+669396]]F=d(Y,v)U=j[F]Y=21968570149920-525355 S=E[U]U=W[A[-1017226+1017227]]F=H(-229489+289363)j=W[A[720891-720889]]d=j(F,Y)E=U[d]L=S[E]V=L and-56794+12597539 or-653538+11086446 N=L end end else if V&lt;2472459-(-656539)then if V&lt;4075882-957951 then if V&lt;4056322-982685 then V=true V=V and 258028+2156413 or 1029246+2199264 else V=P and 8120816-(-673058)or 15771762-1002369 end else V=29523+7414292 h=#b k=844019-844018 g=C(k,h)k=E(b,g)Z=-80059-(-80060)g=nil h=W[v]y=k-Z i=U(y)h[k]=i k=nil end else if V&lt;-762921+3950587 then W[N]=r G=808368+-808367 K=W[B]q=K+G c=X[q]z=Y+c c=79953+-79697 V=z%c q=W[Z]c=v+q q=887445+-887189 Y=V z=c%q v=z V=6238799-(-574954)else V=W[A[1005621+-1005620]]N=m[-652443+652445]x=m[-826887+826888]C=V V=C[N]V=V and-360099+5335369 or-837416+6169369 end end end end else if V&lt;-197378+5903153 then if V&lt;5182220-190542 then if V&lt;-985677+4733578 then if V&lt;1031031+2428217 then if V&lt;-747803+4030604 then V=a(9425020-1047892,{L})w={V()}V=e[H(-495195+555108)]P={s(w)}else V=true V=V and-699109+9436585 or 567115+4356913 end else N=W[A[284236+-284234]]C=-978147-(-978276)x=N*C N=15345379684028-119507 P=x+N x=35184372744957-656125 V=P%x N=-985903+985904 W[A[-97155+97157]]=V x=W[A[601478+-601475]]V=-1008267+15051294 P=x~=N end else if V&lt;4597725-(-364047)then if V&lt;-69497+4708055 then C=W[A[-994107-(-994113)]]V=389547+15414310 N=C==x P=N else V=e[H(279228-219372)]P={}end else V=330078-(-298920)end end else if V&lt;-365916+5743552 then if V&lt;-191253+5504931 then if V&lt;4838478-(-462065)then U=H(665422-605590)j=H(1039996+-980082)E=P P=e[U]U=H(580282-520442)V=P[U]v=H(-493339-(-553253))U=t()W[U]=V P=e[j]j=H(33470+26437)V=P[j]F=V j=V Y=e[v]d=Y V=Y and-805423+16357735 or 12330381-(-1046661)else w=W[N]V=w and 7169856-(-266222)or 14314674-(-892462)R=w end else V={}U=862338+-862083 W[A[505722+-505720]]=V P=W[A[132697+-132694]]L=P S=-931171+35184373020003 P=N%S W[A[-974900+974904]]=P F=-664967+664968 V=410226+10408030 Y=F E=N%U U=-743929-(-743931)S=E+U j=H(-772683+832587)W[A[-1025604+1025609]]=S U=e[j]j=H(-108156-(-168023))E=U[j]U=E(x)E=H(-855399-(-915288))j=163659+-163658 C[N]=E E=-593791+593828 F=449223-449223 v=Y&lt;F d=U F=j-Y end else if V&lt;-740894+6314171 then V=713675+1498419 else V=true V=103259+3125251 end end end else if V&lt;38117+6909941 then if V&lt;7078409-968176 then if V&lt;6050334-156378 then if V&lt;83714+5772648 then E=33160693401189-(-259564)P=H(-142655-(-202482))V=e[P]N=W[A[644666+-644665]]d=-526802+19214280240325 S=H(258232-198347)C=W[A[-413793-(-413795)]]j=26844379321900-746840 L=C(S,E)x=N[L]P=H(833219-773340)P=V[P]P=P(V,x)N=W[A[-1039208+1039211]]L=W[A[-261219-(-261220)]]S=W[A[-93914+93916]]U=H(387100+-327214)E=S(U,j)C=L[E]x=N[C]C=W[A[-830657-(-830660)]]j=H(807268+-747348)S=W[A[-701805+701806]]E=W[A[-670438-(-670440)]]U=E(j,d)L=S[U]N=C[L]C=H(-426676+486569)C=P[C]V={C(P,x,N)}P={s(V)}V=e[H(-680428-(-740278))]else E=H(1008290+-948415)P=W[A[-167881-(-167882)]]U=-893590+33444338720619 C=W[A[-1036324+1036326]]L=W[A[-333918+333921]]S=L(E,U)N=C[S]V=P[N]N=W[x]P=V(N)V=7126961-976746 end else C=-926523+926555 Y=-134885-(-134898)d=720608-720606 N=W[A[6042+-6039]]x=N%C V=14404630-353166 L=W[A[902020+-902016]]U=W[A[-38343+38345]]g=W[A[581593-581590]]b=g-x g=470397+-470365 v=b/g F=Y-v j=d^F E=U/j S=L(E)L=4295674060-706764 C=S%L S=-475222-(-475224)L=S^x j=77939+-77938 N=C/L L=W[A[-397504-(-397508)]]U=N%j j=4294067824-(-899472)E=U*j S=L(E)L=W[A[1033655-1033651]]U=-103080-(-168616)E=L(N)C=S+E S=172927+-107391 L=C%S E=C-L S=E/U d=996504+-996248 U=-793262+793518 x=nil E=L%U j=L-E C=nil U=j/d d=589084-588828 j=S%d Y=-421546+421802 N=nil F=S-j d=F/Y F={E;U;j,d}U=nil E=nil S=nil L=nil j=nil W[A[-494709-(-494710)]]=F d=nil end else if V&lt;5965015-(-816726)then if V&lt;5726614-(-921690)then N=H(-1029231+1089080)P=e[N]U=40814+8614423244861 E=H(-56180-(-116053))C=W[A[946692-946690]]L=W[A[-800586-(-800589)]]S=L(E,U)N=C[S]V=P[N]N=a(-1010308+1605282,{A[-323402-(-323404)],A[-864682+864685];A[-201490-(-201491)];x})P=V(N)x=M(x)V=P()P={}V=e[H(-457881+517805)]else P=H(-706814-(-766725))V=e[P]x=H(-247082+306933)P=e[x]x=H(-827219+887070)e[x]=V x=H(591492-531581)V=2020863-(-29867)e[x]=P x=W[A[-17613-(-17614)]]N=x()end else B=M(B)T=M(T)i=M(i)O=M(O)V=7264021-(-278542)X=nil Z=M(Z)y=M(y)end end else if V&lt;7956298-542595 then if V&lt;612353+6551413 then if V&lt;6610893-(-382751)then E=W[S]V=5919039-620806 P=E else x=H(150725+-90892)V=e[x]C=155622-155622 N=W[A[17778-17770]]x=V(N,C)V=14523176-(-432312)end else x=t()W[x]=m[-1012183-(-1012184)]E=H(-953933-(-1013768))P=W[A[228780+-228779]]U=460490+29841474236286 C=W[A[676151+-676149]]L=W[A[-347551-(-347554)]]S=L(E,U)N=C[S]V=P[N]P=V()V=P and 5292869-(-563858)or-212623+13337863 end else if V&lt;8164123-725236 then w=Y==v R=w V=14420484-(-786652)else h=-139775-(-139775)k=#b g=k==h V=g and 11031584-(-1039500)or 2187823-(-939441)end end end end end else if V&lt;12073185-(-463108)then if V&lt;9832442-308069 then if V&lt;-267958+8997198 then if V&lt;7737538-(-544083)then if V&lt;8773162-557057 then if V&lt;7169978-(-386093)then R=R+o i=not h P=R&lt;=w P=i and P i=R&gt;=w i=h and i P=i or P i=-689255+8932341 V=P and i P=5311954-9754 V=V or P else N=W[A[-141642-(-141644)]]C=W[A[-214980-(-214983)]]x=N==C V=-437740+3514820 P=x end else c=H(-47273-(-107169))D=636078+-626078 i=t()W[i]=R y=H(-917208+977040)P=e[y]y=H(-753955-(-813795))Z=549260+-549160 V=P[y]y=914811+-914810 P=V(y,Z)y=t()Z=-584312+584312 W[y]=P B=660798+-660543 V=W[U]P=V(Z,B)G=-935346-(-935346)T=-272099-(-272100)B=-1027240+1027241 Z=t()W[Z]=P V=W[U]O=W[y]X=-160199-(-160201)P=V(B,O)B=t()W[B]=P P=W[U]O=P(T,X)P=986526-986525 V=O==P X=H(-698617+758464)P=H(994420-934583)O=t()W[O]=V V=H(-559026-(-618865))z=e[c]q=W[U]K={q(G,D)}c=z(s(K))z=H(-733937-(-793784))V=g[V]r=c..z T=X..r X=H(-965120+1024991)V=V(g,P,T)T=t()r=I(16165766-925220,{U;i,F;C,N;k;O,T;y,B,Z,d})W[T]=V P=e[X]X={P(r)}V={s(X)}X=V V=W[O]V=V and-212906+16366851 or-531648+14649470 end else if V&lt;403510+8082597 then if V&lt;8067135-(-314176)then V=130929+1919801 else C=-663626+663627 N=W[A[455333+-455330]]x=N~=C V=x and 5537836-(-473887)or-191214+14234241 end else x=H(-136167-(-195996))P=e[x]E=25739411498340-505491 S=H(374512-314602)N=W[A[-265303+265304]]C=W[A[-95362+95364]]L=C(S,E)x=N[L]V=P[x]x=64393+-64391 P=V(x)V=P and-382406+13433037 or 10261843-(-1024471)end end else if V&lt;-394708+9544988 then if V&lt;8139883-(-708819)then if V&lt;9132992-340269 then V=W[U]o=216878+-216877 h=731933+-731927 w=V(o,h)h=H(-296410+356321)V=H(-376474+436385)e[V]=w o=e[h]h=-782313+782315 V=o&gt;h V=V and 3057781-947802 or-317068+11341708 else j=H(-366575-(-426446))P=H(374957+-315100)V=e[P]x=W[A[400852-400848]]d=f(10228096-188915,{})L=H(38361-(-21535))C=e[L]U=e[j]j={U(d)}U=804708-804706 E={s(j)}S=E[U]L=C(S)C=H(-924208+984045)N=x(L,C)x={N()}P=V(s(x))N=W[A[690041-690036]]V=N and 467084+3674909 or-546846+16350703 x=P P=N end else P={}V=e[H(286619+-226731)]end else if V&lt;9815856-433898 then x=H(774550-714653)P=H(933346+-873513)V=e[P]P=V(x)P={}V=e[H(-698402-(-758289))]else V=W[A[-856363+856367]]S=802305+6590744055292 L=H(-549830+609711)x=W[A[-578229+578230]]N=W[A[-983072+983074]]C=N(L,S)P=x[C]x=true V[P]=x P=W[A[206257+-206254]]S=H(846239-786330)E=17399416601544-(-877534)N=W[A[843536-843535]]C=W[A[-155808-(-155810)]]L=C(S,E)x=N[L]V=P[x]x=W[A[-370060-(-370064)]]P=V(x)V=10463293-(-823021)end end end else if V&lt;11463064-198097 then if V&lt;839977+9986955 then if V&lt;727923+9934947 then if V&lt;10375432-84244 then C=691482+3689949 P=2451103-651351 N=H(774502-714634)x=N^C V=P-x x=V P=H(-351633+411464)V=P/x P={V}V=e[H(438268-378356)]else S=W[A[499708+-499707]]E=W[A[536148-536146]]V=13228613-687868 d=-739479+16472298940045 j=H(-946493-(-1006347))U=E(j,d)L=S[U]N=L end else F=F+Y j=F&lt;=d b=not v j=b and j b=F&gt;=d b=v and b j=b or j b=1340154-(-689649)V=j and b j=1230493-527294 V=V or j end else if V&lt;972728+10076582 then if V&lt;956765+10067870 then N=H(463604+-403705)C=4305258-(-211161)x=N^C P=-550760+15874644 V=P-x x=V P=H(-20615-(-80453))V=P/x P={V}V=e[H(-690517+750386)]else h=H(637635+-577724)V=e[h]h=H(-948554-(-1008405))e[h]=V V=133662+1389677 end else c=192113-192112 V=3759413-573959 z=X[c]r=z end end else if V&lt;12903020-909096 then if V&lt;10530814-(-959461)then if V&lt;33597+11317312 then P={}V=e[H(-666732-(-726648))]else F=H(-914541-(-974436))d=e[F]V=2190919-(-275391)P=d end else V=964464+5849289 W[N]=P end else if V&lt;182828+12292426 then k=t()X=H(769582+-709719)i=t()h=a(-820200+13605390,{k,d,F,S})c=nil g={}W[k]=g Y=nil b=nil g=t()y=H(-321253-(-381083))O=H(-416283-(-476166))W[g]=h U=nil h={}Z={}W[i]=h E=nil j=nil h=e[y]T=W[i]B={[O]=T;[X]=c}y=h(Z,B)W[N]=y h=l(4021780-822850,{i,k;v,d;F;g})F=M(F)v=M(v)S=M(S)W[L]=h F=H(237757-177859)i=M(i)C=nil g=M(g)C={}k=M(k)h=13957319882254-(-811861)Y=116921+11482599394346 d=M(d)S=t()W[S]=C C=W[S]U=W[N]j=W[L]d=j(F,Y)E=U[d]U=434761+1297799209 C[E]=U v=H(-1037506+1097407)C=W[S]U=W[N]Y=507574+7369880047281 b=3512934449524-703249 V=e[H(-235374-(-295234))]F=H(525387-465503)j=W[L]d=j(F,Y)E=U[d]k=H(-268319-(-328185))U=979729-978929 C[E]=U C=W[S]F=H(-870550+930392)Y=-1043407+6286439200574 U=W[N]j=W[L]d=j(F,Y)E=U[d]d=W[N]F=W[L]Y=F(v,b)j=d[Y]F=W[S]v=W[N]b=W[L]g=b(k,h)Y=v[g]d=F[Y]U=j..d g=-199153+6699938354720 C[E]=U F=H(783632-723713)C=W[S]Y=-752730+27479446023766 U=W[N]j=W[L]d=j(F,Y)b=H(-748601+808454)j=H(-287901+347728)E=U[d]U=e[j]F=W[N]Y=W[L]v=Y(b,g)j=H(308723-248844)d=F[v]j=U[j]j=j(U,d)U=H(661040-601160)U=j[U]U=U(j)C[E]=U U=H(452421-392527)C=l(5660304-(-194631),{N;L,S})E=W[S]E[U]=C C=l(1880052-555786,{N,L})U=H(199555+-139683)E=W[S]E[U]=C E=W[S]C=l(14110+2981694,{N;L})U=H(-675045+734897)E[U]=C U=H(228841-169013)E=W[S]C=Q(575394+6669848,{S;N;L})E[U]=C C=W[S]P={C}else g=k Z=g b[g]=Z g=nil V=288591+13186476 end end end end else if V&lt;219569+14253639 then if V&lt;13168968-(-408061)then if V&lt;-437286+13542166 then if V&lt;12213122-(-661670)then if V&lt;-655151+13395854 then V=C V[P]=N N=W[A[917965-917964]]E=810994+22471593330926 C=W[A[-852573-(-852575)]]S=H(-296245-(-356121))L=C(S,E)S=H(403032-343114)P=N[L]V=x[P]N=W[A[-679860+679861]]C=W[A[-67111+67113]]E=27157900191301-537823 L=C(S,E)P=N[L]C=W[A[991525+-991524]]E=H(-84582-(-144428))U=27954896844077-(-867756)L=W[A[-227987+227989]]S=L(E,U)N=C[S]x=nil V[P]..=N P={}V=e[H(748244-688389)]else x=W[A[622738+-622737]]P=#x x=57796-57796 V=P==x V=V and 3872123-412047 or 13209499-(-841965)end else P=W[A[395178+-395175]]E=-180631+2983397705476 S=H(-653248-(-713096))N=W[A[-614244-(-614245)]]C=W[A[564761-564759]]L=C(S,E)x=N[L]V=P[x]P=V()V=P and 8626488-(-772723)or 15087562-421951 end else if V&lt;14470098-1033275 then if V&lt;13063628-(-309178)then P=W[A[-293675+293676]]C=W[A[494443+-494441]]L=W[A[-708879+708882]]E=H(804357+-744514)U=-999853+31467832457962 S=L(E,U)N=C[S]V=P[N]N=W[x]P=V(N)V=367106+5783109 else P=d V=F V=d and 70515+2395795 or 12242127-870492 end else k=k+i g=k&lt;=h Z=not y g=Z and g Z=k&gt;=h Z=y and Z g=Z or g Z=12822974-317828 V=g and Z g=14553326-70806 V=V or g end end else if V&lt;13883277-(-195433)then if V&lt;14052926-1690 then if V&lt;13283301-(-693645)then j=114668+-114668 N=C d=-463423-(-463678)V=W[A[295244-295243]]U=V(j,d)V=254727+761689 x[N]=U N=nil else N=W[A[822364-822361]]C=727766+-727723 V=8009076-(-375028)x=N*C N=-1026827-(-1027084)P=x%N W[A[999708+-999705]]=P end else C=H(-895628+955542)N=e[C]C=H(399768-339910)x=N[C]C=W[A[520122-520121]]N={x(C)}V=e[H(242128-182284)]P={s(N)}end else if V&lt;14154904-(-126041)then z=W[N]V=z and 796755+10268388 or 3276213-90759 r=z else V=W[A[-160617-(-160627)]]N=W[A[-927338+927349]]x[V]=N V=W[A[-107404-(-107416)]]N={V(x)}V=e[H(70569-10705)]P={s(N)}end end end else if V&lt;14613671-(-617336)then if V&lt;-177606+14974092 then if V&lt;-434938+15141203 then if V&lt;15472174-854539 then k=#b h=641802+-641802 V=-143988+3271252 g=k==h else V=7662105-(-1043495)end else V=W[A[-492969-(-492976)]]V=V and 7188752-173422 or 412760+14542728 end else if V&lt;-657966+15729932 then C=W[A[877973+-877964]]V={}x=V L=C N=65884+-65883 C=-1023616+1023617 V=270074+746342 S=C C=-605597-(-605597)E=S&lt;C C=N-S else W[N]=R V=W[N]V=V and-398926+5844176 or-75028+5689378 end end else if V&lt;15681659-(-399570)then if V&lt;821746+14882945 then if V&lt;15574547-39613 then N=W[A[932256+-932255]]S=-486843-(-486845)L=-853037-(-853038)C=N(L,S)N=55722-55721 x=C==N V=x and 2292692-(-784388)or-538172+8655432 P=x else V=13488355-111313 b=H(701236+-641322)v=e[b]b=H(1032379-972484)Y=v[b]d=Y end else x=nil W[A[458383+-458378]]=P V=13833135-(-936258)end else if V&lt;16091227-(-60672)then V=true P={}W[A[-554701-(-554702)]]=V V=e[H(840124+-780216)]else r=W[N]V=r and 2007633-(-247951)or-409122+12401002 P=r end end end end end end end V=#p return s(P)end,function(e,H)local s=C(H)local m=function()return V(e,{},H,s)end return m end,function(e)for H=-305232+305233,#e,774777+-774776 do x[e[H]]=(-267812+267813)+x[e[H]]end if m then local V=m(true)local s=p(V)s[H(-687844+747727)],s[H(-139233-(-199095))],s[H(236010+-176110)]=e,L,function()return-508640-(-618377)end return V else return A({},{[H(-549711-(-609573))]=L;[H(-214979-(-274862))]=e,[H(984880-924980)]=function()return 914220-804483 end})end end,{},function(e,H)local s=C(H)local m=function(m)return V(e,{m},H,s)end return m end,function(e)local H,V=214017-214016,e[630054+-630053]while V do x[V],H=x[V]-(231540+-231539),H+(-12947+12948)if x[V]==321113-321113 then x[V],W[V]=nil,nil end V=e[H]end end,174046+-174046,function()N=(-382290+382291)+N x[N]=336416-336415 return N end,{}return(S(1316021-513582,{}))(s(P))end)(getfenv and getfenv()or _ENV,unpack or table[H(290411-230516)],newproxy,setmetatable,getmetatable,select,{...})end)(...)</ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
	</Item>
</roblox>