<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Folder" referent="RBXBA0AD6B6C516428E881D819203EBC797">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<string name="Name">Vibe Coder v0.4 obv</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
		<Item class="ModuleScript" referent="RBX54F5EA4068034E148350E424DE99248C">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">WidgetWindow</string>
				<string name="ScriptGuid">{D589A055-47AE-4846-8322-4F829EE5DD96}</string>
				<ProtectedString name="Source">--[[ v1.0.0 https://wearedevs.net/obfuscator ]] return(function(...)local Q={&quot;\083\081\071\114\122\107\084\097\108\055\071\048\047\107\078\079\098\055\066\118\050\081\071\051\122\081\078\073\065\077\066\074&quot;;&quot;\073\070\112\078\069\053\073\113\078\082\057\118\070\120\069\080\076\109\061\061&quot;,&quot;\050\057\056\121\083\086\121\066\098\086\084\055\047\117\072\109\100\102\061\061&quot;,&quot;\073\099\098\083&quot;,&quot;\108\105\049\051\122\084\049\120\101\084\076\117\088\072\088\082&quot;;&quot;\050\081\086\103\047\055\115\104&quot;;&quot;\089\100\112\086\117\082\082\077\050\080\080\088\047\048\105\107\084\102\061\061&quot;,&quot;\108\071\106\065\100\103\050\115\117\082\081\080\084\107\120\086\074\069\099\098\049\109\061\061&quot;;&quot;\076\073\089\047\110\080\109\052\099\048\107\102\078\090\068\061&quot;,&quot;\086\074\112\054\082\072\119\051\109\120\078\116\086\067\113\073&quot;,&quot;\082\097\054\048&quot;;&quot;\089\067\102\107\119\078\110\099\069\074\117\118\088\109\061\061&quot;;&quot;\120\048\121\100\107\057\120\108&quot;;&quot;\109\074\120\051\113\054\089\052&quot;,&quot;\088\104\054\078\055\072\083\050\082\072\090\101\107\098\082\050\069\119\066\107\120\079\076\075\086\112\108\117\116\085\109\061&quot;;&quot;\090\114\118\054\108\088\113\078&quot;;&quot;\106\100\048\083\102\109\061\061&quot;;&quot;\118\085\097\057\113\067\099\077&quot;,&quot;\100\053\079\090\120\115\084\069\070\065\084\047\084\078\112\066\098\084\087\070\115\106\106\088&quot;;&quot;\080\090\082\084&quot;,&quot;\077\074\048\087&quot;,&quot;\057\054\114\090\109\068\061\061&quot;;&quot;\070\079\119\089&quot;;&quot;\120\115\083\097\072\074\087\098&quot;,&quot;\107\117\090\080&quot;;&quot;\088\066\051\071\072\102\107\043\049\082\121\114\043\068\048\084&quot;;&quot;\070\054\070\114\057\115\077\101\068\072\100\074\085\072\085\112&quot;;&quot;\083\078\083\071\117\066\068\114\108\088\061\061&quot;;&quot;\054\117\055\073\087\067\113\083\116\109\061\061&quot;,&quot;\056\080\050\098\119\047\071\097\085\065\088\075\078\109\061\061&quot;,&quot;\115\117\066\081\116\055\121\111\117\101\084\081\047\076\056\090\122\057\102\061&quot;,&quot;\108\053\083\048\098\117\090\073&quot;;&quot;\106\097\054\122\076\053\109\116\112\103\089\083\118\089\101\061&quot;;&quot;\083\081\071\114\122\081\071\114\047\055\078\118\050\109\061\061&quot;,&quot;\100\079\069\110\047\069\076\071\098\113\114\056\122\081\103\110\119\111\076\054\056\052\098\084\121\107\089\050\051\073\115\054\088\109\061\061&quot;,&quot;\078\107\111\056\118\108\115\106&quot;,&quot;\098\117\084\073\122\076\122\109\108\114\106\109\112\086\056\117\115\088\061\061&quot;,&quot;\056\056\117\068\100\106\043\113&quot;,&quot;\083\081\071\114\088\081\103\121\065\055\083\048\050\117\075\061&quot;,&quot;\101\101\101\122\088\054\112\081\074\071\120\115\089\080\049\086\055\088\121\065\065\087\081\112\102\122\077\068\054\055\099\090\069\083\065\052\097\110\113\115\106\083\103\122\120\070\083\073\102\074\050\087\077\080\047\066\047\076\083\114\074\088\061\061&quot;,&quot;\121\120\084\087\118\104\049\074\055\077\049\047\099\083\098\057\069\118\112\061&quot;,&quot;\117\047\100\071\085\068\061\061&quot;,&quot;\108\098\110\066\050\068\099\111&quot;,&quot;\114\100\053\048\101\102\070\050\090\113\116\086\089\084\080\116\098\073\113\118\098\115\072\070&quot;;&quot;\084\103\109\074\121\072\120\050\081\073\082\100\050\068\061\061&quot;,&quot;\047\080\104\112\100\121\066\057\069\100\102\118\100\086\047\100\102\055\047\070\067\102\061\061&quot;,&quot;\107\097\072\047\052\115\101\112&quot;,&quot;\067\119\112\073&quot;,&quot;&quot;;&quot;\108\077\066\118\050\055\072\085&quot;,&quot;\070\098\079\073\118\076\086\116\087\050\078\115\087\083\104\120\100\109\120\048\078\057\103\070&quot;;&quot;\053\049\083\113\105\054\102\055\082\082\050\050\055\071\106\061&quot;,&quot;\098\057\056\103\098\057\084\076&quot;,&quot;\108\055\115\103\065\055\109\061&quot;,&quot;\119\122\073\105\113\108\103\082\068\118\117\074\087\056\099\114&quot;,&quot;\065\082\089\099\065\082\050\085\116\085\088\067\101\077\051\079\087\085\117\110\090\077\084\116\068\068\061\061&quot;;&quot;\090\117\050\087\110\078\085\069&quot;,&quot;\070\120\102\083&quot;;&quot;\090\057\078\066\089\106\070\068\084\118\121\088\066\084\110\088&quot;;&quot;\071\112\074\122\066\049\077\053&quot;,&quot;\112\069\078\119\066\086\087\050&quot;,&quot;\088\081\072\118\065\077\071\043\047\068\061\061&quot;;&quot;\047\055\072\076\047\107\084\121\065\077\108\061&quot;,&quot;\082\067\085\111\113\098\107\083\075\102\068\070\098\047\112\100\056\074\109\061&quot;,&quot;\055\100\050\114\084\109\061\061&quot;,&quot;\099\048\101\048\103\122\056\049\120\102\061\061&quot;,&quot;\065\053\111\048\115\051\051\114\115\051\050\075\098\077\074\119&quot;;&quot;\086\072\087\108\103\112\117\048&quot;,&quot;\115\097\065\071\080\099\066\085\077\066\043\050\052\068\076\112\088\110\090\099&quot;,&quot;\099\119\053\115\107\097\122\057\098\097\109\050\075\120\077\100&quot;;&quot;\103\090\043\084\077\085\099\078\118\119\047\098\085\113\115\119\055\054\082\079\067\069\107\106\077\065\089\098\117\082\086\077\100\109\061\061&quot;;&quot;\075\097\084\116\115\090\118\101\110\070\082\049\109\119\116\111\098\055\117\078\081\088\061\061&quot;;&quot;\065\076\052\082\119\088\061\061&quot;;&quot;\119\080\082\119\113\054\083\103&quot;,&quot;\102\107\076\049\118\074\051\108\120\070\073\101\120\076\077\077\081\104\056\119\116\099\117\068\088\109\111\120\065\102\061\061&quot;,&quot;\120\102\067\100\070\065\053\072\057\087\088\103\079\066\111\086\074\068\061\061&quot;;&quot;\102\081\114\103\104\068\054\111&quot;,&quot;\067\100\047\120\088\117\066\079\098\122\071\103\112\057\121\101\047\109\061\061&quot;;&quot;\112\081\072\118\112\081\066\114&quot;,&quot;\108\077\104\072\116\055\121\072\082\079\070\079\089\098\098\051\111\050\120\068&quot;;&quot;\055\099\054\081\057\052\104\066\119\108\052\106\047\118\100\114\088\109\061\061&quot;,&quot;\085\122\105\121\085\088\085\075\108\088\061\061&quot;;&quot;\083\117\090\086\065\088\061\061&quot;;&quot;\099\120\098\114\075\120\120\088&quot;,&quot;\065\055\071\118&quot;;&quot;\114\082\072\069\118\068\049\078\084\069\070\055\111\053\099\120\082\087\068\067\072\116\106\104\121\081\098\119\122\087\113\112&quot;,&quot;\069\081\098\067\065\051\121\112\066\122\104\097\090\074\048\068\085\068\061\061&quot;,&quot;\109\106\106\051\083\050\086\108&quot;;&quot;\072\067\068\115\048\047\069\121\113\098\051\100\073\111\089\112&quot;;&quot;\099\052\120\068\081\079\105\115\101\086\098\073\054\118\112\085&quot;;&quot;\108\066\122\086\122\114\050\078\088\078\051\090\067\055\075\114&quot;,&quot;\069\117\090\110\117\066\107\073\054\109\049\085\068\111\085\114\082\049\122\108\114\069\053\069&quot;,&quot;\090\052\088\078\048\082\112\061&quot;;&quot;\108\081\115\048\098\057\056\114&quot;;&quot;\115\122\097\111&quot;,&quot;\076\121\053\100\103\073\103\102\074\117\088\068\105\067\053\075\104\047\055\089\084\109\061\061&quot;,&quot;\056\098\080\057\087\097\055\103\101\109\061\061&quot;;&quot;\098\099\087\103\090\114\111\117\073\090\082\101\111\074\071\099\100\099\117\080&quot;;&quot;\120\102\085\090\103\085\101\067\118\109\088\113\106\076\108\061&quot;;&quot;\071\051\072\120\100\066\056\088\112\057\115\112\070\081\086\089&quot;,&quot;\049\065\098\086\084\071\116\104&quot;;&quot;\122\087\085\074\085\068\109\055\110\102\061\061&quot;,&quot;\051\122\077\105&quot;;&quot;\111\057\066\119\070\053\112\090\100\081\072\098\050\071\056\106&quot;;&quot;\112\081\103\103\108\102\061\061&quot;,&quot;\043\102\061\061&quot;,&quot;\050\101\090\073\065\071\056\114\098\117\108\076\071\051\111\081&quot;;&quot;\111\117\047\057\112\071\084\122\098\117\121\052\067\057\047\075&quot;;&quot;\111\057\110\072\073\065\069\116\102\080\057\049\069\089\076\055\048\070\113\057\120\068\108\105\051\102\109\061&quot;,&quot;\106\070\108\084\103\110\082\103\120\071\089\111\067\098\115\051\048\097\110\089\121\053\076\104\075\078\067\104\080\109\081\121\115\057\103\083\122\068\061\061&quot;;&quot;\085\067\101\054\052\110\108\101\043\052\120\074\105\118\114\114\108\088\089\116\049\066\108\061&quot;,&quot;\090\099\070\088\067\074\048\067\057\087\068\066\049\077\056\076\067\078\066\115\086\109\114\061&quot;,&quot;\074\119\104\100\054\111\119\089\090\104\113\050\047\043\109\085\116\114\103\070\047\106\075\061&quot;,&quot;\057\086\072\073\112\109\061\061&quot;,&quot;\113\047\074\088\047\113\051\057&quot;,&quot;\068\050\067\066\054\055\047\108\043\076\066\102\105\100\070\075&quot;;&quot;\052\104\078\076\086\048\104\107\114\081\047\067\116\079\108\118\116\090\112\061&quot;,&quot;\086\085\069\118\071\098\055\078\065\088\061\061&quot;,&quot;\056\066\071\112\102\104\111\061&quot;;&quot;\048\088\120\121\107\101\052\056\050\120\100\047\100\074\047\098\113\117\109\105\101\068\061\061&quot;,&quot;\121\084\119\076\080\121\054\106&quot;,&quot;\086\084\071\098\068\068\061\061&quot;,&quot;\077\089\076\090\055\051\110\115\065\109\043\121\056\056\103\111&quot;,&quot;\114\079\077\082\065\068\061\061&quot;,&quot;\065\117\066\114\098\068\061\061&quot;;&quot;\065\117\066\114\112\081\102\061&quot;;&quot;\070\048\106\073\056\090\090\054\098\102\061\061&quot;,&quot;\073\099\114\121\067\043\078\049\090\109\074\073\103\055\065\084\052\103\067\100&quot;;&quot;\081\081\080\055\053\102\061\061&quot;;&quot;\075\122\080\077\043\100\069\106\103\074\072\121\099\086\106\109\110\102\061\061&quot;;&quot;\112\057\050\073\122\066\088\119\065\053\056\099\067\051\122\075\098\102\061\061&quot;,&quot;\067\071\071\104\050\051\078\103\065\086\056\083\083\053\050\100\108\088\061\061&quot;,&quot;\120\115\097\114\103\099\105\101\082\075\121\112\102\070\073\100\117\053\067\106\099\048\067\082\109\081\111\061&quot;,&quot;\055\055\056\117\105\048\080\084&quot;,&quot;\057\086\072\074\050\117\075\061&quot;;&quot;\109\079\072\070\104\070\099\111\089\111\101\047\075\102\049\088\056\109\047\075\051\100\087\075\111\113\119\076&quot;;&quot;\122\122\103\106\108\081\084\090\083\100\115\086\116\101\090\051\108\088\061\061&quot;,&quot;\070\070\053\104\106\089\112\053\073\066\122\086\120\109\061\061&quot;,&quot;\053\088\061\061&quot;,&quot;\065\071\056\081\075\100\113\090\097\122\103\113\043\071\099\082\105\109\061\061&quot;;&quot;\113\082\048\084\077\104\056\053\077\102\061\061&quot;,&quot;\100\073\107\108\103\089\122\061&quot;;&quot;\077\102\078\098\079\079\116\106&quot;;&quot;\043\055\120\090\065\067\075\049\065\085\114\119\065\079\065\103\081\116\072\057\056\097\067\115\110\075\117\047&quot;,&quot;\085\090\120\100\117\110\074\047\072\119\080\108\050\085\054\070\101\085\052\108\085\102\061\061&quot;;&quot;\112\116\083\114&quot;,&quot;\048\113\118\116\109\104\088\061&quot;,&quot;\113\086\120\072\068\081\075\052&quot;,&quot;\050\057\084\048\065\053\106\061&quot;;&quot;\070\066\078\075\071\122\047\122\115\100\102\075\111\077\047\077\047\051\075\061&quot;,&quot;\043\051\077\043\086\056\076\101\057\106\103\054\047\118\078\099\080\070\097\050\067\050\048\081\099\087\070\053\078\073\050\067\053\088\061\061&quot;;&quot;\090\049\073\099&quot;;&quot;\122\105\071\108\056\107\109\090\099\083\111\050\047\108\111\057\068\074\112\061&quot;,&quot;\083\100\090\071\111\109\061\061&quot;;&quot;\122\081\103\081\117\066\056\085\065\114\083\105\083\086\071\103\065\066\068\061&quot;;&quot;\084\110\080\069\088\110\110\061&quot;,&quot;\113\108\083\116\056\098\109\079&quot;;&quot;\052\066\088\077\054\052\104\068\079\084\047\081\083\068\108\061&quot;,&quot;\082\087\081\106\081\083\106\055\114\067\110\074\049\049\081\069\067\047\071\053\114\086\086\052\108\101\056\120\043\106\099\116\118\052\080\119\076\102\061\061&quot;,&quot;\108\066\067\087\112\081\106\099\104\081\100\097\115\088\061\061&quot;,&quot;\110\099\049\077\050\122\053\047\065\088\061\061&quot;;&quot;\066\074\076\089\071\104\108\061&quot;,&quot;\120\105\079\081\085\109\061\061&quot;,&quot;\085\049\120\048\117\089\116\055\081\098\084\043\084\121\066\067\086\088\061\061&quot;,&quot;\050\053\115\086\112\102\061\061&quot;,&quot;\048\104\053\068\078\066\090\087\066\099\071\043\100\102\099\087\117\043\110\103\057\068\061\061&quot;,&quot;\103\090\069\118\078\090\068\065&quot;;&quot;\114\047\120\076\073\077\114\082\079\076\074\117\050\116\079\080\050\110\107\073\079\057\114\102\081\080\101\061&quot;;&quot;\104\101\069\116\110\070\083\077\121\085\098\072\067\119\077\106\077\088\061\061&quot;;&quot;\122\052\077\107\104\050\098\097&quot;,&quot;\115\121\052\048\087\083\049\081\113\043\104\069\052\073\106\061&quot;,&quot;\112\073\071\121\065\055\083\080\047\081\078\051\050\081\071\114&quot;;&quot;\116\104\098\083\052\113\069\080&quot;;&quot;\107\109\065\048\120\066\117\116&quot;,&quot;\112\073\071\121\065\055\083\080\065\117\072\051\050\117\119\080\108\081\071\074\050\117\115\114\098\117\072\118&quot;;&quot;\100\079\097\087\065\088\061\061&quot;;&quot;\097\112\048\117\099\054\113\114\068\081\113\104\113\055\087\085&quot;,&quot;\074\088\051\097\122\089\077\076\074\102\061\061&quot;;&quot;\084\072\080\053\052\117\086\081\065\101\117\053\070\105\068\050\086\102\061\061&quot;,&quot;\102\119\122\114&quot;;&quot;\108\077\071\119\047\117\078\048\050\088\061\061&quot;,&quot;\047\055\078\043\098\109\061\061&quot;;&quot;\077\088\053\122\121\088\061\061&quot;;&quot;\047\057\056\051\112\057\083\078\057\053\071\121&quot;;&quot;\113\089\087\085\089\090\051\118\071\057\076\069&quot;;&quot;\080\072\110\053&quot;;&quot;\065\105\114\069\122\088\061\061&quot;;&quot;\109\056\047\043&quot;,&quot;\053\056\098\055\113\066\052\080\050\056\117\117\054\057\074\061&quot;;&quot;\114\051\083\107\085\099\070\106&quot;,&quot;\108\081\071\114\065\117\071\114\112\057\083\103\112\077\119\078&quot;;&quot;\122\107\115\122\070\107\047\050\070\066\104\048\083\081\109\109\112\073\102\061&quot;;&quot;\106\115\088\113\066\102\061\061&quot;,&quot;\106\088\057\053\077\115\089\112\115\114\110\116\083\119\097\056\109\105\109\107\057\102\061\061&quot;,&quot;\047\051\043\086\078\056\084\066\048\071\069\053&quot;,&quot;\118\057\122\073\086\056\098\047&quot;;&quot;\083\112\084\108\106\121\101\076\088\105\066\051\055\115\081\112\065\078\074\061&quot;,&quot;\118\090\111\116\097\102\072\102\105\084\112\117\118\068\061\061&quot;;&quot;\108\043\066\057\111\122\085\088\083\076\088\090\070\053\084\090\112\109\061\061&quot;;&quot;\110\109\082\089\076\121\071\115&quot;;&quot;\066\121\084\076\087\051\047\103&quot;,&quot;\082\089\073\105\104\109\057\076\069\047\099\106\078\056\110\061&quot;;&quot;\082\049\112\047\090\119\066\084&quot;;&quot;\076\118\113\070\101\100\050\121\078\104\086\119\113\074\111\119\117\068\061\061&quot;;&quot;\119\090\113\051\121\043\110\075\102\098\088\066\049\102\097\052\102\105\104\069\107\078\089\054\102\111\074\061&quot;,&quot;\047\055\066\099\065\055\122\061&quot;,&quot;\122\057\083\084\047\066\051\061&quot;;&quot;\078\086\114\083\112\055\109\070\112\068\061\061&quot;,&quot;\116\086\055\081\120\068\061\061&quot;,&quot;\113\073\084\110\066\121\080\103\110\121\113\065\072\120\102\061&quot;,&quot;\113\080\088\122\089\097\070\079&quot;,&quot;\079\117\111\090\100\083\074\055\054\069\047\122\052\072\077\083\087\117\118\055\090\068\061\061&quot;,&quot;\057\086\072\085\050\057\083\103\047\055\066\099\065\055\122\061&quot;;&quot;\072\114\087\052\051\120\112\121&quot;,&quot;\119\089\110\105\068\097\055\076\074\071\101\101\047\113\086\077\067\109\061\061&quot;,&quot;\070\102\057\054\102\078\119\112\101\054\078\084\069\084\081\115\109\050\069\086\050\073\102\108\072\080\048\089&quot;;&quot;\066\053\048\121\107\067\090\098\104\065\111\104\072\048\082\116\105\113\087\056\084\122\076\090\089\106\118\099\072\078\118\085\113\082\053\075&quot;;&quot;\083\077\078\118\050\101\050\121\108\073\115\114\088\081\103\121\065\055\088\061&quot;;&quot;\087\112\102\111\054\047\051\121\114\088\061\061&quot;,&quot;\078\112\090\105\055\079\104\081\067\089\079\117\117\077\050\115&quot;;&quot;\071\066\083\048\076\043\069\089&quot;,&quot;\108\077\071\085\065\053\050\078&quot;;&quot;\121\105\084\114\074\043\114\048\085\102\077\047\097\054\102\047&quot;;&quot;\079\088\116\043\049\102\086\043\049\116\088\069\080\055\074\072\043\068\077\055\050\122\074\105\049\106\110\061&quot;,&quot;\103\051\104\083\115\076\115\118\110\056\097\075\097\090\122\061&quot;;&quot;\121\105\067\074\079\102\061\061&quot;;&quot;\083\066\121\076\100\051\103\050\100\101\078\057\115\122\084\101&quot;,&quot;\108\053\071\099&quot;,&quot;\068\077\118\107\085\053\087\084\102\103\076\079\089\115\083\073&quot;;&quot;\077\047\065\055&quot;;&quot;\121\054\114\055\090\057\108\100&quot;,&quot;\100\117\099\120\089\120\090\067\075\102\047\081\068\101\090\119\056\110\097\097\099\068\061\061&quot;;&quot;\109\067\067\085\115\049\048\115\112\052\101\068\088\111\103\097\118\056\068\081\117\088\061\061&quot;;&quot;\122\086\065\114\100\119\075\118\075\056\084\103\052\056\085\103&quot;;&quot;\055\100\065\106\078\053\087\090\089\103\083\067\111\065\054\072\099\073\102\061&quot;;&quot;\110\090\118\118\122\118\102\061&quot;;&quot;\110\086\102\074\055\110\069\107&quot;,&quot;\082\053\112\120\074\090\077\114\099\083\102\104\052\047\076\074\103\101\097\052\051\103\084\082\078\083\075\061&quot;,&quot;\057\082\086\080\055\089\108\061&quot;,&quot;\122\066\106\053\100\117\086\105\047\043\122\048\047\043\102\048\088\109\061\061&quot;,&quot;\054\057\079\048\052\090\073\117\055\065\051\048\074\108\111\107\117\050\079\100\112\119\098\043\089\054\097\119\110\097\069\112\108\068\061\061&quot;,&quot;\057\043\067\108\065\104\099\072\066\116\070\066\043\101\081\103\052\086\122\083\043\112\101\083\113\100\104\061&quot;;&quot;\047\057\056\051\112\057\083\078\057\081\066\109\098\071\072\120\050\057\078\080\047\077\078\076\098\117\084\121\065\055\078\114\067\088\061\061&quot;;&quot;\088\081\119\097\065\077\122\061&quot;,&quot;\050\081\066\085\050\088\061\061&quot;;&quot;\047\048\108\121\043\114\114\055\067\079\109\087\049\082\110\073\049\089\110\080&quot;;&quot;\112\066\048\077\054\048\075\110\075\102\061\061&quot;;&quot;\107\048\098\097\106\080\116\071&quot;;&quot;\122\081\071\114\122\081\071\114\047\055\078\118\050\109\061\061&quot;;&quot;\057\072\079\088\076\065\106\070\090\115\086\110\107\078\102\061&quot;;&quot;\115\073\047\089\117\122\084\103\047\077\119\107\071\043\078\052\116\117\111\061&quot;;&quot;\098\080\112\105&quot;;&quot;\065\087\069\122\107\086\088\061&quot;;&quot;\104\074\082\120\047\117\084\081&quot;,&quot;\109\048\054\107\054\119\108\098\070\088\108\085\075\074\047\107\051\079\121\120\066\102\112\074&quot;,&quot;\098\050\047\048\076\043\110\122\122\065\115\108\122\109\061\061&quot;,&quot;\122\069\043\106\055\108\080\047&quot;,&quot;\090\114\052\079&quot;;&quot;\083\106\068\110\088\118\073\080&quot;,&quot;\070\067\043\116\078\102\061\061&quot;;&quot;\054\108\103\087\087\070\080\108\109\085\114\090\103\048\120\088\075\068\047\077\117\068\121\103\074\043\070\108\048\068\061\061&quot;,&quot;\052\100\116\119\074\106\055\119\049\070\114\114\084\101\115\051\102\090\048\074\072\088\061\061&quot;;&quot;\083\086\073\054&quot;,&quot;\081\119\115\069\076\098\111\085&quot;,&quot;\122\118\085\079\111\088\086\115\116\090\097\056\076\115\121\119\098\082\116\065&quot;,&quot;\116\108\080\120&quot;;&quot;\078\050\048\073\070\056\082\109\086\104\054\108&quot;;&quot;\056\050\048\111&quot;,&quot;\101\069\121\111\120\116\119\076\081\100\090\078\099\114\073\111\105\078\055\099\083\115\088\061&quot;,&quot;\067\114\074\077\051\050\072\103\051\097\055\043\101\085\109\076&quot;,&quot;\074\122\109\103\053\121\050\047\084\067\082\071\116\113\070\075\100\112\102\061&quot;;&quot;\047\055\072\118\047\117\086\099\050\057\106\061&quot;;&quot;\108\102\079\070\057\101\115\079\098\115\065\049\114\057\081\106&quot;;&quot;\071\055\066\085\108\055\071\048\106\101\083\078\047\055\071\043\047\055\071\051\106\088\061\061&quot;;&quot;\083\055\072\043\098\086\047\121\050\055\047\078\047\066\056\074\047\117\047\121\065\051\047\086\098\122\078\118\050\077\110\061&quot;;&quot;\120\051\102\113\075\069\075\043\082\072\052\101\101\102\112\121\109\050\113\080\105\107\089\106&quot;;&quot;\088\053\084\078\112\057\083\078\083\055\072\043\098\086\047\121\050\055\047\078\047\066\056\074\047\117\047\121\065\051\047\086\098\088\061\061&quot;,&quot;\055\099\057\086\048\105\110\082\086\111\121\056\106\114\049\109\083\103\081\099\089\107\112\061&quot;;&quot;\070\083\068\111\100\116\104\099&quot;,&quot;\057\086\072\121\065\077\083\078\067\068\061\061&quot;,&quot;\050\077\119\097\065\053\106\061&quot;,&quot;\122\075\104\087&quot;;&quot;\056\117\099\103\080\122\057\083\070\083\114\075\103\122\048\100&quot;,&quot;\048\079\055\047\049\105\101\088\111\085\084\071\067\106\081\080&quot;,&quot;\085\112\116\084\087\088\097\121&quot;,&quot;\056\087\105\089\108\114\050\056\073\103\122\086\083\077\089\086\066\102\061\061&quot;;&quot;\069\102\049\114\071\066\115\071\121\071\065\082\109\089\053\065\116\120\043\049\055\088\061\061&quot;,&quot;\050\048\097\113&quot;;&quot;\083\102\089\110\082\077\049\052\047\122\086\113\054\057\112\069\089\120\120\070\097\102\061\061&quot;,&quot;\112\115\052\117\109\068\061\061&quot;;&quot;\083\081\071\114\122\081\071\048\047\077\078\043\050\088\061\061&quot;,&quot;\070\119\109\061&quot;;&quot;\069\105\068\080\116\067\072\065&quot;,&quot;\112\078\083\043\113\104\081\080\111\075\099\043\088\066\057\111\071\102\121\075\047\098\087\057&quot;;&quot;\065\079\101\061&quot;;&quot;\117\100\108\061&quot;,&quot;\047\117\090\109\112\117\115\120&quot;;&quot;\065\087\120\109\085\109\061\061&quot;;&quot;\047\051\083\100\047\053\068\048\108\076\050\052\115\100\111\081\108\109\061\061&quot;;&quot;\108\071\074\077\089\104\110\049\067\099\050\113\086\104\049\108\106\101\099\051\069\098\068\061&quot;,&quot;\057\053\072\086\086\106\051\052\099\067\104\098\057\118\110\109\122\100\121\103\054\088\061\061&quot;;&quot;\120\118\069\109\113\081\105\088&quot;,&quot;\075\076\068\065\090\067\067\070\069\050\117\047\048\101\121\079\068\100\073\098\073\068\061\061&quot;;&quot;\053\065\122\043\043\080\103\108\057\068\061\061&quot;;&quot;\043\078\109\052&quot;;&quot;\105\088\100\054&quot;;&quot;\113\116\084\086\085\113\069\112\088\079\113\047\083\088\120\070\111\048\116\057\072\102\061\061&quot;,&quot;\076\122\121\088\121\087\074\066&quot;,&quot;\104\052\052\073\114\086\112\118&quot;,&quot;\098\076\047\121\083\122\119\073\115\100\083\085\050\086\078\083\050\109\061\061&quot;,&quot;\077\052\118\100\077\117\089\097\080\079\075\121\106\078\081\067\077\053\112\061&quot;;&quot;\121\083\115\078\107\105\075\073&quot;;&quot;\105\105\097\054\118\102\078\086&quot;,&quot;\053\085\080\122\080\099\050\055&quot;,&quot;\076\078\115\074\052\088\061\061&quot;;&quot;\070\057\115\069\050\057\078\101\065\053\047\118&quot;;&quot;\069\076\090\053\087\081\116\106\120\088\061\061&quot;;&quot;\048\073\099\048\065\072\112\078&quot;,&quot;\086\108\122\086\097\065\105\111\110\105\108\084\119\117\068\097\078\108\047\108\082\119\103\116&quot;,&quot;\070\115\120\056\120\099\122\078\076\068\061\061&quot;;&quot;\099\080\069\120\101\067\089\079\081\107\120\113\113\057\101\099\113\065\066\043\056\083\043\071\070\113\106\061&quot;,&quot;\074\084\102\099\112\110\104\061&quot;;&quot;\106\055\087\068\108\074\113\087&quot;;&quot;\065\079\106\061&quot;,&quot;\103\119\070\090\049\074\083\087\119\120\043\082\075\109\061\061&quot;;&quot;\056\105\055\069\087\087\073\112&quot;,&quot;\120\122\122\066\086\089\077\067\073\047\115\089\111\102\070\047\102\106\103\106\085\055\075\061&quot;;&quot;\071\070\075\070\071\047\069\109\118\110\078\074\052\082\114\061&quot;,&quot;\106\054\089\047\076\102\109\069&quot;,&quot;\057\098\084\098\052\102\061\061&quot;;&quot;\050\051\071\100\098\053\056\119\108\101\047\071\098\055\066\117&quot;;&quot;\072\118\117\080\068\053\098\083\122\051\082\101\054\052\120\084\099\051\115\083\109\122\056\076\047\120\106\053&quot;;&quot;\116\102\061\061&quot;;&quot;\116\099\102\078\050\087\104\121\116\102\061\061&quot;,&quot;\114\099\075\071\098\087\100\081&quot;,&quot;\065\055\083\057\098\043\050\100\071\071\078\074\111\107\084\119\065\088\061\061&quot;;&quot;\113\097\098\071\070\047\085\057\097\072\057\075\088\047\043\049\068\052\053\089&quot;,&quot;\112\065\117\080\087\043\051\107&quot;;&quot;\054\078\119\081\076\109\061\061&quot;,&quot;\112\073\078\114\050\088\061\061&quot;}local function T(T)return Q[T+(1043438+-1014359)]end for T,W in ipairs({{197479+-197478;-825991-(-826331)};{553130+-553129;-506492-(-506576)};{948143-948058;866711+-866371}})do while W[172857+-172856]&lt;W[516473-516471]do Q[W[292462-292461]],Q[W[-847902-(-847904)]],W[-839920-(-839921)],W[-684115-(-684117)]=Q[W[501501-501499]],Q[W[86292-86291]],W[-1046836-(-1046837)]+(638443+-638442),W[975373-975371]-(833399-833398)end end do local T=type local W=string.len local Z=Q local w=table.insert local k=string.sub local n=table.concat local t=math.floor local R={[&quot;\047&quot;]=51627+-51598,H=-489282+489343,v=1033856+-1033810,c=1047008-1046974,Y=-464937-(-464979),[&quot;\051&quot;]=416067+-416031;o=608345-608333;L=835656+-835605,[&quot;\049&quot;]=418095-418085,n=-196673-(-196733),[&quot;\056&quot;]=-329300+329301,O=1045070-1045067;a=-456930+456977;y=-939076+939117,w=-234586+234635;r=6571+-6519,E=636761+-636750;b=550668-550642;l=258571-258543,z=-360551-(-360571),[&quot;\050&quot;]=-184961-(-184986);f=-1005372+1005404;X=-219337+219353,S=507178+-507161;k=-620383+620390;e=-297851-(-297855);V=336586-336533,G=599900-599879,Q=497090+-497036;s=517423+-517410;J=-55886-(-55930),B=-865558-(-865563),T=366254+-366245,m=-387702+387750,R=-16994-(-17057),D=755406-755406,x=-193176+193219;[&quot;\057&quot;]=-972077-(-972100),W=870714+-870712;K=725487+-725431,[&quot;\052&quot;]=516101+-516043,[&quot;\048&quot;]=39831-39781,[&quot;\043&quot;]=-970464-(-970499),[&quot;\054&quot;]=410881-410822,M=-950072-(-950110);t=1008565+-1008551,[&quot;\053&quot;]=-313218-(-313273),u=83092-83070,U=576707+-576662;i=226868+-226853,p=-553307+553331;A=-540630+540657,[&quot;\055&quot;]=-853042+853048,C=-489349+489379,g=-352338+352371;P=-667683+667714,Z=1004770-1004713;N=-486286+486323,I=-937205-(-937244),d=378016+-377997;j=-672981-(-672989),q=492192+-492130;h=-66282-(-66322),F=928367-928349}local m=string.char for Q=-720826-(-720827),#Z,560018-560017 do local a=Z[Q]if T(a)==&quot;\115\116\114\105\110\103&quot;then local T=W(a)local f={}local b=-206326-(-206327)local C=262966-262966 local J=224590-224590 while b&lt;=T do local Q=k(a,b,b)local W=R[Q]if W then C=C+W*(808876+-808812)^((-726012+726015)-J)J=J+(-352359-(-352360))if J==183187-183183 then J=884357-884357 local Q=t(C/(439210+-373674))local T=t((C%(-766747-(-832283)))/(317583+-317327))local W=C%(-482390+482646)w(f,m(Q,T,W))C=-530611-(-530611)end elseif Q==&quot;\061&quot;then w(f,m(t(C/(-850570+916106))))if b&gt;=T or k(a,b+(926648-926647),b+(-782065-(-782066)))~=&quot;\061&quot;then w(f,m(t((C%(-328116-(-393652)))/(-377578-(-377834)))))end break end b=b+(-396723-(-396724))end Z[Q]=n(f)end end end return(function(Q,Z,w,k,n,t,R,f,W,g,L,C,G,m,b,h,J,c,a,S,v,p)a,g,S,W,C,G,h,c,J,v,m,p,L,f,b={},function(Q,T)local Z=C(T)local w=function(w,k,n,t,R)return W(Q,{w,k;n;t;R},T,Z)end return w end,function(Q)a[Q]=a[Q]-(903705-903704)if a[Q]==-325364+325364 then a[Q],m[Q]=nil,nil end end,function(W,w,k,n)local B,M,E,x,c,A,d,H,o,i,F,Y,y,C,O,P,J,V,N,R,l,U,z,u,X,b,I,a,s,K,q,r,e,j while W do if W&lt;-400235+9195665 then if W&lt;3728129-(-159341)then if W&lt;1724845-(-439295)then if W&lt;840454+-71009 then if W&lt;-131675+581210 then if W&lt;-940690+1292576 then if W&lt;632165-488696 then a=T(473346-502407)R=T(-416915-(-388069))W=Q[R]R=W(a)R={}W=Q[T(-617543-(-588585))]else e=T(-767231-(-738285))J=m[k[-841499-(-841501)]]s=21269882632777-496537 c=m[k[706002-705999]]W=-969311+4252519 y=c(e,s)C=J[y]a=C end else if W&lt;-190892-(-588838)then b=T(-23411-5377)R=-540524+10670654 C=892685+240258 a=b^C W=R-a a=W R=T(554802+-583769)W=R/a R={W}W=Q[T(-499848-(-471104))]else W=11431769-951364 end end else if W&lt;-425251+1131040 then if W&lt;-58485-(-617253)then W=j W=r and 2938591-843121 or 11854117-(-378675)R=r else R={}W=Q[T(-386323-(-357520))]b=nil a=nil end else if W&lt;187075-(-558681)then a=m[k[-832225-(-832226)]]R=#a a=87005+-87005 W=R==a W=W and 13971644-(-470042)or-903874+14093443 else U=i W=12209467-(-422758)E=U o[U]=E U=nil end end end else if W&lt;1128504-84651 then if W&lt;-239930+1056117 then if W&lt;565841-(-231215)then b=f()W=true a=w m[b]=W c=f()C=T(-763396+734433)R=Q[C]J=f()C=T(-343487+314498)W=R[C]C=f()m[C]=W W=g(-826666+926986,{})s=h(-118402+8509375,{c})e=T(-596387+567446)m[J]=W W=false m[c]=W y=Q[e]e=y(s)W=e and 13272244-(-59941)or-675952+2729783 R=e else y[e]=s M=m[a]W=r o=m[k[-460403-(-460404)]]U=m[k[-350256-(-350258)]]Y=-233607+18227309228462 N=T(483567+-512414)i=U(N,Y)I=o[i]j=M[I]N=1009186+13373308777009 i=T(330743+-359586)I=m[k[405297-405296]]o=m[k[-387481+387483]]U=o(i,N)M=I[U]r=j[M]U=T(764327+-793199)M=m[k[61936-61935]]I=m[k[280185-280183]]i=19278927016834-(-880527)o=I(U,i)j=M[o]s=r[j]j=m[k[-574503-(-574504)]]M=m[k[301783-301781]]U=85718+16924520484851 o=T(975522-1004261)I=M(o,U)r=j[I]o=22366273029518-466143 i=T(256487-285446)e=s[r]r=m[k[443123+-443122]]j=m[k[331845-331843]]I=T(295650+-324707)M=j(I,o)N=25935439401782-615433 s=r[M]y=e[s]s=g(6143352-(-218400),{k[-853370-(-853376)],k[925850+-925849];k[-958598+958600];a})e=T(966970-995903)e=y[e]e=e(y,s)j=m[a]I=m[k[-250474-(-250475)]]o=m[k[-298313+298315]]U=o(i,N)M=I[U]r=j[M]U=T(-996191+967119)M=m[k[457381+-457380]]i=335747+13471024855293 I=m[k[-300865+300867]]o=I(U,i)U=34335609508958-54762 W=Q[T(-561193+532438)]j=M[o]s=r[j]j=m[k[-587472-(-587473)]]N=T(-130058+101076)o=T(512204-540976)M=m[k[-335308+335310]]I=M(o,U)r=j[I]e=s[r]o=-47516+24418363500038 r=m[k[991943+-991942]]j=m[k[-224300-(-224302)]]I=T(722230+-751278)M=j(I,o)s=r[M]y=e[s]r=m[k[815556+-815555]]e=T(28353-57347)o=959926+10605753134484 j=m[k[-631489-(-631491)]]I=T(625678+-654698)M=j(I,o)s=r[M]o=121992+17316991566583 e=y[e]Y=-911593+17747888900401 e=e(y,s)s=g(-66487+12222875,{a;k[-326846-(-326847)];k[801575-801573],k[37271+-37264],k[-216301-(-216309)],k[-970230+970236]})I=T(620686+-649530)y=T(-345904+316971)y=e[y]y=y(e,s)e=m[k[100762+-100757]]r=m[k[773564-773563]]j=m[k[551276+-551274]]M=j(I,o)s=r[M]y=e[s]s=m[a]e=y(s)M=m[a]o=m[k[305885-305884]]U=m[k[712686-712684]]i=U(N,Y)N=16802901940317-309709 I=o[i]j=M[I]I=m[k[781263-781262]]o=m[k[-715893+715895]]i=T(-664916-(-636173))U=o(i,N)N=32453879590568-291744 M=I[U]r=j[M]M=m[k[876043-876042]]U=T(515641+-544416)R={}i=1029551+359927548664 I=m[k[774613+-774611]]o=I(U,i)j=M[o]U=725429+31121197049574 s=r[j]j=m[k[-119881-(-119882)]]M=m[k[987303-987301]]o=T(562030+-591017)I=M(o,U)r=j[I]o=897456851519-(-571234)e=s[r]r=m[k[-499708+499709]]j=m[k[-389730-(-389732)]]I=T(-805619+776737)M=j(I,o)s=r[M]y=e[s]e=T(528833+-557766)e=y[e]s=h(178850+13362704,{a;k[-957790-(-957791)],k[-148876+148878],k[184442+-184437]})e=e(y,s)i=T(1003080+-1031941)j=m[a]I=m[k[-521448-(-521449)]]o=m[k[664961+-664959]]U=o(i,N)M=I[U]r=j[M]M=m[k[868608+-868607]]U=T(763126+-791932)I=m[k[-606089-(-606091)]]i=7195505205200-(-224582)o=I(U,i)j=M[o]o=T(-988298+959461)s=r[j]j=m[k[426120-426119]]U=-579292+17420752287372 M=m[k[-622608-(-622610)]]I=M(o,U)r=j[I]e=s[r]r=m[k[163156-163155]]o=27420083646760-376648 I=T(605499+-634383)j=m[k[454767+-454765]]M=j(I,o)s=r[M]y=e[s]e=T(324179+-353112)e=y[e]s=p(768649+9530667,{a,k[-997178-(-997179)],k[148982+-148980]})e=e(y,s)a=S(a)end else if W&lt;-706946+1541898 then J=S(J)b=S(b)y=nil y=T(77599+-106469)i=S(i)J=f()b=nil s=nil r=S(r)U=nil s=T(626219+-655008)M=nil j=S(j)U=-852226-(-852227)m[J]=b I=nil c=S(c)e=S(e)o=nil C=S(C)C=nil b=f()e=T(-865692+836822)m[b]=C c=Q[y]y=T(-347373+318319)C=c[y]o={}c=f()m[c]=C j=f()y=Q[e]e=T(453432-482377)C=y[e]r=T(289818+-318781)e=Q[s]s=T(-409613-(-380840))y=e[s]W=13117121-484896 i=-224751+225007 s=Q[r]r=T(-6243+-22647)M={}e=s[r]r=f()s=-1046996-(-1046996)m[r]=s s=-774914+774916 I=f()m[j]=s s={}m[I]=M M=312866-312866 H=i i=-841085+841086 V=i i=-934245-(-934245)z=V&lt;i i=U-V else b=m[k[948526+-948524]]C=m[k[-780557+780560]]W=11104915-(-590452)a=b==C R=a end end else if W&lt;2653439-734482 then if W&lt;1479684-201412 then W=-369981+15735222 i=#o H=811343+-811343 U=i==H else r=-978651+22287374915429 a=w[791745-791744]s=T(828790+-857823)c=m[k[-993824-(-993825)]]y=m[k[-21192-(-21194)]]e=y(s,r)r=-686821+14144703124639 J=c[e]C=a[J]c=m[k[999306-999305]]y=m[k[474367+-474365]]s=T(982454+-1011521)e=y(s,r)J=c[e]b=C[J]J=m[k[-180530-(-180531)]]r=-469731+13943003923519 c=m[k[637769-637767]]e=T(248049-277111)s=25680314240865-(-974677)y=c(e,s)C=J[y]R=b[C]y=T(416577-445643)C=m[k[-927982+927983]]J=m[k[501940+-501938]]e=260845+8130378814429 c=J(y,e)b=C[c]W=R[b]b=m[k[623049+-623048]]c=T(300271+-329058)y=10313706721269-97587 C=m[k[-73775-(-73777)]]J=C(c,y)R=b[J]e=T(-292706-(-263828))J=m[k[-485189+485190]]c=m[k[-766751+766753]]s=596816+17296161342502 y=c(e,s)C=J[y]b=a[C]W[R]=b c=m[k[311950-311949]]y=m[k[551570+-551568]]s=T(-208015+179257)e=y(s,r)J=c[e]s=T(1034203+-1063150)C=a[J]c=m[k[299420-299419]]y=m[k[551213-551211]]r=542123+24656378029870 e=y(s,r)J=c[e]s=-642655+6029976934742 b=C[J]J=m[k[-300334+300335]]e=T(911062+-939998)c=m[k[447389-447387]]y=c(e,s)e=987656+19069581250727 C=J[y]R=b[C]C=m[k[623725-623724]]J=m[k[502759-502757]]y=T(1032710+-1061606)s=T(-953632+924701)c=J(y,e)r=29748342446759-(-433013)b=C[c]W=R[b]y=22193+7249287919230 b=m[k[-81047-(-81048)]]c=T(321490+-350344)C=m[k[48130-48128]]J=C(c,y)R=b[J]c=m[k[384433-384432]]y=m[k[864005+-864003]]e=y(s,r)J=c[e]C=a[J]b=not C y=3389065897048-(-811474)c=T(283234-312188)W[R]=b b=m[k[1045445-1045444]]C=m[k[174718+-174716]]J=C(c,y)R=b[J]W=a[R]W=W and 7251071-(-520680)or 13809359-(-821538)end else if W&lt;213638+1879754 then y=R e=T(-735757+706887)R=Q[e]s=T(270685+-299474)e=T(758920-787865)W=R[e]e=f()m[e]=W R=Q[s]I=T(-718798+690009)s=T(954909+-983825)W=R[s]j=W M=Q[I]r=M s=W W=M and-341818+3919786 or-992607+1528787 else r=f()m[r]=R o=T(951488-980429)W=m[e]j=-484613-(-484616)M=-114501+114566 R=W(j,M)j=f()m[j]=R W=81688+-81688 M=W W=-398870+398870 R=Q[o]I=W U=L(-624150+991949,{})o={R(U)}R=560422-560420 W={Z(o)}d=T(-359993+331061)o=W W=o[R]U=W R=T(-187159+158096)W=Q[R]i=m[C]Y=Q[d]d=Y(U)Y=T(929757+-958758)N=i(d,Y)i={N()}R=W(Z(i))i=f()m[i]=R R=263302+-263301 N=m[j]Y=N N=-417036-(-417037)d=N W=-865793+8136909 N=-779542-(-779542)H=d&lt;N N=R-d end end end end else if W&lt;-1038465+4319981 then if W&lt;3151540-291897 then if W&lt;3056008-605687 then if W&lt;2026299-(-244079)then b=m[k[-151576-(-151579)]]C=-777684+777755 W=-955408+4229780 a=b*C b=-262624-(-262881)R=a%b m[k[1002972-1002969]]=R else I=T(956734-985643)e=m[k[993185+-993181]]i=T(967177+-996204)r=m[k[263632-263631]]j=m[k[630834-630832]]N=6688214204698-(-346896)o=25242022683624-587262 V=T(258028-286942)M=j(I,o)o=17231293901922-(-439029)s=r[M]y=e[s]I=T(102746-131575)s=m[a]e=y(s)e=m[k[-817288-(-817292)]]r=m[k[694985-694984]]j=m[k[561673-561671]]M=j(I,o)s=r[M]o=703716+2075916404450 y=e[s]s=m[a]I=T(-308549-(-279546))e=y(s)e=m[k[-867762+867767]]r=m[k[688145-688144]]j=m[k[-780636-(-780638)]]M=j(I,o)s=r[M]y=e[s]s=m[a]e=y(s)Y=4093656874042-914632 j=m[a]I=m[k[-657697+657698]]o=m[k[-549092-(-549094)]]U=o(i,N)M=I[U]i=22649320303247-409949 r=j[M]d=709711+140576599026 M=m[k[754719-754718]]I=m[k[591238+-591236]]U=T(419373+-448357)o=I(U,i)j=M[o]s=r[j]j=m[k[-742307+742308]]o=T(341250-370219)U=-280280+32354163573170 M=m[k[-757609+757611]]I=M(o,U)r=j[I]e=s[r]o=26674746620733-(-30024)r=m[k[-385074+385075]]I=T(951856+-980649)j=m[k[-760023-(-760025)]]M=j(I,o)s=r[M]I=5327105283056-(-734656)E=30060661866862-(-357696)y=e[s]s=m[k[216691+-216690]]M=T(40451-69324)r=m[k[827417+-827415]]j=r(M,I)N=T(-616359+587441)r=W e=s[j]M=m[a]o=m[k[-528760+528761]]U=m[k[51479+-51477]]i=U(N,Y)I=o[i]j=M[I]U=m[k[-42666-(-42667)]]Y=T(-857112+828161)i=m[k[961858+-961856]]z=-459197+21529010252006 N=i(Y,d)o=U[N]i=m[a]Y=m[k[-339339-(-339340)]]d=m[k[137810-137808]]H=d(V,z)N=Y[H]U=i[N]z=-429232+33674800286193 V=T(838823-867565)Y=m[k[661973+-661972]]d=m[k[-78223+78225]]M=T(-140719+111758)H=d(V,z)M=j[M]i=T(-451202-(-422372))z=T(256820-285766)N=Y[H]d=m[k[-122351+122352]]i=U[i]H=m[k[905322-905320]]V=H(z,E)Y=d[V]i=i(U,N,Y)I=o..i M=M(j,I)s=M W=M and-746612+1559796 or 5829959-213174 end else if W&lt;-414198+2987817 then R={}W=Q[T(-499127-(-470199))]a=nil else C=m[k[-929139+929143]]y=m[k[-275496+275498]]r=T(34041+-63084)W=-699407+4969440 j=-203925+24552431651134 e=m[k[-321062-(-321065)]]s=e(r,j)c=y[s]J=T(-105167-(-76298))J=C[J]J=J(C,c)b=not J R=b end end else if W&lt;48382+3085260 then if W&lt;-661319+3741536 then R=T(-589325-(-560314))a=T(-321916-(-292876))W=Q[R]R=Q[a]a=T(-964025-(-934985))Q[a]=W a=T(-856879-(-827868))Q[a]=R a=m[k[-60973-(-60974)]]b=a()W=9796884-(-683521)else R=173644-173629 W=b&gt;R W=W and 14200508-136092 or 875977+11932935 end else if W&lt;3003575-(-179578)then a=S(a)R={}W=Q[T(-936052-(-907027))]else b=m[k[786254-786251]]C=-723533-(-723534)a=b~=C W=a and 73113+13516347 or 2998302-816224 end end end else if W&lt;810653+2773000 then if W&lt;-857270+4356360 then if W&lt;2809958-(-529790)then W=b c=T(-548667+519596)W[R]=a R=m[k[1009575+-1009571]]b=m[k[-735468+735470]]s=T(552076-580856)C=m[k[117940-117937]]y=-444262+6713740858268 J=C(c,y)a=b[J]W=R[a]c=T(-817555-(-788776))b=m[k[491944+-491942]]y=119773+25340109331002 C=m[k[679118+-679115]]J=C(c,y)a=b[J]r=-257010+23761307113258 C=m[k[-165340+165344]]c=m[k[-992892+992894]]y=m[k[-539085-(-539088)]]e=y(s,r)J=c[e]b=C[J]R=T(-431543-(-402797))R=W[R]R=R(W,a,b)R={}W=Q[T(230+-29194)]else j=33667295761844-(-1009545)W=16108050-375773 J=m[a]y=m[k[-1043920-(-1043921)]]e=m[k[-363608-(-363610)]]r=T(-944298+915222)s=e(r,j)c=y[s]s=T(852372-881211)C=J[c]c=m[k[-210158-(-210159)]]r=10504+32319100998081 y=m[k[1035924-1035922]]e=y(s,r)J=c[e]y=m[k[-873553-(-873554)]]r=T(-520353-(-491388))j=15977237751585-(-931310)e=m[k[459640-459638]]s=e(r,j)c=y[s]C[J]..=c end else if W&lt;-941750+4501128 then s=T(415547+-444318)r=-13228+20179152312416 c=m[k[283654-283653]]y=m[k[28003+-28001]]e=y(s,r)s=T(-657787-(-628988))J=c[e]C=a[J]r=-62874+360152544833 c=m[k[885879+-885878]]y=m[k[101672-101670]]e=y(s,r)J=c[e]R=C[J]J=m[k[-812390-(-812391)]]e=T(-468854+439805)c=m[k[688234-688232]]s=320233+33828074871455 y=c(e,s)C=J[y]W=R[C]y=T(920350-949303)C=m[k[410132+-410131]]e=998668+7856687698238 J=m[k[-672607-(-672609)]]c=J(y,e)R=C[c]J=m[k[-365843-(-365844)]]c=m[k[-257203-(-257205)]]e=T(-315772+286921)s=23778075487544-(-622088)y=c(e,s)C=J[y]W[R]=C W=-608832+3704393 else o=T(-125635+96846)I=Q[o]W=298643-(-237537)o=T(278664-307702)M=I[o]r=M end end else if W&lt;4485450-705390 then if W&lt;2632774-(-984007)then R={}W=Q[T(925486-954522)]else a=f()m[a]=w[1048328-1048327]W=m[a]b=m[k[-982485-(-982486)]]c=T(5339+-34120)y=6923865533947-778595 s=T(441289+-470270)C=m[k[-639954-(-639956)]]J=C(c,y)r=438086+8650202325110 R=b[J]o=-629158+22915644818260 C=m[a]c=m[k[-360722-(-360723)]]y=m[k[147022+-147020]]e=y(s,r)J=c[e]b=C[J]c=m[k[664635+-664634]]s=T(-266435-(-237538))r=16201902748744-(-1026352)y=m[k[-908092-(-908094)]]C=T(874420+-903478)e=y(s,r)C=b[C]J=c[e]e=29581143218064-(-679486)c=m[k[-1015158+1015161]]s=T(-1016778+987877)y=T(-606000+577079)C=C(b,J,c)W[R]=C R=m[a]C=m[k[363546+-363545]]J=m[k[-222984-(-222986)]]c=J(y,e)b=C[c]W=R[b]b=m[k[132748+-132747]]c=T(-116802-(-87900))C=m[k[129249-129247]]y=29920085499907-600471 J=C(c,y)I=T(-991997+962955)R=b[J]C=W e=Q[s]r=m[k[-338721-(-338722)]]j=m[k[-242033-(-242035)]]M=j(I,o)s=r[M]y=e[s]M=T(414975-443915)I=19736880751213-(-491897)s=m[k[431983-431982]]r=m[k[157056-157054]]j=r(M,I)e=s[j]c=y[e]e=m[k[199970+-199969]]M=-394710+18497020061563 j=T(954353+-983109)s=m[k[40164+-40162]]r=s(j,M)y=e[r]J=c[y]b=J W=J and 782564+15927792 or 886732+15334790 end else if W&lt;-243339+4089901 then W=12847880-562075 else V=f()z=T(-254014-(-225144))m[V]=N P=-381256+381258 R=Q[z]z=T(-537854-(-508909))W=R[z]E=60757-60657 z=263010+-263009 O=556139+-555884 R=W(z,E)z=f()E=-663344-(-663344)x=-510038-(-510039)m[z]=R q=T(-365893-(-336961))W=m[e]R=W(E,O)E=f()m[E]=R W=m[e]O=-311376-(-311377)X=m[z]B=694043+-694043 R=W(O,X)O=f()m[O]=R R=m[e]X=R(x,P)R=-424778-(-424779)W=X==R P=T(801069+-830071)X=f()F=-874611-(-884611)R=T(-275647+246646)m[X]=W A=Q[q]K=m[e]u={K(B,F)}q=A(Z(u))W=T(-547472+518642)W=U[W]A=T(-112397+83395)l=q..A x=P..l W=W(U,R,x)P=T(163431-192372)x=f()m[x]=W R=Q[P]l=L(6832010-218523,{e,V,j;C,b;i;X,x;z,O,E;r})P={R(l)}W={Z(P)}P=W W=m[X]W=W and 133785+10054214 or 107048+15804876 end end end end end else if W&lt;6150412-(-214473)then if W&lt;4980708-501447 then if W&lt;4218867-(-8702)then if W&lt;-149335+4145501 then if W&lt;3073418-(-917032)then m[b]=N W=m[b]W=W and 13198733-(-153247)or 972496+15224940 else R={}W=Q[T(884540-913308)]end else if W&lt;-982360+5043076 then b=T(-239218+210405)e=T(688694+-717768)R=Q[b]s=28160220214502-(-392787)b=R()J=m[k[444833+-444832]]j=T(-40672+11715)c=m[k[-100099-(-100101)]]y=c(e,s)C=J[y]s=T(281121+-310007)R=a[C]W=b-R b=W c=m[k[977546+-977545]]r=948643+6469078979105 y=m[k[-524333-(-524335)]]e=y(s,r)J=c[e]M=19831087139000-418982 C=a[J]c=m[k[-1003799-(-1003800)]]s=T(-821390+792616)y=m[k[572032+-572030]]r=12465182983106-(-185066)e=y(s,r)J=c[e]e=T(778178+-807246)R=C[J]J=m[k[-348098-(-348099)]]s=23234+34259440984975 c=m[k[-580773+580775]]y=c(e,s)e=-597240+3100981682844 C=J[y]W=R[C]C=m[k[-110779-(-110780)]]y=T(-239433-(-210388))J=m[k[884167+-884165]]c=J(y,e)y=T(-963567+934604)R=C[c]c=Q[y]e=m[k[361454+-361453]]s=m[k[-110220+110222]]r=s(j,M)y=e[r]J=c[y]j=T(-904706-(-875728))M=1230562656293-(-557592)e=m[k[-1043614+1043615]]s=m[k[390877+-390875]]r=s(j,M)j=-148679+15603758424361 y=e[r]r=T(403801-432657)c=J(y,b)y=m[k[949219-949218]]e=m[k[-597887-(-597889)]]s=e(r,j)J=y[s]C=c..J W[R]=C c=m[k[689794+-689793]]y=m[k[-604310+604312]]s=T(800448+-829310)r=-510312+6745526670765 e=y(s,r)r=127315+26117077941806 J=c[e]C=a[J]s=T(582315+-611226)c=m[k[-125093-(-125094)]]y=m[k[-321180-(-321182)]]e=y(s,r)J=c[e]R=C[J]e=T(-261011+232146)s=531454+14120144879025 J=m[k[-923655-(-923656)]]c=m[k[699878-699876]]y=c(e,s)C=J[y]y=T(-23658-5338)W=R[C]s=-154089+3506446737481 C=m[k[221820+-221819]]J=m[k[772322+-772320]]e=634940+12486528886394 c=J(y,e)R=C[c]J=m[k[259154+-259153]]e=T(-125054-(-96195))c=m[k[-849868+849870]]y=c(e,s)C=J[y]W[R]=C R=862099+-862092 W=b&gt;R W=W and 2753660-(-761661)or-339451+3435012 else W=13587461-278274 C=m[k[111950-111944]]b=C==a R=b end end else if W&lt;987974+3290425 then if W&lt;466310+3773369 then u=-31248+31250 K=P[u]u=m[x]q=K==u W=155547+10774200 l=q else W=R and 11485878-(-266653)or 17953+9663924 end else if W&lt;707160+3675762 then B=682301+-682300 m[b]=l u=m[O]K=u+B q=P[K]A=M+q q=631833-631577 W=A%q M=W K=m[E]q=I+K K=-231331+231587 W=4698+12025555 A=q%K I=A else W=m[e]H=237272-237266 d=-81392-(-81393)Y=W(d,H)W=T(-558747-(-529736))H=T(571711-600722)Q[W]=Y d=Q[H]H=559601-559599 W=d&gt;H W=W and 9147636-(-663502)or-140744+10347379 end end end else if W&lt;4713082-(-370387)then if W&lt;758811+4031478 then if W&lt;4643330-(-60111)then Y=18167165356078-(-137437)c=C W=f()m[W]=y M=m[a]o=m[k[94982-94980]]N=T(-154213-(-125201))U=m[k[780922+-780919]]y=W i=U(N,Y)I=o[i]N=22504089088394-(-816997)j=M[I]i=T(-617988+589014)I=m[k[-523105-(-523107)]]o=m[k[292417+-292414]]U=o(i,N)M=I[U]r=j[M]i=898475+10857792937493 U=T(379518-408591)M=m[k[-148972-(-148974)]]I=m[k[-373734-(-373737)]]o=I(U,i)j=M[o]s=r[j]j=m[k[-862466+862468]]U=-624823+8268198500289 o=T(364702+-393537)M=m[k[1040143+-1040140]]I=M(o,U)r=j[I]e=s[r]Y=T(-986874-(-957868))I=T(24514-53549)r=m[k[982642-982640]]j=m[k[-430535-(-430538)]]o=353729+13848513606511 M=j(I,o)s=r[M]M=T(-586496-(-557567))W=e[s]U=T(179766-208803)e=T(-963045+934294)e=W[e]e=e(W)I=725167+3607204951520 s=m[k[-130453+130455]]r=m[k[-886041+886044]]j=r(M,I)d=20492074453584-(-793334)W=s[j]s=true e[W]=s M=T(-900387-(-871516))s=m[k[-364363-(-364365)]]I=27785491181784-(-590258)r=m[k[137602-137599]]j=r(M,I)W=s[j]i=155183+8048971411573 r=m[y]M=m[k[-647652+647654]]I=m[k[1040525-1040522]]o=I(U,i)j=M[o]M=T(-438737+409681)I=-1001254+5629288845667 s=r[j]e[W]=s s=m[k[-824307+824309]]r=m[k[-604141-(-604144)]]j=r(M,I)W=s[j]I=m[a]U=m[k[-699254+699256]]i=m[k[-460738-(-460741)]]N=i(Y,d)o=U[N]M=I[o]Y=21079983964480-(-1008920)o=m[k[-837936-(-837938)]]N=T(843045-871852)U=m[k[-709132+709135]]i=U(N,Y)c=nil I=o[i]i=T(-673128+644100)j=M[I]N=895900+10827287554069 I=m[k[-1009236-(-1009238)]]o=m[k[125915-125912]]U=o(i,N)M=I[U]r=j[M]M=m[k[-832292-(-832294)]]I=m[k[-313812-(-313815)]]U=T(769608+-798405)i=32606212461220-1005397 o=I(U,i)j=M[o]s=r[j]I=T(-531476+502593)e[W]=s r=m[k[290038+-290036]]j=m[k[-165282+165285]]o=-915990+8373995784529 M=j(I,o)s=r[M]r=G(-963095+13311455,{k[-650448+650452];k[-800000+800002];k[-298088+298091],a;y})W=e[s]y=S(y)e=nil s=T(-151731-(-122798))s=W[s]s=s(W,r)W=-227950+10924710 else A=W u=607341-607340 K=P[u]u=false q=K==u W=q and 3782530-(-453780)or 10905255-(-24492)l=q end else if W&lt;-498137+5420943 then e=nil J=nil W=-859115+13144920 y=nil else y=T(-48944-(-19922))e=12573741663304-1043817 C=m[k[-173560+173561]]J=m[k[352375+-352373]]c=J(y,e)b=C[c]y=T(-991123+962077)R=a[b]e=6059007393656-521331 C=m[k[-831871-(-831872)]]J=m[k[204457-204455]]c=J(y,e)b=C[c]c=T(-389326-(-360433))y=23057994917940-(-131517)W=R[b]b=m[k[-746465+746466]]C=m[k[85245+-85243]]J=C(c,y)R=b[J]b=false W[R]=b W=10817177-(-777814)end end else if W&lt;6182108-398191 then if W&lt;866004+4569210 then Y=M==I W=-666516+4555607 N=Y else M=m[k[875005-875004]]i=785721+9260281090975 U=T(-908893+879947)I=m[k[-628390+628392]]o=I(U,i)j=M[o]W=914746-101562 s=j end else if W&lt;-321972+6234117 then b=m[k[-901687+901691]]s=78601+2491424641407 J=m[k[-886408+886410]]c=m[k[-41524+41527]]e=T(-847865-(-818991))y=c(e,s)C=J[y]e=15573634419228-896456 a=b[C]y=T(254941+-283988)C=m[k[399454+-399452]]J=m[k[506090-506087]]c=J(y,e)b=C[c]R=a[b]b=m[k[-770709-(-770711)]]s=5812623490677-(-887837)c=T(-444783-(-415860))y=23988964211989-(-880269)C=m[k[-856536-(-856539)]]J=C(c,y)a=b[J]c=724602+1919007634691 W=R[a]a=m[k[-1001182-(-1001184)]]J=T(593188-622154)b=m[k[-244302-(-244305)]]e=21027377202685-(-41026)C=b(J,c)R=a[C]a=false W[R]=a a=m[k[119673-119669]]y=T(582590+-611599)C=m[k[574630-574628]]J=m[k[-761256-(-761259)]]c=J(y,e)b=C[c]R=a[b]b=m[k[-656476+656478]]C=m[k[-108995+108998]]y=-266248+31353376540944 c=T(884299+-913261)J=C(c,y)a=b[J]c=57740+26800218754867 W=R[a]a=m[k[158121-158119]]J=T(-370268+341400)b=m[k[-49170-(-49173)]]C=b(J,c)R=a[C]a=true W[R]=a b=m[k[1011801+-1011797]]J=m[k[810280+-810278]]c=m[k[-402444-(-402447)]]e=T(924875+-953700)y=c(e,s)C=J[y]e=-380578+14342672328888 a=b[C]C=m[k[-949198-(-949200)]]y=T(-167922+138979)J=m[k[-509653+509656]]c=J(y,e)b=C[c]c=T(-428780-(-399803))R=a[b]b=m[k[255737+-255735]]C=m[k[526601-526598]]y=23918187366783-908798 J=C(c,y)a=b[J]J=T(372440+-401248)W=R[a]a=m[k[1031638+-1031636]]y=-397693+17777281872339 b=m[k[53637-53634]]c=-963729+5126579731940 C=b(J,c)R=a[C]b=m[k[-217627+217629]]c=T(1045325+-1074280)C=m[k[-285407+285410]]J=C(c,y)a=b[J]W[R]=a W=Q[T(698555-727472)]R={}else R=m[k[-463754+463755]]b=m[k[-707868+707870]]y=2243580714510-(-173574)c=T(172418-201175)C=m[k[848524+-848521]]J=C(c,y)a=b[J]W=R[a]a=m[k[-438799-(-438803)]]R=W(a)R={}W=Q[T(-10852+-18052)]end end end end else if W&lt;-330708+8208808 then if W&lt;6344301-(-606451)then if W&lt;7285888-555379 then if W&lt;6234729-(-203033)then m[b]=R W=12861502-831249 else J=692878-692877 c=-645215-(-645217)b=m[k[2800-2799]]C=b(J,c)b=368000+-367999 a=C==b W=a and 12001579-306212 or 48213-(-827372)R=a end else if W&lt;6667747-(-95253)then W=m[k[-578950+578957]]W=W and 9924382-461494 or 10597693-(-201913)else J=T(-590174-(-561348))W=m[k[-827757-(-827761)]]e=T(-155185+126416)a=m[k[-131614-(-131616)]]c=23718366336724-(-250960)b=m[k[-107834-(-107837)]]C=b(J,c)M=11829990494141-(-181703)R=a[C]s=19503857609059-1033705 b=m[k[1016066+-1016061]]J=m[k[-17647-(-17649)]]c=m[k[-199105-(-199108)]]j=12444132023434-(-653848)y=c(e,s)C=J[y]s=-1032260+3226930382370 a=b[C]W[R]=a b=m[k[449222-449218]]J=m[k[-897091-(-897093)]]c=m[k[203755+-203752]]o=T(-731030-(-702122))e=T(299143+-328193)y=c(e,s)C=J[y]e=272985+26920075134622 a=b[C]C=m[k[159971-159969]]J=m[k[89040-89037]]y=T(923350-952250)c=J(y,e)b=C[c]s=T(155045-183925)c=T(-962308-(-933507))R=a[b]b=m[k[-216718+216720]]y=-29717+2486650009754 C=m[k[801561+-801558]]J=C(c,y)a=b[J]W=R[a]a=m[k[-851863+851865]]J=T(-193281+164533)c=-632032+25731019887533 b=m[k[312988+-312985]]C=b(J,c)R=a[C]a=false r=2593496243232-(-911511)W[R]=a C=m[k[-694960-(-694964)]]c=m[k[-594173+594175]]y=m[k[385896-385893]]e=y(s,r)J=c[e]b=C[J]e=T(957267+-986320)J=m[k[1004084+-1004082]]s=10754846961669-(-893835)c=m[k[261601-261598]]y=c(e,s)C=J[y]y=T(421824+-450889)a=b[C]e=791569+4395160318957 C=m[k[-729051+729053]]J=m[k[-414144-(-414147)]]c=J(y,e)b=C[c]c=T(867705+-896490)R=a[b]y=-865543+6200703696974 b=m[k[181953+-181951]]C=m[k[457165-457162]]J=C(c,y)a=b[J]W=R[a]J=T(-703612-(-674810))c=-211912+3355967734242 r=T(-1069497-(-1040419))a=m[k[285284+-285282]]b=m[k[280757-280754]]C=b(J,c)R=a[C]b=W J=m[k[838971-838967]]y=m[k[93934+-93932]]U=23848041822009-(-963624)i=22657279546162-420348 e=m[k[197455-197452]]s=e(r,j)c=y[s]C=J[c]e=m[k[-254685-(-254687)]]j=T(856093+-884996)s=m[k[548024-548021]]r=s(j,M)y=e[r]J=T(953685-982646)s=m[k[-469377-(-469381)]]j=m[k[-946516-(-946518)]]M=m[k[670115-670112]]I=M(o,U)U=278901+33524117371781 o=T(-784953+756194)r=j[I]J=C[J]e=s[r]j=m[k[-962516-(-962518)]]M=m[k[253550-253547]]I=M(o,U)r=j[I]U=T(93298+-122244)s=T(-1011991+983161)s=e[s]M=m[k[-87767-(-87769)]]I=m[k[-921291-(-921294)]]o=I(U,i)j=M[o]s=s(e,r,j)c=y..s J=J(C,c)W=J and 2531047-(-752161)or-371497-(-562027)a=J end end else if W&lt;7398268-126950 then if W&lt;160326+7108236 then j=14732908268667-291247 r=T(64394+-93321)J=m[k[364792+-364791]]y=m[k[97462+-97460]]e=m[k[-323360-(-323363)]]s=e(r,j)c=y[s]C=J[c]r=22731019899349-(-644995)c=m[k[-901257+901259]]s=T(-199255-(-170186))y=m[k[-555565-(-555568)]]e=y(s,r)J=c[e]b=C[J]s=21197981989103-(-60832)J=m[k[312562-312560]]e=T(-284633+255643)c=m[k[-82129+82132]]y=c(e,s)C=J[y]e=18826564385321-448491 R=b[C]y=T(-804097-(-775198))C=m[k[824972-824970]]J=m[k[834308+-834305]]c=J(y,e)b=C[c]W=R[b]b=m[k[-496965+496967]]c=T(852645-881486)C=m[k[426646-426643]]y=22871598471703-602237 J=C(c,y)R=b[J]b=m[k[432159+-432155]]W[R]=b R=m[k[-354226-(-354232)]]C=m[k[-956848-(-956850)]]e=-977184+7542620714712 y=T(-220496-(-191743))J=m[k[-471142+471145]]c=J(y,e)b=C[c]W=R[b]b=m[k[-326390-(-326391)]]R=W(b)W=-957773+12643444 else N=N+d R=N&lt;=Y V=not H R=V and R V=N&gt;=Y V=H and V R=V or R V=4621954-745263 W=R and V R=9196678-820833 W=W or R end else if W&lt;5229+7484175 then y=T(-923341-(-894474))e=92362+31816273170709 C=m[k[956357-956356]]J=m[k[621934-621932]]c=J(y,e)b=C[c]R=a[b]W=not R W=W and-688559+11531176 or-55930+5088376 else s=T(451463+-480401)c=m[k[-427958+427959]]r=-978206+10476218269740 y=m[k[-417299-(-417301)]]e=y(s,r)J=c[e]s=T(426495-455470)C=a[J]c=m[k[910605+-910604]]r=21484045942434-(-239730)y=m[k[171134+-171132]]e=y(s,r)J=c[e]e=T(-788184+759199)s=5875716779399-90839 b=C[J]J=m[k[1038529-1038528]]c=m[k[-193117-(-193119)]]y=c(e,s)C=J[y]y=T(-659308-(-630546))R=b[C]C=m[k[-986082-(-986083)]]J=m[k[46334-46332]]e=222747+1022864219073 c=J(y,e)b=C[c]y=-630325+24077543967232 W=R[b]b=m[k[752119-752118]]c=T(310470-339483)C=m[k[-119976-(-119978)]]J=C(c,y)R=b[J]b=m[k[-822751-(-822754)]]W[R]=b W=-52438+2539765 end end end else if W&lt;8512258-262565 then if W&lt;7086200-(-1035578)then if W&lt;-1018698+9035493 then C=m[k[1024528+-1024527]]y=T(-1030486+1001463)a=w[618004+-618003]e=-304998+24987159188697 J=m[k[110021+-110019]]c=J(y,e)s=6099220793525-392605 b=C[c]e=T(-217228-(-188279))R=a[b]J=m[k[-768433-(-768434)]]c=m[k[-625308-(-625310)]]b=T(-777318+748541)b=R[b]y=c(e,s)C=J[y]b=b(R,C)W=not b W=W and 16587845-944147 or 8193893-922451 else o=-317550+31240646316353 C=m[k[860910+-860905]]s=T(-745587-(-716675))I=T(69714+-98531)e=Q[s]r=m[k[393631-393629]]j=m[k[996605+-996602]]M=j(I,o)W=880047+8246135 s=r[M]y=e[s]M=T(-96178-(-67321))s=m[k[855899+-855897]]I=15870875150904-(-864934)r=m[k[-827577+827580]]j=r(M,I)e=s[j]J=T(-691733-(-662714))J=C[J]c=y[e]J=J(C,c)R=J end else if W&lt;9016221-812071 then o=not I j=j+M s=j&lt;=r s=o and s o=j&gt;=r o=I and o s=o or s o=8298925-(-698009)W=s and o s=4763117-(-120717)W=W or s else e=-14364-(-14619)j=1046892-1046891 c=-367089+35184372455921 W={}m[k[860401+-860399]]=W R=m[k[12357+-12354]]J=R R=b%c m[k[-819550-(-819554)]]=R y=b%e e=-877869-(-877871)c=y+e m[k[21992-21987]]=c s=T(322370+-351333)W=387046+7753768 e=Q[s]M=j s=T(1010040+-1038950)y=e[s]e=y(a)y=T(-711626-(-682680))C[b]=y j=268515-268515 I=M&lt;j y=-792381-(-792417)s=57993-57992 j=s-M r=e end end else if W&lt;8892287-514030 then if W&lt;-438994+8811050 then R=-229810+2922308 C=8219474-(-298795)b=T(-860896-(-832001))a=b^C W=R-a R=T(538714-567753)a=W W=R/a R={W}W=Q[T(-603846+574983)]else Y=m[b]W=Y and-872493+6270322 or 780745+3108346 N=Y end else if W&lt;-113434+8570235 then W=true R={}m[k[-495326+495327]]=W W=Q[T(-260007+231149)]else U={}i=f()q=nil z=T(596690+-625494)E={}s=nil M=nil H=h(1224037-482778,{i;r;j,c})m[i]=U e=nil y=nil U=f()V=f()m[U]=H C=nil y=T(-958148-(-929334))H={}m[V]=H X=T(178284-207339)H=Q[z]P=T(-267818+239036)x=m[V]O={[X]=x;[P]=q}c=S(c)z=H(E,O)H=v(633266+9450880,{V;i,I;r;j,U})c=f()m[b]=z o=nil m[J]=H I=S(I)r=S(r)E=19969618393826-(-846193)i=S(i)j=S(j)V=S(V)U=S(U)C={}m[c]=C i=7199638073280-(-580952)U=T(286251-315186)j=T(-591014+562113)C=Q[y]r=Q[j]M=m[b]I=m[J]o=I(U,i)i=T(667374+-696115)V=-54189+7364411236626 j=M[o]o=T(237961+-266797)O=T(-164862-(-135833))s=r[j]H=34611955915468-187351 j=m[b]M=m[J]U=-656113+21306135439794 I=M(o,U)r=j[I]M=T(-400424+371523)e=s[r]y=C(e)C=f()e=T(343653+-372467)m[C]=y y=Q[e]j=Q[M]I=m[b]o=m[J]U=o(i,H)M=I[U]U=T(633343-662198)r=j[M]M=m[b]i=5453744575516-854577 I=m[J]o=I(U,i)j=M[o]s=r[j]e=y(s)y=f()s=T(-790535-(-761721))m[y]=e H=T(280573+-309320)I=T(-442861-(-413960))e=Q[s]M=Q[I]o=m[b]U=m[J]i=U(H,V)H=-488839+24881210942153 I=o[i]j=M[I]I=m[b]o=m[J]i=T(-405153-(-376165))U=o(i,H)V=T(841688+-870540)M=I[U]r=j[M]s=e(r)e=f()o=T(193013-221914)r=T(371334+-400148)W=Q[T(950235-979123)]m[e]=s s=Q[r]I=Q[o]U=m[b]i=m[J]H=i(V,E)o=U[H]q=175908+20634019804772 V=18173668570816-808370 H=T(-703121+674123)M=I[o]o=m[b]U=m[J]i=U(H,V)I=o[i]j=M[I]r=s(j)j=T(-123735-(-94985))s=f()i=T(-798740-(-769706))m[s]=r r=Q[j]I=m[b]H=32302340702288-968079 o=m[J]U=o(i,H)j=T(443598-472642)j=r[j]M=I[U]j=j(r,M)r=f()m[r]=j M=m[b]I=m[J]U=T(-859692-(-830746))V=34984552404094-169180 H=3434610328276-801941 i=224138+34498326270774 o=I(U,i)j=M[o]M=f()m[M]=j i=T(-117443-(-88665))I=m[b]o=m[J]U=o(i,H)P=T(-658091-(-629328))j=I[U]I=f()m[I]=j H=T(647003+-675888)o=m[b]X=-785683+14377278592825 U=m[J]i=U(H,V)j=o[i]o=f()m[o]=j i=T(973636-1002696)U=Q[i]H=m[b]V=m[J]E=V(O,X)i=H[E]j=U[i]E=T(156754+-185666)V=Q[E]O=m[b]X=m[J]x=X(P,q)E=O[x]H=V[E]E=m[b]P=-232045+3201709051967 x=T(-805534-(-776681))O=m[J]X=O(x,P)x=-725437+725737 V=E[X]O=470622-469822 i=H[V]X=1013462-1013082 V=false H=false E=-357293+357763 U=j(i,H,V,E,O,X,x)j=f()m[j]=U i=m[c]H=T(-455471+426651)U=g(9014825-(-109007),{y;b;J,s})i[H]=U H=T(61139-89891)i=m[c]U=h(1209753-(-431446),{b,J,o;I})i[H]=U i=m[c]U=g(517116+3249357,{b;J;j;C;c;e;M,r})H=T(334362+-363185)i[H]=U H=T(517375-546186)U=h(-401869+8312079,{b,J;e})i=m[c]i[H]=U U=m[c]R={U}end end end end end end else if W&lt;12236994-(-407603)then if W&lt;11146920-328065 then if W&lt;644999+9432020 then if W&lt;8432253-(-740138)then if W&lt;-691098+9739244 then if W&lt;-41041+8911742 then y=m[k[869820+-869819]]r=T(35198-63993)j=21745301788776-(-921381)e=m[k[654787-654785]]s=e(r,j)c=y[s]J=a[c]y=m[k[-57948+57949]]r=T(-960040-(-931231))j=28016059560804-(-196497)e=m[k[-605593+605595]]s=e(r,j)r=18167541060233-(-970370)c=y[s]C=J[c]c=m[k[-891726-(-891727)]]y=m[k[680754-680752]]s=T(-335404+306436)e=y(s,r)J=c[e]e=T(953628-982373)R=C[J]J=m[k[696838-696837]]s=20820372150007-520472 c=m[k[-396529-(-396531)]]y=c(e,s)s=2814256471986-(-189804)C=J[y]e=559508+31117040283398 W=R[C]C=m[k[-709357+709358]]y=T(386311+-415060)J=m[k[963389+-963387]]c=J(y,e)e=T(-540386-(-511327))R=C[c]J=m[k[-87024+87025]]c=m[k[-215048+215050]]y=c(e,s)C=J[y]W[R]=C W=-393504+13864577 else s=j d=T(-125254+96291)Y=Q[d]d=T(-998156+969161)N=Y[d]Y=N(a,s)N=m[k[-457465-(-457471)]]d=N()W=9061134-920320 i=Y+d U=i+y i=48229-47973 o=U%i i=C[b]d=815332+-815331 s=nil y=o Y=y+d N=J[Y]U=i..N C[b]=U end else if W&lt;313845+8811505 then a=f()m[a]=w[-972574+972575]R=T(909956-938898)W=Q[R]J=m[k[761251-761250]]c={W(J)}W=-607269+11304029 R=c[388297-388296]b=c[-114324-(-114326)]J=R C=c[-908198+908201]else W=b W=not R W=W and-857898+7849465 or 10869427-(-816244)end end else if W&lt;-368544+9941680 then if W&lt;-292916+9694389 then i=#o H=157867+-157867 U=i==H W=U and 9380016-693268 or 15401180-35939 else C=963412+-963412 a=T(-1028355+999509)W=Q[a]b=m[k[817924-817916]]a=W(b,C)W=10103843-(-695763)end else if W&lt;467477+9315938 then R={}W=a a=nil m[k[-921774+921778]]=W W=Q[T(-1010507-(-981667))]else d=T(-404273-(-375341))V=T(759901-788941)W=Q[d]H=Q[V]d=W(H)W=T(-670503-(-641492))Q[W]=d W=-864562+12988296 end end end else if W&lt;11177389-826885 then if W&lt;10567015-369543 then if W&lt;-784628+10873735 then b=w[261939-261937]a=w[252019+-252018]W=m[k[1043683+-1043682]]C=W W=C[b]W=W and 3274079-(-532135)or 7837517-(-400726)else l=m[b]R=l W=l and-17552+4770287 or 6265184-(-119818)end else if W&lt;-1039440+11315538 then H=T(-1010089-(-981078))W=Q[H]H=T(-974041-(-945001))Q[H]=W W=115468+12008266 else y=T(535449+-564466)a=m[k[99723-99722]]e=9499959214400-(-4103)C=m[k[305746+-305744]]J=m[k[-234367-(-234370)]]c=J(y,e)b=C[c]R=a[b]b=m[k[-194193+194195]]y=16731160842333-(-216594)C=m[k[275431-275428]]c=T(-443849+414863)J=C(c,y)a=b[J]W=R[a]J=T(-368068+339053)a=m[k[-1037268-(-1037270)]]c=3410345716303-680987 b=m[k[-895667-(-895670)]]C=b(J,c)R=a[C]a=false W[R]=a R={}W=Q[T(-783769-(-754905))]end end else if W&lt;10464309-(-163012)then if W&lt;11262402-868039 then V=835750+13182745040724 y=r M=T(768661-797412)Y=323149+16208429575982 N=T(-772644+743696)M=j[M]M=M(j)H=T(-993288+964291)o=m[k[-175719-(-175720)]]W=761369+13097646 U=m[k[774152+-774150]]i=U(N,Y)j=nil I=o[i]y=nil U=m[a]N=m[k[-332798+332799]]Y=m[k[-796049-(-796051)]]d=Y(H,V)i=N[d]o=U[i]M[I]=o M=nil else W=true W=W and-455870+3487507 or 2787582-(-807639)end else if W&lt;11492346-742357 then C,y=J(b,C)W=C and 850702+3635997 or 2909542-(-238302)else W={}C=m[k[-575725+575734]]a=W b=666094+-666093 J=C W=248088+12694265 C=-282198-(-282199)c=C C=-848204+848204 y=c&lt;C C=b-c end end end end else if W&lt;296405+11487897 then if W&lt;1042152+10239045 then if W&lt;-501661+11533266 then if W&lt;-62540+10951079 then C=m[k[1014938-1014937]]e=267566+7365903284280 J=m[k[315234-315232]]y=T(-99382-(-70382))c=J(y,e)b=C[c]R=a[b]e=-835363+2155495129870 C=m[k[-743734-(-743735)]]J=m[k[578370-578368]]y=T(-703587-(-674737))c=J(y,e)b=C[c]W=R[b]y=-161235+12502777351313 b=m[k[575644+-575643]]C=m[k[96659+-96657]]c=T(-897887-(-869010))J=C(c,y)R=b[J]s=-943865+22098812473131 e=T(-931693+902929)b=true W[R]=b J=m[k[989084+-989083]]c=m[k[71545+-71543]]y=c(e,s)C=J[y]b=a[C]J=m[k[259898-259897]]s=283194+24886514572042 c=m[k[-825746-(-825748)]]e=T(597624+-626389)y=c(e,s)C=J[y]R=b[C]y=T(380927+-409802)e=33700760051357-811344 C=m[k[505506-505505]]J=m[k[839466-839464]]c=J(y,e)y=5741002423324-(-937557)b=C[c]c=T(65685+-94461)W=R[b]b=m[k[641244-641243]]C=m[k[-47644-(-47646)]]J=C(c,y)R=b[J]b=false W[R]=b R={}W=Q[T(224467+-253358)]else R=l W=A W=252902+6132100 end else if W&lt;687582+10501178 then y=m[k[259409-259408]]r=T(-159445-(-130623))e=m[k[90143-90141]]j=22050934955343-111923 s=e(r,j)c=y[s]J=a[c]y=m[k[274734-274733]]j=11536426452933-(-576823)r=T(412744+-441774)e=m[k[220602-220600]]s=e(r,j)c=y[s]s=T(619465+-648516)C=J[c]c=m[k[-951534-(-951535)]]r=9559783663965-841722 y=m[k[526005+-526003]]e=y(s,r)J=c[e]R=C[J]J=m[k[-229555+229556]]s=-628473+12983641435798 e=T(-249044-(-220037))c=m[k[347121+-347119]]y=c(e,s)C=J[y]y=T(113722-142637)W=R[C]e=-175127+25656572615362 C=m[k[-202709-(-202710)]]J=m[k[191123-191121]]c=J(y,e)R=C[c]J=m[k[-887549-(-887550)]]e=T(-484981+456037)c=m[k[81645+-81643]]s=653247+22046311690331 y=c(e,s)C=J[y]W[R]=C W=872096+12598977 else s=T(-827502+798675)c=m[k[284306+-284305]]y=m[k[-368708+368710]]r=7665221066517-(-159452)e=y(s,r)J=c[e]C=a[J]c=m[k[-125934-(-125935)]]s=T(900043+-928827)y=m[k[-793088-(-793090)]]r=-183356+5061897590129 e=y(s,r)J=c[e]R=C[J]s=17340394398294-(-245044)J=m[k[-635967+635968]]c=m[k[-295363+295365]]e=T(598532+-627348)y=c(e,s)C=J[y]e=361852+18488244575269 W=R[C]C=m[k[-760637+760638]]J=m[k[-277346+277348]]s=18224334373682-(-204276)y=T(-921634-(-892815))c=J(y,e)e=T(-444101-(-415121))R=C[c]J=m[k[-556159-(-556160)]]c=m[k[651651+-651649]]y=c(e,s)C=J[y]W[R]=C W=-791254+12629547 end end else if W&lt;11698280-5440 then if W&lt;-626548+12308837 then y=m[k[-318843+318844]]e=m[k[-620111-(-620113)]]j=346805+30321628261490 r=T(-450343+421436)s=e(r,j)c=y[s]J=a[c]y=m[k[-282143-(-282144)]]e=m[k[693687-693685]]j=22861909511844-1008911 r=T(595671-624486)s=e(r,j)c=y[s]r=23417924361722-734050 s=T(402333+-431212)C=J[c]c=m[k[-917890+917891]]y=m[k[-601334-(-601336)]]e=y(s,r)J=c[e]s=26258455253902-975819 b=C[J]J=m[k[807788-807787]]c=m[k[-499011+499013]]r=9377180812066-406036 e=T(932703+-961642)y=c(e,s)e=23759366456615-514544 C=J[y]j=13553516555769-38226 R=b[C]C=m[k[423378+-423377]]J=m[k[-559261-(-559263)]]y=T(-382084-(-353260))c=J(y,e)y=711221+5517999976404 s=T(-177080+148010)b=C[c]W=R[b]c=T(-666747-(-637817))b=m[k[407884-407883]]C=m[k[351100-351098]]J=C(c,y)R=b[J]c=m[k[684245+-684244]]y=m[k[-100926-(-100928)]]e=y(s,r)J=c[e]C=a[J]s=T(79194-108026)c=m[k[943640+-943639]]y=m[k[-65461-(-65463)]]r=26900403733587-(-535707)e=y(s,r)J=c[e]b=C[J]W[R]=b y=m[k[-515030-(-515031)]]r=T(521961+-550766)e=m[k[916596-916594]]s=e(r,j)r=T(-191778-(-162806))c=y[s]J=a[c]y=m[k[-69508-(-69509)]]j=958658+5966930782744 e=m[k[950846-950844]]s=e(r,j)c=y[s]C=J[c]c=m[k[26938+-26937]]r=29192680052201-106704 s=T(324944-353710)y=m[k[866738+-866736]]e=y(s,r)J=c[e]b=C[J]e=T(821723+-850699)s=-25650+10823023736801 J=m[k[345182+-345181]]c=m[k[-318739+318741]]y=c(e,s)C=J[y]e=-36328+13162437207513 R=b[C]y=T(-974629-(-945679))s=477069+3058734398979 C=m[k[-905795-(-905796)]]J=m[k[223859+-223857]]c=J(y,e)b=C[c]W=R[b]e=T(146154+-174985)b=m[k[127978+-127977]]C=m[k[809474-809472]]y=-536794+11429060085156 c=T(907872+-936877)J=C(c,y)R=b[J]J=m[k[605085-605084]]c=m[k[-295063+295065]]y=c(e,s)C=J[y]y=-507083+22662396896772 b=a[C]c=T(-1047877+1018863)W[R]=b b=m[k[793852-793851]]C=m[k[147038-147036]]J=C(c,y)R=b[J]W=a[R]W=W and 4679887-661332 or-365571+14997275 else W=9258813-(-423064)end else if W&lt;12447818-711677 then W=R and 28292+14723724 or 6697392-(-47726)else C=m[k[733945+-733940]]J=T(641082-670101)I=T(841747+-870778)s=T(-129884+100972)e=Q[s]r=m[k[-574980-(-574982)]]j=m[k[-246081+246084]]b=W o=28405927900282-(-327473)M=j(I,o)I=17563116465862-(-307500)s=r[M]y=e[s]s=m[k[228475+-228473]]M=T(-177191+148391)r=m[k[-826093+826096]]j=r(M,I)e=s[j]J=C[J]c=y[e]J=J(C,c)W=J and-850995+9977177 or 1046357+6990150 R=J end end end else if W&lt;788511+11410422 then if W&lt;12065377-(-40280)then if W&lt;12607882-699840 then W=1042363+13589341 b=nil else E=S(E)x=S(x)X=S(X)V=S(V)P=nil z=S(z)O=S(O)W=8176061-904945 end else if W&lt;11539692-(-607429)then W=997989+15092319 else J=m[k[-938718-(-938719)]]y=m[k[824691-824689]]r=T(-88663+59842)e=m[k[272443-272440]]j=15128476911864-879988 s=e(r,j)c=y[s]r=30150576968489-891986 C=J[c]c=m[k[-236299-(-236301)]]y=m[k[2591+-2588]]s=T(-668281-(-639311))e=y(s,r)J=c[e]b=C[J]e=T(-338864-(-309939))s=890543+2304452898178 J=m[k[-531735-(-531737)]]c=m[k[312859+-312856]]y=c(e,s)C=J[y]e=450050+34494780989628 a=b[C]C=m[k[-865409+865411]]r=15487200021286-356091 J=m[k[-581810+581813]]y=T(580000-608783)c=J(y,e)b=C[c]c=T(-475949+447137)R=a[b]y=-1047794+11174634918213 s=T(931373-960262)b=m[k[897387-897385]]C=m[k[-435494-(-435497)]]J=C(c,y)a=b[J]W=R[a]a=W C=T(870990-899757)J=-736110+736109 C=a[C]C=C(a,J)c=m[k[986704+-986702]]y=m[k[421531-421528]]e=y(s,r)J=c[e]b=C==J R=b W=b and 177423+2495399 or-963771+5233804 end end else if W&lt;12677773-343398 then if W&lt;993267+11270586 then j=T(-832027+802989)r=Q[j]R=r W=1684071-(-411399)else R={b}W=Q[T(-894904+866108)]end else if W&lt;792094+11559199 then e=2682830535369-226792 a=m[k[725589-725588]]y=T(-359190+330270)C=m[k[692054-692052]]J=m[k[-917638-(-917641)]]c=J(y,e)b=C[c]R=a[b]a=R()W=not a W=W and 5000518-(-790437)or 6488566-(-370742)else i=i+V U=i&lt;=H E=not z U=E and U E=i&gt;=H E=z and E U=E or U E=-1014802+1773492 W=U and E U=1457456-379837 W=W or U end end end end end else if W&lt;15251540-595693 then if W&lt;13020254-(-490275)then if W&lt;14001614-770245 then if W&lt;13327375-434725 then if W&lt;13223234-446016 then W=true W=W and 17084753-1019953 or-142992+13914620 else R=-574314+574339 W=b&gt;R W=W and 10485236-(-740979)or 357989+11480304 end else if W&lt;12365643-(-822769)then C=C+c b=C&lt;=J e=not y b=e and b e=C&gt;=J e=y and e b=e or b e=17509990-865410 W=b and e b=16330598-231076 W=W or b else W=Q[T(336953+-365945)]C=T(1022229+-1051018)b=Q[C]C=T(-830387-(-801614))a=b[C]C=m[k[197656+-197655]]b={a(C)}R={Z(b)}end end else if W&lt;792642+12542136 then if W&lt;13720582-400857 then m[k[252617+-252612]]=R W=-769874+7514992 a=nil else W=221397+1832434 y=m[c]R=y end else if W&lt;40467+13404506 then W=-826164+1655438 else C=m[k[-65346+65347]]I=608229+15133789868962 J=m[k[896667+-896665]]y=T(246631-275565)e=-279917+16490087670635 c=J(y,e)R=C[c]M=928553+22406463896984 W=a[R]s=T(-450951-(-421935))c=m[k[-762184+762185]]y=m[k[326057-326055]]r=588662+10651352045545 U=19978+11000168826360 R=T(-793498+764752)e=y(s,r)J=c[e]e=m[k[-776062+776063]]j=T(1018501-1047292)o=612236+18508040735262 s=m[k[203954-203952]]r=s(j,M)M=T(-829500+800652)y=e[r]c=a[y]s=m[k[284617-284616]]r=m[k[569139-569137]]j=r(M,I)I=T(635502-664448)e=s[j]y=T(270373+-299203)r=m[k[-979087+979088]]j=m[k[624442+-624440]]M=j(I,o)s=r[M]y=c[y]y=y(c,e,s)C=J..y o=T(510273-539101)j=m[k[-961401+961402]]M=m[k[-383357+383359]]I=M(o,U)U=-563325+4851576299856 o=T(-619814-(-590737))r=j[I]s=a[r]j=m[k[-936069+936070]]M=m[k[-128606+128608]]I=M(o,U)r=j[I]e=s[r]o=-17343+14939723898603 I=T(-703109+674348)r=m[k[43440-43439]]R=W[R]j=m[k[-734170-(-734172)]]M=j(I,o)s=r[M]I=5111872738813-(-799567)M=T(951851-980621)y=e[s]s=m[k[-741882-(-741883)]]r=m[k[668500+-668498]]j=r(M,I)e=s[j]c=y[e]e=m[k[-736484+736485]]j=T(563253-592039)s=m[k[-430753+430755]]M=369476+3946541032425 r=s(j,M)y=e[r]J=c[y]y=T(371632-400558)e=463847+3087438131638 R=R(W,C,J)C=m[k[-565310-(-565311)]]J=m[k[-670395+670397]]c=J(y,e)R=C[c]W=b[R]W=W and 654552+14153187 or 713277+14026224 end end end else if W&lt;-782164+14830324 then if W&lt;14175750-410227 then if W&lt;12964232-(-617017)then W=m[k[-826399-(-826400)]]s=T(584291-613355)a=m[k[-255427-(-255429)]]c=17284448738740-(-410044)b=m[k[-21748-(-21751)]]J=T(886520-915362)C=b(J,c)R=a[C]C=m[k[-700211-(-700212)]]c=m[k[290493-290491]]r=168627+18303098064536 y=m[k[561463-561460]]e=y(s,r)J=c[e]y=328067+3141037999155 b=C[J]a=not b W[R]=a R=m[k[515009+-515008]]b=m[k[556793-556791]]c=T(-1009872+981080)C=m[k[329734+-329731]]J=C(c,y)s=T(664145+-693169)a=b[J]c=T(158134-186888)y=8035516380967-551050 W=R[a]R=T(873175-901921)b=m[k[901492-901490]]C=m[k[-886176+886179]]r=210901+31774123213302 J=C(c,y)a=b[J]C=m[k[515133+-515132]]R=W[R]c=m[k[-704150-(-704152)]]y=m[k[9350-9347]]e=y(s,r)J=c[e]c=T(112099-141059)b=C[J]R=R(W,a,b)y=2292276135422-459219 R=m[k[-461289-(-461293)]]b=m[k[-702682+702684]]C=m[k[-287335-(-287338)]]J=C(c,y)a=b[J]W=R[a]a=m[k[-990279+990280]]R=W(a)W=Q[T(508339+-537338)]R={}else C=-362682+362714 b=m[k[271588+-271585]]a=b%C J=m[k[303167-303163]]M=933357-933344 e=m[k[-604337+604339]]r=-738429+738431 U=m[k[123467-123464]]o=U-a U=-840804+840836 I=o/U j=M-I s=r^j y=e/s s=946039+-946038 c=J(y)J=4294311935-(-655361)C=c%J c=801904-801902 J=c^a b=C/J M=169834-169578 J=m[k[1000504+-1000500]]e=b%s s=4295836261-868965 y=e*s c=J(y)J=m[k[-336740-(-336744)]]y=J(b)C=c+y c=-386703-(-452239)J=C%c e=-651879-(-717415)y=C-J c=y/e r=-490435+490691 e=-281959+282215 y=J%e C=nil W=14099765-910196 s=J-y e=s/r r=-529356-(-529612)s=c%r b=nil a=nil j=c-s r=j/M c=nil j={y,e,s;r}m[k[-128995-(-128996)]]=j J=nil e=nil r=nil s=nil y=nil end else if W&lt;14318608-488401 then W=p(610138-179474,{J})Y={W()}R={Z(Y)}W=Q[T(418610+-447497)]else r,j=e(s,r)W=r and 10716356-352236 or 1880342-(-492519)end end else if W&lt;14001289-(-562539)then if W&lt;14496397-398525 then c=m[k[-471965-(-471966)]]s=T(955417-984207)y=m[k[571997-571995]]r=24902156468174-(-896381)e=y(s,r)J=c[e]s=T(-677056-(-648085))C=a[J]c=m[k[-553656-(-553657)]]r=-822834+31616055461812 y=m[k[454909-454907]]e=y(s,r)J=c[e]e=T(322609-351602)s=-224305+29296077021563 R=C[J]J=m[k[749749+-749748]]c=m[k[-258322-(-258324)]]y=c(e,s)C=J[y]W=R[C]C=m[k[378376-378375]]y=T(1005225-1034091)e=34279338271052-500466 J=m[k[-958188+958190]]c=J(y,e)e=T(-977969+948961)s=23332087732216-929160 R=C[c]J=m[k[353433+-353432]]c=m[k[465840+-465838]]y=c(e,s)C=J[y]W[R]=C W=12379639-(-429273)else b=m[k[852062+-852060]]C=268544-268455 a=b*C b=27039913411935-(-551886)R=a+b a=401878+35184371686954 W=R%a b=-354432+354433 m[k[-535692+535694]]=W a=m[k[342767-342764]]W=-444219+2626297 R=a~=b end else if W&lt;13951857-(-679192)then r=16630563949772-(-610676)c=m[k[-859878+859879]]s=T(-628070-(-599276))y=m[k[-811476+811478]]e=y(s,r)J=c[e]C=a[J]r=5418026426513-874167 c=m[k[760155-760154]]y=m[k[994374+-994372]]s=T(-315599-(-286662))e=y(s,r)J=c[e]b=C[J]s=30278245719974-(-464749)J=m[k[-388988-(-388989)]]e=T(-773771-(-744953))c=m[k[-750590-(-750592)]]y=c(e,s)C=J[y]R=b[C]y=T(-721016+691984)C=m[k[-667763-(-667764)]]e=-92599+19986532175377 J=m[k[592641+-592639]]c=J(y,e)y=-667038+17862158896667 b=C[c]W=R[b]b=m[k[306745-306744]]c=T(549227+-578103)C=m[k[-143275+143277]]J=C(c,y)R=b[J]b=m[k[977076-977072]]W[R]=b W=-299726+2787053 else R=m[k[-650575-(-650578)]]C=m[k[-564612-(-564613)]]J=m[k[-599724-(-599726)]]e=825666+28769453382418 y=T(-491912-(-463152))c=J(y,e)b=C[c]e=T(830944+-859863)W=R[b]J=m[k[-420195+420196]]s=-498308+21546980327861 c=m[k[-518842+518844]]y=c(e,s)C=J[y]b=a[C]R=W(b)C=m[k[-59220+59221]]b=R e=5702359032123-169692 y=T(555538+-584521)J=m[k[557797+-557795]]c=J(y,e)R=C[c]W=b[R]W=W and 9735308-897114 or-462614+11528449 end end end end else if W&lt;-792273+16706640 then if W&lt;-1001158+16356092 then if W&lt;-393493+15197686 then if W&lt;676186+14070111 then s=T(-49795-(-20816))r=201933+6392303630035 c=m[k[797954-797953]]y=m[k[-152023+152025]]e=y(s,r)J=c[e]C=a[J]c=m[k[142154+-142153]]y=m[k[211072+-211070]]r=18732557822892-(-1046119)s=T(946468-975360)e=y(s,r)J=c[e]R=C[J]e=T(-637181-(-608276))J=m[k[-995366+995367]]c=m[k[-112168-(-112170)]]s=8260779840903-(-489855)y=c(e,s)e=-699975+17928731561699 C=J[y]W=R[C]y=T(-803098-(-774080))C=m[k[-67629-(-67630)]]J=m[k[-444933-(-444935)]]c=J(y,e)R=C[c]C=false W[R]=C W=204151+489058 else s=T(-357016+328075)R=T(677955+-707018)W=Q[R]J=T(-633994+605062)r=h(-547509+8797845,{})a=m[k[1046986+-1046982]]C=Q[J]e=Q[s]s={e(r)}e=-536400+536402 y={Z(s)}c=y[e]J=C(c)C=T(339231-368232)b=a(J,C)a={b()}R=W(Z(a))a=R b=m[k[-872313+872318]]R=b W=b and 4519800-318643 or 13782752-473565 end else if W&lt;14880212-70174 then y=m[k[-401850-(-401851)]]I=-1004276+17627948446468 e=m[k[-574988-(-574990)]]j=-434619+12777095198968 r=T(-1022683-(-993845))s=e(r,j)r=T(127208+-156057)j=-323923+9008439148981 c=y[s]J=a[c]y=m[k[-37088+37089]]e=m[k[-878395+878397]]s=e(r,j)c=y[s]s=T(752301-781353)C=J[c]M=T(705110+-734185)c=m[k[-243365+243366]]r=410519+20427832828305 y=m[k[268303-268301]]e=y(s,r)s=-34180+31265339752035 r=-204119+14012915545812 J=c[e]R=C[J]J=m[k[269189-269188]]e=T(-115691+86893)c=m[k[366810-366808]]y=c(e,s)e=782629+27232772620388 C=J[y]W=R[C]C=m[k[345867+-345866]]y=T(-957128+928155)J=m[k[738772+-738770]]s=T(-842417+813493)c=J(y,e)R=C[c]c=m[k[-829605+829606]]y=m[k[627937-627935]]e=y(s,r)J=c[e]s=m[k[-444365-(-444366)]]r=m[k[991750+-991748]]j=r(M,I)I=606742+32935131675090 M=T(-293514-(-264774))e=s[j]y=b[e]s=m[k[1031602+-1031601]]r=m[k[972577+-972575]]j=r(M,I)e=s[j]c=y..e C=J..c s=T(-484375-(-455354))W[R]=C c=m[k[82744-82743]]r=870520+573845092499 y=m[k[-136625+136627]]e=y(s,r)J=c[e]C=a[J]c=m[k[80151+-80150]]s=T(317583+-346574)y=m[k[783937+-783935]]r=794231+10459634300047 e=y(s,r)J=c[e]R=C[J]s=635185+15918301572035 J=m[k[-306409-(-306410)]]e=T(404958-433864)c=m[k[277705+-277703]]y=c(e,s)C=J[y]W=R[C]C=m[k[-17353-(-17354)]]e=759404+21394216833150 J=m[k[-835894+835896]]y=T(-861598+832764)c=J(y,e)R=C[c]C=true W[R]=C W=-9217+702426 else y=T(-580760-(-551808))R=m[a]C=m[k[532538-532537]]J=m[k[401980+-401978]]e=-770277+9010918969673 c=J(y,e)y=26289125620714-904217 b=C[c]c=T(-937911-(-909078))W=R[b]b=m[k[-592823-(-592824)]]C=m[k[-271135+271137]]J=C(c,y)R=b[J]y=T(1043629+-1072551)e=-481405+32092029031133 C=m[k[-785387-(-785388)]]J=m[k[-40488+40490]]c=J(y,e)b=C[c]W[R]..=b W=15514592-(-217685)end end else if W&lt;15926344-222794 then if W&lt;251296+15254766 then i=-529290-(-529291)E=-685656+685657 H=#o U=C(i,H)i=y(o,U)H=m[I]z=i-E V=e(z)H[i]=V i=nil U=nil W=-917000+10179447 else W=Q[T(486872-515717)]R={}end else if W&lt;15472271-(-388904)then d=T(539541-568567)U=T(273129-302030)H=144311+5732212463286 e=T(999853-1028795)y=Q[e]o=Q[U]i=m[k[250905-250904]]N=m[k[-8526+8528]]Y=N(d,H)U=i[Y]Y=T(-567797-(-538884))I=o[U]U=m[k[-726308-(-726309)]]i=m[k[400536+-400534]]d=26883071610260-(-172882)N=i(Y,d)o=U[N]M=I[o]o=m[k[643914-643913]]N=T(231255+-260065)U=m[k[718229-718227]]Y=19366306108171-700369 i=U(N,Y)I=o[i]j=M[I]I=T(-674713+645757)W=13620046-(-238969)I=j[I]M={I(j)}j={y(Z(M))}s=j[-402089-(-402091)]e=j[171146+-171145]r=j[-478896-(-478899)]else A=m[b]l=A W=A and 16617125-151974 or 697907+3599396 end end end else if W&lt;-1002649+17205686 then if W&lt;15112425-(-980761)then if W&lt;15426075-(-640788)then W=-585455+16675763 else W=true W=W and 571669+3900787 or 4980956-985845 end else if W&lt;-739077+16931493 then W=m[k[900781+-900771]]b=m[k[-279254+279265]]a[W]=b W=m[k[66825+-66813]]b={W(a)}W=Q[T(-983355+954351)]R={Z(b)}else W=true W=1001099+12770529 end end else if W&lt;15700059-(-781018)then if W&lt;17393961-1009997 then s=T(-36161-(-7151))c=m[k[-538155+538156]]W=16003651-(-706705)y=m[k[-686717-(-686719)]]r=10018646944072-923407 e=y(s,r)J=c[e]b=J else q=-618055+618056 A=P[q]W=3804734-(-492569)l=A end else if W&lt;16273157-(-434506)then s=-650034-(-650034)W=m[k[-59714+59715]]b=C r=-685573-(-685828)e=W(s,r)a[b]=e W=12054698-(-887655)b=nil else W=C W[R]=b y=T(-231971+203077)R=m[a]e=-494981+33881584175910 C=m[k[819863+-819862]]J=m[k[-543172+543174]]c=J(y,e)b=C[c]c=T(859196+-888094)y=8992963767130-989951 e=18149024392628-(-703311)W=R[b]b=m[k[657323+-657322]]C=m[k[217840+-217838]]J=C(c,y)R=b[J]b=false y=T(-642874-(-613833))W[R]=b R=m[a]C=m[k[201031-201030]]J=m[k[673799+-673797]]c=J(y,e)b=C[c]W=R[b]W=W and-903924+16255642 or 565946+2855748 end end end end end end end end W=#n return Z(R)end,function(Q)for T=-7950-(-7951),#Q,255770-255769 do a[Q[T]]=a[Q[T]]+(988962+-988961)end if w then local W=w(true)local Z=n(W)Z[T(-639789-(-610734))],Z[T(-119365+90484)],Z[T(-214324+185464)]=Q,J,function()return-2640311-763839 end return W else return k({},{[T(-81752-(-52871))]=J,[T(-893292-(-864237))]=Q,[T(825512+-854372)]=function()return 302846+-3706996 end})end end,function(Q,T)local Z=C(T)local w=function(w,k,n)return W(Q,{w,k,n},T,Z)end return w end,function(Q,T)local Z=C(T)local w=function(w,k,n,t)return W(Q,{w;k,n;t},T,Z)end return w end,function(Q,T)local Z=C(T)local w=function(...)return W(Q,{...},T,Z)end return w end,function(Q)local T,W=507092+-507091,Q[-521818-(-521819)]while W do a[W],T=a[W]-(-409986-(-409987)),T+(302538-302537)if 327080-327080==a[W]then a[W],m[W]=nil,nil end W=Q[T]end end,function(Q,T)local Z=C(T)local w=function(w,k,n,t,R,m)return W(Q,{w;k,n,t;R,m},T,Z)end return w end,{},function(Q,T)local Z=C(T)local w=function(w)return W(Q,{w},T,Z)end return w end,function(Q,T)local Z=C(T)local w=function(w,k)return W(Q,{w;k},T,Z)end return w end,function()b=b+(764691+-764690)a[b]=455572-455571 return b end,-773867-(-773867)return(c(599174+190084,{}))(Z(R))end)(getfenv and getfenv()or _ENV,unpack or table[T(155641-184679)],newproxy,setmetatable,getmetatable,select,{...})end)(...)</ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="ModuleScript" referent="RBX36A48B7B3E194B6E958A401BCFCBC3C1">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">WidgetModelSelectFrameOpener</string>
				<string name="ScriptGuid">{20D8A92F-F645-4E42-9826-013CC56F58F1}</string>
				<ProtectedString name="Source">--[[ v1.0.0 https://wearedevs.net/obfuscator ]] return(function(...)local s={&quot;\067\098\115\106&quot;;&quot;\079\048\055\107&quot;,&quot;\074\119\087\076\079\079\105\107\110\105\104\108\072\118\053\090\109\043\112\104\111\065\084\061&quot;,&quot;\090\078\051\082\053\088\061\061&quot;;&quot;\116\077\075\119\109\055\088\073&quot;;&quot;\113\101\112\071\065\082\050\076\056\075\073\056\081\069\122\119\082\087\056\050\099\107\061\061&quot;,&quot;\053\116\122\122\076\121\061\061&quot;;&quot;\047\053\088\105\113\048\090\088\088\071\109\109&quot;;&quot;\050\065\120\076\077\115\048\090\122\117\049\103\069\097\047\108\055\049\068\070\085\065\103\106\072\107\068\071\121\089\080\061&quot;,&quot;\100\079\089\116\113\049\048\047\112\087\067\101\118\077\056\061&quot;;&quot;\043\111\074\086\107\099\106\113&quot;,&quot;\053\082\108\075\112\107\061\061&quot;;&quot;\082\078\050\080\078\115\066\101\106\070\081\103\053\070\067\099&quot;;&quot;\043\103\066\086&quot;;&quot;\053\078\117\065\070\077\073\079&quot;;&quot;\100\076\121\048\078\055\077\122\080\112\067\057\088\108\115\087\086\049\053\052\088\085\069\061&quot;;&quot;\069\075\097\104\120\112\077\070\066\076\082\117\069\088\061\061&quot;,&quot;\104\098\069\112\080\090\120\056\102\103\073\104&quot;,&quot;\084\107\070\122\099\082\057\101\101\043\081\067\052\056\054\066\105\049\121\061&quot;,&quot;\054\097\074\101\099\070\066\122\070\118\100\089&quot;;&quot;\118\078\047\043\080\073\056\071\112\098\108\053&quot;;&quot;\068\053\057\097\049\108\051\104\109\099\070\074&quot;,&quot;\048\109\112\106\069\087\076\087\080\056\043\102\110\109\070\071\076\072\061\061&quot;,&quot;\048\056\083\054\107\078\115\122\077\056\047\056\118\055\065\069\048\121\061\061&quot;,&quot;\077\116\115\075\069\116\115\057\047\049\108\119\112\107\061\061&quot;;&quot;\068\100\056\081\106\120\118\120&quot;;&quot;\112\116\078\122\047\109\048\106&quot;;&quot;\076\049\115\071\047\098\108\057\112\107\061\061&quot;,&quot;\049\106\109\083&quot;;&quot;\074\055\082\057\047\113\080\071\120\072\061\061&quot;;&quot;\111\074\103\080&quot;;&quot;\080\082\077\057\107\049\053\078\118\082\112\043\115\049\052\065&quot;,&quot;\090\078\051\043\112\090\077\122\047\109\055\120\118\109\069\061&quot;;&quot;\053\068\112\043\047\115\055\088\115\068\065\112\115\055\065\115&quot;,&quot;\097\082\083\083\077\069\108\065\097\081\083\117\047\049\108\077&quot;,&quot;\080\116\047\057\097\056\077\119\048\049\108\050\047\056\108\055\077\098\085\061&quot;;&quot;\115\049\106\084\115\070\056\078\069\049\086\080\114\070\071\070\097\056\080\061&quot;;&quot;\122\090\110\043\043\106\088\105\121\052\054\115\084\117\101\117\057\111\056\082\079\098\077\105\111\070\073\057&quot;;&quot;\047\098\086\088\053\098\048\089&quot;;&quot;\065\086\070\052\053\107\061\061&quot;;&quot;\053\116\051\105\053\116\055\075&quot;,&quot;\112\049\071\102\118\068\085\061&quot;,&quot;\067\109\052\070&quot;;&quot;&quot;,&quot;\117\065\116\087\088\105\098\084&quot;;&quot;\072\066\055\097&quot;,&quot;\110\056\083\111\118\070\078\115\076\075\048\057\098\082\122\097\047\049\069\061&quot;;&quot;\048\119\112\088\080\108\048\088\115\109\084\061&quot;,&quot;\097\100\073\051\104\083\105\050&quot;;&quot;\052\109\053\120\053\103\116\084\113\114\072\073\049\088\067\102\114\122\053\102\101\115\105\088\054\099\070\061&quot;;&quot;\105\099\066\114\052\065\104\116&quot;;&quot;\103\081\077\056\101\103\048\070&quot;,&quot;\111\055\065\077&quot;,&quot;\077\117\052\081\087\054\089\054\053\069\090\116\047\087\098\121\098\121\112\100\119\109\117\067\049\121\077\104\099\070\080\061&quot;,&quot;\117\120\121\108\112\074\106\052\117\121\061\061&quot;;&quot;\077\116\115\075\107\116\122\052\118\109\077\057\112\098\084\061&quot;;&quot;\118\055\087\115\097\073\087\074\118\079\116\070\098\085\076\057\117\079\069\061&quot;;&quot;\047\070\075\088\048\081\077\080\050\070\077\102\047\073\065\071\076\114\080\061&quot;,&quot;\109\066\087\067\110\108\080\104&quot;,&quot;\082\105\074\075&quot;;&quot;\101\090\065\106&quot;;&quot;\076\073\083\052\118\082\107\061&quot;,&quot;\047\109\055\120\118\109\069\061&quot;,&quot;\069\070\122\070\114\070\122\109\107\098\043\115\107\078\056\068\077\088\061\061&quot;;&quot;\050\121\082\071\084\069\077\076\077\118\069\119\118\055\119\102\115\109\097\100\051\073\111\070\120\076\119\119\071\108\106\061&quot;,&quot;\068\049\068\099\086\108\081\085&quot;,&quot;\072\086\076\108\082\065\068\047\074\043\089\078\111\043\085\066&quot;;&quot;\114\104\109\078\070\073\090\065\077\054\089\106&quot;;&quot;\069\066\073\050\104\080\054\111\047\072\061\061&quot;;&quot;\114\111\050\079&quot;;&quot;\078\081\115\103\048\043\107\087\051\073\106\073&quot;;&quot;\057\077\107\110\068\101\116\084\119\104\071\057\052\121\066\116\070\072\061\061&quot;,&quot;\119\056\118\117\101\105\104\116\065\110\043\083\050\108\102\115&quot;;&quot;\076\116\115\075\047\090\065\104\118\098\115\105\047\115\051\049\076\049\055\043\112\107\061\061&quot;;&quot;\118\081\085\061&quot;,&quot;\077\109\115\087\047\073\083\102\110\107\061\061&quot;,&quot;\067\049\112\114\106\070\112\079&quot;,&quot;\050\056\108\043\112\055\077\057\115\082\122\049\097\098\122\070\114\072\061\061&quot;;&quot;\107\116\051\105\118\049\115\119\047\072\061\061&quot;,&quot;\076\116\115\075\118\098\115\075\053\090\077\122\053\049\071\108&quot;;&quot;\115\068\047\105\048\073\115\117\076\108\052\081\098\108\055\043\115\114\085\061&quot;;&quot;\066\065\070\106\051\097\116\080\081\053\114\104\099\109\085\066\078\114\102\052\104\086\112\101&quot;;&quot;\087\105\049\111\053\121\083\120\088\108\082\121\115\107\061\061&quot;,&quot;\053\117\103\097&quot;;&quot;\087\072\082\085&quot;;&quot;\051\113\047\069\076\098\121\114&quot;;&quot;\076\068\077\057\097\098\086\082&quot;;&quot;\112\116\055\043\112\107\061\061&quot;;&quot;\078\116\106\072\105\106\072\067\052\101\079\052\069\114\056\069&quot;,&quot;\101\075\108\056\101\090\085\049\073\117\087\113&quot;;&quot;\110\109\083\122\069\070\121\068\050\081\065\109\107\108\052\085\050\082\069\061&quot;;&quot;\097\054\113\109\081\065\102\116&quot;;&quot;\084\052\072\103\047\049\118\109\048\104\098\051\047\086\066\073\118\055\087\055\102\083\088\061&quot;,&quot;\112\084\067\069\089\055\101\107\082\050\107\111&quot;;&quot;\051\097\105\117\118\072\104\099&quot;;&quot;\118\109\115\105&quot;,&quot;\122\116\078\075\115\119\115\104\057\071\047\097\119\072\072\114\120\107\061\061&quot;;&quot;\103\087\098\068\069\111\110\115\050\103\108\100\076\051\115\055\048\099\098\078\107\107\061\061&quot;,&quot;\114\098\055\089\050\069\112\098\118\087\056\086\080\056\112\084\115\078\076\061&quot;,&quot;\107\098\055\078\080\098\112\109\110\108\122\082\114\075\077\108\048\108\106\061&quot;,&quot;\054\073\073\075&quot;;&quot;\090\078\051\066\112\098\084\061&quot;,&quot;\071\079\050\122\066\053\110\114\052\073\110\121\077\054\049\082\108\108\108\088\056\072\061\061&quot;,&quot;\086\088\118\097\111\072\109\090\048\056\051\067&quot;,&quot;\076\090\109\055\102\071\047\086\105\084\100\111\086\118\117\110\121\076\065\099\080\103\067\048\056\066\111\065&quot;;&quot;\051\054\106\101&quot;;&quot;\090\113\089\106\108\067\080\109\073\088\061\061&quot;;&quot;\084\071\118\047\089\117\121\099\049\098\117\101\099\078\077\084\073\085\120\115\112\078\088\061&quot;;&quot;\080\098\051\068\053\108\048\069\098\073\115\075\080\087\108\102\048\088\061\061&quot;,&quot;\112\068\048\078\053\121\061\061&quot;;&quot;\097\090\065\122\097\090\083\087&quot;;&quot;\117\121\061\061&quot;,&quot;\056\106\078\078\100\107\061\061&quot;;&quot;\110\119\115\054\076\056\077\049\050\075\115\119\098\056\075\084&quot;;&quot;\076\116\115\075\047\090\065\104\118\098\051\056\112\098\071\104\076\116\115\066\112\098\048\075\090\116\112\057\053\098\078\108&quot;,&quot;\076\049\055\105\112\109\051\043&quot;;&quot;\098\078\079\072\079\116\052\085&quot;;&quot;\056\087\052\082&quot;;&quot;\085\119\090\104\089\051\065\069\085\107\067\087\080\075\080\061&quot;;&quot;\076\109\048\122\118\109\088\061&quot;;&quot;\055\079\119\122\052\107\061\061&quot;;&quot;\089\112\065\101\097\121\061\061&quot;,&quot;\120\105\097\085\113\084\117\077\056\107\111\102\068\043\056\056\101\120\110\083\043\072\121\061&quot;;&quot;\106\043\115\105\079\107\061\061&quot;;&quot;\047\109\055\087\097\088\061\061&quot;;&quot;\077\108\115\111\114\115\083\109\050\082\048\080\115\081\083\085&quot;,&quot;\069\117\113\109\103\112\103\099&quot;,&quot;\084\104\057\052\120\080\052\077\117\088\098\117\057\049\079\047&quot;,&quot;\115\101\053\048\109\066\052\055&quot;;&quot;\053\119\068\112\122\113\100\118\078\102\106\074\054\102\081\069\099\114\056\079\052\086\078\097\051\066\070\118\085\047\065\076\053\078\053\049\116\109\100\111\083\077\047\080\107\077\069\078\068\056\087\054\071\089\071\078\086\086\069\053\048\099\115\070\112\056\050\088\074\097\086\047\056\108\052\075\047\111\048\051\114\103\057\088\057\071\057\116\088\103\074\081\111\114\077\055\122\108\084\055\119\089\102\110&quot;;&quot;\048\083\076\079\088\121\061\061&quot;;&quot;\053\075\055\075\069\081\047\090\117\098\069\057\097\115\077\068&quot;;&quot;\118\098\055\075\097\072\061\061&quot;;&quot;\076\049\115\043\118\068\112\108&quot;;&quot;\071\097\073\098\068\068\087\117\120\103\072\103\070\104\084\109\079\107\061\061&quot;,&quot;\047\109\051\087\047\073\083\052\118\049\076\061&quot;;&quot;\112\090\083\057\118\068\085\061&quot;;&quot;\090\083\084\051\051\072\061\061&quot;;&quot;\052\082\083\085\078\116\100\105\048\121\061\061&quot;;&quot;\053\078\072\090\047\111\051\050\047\072\061\061&quot;,&quot;\077\098\086\078\118\107\061\061&quot;;&quot;\077\098\078\107\072\068\111\065\098\121\049\107&quot;,&quot;\069\082\072\099\082\047\087\098\104\069\116\073\054\111\080\100\122\118\076\077\067\086\043\056\071\097\078\073\086\079\066\061&quot;,&quot;\076\081\111\068\057\100\112\055\082\101\120\054&quot;,&quot;\076\116\048\057\097\090\065\075&quot;,&quot;\047\109\051\105\047\098\078\120\112\090\085\061&quot;,&quot;\110\086\102\104\106\052\077\102\047\053\056\102\098\065\104\070\070\089\043\103\069\073\075\116\065\076\102\069\082\088\106\121\118\112\098\113\051\066\076\061&quot;,&quot;\090\078\051\052\118\049\077\108\110\072\061\061&quot;;&quot;\069\069\108\049\098\119\112\107\112\069\047\105\112\081\076\068\080\069\088\061&quot;,&quot;\047\109\086\120\097\088\061\061&quot;;&quot;\053\117\072\073\089\074\067\050\121\076\068\053\120\108\070\114\067\087\110\066\068\088\061\061&quot;;&quot;\071\083\076\107\049\043\113\048\076\072\061\061&quot;;&quot;\069\114\048\075\048\055\108\053\047\109\047\106\048\087\115\056&quot;;&quot;\082\121\106\079\067\090\122\079\072\106\079\050&quot;,&quot;\078\056\079\080&quot;;&quot;\117\113\101\090\083\075\086\117&quot;;&quot;\115\055\048\084\112\055\052\073\047\108\065\117\098\081\108\097\114\088\061\061&quot;;&quot;\043\100\104\048\108\097\097\090\078\110\105\082\071\105\103\056\108\088\061\061&quot;;&quot;\115\109\055\043\076\109\115\057\085\070\077\108\047\109\115\119\047\109\115\056\085\107\061\061&quot;;&quot;\101\088\072\076\076\097\116\081\101\107\061\061&quot;,&quot;\118\081\070\061&quot;}for X,T in ipairs({{612238+-612237,844886+-844725},{464812+-464811,-865678+865745};{-837709+837777,-485419+485580}})do while T[-369901-(-369902)]&lt;T[-373027-(-373029)]do s[T[297473+-297472]],s[T[10613+-10611]],T[236211-236210],T[866889-866887]=s[T[1010845-1010843]],s[T[-611186-(-611187)]],T[409405+-409404]+(-309879-(-309880)),T[777593+-777591]-(-432300-(-432301))end end local function X(X)return s[X-(235010-213825)]end do local X=string.char local T=string.len local U=s local F=string.sub local m=math.floor local v=type local z=table.insert local f=table.concat local w={[&quot;\055&quot;]=-618206-(-618211),d=281850-281790;B=-534742-(-534786),[&quot;\054&quot;]=-611198+611213,[&quot;\048&quot;]=587391+-587378,r=-754309+754328,i=220418-220372;S=787485-787476,g=520048-519986,p=266589-266564;T=1042989+-1042933;E=643106+-643086,F=-357996-(-358000);q=268217-268158;x=472995+-472961,[&quot;\057&quot;]=-1008806+1008856;A=22967-22966,k=-985532+985548;u=-983887+983901,s=821593+-821572,O=410743+-410685,a=-178282+178308;R=-487285+487324;Z=399970+-399947,y=1017188+-1017156,[&quot;\043&quot;]=-476095+476140,[&quot;\052&quot;]=376462+-376421,[&quot;\049&quot;]=-159750-(-159788),C=456926-456916,w=216192-216157;N=29991+-29938;h=64884-64853,[&quot;\053&quot;]=254687-254663;I=217028-217021;[&quot;\051&quot;]=-603962-(-604023);V=752422+-752365;o=601413+-601402,f=540238-540191,L=357979-357951,e=182244+-182181;Y=232600-232557,H=-472260-(-472260),G=-65406+65455;X=640939-640891,[&quot;\047&quot;]=-18472-(-18501);P=-861020+861032;[&quot;\050&quot;]=-638768-(-638786);J=1041297+-1041295,m=-67380-(-67386);l=71707-71670,n=-1006036-(-1006066),c=94727-94685;Q=-336471-(-336474);W=607266-607215,t=182362-182308;z=317322-317289,U=-147077-(-147085),[&quot;\056&quot;]=-223960+223996,M=259258+-259241,b=735076-735054;j=370626-370586,K=-157337+157389;D=1021275-1021220;v=327121-327094}for s=846261-846260,#U,760759+-760758 do local c=U[s]if v(c)==&quot;\115\116\114\105\110\103&quot;then local v=T(c)local W={}local r=169000-168999 local H=791599-791599 local O=-502558+502558 while r&lt;=v do local s=F(c,r,r)local T=w[s]if T then H=H+T*(53478-53414)^((-282740+282743)-O)O=O+(-483969-(-483970))if O==147694-147690 then O=65694+-65694 local s=m(H/(-767811-(-833347)))local T=m((H%(-243906+309442))/(-624069+624325))local U=H%(-119490+119746)z(W,X(s,T,U))H=41758+-41758 end elseif s==&quot;\061&quot;then z(W,X(m(H/(944956-879420))))if r&gt;=v or F(c,r+(-594259+594260),r+(-2899-(-2900)))~=&quot;\061&quot;then z(W,X(m((H%(285706-220170))/(-418228+418484))))end break end r=r+(307005-307004)end U[s]=f(W)end end end return(function(s,U,F,m,v,z,f,a,J,r,h,n,T,O,H,w,l,d,B,W,c,S,K)n,r,l,h,S,J,d,c,O,H,K,B,w,a,T,W=function(s,X)local U=H(X)local F=function(...)return T(s,{...},X,U)end return F end,-505098+505098,function(s,X)local U=H(X)local F=function(F,m,v,z)return T(s,{F,m;v;z},X,U)end return F end,function(s,X)local U=H(X)local F=function(F,m,v)return T(s,{F;m,v},X,U)end return F end,function(s)c[s]=c[s]-(-612258+612259)if-658292+658292==c[s]then c[s],w[s]=nil,nil end end,function(s,X)local U=H(X)local F=function(F,m,v,z,f)return T(s,{F;m,v;z;f},X,U)end return F end,function(s,X)local U=H(X)local F=function(F,m)return T(s,{F,m},X,U)end return F end,{},function(s)local X,T=323005-323004,s[-342114+342115]while T do c[T],X=c[T]-(-468415-(-468416)),(-140186+140187)+X if c[T]==189789+-189789 then c[T],w[T]=nil,nil end T=s[X]end end,function(s)for X=298903+-298902,#s,256848+-256847 do c[s[X]]=(-105985-(-105986))+c[s[X]]end if F then local T=F(true)local U=v(T)U[X(-465037+486276)],U[X(-777022-(-798278))],U[X(-1036230+1057423)]=s,O,function()return 3791389-513066 end return T else return m({},{[X(58353+-37097)]=O;[X(741986+-720747)]=s;[X(672534-651341)]=function()return 479763+2798560 end})end end,function(s,X)local U=H(X)local F=function(F)return T(s,{F},X,U)end return F end,function(s,X)local U=H(X)local F=function()return T(s,{},X,U)end return F end,{},function(s,X)local U=H(X)local F=function(F,m,v,z,f,w,c)return T(s,{F;m;v;z;f,w;c},X,U)end return F end,function(T,F,m,v)local u,o,L,H,i,f,A,y,g,c,t,x,I,N,G,r,k,O,e,Q,q,Z,Y,C,p,D,n,V,M,E,j,R,P,b while T do if T&lt;927291+8890414 then if T&lt;-78720+5578351 then if T&lt;-305050+2982310 then if T&lt;1007059+244547 then if T&lt;612202+6515 then if T&lt;638395-72873 then if T&lt;103216+100336 then f=w[m[381338-381337]]r=w[m[-68280+68282]]H=w[m[-827030+827033]]u=-997943+9584002567077 n=X(-885175-(-906465))O=H(n,u)c=r[O]T=f[c]c=w[m[981968+-981964]]f=T(c)T=s[X(266218-244888)]f={}else T=d(-393705+5370928,{O})o={T()}f={U(o)}T=s[X(637830+-616554)]end else H=H+n Y=not u r=H&lt;=O r=Y and r Y=H&gt;=O Y=u and Y r=Y or r Y=6454764-(-646212)T=r and Y r=-887682+7778449 T=T or r end else if T&lt;-981979+2118350 then if T&lt;770214+238786 then r=nil c=nil T=s[X(1006179-984863)]f={}else c=nil w[m[-890669+890674]]=f T=16247252-(-196563)end else Z=-232162+232162 T=11641528-(-15142)i=#G y=i==Z end end else if T&lt;287212+2046353 then if T&lt;1457852-(-258825)then if T&lt;2525816-877181 then f=X(-273294-(-294522))c=X(48145+-26895)T=s[f]f=T(c)T=s[X(-918551+939839)]f={}else G=X(-195055+216370)b=s[G]G=X(620350-599059)N=b[G]E=N T=5211346-(-106106)end else i=W()q=nil u=nil R=X(328654-307415)y={}w[i]=y y=W()G=nil Q=W()H=nil Z=B(-628530+15666292,{i,E;P,n})n=S(n)V=X(500405-479073)M=X(-472927+494212)w[y]=Z u=X(-258159+279499)t={}Y=nil Z={}w[Q]=Z Z=s[V]A=w[Q]x={[R]=A,[M]=q}L=nil V=Z(t,x)w[O]=V Z=d(-810031+7868650,{Q;i;b,E,P;y})y=S(y)i=S(i)H={}P=S(P)b=S(b)w[r]=Z Q=S(Q)b=838361+12714451405895 N=nil Z=-113513+31483034989741 E=S(E)N=X(-987269+1008463)n=s[u]i=X(-650890-(-672193))T=s[X(502888+-481697)]L=w[O]E=w[r]u=X(319542-298265)P=E(N,b)N=X(-807110+828346)Y=L[P]u=n[u]f={H}u=u(n,Y)Y=X(489327+-468047)n=s[Y]P=s[N]b=w[O]G=w[r]y=G(i,Z)N=b[y]y=X(-588835+610137)E=P[N]i=30625607257834-(-1009867)N=w[O]b=w[r]G=b(y,i)P=N[G]L=E[P]Y=n(L)n=W()w[n]=Y L=W()Y=false w[L]=Y Y=l(12902054-(-798555),{O;r})E=X(987148+-965942)H[E]=Y Y=l(14641710-(-290521),{O,r;L;n})E=X(-533543-(-554869))H[E]=Y end else if T&lt;-702403+3343992 then if T&lt;350355+2070195 then T=767236+9651011 else w[r]=p C=w[x]e=-350390-(-350391)j=C+e q=M[j]k=N+q q=-225338+225594 T=k%q j=w[t]q=b+j j=324327+-324071 k=q%j N=T T=-356791+8263465 b=k end else o=w[r]T=o and 14496268-477628 or 13028665-1005112 I=o end end end else if T&lt;-950155+5222186 then if T&lt;2719702-(-293745)then if T&lt;2046608-(-843453)then if T&lt;-236835+2976954 then r,n=H(c,r)T=r and-656476+6326854 or-299981+15805891 else H=X(486441+-465102)T=true r=W()w[r]=T f=s[H]c=F H=X(779800-758521)n=W()T=f[H]Y=X(-74990-(-96201))H=W()O=W()w[H]=T T=h(829774-(-522738),{})w[O]=T T=false w[n]=T L=J(-987083+10702535,{n})u=s[Y]Y=u(L)T=Y and-613007+4873824 or 8452917-674751 f=Y end else f={r}T=s[X(400537+-379297)]end else if T&lt;591940+3262457 then if T&lt;2806582-(-309155)then Y=X(-804901+826245)L=1026039+27047383025979 r=w[m[-202996-(-202997)]]O=w[m[597995-597993]]n=w[m[561850-561847]]u=n(Y,L)H=O[u]c=r[H]Y=-284761+7485113214454 b=-806975+2446711788722 H=w[m[-326107+326109]]u=X(754284-732971)O=w[m[6551+-6548]]n=O(u,Y)r=H[n]f=c[r]u=-612320+18184874916083 r=w[m[-333067-(-333069)]]N=X(-135359+156626)n=X(-318921-(-340116))H=w[m[718785+-718782]]O=H(n,u)c=r[O]T=f[c]O=X(-585307+606550)c=w[m[778081-778079]]r=w[m[-428410+428413]]n=-64663+32371640694649 H=r(O,n)f=c[H]u=w[m[-335734-(-335735)]]L=w[m[110004+-110002]]E=w[m[-759676+759679]]P=E(N,b)N=903737+34671615784152 Y=L[P]P=X(-731450+752731)n=u[Y]Y=w[m[-105940-(-105942)]]L=w[m[243538-243535]]E=L(P,N)u=Y[E]O=n[u]u=w[m[-222625+222627]]E=X(-640436-(-661669))Y=w[m[-683864-(-683867)]]P=28634891222564-(-587250)L=Y(E,P)n=u[L]H=O[n]n=w[m[357233-357231]]u=w[m[-226448-(-226451)]]E=-721021+34136170839700 L=X(873349+-852067)Y=u(L,E)O=n[Y]r=H[O]c=not r T[f]=c T=s[X(724162-702918)]f={}else w[r]=f T=2588+7904086 end else u=w[n]f=u T=852042+6926124 end end else if T&lt;-424289+5391068 then if T&lt;4473258-(-465420)then if T&lt;5173522-388211 then r=w[m[8848-8846]]H=w[m[918252-918249]]T=15432225-(-415095)c=r==H f=c else T={}c=T H=w[m[624014-624005]]r=560359-560358 O=H H=-179979+179980 n=H T=1029768+-442344 H=-545957+545957 u=n&lt;H H=r-n end else r=w[m[497360-497357]]H=379367+-379366 c=r~=H T=c and 164268+5820491 or 351712+6267149 end else if T&lt;-880349+6089850 then if T&lt;4282032-(-836234)then T=13900014-(-76843)else r=w[m[-548670-(-548672)]]H=-228768+228961 c=r*H r=-843724+26034789371685 f=c+r c=35184371848515-(-240317)T=f%c w[m[751883-751881]]=T T=874684+5744177 c=w[m[-528893+528896]]r=989477-989476 f=c~=r end else T=P f=E T=E and-719777+12717627 or-89405+12400927 end end end end else if T&lt;8111038-412065 then if T&lt;-857062+7510920 then if T&lt;992100+4942081 then if T&lt;6300697-569259 then if T&lt;132093+5434700 then f={}T=s[X(-1015408-(-1036656))]else N=X(1041809-1020517)b=27160476861257-(-880158)L=w[m[-260892+260894]]E=w[m[-42372+42375]]O=r P=E(N,b)N=X(150894+-129569)Y=L[P]u=n[Y]L=w[m[-144882-(-144884)]]E=w[m[152266-152263]]b=34836549374234-(-372292)P=E(N,b)Y=L[P]T=u~=Y T=T and 10059380-121169 or 6691168-42766 end else I=I+g f=I&lt;=o Q=not Z f=Q and f Q=I&gt;=o Q=Z and Q f=Q or f Q=14617112-285237 T=f and Q f=-127087+2791632 T=T or f end else if T&lt;6623775-(-23514)then if T&lt;7146822-681436 then r=w[m[-697671+697674]]H=-592376+592408 c=r%H N=-201921+201934 O=w[m[475484-475480]]E=917649+-917647 Y=w[m[-372730-(-372732)]]y=w[m[419708+-419705]]G=y-c y=-841070-(-841102)b=G/y P=N-b L=E^P T=487950+6621716 N=-786930-(-787186)u=Y/L n=O(u)O=570186+4294397110 H=n%O n=14113-14111 O=n^c L=-988863+988864 c=nil r=H/O O=w[m[-644000+644004]]E=768863-768607 Y=r%L L=4294138295-(-829001)u=Y*L n=O(u)O=w[m[-9233-(-9237)]]u=O(r)Y=-704292+769828 H=n+u n=326685+-261149 O=H%n u=H-O n=u/Y Y=850390+-850134 r=nil u=O%Y H=nil L=O-u O=nil Y=L/E E=-459299+459555 L=n%E P=n-L E=P/N n=nil P={u,Y;L;E}L=nil u=nil Y=nil E=nil w[m[745909-745908]]=P else r=w[m[-435966+435969]]T=4398453-(-552538)H=-650588+650591 c=r*H r=656618+-656361 f=c%r w[m[-1047768+1047771]]=f end else O=nil T=3086734-389600 n=nil end end else if T&lt;-669091+7763125 then if T&lt;6420160-(-533657)then if T&lt;7504377-612626 then T=w[m[649703+-649693]]r=w[m[921555+-921544]]c[T]=r T=w[m[348720+-348708]]r={T(c)}T=s[X(664457+-643168)]f={U(r)}else T=s[X(580070-558795)]f={}end else r=F[-889274+889276]T=w[m[405824-405823]]H=T c=F[821031-821030]T=H[r]T=T and 16620075-754080 or 11493807-931525 end else if T&lt;837935+6294452 then if T&lt;373617+6735691 then L=556887-556887 r=H E=44657+-44402 T=w[m[439076-439075]]Y=T(L,E)c[r]=Y T=921176-333752 r=nil else H=X(-190613-(-211928))r=s[H]H=X(-132427-(-153652))c=r[H]T=s[X(-623646-(-644836))]H=w[m[-707222+707223]]r={c(H)}f={U(r)}end else q=1033753+-1033752 k=M[q]p=k T=3409817-949030 end end end else if T&lt;8857740-466929 then if T&lt;6910097-(-1000384)then if T&lt;7960574-58310 then if T&lt;-6007+7820403 then u=f Y=X(193837+-172613)f=s[Y]Y=X(176958-155751)L=X(919546+-898231)T=f[Y]Y=W()w[Y]=T f=s[L]b=X(199960+-178645)L=X(-810967+832260)T=f[L]N=s[b]L=T P=T T=N and 2357026-683184 or 1022686+4294766 E=N else T=true T=T and 15997930-(-566397)or-278061+5836017 end else T=5357619-(-548001)Q=S(Q)R=S(R)V=S(V)x=S(x)A=S(A)t=S(t)M=nil end else if T&lt;7237064-(-811288)then if T&lt;8322290-370535 then k=w[r]T=k and-666108+7821025 or 1545799-(-914988)p=k else H=-145789+145789 c=X(910223-888995)T=s[c]r=w[m[116700+-116692]]c=T(r,H)T=5824930-956295 end else y=i T=-755444+9562820 t=y G[y]=t y=nil end end else if T&lt;181845+8880008 then if T&lt;9316724-370403 then if T&lt;407419+8360055 then b=3716710696526-(-295028)N=X(-934471+955768)T=true w[m[-1009357+1009358]]=T u=w[m[-956069+956071]]L=w[m[-997562-(-997565)]]E=w[m[686426+-686422]]P=E(N,b)Y=L[P]N=11484165967899-(-902344)n=u[Y]Y=w[m[632767+-632764]]L=w[m[841032-841028]]P=X(279106+-257860)E=L(P,N)u=Y[E]O=n[u]P=24432750039616-(-203313)u=w[m[-119177+119180]]E=X(674068+-652798)Y=w[m[-105866+105870]]N=X(817120+-795912)L=Y(E,P)n=u[L]H=O[n]n=w[m[862381+-862378]]u=w[m[-198892+198896]]L=X(92494+-71188)E=-415785+4256362684391 Y=u(L,E)O=n[Y]r=H[O]Y=X(-874898+896170)L=-342836+26239375846126 O=w[m[-551810-(-551813)]]n=w[m[545519-545515]]u=n(Y,L)H=O[u]c=r[H]u=X(-339015+360244)Y=1146942104301-(-204585)H=w[m[-747861+747864]]O=w[m[-942390-(-942394)]]n=O(u,Y)r=H[n]f=c[r]b=31476094823083-(-200342)u=w[m[983135-983133]]L=w[m[917366+-917363]]c=f E=w[m[251390+-251386]]P=E(N,b)Y=L[P]n=u[Y]N=12757868151025-59837 P=X(-171639+192961)Y=w[m[-968567-(-968570)]]L=w[m[-1027230-(-1027234)]]E=L(P,N)u=Y[E]O=n[u]u=w[m[-491913-(-491916)]]P=1579633875243-(-207284)Y=w[m[585756-585752]]E=X(825564-804222)L=Y(E,P)n=u[L]H=O[n]n=w[m[-633314+633317]]u=w[m[53534-53530]]L=X(-353619-(-374853))E=-253254+16365675920138 Y=u(L,E)O=n[Y]L=573544+33945522552151 r=H[O]Y=X(-148144-(-169379))O=w[m[-511297-(-511300)]]n=w[m[-434389+434393]]u=n(Y,L)H=O[u]f=r[H]Y=23864980380745-766177 u=X(534994+-513772)H=w[m[-615128+615131]]O=w[m[505195-505191]]n=O(u,Y)N=X(-237791-(-259048))r=H[n]O=w[m[62479-62476]]n=w[m[-189567-(-189571)]]Y=X(619808-598612)L=-723222+8063500130240 u=n(Y,L)H=O[u]f[r]=H r=X(-637628+658942)b=976564+30204546437181 L=94465+7411874339962 f=s[r]O=w[m[24051+-24048]]Y=X(794316+-773095)n=w[m[1024395-1024391]]u=n(Y,L)H=O[u]r=f(H)r=X(-1047271+1068585)f=s[r]O=w[m[581100-581097]]n=w[m[815327+-815323]]L=-25030+9158886175342 Y=X(683466-662228)u=n(Y,L)H=O[u]r=f(H)H=X(596844-575628)Y=X(-111176-(-132388))r=s[H]O=w[m[254537+-254534]]n=w[m[637361-637357]]L=153223+4475255730588 u=n(Y,L)H=O[u]f=r[H]H=930844-930843 r=f(H)u=w[m[-1012352-(-1012354)]]L=w[m[-277327+277330]]E=w[m[-548177+548181]]P=E(N,b)Y=L[P]n=u[Y]Y=w[m[-328687+328690]]P=X(-605280+626585)N=28029039361549-133905 L=w[m[-959316-(-959320)]]E=L(P,N)u=Y[E]O=n[u]u=w[m[-1028091+1028094]]E=X(179543-158269)Y=w[m[-283735-(-283739)]]P=31635734170476-528865 L=Y(E,P)n=u[L]H=O[n]n=w[m[139956+-139953]]u=w[m[894113+-894109]]E=656283+29856724415156 T=s[X(659131+-637844)]L=X(-767779+789096)Y=u(L,E)L=22821147827622-947236 O=n[Y]r=H[O]O=w[m[-616180+616183]]n=w[m[194659+-194655]]Y=X(1041884-1020538)u=n(Y,L)H=O[u]f=r[H]H=w[m[812392-812389]]u=X(-394366+415581)O=w[m[567098+-567094]]Y=15474851865979-641365 n=O(u,Y)r=H[n]H=c f[r]=H c=nil f=false w[m[460941-460940]]=f f={}else t=not V i=i+Q y=i&lt;=Z y=t and y t=i&gt;=Z t=V and t y=t or y t=-613337+8876720 T=y and t y=703483-(-479197)T=T or y end else T=false w[m[-323365+323368]]=T T=14102707-(-801509)end else if T&lt;-707352+10138537 then if T&lt;-686510+10015749 then C=-779475+779477 T=-917324+13898841 j=M[C]C=w[A]q=j==C p=q else Z=X(830475-809148)T=s[Z]Z=X(-233094+254346)s[Z]=T T=744638+13925923 end else T=true w[m[-906244+906245]]=T f={}T=s[X(742540-721256)]end end end end end else if T&lt;557349+13158835 then if T&lt;12022509-298702 then if T&lt;10208731-(-523045)then if T&lt;75832+10292429 then if T&lt;10986993-979312 then if T&lt;9545082-(-386866)then H=w[m[-356437-(-356443)]]r=H==c f=r T=-390477+1427600 else T=X(456285-434957)T=n[T]T=T(n)T=-129740+6778142 end else f={}T=s[X(-947269+968486)]r=nil c=nil end else if T&lt;-376713+10944255 then if T&lt;-43554+10514588 then Y=S(Y)i=S(i)b=nil E=S(E)y=nil N=nil P=S(P)H=S(H)H=nil G=nil r=S(r)r=nil L=nil u=nil L=X(-331040+352355)O=S(O)O=W()n=S(n)w[O]=r r=W()w[r]=H Y=X(-11206+32430)u=X(-898337+919561)b=W()n=s[u]u=X(-260162-(-281456))H=n[u]T=8262087-(-545289)n=W()E=X(-842311+863650)w[n]=H u=s[Y]Y=X(837654-816447)H=u[Y]P=W()Y=s[L]L=X(106919+-85694)u=Y[L]L=s[E]E=X(-75655+96914)Y=L[E]i=453197-452941 E=W()L=-370432-(-370432)N={}w[E]=L L=-1000243-(-1000245)w[P]=L y=-262872+262873 w[b]=N L={}N=-185157-(-185157)G={}Z=i i=-352862-(-352863)Q=i i=-329593+329593 V=Q&lt;i i=y-Q else T={}n=35184372357606-268774 L=X(955230+-933891)w[m[-593078+593080]]=T f=w[m[697067+-697064]]Y=701255-701000 O=f f=r%n w[m[-772728-(-772732)]]=f u=r%Y Y=-968959+968961 n=u+Y w[m[-40260+40265]]=n P=456355+-456354 Y=s[L]L=X(-1022187-(-1043374))T=-350750+11536801 u=Y[L]Y=u(c)u=X(999061+-977765)N=P H[r]=u u=915211-914971 L=-101520-(-101521)P=-161714-(-161714)b=N&lt;P P=L-N E=Y end else f=X(562971+-541644)c=X(432754-411502)T=s[f]f=s[c]c=X(395063-373811)s[c]=T c=X(-93010+114337)T=12945007-(-1031850)s[c]=f c=w[m[759326+-759325]]r=c()end end else if T&lt;-648123+11876686 then if T&lt;11470526-389667 then if T&lt;11668466-696199 then Y=nil u=nil O=nil T=2440270-(-482398)else r=X(-855551-(-876894))H=-228125+12181567 f=919610-626947 c=r^H T=f-c c=T f=X(327794-306553)T=f/c f={T}T=s[X(-715516+736716)]end else G=not b P=P+N L=P&lt;=E L=G and L G=P&gt;=E G=b and G L=G or L G=12713975-969012 T=L and G L=445544+10299904 T=T or L end else if T&lt;11620605-8510 then if T&lt;836673+10481032 then T=7774082-(-92901)else r=w[m[549699-549698]]O=w[m[-165180-(-165182)]]N=X(309911-288607)b=-78546+3033015842902 L=31689459466621-329689 Y=X(-701891-(-723209))n=w[m[43951+-43948]]u=n(Y,L)H=O[u]c=r[H]H=w[m[432399+-432397]]u=X(466611-445275)Y=295661+33690589493851 O=w[m[707697+-707694]]n=O(u,Y)r=H[n]f=c[r]r=w[m[-444000+444002]]H=w[m[842533-842530]]n=X(-813386-(-834628))u=-94589+23818915830992 O=H(n,u)c=r[O]T=f[c]c=w[m[269987-269985]]r=w[m[709771-709768]]n=31413484722636-(-761688)O=X(-466490+487721)H=r(O,n)f=c[H]u=w[m[454299+-454298]]L=w[m[-112319-(-112321)]]E=w[m[-144418+144421]]P=E(N,b)Y=L[P]P=X(204259-182961)n=u[Y]Y=w[m[160151-160149]]L=w[m[442403-442400]]N=920232+15416972579171 E=L(P,N)u=Y[E]P=5358739718167-(-133544)O=n[u]E=X(-459234+480492)u=w[m[668482+-668480]]Y=w[m[384151-384148]]L=Y(E,P)n=u[L]H=O[n]n=w[m[-300041-(-300043)]]E=735053+13728729850283 u=w[m[-540418-(-540421)]]L=X(903618-882388)Y=u(L,E)O=n[Y]r=H[O]c=not r T[f]=c f={}T=s[X(315273+-293940)]end else Z=#G i=-543519-(-543520)y=H(i,Z)i=u(G,y)T=-940552+13214094 t=-750918-(-750919)Z=w[b]y=nil V=i-t Q=Y(V)Z[i]=Q i=nil end end end else if T&lt;12060557-(-155905)then if T&lt;11396968-(-633458)then if T&lt;11789717-(-210647)then if T&lt;966102+10789520 then g=X(-704742-(-726081))L=P o=s[g]g=X(-418935-(-440199))I=o[g]o=I(c,L)I=w[m[152559+-152553]]g=I()i=o+g y=i+u i=62669+-62413 g=316471-316470 L=nil G=y%i u=G i=H[r]T=319980+10866071 o=u+g I=O[o]y=i..I H[r]=y else P=773034-773031 E=W()N=1026308+-1026243 w[E]=f T=w[Y]f=T(P,N)P=W()T=729315-729315 N=T w[P]=f T=825922-825922 y=l(-474028+11531306,{})b=T G=X(-854979-(-876190))g=X(80120-58893)f=s[G]G={f(y)}f=-1013558-(-1013560)T={U(G)}G=T T=G[f]f=X(659627+-638390)y=T T=s[f]i=w[H]o=s[g]g=o(y)o=X(598108-576801)I=i(g,o)i={I()}f=T(U(i))T=5247016-(-658604)i=W()w[i]=f f=-299967-(-299968)I=w[P]o=I I=-857871-(-857872)g=I I=-425866+425866 Z=g&lt;I I=f-g end else w[r]=I T=w[r]T=T and 618205+1729107 or 326213+14279851 end else if T&lt;544233+11544418 then if T&lt;398764+11666140 then p=w[r]T=p and 13208877-(-551241)or 2882481-(-553119)f=p else g=X(-250899-(-272126))Q=X(-565664-(-586916))T=s[g]Z=s[Q]g=T(Z)T=X(-454432+475759)s[T]=g T=15671566-1001005 end else O=551935-551934 r=w[m[-330322-(-330323)]]n=918154+-918152 H=r(O,n)r=-18653-(-18654)c=H==r f=c T=c and-1045793+16893113 or 4526841-(-27366)end end else if T&lt;11286509-(-1025589)then if T&lt;13206831-927482 then if T&lt;-55556+12328992 then P=X(-141537-(-162786))r=F[263867-263865]L=250718+23718499456966 Y=X(-193015-(-214339))c=F[-200128-(-200129)]O=w[m[-202365+202366]]n=w[m[236279+-236277]]u=n(Y,L)H=O[u]u=X(-1021721-(-1042953))f=c[H]N=28038592518859-436171 n=s[u]Y=w[m[70232-70231]]L=w[m[-532296-(-532298)]]E=L(P,N)u=Y[E]O=n[u]u=w[m[430291-430290]]E=X(458589+-437370)Y=w[m[-983263-(-983265)]]P=34669162792508-329516 L=Y(E,P)n=u[L]H=O[n]T=f==H T=T and 14721815-41906 or 10675163-623229 else Z=175489+-175489 i=#G y=i==Z T=y and-757802+2810189 or 223433+11433237 end else T=-55035+12052885 P=X(653463+-632172)E=s[P]f=E end else if T&lt;13318488-(-371622)then if T&lt;13639804-308415 then T=k f=p T=-500821+3936421 else H=-365617+6429642 f=10917709-(-5523)r=X(-909166+930439)c=r^H T=f-c c=T f=X(-386972-(-408272))T=f/c f={T}T=s[X(-13412-(-34617))]end else c=W()P=X(-896812+918123)w[c]=F[327736+-327735]n=w[c]Y=w[m[-109111+109112]]L=w[m[396377+-396375]]N=7078547830501-207365 E=L(P,N)u=Y[E]P=5324257204821-626854 O=n[u]u=w[m[743305+-743304]]Y=w[m[912188-912186]]E=X(611793+-590498)L=Y(E,P)n=u[L]L=X(-333848-(-355189))H=O[n]n=w[m[-963241+963242]]u=w[m[-1028554-(-1028556)]]E=-109736+30145970250621 Y=u(L,E)O=n[Y]r=H[O]O=w[m[-805865+805866]]L=16486742565396-197655 Y=X(-1007726+1029060)n=w[m[-965990-(-965992)]]u=n(Y,L)H=O[u]f=r[H]L=X(-966816+988002)Y=631555+31447622653488 H=w[m[-4321+4322]]u=X(144355-123141)O=w[m[654739-654737]]E=14396528213261-910046 n=O(u,Y)r=H[n]T=f[r]f=X(-666129+687460)f=T[f]r=J(427603+11029544,{c;m[269347+-269346],m[-854718+854720]})f=f(T,r)H=w[c]n=w[m[340174+-340173]]u=w[m[180139+-180137]]Y=u(L,E)O=n[Y]Y=X(326467+-305130)r=H[O]O=w[m[-1026870+1026871]]L=159036+26680081335115 n=w[m[-375114-(-375116)]]u=n(Y,L)Y=-222116+6947656265799 H=O[u]f=r[H]u=X(604086+-582817)H=w[m[840468-840467]]O=w[m[-976637+976639]]n=O(u,Y)r=H[n]T=f[r]f=X(-103814-(-125145))r=a(-986384+13259431,{m[-697523-(-697524)];m[393530+-393528],c})f=T[f]c=S(c)f=f(T,r)T=s[X(1007529-986219)]f={}end end end end else if T&lt;14687438-(-219047)then if T&lt;14685453-400354 then if T&lt;-761923+14738752 then if T&lt;14389675-623030 then if T&lt;690166+13070764 then k=T C=950623-950622 j=M[C]C=false q=j==C p=q T=q and 9900705-583313 or 13302573-321056 else H=X(295134-273918)f=s[H]L=922035+14755207711011 O=w[m[1018590+-1018589]]n=w[m[1023882+-1023880]]Y=X(-778151-(-799355))u=n(Y,L)H=O[u]T=f[H]H=.1 f=T(H)T=w[m[-383985-(-383988)]]T=T and 831678+8123117 or 16453199-737296 end else f={}T=s[X(944157-922871)]end else if T&lt;709555+13326214 then if T&lt;-546718+14552721 then T=true T=T and-227201+10822231 or 6741791-(-154981)else o=N==b T=949556+11073997 I=o end else T=w[m[-571614+571615]]c=w[m[428215+-428213]]r=w[m[964101+-964098]]n=20478278222004-(-418955)O=X(-568424+589675)H=r(O,n)f=c[H]b=624601+31596127957408 c={}T[f]=c f=X(-384176-(-405378))N=X(-725900-(-747163))T=s[f]u=w[m[-718444+718445]]L=w[m[-674592-(-674594)]]E=w[m[482052-482049]]P=E(N,b)Y=L[P]n=u[Y]Y=w[m[900387-900385]]N=22792673539189-559872 L=w[m[974051-974048]]P=X(1030774+-1009520)E=L(P,N)u=Y[E]E=X(12870+8340)P=18870153262679-185348 O=n[u]u=w[m[395253+-395251]]Y=w[m[324377-324374]]L=Y(E,P)n=u[L]H=O[n]n=X(-337608-(-358916))n=H[n]O={n(H)}H={T(U(O))}T=-270633+2967767 c=H[1024747+-1024745]f=H[-10576-(-10577)]r=H[-110085-(-110088)]H=f end end else if T&lt;14509015-(-149326)then if T&lt;445034+14128216 then if T&lt;-248460+14594336 then V=X(-461258-(-482482))Q=W()t=-22308-(-22408)w[Q]=I M=404155-404153 f=s[V]D=-745278-(-755278)q=X(-571165+592392)V=X(-660268+681475)T=f[V]V=32251-32250 f=T(V,t)V=W()t=-254414-(-254414)x=-548004-(-548259)w[V]=f T=w[Y]A=1042953-1042952 f=T(t,x)t=W()w[t]=f x=-434238+434239 T=w[Y]e=299090+-299090 R=w[V]f=T(x,R)x=W()w[x]=f f=w[Y]R=f(A,M)f=-627889+627890 T=R==f R=W()f=X(538761-517454)w[R]=T M=X(-197020-(-218223))T=X(-6186-(-27387))k=s[q]j=w[Y]C={j(e,D)}T=y[T]q=k(U(C))k=X(-197476+218679)p=q..k A=M..p T=T(y,f,A)A=W()M=X(-9762-(-30973))w[A]=T p=K(12864441-773742,{Y,Q,P,H;r,i,R,A,V,x;t,E})f=s[M]M={f(p)}T={U(M)}M=T T=w[R]T=T and 423518+11612892 or 8913109-985744 else O=X(-12379-(-33606))f=X(-371348+392585)L=X(-632719+653930)T=s[f]E=K(12760641-(-844749),{})c=w[m[504817+-504813]]H=s[O]Y=s[L]L={Y(E)}Y=569803-569801 u={U(L)}n=u[Y]O=H(n)H=X(-955635-(-976942))r=c(O,H)c={r()}f=T(U(c))c=f r=w[m[-95608+95613]]f=r T=r and 907999+9012613 or 945842-(-91281)end else T=true T=-921555+1453353 end else if T&lt;14659121-(-171987)then if T&lt;425638+14249412 then T=-44436+7911419 else L=21852653597448-(-144567)H=X(-709322-(-730538))f=s[H]Y=X(-744508+765721)O=w[m[620124-620123]]P=108163+6808242988511 n=w[m[-203312-(-203314)]]u=n(Y,L)H=O[u]T=f[H]H=.1 f=T(H)O=w[m[-641440+641443]]u=w[m[302929+-302928]]E=X(-893672+914950)Y=w[m[266716+-266714]]L=Y(E,P)n=u[L]E=22647441031840-563566 H=O[n]n=w[m[138877-138876]]u=w[m[-445005-(-445007)]]L=X(-946079+967332)Y=u(L,E)O=n[Y]f=H[O]Y=X(-504566-(-525755))L=345521+33377304868613 O=w[m[-236491+236492]]n=w[m[-366236-(-366238)]]u=n(Y,L)Y=673033+4713932063626 H=O[u]T=f[H]u=X(-520231-(-541429))H=w[m[311171-311170]]O=w[m[491689+-491687]]n=O(u,Y)f=H[n]H=false T[f]=H T=10878734-826800 end else T=275267-(-359141)end end end else if T&lt;-193972+15942827 then if T&lt;14500590-(-954406)then if T&lt;15116921-(-188514)then if T&lt;-844434+15857689 then P=X(-721600-(-742847))N=316052+14141949249317 c=W()w[c]=F[256871-256870]n=w[c]Y=w[m[-506891+506892]]L=w[m[-97790+97792]]E=L(P,N)u=Y[E]P=33576246576699-35112 O=n[u]u=w[m[398584-398583]]Y=w[m[784601+-784599]]E=X(-260816-(-282025))L=Y(E,P)n=u[L]E=-681034+30748721945656 H=O[n]n=w[m[745577-745576]]u=w[m[590162+-590160]]L=X(117443+-96124)Y=u(L,E)O=n[Y]L=12043877683402-916194 r=H[O]Y=X(-919363-(-940672))O=w[m[-363091+363092]]n=w[m[-828736+828738]]E=-117665+33177834489850 u=n(Y,L)H=O[u]f=r[H]H=w[m[740140+-740139]]Y=11106327413396-732769 O=w[m[880593-880591]]N=-658867+20073953407542 u=X(-555901-(-577156))n=O(u,Y)L=X(-20322-(-41542))r=H[n]T=f[r]r=J(2705995-(-311468),{c;m[-800039+800040];m[540951+-540949]})f=X(-475050-(-496381))f=T[f]f=f(T,r)H=w[c]n=w[m[-215522-(-215523)]]P=X(254461+-233123)u=w[m[427966-427964]]Y=u(L,E)O=n[Y]Y=X(-611108+632300)r=H[O]L=-468716+17269435926101 O=w[m[39014+-39013]]n=w[m[-658999-(-659001)]]u=n(Y,L)H=O[u]f=r[H]u=X(-691311+712646)H=w[m[-162619-(-162620)]]O=w[m[503121+-503119]]Y=30365282795660-(-718511)n=O(u,Y)r=H[n]T=f[r]f=X(274478-253147)f=T[f]r=J(239483+16374573,{m[193096-193095];m[-130816+130818],m[88771-88768],c})f=f(T,r)n=w[c]Y=w[m[386379+-386378]]L=w[m[149114+-149112]]E=L(P,N)u=Y[E]O=n[u]u=w[m[-526083+526084]]Y=w[m[674104-674102]]P=21187655952549-918043 E=X(-682146+703412)L=Y(E,P)n=u[L]E=22285345638325-122668 H=O[n]n=w[m[-301507+301508]]L=X(829286-808041)u=w[m[439926-439924]]Y=u(L,E)O=n[Y]r=H[O]O=w[m[-959411-(-959412)]]L=67274+26882195778075 n=w[m[-568942+568944]]Y=X(-848718+869980)u=n(Y,L)H=O[u]N=29976479639185-(-118773)f=r[H]H=w[m[320468+-320467]]O=w[m[-523578+523580]]u=X(-219811-(-241010))Y=8650724352711-938763 n=O(u,Y)r=H[n]T=f[r]f=X(1027323-1005992)r=d(14864511-688641,{c;m[-972202+972203];m[871859-871857]})f=T[f]P=X(498360-477031)f=f(T,r)n=w[c]Y=w[m[395132-395131]]L=w[m[-750687+750689]]E=L(P,N)u=Y[E]E=X(153134-131822)P=-172175+19023489860393 O=n[u]u=w[m[-754931-(-754932)]]Y=w[m[-137853-(-137855)]]L=Y(E,P)n=u[L]H=O[n]L=X(-53585-(-74905))n=w[m[-629623+629624]]u=w[m[-323160-(-323162)]]E=137358+7137290450029 Y=u(L,E)O=n[Y]r=H[O]O=w[m[-1011689-(-1011690)]]Y=X(968830-947559)L=-885720+12976982858610 n=w[m[-651221+651223]]u=n(Y,L)H=O[u]f=r[H]H=w[m[-336177+336178]]Y=579045+16210757633943 u=X(479014-457746)O=w[m[859425-859423]]n=O(u,Y)r=H[n]T=f[r]r=B(141475+-72467,{m[-990805-(-990809)];m[-225975+225976],m[393670+-393668];c})f=X(-615858+637189)f=T[f]f=f(T,r)n=w[c]Y=w[m[232953-232952]]P=X(-139550-(-160851))N=12464225698408-(-857156)L=w[m[-261210+261212]]E=L(P,N)u=Y[E]O=n[u]P=9661277069713-(-864257)E=X(984569+-963372)u=w[m[-375153-(-375154)]]Y=w[m[-217979+217981]]L=Y(E,P)n=u[L]H=O[n]L=X(127365-106105)E=8535800038492-455894 n=w[m[-258928+258929]]u=w[m[-452348+452350]]Y=u(L,E)O=n[Y]r=H[O]O=w[m[-359579-(-359580)]]L=447937+10457688374596 Y=X(-40288-(-61549))n=w[m[975157+-975155]]u=n(Y,L)H=O[u]f=r[H]Y=26930713789184-397828 u=X(-896084-(-917429))H=w[m[445945-445944]]O=w[m[353607+-353605]]n=O(u,Y)r=H[n]T=f[r]f=X(551939+-530608)f=T[f]r=B(-580794+16055812,{m[940581+-940578];c,m[-530750-(-530751)],m[652931+-652929]})f=f(T,r)c=S(c)f={}T=s[X(657843+-636620)]else c=w[m[934401-934400]]f=#c c=73835+-73835 T=f==c T=T and 5891194-727314 or-635337+7745003 end else T=true T=T and 11890590-622316 or 19449-(-512349)end else if T&lt;-1006382+16516028 then if T&lt;571190+14921562 then T=w[m[-54106+54107]]T=T and 55714+13920946 or 7936576-(-607158)else f={}T=s[X(728587-707288)]end else N=995649+11898563175523 n=w[m[560630-560626]]P=X(-353824+375042)Y=w[m[-110796-(-110797)]]L=w[m[-193203-(-193205)]]E=L(P,N)u=Y[E]P=-468985+27219733223804 T=14886703-(-17513)O=n[u]u=w[m[-701648-(-701649)]]E=X(1021614-1000331)Y=w[m[-232811-(-232813)]]L=Y(E,P)n=u[L]H=O[n]L=X(36100+-14777)E=1002226+21702863674504 n=w[m[-454523+454524]]u=w[m[75630+-75628]]Y=u(L,E)O=n[Y]L=432691764910-(-8731)Y=X(472897-451576)f=H[O]O=w[m[846818-846817]]n=w[m[-437313+437315]]u=n(Y,L)H=O[u]O=false f[H]=O end end else if T&lt;16502990-(-6427)then if T&lt;-635251+16662747 then if T&lt;-901455+16753701 then T=f and 15212762-857809 or 667420+15776395 else T=1936183-(-986485)end else T=w[m[153490+-153483]]T=T and 444741+7512719 or 5847932-979297 end else if T&lt;16593455-25203 then g=-700364+700365 Z=-541920+541926 T=w[Y]o=T(g,Z)T=X(834450+-813123)s[T]=o Z=X(594937-573610)g=s[Z]Z=755635-755633 T=g&gt;Z T=T and 11329539-(-754368)or 9546119-211153 else c=F[879815+-879814]Y=X(-220407+241595)r=F[-699929-(-699931)]L=-765915+1026478813624 O=w[m[-892729-(-892730)]]n=w[m[-174296+174298]]u=n(Y,L)H=O[u]P=X(-642213-(-663439))u=X(-495761+516993)f=c[H]N=32686409559257-602469 n=s[u]Y=w[m[129627+-129626]]L=w[m[822592+-822590]]E=L(P,N)P=539652053331-792664 u=Y[E]O=n[u]u=w[m[714288+-714287]]E=X(767145+-745880)Y=w[m[-487264+487266]]L=Y(E,P)n=u[L]H=O[n]T=f==H T=T and-656539+14418136 or 97034+537374 end end end end end end end T=#v return U(f)end,function()r=r+(-299239-(-299240))c[r]=106634+-106633 return r end return(n(805254+1995942,{}))(U(f))end)(getfenv and getfenv()or _ENV,unpack or table[X(-80400-(-101691))],newproxy,setmetatable,getmetatable,select,{...})end)(...)</ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="ModuleScript" referent="RBX8C8DF0F3807A4C3AA3E5F04C80EC348E">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">GgHandler</string>
				<string name="ScriptGuid">{D03CFD91-E762-4B33-AAA6-968105E14612}</string>
				<ProtectedString name="Source">--[[ v1.0.0 https://wearedevs.net/obfuscator ]] return(function(...)local G={&quot;\050\073\052\061&quot;;&quot;\090\108\054\065\090\076\075\043\120\117\105\109\072\085\054\103\065\083\105\061&quot;;&quot;\121\068\075\098\065\052\054\053\086\121\079\065\078\072\074\114\087\116\061\061&quot;,&quot;\114\078\050\075\111\053\051\080&quot;;&quot;\087\097\067\111\087\080\106\113\050\086\090\067\055\051\048\114\107\055\105\073\072\098\121\099\050\106\066\121\118\102\110\067\051\107\067\119\101\071\119\048\075\098\086\049\111\117\053\082\087\109\112\052\080\101\056\061&quot;,&quot;\087\109\072\083\097\109\072\053\075\081\055\047\054\116\061\061&quot;;&quot;\108\104\066\074\077\081\087\055\090\067\061\061&quot;;&quot;\052\075\057\074\065\101\071\090&quot;;&quot;\077\085\057\061&quot;,&quot;\075\117\066\068\075\112\079\074\077\081\078\061&quot;;&quot;\054\108\079\053\077\102\057\061&quot;;&quot;\103\086\065\116\120\086\098\054\114\081\069\081\120\081\072\057&quot;;&quot;\117\051\048\100\068\074\054\049&quot;;&quot;\099\043\121\120\107\078\057\073\117\078\119\106\078\049\118\077\102\117\121\068\099\098\110\075\109\078\098\122\085\043\106\051\090\081\089\082\049\099\105\099\103\069\088\098\071\049\087\111\076\047\050\070\081\072\074\047\067\110\118\100\070\112\074\113\056\099\057\080\102\069\088\054\089\113\100\070\080\108\074\052\084\085\086\054\077\078\054\082\047\048\088\073\112\112\054\072\104\120\073\054\116\048\116\053\055\112\084\087\076\101\086\087\105\119\088\048\121\087\084\090\104\080\052\073\122\053\047\109\112\109\066\066\103\116\072\109\047\106\119\066\117\055\070\120\087\115\113\106\097\076\115\053\087\055\050\122\088\068\110\050\083\069\066\083\088\084\105\070\106\104\117\070\086\098\076\054\085\089\121\066\073\114\079\085\119\107\079\109\115\077\121\073\099\050\061\061&quot;;&quot;\089\098\074\116\074\056\109\067&quot;,&quot;\105\102\065\043\087\055\075\083\087\117\065\102\101\051\078\068&quot;;&quot;\103\087\078\069\109\112\088\086&quot;,&quot;\087\076\065\048\121\107\061\061&quot;,&quot;\072\121\120\083\087\081\056\102\065\109\100\121\065\052\098\119&quot;,&quot;\087\109\072\083\116\108\065\100\077\081\120\061&quot;;&quot;\078\117\065\098\077\117\050\061&quot;,&quot;\043\090\079\098\067\103\047\099\072\117\043\077\121\050\061\061&quot;;&quot;\108\068\056\055\083\057\065\074&quot;;&quot;\103\121\116\109\097\085\098\098\087\068\075\101\097\081\084\083&quot;;&quot;\056\120\067\090&quot;,&quot;\075\084\098\051\114\083\087\099\103\084\087\122\090\052\071\083\097\109\078\061&quot;;&quot;\075\117\066\118\075\086\104\110\054\108\057\061&quot;,&quot;\077\083\087\111\121\086\104\103\101\086\069\088\086\047\084\051\120\050\061\061&quot;,&quot;\078\109\072\083\077\086\072\083\105\108\087\098\105\081\069\055&quot;,&quot;\054\109\084\080\054\116\061\061&quot;,&quot;\075\076\080\119\121\047\087\106\087\083\087\074\114\051\079\071&quot;,&quot;\105\109\098\098\078\107\061\061&quot;,&quot;\120\076\104\102\121\051\084\057\086\084\079\048\065\076\055\053\097\067\061\061&quot;,&quot;\118\112\082\066\048\110\057\066\113\099\076\061&quot;,&quot;\080\077\122\049\117\105\050\076\088\090\079\104\121\103\100\106\100\053\076\057&quot;,&quot;\101\068\082\100\065\081\054\121\090\081\076\119\075\085\084\084\121\117\084\088&quot;,&quot;\065\052\100\057\121\081\072\099\114\086\084\051\054\112\084\070\065\116\061\061&quot;,&quot;\078\102\072\110&quot;,&quot;\114\109\104\065\114\102\055\082\086\117\075\054\077\117\069\100&quot;,&quot;\054\109\104\098\075\117\065\115&quot;;&quot;\077\086\084\083\114\067\061\061&quot;;&quot;\065\102\084\122\114\072\079\085\097\102\054\071\114\084\097\100\065\116\061\061&quot;,&quot;\108\104\066\051\105\050\061\061&quot;,&quot;\103\086\088\090\071\106\075\111&quot;,&quot;\105\051\055\083\054\116\061\061&quot;;&quot;\075\109\084\053\077\107\061\061&quot;;&quot;\073\052\122\057\101\105\050\117\075\107\061\061&quot;,&quot;\079\103\100\108&quot;,&quot;\065\072\082\055\086\047\084\048\090\084\065\109\120\121\087\112\065\050\061\061&quot;;&quot;\072\090\054\080\083\050\061\061&quot;;&quot;\075\117\084\110\077\117\097\061&quot;;&quot;\078\081\084\118\054\117\066\080&quot;,&quot;\105\109\066\118\105\109\084\083&quot;,&quot;\078\081\072\080\077\102\054\055&quot;;&quot;\108\104\066\080\054\108\087\098\075\117\084\110\077\117\097\061&quot;;&quot;\077\117\072\118&quot;;&quot;\121\072\055\097\065\112\075\109\121\112\075\104\072\104\079\112\097\047\076\061&quot;;&quot;\114\074\083\098\050\067\061\061&quot;,&quot;\116\055\065\108\078\068\082\082\087\102\084\100\077\083\080\121\072\085\120\061&quot;,&quot;\108\104\066\071\054\086\119\061&quot;;&quot;\101\055\065\043\121\076\087\055\105\109\066\076\054\116\061\061&quot;,&quot;\051\043\077\077\069\097\115\119\097\107\061\061&quot;,&quot;\071\067\105\071\043\110\076\074&quot;,&quot;\099\080\084\108&quot;,&quot;\090\076\100\072\097\086\098\099\097\085\082\114\097\067\061\061&quot;;&quot;\067\056\067\077\081\067\061\061&quot;,&quot;\075\086\100\050\105\086\065\088&quot;;&quot;\102\099\117\113\110\102\113\065\107\117\112\120\053\056\081\081\049\106\047\112\119\070\103\100\085\089\115\080\090\119\068\073\113\048\071\061&quot;,&quot;\114\097\072\112\090\076\072\047\054\076\075\119\075\055\078\069\120\067\061\061&quot;,&quot;\104\067\053\108\099\050\118\120&quot;,&quot;\077\112\079\070\103\117\079\122\116\108\079\051\075\085\082\071\121\086\105\061&quot;,&quot;\101\097\075\050\101\052\075\108\090\097\120\083\086\051\055\109\090\086\050\061&quot;,&quot;\048\047\116\085\115\067\061\061&quot;,&quot;\085\113\049\071\070\069\074\102\088\083\118\097\111\118\066\109\114\098\077\113\079\066\118\104\054\069\047\078\099\107\061\061&quot;,&quot;\081\110\104\050\076\104\076\111&quot;;&quot;\054\081\069\048\077\102\057\061&quot;,&quot;&quot;,&quot;\103\107\061\061&quot;,&quot;\077\086\069\070\072\051\075\120\065\084\079\068\101\121\075\050\072\109\119\061&quot;;&quot;\103\076\070\120\103\070\098\078&quot;,&quot;\077\085\052\061&quot;;&quot;\050\117\068\119\099\055\111\085&quot;;&quot;\054\102\065\104\105\107\061\061&quot;;&quot;\108\073\088\083\110\069\074\068&quot;,&quot;\097\114\117\084\080\116\122\076&quot;;&quot;\085\086\119\076\097\116\061\061&quot;;&quot;\101\072\087\098\072\086\075\105\065\084\075\110\101\067\061\061&quot;;&quot;\078\109\065\053\114\108\082\083&quot;,&quot;\109\072\097\082\089\072\075\109\069\075\043\103\089\120\119\061&quot;;&quot;\078\102\087\053\114\086\100\051&quot;;&quot;\078\081\072\069\075\086\055\053\054\116\061\061&quot;,&quot;\105\051\072\081\054\081\072\053&quot;,&quot;\072\055\072\117\103\112\057\053\101\068\075\106\090\097\116\083&quot;,&quot;\078\052\072\069\072\084\079\122\072\108\054\098\077\084\075\079\077\050\061\061&quot;,&quot;\072\117\084\080\078\117\072\053\057\052\087\055\075\117\072\047\075\117\072\076\057\116\061\061&quot;;&quot;\103\110\107\055\054\111\115\074\103\107\061\061&quot;}for N,Q in ipairs({{743570+-743569;-1001085+1001181};{854806-854805;202973+-202965};{-110282+110291,-777991-(-778087)}})do while Q[416472+-416471]&lt;Q[674279-674277]do G[Q[1026810-1026809]],G[Q[1032910+-1032908]],Q[249696+-249695],Q[617051+-617049]=G[Q[522268+-522266]],G[Q[594104+-594103]],Q[-478002-(-478003)]+(329814-329813),Q[-455349-(-455351)]-(785339-785338)end end local function N(N)return G[N-(-426926-(-429146))]end do local N=table.concat local Q=type local W=string.sub local d=string.len local D={Y=-230663+230694,k=464677-464645;n=-931273-(-931307),W=-403711+403728,m=203240+-203186;[&quot;\050&quot;]=777747-777699;X=81501+-81458;x=-87274-(-87286),j=-238274-(-238332),E=26100+-26051,[&quot;\053&quot;]=427762-427712;C=95330+-95330;v=688719+-688673;s=-983923+983963,Z=535136+-535106;[&quot;\049&quot;]=1041613+-1041551,[&quot;\054&quot;]=938462+-938437,R=-144824+144825;[&quot;\048&quot;]=145149-145102;y=-648832+648851,l=743447-743424,S=309619+-309567;O=-738682+738691;r=-730089+730115,u=757974-757968,a=-570833+570853,N=-159287-(-159315);b=-529239-(-529272),U=558968-558965;Q=-473605+473643,t=-133053-(-133069),[&quot;\051&quot;]=549096+-549057,V=-511854+511876,H=847176-847155,q=-151671+151730,d=691650+-691593;e=-279326-(-279344),K=303070+-303041,[&quot;\052&quot;]=230585+-230581,A=382653+-382640,[&quot;\055&quot;]=366459-366422,i=348888-348864;h=497335+-497282,[&quot;\043&quot;]=702335-702320,T=-334869-(-334874),[&quot;\057&quot;]=1037129+-1037121;c=-207360-(-207402);I=709985-709922,G=939784+-939740;p=-763275+763282,B=917386+-917325;D=-992255-(-992306);z=833815+-833805,[&quot;\047&quot;]=-143576+143611,o=33492+-33490,[&quot;\056&quot;]=288030+-287970;L=156074+-156038;w=-373686+373742,g=94145+-94131;J=-40574-(-40615),M=-468614-(-468641),f=796444-796389;P=5339-5294;F=-196284-(-196295)}local n=G local i=math.floor local F=string.char local R=table.insert for G=608114+-608113,#n,-991458+991459 do local Y=n[G]if Q(Y)==&quot;\115\116\114\105\110\103&quot;then local Q=d(Y)local q={}local b=-800374-(-800375)local j=-755421-(-755421)local K=-542865+542865 while b&lt;=Q do local G=W(Y,b,b)local N=D[G]if N then j=j+N*(1046793+-1046729)^((931006+-931003)-K)K=K+(361383+-361382)if K==-1009727-(-1009731)then K=-629273+629273 local G=i(j/(-4802+70338))local N=i((j%(213182-147646))/(-141957-(-142213)))local Q=j%(722551-722295)R(q,F(G,N,Q))j=-493270+493270 end elseif G==&quot;\061&quot;then R(q,F(i(j/(-348809+414345))))if b&gt;=Q or W(Y,b+(570450+-570449),b+(-193687-(-193688)))~=&quot;\061&quot;then R(q,F(i((j%(788645-723109))/(-542255-(-542511)))))end break end b=b+(-289989-(-289990))end n[G]=N(q)end end end return(function(G,W,d,D,n,i,F,h,j,u,t,R,J,B,U,b,Q,Y,s,p,K,q,l)Q,u,R,Y,h,q,J,p,t,s,b,j,U,l,K,B=function(Q,d,D,n)local a,c,F,v,S,y,s,E,H,k,A,C,P,Z,V,b,g,M,o,w,T,r,Y,j,X,I,K,f,O,m,e,z,x,L while Q do if Q&lt;367998+8396161 then if Q&lt;4606779-(-624309)then if Q&lt;2442794-(-853397)then if Q&lt;439064+2013564 then if Q&lt;2050009-936061 then if Q&lt;-175294-(-1007027)then if Q&lt;34401+753747 then F=R[D[-412967-(-412968)]]j=N(547014-544781)K=18071299457020-991005 Y=R[D[592284+-592282]]b=Y(j,K)Q=F[b]F=N(86913-84664)Y=q()R[Y]=Q j=u(275256+8163238,{D[-212549+212552],Y})Q=G[F]K={Q(j)}F=K[-262011-(-262012)]j=F b=K[233107-233105]K=q()R[K]=b Q=not j Q=Q and 10828911-394800 or 297514+10718223 else Q={}R[D[295389+-295387]]=Q k=N(-687724+689946)s=35184372741557-652725 F=R[D[-1041534+1041537]]K=F F=b%s w=-330445-(-330700)R[D[259082+-259078]]=F T=b%w w=-186056-(-186058)s=T+w R[D[-961385-(-961390)]]=s w=G[k]k=N(197441-195157)T=w[k]w=T(Y)k=114457+-114456 T=N(1045141+-1042836)H=w C=-435293-(-435294)j[b]=T T=707286-707114 M=C C=1039765-1039765 a=M&lt;C C=k-M Q=-185630+10327235 end else if Q&lt;-641030+1659427 then O=392675-392674 Q=4467040-717793 L=P[O]A=L else Q=14705349-(-369824)X=t(X)y=t(y)v=t(v)P=nil o=t(o)g=t(g)f=t(f)end end else if Q&lt;466043+1693011 then if Q&lt;82020+1290374 then F=N(-988212-(-990467))H=U(8025920-52606,{})K=N(-450867+453105)k=N(-70330+72579)Q=G[F]Y=R[D[112362+-112358]]j=G[K]w=G[k]k={w(H)}T={W(k)}w=-459440+459442 s=T[w]K=j(s)j=N(21144+-18916)b=Y(K,j)Y={b()}F=Q(W(Y))Y=F b=R[D[696149+-696144]]F=b Q=b and 6995018-92123 or 12081899-1024923 else m=R[b]Q=m and 4969563-33813 or 334384+11693415 x=m end else C=N(-493876-(-496171))Q=-917220+17609424 H=G[C]F=H end end else if Q&lt;-676143+3741035 then if Q&lt;2908026-(-59258)then if Q&lt;54261+2821953 then Q=R[D[903174-903164]]b=R[D[-943657+943668]]Y[Q]=b Q=R[D[897786+-897774]]b={Q(Y)}F={W(b)}Q=G[N(-195266-(-197536))]else b=R[D[-261555+261557]]j=R[D[203077-203074]]Y=b==j F=Y Q=-333569+3486446 end else I=N(449746-447467)a=G[I]Q=4765381-548432 I=N(191905+-189610)M=a[I]H=M end else if Q&lt;2416254-(-872252)then if Q&lt;-56782+3259992 then Q=F and 1787093-670054 or 7253781-(-501927)else Q=12717158-(-93348)e=V y=e I[e]=y e=nil end else Q=14370093-108890 b=R[D[-246891+246894]]j=536683-536644 Y=b*j b=21088+-20831 F=Y%b R[D[487645-487642]]=F end end end else if Q&lt;4940276-902513 then if Q&lt;3461868-(-98817)then if Q&lt;23973+3465966 then if Q&lt;-840801+4257725 then b=q()w=N(-534792+537041)Q=true R[b]=Q j=N(-945965-(-948187))Y=d s=q()F=G[j]K=q()j=N(-595440+597708)Q=F[j]j=q()k=p(-529119+16999415,{s})R[j]=Q Q=p(14056478-286953,{})R[K]=Q Q=false R[s]=Q T=G[w]w=T(k)Q=w and 8084873-762492 or-817501+8722093 F=w else Q=R[D[237279+-237278]]F=Q()Q=R[D[631658+-631656]]Y=F F=Q(Y)Y=F Q=G[N(902747-900491)]F={Y}end else c=-285813-(-285815)r=P[c]c=R[X]O=r==c A=O Q=15800170-990099 end else if Q&lt;-617100+4229468 then if Q&lt;3051395-(-529463)then x=-50838+16991554512254 F=#b H=N(-810898+813120)w=j I=N(-873443+875757)e=13378269485765-(-228752)k=467126-467125 Q=F+k k=G[H]C=R[D[-388977+388978]]M=R[D[515944-515942]]a=M(I,e)H=C[a]M=N(-161603-(-163827))F=k[H]C=G[M]V=N(822451+-820210)a=R[D[28367-28366]]I=R[D[-92477+92479]]e=I(V,x)M=a[e]H=C[M]C={H(Y,w)}w=nil k=F(W(C))b[Q]=k Q=6035368-(-239995)else j=N(-841982-(-844261))F=G[j]k=-340459+2182841660899 w=N(-762785-(-765017))K=R[D[-763753+763754]]s=R[D[738657-738655]]T=s(w,k)j=K[T]Q=F[j]F={Q(b)}Q=G[N(129071+-126824)]F={W(F)}end else S=-973476-(-973477)R[b]=A c=R[v]r=c+S O=P[r]L=M+O O=474633-474377 Q=L%O r=R[y]M=Q O=a+r r=-197605+197861 Q=674858+380723 L=O%r a=L end end else if Q&lt;699346+3748837 then if Q&lt;-53373+4281539 then if Q&lt;4434286-259708 then Y=R[D[900784-900783]]F=#Y Y=-479679+479679 Q=F==Y Q=Q and-430731+7865016 or 5745059-229820 else Q=C F=H Q=H and 727900+15964304 or 2372403-36161 end else Y=N(287613+-285374)Q=G[Y]j=441695-441695 b=R[D[-467121+467129]]Y=Q(b,j)Q=-13825+7533095 end else if Q&lt;3989617-(-893833)then if Q&lt;-1022441+5841565 then k=N(199498-197274)F=G[k]w=j H=R[D[481334-481333]]a=N(-111745+114020)I=-768113+25814751602533 C=R[D[250929+-250927]]M=C(a,I)k=H[M]M=N(72905+-70683)H=-657853+657854 Q=F[k]x=-617940+16306660985725 k=w-H C=G[M]a=R[D[-642996+642997]]I=R[D[-301970+301972]]V=N(543726-541440)e=I(V,x)M=a[e]H=C[M]C={H(Y,w)}F=Q(b,k,W(C))Q=16595502-613531 w=nil else F=8464746-109875 b=N(-779020+781313)j=581899+5622730 Y=b^j Q=F-Y F=N(284284-282038)Y=Q Q=F/Y F={Q}Q=G[N(204815+-202518)]end else Q=-775257+12803056 m=M==a x=m end end end end else if Q&lt;467741+6988826 then if Q&lt;-164590+6985239 then if Q&lt;-649530+6983042 then if Q&lt;6525273-266965 then if Q&lt;6132868-416300 then Q=G[N(-1047123+1049410)]j=N(-848029+850308)b=G[j]j=N(525013-522731)Y=b[j]j=R[D[983908+-983907]]b={Y(j)}F={W(b)}else Q=-277176+11545694 end else j=j+s F=j&lt;=K w=not T F=w and F w=j&gt;=K w=T and w F=w or F w=-279981+3843561 Q=F and w F=-696758+4306419 Q=Q or F end else if Q&lt;6858490-51327 then if Q&lt;6830752-166117 then f=N(-35633+37942)Z=N(356399-354161)Q=G[Z]z=G[f]Z=Q(z)Q=N(411721-409484)G[Q]=Z Q=12488203-(-137660)else V=q()e={}y={}T=nil P=N(-963285-(-965568))R[V]=e e=q()I=nil w=nil O=nil z=u(3496250-(-632264),{V;H,C;s})R[e]=z g=N(-1031040+1033297)o=N(995830+-993595)j=nil k=nil f=q()z={}M=nil R[f]=z s=t(s)z=G[g]M=647448+29772947821840 X=R[f]v={[o]=X;[P]=O}g=z(y,v)R[b]=g z=B(929877+14869746,{f,V;a;H;C,e})s=N(-873325-(-875583))a=t(a)f=t(f)C=t(C)R[K]=z H=t(H)e=t(e)C=N(-720698-(-722919))j=G[s]w=R[b]V=t(V)s=N(-698437-(-700671))s=j[s]V=N(-487441+489744)k=R[K]H=k(C,M)T=w[H]X=N(-679550+681858)s=s(j,T)j=q()z=-809320+13285603619218 R[j]=s M=N(237665+-235349)T=N(658311+-656088)s=G[T]C=G[M]a=R[b]P=26861140052584-924044 I=R[K]e=I(V,z)M=a[e]V=28877690919598-255527 H=C[M]e=N(-742357-(-744658))M=R[b]a=R[K]I=a(e,V)C=M[I]e=4861558534577-(-1005350)f=-588537+30826539660043 k=H[C]z=N(-580010+582322)C=R[b]I=N(236841+-234569)M=R[K]a=M(I,e)H=C[a]y=31040459244937-(-865005)w=k[H]T=s(w)a=N(279566-277250)s=q()R[s]=T w=N(984701-982478)T=G[w]M=G[a]I=R[b]e=R[K]V=e(z,f)a=I[V]V=N(107831-105537)C=M[a]z=21062031579132-(-364115)a=R[b]I=R[K]e=I(V,z)M=a[e]H=C[M]e=N(451166-448890)M=R[b]a=R[K]V=741498+11369885221940 I=a(e,V)C=M[I]k=H[C]w=T(k)f=N(-693841+696092)T=q()R[T]=w I=N(152411-150095)k=N(111294-109071)w=G[k]a=G[I]e=R[b]V=R[K]z=V(f,y)f=3894612869934-(-738279)I=e[z]M=a[I]I=R[b]z=N(293476-291198)e=R[K]V=e(z,f)z=15296452220046-(-509764)a=I[V]C=M[a]a=R[b]V=N(-774447+776760)I=R[K]e=I(V,z)M=a[e]a=N(791750-789508)H=C[M]k=w(H)w=q()I=814720+26189738180899 R[w]=k H=R[b]C=R[K]M=C(a,I)I=l(676707+7702829,{b,K})C=h(-160059+11036394,{b;K})k=H[M]H=q()M=h(-284320+7116034,{b,K})R[H]=k k=q()R[k]=C C=q()R[C]=M M=q()a=u(10779176-109868,{b,K})R[M]=a a=q()R[a]=I I=q()V=J(873937-482399,{b,K;j})e=l(1027479+6432402,{k;s;b;K,w;H;M;T,C;a})R[I]=e e=q()R[e]=V V=p(3079009-(-402458),{e,I})y=R[b]v=R[K]o=v(X,P)Q=G[N(474336+-472059)]f=y[o]z={[f]=V}F={z}end else T=N(-548984+551258)Q=G[T]M=N(-348016-(-350318))k=R[D[-321278+321279]]H=R[D[-203183-(-203185)]]a=31743657221292-303855 C=H(M,a)w=k[C]T=Q(w,b)Q=nil F={Q}Q=G[N(279609+-277302)]end end else if Q&lt;366802+6543386 then if Q&lt;6186642-(-659647)then if Q&lt;6239638-(-590145)then Q=R[w]z=961115-961109 Z=-168830-(-168831)m=Q(Z,z)Q=N(-836743+838980)z=N(60308-58071)G[Q]=m Z=G[z]z=274372-274370 Q=Z&gt;z Q=Q and-399588+6869371 or 12485039-546424 else T=N(-437477+439701)Y=d[-55932+55933]M=342936+290692203759 s=G[T]w=R[D[-151217-(-151218)]]C=N(-690279-(-692532))Q={}k=R[D[602146-602144]]F=325374-325374 b=Q H=k(C,M)Q=823560+5451803 T=w[H]K=s[T]s=K(Y)K=-686132-(-686133)j=s-K K=j j=-996826-(-996827)s=j j=874224-874224 T=s&lt;j j=F-s end else j=R[D[187970-187964]]b=j==Y Q=11405663-348687 F=b end else if Q&lt;246522+7144918 then if Q&lt;7941319-960933 then Q=G[N(389299+-387040)]F={b}else T=R[s]F=T Q=8856923-952331 end else j=-467104+467201 b=R[D[227919+-227917]]Y=b*j b=5594989272902-677145 F=Y+b Y=35184372519689-430857 Q=F%Y R[D[-554756-(-554758)]]=Q b=886607-886606 Y=R[D[915450-915447]]F=Y~=b Q=4158645-864944 end end end else if Q&lt;6856453-(-922887)then if Q&lt;6880453-(-694819)then if Q&lt;7226226-(-323781)then if Q&lt;306535+7183210 then Q=R[D[-155117+155118]]Y=d[-825575+825576]F=Q(Y)b=F F=R[D[343009-343007]]M=3454541329611-159363 H=202943+29595728993558 w=N(-813212+815457)K=R[D[-864773-(-864776)]]I=7980547297845-(-425039)s=R[D[-84432+84436]]k=31121694126587-653663 T=s(w,k)j=K[T]C=N(275501+-273238)Q=F[j]k=N(-852483-(-854774))F=Q(b)j=F F=R[D[929545+-929540]]s=R[D[864702+-864699]]T=R[D[479347+-479343]]w=T(k,H)K=s[w]Q=F[K]a=N(-280374-(-282666))K=R[D[-945433-(-945439)]]F=Q(K)Q=R[D[-91202-(-91209)]]K=F F=Q(K)s=F F=R[D[-970304-(-970312)]]w=R[D[-573099+573102]]k=R[D[-486482-(-486486)]]H=k(C,M)T=w[H]k=N(464679-462455)Q=F[T]w=G[k]H=R[D[279927-279924]]C=R[D[-28491+28495]]M=C(a,I)k=H[M]T=w[k]a=8071631358993-(-311965)w={T(j)}F=Q(s,W(w))T=F M=N(146420-144170)F=R[D[-740164-(-740172)]]k=R[D[-655038+655041]]H=R[D[846472+-846468]]C=H(M,a)w=k[C]Q=F[w]F=Q(j,T)Q=R[D[-333144+333153]]w=F F=Q(w)Q=R[D[-453506+453516]]k=F F=Q(k)H=F F=940222+-940221 Q=H[F]F={Q}Q=G[N(-341158+343389)]else b=-773505+773506 j=R[D[759582-759573]]Q={}K=j Y=Q j=-965209+965210 s=j j=-642544+642544 Q=10819978-(-185015)T=s&lt;j j=b-s end else F={b}Q=G[N(211102-208803)]end else if Q&lt;6969807-(-775305)then if Q&lt;730551+6869471 then Q=-199437+9921803 else w=nil T=nil Q=6371628-(-546506)K=nil end else Q=R[D[-190592+190599]]Q=Q and-992074+5362584 or 447703+7071567 end end else if Q&lt;-151036+8408130 then if Q&lt;7128662-(-967594)then if Q&lt;8156974-231783 then w=N(-88370+90639)T=F F=G[w]w=N(46861-44581)Q=F[w]w=q()R[w]=Q k=N(887208-884929)F=G[k]k=N(976660-974379)Q=F[k]a=N(972893+-970614)M=G[a]k=Q C=Q Q=M and 152646+2866084 or 431951+3784998 H=M else j=274442+3635654 F=1820269-(-746864)b=N(-905132-(-907396))Y=b^j Q=F-Y F=N(-450191-(-452506))Y=Q Q=F/Y F={Q}Q=G[N(4797-2497)]end else Q=G[N(-578148-(-580402))]F={j}end else if Q&lt;-239479+8703835 then if Q&lt;995422+7428864 then Q={}Y=d[-799933-(-799934)]b=Q H=N(611356-609094)j=N(-688654-(-690876))F=G[j]w=N(206261-203951)K=R[D[-549413-(-549414)]]s=R[D[-963297+963299]]k=-260188+6068005241701 T=s(w,k)j=K[T]Q=F[j]T=R[D[-427309-(-427310)]]C=-84900+13504177366068 w=R[D[-894472+894474]]k=w(H,C)s=T[k]T={Q(Y,s)}K=T[365740+-365737]j=T[-206040+206042]Q=734693+13784005 F=T[835738+-835737]s=F else Q=R[D[-477680-(-477681)]]Y=R[D[618430-618428]]b=N(294048+-291800)b=Q[b]F={b(Q,Y)}F={W(F)}Q=G[N(-312493+314745)]end else Q=J(7153916-(-435852),{K})m={Q()}F={W(m)}Q=G[N(-14134+16364)]end end end end end else if Q&lt;-948414+13495130 then if Q&lt;11348009-325255 then if Q&lt;11077879-897091 then if Q&lt;8491263-(-996013)then if Q&lt;8248617-(-1030145)then if Q&lt;-1045034+10182977 then Q=G[N(-495441-(-497667))]F={}else H=N(-340990+343256)M=-129637+129638 e=N(-786363+788653)V=32758093959651-431693 k=s H=Y[H]F=N(-748858+751113)Q=G[F]C=k+M H=H(Y,k,C)C=-155779+155795 F=Q(H,C)C=N(-787013-(-789237))H=F F=G[C]M=R[D[-358391+358392]]a=R[D[1026733+-1026731]]I=a(e,V)C=M[I]Q=F[C]a=-40746-(-40747)M=k-a k=nil a=-263925-(-263927)C=M/a F=Q(j,C,H)H=nil Q=678446+10686997 end else Q=true Q=981766+7628282 end else if Q&lt;-496517+10551359 then if Q&lt;9330445-(-404454)then Q=true Q=Q and 294840+11773990 or 190266+9641742 else Q=G[N(-368768-(-371012))]F={}end else C=C+M k=C&lt;=H I=not a k=I and k I=C&gt;=H I=a and I k=I or k I=864358+11594361 Q=k and I k=6814956-(-793835)Q=Q or k end end else if Q&lt;10672244-(-105822)then if Q&lt;57213+10441090 then if Q&lt;10126324-(-309964)then F=N(-1011694-(-1013968))Q=G[F]s=R[D[306632-306631]]k=N(-76673+78969)H=673752+13575535644889 T=R[D[659212-659210]]w=T(k,H)b=s[w]s=R[K]F=Q(b,s)Q=nil F={Q}Q=G[N(886846+-884561)]else V=#I z=-182463+182463 e=V==z Q=e and 6672989-(-97610)or 846385+11706709 end else Y=d[397610+-397609]k=-747871+14051812279022 Q=#Y b=Q w=N(-307683-(-309981))j=N(348628-346404)F=G[j]K=R[D[-490683-(-490684)]]s=R[D[570200+-570198]]T=s(w,k)j=K[T]Q=F[j]K=165176+-165174 j=b/K K=b F=Q(j)j=F Q=12162142-796699 s=570671-570669 T=s s=-452454-(-452454)F=61504-61503 w=T&lt;s s=F-T end else if Q&lt;10662798-(-349323)then if Q&lt;-219042+11163337 then T=N(-744546-(-746782))Y=d[177771+-177770]b=N(-738689-(-740913))F=G[b]j=R[D[321842-321841]]w=-527829+4785148024457 K=R[D[575193+-575191]]s=K(T,w)b=j[s]Q=F[b]b=#Y F=Q(b)b=F F=343861+-343860 j=#Y Q=-728061+16710032 K=j j=433242+-433241 s=j j=-994945+994945 T=s&lt;j j=F-s else j=j+s w=not T b=j&lt;=K b=w and b w=j&gt;=K w=T and w b=w or b w=13445997-(-672750)Q=b and w b=1839049-(-829417)Q=Q or b end else Q=nil b=Q F=N(-909820+912069)Q=G[F]T=U(177094+14933441,{D[-480139-(-480142)];K})w={Q(T)}s=w[1000034+-1000032]F=w[709172-709171]b=s j=F Q=not j Q=Q and 92409+6720983 or-138718+15525067 end end end else if Q&lt;12540472-679249 then if Q&lt;1030212+10317787 then if Q&lt;11382640-113637 then if Q&lt;153170+11003775 then Y=nil R[D[91100+-91095]]=F Q=8481867-726159 else j=t(j)e=nil I=nil j=nil s=t(s)e=8543+-8542 w=t(w)C=t(C)T=nil b=t(b)M=nil V=t(V)K=t(K)k=nil b=nil a=nil k=N(-194927+197206)H=t(H)K=q()R[K]=b w=N(220668+-218399)T=N(784085+-781816)b=q()R[b]=j s=G[T]V=424060+-423804 T=N(183249-180945)j=s[T]s=q()R[s]=j T=G[w]H=N(850011-847789)z=V w=N(288839+-286559)j=T[w]w=G[k]M={}k=N(-609076+611358)T=w[k]k=G[H]H=N(-283136-(-285396))w=k[H]I={}H=q()Q=581623+12228883 k=-900839+900839 a=q()C=q()R[H]=k V=566681-566680 f=V k=-247573+247575 R[C]=k k={}V=-349017-(-349017)R[a]=M M=-1026461-(-1026461)g=f&lt;V V=e-f end else L=R[b]A=L Q=L and 1003302+-32480 or 563462+3185785 end else if Q&lt;827983+10988153 then if Q&lt;-133431+11676008 then k=not w s=s+T F=s&lt;=K F=k and F k=s&gt;=K k=w and k F=k or F k=8387958-(-881968)Q=F and k F=690505+7474646 Q=Q or F else z=549404+-549404 V=#I Q=131981+12421113 e=V==z end else Q=15522+6902612 end end else if Q&lt;-460673+12514181 then if Q&lt;918514+11059786 then if Q&lt;862652+11111612 then z=N(-410221-(-412458))Q=G[z]z=N(43768-41459)G[z]=Q Q=-186895+12812758 else Q=13107914-(-846979)end else R[b]=x Q=R[b]Q=Q and 305564+5950011 or 9966863-660603 end else if Q&lt;642165+11723046 then if Q&lt;449869+11768173 then Y=N(490047-487738)F=N(726282+-724045)Q=G[F]F=G[Y]Y=N(648905-646596)G[Y]=Q Q=-812241+10534607 Y=N(1039081+-1036844)G[Y]=F Y=R[D[-676788+676789]]b=Y()else Q=G[N(656464+-654224)]F={b}end else Z=N(-222878-(-225100))k=C m=G[Z]Z=N(427437-425164)x=m[Z]m=x(Y,k)x=R[D[223802-223796]]Q=10183154-41549 Z=x()V=m+Z e=V+T Z=-470487-(-470488)V=891972+-891716 I=e%V k=nil T=I V=j[b]m=T+Z x=K[m]e=V..x j[b]=e end end end end else if Q&lt;15489865-972860 then if Q&lt;12889370-(-1030221)then if Q&lt;-1028247+13838651 then if Q&lt;13446409-776558 then if Q&lt;13151736-590689 then V=-926732+926733 z=#I e=j(V,z)y=673386-673385 V=T(I,e)z=R[a]Q=10758021-318645 g=V-y f=w(g)e=nil z[V]=f V=nil else Q=13596757-(-358136)end else Q=1705226-649645 R[b]=F end else if Q&lt;13683144-215576 then if Q&lt;13165781-165096 then y=not g V=V+f e=V&lt;=z e=y and e y=V&gt;=z y=g and y e=y or e y=536020+2687450 Q=e and y e=12297171-647809 Q=Q or e else L=Q c=-264941-(-264942)r=P[c]c=false O=r==c Q=O and 794339+2758829 or 236352+14573719 A=O end else F=N(-953436+955675)Y=N(874250-872023)Q=G[F]F=Q(Y)Q=G[N(-85580-(-87845))]F={}end end else if Q&lt;820755+13384530 then if Q&lt;459567+13686086 then if Q&lt;-270978+14299423 then Q=true Q=Q and 6777575-(-49342)or-22459+8910012 else H=562571+-562316 b=j k=634945+-634945 Q=R[D[-514021+514022]]w=Q(k,H)Y[b]=w Q=-757600+11762593 b=nil end else s=498327-498325 K=-501241+501242 b=R[D[-914218-(-914219)]]j=b(K,s)b=-34836-(-34837)Y=j==b F=Y Q=Y and 3297135-144258 or 92020+2808556 end else if Q&lt;-223417+14602971 then if Q&lt;425694+13841001 then j=-992-(-993)b=R[D[-646694-(-646697)]]Y=b~=j Q=Y and-280236+16608945 or 2246637-(-1047064)else A=R[b]F=A Q=A and-352103+13766478 or 12395846-(-309143)end else f=q()X=-988601+988602 y=998807+-998707 R[f]=x v=295340+-295085 g=N(439273+-437004)F=G[g]g=N(-754499+756779)Q=F[g]g=329536+-329535 F=Q(g,y)g=q()R[g]=F y=630674+-630674 Q=R[w]E=762705-752705 F=Q(y,v)y=q()R[y]=F Q=R[w]o=R[g]P=313836+-313834 S=-559790+559790 v=-131161+131162 F=Q(v,o)v=q()R[v]=F F=R[w]o=F(X,P)F=-348231-(-348232)P=N(-657579+659885)Q=o==F F=N(281816+-279588)O=N(-1003074+1005312)o=q()R[o]=Q Q=N(922898+-920587)L=G[O]r=R[w]Q=e[Q]c={r(S,E)}O=L(W(c))L=N(146337-144031)A=O..L X=P..A Q=Q(e,F,X)P=N(263841+-261592)X=q()R[X]=Q F=G[P]A=u(364959+13837893,{w,f,C,j,b;V;o,X,g,v,y,H})P={F(A)}Q={W(P)}P=Q Q=R[o]Q=Q and 13864399-(-406556)or-343942+11684060 end end end else if Q&lt;15480887-341745 then if Q&lt;-788817+15789213 then if Q&lt;245598+14681012 then if Q&lt;795011+13906974 then K=s(j,K)Q=K and 15491951-387230 or 7254042-(-312958)else F=A Q=L Q=806663+11898326 end else Q=true Q=Q and 11063943-(-910784)or 9325290-715242 end else if Q&lt;16125723-1018369 then if Q&lt;104823+14973033 then x=x+Z F=x&lt;=m f=not z F=f and F f=x&gt;=m f=z and f F=f or F f=15009355-510596 Q=F and f F=481572+1156618 Q=Q or F else T=K k=N(-358267-(-360546))w=G[k]H=R[D[893903+-893902]]C=R[D[630913-630911]]I=29866723495584-481357 a=N(-762584+764827)M=C(a,I)k=H[M]Q=w[k]w=Q(b,T)T=nil Q=15471348-952650 end else Q=R[D[-832173+832174]]b=N(105929+-103640)Y=R[D[-767831+767833]]b=Q[b]F={b(Q,Y)}F={W(F)}Q=G[N(733833-731572)]end end else if Q&lt;17004066-920686 then if Q&lt;43130+15935372 then if Q&lt;-799162+16333710 then C=N(879508+-877279)w=R[D[-432955-(-432956)]]M=12659874934355-104268 k=R[D[89159+-89157]]H=k(C,M)T=w[H]Q=b[T]F={Q}Q=G[N(116623+-114356)]else b=d[375504+-375502]Q=R[D[598008+-598007]]j=Q Y=d[41786+-41785]Q=j[b]Q=Q and 680326+11152587 or-667407+1476763 end else w=not T j=j+s F=j&lt;=K F=w and F w=j&gt;=K w=T and w F=w or F w=4135766-(-389282)Q=F and w F=-997295+13327826 Q=Q or F end else if Q&lt;251996+16352250 then if Q&lt;15729546-(-739014)then b=R[D[-202236-(-202239)]]j=38515+-38483 M=473279+-473266 H=671142+-671140 Y=b%j K=R[D[657659-657655]]w=R[D[419322+-419320]]e=R[D[-374762-(-374765)]]I=e-Y e=-203005+203037 a=I/e C=M-a k=H^C T=w/k s=K(T)K=4295518687-551391 j=s%K s=-127374+127376 K=s^Y b=j/K H=-509276-(-509532)k=30129+-30128 K=R[D[-253425+253429]]w=b%k k=258879+4294708417 T=w*k s=K(T)K=R[D[318146-318142]]T=K(b)j=s+T w=158033-92497 s=395039-329503 K=j%s T=j-K s=T/w w=703579-703323 T=K%w b=nil k=K-T Y=nil w=k/H H=257325-257069 k=s%H C=s-k M=-240575-(-240831)s=nil H=C/M C={T;w,k;H}T=nil w=nil k=nil K=nil j=nil R[D[-441088+441089]]=C Q=-817837+6333076 H=nil else Q=true R[D[39934-39933]]=Q F={}Q=G[N(-877453-(-879678))]end else H=q()R[H]=F Q=R[w]C=-26468+26471 M=-175978+176043 F=Q(C,M)C=q()R[C]=F Q=-15921-(-15921)M=Q Z=N(1019377+-1017139)Q=229500+-229500 I=N(940131+-937882)F=G[I]e=J(5713544-850914,{})I={F(e)}F=59946-59944 a=Q Q={W(I)}I=Q Q=I[F]e=Q F=N(690726+-688471)Q=G[F]V=R[j]m=G[Z]Z=m(e)m=N(-710336-(-712564))x=V(Z,m)V={x()}F=Q(W(V))V=q()R[V]=F F=-291977+291978 x=R[C]m=x x=-695103+695104 Z=x x=-398404+398404 z=Z&lt;x Q=15831018-755845 x=F-Z end end end end end end end Q=#n return W(F)end,function(G,N)local W=j(N)local d=function(d,D,n,i,F)return Q(G,{d;D,n,i;F},N,W)end return d end,{},{},function(G,N)local W=j(N)local d=function(d,D,n,i,F,R)return Q(G,{d;D,n;i;F,R},N,W)end return d end,function()b=(-669158+669159)+b Y[b]=-675472+675473 return b end,function(G,N)local W=j(N)local d=function(d,D)return Q(G,{d;D},N,W)end return d end,function(G,N)local W=j(N)local d=function(d)return Q(G,{d},N,W)end return d end,function(G)Y[G]=Y[G]-(-258200-(-258201))if-448284-(-448284)==Y[G]then Y[G],R[G]=nil,nil end end,function(G,N)local W=j(N)local d=function(...)return Q(G,{...},N,W)end return d end,-550300-(-550300),function(G)for N=-781146+781147,#G,-833124-(-833125)do Y[G[N]]=Y[G[N]]+(-339337-(-339338))end if d then local Q=d(true)local W=n(Q)W[N(-254989-(-257224))],W[N(-95714-(-97985))],W[N(840350+-838062)]=G,K,function()return 1009290+-296271 end return Q else return D({},{[N(-359667+361938)]=K,[N(490014-487779)]=G,[N(-11498+13786)]=function()return 551321-(-161698)end})end end,function(G,N)local W=j(N)local d=function()return Q(G,{},N,W)end return d end,function(G,N)local W=j(N)local d=function(d,D,n,i)return Q(G,{d;D;n,i},N,W)end return d end,function(G)local N,Q=-773707+773708,G[-133662+133663]while Q do Y[Q],N=Y[Q]-(1006924+-1006923),N+(-957377+957378)if Y[Q]==536418+-536418 then Y[Q],R[Q]=nil,nil end Q=G[N]end end,function(G,N)local W=j(N)local d=function(d,D,n)return Q(G,{d,D;n},N,W)end return d end return(s(-756528+4062279,{}))(W(F))end)(getfenv and getfenv()or _ENV,unpack or table[N(486210-483915)],newproxy,setmetatable,getmetatable,select,{...})end)(...)</ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="ModuleScript" referent="RBX4C91BC5946DF48ACA356A320E480C3F9">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">ModelRegistry</string>
				<string name="ScriptGuid">{591CBA07-07FA-4F2D-B0C8-02D24D93F270}</string>
				<ProtectedString name="Source">--[[ v1.0.0 https://wearedevs.net/obfuscator ]] return(function(...)local O={&quot;\116\106\047\083\112\043\076\053\080\098\076\107\052\067\061\061&quot;;&quot;\083\071\079\067\069\102\104\052\082\067\084\115\083\077\054\085\069\103\082\080\088\090\061\061&quot;,&quot;\078\069\119\055\081\117\099\061&quot;;&quot;\084\086\105\066\078\090\114\109\089\084\099\052\071\116\068\099\069\103\097\061&quot;;&quot;\050\055\108\097\118\118\104\077\082\083\061\061&quot;;&quot;\053\054\056\074\048\090\098\117\121\097\052\067\052\088\085\068\102\049\079\089&quot;;&quot;\056\051\113\105\101\051\075\084\089\051\049\047\052\066\098\055\113\050\098\061&quot;;&quot;\115\101\115\105\083\054\084\055\081\105\074\101\087\084\065\076&quot;;&quot;\078\100\048\073\056\047\106\066\051\053\076\043\121\097\111\100\088\056\074\069\086\083\061\061&quot;,&quot;\052\050\120\121\112\115\071\043\098\051\049\072\089\070\074\051\081\084\083\061&quot;,&quot;\071\051\049\102\071\112\084\047\078\069\099\061&quot;;&quot;\089\118\120\077\049\078\083\090\104\050\097\086\115\118\113\111\073\083\061\061&quot;,&quot;\085\073\067\118\081\110\086\054\050\077\081\089\049\090\061\061&quot;,&quot;\069\122\087\115\106\057\084\103\105\122\084\067\070\050\097\098&quot;;&quot;\107\103\073\115\118\081\043\106\105\073\112\119\047\090\061\061&quot;;&quot;\089\078\071\118\103\053\081\068\102\055\053\048\051\106\117\122\049\067\061\061&quot;,&quot;\112\057\101\116\089\090\061\061&quot;;&quot;\068\090\061\061&quot;,&quot;\120\087\073\070\086\050\086\061&quot;;&quot;\070\116\086\073\077\075\074\103\067\105\099\061&quot;,&quot;\047\117\056\101\067\120\061\061&quot;,&quot;\068\047\090\110\078\106\086\085\068\090\061\061&quot;,&quot;\076\121\085\086\069\110\084\088\105\104\120\122\082\121\099\068\110\078\070\061&quot;;&quot;\056\083\086\085\057\102\101\084\070\118\048\090\099\082\086\115\071\103\122\061&quot;;&quot;\112\119\085\088\088\067\101\082\116\090\080\083\106\067\061\061&quot;,&quot;\078\080\115\076\089\112\111\085\069\080\119\084\089\112\121\118\069\080\119\072\078\050\118\061&quot;;&quot;\104\106\073\057\113\078\072\116\103\083\061\061&quot;;&quot;\098\110\083\061&quot;;&quot;\047\121\111\051\068\117\073\087\048\056\107\103\069\120\082\070&quot;;&quot;\077\115\103\089\047\065\122\101\100\121\073\074&quot;,&quot;\122\050\047\075\083\080\084\103\106\077\117\067\048\090\061\061&quot;;&quot;\069\088\078\053\116\083\061\061&quot;,&quot;\078\117\113\084\075\090\061\061&quot;,&quot;\116\054\110\074\071\050\119\078\071\101\115\079\112\105\079\100\098\090\061\061&quot;;&quot;\078\083\089\080\119\057\049\111\082\057\071\055\117\075\056\050\070\104\069\076\072\090\047\051\050\054\122\122\089\102\076\115\115\113\113\111\081\105\073\086\083\115\108\115\053\087\108\056\115\076\057\079\098\090\047\103\103\050\055\053\108\086\078\108\108\057\049\069\071\111\084\117\119\048\118\053\082\073\100\051\088\055\099\065\054\071\113\043\084\100\054\053\079\073\068\084\077\106\086\118\120\084\102\050\113\117\105\117\099\121\051\101\101\069\114\051\119\116\098\061&quot;,&quot;\073\069\084\087\087\122\119\116\102\103\107\075\076\104\115\099\078\120\061\061&quot;;&quot;\048\119\066\081\052\090\115\117\120\090\061\061&quot;,&quot;\075\066\115\085\081\051\052\077\075\080\121\065\071\112\052\110\069\080\084\110\098\117\113\065\078\080\115\053\069\080\119\072\078\050\118\061&quot;;&quot;\081\112\074\100\089\120\061\061&quot;;&quot;\120\084\074\113\056\090\051\069\119\102\105\086\105\112\086\118\090\085\071\103\043\118\083\121\098\049\077\071\054\073\097\049&quot;;&quot;\098\054\115\076\081\117\078\110&quot;,&quot;\086\072\071\066\075\075\115\048\098\081\071\082\065\101\056\074\050\081\083\061&quot;,&quot;\078\080\084\065\071\051\113\086&quot;;&quot;\068\114\076\103\071\068\103\107\114\097\053\065\120\099\111\115\047\090\089\050&quot;,&quot;\102\066\075\081\086\120\061\061&quot;,&quot;\087\101\115\114\089\080\118\053\073\112\098\084\081\117\099\084\073\090\061\061&quot;,&quot;\055\056\104\072\107\077\066\070\112\085\068\116\084\075\107\112\102\072\073\111\057\067\061\061&quot;;&quot;\073\117\070\071\053\100\119\069&quot;,&quot;\110\076\056\113\085\112\111\077&quot;;&quot;\110\116\121\043\085\120\061\061&quot;,&quot;\120\057\075\081\068\109\074\119\104\118\113\081\107\067\061\061&quot;,&quot;\053\111\086\056\106\053\105\065\047\085\104\083\084\067\061\061&quot;;&quot;\107\100\047\085\102\051\073\056\053\097\108\097\051\088\076\080\104\085\057\074&quot;,&quot;\089\079\117\114\079\097\071\074\087\057\076\054\112\067\082\082&quot;,&quot;\081\089\048\118\074\078\090\061&quot;,&quot;\076\076\051\115\108\114\055\110\054\067\061\061&quot;,&quot;\112\074\071\054\083\100\087\067\112\051\078\109\056\051\119\076&quot;;&quot;\081\080\049\085&quot;,&quot;\069\065\066\081\116\090\061\061&quot;,&quot;\081\054\083\100\071\112\099\080\098\066\098\121\071\070\052\111\115\120\061\061&quot;;&quot;\051\114\117\070\089\088\119\118\115\073\051\117\089\083\061\061&quot;,&quot;\051\081\085\105\043\085\088\079\101\076\054\098\121\067\061\061&quot;,&quot;\052\070\078\087\078\087\086\053\113\051\121\087\052\100\076\068\056\115\098\061&quot;,&quot;\115\110\052\108\081\066\087\100\089\087\076\100\116\080\084\075&quot;;&quot;\099\052\065\090\118\099\116\089\111\083\061\061&quot;;&quot;\087\075\121\078\057\113\073\104\083\102\087\080\108\109\089\116\072\118\122\061&quot;,&quot;\081\051\115\102&quot;;&quot;\089\113\049\084\120\099\098\061&quot;;&quot;\074\056\087\109\069\051\053\098\088\081\109\056\051\067\061\061&quot;,&quot;\065\054\066\104\087\078\098\115\080\120\061\061&quot;,&quot;\074\108\043\080\049\083\061\061&quot;;&quot;\083\100\067\084\087\118\121\108\068\115\074\084\056\069\085\054\083\090\061\061&quot;;&quot;\056\098\110\083\068\102\084\053\043\113\083\061&quot;;&quot;\087\050\079\089\112\118\090\043\073\101\052\065\052\117\090\061&quot;,&quot;\075\105\068\107\073\079\071\075&quot;;&quot;\052\087\074\113\112\110\110\073\101\080\065\053\098\101\113\073\075\083\061\061&quot;,&quot;\081\118\074\070\081\087\090\111\052\087\052\054\116\115\075\117\101\115\099\061&quot;;&quot;\052\116\073\048\052\085\114\097\107\067\061\061&quot;;&quot;\052\080\101\055\084\043\122\080\067\080\050\076\075\116\074\086\107\103\066\113\050\100\107\113\098\054\118\101\103\043\109\118\068\116\050\067\110\120\043\054\122\073\076\117\116\085\081\085\054\051\111\104\102\122\071\071&quot;,&quot;\108\100\051\048\087\071\071\120\068\047\089\066\109\120\106\052\085\083\061\061&quot;,&quot;\098\117\052\055\089\112\111\066&quot;;&quot;\103\081\121\099\103\120\108\120\077\083\061\061&quot;,&quot;\111\113\099\099\052\076\057\117\111\086\112\100\076\105\084\119\078\057\078\084&quot;,&quot;\100\087\081\103\048\057\105\082\075\115\109\081\090\067\061\061&quot;;&quot;\102\120\083\099\074\084\049\115\086\083\074\069\115\102\053\084\089\074\087\110&quot;,&quot;\078\052\121\054\048\049\088\076\055\083\061\061&quot;,&quot;\116\118\119\074\113\070\076\073\071\117\110\105\098\105\071\086\071\050\120\061&quot;,&quot;\080\057\099\103\103\052\120\121\098\068\122\048\105\090\061\061&quot;,&quot;\116\110\048\065\074\083\085\087\084\069\073\100\104\100\109\070\056\087\086\061&quot;;&quot;\085\057\077\110\089\107\084\078\104\089\099\074\107\047\105\119\080\084\051\070\105\067\061\061&quot;,&quot;\122\086\081\116\100\122\065\121&quot;;&quot;\051\072\053\078\112\121\080\090\105\099\057\079\099\104\067\054\057\067\061\061&quot;,&quot;\075\089\111\085\087\057\098\061&quot;,&quot;\099\052\078\080\043\047\106\121\076\077\084\089\115\067\069\049\076\090\061\061&quot;;&quot;\073\105\052\084\113\053\090\084\087\054\119\122\052\118\121\083&quot;;&quot;\105\090\073\109\115\090\061\061&quot;,&quot;\115\051\074\076\098\051\115\055\099\070\052\110\071\051\115\105\071\051\115\118\099\083\061\061&quot;,&quot;\075\110\079\070\113\101\083\067\052\053\113\117\073\070\071\070\068\120\061\061&quot;;&quot;\075\080\049\102\075\080\074\100&quot;,&quot;\052\084\075\055\078\070\049\083\089\112\115\122\101\066\074\073&quot;;&quot;\098\100\074\108\116\066\119\107\083\080\084\113\087\110\120\080\071\067\061\061&quot;;&quot;\052\084\113\067\108\067\061\061&quot;;&quot;\081\112\090\111\116\053\071\072\081\051\121\087\112\057\113\114&quot;;&quot;\117\118\052\108\069\083\061\061&quot;,&quot;\081\100\043\117\089\115\052\075\081\084\110\101\115\100\070\055&quot;;&quot;\086\078\110\067\057\098\056\055\068\122\049\070\053\043\100\099\099\067\061\061&quot;,&quot;\116\074\082\053\117\122\118\082\067\067\061\061&quot;,&quot;\116\072\073\110\049\083\061\061&quot;;&quot;\118\089\104\074\075\065\108\067&quot;;&quot;\112\069\069\057\073\103\053\086\109\113\074\054\083\088\072\084\080\067\088\066\049\083\061\061&quot;;&quot;\087\050\113\114\087\112\049\107\112\087\121\101\115\100\110\118\113\083\061\061&quot;;&quot;\049\074\115\077\082\112\098\082\107\120\061\061&quot;;&quot;\078\054\121\072\081\117\099\061&quot;;&quot;\089\122\043\112\049\083\061\061&quot;;&quot;\115\097\081\072\079\108\043\089\053\043\068\110\054\111\099\110\068\114\070\061&quot;;&quot;\073\099\049\103\074\116\115\106\057\097\050\072\070\043\057\119\066\043\080\118\072\108\052\055\066\108\097\074\113\101\112\113\053\069\083\061&quot;,&quot;&quot;,&quot;\069\084\049\066\075\067\061\061&quot;;&quot;\116\069\056\104\103\120\061\061&quot;,&quot;\112\069\113\086\101\118\065\121\116\053\079\087\071\069\074\119\112\051\075\061&quot;;&quot;\098\051\113\065\081\051\067\061&quot;,&quot;\111\089\084\068\100\090\061\061&quot;;&quot;\070\120\080\049\075\066\053\077\117\090\061\061&quot;,&quot;\081\047\115\100\043\111\114\097\070\081\082\117\084\120\061\061&quot;;&quot;\065\071\107\051\119\105\078\113\120\056\083\069\112\115\073\061&quot;;&quot;\075\119\103\066\111\109\090\068\088\047\120\047\077\102\072\108\043\110\120\087&quot;;&quot;\081\057\099\061&quot;;&quot;\105\104\107\114\043\113\090\061&quot;,&quot;\071\101\113\122\098\053\090\055\113\053\071\100\083\112\073\080\101\115\073\061&quot;,&quot;\078\056\078\057\113\111\054\083\100\067\061\061&quot;;&quot;\049\070\114\087\049\116\112\049&quot;,&quot;\079\101\087\057\056\067\061\061&quot;,&quot;\071\121\104\116\065\047\088\108\115\087\068\111\122\118\051\097\101\121\118\085\117\120\097\077\108\090\114\075\070\118\088\080\070\066\051\078\076\084\065\074\068\118\068\055\080\054\101\082\079\086\116\100\103\114\079\104&quot;;&quot;\104\115\102\089\107\078\121\088\107\119\097\061&quot;;&quot;\075\112\070\111\101\118\099\117\081\050\071\122\073\051\049\057\071\051\083\061&quot;;&quot;\081\053\113\076\071\050\110\088\083\053\110\054\052\054\043\055&quot;,&quot;\112\074\055\078\074\067\061\061&quot;,&quot;\050\050\099\090\050\110\078\104\052\104\043\080\049\065\090\112\115\069\049\051\122\067\061\061&quot;;&quot;\101\066\071\098\086\097\089\051\047\047\120\061&quot;,&quot;\069\084\049\085\081\054\052\110\056\120\061\061&quot;,&quot;\122\066\117\065\074\098\051\116\070\079\050\120&quot;,&quot;\068\074\075\052\118\090\061\061&quot;;&quot;\074\051\070\121\051\083\061\061&quot;;&quot;\115\114\080\121\075\080\088\110\118\102\118\119\053\051\055\105\088\067\084\116\101\120\122\061&quot;,&quot;\051\083\071\113\049\099\054\121\057\051\083\121\065\053\081\056&quot;;&quot;\075\118\082\073\079\115\070\079\071\083\061\061&quot;,&quot;\118\086\105\106\082\120\061\061&quot;,&quot;\104\104\102\049\078\118\068\121\089\053\051\074\087\069\078\085\103\102\114\055\055\065\067\061&quot;,&quot;\065\083\107\082\111\067\073\088\065\090\061\061&quot;,&quot;\067\098\070\049\118\108\077\077\080\049\087\061&quot;,&quot;\076\049\089\099\105\085\047\072\109\102\089\116\066\107\115\083\048\121\102\051\100\055\117\084\105\116\075\107\073\087\086\101\074\111\076\113\053\100\067\056\085\078\105\079\102\117\100\056\068\090\061\061&quot;,&quot;\075\066\110\100\078\083\061\061&quot;;&quot;\115\118\110\051\052\080\099\055\101\084\087\084\087\054\099\100\087\090\061\061&quot;,&quot;\068\074\073\101\116\069\114\052\080\109\111\090\057\049\081\053&quot;,&quot;\113\054\117\048\055\105\086\105\081\056\110\118\082\090\061\061&quot;;&quot;\054\088\115\090\077\053\054\051\075\072\116\043\111\120\061\061&quot;,&quot;\081\057\070\061&quot;,&quot;\071\109\049\075\100\067\061\061&quot;;&quot;\052\084\113\057\101\100\052\111\098\115\074\105\081\070\076\053\071\053\098\061&quot;;&quot;\101\055\122\108\076\116\112\100\116\085\051\069\047\097\078\107\052\065\077\066\099\120\061\061&quot;;&quot;\070\049\103\103\107\098\080\117\120\055\067\043\077\073\085\100\107\083\061\061&quot;,&quot;\115\105\075\121\113\118\086\084\089\101\110\111\078\118\100\067\056\118\073\061&quot;,&quot;\043\085\104\097\089\047\084\085\103\073\107\098\056\048\115\049\121\120\061\061&quot;;&quot;\052\079\087\083\097\087\076\076\116\083\061\061&quot;;&quot;\113\050\083\043\056\051\084\084\052\087\110\105\098\066\113\116\101\067\061\061&quot;,&quot;\107\111\065\097\043\079\065\104\106\049\086\061&quot;,&quot;\113\083\071\047\082\102\080\117\074\070\122\061&quot;,&quot;\101\115\065\074\115\100\052\119\098\051\071\080\089\117\099\117\113\057\099\061&quot;,&quot;\113\100\110\083\089\084\074\108\081\087\049\068\087\070\083\053\071\070\122\061&quot;,&quot;\100\113\070\073\047\113\047\071\104\083\061\061&quot;,&quot;\080\103\083\055\090\074\099\056\087\070\122\079\087\077\083\074\075\081\121\054\109\052\048\101\056\105\102\086\098\056\080\085\083\085\116\047\114\072\048\050\108\087\118\083\108\104\043\103\086\067\061\061&quot;;&quot;\076\078\082\088\056\090\061\061&quot;;&quot;\121\089\072\066\085\051\120\118\043\072\082\105\122\085\122\061&quot;,&quot;\119\070\076\080\043\070\080\118\108\086\113\072\050\090\061\061&quot;,&quot;\083\098\109\074\087\120\061\061&quot;,&quot;\120\086\065\119\121\109\055\072\090\104\102\065\079\117\100\099\087\099\072\080\079\104\086\061&quot;,&quot;\113\099\072\109\122\083\097\061&quot;;&quot;\077\105\118\047\103\106\116\080\114\120\061\061&quot;,&quot;\087\069\087\107\110\119\053\078\081\121\085\047\067\097\048\049\053\085\104\111\106\054\074\054\103\083\087\113\068\069\097\084\071\103\079\098\110\102\111\116\075\069\080\116\078\098\107\097\048\104\048\102\120\119\108\069\078\077\097\117\043\088\109\121\075\116\120\067\089\070\056\065\108\085\066\100\117\111\101\119\113\074\102\119\084\053\054\084\070\115\071\088\048\102\057\068\086\104\073\113\087\111\097\067\111\070\113\077\065\111\049\081\102\108\089\109\117\043\067\061&quot;;&quot;\082\051\117\069\101\056\067\061&quot;,&quot;\083\112\065\052\116\100\067\111\098\118\113\067\116\069\085\047&quot;;&quot;\069\122\073\050\097\104\055\088\071\116\099\061&quot;;&quot;\066\069\080\056\100\121\070\084\090\090\061\061&quot;,&quot;\053\080\118\043\073\113\056\078\071\067\061\061&quot;,&quot;\075\115\107\080\097\075\083\114\115\081\073\061&quot;,&quot;\043\080\047\088\115\074\116\112\050\051\116\113\109\085\057\073\105\066\065\112\075\120\061\061&quot;;&quot;\098\054\074\102\078\051\049\076&quot;;&quot;\051\082\111\057\048\106\105\087\070\083\077\049\076\102\097\061&quot;;&quot;\101\118\074\101\101\054\113\068\112\087\065\118\113\110\065\086&quot;,&quot;\068\081\115\052\080\074\090\076\120\122\083\122\068\065\074\088\050\047\120\061&quot;,&quot;\112\069\052\117\115\074\079\085\112\069\087\053\101\070\076\065&quot;,&quot;\086\072\048\105\120\121\110\100\049\090\069\088\081\106\065\043&quot;;&quot;\098\116\081\121\116\055\110\049\067\067\061\061&quot;;&quot;\082\104\105\066\105\102\086\112\088\051\077\076\089\047\103\100\117\111\115\068&quot;,&quot;\076\054\104\055\049\083\061\061&quot;;&quot;\087\075\055\082\113\080\067\074\114\119\088\121\079\122\100\078&quot;;&quot;\115\122\068\083\073\097\120\074&quot;;&quot;\055\079\116\074\047\109\076\056\107\075\082\119\112\052\122\107\088\121\087\061&quot;,&quot;\089\087\077\114\114\113\106\116\076\120\061\061&quot;;&quot;\077\111\075\117\118\087\087\079\075\084\116\100\110\087\051\111\086\110\055\067\075\120\061\061&quot;,&quot;\101\071\113\079\056\051\110\073\067\075\085\116\103\084\108\120&quot;,&quot;\075\080\065\065\098\090\061\061&quot;;&quot;\054\078\106\100\112\083\061\061&quot;;&quot;\052\107\106\085\080\081\108\067\065\083\061\061&quot;;&quot;\048\122\097\090\106\114\109\043\097\120\043\114\075\067\061\061&quot;;&quot;\080\057\076\105\054\116\117\106\100\085\080\120\112\072\066\085\073\109\100\097\120\118\071\090\065\102\117\048\073\107\080\069\099\102\078\122\057\067\122\072\082\065\097\103\098\053\118\105\088\053\120\099\089\080\103\074\081\102\085\068\082\121\112\113\112\116\056\077\084\053\049\107\099\108\100\108\081\043\110\100\089\115\111\108\084\047\073\072\122\072\107\065\048\070\105\089\084\086\076\082\056\088\102\122\048\056\102\080\082\122\090\077\074\052\049\098\047\087\086\061&quot;,&quot;\116\110\113\088\101\118\115\102\075\080\049\118\078\083\061\061&quot;,&quot;\075\111\119\106\070\099\074\081\108\069\114\076&quot;;&quot;\077\105\048\076\072\113\082\067\043\118\051\099\113\082\082\053\047\067\061\061&quot;,&quot;\107\087\102\056\109\088\071\053\053\113\121\074\112\067\061\061&quot;;&quot;\098\080\115\100\081\112\115\100\075\069\052\065\075\054\121\110&quot;,&quot;\071\051\074\047\081\051\087\061&quot;,&quot;\089\050\065\078\073\117\119\111\116\070\113\113\052\118\115\047&quot;;&quot;\089\069\079\065\089\069\119\053&quot;,&quot;\071\112\111\067\075\112\113\082&quot;,&quot;\105\102\084\074\071\082\117\051\070\084\111\121\116\075\101\082\113\105\068\079\071\067\115\066\115\048\077\052\073\075\098\088\090\083\084\055\079\065\055\049\047\100\047\076\067\048\052\069\090\098\043\115\098\074\087\084&quot;,&quot;\111\053\074\047\110\068\119\071\067\067\061\061&quot;,&quot;\085\109\112\068\084\100\107\107\122\120\061\061&quot;;&quot;\069\084\049\122\078\112\043\061&quot;,&quot;\098\054\089\076\116\120\090\054\108\043\069\104\105\118\047\049\101\090\061\061&quot;,&quot;\070\081\075\087\052\118\069\049\056\083\061\061&quot;,&quot;\073\109\073\082\099\101\110\073\090\047\099\119\090\083\061\061&quot;,&quot;\120\076\067\105\076\086\097\052\071\116\073\085\119\055\072\050\116\122\078\105\122\078\090\061&quot;,&quot;\114\114\122\113\104\087\054\074\084\079\050\109\075\089\056\048\055\112\047\078&quot;;&quot;\115\098\106\112\098\069\067\061&quot;;&quot;\111\112\088\112\102\090\100\103\082\118\057\056\050\120\061\061&quot;;&quot;\103\115\110\068\112\105\055\053\122\051\082\076\052\083\061\061&quot;,&quot;\078\101\075\078\084\047\056\109\048\120\061\061&quot;,&quot;\056\098\118\122\065\090\061\061&quot;;&quot;\109\088\090\122\072\083\061\061&quot;,&quot;\122\113\049\114\115\106\069\103\103\089\075\088\066\103\088\054\097\121\043\049&quot;,&quot;\101\051\074\111\101\080\071\076\098\066\085\069\101\053\052\083\098\090\061\061&quot;,&quot;\101\121\108\112\051\075\102\122\098\090\061\061&quot;;&quot;\050\073\065\065\066\112\047\050&quot;,&quot;\102\077\079\067\055\066\119\090\056\076\111\117&quot;,&quot;\109\117\098\049\053\097\052\119\102\067\061\061&quot;;&quot;\065\053\122\069\049\104\077\088\053\054\070\061&quot;,&quot;\071\051\049\053\071\050\119\085\081\054\098\061&quot;,&quot;\118\076\100\116\072\055\055\053\048\081\088\118\052\118\047\100\114\104\097\112\106\067\061\061&quot;,&quot;\114\108\120\068\077\104\111\069\066\054\068\068\109\120\061\061&quot;;&quot;\051\086\100\119\088\083\061\061&quot;,&quot;\115\080\111\111\113\069\071\114\115\100\119\107\089\080\076\113&quot;;&quot;\052\080\115\100\087\080\115\055\071\054\110\105\078\083\061\061&quot;;&quot;\108\116\114\065\111\073\118\061&quot;,&quot;\070\087\088\112\070\053\109\121&quot;;&quot;\114\090\066\118\084\109\073\049\047\103\073\061&quot;,&quot;\077\086\110\080\066\075\098\079\055\090\061\061&quot;;&quot;\083\055\069\049\065\090\061\061&quot;;&quot;\078\080\074\076\078\083\061\061&quot;;&quot;\069\084\049\076\078\069\052\065\071\051\074\047\081\051\087\061&quot;}for i,B in ipairs({{-469942+469943,42716-42466},{-357140+357141;946300+-946158};{-576636+576779,180060+-179810}})do while B[541583+-541582]&lt;B[845229+-845227]do O[B[456960-456959]],O[B[743633-743631]],B[16829+-16828],B[659888+-659886]=O[B[257552-257550]],O[B[-80609-(-80610)]],B[-223369+223370]+(-408028-(-408029)),B[861885-861883]-(26926-26925)end end local function i(i)return O[i+(547983-491316)]end do local i=table.concat local B=math.floor local p=string.char local b=string.sub local U=type local G=O local y=table.insert local n=string.len local l={X=606663-606648;C=-928999+929047,[&quot;\050&quot;]=-587275-(-587282);[&quot;\054&quot;]=33210-33172,w=-15695-(-15704),M=-142297+142328,G=-774541-(-774570),B=152073+-152034;m=-156210-(-156220);[&quot;\051&quot;]=991219-991213;D=1000569+-1000555,h=-217163+217225,p=-246396+246418,[&quot;\052&quot;]=219058+-219041;S=345055-345039,T=-427513-(-427566),i=75794-75759;b=159763+-159735,[&quot;\049&quot;]=-837509+837570,U=-891949+891990;c=-903462-(-903470),A=-828233-(-828266),v=563295-563259,Z=-524298+524330,[&quot;\053&quot;]=-229112-(-229163),Y=-999090+999116,N=-694171-(-694196),e=-226015+226034,L=547650+-547605;J=813080-813075,[&quot;\043&quot;]=734683+-734627,u=-411802-(-411857);l=-478606+478617,n=71828-71791,E=-650959+650982;a=143334+-143274;q=-1002324+1002337,y=445503-445454,I=21959-21947,d=651228+-651176;O=-1037859+1037860;[&quot;\048&quot;]=973987+-973924;R=196116-196073,r=-39900+39958;K=-634954-(-634978);f=-673221+673267,Q=-1047357+1047384,P=490707+-490653,F=256804-256800;j=-977973-(-977975);k=-339294-(-339336);H=312139+-312092;[&quot;\057&quot;]=-676412+676415;[&quot;\047&quot;]=-991409-(-991443),[&quot;\056&quot;]=469569+-469539;t=-617407+617425;x=142544+-142544;z=-949310-(-949354),V=-663286-(-663326);s=159833+-159812,[&quot;\055&quot;]=-16177-(-16227),g=-456126+456185,o=351676+-351619;W=-35664+35684}for O=840505-840504,#G,1009076+-1009075 do local N=G[O]if U(N)==&quot;\115\116\114\105\110\103&quot;then local U=n(N)local J={}local K=-826138+826139 local u=-160543+160543 local D=-665059-(-665059)while K&lt;=U do local O=b(N,K,K)local i=l[O]if i then u=u+i*(773627+-773563)^((648024+-648021)-D)D=D+(45013+-45012)if D==-590740+590744 then D=565461-565461 local O=B(u/(999363-933827))local i=B((u%(778523+-712987))/(-465648+465904))local b=u%(617342-617086)y(J,p(O,i,b))u=117540-117540 end elseif O==&quot;\061&quot;then y(J,p(B(u/(-903209-(-968745)))))if K&gt;=U or b(N,K+(-971572+971573),K+(328790+-328789))~=&quot;\061&quot;then y(J,p(B((u%(606165-540629))/(241866+-241610))))end break end K=K+(379898+-379897)end G[O]=i(J)end end end return(function(O,p,b,U,G,y,n,Q,D,K,k,o,N,F,M,I,h,u,z,x,l,B,R,J)I,K,D,h,N,u,z,F,o,l,x,k,R,B,Q,J,M=function(O,i)local p=u(i)local b=function(...)return B(O,{...},i,p)end return b end,93356+-93356,function(O)local i,B=-106263-(-106264),O[-700722-(-700723)]while B do N[B],i=N[B]-(-772669-(-772670)),i+(-405305+405306)if N[B]==4806+-4806 then N[B],l[B]=nil,nil end B=O[i]end end,function(O,i)local p=u(i)local b=function(b,U)return B(O,{b;U},i,p)end return b end,{},function(O)for i=-40443-(-40444),#O,-659934-(-659935)do N[O[i]]=(-888868-(-888869))+N[O[i]]end if b then local B=b(true)local p=G(B)p[i(-12054+-44581)],p[i(428675+-485332)],p[i(555361-611917)]=O,D,function()return 83353+-3683739 end return B else return U({},{[i(-289633+232976)]=D;[i(261893+-318528)]=O;[i(-703428+646872)]=function()return-609266+-2991120 end})end end,function(O,i)local p=u(i)local b=function(b,U,G,y,n,l,N,J)return B(O,{b,U,G,y;n,l;N;J},i,p)end return b end,function(O,i)local p=u(i)local b=function(b,U,G,y)return B(O,{b,U,G,y},i,p)end return b end,function(O,i)local p=u(i)local b=function(b,U,G,y,n,l)return B(O,{b,U;G,y,n,l},i,p)end return b end,{},function(O,i)local p=u(i)local b=function(b)return B(O,{b},i,p)end return b end,function(O,i)local p=u(i)local b=function(b,U,G,y,n)return B(O,{b,U;G,y,n},i,p)end return b end,function(O)N[O]=N[O]-(-731311+731312)if-175339+175339==N[O]then N[O],l[O]=nil,nil end end,function(B,b,U,G)local H,BU,OU,u,Y,q,N,iU,A,K,UU,r,C,E,w,e,j,D,n,W,d,bU,a,T,s,S,Z,V,I,m,f,L,X,c,t,v,P,pU,g while B do if B&lt;8046222-(-332173)then if B&lt;465340+3014067 then if B&lt;1303557-(-46445)then if B&lt;-125060-(-597203)then if B&lt;1049540-757239 then if B&lt;-778319-(-964230)then if B&lt;544595-437148 then if B&lt;606534+-597387 then N=b[61737-61736]X=5935278885910-835915 K=l[U[715572+-715571]]u=l[U[-958049-(-958051)]]I=i(636461-693044)D=u(I,X)a=-629822+23213772539511 X=i(-348651-(-292062))n=K[D]u=l[U[-424908-(-424909)]]D=l[U[-566731+566733]]I=D(X,a)K=u[I]B={[n]=K}n={B}B=O[i(338482+-395128)]else K=b[-660067+660069]g=-685449+12799861705937 B=l[U[704624-704623]]N=b[-366819+366820]a=i(-739739-(-683239))D=l[U[-375874-(-375876)]]I=l[U[-567336-(-567339)]]X=I(a,g)u=D[X]D=1039028-1039028 n={B(N,K,u,D)}B=O[i(719945-776609)]n={p(n)}end else B=l[a]Z=-915437-(-915443)H=779757-779756 d=B(H,Z)Z=i(563783-620431)B=i(274514-331162)O[B]=d H=O[Z]Z=510756-510754 B=H&gt;Z B=B and 1326642-64711 or 13538365-(-434216)end else if B&lt;913923+-687282 then B=11443263-168576 else N=i(-427620+371098)B=O[N]u=567954-567954 K=l[U[286033-286025]]N=B(K,u)B=828048+1978517 end end else if B&lt;295941+69919 then if B&lt;-416434+747280 then B=M(201731+1159036,{D})d={B()}n={p(d)}B=O[i(341943+-398363)]else B=s B=m and 417989+11538828 or-72735+5881596 T=m end else if B&lt;224655+153421 then P=l[K]B=P and 14561798-(-876077)or 3138154-(-557400)OU=P else E=587198+22893739045862 B=l[U[-858828-(-858831)]]T=l[U[141334-141333]]d=-889474+21690447968758 W=i(566066-622536)m=l[U[-144863-(-144865)]]s=m(W,E)g=T[s]E=i(357748-414341)Y=-464298+24061429842286 m=l[U[414799+-414798]]s=l[U[83952+-83950]]W=s(E,Y)L=20546864046545-(-1000334)Y=i(-452486+395842)T=m[W]s=l[U[-307780-(-307781)]]W=l[U[673514-673512]]E=W(Y,L)v=i(535506+-592108)m=s[E]E=l[U[788906-788905]]s=false Y=l[U[262643-262641]]L=Y(v,d)W=E[L]a={[g]=u,[T]=I,[m]=s,[W]=D}g=i(-1006359+949791)g=B[g]X={g(B,a)}B=O[i(-178280-(-121827))]n={p(X)}end end end else if B&lt;549405-(-408708)then if B&lt;662154+139985 then if B&lt;904894+-211133 then if B&lt;406038-(-161206)then T=l[U[237150-237149]]I=B m=l[U[-891177-(-891179)]]W=i(893478-950075)E=267832+10796881100139 s=m(W,E)g=T[s]a=N[g]g=718655+-718654 X=a[g]B=X and-1007167+13759118 or 9950357-(-13454)D=X else g=-433686-(-433686)B=l[U[-891937+891938]]K=u T=-31428-(-31683)a=B(g,T)N[K]=a K=nil B=428757+5383541 end else OU=l[K]n=OU B=OU and 11951834-936489 or 3655635-232368 end else if B&lt;520943-(-420469)then N=b K=J()a=i(-83261-(-26607))B=true l[K]=B D=J()u=i(-852158-(-795714))n=O[u]u=i(-36945-19537)B=n[u]u=J()l[u]=B B=M(6812825-346475,{})I=J()l[D]=B B=false g=x(14372440-554785,{I})l[I]=B X=O[a]a=X(g)n=a B=a and 12064594-1036495 or 3290945-80681 else B=true B=B and 4228809-(-90850)or 231976+9182159 end end else if B&lt;1339013-83377 then if B&lt;-290963+1314730 then q=-1025896-(-1025898)A=S[q]q=l[V]f=A==q B=-415448+9422113 OU=f else u=l[U[-893111+893117]]K=u==N n=K B=6785956-(-793177)end else if B&lt;363754-(-915700)then H=i(732822-789359)r=i(-510948+454330)B=O[H]Z=O[r]H=B(Z)B=i(872207+-928855)O[B]=H B=8848399-159082 else u=371120+-371088 s=-666236+666249 K=l[U[845800+-845797]]N=K%u T=-432767+432769 D=l[U[863116+-863112]]a=l[U[564767-564765]]Y=l[U[479612-479609]]E=Y-N Y=-829993-(-830025)W=E/Y m=s-W g=T^m X=a/g I=D(X)D=-173073+4295140369 u=I%D I=279018+-279016 D=I^N K=u/D T=-624552-(-624808)g=948945-948944 D=l[U[-648590+648594]]a=K%g g=4295895717-928421 X=a*g I=D(X)D=l[U[-686292+686296]]X=D(K)s=1033647+-1033391 u=I+X a=-15709+81245 I=-72287-(-137823)D=u%I X=u-D I=X/a a=-405742-(-405998)X=D%a g=D-X N=nil B=8320728-18997 a=g/T T=-107487+107743 u=nil g=I%T m=I-g T=m/s I=nil m={X,a,g,T}X=nil l[U[-65951-(-65952)]]=m D=nil a=nil K=nil g=nil T=nil end end end end else if B&lt;2658431-102460 then if B&lt;2408323-472679 then if B&lt;2152328-561380 then if B&lt;620102+872874 then if B&lt;482781-(-976638)then B=-937161+1891978 else X=-502932+23892281251849 K=l[U[535837-535836]]I=i(93686+-150197)u=l[U[-846985+846987]]N=b[-374246+374247]D=u(I,X)n=K[D]u=l[U[356832-356831]]a=32857442904485-847329 X=i(-595539-(-538902))D=l[U[-278243-(-278245)]]I=D(X,a)K=u[I]B={[n]=K}n={B}B=O[i(-583653-(-527014))]end else I,g=X(D,I)B=I and-945717+3173350 or 12953825-(-132248)end else if B&lt;535009+1307899 then B=17184200-844701 Z=392490+-392490 L=#E Y=L==Z else N=l[U[806069+-806068]]n=#N N=-707298+707298 B=n==N B=B and 8427335-442781 or-56138+8357869 end end else if B&lt;-293327+2574362 then if B&lt;-763079+2815196 then B=10781256-(-775581)r=i(101626+-158260)d=l[U[-520227-(-520228)]]j=203621+10513009063866 H=l[U[-149840-(-149842)]]Z=H(r,j)v=d[Z]Y=v else L=l[U[749539+-749538]]s=B H=i(212240+-268694)Z=3454389746405-(-363363)a=I v=l[U[-301459-(-301461)]]d=v(H,Z)Y=L[d]E=g[Y]H=i(948541+-1005197)L=l[U[-602395+602396]]Z=4351655609182-834420 v=l[U[-376650+376652]]d=v(H,Z)Y=L[d]W=E==Y B=W and 10404566-(-531018)or 980928+-616634 m=W end else if B&lt;3355159-805108 then g=X d=875688+24001254297344 s=i(-807364+750801)v=214004+1775669149510 m=O[s]L=i(339091+-395669)W=l[U[-210263-(-210264)]]c=26042100919136-(-934910)E=l[U[-1012896-(-1012898)]]w=i(543007-599424)Y=E(L,v)s=W[Y]v=i(668086+-724594)B=m[s]E=l[U[-884017+884018]]Y=l[U[-644367+644369]]L=Y(v,d)W=E[L]v=B r=l[U[370927-370926]]Y=B j=l[U[985486-985484]]t=j(w,c)Z=r[t]H=T[Z]w=i(-185226+128760)c=-56276+192766073901 r=l[U[-965840+965841]]j=l[U[-290600+290602]]t=j(w,c)Z=r[t]d=H==Z L=d B=d and 14207092-(-805031)or 11779595-778586 else n={n}B=O[i(-504571+447931)]end end end else if B&lt;529009+2621289 then if B&lt;259394+2620969 then if B&lt;-326521+3042228 then if B&lt;2178423-(-483453)then Y=28692003767184-560992 E=i(1021925+-1078482)m=l[U[172038+-172037]]s=l[U[525835+-525833]]W=s(E,Y)T=m[W]g=N[T]E=-644675+15466737709669 B=5642290-(-51639)W=i(859467-916067)T=658104+-658103 a=g[T]T=l[U[471677+-471676]]m=l[U[-552450+552452]]s=m(W,E)g=T[s]X=a[g]D=X else B=l[U[8624+-8617]]B=B and 209410+73213 or 3018604-212039 end else B={}K=493915-493914 u=l[U[-1035550+1035559]]N=B D=u u=-212049+212050 I=u u=-645426+645426 B=-325503+6137801 X=I&lt;u u=K-I end else if B&lt;992379+1918582 then B=n and 724559+15906014 or 694256+8078529 else N=l[U[521172+-521171]]D=i(-897712-(-841241))I=435107+236002237642 K=l[U[681790+-681788]]u=K(D,I)n=N[u]X=23604403228185-418602 K=l[U[21964-21963]]I=i(647989-704424)u=l[U[-56698-(-56700)]]D=u(I,X)N=K[D]B={[n]=N}n={B}B=O[i(122750+-179180)]end end else if B&lt;-369864+3616702 then if B&lt;3530211-301684 then g=i(836386+-892949)a=i(123579+-180065)X=n n=O[a]a=i(340875-397463)B=n[a]a=J()l[a]=B W=i(556203+-612766)n=O[g]g=i(915396+-971822)B=n[g]g=B m=B s=O[W]B=s and 14436244-93349 or 4278488-409421 T=s else H=i(-196868-(-140424))g=m d=O[H]H=i(-151709-(-95086))v=d[H]d=v(N,g)v=l[U[-296137+296143]]H=v()L=d+H Y=L+X H=-475677+475678 L=70+186 E=Y%L g=nil L=u[K]X=E d=X+H v=D[d]B=11495621-1040295 Y=L..v u[K]=Y end else if B&lt;3421891-(-8281)then l[K]=n B=-692706+7388676 else a=i(575002-631487)n=i(923221+-979708)K=b[250240-250238]N=b[492983-492982]B=O[n]g=519205+7614589215156 D=l[U[27882-27881]]I=l[U[183484-183482]]X=I(a,g)u=D[X]n={B(N,K,u)}B=O[i(-844177+787561)]n={p(n)}end end end end end else if B&lt;6233788-440144 then if B&lt;-24342+4720228 then if B&lt;387569+3792129 then if B&lt;4271968-422344 then if B&lt;100026+3621933 then if B&lt;4319118-661431 then X,T=a(I,X)B=X and 2739426-343115 or 12270349-577745 else l[K]=OU q=l[w]C=920566-920565 A=q+C f=S[A]P=s+f f=-204723+204979 B=P%f A=l[t]s=B f=W+A A=-93017-(-93273)P=f%A W=P B=5958988-(-736982)end else X=135649+14304868255780 I=i(208439-265069)K=l[U[217728-217727]]u=l[U[-421089-(-421091)]]a=-455505+1105773278547 T=18106690056650-446683 D=u(I,X)m=895444+8374619776359 X=i(664384-720959)N=b[-188935+188936]n=K[D]u=l[U[-524699-(-524700)]]D=l[U[-955300-(-955302)]]I=D(X,a)K=u[I]g=1016461+5572942923670 D=l[U[-321033-(-321034)]]I=l[U[-939134+939136]]a=i(-84594-(-28027))X=I(a,g)u=D[X]g=i(-351278+294651)I=l[U[-815654-(-815655)]]X=l[U[497309+-497307]]a=X(g,T)D=I[a]X=l[U[-592823-(-592824)]]T=i(-253175+196681)a=l[U[-673136+673138]]g=a(T,m)I=X[g]B={[n]=K;[u]=N,[D]=I}n={B}B=O[i(-659213-(-602722))]end else if B&lt;4499743-551260 then n=T B=m B=T and 4891697-234024 or 7950830-14160 else T=727176+20956076789142 N=b[492012+-492011]g=i(520841-577288)I=l[U[643264+-643263]]X=l[U[646889+-646887]]a=X(g,T)D=I[a]a=i(-159730+103291)u=N[D]g=33489+23793462716534 D=765457+-765456 K=u[D]D=l[U[-720382+720383]]I=l[U[107430-107428]]X=I(a,g)u=D[X]n=K[u]X=i(653256-709810)a=967010+4065155384834 u=l[U[-934766+934767]]D=l[U[-974887+974889]]I=D(X,a)K=u[I]B=n[K]n={B}B=O[i(203240-259850)]end end else if B&lt;11377+4310537 then if B&lt;5119496-829950 then a=l[U[-194987+194988]]N=b[-704988-(-704989)]s=31925495161994-(-349576)g=l[U[-20981-(-20983)]]m=i(-95424+38773)T=g(m,s)m=-377417+28465217123856 X=a[T]I=N[X]X=936531+-936530 D=I[X]T=i(899920-956512)X=l[U[-1036473+1036474]]a=l[U[-795949-(-795951)]]g=a(T,m)I=X[g]T=6294077888766-953740 u=D[I]I=l[U[515338-515337]]X=l[U[-35028+35030]]g=i(-901973-(-845541))a=X(g,T)D=I[a]K=u[D]u=-745507-(-745508)X=i(289391-345936)n=K[u]u=l[U[-312649+312650]]D=l[U[683765+-683763]]a=22366268933941-728710 I=D(X,a)K=u[I]B=n[K]n={B}B=O[i(-609697-(-553075))]else n=i(25143-81791)B=O[n]N=i(-575869+519251)n=O[N]N=i(456437+-513055)O[N]=B N=i(-652438+595790)O[N]=n B=1053620-98803 N=l[U[-575750+575751]]K=N()end else if B&lt;974370+3614060 then m=i(-28965+-27655)N=b[774162-774161]s=-311111+3168556598538 a=l[U[-838039+838040]]g=l[U[-88038-(-88040)]]T=g(m,s)X=a[T]I=N[X]X=-141732+141733 D=I[X]X=l[U[-511678-(-511679)]]m=834909+4159806982708 T=i(851628+-908148)a=l[U[768097+-768095]]g=a(T,m)I=X[g]T=9753571632843-(-338674)u=D[I]g=i(-74380-(-17923))I=l[U[1017546+-1017545]]X=l[U[-939532+939534]]a=X(g,T)D=I[a]K=u[D]u=-897501-(-897502)a=27229986671562-1006147 n=K[u]u=l[U[141963+-141962]]X=i(608665+-665293)D=l[U[1004340+-1004338]]I=D(X,a)K=u[I]B=n[K]n={B}B=O[i(985620+-1042099)]else s=121169-121104 m=200009+-200006 T=J()l[T]=n B=l[a]n=B(m,s)B=18730+-18730 m=J()l[m]=n s=B E=i(-240334+183680)B=-146576-(-146576)W=B H=i(233882+-290419)n=O[E]Y=x(-508434+16080265,{})E={n(Y)}B={p(E)}n=690156-690154 E=B B=E[n]n=i(669542-726056)Y=B B=O[n]L=l[u]d=O[H]H=d(Y)d=i(-479403-(-422900))v=L(H,d)L={v()}n=B(p(L))L=J()B=-441383+12457299 l[L]=n v=l[m]d=v n=-725761+725762 v=-696400+696401 H=v v=-26142-(-26142)Z=H&lt;v v=n-H end end end else if B&lt;39807+5594661 then if B&lt;-385752+5387116 then if B&lt;4014217-(-884993)then if B&lt;-173521+4898399 then u=l[U[460229+-460228]]X=i(-1018113-(-961455))D=l[U[-485233+485235]]a=25076807478948-475399 I=D(X,a)B=2805054-250886 K=u[I]n=K else X=-457629+26795549994074 K=l[U[919289-919288]]N=b[246660-246659]u=l[U[-426773-(-426775)]]I=i(-401262+344766)D=u(I,X)n=K[D]u=l[U[-353871-(-353872)]]T=i(-478456-(-421827))D=l[U[-77394+77396]]a=17869132842505-828809 X=i(559260-615925)I=D(X,a)K=u[I]g=19698307844869-(-202959)a=i(-273411-(-216980))D=l[U[766048-766047]]I=l[U[-880854+880856]]X=I(a,g)u=D[X]m=33089627184787-713315 X=l[U[-843202-(-843203)]]a=l[U[806798-806796]]g=a(T,m)I=X[g]D=I..N B={[n]=K,[u]=D}n={B}B=O[i(315156+-371618)]end else K=l[U[-923007-(-923009)]]u=l[U[32729+-32726]]B=11602075-(-83711)N=K==u n=N end else if B&lt;4843408-(-160800)then B=l[U[-621288-(-621298)]]K=l[U[-457375-(-457386)]]N[B]=K B=l[U[854721-854709]]K={B(N)}n={p(K)}B=O[i(-631688+575266)]else B=true B=B and 420719+13875329 or 787514-477746 end end else if B&lt;-508605+6241265 then if B&lt;980368+4692985 then N=b[246499-246498]n=i(-528173+471612)K=b[-1003191+1003193]B={}u=B B=O[n]X={B(N)}n=X[61896-61895]D=X[-703928-(-703930)]I=X[1023515+-1023512]X=n B=1698334-120951 else K=D B=I B=709591+5755830 end else if B&lt;68751+5686808 then B=u n=K B=K and-636087+14841092 or 16003651-(-253136)else K=l[U[777971+-777968]]u=-519452+519453 N=K~=u B=N and-477056+1802882 or 1006737+8378938 end end end end else if B&lt;-225564+7582999 then if B&lt;381545+6084533 then if B&lt;356336+5750098 then if B&lt;6730089-795761 then if B&lt;807419+5003780 then L=291181+18369028796412 Y=i(-337497-(-280899))s=l[U[-645856-(-645857)]]W=l[U[422116-422114]]E=W(Y,L)B=11773231-(-183586)m=s[E]T=m else a=not X u=u+I K=u&lt;=D K=a and K a=u&gt;=D a=X and a K=a or K a=1024511-441845 B=K and a K=5337246-335375 B=B or K end else K=i(-129275+72778)n=2874966-199099 u=-718579+2001769 N=K^u B=n-N N=B n=i(395595-452063)B=n/N n={B}B=O[i(-861510-(-805061))]end else if B&lt;823835+5493040 then t=-31727+31827 r=J()l[r]=v j=i(521300-577786)n=O[j]j=i(-666613-(-610025))S=952129-952127 B=n[j]j=-666357-(-666358)n=B(j,t)j=J()C=-673777+673777 l[j]=n w=-278979+279234 B=l[a]t=-975375-(-975375)n=B(t,w)w=958525-958524 f=i(787069-843606)V=861092+-861091 t=J()l[t]=n B=l[a]c=l[j]n=B(w,c)w=J()l[w]=n n=l[a]e=168217+-158217 c=n(V,S)S=i(-508001+451494)n=253738-253737 B=c==n c=J()l[c]=B P=O[f]A=l[a]q={A(C,e)}n=i(938716-995219)f=P(p(q))P=i(-738629+682122)OU=f..P B=i(-931592+875100)B=Y[B]V=S..OU B=B(Y,n,V)V=J()S=i(-513506-(-456852))l[V]=B n=O[S]OU=h(14760822-(-559447),{a,r;m;u,K;L,c,V,j,w;t,T})S={n(OU)}B={p(S)}S=B B=l[c]B=B and-717726+1482520 or 1295548-917597 else n=K B=u B=K and 681090+1873078 or 952776+3744200 end end else if B&lt;7842007-923181 then if B&lt;6817719-345321 then n=i(-911558-(-855036))N=i(642307+-698735)B=O[n]n=B(N)n={}B=O[i(-90977-(-34371))]else w=R(w)B=-556709+12572625 c=R(c)S=nil t=R(t)V=R(V)j=R(j)r=R(r)end else if B&lt;6817109-(-366685)then r=i(123354+-180006)H=i(181654+-238230)g=nil L=l[U[-602350+602351]]Z=11921229983371-874716 B=Y v=l[U[410735-410733]]j=177588+2504303644378 d=v(H,Z)Y=L[d]d=l[U[984721+-984720]]H=l[U[-1023642-(-1023644)]]Z=H(r,j)v=d[Z]L=T[v]T=nil s={[W]=E;[Y]=L}m=B(D,s)B=786688+2709769 else W=i(820168+-876739)I=B E=-217911+6876560023481 T=l[U[92085-92084]]m=l[U[160048+-160046]]s=m(W,E)g=T[s]a=N[g]g=-269776-(-269777)X=a[g]D=X B=X and 3591652-934815 or 365335+5328594 end end end else if B&lt;7712557-(-41423)then if B&lt;914844+6606185 then if B&lt;8256996-755445 then if B&lt;-459725+7917052 then N=b[-975132+975133]K=b[-985284+985286]B=l[U[-440908-(-440909)]]u=B B=u[K]B=B and-333817+10592739 or 10644607-(-857375)else W=i(-20575-35988)T=a s=O[W]v=i(190909+-247343)d=16074950186042-(-985347)E=l[U[98360+-98359]]Y=l[U[-256453-(-256455)]]L=Y(v,d)V=-30932+29195587825135 H=-815876+8005097882003 W=E[L]B=s[W]Y=l[U[679737+-679736]]d=i(-142594-(-86119))c=i(-823938-(-767306))L=l[U[-797923-(-797925)]]v=L(d,H)d=B L=B E=Y[v]j=l[U[-37235-(-37236)]]t=l[U[-108849+108851]]w=t(c,V)r=j[w]Z=m[r]j=l[U[-747713-(-747714)]]c=i(713923-770346)t=l[U[231848-231846]]V=144158+19896865059091 w=t(c,V)r=j[w]H=Z==r v=H B=H and 986509+8342695 or 12531709-(-606665)end else B=l[U[851700+-851699]]N=b[-467121+467122]D=l[U[832390-832388]]g=-223100+21128008830442 I=l[U[763060-763057]]a=i(-1023291+966625)K=b[559746-559744]X=I(a,g)u=D[X]D=356065-356065 n={B(N,K,u,D)}B=O[i(858771+-915209)]n={p(n)}end else if B&lt;7685109-(-8960)then B=-337906+3005489 l[U[672714+-672709]]=n N=nil else N=b[-239589+239590]K=b[43625-43623]B=l[U[-898089-(-898090)]]a=i(501507-558154)D=l[U[-180203-(-180205)]]I=l[U[-304265+304268]]g=2783154879608-276328 X=I(a,g)u=D[X]D=-678209-(-678210)n={B(N,K,u,D)}n={p(n)}B=O[i(-856582+800067)]end end else if B&lt;875263+7098460 then if B&lt;7171081-(-768502)then m=i(-897716-(-841156))B=83231+4574442 T=O[m]n=T else T=1007396+15834320534953 g=i(423926-480369)I=l[U[-226385-(-226386)]]X=l[U[707991-707989]]N=b[-300713-(-300714)]a=X(g,T)D=I[a]g=27357397738289-(-954002)u=N[D]a=i(-215877+159389)D=-596999+597000 K=u[D]D=l[U[-416121-(-416122)]]I=l[U[-1000850+1000852]]X=I(a,g)u=D[X]X=i(377856-434501)n=K[u]u=l[U[1040481-1040480]]D=l[U[-479944+479946]]a=8960+4155039540366 I=D(X,a)K=u[I]B=n[K]n={B}B=O[i(75985+-132502)]end else if B&lt;637052+7537257 then u=81903-81814 K=l[U[-516237+516239]]N=K*u K=14060128126892-945689 n=N+K K=-994427+994428 N=540994+35184371547838 B=n%N l[U[516610+-516608]]=B N=l[U[-556075+556078]]B=351613+9034062 n=N~=K else u=i(-992190-(-935627))K=O[u]u=i(-1028790-(-972306))N=K[u]u=l[U[-974605-(-974606)]]K={N(u)}B=O[i(590308+-646851)]n={p(K)}end end end end end end else if B&lt;13103961-1003695 then if B&lt;11034487-127782 then if B&lt;9956030-554861 then if B&lt;-939586+9947272 then if B&lt;9119247-395070 then if B&lt;-779508+9408566 then if B&lt;9227992-624153 then Y=L t=Y E[Y]=t Y=nil B=13431289-(-783054)else g=l[U[-199852+199853]]W=-485218+34079672214879 B=-321547+3228689 s=i(-749746+693088)T=l[U[295096-295094]]m=T(s,W)a=g[m]X=K~=a n=X end else B=13986587-185311 end else if B&lt;9773907-904680 then n=i(-333798-(-277237))B=O[n]g={B(N)}n=g[-260036-(-260037)]a=g[-518646-(-518649)]X=g[97423+-97421]B=12726352-242388 g=n else B=P n=OU B=-328956+3752223 end end else if B&lt;9171951-(-78171)then if B&lt;296693+8768648 then m=7852147694482-363850 N=b[632405+-632404]T=i(-328577+272159)u=B X=l[U[-1016596+1016597]]a=l[U[189233+-189231]]g=a(T,m)I=X[g]D=N[I]B=D and 911038+6299523 or-536513+7001934 K=D else K=D B=I B=718337+15466925 end else if B&lt;8331401-(-1021783)then Z=l[U[819501+-819500]]w=3796080101861-(-965890)r=l[U[-95165-(-95167)]]t=i(442040-498469)j=r(t,w)H=Z[j]v=H B=12524532-(-613842)else B=-40134+5799777 u=615638+-615414 K=l[U[528755+-528752]]N=K*u K=-724309-(-724566)n=N%K l[U[-1028747+1028750]]=n end end end else if B&lt;-233664+10666118 then if B&lt;10563707-411679 then if B&lt;415630+9616293 then if B&lt;-675029+10350461 then n={}B=O[i(-624896-(-568241))]else B=I B=4931721-(-822197)K=D end else D=i(765030-821567)n=i(696916-753430)T=Q(5036450-(-900218),{})B=O[n]N=l[U[386320-386316]]g=i(154302+-210956)u=O[D]a=O[g]g={a(T)}a=-261467+261469 X={p(g)}I=X[a]D=u(I)u=i(105265+-161768)K=N(D,u)N={K()}n=B(p(N))K=l[U[750285+-750280]]N=n B=K and 333308+913813 or-308911+7888044 n=K end else if B&lt;403316+9863689 then B=12304345-(-713855)else B=X and-1039169+12272871 or 15256550-776427 end end else if B&lt;-587890+11202692 then if B&lt;10577815-79244 then m=m+s g=m&lt;=T E=not W g=E and g E=m&gt;=T E=W and E g=E or g E=3495318-262927 B=g and E g=-407524+12481754 B=B or g else n={n}B=O[i(238381+-294994)]end else if B&lt;10591495-(-248133)then n={}B=O[i(-843498+786914)]else T=l[U[-937342-(-937343)]]m=l[U[1039501-1039499]]B=-203843+10510337 E=25625145821028-1022152 W=i(912408+-969066)s=m(W,E)g=T[s]a=K~=g X=a end end end end else if B&lt;11584033-38994 then if B&lt;403397+10659956 then if B&lt;10575410-(-438162)then if B&lt;-755601+11729230 then if B&lt;10511142-(-404652)then B=16192519-(-492477)d=s==W v=d else d=33601469481521-722195 B=88258+276036 v=i(644975+-701628)E=l[U[750944+-750943]]Y=l[U[-237500+237502]]L=Y(v,d)W=E[L]m=W end else B=v B=L and 8042111-1034420 or 894281+13705466 E=L end else if B&lt;974121+10053702 then P=B q=-986562-(-986563)A=S[q]q=false f=A==q B=f and 596655+381577 or 9762380-755715 OU=f else X=l[I]B=754303+2455961 n=X end end else if B&lt;12206090-868922 then if B&lt;10779377-(-486288)then T=i(446883-503360)X=l[U[-209859+209860]]m=23054222478475-(-1023332)a=l[U[-608213-(-608215)]]g=a(T,m)B=X[g]X=K I[B]=X B=-944505+15424628 else Y=nil I=R(I)W=nil L=R(L)s=nil K=R(K)X=nil u=R(u)D=R(D)s={}g=nil m=R(m)a=R(a)E=nil D=J()K=nil X=i(-1020430-(-963944))a=i(329622+-386108)m=J()E={}l[D]=K K=J()u=nil l[K]=u I=O[X]T=R(T)X=i(14109-70771)u=I[X]L=-910339-(-910595)I=J()g=i(935325+-991888)l[I]=u X=O[a]a=i(686615+-743203)u=X[a]a=O[g]B=-616642+14830985 g=i(-628844-(-572360))Y=-1005892+1005893 T=i(275149+-331593)X=a[g]g=O[T]T=i(-553504-(-496931))a=g[T]T=J()W=J()g=344767-344767 Z=L l[T]=g L=-97130-(-97131)g=-746742+746744 r=L l[m]=g g={}l[W]=s L=603222+-603222 s=-805553+805553 j=r&lt;L L=Y-r end else if B&lt;12480198-967664 then I=35184372438808-349976 B={}l[U[-11427-(-11429)]]=B n=l[U[-466167+466170]]m=-838312-(-838313)D=n n=K%I l[U[-837902-(-837906)]]=n a=-561476+561731 X=K%a a=743607+-743605 I=X+a g=i(-803309-(-746865))l[U[-832112-(-832117)]]=I a=O[g]s=m g=i(545383-601841)X=a[g]B=777130+9678196 m=-637590+637590 W=s&lt;m a=X(N)g=-406161+406162 X=i(-232958-(-176300))m=g-s u[K]=X X=1011026-1010779 T=a else K=b[-898814+898816]N=b[979511-979510]u=b[-31562-(-31565)]B={}n=K D=b[66206-66202]I=B B=K and-949521+9554219 or 926697+1980445 end end end else if B&lt;11650478-(-305358)then if B&lt;12557193-864807 then if B&lt;-455153+12074477 then if B&lt;11438294-(-141267)then j=i(13048-69517)r=14460647573144-(-54197)T=nil v=l[U[466858+-466857]]d=l[U[-236426+236428]]Z=i(-634722+578117)H=d(Z,r)B=L L=v[H]H=l[U[357848-357847]]Z=l[U[-782626-(-782628)]]t=-857210+6486738722886 r=Z(j,t)d=H[r]v=m[d]W={[E]=Y;[L]=v}m=nil s=B(I,W)B=12113829-(-370135)else Y=146878584296-(-272988)m=l[U[-279676-(-279677)]]s=l[U[853378-853376]]E=i(-263599+207071)W=s(E,Y)T=m[W]E=61700+771869233251 g=N[T]W=i(-1017137+960644)T=-564942-(-564943)a=g[T]B=951751+8278514 T=l[U[-950393-(-950394)]]m=l[U[468327-468325]]s=m(W,E)g=T[s]X=a[g]D=X end else B=n and 80616+9978975 or 2366805-(-300778)end else if B&lt;-924092+12855930 then m=34833858150078-(-147614)W=5251445524191-687442 X=l[U[827715-827714]]T=i(172933+-229464)a=l[U[-978622+978624]]g=a(T,m)I=X[g]m=i(-1014518+957909)s=25990217316439-(-145135)a=l[U[-246898-(-246899)]]E=i(694208+-750858)g=l[U[460331+-460329]]T=g(m,s)s=i(-1002328+945854)X=a[T]g=l[U[-526735-(-526736)]]T=l[U[147524+-147522]]m=T(s,W)a=g[m]m=l[U[-107674+107675]]g=-602087-(-603087)Y=-876760+27861604635526 s=l[U[225093-225091]]W=s(E,Y)T=m[W]m=.7 B={[I]=u;[X]=D;[a]=g,[T]=m}X=K I=B B=K and 397253+10457113 or 939638+9366856 else N=b[-743895-(-743896)]X=l[U[-199216-(-199217)]]T=i(126851-183433)u=B m=12875245715808-944629 a=l[U[22825-22823]]g=a(T,m)I=X[g]D=N[I]K=D B=D and 12672235-282801 or 815294+15369968 end end else if B&lt;739448+11329758 then if B&lt;256019+11702134 then w=537960+14068987814959 d=-311971+11728463403000 s=i(-840770+784207)H=-74042+30502763845813 v=246450+807880277702 m=O[s]W=l[U[-263336-(-263337)]]L=i(-248330-(-191854))E=l[U[-424541+424543]]Y=E(L,v)s=W[Y]v=i(453844-510505)B=m[s]E=l[U[311000+-310999]]Y=l[U[533099-533097]]r=i(-551618+495001)L=Y(v,d)d=i(79978-136573)W=E[L]j=835260+7983875067849 Y=l[U[996212-996211]]L=l[U[-213145+213147]]v=L(d,H)E=Y[v]d=l[U[-965391+965392]]t=i(634833-691331)H=l[U[-308789-(-308791)]]Z=H(r,j)v=d[Z]Z=l[U[633788-633787]]r=l[U[697320+-697318]]j=r(t,w)a=nil H=Z[j]d=g[H]L={[v]=d}Y={L}g=nil s={[W]=T;[E]=Y}m=B(u,s)B=19634+1557749 T=nil else v=v+H r=not Z n=v&lt;=d n=r and n r=v&gt;=d r=Z and r n=r or n r=-914091+7132252 B=n and r n=-1047869+17045076 B=B or n end else if B&lt;12041991-(-41940)then B=1024328+11993872 D=nil a=nil X=nil else N=b[558718+-558717]X=-1046340+32143229891003 K=l[U[-982385-(-982386)]]I=i(-341462-(-284888))u=l[U[-855547+855549]]D=u(I,X)n=K[D]u=l[U[112307-112306]]a=10472930189071-(-783357)D=l[U[-428109-(-428111)]]T=i(-215703+159156)g=6080748668955-(-901876)X=i(691618+-748141)I=D(X,a)K=u[I]D=l[U[-993119-(-993120)]]I=l[U[566065+-566063]]a=i(-742054-(-685635))X=I(a,g)m=127412633456-(-393419)u=D[X]X=l[U[-710438+710439]]a=l[U[-594474-(-594476)]]g=a(T,m)I=X[g]D=I..N B={[n]=K,[u]=D}n={B}B=O[i(393227+-449745)]end end end end end else if B&lt;15488723-998715 then if B&lt;14540028-956540 then if B&lt;12785097-(-178722)then if B&lt;13354024-769515 then if B&lt;414277+11995262 then if B&lt;12653765-466962 then m=805361+2614780312272 T=i(665177+-721788)N=b[1003417-1003416]X=-438856+10441754969414 K=l[U[414391-414390]]u=l[U[788098+-788096]]I=i(-676470-(-619891))a=17415894354783-961458 D=u(I,X)n=K[D]u=l[U[-885929-(-885930)]]X=i(-218576+162098)D=l[U[104039-104037]]I=D(X,a)K=u[I]D=l[U[-815798+815799]]a=i(-998878-(-942389))g=8862108976317-(-52065)I=l[U[31096+-31094]]X=I(a,g)u=D[X]X=l[U[-770912+770913]]a=l[U[-237835-(-237837)]]g=a(T,m)I=X[g]D=I..N B={[n]=K;[u]=D}n={B}B=O[i(596676-653209)]else I=B T=l[U[-449089+449090]]W=i(489815+-546441)E=16842564047973-(-985661)m=l[U[-289598+289600]]s=m(W,E)g=T[s]a=N[g]g=-109446-(-109447)X=a[g]B=X and 328370+11252014 or 9308601-78336 D=X end else a,m=g(X,a)B=a and 491940+6980492 or 207055-(-172281)end else if B&lt;12096772-(-641559)then X=i(-238032-(-181374))B=750551+9799496 a=27496620065876-(-601520)u=l[U[-1028182-(-1028183)]]D=l[U[-986397+986399]]I=D(X,a)K=u[I]n=K else Y=-1018134+2324901612880 m=l[U[-630705-(-630706)]]s=l[U[915847-915845]]E=i(-543632+487093)B=9711920-(-251891)W=s(E,Y)E=25639379990427-280824 T=m[W]g=N[T]W=i(-91847+35313)T=826945-826944 a=g[T]T=l[U[-369799+369800]]m=l[U[740158-740156]]s=m(W,E)g=T[s]X=a[g]D=X end end else if B&lt;13529054-407603 then if B&lt;-940904+14022328 then n={K}B=O[i(-177304+120880)]else B=l[U[-904132+904135]]L=i(394875-451379)W=i(-247339+190833)a=l[U[-677496+677497]]g=l[U[236794-236792]]E=-936595+28212118502884 m=i(-887968+831369)v=229814+34819299212704 s=2747141376938-362155 T=g(m,s)X=a[T]T=l[U[-94835-(-94836)]]m=l[U[474497+-474495]]s=m(W,E)g=T[s]W=l[U[-562093-(-562094)]]E=l[U[609622-609620]]Y=E(L,v)s=W[Y]m={[s]=K}T={m}a={[g]=T}E=17802779191731-526673 T=l[U[-945910+945911]]m=l[U[969050-969048]]W=i(-1029640+973032)s=m(W,E)g=T[s]I={[X]=a;[g]=u}X=i(-230520-(-173952))X=B[X]D={X(B,I)}n={p(D)}B=O[i(729688-786149)]end else if B&lt;526535+12932830 then B=d Y=v B=v and 11253015-(-303822)or 1400494-(-556225)else n=i(313798+-370285)K=b[-145307-(-145309)]B=O[n]D=l[U[830450+-830449]]I=l[U[173350+-173348]]a=i(806123+-862782)g=522310+32224988054103 N=b[761358+-761357]X=I(a,g)u=D[X]n={B(N,K,u)}n={p(n)}B=O[i(-724067+667640)]end end end else if B&lt;14208566-(-4342)then if B&lt;13771421-(-84302)then if B&lt;12976439-(-827796)then if B&lt;144540+13630041 then B=true B=-560883+870651 else B=true B=B and 588558-443807 or 9898588-(-857542)end else B=true n={}l[U[131644+-131643]]=B B=O[i(413500-470086)]end else if B&lt;14163504-(-32010)then Z=i(-442044+385396)B=O[Z]Z=i(231188+-287806)O[Z]=B B=9010502-321185 else n={n}B=O[i(-780830+724365)]end end else if B&lt;13506917-(-805626)then if B&lt;-959755+15220882 then t=not j L=L+r Y=L&lt;=Z Y=t and Y t=L&gt;=Z t=j and t Y=t or Y t=115616+8392009 B=Y and t Y=2258462-443155 B=B or Y else B=-76316+13877592 end else if B&lt;915729+13501360 then E=i(88105+-144668)W=O[E]B=2983783-(-885284)E=i(-682943+626383)s=W[E]T=s else a=i(676377-732945)B=l[U[-345146+345149]]a=B[a]X={a(B,I)}B=O[i(767054-823479)]n={p(X)}end end end end else if B&lt;15622895-(-233706)then if B&lt;-37080+15411023 then if B&lt;133270+14858679 then if B&lt;14559318-(-174957)then if B&lt;-911510+15463381 then Z=266344+-266344 L=#E Y=L==Z B=Y and 16086331-(-552071)or 16012385-(-327114)else r=26849982437012-58814 Z=i(529813+-586353)v=l[U[-795111-(-795112)]]d=l[U[-253513+253515]]H=d(Z,r)L=v[H]E=L B=6180420-(-827271)end else g=i(830073-886736)I=l[U[-85547-(-85548)]]X=l[U[907198+-907196]]T=-511370+849004613397 a=X(g,T)g=-624267+30956235308762 N=b[628255+-628254]D=I[a]u=N[D]D=-102031-(-102032)K=u[D]D=l[U[-15910-(-15911)]]a=i(172144-228735)I=l[U[-583275-(-583277)]]X=I(a,g)u=D[X]n=K[u]a=-580374+30405143401060 u=l[U[465780-465779]]D=l[U[-412826-(-412828)]]X=i(809953-866413)I=D(X,a)K=u[I]B=n[K]n={B}B=O[i(-162933-(-106485))]end else if B&lt;-466332+15711440 then H=l[U[156672-156671]]t=-77844+7185912233254 Z=l[U[587944-587942]]j=i(889750+-946393)r=Z(j,t)d=H[r]L=d B=-1039693+12040702 else I=645842+-645840 D=-324841-(-324842)K=l[U[-764000+764001]]u=K(D,I)K=60292+-60291 N=u==K B=N and 40412+11645374 or-773451+5679151 n=N end end else if B&lt;-736451+16229501 then if B&lt;14486859-(-944791)then X=22862558607381-(-160129)K=l[U[-431424-(-431425)]]u=l[U[110229-110227]]N=b[-738348+738349]I=i(665631-722252)D=u(I,X)n=K[D]a=9390+12665617855067 X=i(614441-670957)u=l[U[146584-146583]]T=456750+18634420890039 D=l[U[-251439+251441]]I=D(X,a)K=u[I]D=l[U[204932+-204931]]I=l[U[-160483-(-160485)]]a=i(-952428-(-895933))g=19049252265600-965594 X=I(a,g)u=D[X]g=i(-480860-(-424229))I=l[U[205957-205956]]X=l[U[499697+-499695]]a=X(g,T)T=i(358363-414928)D=I[a]X=l[U[385664+-385663]]m=7886388408409-(-171519)a=l[U[401849+-401847]]g=a(T,m)I=X[g]B={[n]=K,[u]=N;[D]=I}n={B}B=O[i(990506-1047100)]else f=653330-653329 B=-43595+3739149 P=S[f]OU=P end else if B&lt;-727412+16304110 then n=13250787-630029 K=i(-567048+510597)u=-520012+15200219 N=K^u B=n-N n=i(-250125+193658)N=B B=n/N n={B}B=O[i(-909550+852943)]else B={}n=i(730749+-787310)N=b[251513-251512]K=b[-592746-(-592748)]D=B u=b[757487-757484]B=O[n]a={B(N)}X=a[864851-864848]I=a[-252488+252490]B=346849+3149608 n=a[691028+-691027]a=n end end end else if B&lt;-642047+17091338 then if B&lt;274498+15954063 then if B&lt;16255738-118674 then d=l[K]v=d B=d and-1046048+11952865 or 939077+15745919 else B=u B=K and 565472+9984575 or 12499447-(-234374)n=K end else if B&lt;16277409-(-42326)then a=32928291688426-300037 u=l[U[719171+-719170]]B=752111+13452894 X=i(278778-335436)D=l[U[-739010-(-739012)]]I=D(X,a)K=u[I]n=K else L=-277493-(-277494)Z=#E Y=u(L,Z)L=X(E,Y)Z=l[W]Y=nil B=15063702-534579 t=-752517-(-752518)j=L-t r=a(j)Z[L]=r L=nil end end else if B&lt;-905418+17542310 then if B&lt;758369+15872120 then T=i(-874612+818070)u=B m=81418+33329155997334 X=l[U[-522601-(-522602)]]a=l[U[36552+-36550]]g=a(T,m)I=X[g]N=b[197738-197737]D=N[I]K=D B=D and-335895-(-842463)or 6337800-583882 else s=12547074542049-750351 m=i(-602628+546178)X=i(-770730-(-714167))n=O[X]a=l[U[-634851+634852]]g=l[U[642773+-642771]]T=g(m,s)X=a[T]E=29483732143405-(-485492)W=-425086+50613402773 B=n[X]g=l[U[-999110-(-999111)]]T=l[U[-276646-(-276648)]]s=i(884798-941370)m=T(s,W)a=g[m]T=l[U[503543+-503542]]m=l[U[242290-242288]]W=i(-556306-(-499765))s=m(W,E)g=T[s]Y=14532133722392-736937 m=l[U[646643-646642]]E=i(-1006951+950393)s=l[U[77284+-77282]]W=s(E,Y)T=m[W]X={[a]=g;[T]=K}n=B(I,X)B=8238386-(-534399)end else if B&lt;16057217-(-607129)then E=nil a=nil u=nil Y={}j=i(-65620+9056)L=J()t={}l[L]=Y Z=k(-154166+2032008,{L,T;m;I})Y=J()q=-106778+22044204534067 r=J()E=26756903012195-(-371016)s=nil l[Y]=Z Z={}l[r]=Z Z=O[j]s=12898611226486-(-864256)S=i(-432102+375577)f=nil V=l[r]c=i(-274170-(-217535))w={[c]=V;[S]=f}X=nil j=Z(t,w)l[K]=j Z=o(310756+7133291,{r,L,W,T,m,Y})L=R(L)g=nil Y=R(Y)I=R(I)I=i(-692695-(-636169))r=R(r)W=R(W)m=R(m)l[D]=Z T=R(T)m=i(-582497+525910)u=O[I]a=l[K]g=l[D]Y=369402+2987846115957 I=i(606990-663522)T=g(m,s)I=u[I]X=a[T]I=I(u,X)u=J()l[u]=I pU=150962+24153787801149 S=i(423892+-480325)I=o(4805369-(-860573),{K;D;u})X=i(-569074-(-512575))L=23104835655965-(-823530)a=i(857360+-913847)r=-202589+21056264109482 O[X]=I I=J()X=o(10874380-(-641285),{K,D,u})l[I]=X X=z(15322151-(-256429),{K;D;u})O[a]=X t=i(725970+-782508)W=i(-13053+-43527)C=318566+13616844946526 T=l[K]Z=i(418299-474739)w=522609+17519978948205 m=l[D]s=m(W,E)g=T[s]E=i(966530-1023145)m=l[K]s=l[D]W=s(E,Y)f=11531194458337-(-701464)Y=i(-99402+42961)T=m[W]V=-1047633+29061362037037 iU=5051027880922-(-232790)s=l[K]W=l[D]E=W(Y,L)c=3995414911954-(-633714)m=s[E]E=l[K]s=true Y=l[D]L=Y(Z,r)W=E[L]L=l[K]E=false Z=l[D]r=Z(t,w)Y=L[r]Z=l[K]w=i(-985950+929460)r=l[D]t=r(w,c)c=i(-57248+629)L=Z[t]r=l[K]t=l[D]w=t(c,V)t=i(400810+-457309)Z=r[w]r=O[t]w=l[K]c=l[D]V=c(S,f)A=i(-179909+123324)t=w[V]w=h(-442105+1903187,{K;D})V=l[K]S=l[D]UU=464534+9375171607159 e=531363+14632738258682 f=S(A,q)c=V[f]V=o(-179696+4567442,{K;D})a={[g]=T,[m]=s;[W]=E;[Y]=L,[Z]=r,[t]=w;[c]=V}Y=24706673746651-882155 m=l[K]S=-931060+20709469018783 s=l[D]E=i(338891-395437)W=s(E,Y)Y=i(18198+-74858)T=m[W]s=l[K]Z=29005654385549-(-643381)V=29198421120068-73512 L=827622+31444018223180 q=i(630730-687231)W=l[D]w=i(-857372-(-800782))E=W(Y,L)L=i(-997910+941386)m=s[E]W=l[K]E=l[D]t=13523555035234-(-897079)c=642020+22301748157613 Y=E(L,Z)s=W[Y]W=false Y=l[K]r=i(799077-855558)L=l[D]Z=L(r,t)E=Y[Z]Y=false Z=l[K]r=l[D]t=r(w,c)f=i(665908-722474)c=i(-661780-(-605184))L=Z[t]r=l[K]t=l[D]w=t(c,V)Z=r[w]t=l[K]A=-596396+13967359669012 w=l[D]V=i(477896+-534449)c=w(V,S)r=t[c]w=i(-448454+391955)t=O[w]c=l[K]V=l[D]S=V(f,A)w=c[S]c=M(-170325-(-172810),{K,D})S=l[K]f=l[D]A=f(q,C)V=S[A]S=h(4654424-386665,{K,D})g={[T]=m;[s]=W;[E]=Y;[L]=Z,[r]=t;[w]=c,[V]=S}s=l[K]W=l[D]Y=i(974976+-1031503)L=251437+16335067907977 E=W(Y,L)m=s[E]W=l[K]E=l[D]L=i(-922480+866025)Z=33050980179924-(-138314)Y=E(L,Z)S=7689722623455-550883 t=i(408754-465273)c=i(-715634+659105)s=W[Y]C=i(64761+-121263)E=l[K]w=-323022+4255532856715 r=25354115007252-316662 Z=i(313896-370431)Y=l[D]L=Y(Z,r)W=E[L]E=false V=18922872188388-52089 L=l[K]Z=l[D]r=Z(t,w)Y=L[r]L=false r=l[K]f=8250949023357-927611 t=l[D]w=t(c,V)Z=r[w]t=l[K]V=i(627079+-683721)q=19220918127403-895029 w=l[D]c=w(V,S)r=t[c]A=i(-858634+802125)w=l[K]c=l[D]S=i(-613973-(-557510))V=c(S,f)t=w[V]w=o(865314-817490,{I,K,D})V=l[K]S=l[D]f=S(A,q)c=V[f]f=l[K]A=l[D]q=A(C,e)S=f[q]f=h(861390+7090767,{K;D})V=h(566862+11532669,{K;D})T={[m]=s,[W]=E,[Y]=L,[Z]=r;[t]=w;[c]=V;[S]=f}r=21178681154563-(-461443)W=l[K]w=i(379552-436024)L=i(-72703+16070)Z=-998320+12093969486255 E=l[D]S=15192730237313-(-320033)Y=E(L,Z)Z=i(651052-707582)s=W[Y]t=17678596102774-604750 E=l[K]Y=l[D]L=Y(Z,r)W=E[L]r=i(70767-127279)A=13178705253747-998779 Y=l[K]V=i(873086+-929722)C=26417462401600-(-1005005)L=l[D]Z=L(r,t)E=Y[Z]Z=l[K]r=l[D]Y=false c=34395717528098-240530 f=-787065+3203692267596 t=r(w,c)L=Z[t]Z=false t=l[K]w=l[D]q=i(351784+-408396)c=w(V,S)S=i(63203+-119649)r=t[c]w=l[K]c=l[D]V=c(S,f)f=i(-1011880+955407)e=i(-285744-(-229223))t=w[V]c=l[K]V=l[D]S=V(f,A)w=c[S]S=l[K]f=l[D]c=o(-1032900+8547327,{I;K,D})A=f(q,C)V=S[A]S=M(711492+4119763,{K;D})A=l[K]q=l[D]C=q(e,iU)f=A[C]A=F(15431175-528425,{K;D})iU=i(-869439+812862)e=28212160085956-494707 m={[s]=W;[E]=Y,[L]=Z;[r]=t;[w]=c;[V]=S;[f]=A}E=l[K]Z=i(-37566-19072)t=14694734126510-(-589068)r=129742+5104536522362 Y=l[D]L=Y(Z,r)V=13355483902164-(-845687)W=E[L]Y=l[K]r=i(666399-722949)L=l[D]Z=L(r,t)E=Y[Z]bU=-615361+3734699420300 t=i(2397+-58907)c=i(-290554-(-233973))L=l[K]S=i(68621-125246)w=2910491892541-(-895502)f=347153+27494595388914 Z=l[D]r=Z(t,w)Y=L[r]L=false C=i(914105+-970719)r=l[K]t=l[D]w=t(c,V)Z=r[w]r=false BU=21570931910611-(-1048425)A=22131410211821-191404 w=l[K]B=O[i(-263090+206528)]c=l[D]V=c(S,f)t=w[V]c=l[K]V=l[D]f=i(27187-83746)S=V(f,A)q=10314341349506-(-137792)w=c[S]V=l[K]A=i(864953-921501)S=l[D]f=S(A,q)c=V[f]f=l[K]A=l[D]V=h(664367+7059733,{I,K;D})q=A(C,e)S=f[q]q=l[K]f=k(12423509-293984,{K;D})C=l[D]e=C(iU,BU)A=q[e]q=h(3945928-(-7075),{K;D})s={[W]=E,[Y]=L;[Z]=r;[t]=w;[c]=V,[S]=f;[A]=q}t=411975+20167422286696 Y=l[K]r=i(39087-95690)L=l[D]w=3801820267051-(-935103)Z=L(r,t)V=i(135932+-192374)iU=18200247478405-280426 C=24957303566378-(-834875)E=Y[Z]f=i(-46683+-9822)c=143633+7268847688743 L=l[K]A=715180+24929829110700 t=i(234448-291097)S=33346126827628-(-142396)Z=l[D]r=Z(t,w)BU=i(-926520-(-870037))Y=L[r]w=i(739021+-795485)Z=l[K]r=l[D]t=r(w,c)L=Z[t]Z=false t=l[K]w=l[D]c=w(V,S)q=43149+33686311195833 r=t[c]t=true c=l[K]V=l[D]e=i(-1007144-(-950631))S=V(f,A)w=c[S]V=l[K]S=l[D]A=i(-687960+631336)f=S(A,q)q=i(-998348-(-941778))c=V[f]S=l[K]f=l[D]A=f(q,C)V=S[A]S=k(624435+2819929,{K,D})A=l[K]q=l[D]C=q(e,iU)f=A[C]C=l[K]e=l[D]A=k(-206186+15623880,{K,D})iU=e(BU,pU)q=C[iU]C=h(919154+15711069,{K,D})W={[E]=Y,[L]=Z,[r]=t,[w]=c,[V]=S;[f]=A,[q]=C}w=141975+12639241956454 A=i(-743322+686681)BU=-281214+20589893627889 L=l[K]c=-672670+28422535001937 t=i(-628299+571819)V=25956078170581-(-720225)C=34818187342118-(-577071)Z=l[D]r=Z(t,w)w=i(-969312-(-912760))Y=L[r]Z=l[K]r=l[D]t=r(w,c)S=i(303405-359949)L=Z[t]f=728602+23080995900385 r=l[K]c=i(-252306+195757)t=l[D]q=-476624+10654056094001 w=t(c,V)Z=r[w]w=l[K]r=false c=l[D]V=c(S,f)t=w[V]V=l[K]S=l[D]f=S(A,q)w=true c=V[f]q=i(-923767-(-867163))S=l[K]f=l[D]A=f(q,C)V=S[A]pU=i(-932930+876494)e=397379+25695777349242 f=l[K]C=i(783429+-839885)A=l[D]iU=i(-242235-(-185680))q=A(C,e)S=f[q]q=l[K]C=l[D]e=C(iU,BU)f=F(-196366+13778043,{K,D})A=q[e]q=k(2979276-(-789865),{K,D})e=l[K]iU=l[D]BU=iU(pU,bU)C=e[BU]e=h(503906+8520478,{K;D})E={[Y]=L,[Z]=r,[t]=w,[c]=V,[S]=f,[A]=q;[C]=e}w=i(632306+-688727)c=-651437+16370190519923 Z=l[K]r=l[D]V=28132354950342-20890 t=r(w,c)iU=33149396086407-881211 C=-774080+834372178244 f=i(-1061051-(-1004500))c=i(959931-1016467)S=-355166+8941686569889 L=Z[t]r=l[K]q=i(-641427+584975)t=l[D]pU=11631252542561-(-229575)w=t(c,V)Z=r[w]t=l[K]w=l[D]V=i(735186+-791623)c=w(V,S)bU=i(1005855+-1062314)r=t[c]BU=i(765519-821964)A=-358423+35004611590083 c=l[K]t=true V=l[D]S=V(f,A)w=c[S]S=l[K]f=l[D]e=33095473179441-(-987394)c=false A=f(q,C)C=i(-429140+372571)V=S[A]f=l[K]A=l[D]q=A(C,e)e=i(-928303+871702)S=f[q]A=l[K]q=l[D]C=q(e,iU)f=A[C]q=i(700800-757299)A=O[q]C=l[K]e=l[D]iU=e(BU,pU)q=C[iU]C=F(457258+2458855,{K;D})iU=l[K]BU=l[D]pU=BU(bU,UU)e=iU[pU]iU=o(106064+11834255,{K,D})Y={[L]=Z;[r]=t,[w]=c,[V]=S,[f]=A;[q]=C;[e]=iU}X={a,g;T,m;s;W,E;Y}n={X}else l[K]=v B=l[K]B=B and 674161+-483759 or 448587+13264795 end end end end end end end end B=#G return p(n)end,function(O,i)local p=u(i)local b=function()return B(O,{},i,p)end return b end,function()K=(884632-884631)+K N[K]=288653+-288652 return K end,function(O,i)local p=u(i)local b=function(b,U,G)return B(O,{b;U,G},i,p)end return b end return(I(1772168-951991,{}))(p(n))end)(getfenv and getfenv()or _ENV,unpack or table[i(-258863+202303)],newproxy,setmetatable,getmetatable,select,{...})end)(...)</ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="ModuleScript" referent="RBXDA49813E8C56440C9FA50130EB1019F1">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">AISendHandler</string>
				<string name="ScriptGuid">{9DBA94DB-45BB-40CE-A91E-A05EA2D87A47}</string>
				<ProtectedString name="Source">--[[ v1.0.0 https://wearedevs.net/obfuscator ]] return(function(...)local S={&quot;\118\087\051\078\118\101\061\061&quot;,&quot;\106\097\104\088\103\106\056\051\084\073\068\121\100\099\057\116\086\104\061\061&quot;;&quot;\082\070\074\109\087\051\121\109&quot;;&quot;\086\098\087\057\120\054\073\104\121\073\065\112\083\056\079\080\081\069\061\061&quot;;&quot;\087\051\076\090\069\114\078\088\105\090\066\048\077\088\053\103\051\078\114\068\111\067\102\052&quot;,&quot;\104\073\053\082\113\086\111\087\116\081\105\089\100\097\053\066\112\104\061\061&quot;,&quot;\043\101\061\061&quot;;&quot;\100\048\119\117\112\099\065\075\052\083\111\107\116\108\056\068\086\071\069\061&quot;,&quot;\103\122\082\054\070\069\052\061&quot;;&quot;\084\073\086\083\103\090\086\083\052\099\100\109\052\108\056\111&quot;;&quot;\070\069\107\080\101\088\048\067\120\052\105\115\120\109\072\079\121\056\053\050\090\118\085\083\085\101\056\072\090\079\101\106\076\076\057\100\076\080\085\076\104\083\055\109\110\100\117\048\117\104\061\061&quot;,&quot;\079\112\088\052\052\120\114\084\071\121\098\121\069\054\101\065\087\114\055\079\050\100\105\112\120\048\101\107\069\103\047\066\054\049\061\061&quot;;&quot;\106\118\068\113\106\082\082\085&quot;;&quot;\086\048\107\077\084\048\086\066\070\121\100\111\105\048\086\081\105\048\086\079\070\104\061\061&quot;,&quot;\070\081\076\104\105\084\052\073&quot;,&quot;\085\056\049\061&quot;;&quot;\084\048\057\109\103\048\101\061&quot;,&quot;\068\054\085\112\069\116\083\065\070\114\079\103\099\101\061\061&quot;,&quot;\075\113\081\089\043\113\097\117\098\080\057\052\098\082\088\099\079\114\076\119\056\067\115\102\068\075\074\061&quot;,&quot;\099\122\108\083\108\051\076\122&quot;;&quot;\072\049\085\099\085\051\103\104\086\122\068\068\108\078\088\066\047\118\075\071\082\082\114\066\090\110\114\108\101\078\055\057\053\055\080\100\087\102\053\085\097\069\050\070\056\097\090\076\067\079\071\099\074\098\074\104\107\071\103\068\083\048\121\109\070\098\056\068\080\068\068\047\057\116\113\066\105\069\080\073\105\100\056\116\056\054\079\078\083\104\080\066\098\101\122\081\107\118\119\061&quot;;&quot;\052\118\111\083\116\104\061\061&quot;;&quot;\104\079\088\081\113\120\107\051&quot;;&quot;\057\073\116\107\084\121\086\075\084\107\086\086\100\120\086\079\112\090\101\061&quot;,&quot;\053\097\111\053\083\049\061\061&quot;;&quot;\105\047\066\056\115\083\050\098\055\104\061\061&quot;;&quot;\076\068\109\071\076\086\070\097\104\108\111\107\086\108\077\110\106\108\052\061&quot;;&quot;\073\043\070\067\078\048\116\074\051\114\069\117\090\097\121\061&quot;,&quot;\099\102\054\122\117\107\068\066\073\056\077\122\121\089\067\105\121\052\115\084\089\105\083\061&quot;,&quot;\071\111\055\070\066\101\061\061&quot;,&quot;\088\088\076\100\081\080\090\071\074\114\089\078\066\068\121\047\117\115\078\050\056\076\116\076\057\072\072\105\070\118\122\066\052\043\078\113\109\081\088\099\073\104\072\089\109\049\050\100\068\108\047\069\057\087\111\056\119\090\084\052\099\054\089\113\065\103\097\082\055\120\116\054\075\112\078\100\100\043\047\101\068\067\085\077\043\115\099\101\109\116\080\067\111\080\079\076\067\119\057\079\088\099\067\085\118\068\100\052\116\102\052\109\067\097\105\085\108\104\061\061&quot;,&quot;\118\088\050\049\070\100\053\082\109\070\081\107\104\049\061\061&quot;,&quot;\105\108\053\083\082\068\116\055\106\068\100\110\105\118\057\118&quot;,&quot;\056\057\077\101\075\118\118\076\075\104\061\061&quot;,&quot;\048\053\104\061&quot;;&quot;\089\084\053\121\115\104\061\061&quot;,&quot;\088\084\065\109\070\120\090\047\075\107\075\079\114\070\120\052&quot;,&quot;\085\098\073\068\122\102\121\079\047\117\101\088\054\047\051\072\111\104\061\061&quot;;&quot;\116\078\111\085\053\098\068\114&quot;,&quot;\072\101\073\048\070\057\102\084&quot;;&quot;\053\069\061\061&quot;,&quot;\066\056\119\086\068\099\112\047\084\049\061\061&quot;;&quot;\089\105\090\118\050\083\070\080&quot;;&quot;\078\101\061\061&quot;,&quot;\084\083\086\082\084\081\086\116\116\071\109\089\085\086\109\054&quot;,&quot;\112\118\113\081\043\113\082\043\071\069\061\061&quot;;&quot;\079\109\052\103\118\115\073\097\111\102\072\109\083\076\052\112\082\100\108\047&quot;;&quot;\049\048\082\054\111\120\088\083\111\109\055\072\090\066\077\080\069\099\071\107\082\089\079\061&quot;,&quot;\116\108\111\080\116\049\061\061&quot;;&quot;\079\083\087\107\051\075\114\115\069\117\097\078\089\051\122\100\122\088\104\061&quot;;&quot;\105\048\098\120\105\071\065\053\103\108\084\061&quot;,&quot;\116\097\057\068\052\069\061\061&quot;,&quot;\111\079\110\043\120\056\101\043&quot;,&quot;\086\106\100\053\103\076\070\061&quot;;&quot;\052\073\098\080\052\073\107\083&quot;;&quot;\106\086\115\105\048\080\122\047\056\104\061\061&quot;,&quot;\097\066\112\085\077\049\061\061&quot;,&quot;\104\052\077\109&quot;;&quot;\050\114\103\111\051\098\106\048\068\118\057\072\107\099\069\061&quot;;&quot;\086\106\056\102\116\120\109\116\076\083\077\106\116\083\116\089\085\049\061\061&quot;,&quot;\084\097\100\066\082\090\088\118&quot;,&quot;\082\110\082\057\113\086\110\107\087\069\061\061&quot;;&quot;\056\049\115\048\111\072\106\074\113\069\070\061&quot;;&quot;\111\107\114\113\109\105\085\076\108\106\105\115\054\069\061\061&quot;;&quot;\067\056\056\106&quot;,&quot;\109\055\047\072\111\104\061\061&quot;,&quot;\121\107\069\072\055\075\081\068\055\116\071\108\111\090\104\109\077\120\077\069\116\080\108\083\114\077\109\105\098\111\089\076\089\116\051\052\086\105\098\097\079\114\122\047\100\080\090\088\116\104\057\084\086\081\077\120\099\098\074\077\119\053\079\120\086\113\103\116\089\067\115\072\120\056\049\082\085\116\073\086\085\052\080\050\098\080\054\115\088\049\067\122\089\072\079\068\051\109\116\066\052\103\089\072\115\050\049\043\053\120\055\051\082\085\051\097\073\105\076\057\056\054\065\101\048\117\071\075\057\121\090\108\116\077\119\103\084\052\117\069\107\049\049\088\065\117\066\070&quot;;&quot;\104\073\109\066&quot;,&quot;\113\067\076\108\089\049\061\061&quot;;&quot;\078\107\068\090\068\053\073\090\074\070\047\104\043\084\074\061&quot;;&quot;\100\106\111\051\082\048\088\113\074\073\065\101\113\121\088\117&quot;,&quot;\070\057\097\102\113\118\065\101\075\053\055\100\072\068\122\089&quot;,&quot;\071\043\109\073\112\104\110\103\067\068\111\052\076\056\106\088&quot;;&quot;\066\074\047\103\051\108\107\117&quot;;&quot;\054\048\053\051\043\073\050\072&quot;,&quot;\073\053\056\088\110\110\081\077\054\066\103\069\070\080\101\112\117\053\103\084\055\056\087\116\069\117\109\088\056\057\084\118\066\114\075\061&quot;;&quot;\085\122\069\111\116\102\075\053\085\069\061\061&quot;;&quot;\100\073\086\083\106\073\086\083\105\048\111\080\116\101\061\061&quot;;&quot;\103\090\107\083\082\049\061\061&quot;,&quot;\109\090\098\101\069\111\121\055&quot;,&quot;\082\099\050\109\082\099\065\120&quot;;&quot;\089\048\055\049\052\069\061\061&quot;,&quot;\116\053\072\086\068\043\079\085\088\076\103\066\090\102\070\061&quot;;&quot;\119\082\089\086\118\054\112\111\056\069\056\110\085\053\088\072\057\086\067\086\120\089\119\118\089\076\090\113\118\099\049\061&quot;,&quot;\100\120\086\109\103\073\075\120\100\079\086\054\084\083\100\097&quot;,&quot;\075\051\078\122\106\080\120\113\088\121\085\110\116\115\075\056\049\089\121\114\057\108\079\073\120\116\057\097\056\104\061\061&quot;;&quot;&quot;,&quot;\098\100\106\114\084\104\061\061&quot;,&quot;\102\051\080\112\081\049\061\061&quot;;&quot;\120\055\067\117&quot;;&quot;\081\057\078\083\118\068\089\104\077\114\054\108\101\110\074\061&quot;;&quot;\049\073\099\089&quot;;&quot;\103\115\070\061&quot;;&quot;\067\080\106\051&quot;,&quot;\097\085\072\043\054\083\082\056&quot;,&quot;\116\107\086\054\084\083\053\088\100\106\100\053\106\079\119\073\090\049\061\061&quot;;&quot;\118\086\115\053\074\121\066\087\070\101\061\061&quot;;&quot;\099\068\098\077\116\099\100\109\105\048\107\122\103\048\106\061&quot;,&quot;\084\073\105\057\105\083\068\070\103\107\107\080\104\068\116\102\100\071\069\061&quot;,&quot;\106\108\086\056\105\090\086\120\105\121\107\120\112\090\088\081&quot;,&quot;\105\090\088\101\052\090\057\055&quot;,&quot;\116\073\107\077\116\104\061\061&quot;;&quot;\085\097\112\087\085\070\080\072\086\104\061\061&quot;,&quot;\105\056\081\117\074\071\073\053\115\104\061\061&quot;;&quot;\099\068\098\119\116\090\117\061&quot;;&quot;\079\099\097\101\080\106\056\107\120\048\099\050\072\088\085\079\100\050\087\053\065\073\049\090&quot;,&quot;\089\101\043\084\120\098\075\113&quot;;&quot;\083\057\074\121\099\066\115\103\052\101\070\055\121\069\061\061&quot;,&quot;\078\086\110\052\077\054\099\068\056\074\100\067\116\077\072\061&quot;,&quot;\067\098\109\117\050\072\074\089\076\068\078\111\100\103\090\083\090\109\108\043\082\085\111\053\054\065\089\113\117\085\054\112\075\050\114\065\119\111\122\071\102\085\079\084&quot;;&quot;\115\118\111\073&quot;;&quot;\068\122\070\115\083\116\086\043&quot;;&quot;\043\079\122\057\101\068\076\078&quot;,&quot;\048\056\089\050\101\077\114\108&quot;;&quot;\082\109\106\052\075\098\082\117\111\052\114\087\122\086\047\077\072\088\111\112\099\077\116\114\051\106\056\110\084\055\078\057\053\051\065\051\086\107\121\097\085\116\067\075\052\084\114\106\117\050\075\065\052\081\056\073\056\051\065\105\099\076\071\077\117\104\061\061&quot;,&quot;\103\073\088\047\084\073\086\080\116\107\098\122\105\099\100\083\103\073\088\047\052\073\056\053\052\073\119\061&quot;,&quot;\103\076\083\099\082\047\076\116\084\051\118\055\071\070\083\061&quot;,&quot;\076\104\061\061&quot;,&quot;\102\068\067\081\069\054\103\114&quot;;&quot;\100\073\086\083\086\048\086\117\105\107\057\053\112\108\106\061&quot;;&quot;\056\055\056\098\067\043\083\116\119\085\054\065\051\089\111\103\103\101\061\061&quot;,&quot;\104\073\056\067\103\108\106\061&quot;;&quot;\070\078\109\066\112\071\049\056\075\050\050\071\114\069\057\065\071\080\100\115\066\067\049\061&quot;;&quot;\043\118\069\070\114\116\113\055&quot;,&quot;\083\119\068\080\100\078\055\109\102\074\054\103\099\082\069\086\120\074\115\088\055\114\043\078\083\101\061\061&quot;;&quot;\081\087\112\075\083\106\089\047\086\052\099\080\077\120\052\070\119\121\084\061&quot;,&quot;\073\103\116\081\085\055\090\105\083\117\116\111\054\078\080\112\089\078\050\106\117\101\061\061&quot;,&quot;\099\068\098\053\103\108\100\111\112\049\061\061&quot;,&quot;\043\100\114\107\102\069\110\111\080\049\061\061&quot;;&quot;\108\115\069\051\078\104\061\061&quot;;&quot;\120\074\066\118\109\101\061\061&quot;;&quot;\105\071\111\101\116\104\061\061&quot;;&quot;\081\098\114\078\086\084\081\068\118\107\121\052\075\079\089\100&quot;,&quot;\112\111\116\055\103\115\111\077\100\115\111\102\116\079\111\110\082\069\061\061&quot;,&quot;\089\098\103\090\119\043\080\085\086\100\086\102\079\055\108\109&quot;;&quot;\100\073\086\083\106\073\086\066\105\108\111\081\116\104\061\061&quot;;&quot;\055\075\083\089&quot;;&quot;\120\043\090\086\113\101\061\061&quot;,&quot;\100\073\086\083\104\073\109\053\103\048\100\066\116\090\117\061&quot;,&quot;\076\049\079\090\110\086\075\079\066\049\061\061&quot;,&quot;\074\111\070\090\086\086\117\047&quot;,&quot;\083\119\052\088\073\051\097\056\078\067\076\085\043\110\082\097\105\120\106\116\057\056\076\121\087\054\089\098\083\080\047\075\102\074\053\117\066\077\076\089&quot;,&quot;\068\066\065\082\053\104\061\061&quot;;&quot;\047\086\109\085\108\069\061\061&quot;;&quot;\104\068\116\076\086\121\117\097\106\090\065\122\086\073\086\108\100\115\049\061&quot;;&quot;\076\117\122\084\089\082\067\122\114\100\100\073\111\105\113\054&quot;,&quot;\085\108\052\049\116\051\075\114\081\114\107\052&quot;;&quot;\097\111\099\110\050\074\122\084\088\100\068\043\055\082\119\076\115\103\115\112\070\097\103\113\112\115\079\061&quot;,&quot;\105\090\065\073\116\107\100\113\100\120\107\108\057\090\100\102&quot;;&quot;\100\089\099\107\074\080\068\065\071\111\106\110\111\048\086\043\049\087\051\079\111\069\119\061&quot;;&quot;\076\103\070\081\122\104\061\061&quot;,&quot;\105\071\111\119\112\111\053\056\082\108\068\073\086\068\105\117\106\073\084\061&quot;;&quot;\111\090\086\065\109\070\084\043\118\118\052\090\112\114\090\114\066\115\052\120\077\056\118\108\043\079\068\112\112\085\121\116\116\101\101\061&quot;,&quot;\085\090\107\102\113\081\116\050\103\107\107\077\082\115\107\102\100\069\061\061&quot;,&quot;\108\057\088\109\104\068\112\052&quot;,&quot;\075\104\080\098\065\097\083\075\048\071\051\118\073\119\097\069\070\084\118\111\109\103\118\121\053\068\122\065\051\068\110\112\105\108\120\078\054\076\048\053\098\103\076\079\050\112\073\049\110\117\121\115\111\107\047\114\089\051\101\081\085\109\056\070\068\068\056\114\052\097\057\070\105\081\115\106\082\077\079\065\118\075\088\050\102\099\098\113\081\111\054\053\121\120\067\108\114\121\068\103\086\085\079\104\050\104\061\061&quot;,&quot;\074\086\055\072\120\111\079\099\118\097\051\075\056\087\047\048\117\121\074\104\102\072\052\112\055\068\052\061&quot;;&quot;\084\076\107\088\084\081\105\086\100\090\056\106\113\099\057\085\052\083\052\061&quot;,&quot;\048\049\051\048\097\122\108\078\119\101\061\061&quot;;&quot;\110\112\070\116\076\043\099\119\103\051\069\061&quot;,&quot;\112\108\065\056\084\115\116\122\106\048\119\101\052\090\068\055&quot;;&quot;\050\085\052\047\051\075\112\086\109\113\108\081\117\086\073\107&quot;,&quot;\081\069\061\061&quot;,&quot;\114\110\078\080\098\113\076\084\111\075\120\101\106\082\088\101\047\113\071\077\105\090\101\066\109\066\098\111\088\071\076\052\067\119\070\089\109\100\079\103\051\051\106\048\118\114\114\054\102\109\088\102\086\120\076\097\067\088\121\055\074\122\107\112&quot;,&quot;\104\070\116\057\049\086\090\070\082\070\103\057\078\048\084\043&quot;;&quot;\105\108\104\088\052\108\053\065\052\073\068\109\076\120\086\081\116\083\104\061&quot;;&quot;\047\072\088\122\054\104\061\061&quot;;&quot;\108\053\090\084\084\103\111\055\082\122\115\084\100\115\085\103\057\069\061\061&quot;,&quot;\105\048\098\080\105\090\068\122\116\099\070\061&quot;,&quot;\066\065\110\112\072\104\072\121&quot;,&quot;\097\101\061\061&quot;,&quot;\104\057\099\117\105\049\061\061&quot;;&quot;\113\111\057\051\076\079\100\111\052\073\098\079\116\104\061\061&quot;;&quot;\079\072\068\051\122\115\048\106\079\075\105\103\084\055\099\102&quot;,&quot;\072\053\048\080\057\119\105\047\079\104\061\061&quot;,&quot;\076\106\103\108\050\051\102\098\065\108\100\057\068\066\084\104\114\049\061\061&quot;,&quot;\085\069\061\061&quot;,&quot;\108\108\087\122\066\080\072\106\122\120\090\065\099\051\084\103&quot;,&quot;\113\068\100\071\074\048\100\067\112\081\050\080\104\106\098\113\084\108\101\061&quot;;&quot;\076\115\086\086\052\099\052\056\104\083\107\101\090\121\106\120&quot;;&quot;\116\108\056\067\103\097\070\061&quot;;&quot;\103\115\121\061&quot;,&quot;\069\065\049\122\076\051\077\071\098\057\098\052\113\086\084\061&quot;;&quot;\056\117\051\056\088\101\061\061&quot;;&quot;\052\068\105\107\106\106\056\075\113\097\053\052\085\106\075\073&quot;,&quot;\074\076\107\107\076\107\104\073\103\106\109\065\086\120\057\076&quot;;&quot;\054\053\072\053\068\068\047\070\110\122\106\061&quot;;&quot;\104\120\100\116\113\079\056\110\105\086\057\097\113\071\116\070\086\049\061\061&quot;;&quot;\113\106\054\105\054\080\099\074&quot;;&quot;\103\054\109\052\056\104\061\061&quot;,&quot;\112\099\102\100\108\052\043\088\101\074\048\119\072\108\099\071&quot;,&quot;\050\104\049\107&quot;;&quot;\043\102\114\055\077\119\103\122&quot;;&quot;\120\101\050\088\073\106\107\084\053\101\061\061&quot;,&quot;\101\097\112\068\048\052\084\053\071\080\114\116\086\085\119\061&quot;;&quot;\087\085\112\078&quot;,&quot;\109\090\102\116\116\068\117\103\110\054\106\071\081\073\101\080&quot;;&quot;\105\113\106\050\106\048\090\066&quot;;&quot;\065\115\108\079\078\088\109\113\074\108\101\087\049\113\052\043\102\056\103\081\120\111\090\078\122\088\070\082\043\078\072\103\050\108\122\120\070\106\048\047\065\065\098\112\065\090\050\081\100\082\079\047\057\069\104\081\119\102\082\099\087\049\085\075\069\088\087\121\076\043\084\117\072\115\090\121\111\065\051\112\115\066\119\053\099\049\061\061&quot;,&quot;\098\075\070\069\047\087\106\084\070\069\061\061&quot;,&quot;\118\050\117\120\121\119\056\068&quot;,&quot;\082\115\102\119\073\079\071\069&quot;,&quot;\105\048\107\122\103\048\106\061&quot;;&quot;\114\104\061\061&quot;;&quot;\087\078\050\121\107\104\061\061&quot;;&quot;\076\049\110\065\114\097\066\048\079\101\061\061&quot;,&quot;\073\119\049\100\108\101\119\107&quot;,&quot;\104\073\100\118\104\081\050\083\082\068\111\122\113\111\105\122&quot;;&quot;\057\079\057\102\116\068\052\066\057\106\052\101\113\111\116\100&quot;,&quot;\104\070\056\074\049\119\068\111\090\097\065\117\118\077\051\049&quot;;&quot;\087\069\112\097&quot;;&quot;\116\118\076\100\089\100\077\065\072\069\104\083\087\097\099\114\080\118\118\054\085\109\100\100\097\056\112\066\085\104\051\043\050\099\043\081\102\067\067\066\109\077\054\043\090\106\104\106\111\055\072\051\048\104\050\114\119\112\120\116\083\074\053\068\111\104\074\107\105\051\105\043\069\098\074\068\051\072\100\119\088\048\043\099\077\065\113\069\076\084\088\051\066\107\081\108\099\111\050\116\048\113\070\072\050\108\056\082\073\073\083\108\051\080\089\070\081\084\074\082\100\120\070\097\050\087\114\071\068\118\071\116\098\082\104\104\065\102\087\115\078\080\088\119\109\069\100\119&quot;;&quot;\122\087\056\065\065\085\048\068\077\083\081\080\106\117\114\053&quot;;&quot;\115\052\078\111\067\049\061\061&quot;,&quot;\079\079\111\107\074\098\105\078\087\077\068\055\087\108\071\089\115\106\116\122\067\051\101\068\117\097\088\100&quot;,&quot;\054\084\052\105\050\068\075\090\071\073\085\074\068\117\072\090\105\068\111\105\071\100\104\061&quot;,&quot;\086\088\080\081\090\056\087\079\120\065\114\112&quot;,&quot;\082\090\074\052\084\052\069\068\111\049\061\061&quot;,&quot;\084\121\070\101\052\079\116\080\105\106\105\107\103\068\109\089\090\090\075\061&quot;;&quot;\087\102\067\114\121\104\061\061&quot;,&quot;\072\054\117\074\056\067\090\087&quot;,&quot;\052\083\083\089\085\102\119\088\087\100\069\061&quot;;&quot;\047\112\066\088\054\076\048\069&quot;;&quot;\114\072\088\073\118\074\057\043\110\082\052\097\101\108\086\088\077\103\066\056&quot;;&quot;\052\073\109\109\084\069\061\061&quot;;&quot;\085\053\079\057\047\051\121\115\043\090\109\082\111\074\106\061&quot;;&quot;\083\076\122\103\119\051\050\113\068\049\061\061&quot;;&quot;\116\073\068\109\105\048\057\075&quot;;&quot;\082\084\051\097\086\107\100\043\085\085\119\104\104\102\075\061&quot;,&quot;\105\111\057\076\082\090\056\090\100\069\061\061&quot;,&quot;\070\073\057\049\065\119\101\074\066\101\061\061&quot;,&quot;\099\068\098\118\052\101\061\061&quot;;&quot;\084\079\109\108\112\121\121\117\104\073\086\118\074\090\068\074\105\097\070\061&quot;;&quot;\089\075\120\115\085\056\121\081\084\105\088\109\119\075\107\067\116\054\100\056&quot;,&quot;\070\057\117\061&quot;,&quot;\105\089\108\119\084\043\109\080\051\069\061\061&quot;,&quot;\043\082\099\069\053\069\061\061&quot;,&quot;\106\111\116\108\104\118\116\090\104\083\056\118\116\068\109\077\074\115\074\061&quot;,&quot;\055\066\112\110\105\088\084\086\080\101\061\061&quot;,&quot;\079\119\120\098&quot;,&quot;\086\099\050\079\052\099\100\111\106\073\098\068\084\108\057\111\104\099\057\088\103\108\074\061&quot;,&quot;\073\090\114\109\113\101\061\061&quot;;&quot;\087\053\110\115\103\080\083\107&quot;,&quot;\108\121\120\114\116\056\050\101&quot;,&quot;\115\085\090\075\049\086\119\089\087\100\109\047\107\107\121\061&quot;;&quot;\100\121\086\052\116\073\056\082&quot;,&quot;\110\084\053\056\111\103\113\085\050\117\106\061&quot;,&quot;\078\117\077\070\056\069\061\061&quot;,&quot;\121\101\071\081\103\113\112\051\079\074\105\102\090\109\084\061&quot;,&quot;\103\090\107\083\052\073\069\061&quot;,&quot;\054\121\112\088\102\066\122\098\073\069\061\061&quot;,&quot;\082\101\079\081\079\057\080\101&quot;;&quot;\084\087\068\068\100\104\112\084\089\116\112\056\054\101\070\087\108\043\104\086\103\073\048\069\112\109\106\061&quot;,&quot;\097\082\079\076\068\097\120\115\103\049\121\120\074\054\065\122&quot;;&quot;\103\050\108\100\088\101\061\061&quot;;&quot;\100\065\102\116\082\101\061\061&quot;;&quot;\072\101\102\082&quot;;&quot;\118\056\103\090\057\103\049\101\090\100\070\097\111\107\069\080\078\110\120\120&quot;,&quot;\100\112\099\051\108\086\078\107\102\081\053\052\077\047\083\069&quot;;&quot;\104\080\099\083\067\107\043\085\104\109\119\085\111\050\102\066\068\089\055\070\078\075\085\048\103\111\085\087\056\065\077\098\117\122\118\088\100\049\054\076\068\075\050\089\087\119\109\083\120\066\075\118\089\057\114\066\068\068\052\069\122\074\120\065\050\101\061\061&quot;;&quot;\107\049\079\117\120\069\061\061&quot;;&quot;\116\079\117\073\076\073\116\068\105\090\111\099\052\068\053\075\105\069\061\061&quot;;&quot;\072\081\105\053\075\104\061\061&quot;;&quot;\084\073\057\066\082\099\050\083&quot;,&quot;\119\090\075\047\072\086\043\115&quot;,&quot;\082\109\117\069\106\079\069\107&quot;;&quot;\104\073\098\080\103\108\086\081\105\049\061\061&quot;,&quot;\084\108\086\056\105\090\111\066\116\104\061\061&quot;,&quot;\119\049\072\082\054\102\098\114\082\121\108\100\106\085\085\107\108\119\073\089\110\097\066\072\053\066\097\083\114\113\080\107\055\073\066\069\114\102\109\080\111\098\117\110&quot;,&quot;\122\051\074\067&quot;,&quot;\070\107\047\104\065\075\113\057\085\079\076\089\057\113\087\101&quot;;&quot;\076\118\057\120\103\097\057\109\085\107\100\073\076\107\100\079\076\079\072\061&quot;,&quot;\100\048\086\120\105\071\065\067\112\104\061\061&quot;;&quot;\103\048\086\080&quot;;&quot;\080\105\081\075\104\081\050\043\105\089\077\068\071\098\077\054\053\047\116\097&quot;;&quot;\052\083\086\113\116\099\057\052\103\083\065\115\104\118\050\099\082\097\121\061&quot;;&quot;\074\105\076\097\114\088\054\049\055\104\077\071\121\051\107\084\054\090\065\113\117\104\061\061&quot;,&quot;\077\070\075\085\085\109\076\122\101\047\105\049\072\115\087\079\081\084\109\113&quot;;&quot;\104\068\116\078\049\098\087\117\122\119\114\122\051\075\100\111\109\057\118\122\109\101\052\087\075\104\116\106\080\088\120\099\056\068\051\116\066\071\107\050\117\111\105\084\054\112\101\052\082\083\086\069\097\089\079\111\049\103\087\090\049\108\071\119\089\050\103\054\122\120\054\107\081\109\069\110\102\075\118\107\105\108\049\085\105\113\082\079\112\056\057\122\114\101\089\099\121\081\101\105\065\083\111\106\090\086\082\073\079\108\088\119\073\082\098\109\088\113\083\081\048\082\111\054\075\073\078\088\101\074\110\085\051\106\079\056\100\086\056\077\113\112\052\087\090\087\075\061&quot;;&quot;\050\109\048\067\074\084\118\097\114\069\056\081&quot;;&quot;\056\119\065\051\108\080\082\049&quot;,&quot;\072\118\069\053\068\081\070\061&quot;,&quot;\108\099\072\107\107\077\068\081\078\049\061\061&quot;,&quot;\106\073\065\076\105\118\079\056\106\120\107\110\106\068\053\113\052\073\083\061&quot;,&quot;\082\099\116\110\113\106\109\086\052\068\053\104\085\107\121\117\090\049\061\061&quot;,&quot;\070\081\047\101\053\104\061\061&quot;;&quot;\076\047\104\052\108\049\061\061&quot;,&quot;\077\074\115\098\072\077\053\084\070\073\073\056\079\067\110\108&quot;;&quot;\109\108\065\053\122\122\087\070\114\090\080\087\072\102\076\049\069\099\121\076\098\075\088\068\080\100\119\122\066\081\067\047\052\077\050\057\066\089\082\088\065\089\079\061&quot;,&quot;\066\107\066\122\077\117\079\117\108\088\121\053\110\104\061\061&quot;;&quot;\110\077\111\086\107\086\079\120&quot;;&quot;\105\048\107\120\082\101\061\061&quot;;&quotquot;;&quot;\113\069\077\084&quot;,&quot;\043\055\117\072&quot;;&quot;\103\097\074\061&quot;;&quot;\101\105\057\074\071\078\067\079&quot;;&quot;\057\116\110\080\052\082\075\113\120\077\075\048\085\076\069\061&quot;,&quot;\090\102\076\089\121\109\107\110\104\053\070\061&quot;,&quot;\057\084\077\071\073\072\065\084\120\110\049\118\114\114\122\083\043\101\043\122\076\075\086\068\074\079\053\076\050\113\081\057&quot;,&quot;\105\121\065\110\103\073\100\104\090\121\109\117\074\115\111\066&quot;;&quot;\073\071\100\099\053\115\099\069\100\101\061\061&quot;;&quot;\047\090\098\069\108\085\081\083\050\074\084\066\055\043\101\081\050\109\083\088\120\089\057\075\053\099\099\121\110\099\068\122\099\069\082\098\065\122\072\099\083\116\075\085\106\111\074\052\047\066\102\086\054\070\083\052\055\112\067\070\053\057\074\106\097\073\120\108\098\121\055\097\055\112\107\071\084\104\097\047\109\069\116\099\118\100\120\120\075\121\085\079\117\117\118\100\082\081\110\080\113\088\047\065\081\047\076\050\054\110\121\111\112\067\114\049\075\070\101\081\070\117\119\100\049\048\106\090\084\105\051\083\086\107\119\080\100\105\043\117\071\051\098\050\101\088\090\085\074\085\083\054\055\103\084\104\081\082\057\104\106\088\107\114\050\078\067\056\118\080\048\090\089\051\077\111\080\089\111\075\082\080\117\082\085\120\103\075\074\047\052\051\071\107\083\061&quot;,&quot;\082\108\105\077\084\099\074\120\113\048\086\075\086\097\075\101\085\104\061\061&quot;;&quot;\056\070\080\112\116\055\104\050\056\072\120\089\068\101\061\061&quot;,&quot;\086\108\086\081\105\048\098\066\074\069\061\061&quot;,&quot;\106\073\086\089\116\068\079\083\090\118\105\081\057\111\050\100&quot;,&quot;\049\109\100\104\052\105\090\078\079\049\061\061&quot;,&quot;\109\097\100\057\099\069\108\052\108\086\051\107\050\053\117\066\114\053\066\102\115\112\049\061&quot;,&quot;\076\114\049\104\116\114\047\102&quot;,&quot;\105\098\121\121\057\122\069\052\082\049\061\061&quot;,&quot;\075\083\071\065\078\100\112\076\100\069\061\061&quot;,&quot;\072\043\103\104\078\051\057\049\049\101\061\061&quot;;&quot;\084\108\107\080\116\048\098\077&quot;,&quot;\105\048\111\081\082\101\061\061&quot;,&quot;\102\115\090\098\072\098\105\077\099\103\049\043\043\117\075\081&quot;;&quot;\084\106\068\077\103\048\053\085\105\048\086\076\113\108\065\102\086\086\106\061&quot;,&quot;\066\066\115\086\071\097\116\090\085\120\075\087\113\117\068\113\104\047\114\102\109\078\057\106&quot;,&quot;\088\075\110\120\086\109\108\115\089\053\122\052\098\077\083\061&quot;,&quot;\086\088\048\057\078\072\084\080\053\100\089\086\068\071\105\052\102\111\111\115\069\106\121\115\099\076\080\117\049\101\061\061&quot;,&quot;\110\067\077\114\110\049\061\061&quot;,&quot;\052\066\121\081\119\098\047\109\047\053\067\067\053\054\054\055\102\086\122\122\115\083\103\113\089\109\103\119\057\097\090\103\074\065\101\099\081\071\050\117\108\071\098\108\088\054\078\104\104\110\079\078\080\099\122\089\121\104\078\101\087\104\115\055\078\053\076\114\112\104\067\067\053\089\099\079\104\078\057\118\102\080\051\085\104\088\101\117\051\087\097\067\112\090\055\077\106\097\108\078\114\100\117\109\072\119\087\116\087\049\107\068\076\118\108\071\053\084\117\050\081\101\065\054\056\065\056\048\109\107\112\109\080\069\072\121\109\066\070\061&quot;;&quot;\071\119\048\071\086\098\122\073\112\104\076\113\108\081\106\076\088\088\084\061&quot;,&quot;\112\087\056\084\108\079\116\067\055\052\115\104\115\083\051\049\099\118\075\111\117\053\114\105\097\109\052\061&quot;,&quot;\086\081\057\083\082\121\053\097\100\120\100\065\112\071\100\108&quot;;&quot;\098\073\099\077\078\072\081\085&quot;,&quot;\109\056\110\109\051\052\089\055\122\054\117\054\082\088\097\118\088\070\086\089\057\101\061\061&quot;;&quot;\115\069\113\054\051\100\049\109\056\102\073\073\077\050\075\061&quot;;&quot;\043\086\082\089\077\102\047\057\075\122\116\088\052\120\077\104&quot;,&quot;\057\097\052\066\076\083\105\106\074\111\105\090\084\107\107\120\086\108\083\061&quot;,&quot;\101\079\072\071\047\100\057\070\079\057\085\102\098\083\054\081\068\056\049\105\108\043\088\115\072\077\115\085\121\075\103\107\043\122\047\099\052\049\061\061&quot;;&quot;\090\098\080\121\079\106\055\097&quot;;&quot;\051\050\081\056\057\072\100\100\117\089\090\108\082\105\100\103\107\077\120\090\115\098\057\120\051\090\068\118\118\082\110\116\106\066\112\070\055\104\061\061&quot;;&quot;\114\073\112\053\117\078\121\050\089\100\081\098\102\115\088\108&quot;,&quot;\113\099\057\050&quot;,&quot;\121\071\054\101\086\069\061\061&quot;,&quot;\115\049\074\106\085\120\050\119&quot;,&quot;\119\080\072\114\085\049\061\061&quot;;&quot;\050\056\115\072\098\116\049\098\070\048\066\100\104\053\115\071\081\047\078\069\100\069\051\088\100\089\079\061&quot;;&quot;\106\073\086\083\106\073\086\083\105\048\111\080\116\101\061\061&quot;,&quot;\054\050\116\073\077\120\071\074\048\117\087\082\114\066\083\072\071\056\102\113\101\090\117\061&quot;,&quot;\111\081\053\105\086\099\068\110\068\098\117\114\051\075\122\121&quot;;&quot;\082\108\075\107\068\053\102\051\075\049\061\061&quot;;&quot;\053\074\090\104\071\069\061\061&quot;;&quot;\100\086\100\055\057\111\109\100\086\073\053\088\105\111\065\109&quot;;&quot;\071\109\100\076\104\049\085\113\105\053\056\073\078\103\077\099\085\119\089\107\109\057\085\112\101\110\071\066\066\055\112\114\114\105\067\110\049\101\061\061&quot;;&quot;\090\054\051\107\055\121\080\085\048\103\079\061&quot;,&quot;\100\090\056\083\116\106\086\085\090\090\057\071\086\048\088\054&quot;,&quot;\084\108\086\077\103\097\116\111&quot;,&quot;\121\105\087\098\080\069\047\088\098\075\052\112\113\067\069\061&quot;,&quot;\116\073\086\083\099\073\068\067\116\048\086\119\099\073\100\109\105\048\121\061&quot;,&quot;\074\119\077\108\078\104\061\061&quot;,&quot;\111\120\043\056&quot;,&quot;\074\099\074\097\113\081\100\088\105\121\100\090\057\108\079\066\052\069\061\061&quot;,&quot;\072\057\090\074\072\078\103\079\109\118\121\061&quot;,&quot;\089\104\090\073\122\098\100\088\085\088\097\057\099\072\099\067\113\067\119\057&quot;,&quot;\116\099\065\066\103\097\070\061&quot;,&quot;\076\071\111\086\052\090\116\110\074\083\056\065\103\071\105\066\113\081\121\061&quot;,&quot;\085\099\049\101\071\107\084\114&quot;,&quot;\070\074\106\117\077\043\118\051&quot;;&quot;\105\073\107\053\105\049\061\061&quot;,&quot;\099\077\117\080\090\085\086\100\082\056\072\052\085\103\069\061&quot;;&quot;\100\079\052\083\082\083\056\113\112\121\065\075\082\079\098\083\100\104\061\061&quot;,&quot;\114\114\110\104\105\049\061\061&quot;,&quot;\051\048\108\099\120\049\061\061&quot;,&quot;\048\053\105\055\119\049\061\061&quot;;&quot;\105\101\061\061&quot;,&quot;\105\073\107\066\103\069\061\061&quot;}for t,d in ipairs({{331594+-331593,-126611+126979};{692763+-692762;408958+-408762},{578724-578527;-394263-(-394631)}})do while d[-757837-(-757838)]&lt;d[-967607-(-967609)]do S[d[-1017969+1017970]],S[d[903493+-903491]],d[-715086+715087],d[-500479-(-500481)]=S[d[671283-671281]],S[d[-593901-(-593902)]],d[960245+-960244]+(782112-782111),d[-813217+813219]-(-804605-(-804606))end end local function t(t)return S[t+(-994008+1001714)]end do local t=string.len local d=S local k={[&quot;\053&quot;]=454461+-454420,Y=351343-351332;[&quot;\051&quot;]=-463544-(-463559),t=-1015791-(-1015816);J=-585791+585803,W=591086+-591028;a=402028+-401973,[&quot;\047&quot;]=-177770-(-177801),p=-641949-(-641979);n=-755305-(-755347);I=182773+-182719;M=-387552-(-387597),O=-982714+982750;P=41013+-40967;b=926238+-926177,r=-634762-(-634825),i=-329368-(-329397);B=-931149-(-931199);f=-669097+669099;T=-176244-(-176272);m=-411707+411740;v=375298+-375259,N=1011677+-1011615;S=-26716+26768,K=607378-607338;D=285399+-285346,R=938865-938839;s=-103600-(-103603),u=-517540-(-517596);L=-684842+684861;A=353364-353355,X=-396471+396528;q=773242+-773224,d=306832+-306815;o=-84452-(-84489);[&quot;\048&quot;]=-515056-(-515062),[&quot;\055&quot;]=-775022-(-775065),C=978595+-978548,V=-644804-(-644825);[&quot;\043&quot;]=246219+-246160,g=425714+-425687;Q=-467261-(-467296);[&quot;\054&quot;]=-842292-(-842302),U=-316961+316975,x=-1041030-(-1041081),F=-594067+594075;y=503980-503976;[&quot;\049&quot;]=486752+-486752,c=-923432+923455,G=963106+-963099,H=-56630+56690;[&quot;\057&quot;]=-901173-(-901186),w=509826+-509782,h=-935297+935313;E=304104-304072,[&quot;\050&quot;]=387992+-387991,z=488208-488174,j=-195537+195557,e=176681-176633,Z=-966895+966917;k=956787-956782;[&quot;\056&quot;]=673580-673531;l=-270316-(-270354);[&quot;\052&quot;]=241107+-241083}local Z=table.insert local N=table.concat local O=type local m=string.char local W=string.sub local B=math.floor for S=-36122+36123,#d,168027+-168026 do local F=d[S]if O(F)==&quot;\115\116\114\105\110\103&quot;then local O=t(F)local h={}local y=-921548+921549 local X=-979572+979572 local n=530459+-530459 while y&lt;=O do local S=W(F,y,y)local t=k[S]if t then X=X+t*(-1000733+1000797)^((82920+-82917)-n)n=n+(-100857-(-100858))if n==856924-856920 then n=-378219+378219 local S=B(X/(-609329+674865))local t=B((X%(971779-906243))/(-260184+260440))local d=X%(-46489-(-46745))Z(h,m(S,t,d))X=-498000+498000 end elseif S==&quot;\061&quot;then Z(h,m(B(X/(1044385+-978849))))if y&gt;=O or W(F,y+(-745477+745478),y+(-842005-(-842006)))~=&quot;\061&quot;then Z(h,m(B((X%(-567074+632610))/(-532463-(-532719)))))end break end y=y+(-436787-(-436788))end d[S]=N(h)end end end return(function(S,k,Z,N,O,m,W,y,F,X,h,c,s,e,w,P,D,n,K,C,j,B,d,V,Q)D,V,C,P,e,n,c,h,Q,K,d,y,X,F,B,j,s,w=function(S,t)local k=X(t)local Z=function(Z,N,O,m)return d(S,{Z;N;O,m},t,k)end return Z end,function(S,t)local k=X(t)local Z=function(Z,N,O)return d(S,{Z;N,O},t,k)end return Z end,function(S)F[S]=F[S]-(642144-642143)if 717060-717060==F[S]then F[S],B[S]=nil,nil end end,function(S,t)local k=X(t)local Z=function(Z,N,O,m,W)return d(S,{Z,N,O,m;W},t,k)end return Z end,function(S,t)local k=X(t)local Z=function()return d(S,{},t,k)end return Z end,function(S)local t,d=-919063+919064,S[201856+-201855]while d do F[d],t=F[d]-(625622-625621),t+(287833-287832)if-849228-(-849228)==F[d]then F[d],B[d]=nil,nil end d=S[t]end end,function(S,t)local k=X(t)local Z=function(Z,N)return d(S,{Z;N},t,k)end return Z end,function()y=y+(-905743+905744)F[y]=549384+-549383 return y end,function(S,t)local k=X(t)local Z=function(Z,N,O,m,W,B)return d(S,{Z;N,O;m,W;B},t,k)end return Z end,function(S,t)local k=X(t)local Z=function(Z,N,O,m,W,B,F,h)return d(S,{Z,N;O,m,W;B;F;h},t,k)end return Z end,function(d,Z,N,O)local u,r,q,k5,J,m5,t5,U,M,O5,E,v,Z5,o,b,y,a,z,g,A,w,L,S5,X,R,G,i,x,F,l,N5,W5,d5,W,p,T,n,f,H,Y,I while d do if d&lt;-184278+8788770 then if d&lt;-1032511+5417953 then if d&lt;1581279-111673 then if d&lt;1827795-886918 then if d&lt;-507934+926612 then if d&lt;1029868+-709940 then if d&lt;199346+19492 then if d&lt;330967-185457 then d=-10001+3973639 else y=Z[478603+-478601]F=Z[-734807+734808]M=335121+940881044645 w=t(543517+-551131)n=S[w]a=t(79760-87230)q=B[N[-731720-(-731721)]]I=B[N[482588+-482586]]l=I(a,M)w=q[l]l=t(273316+-280792)M=t(-582669-(-575278))X=n[w]w=B[N[67309+-67308]]a=-767157+34408151380811 q=B[N[-608858-(-608860)]]I=q(l,a)n=w[I]I=t(-1039578-(-1031913))W=X[n]n=B[N[-342027+342028]]l=-104318+20317053402226 w=B[N[42632-42630]]q=w(I,l)X=n[q]I=t(741898-749598)d=W[X]W=t(238033-245421)W=d[W]R=19613552399259-176110 W=W(d)X=W n=B[N[317591+-317590]]w=B[N[789578-789576]]l=33678117376795-(-715303)q=w(I,l)W=n[q]I=t(996844+-1004480)d=X[W]n=B[N[-719837+719838]]w=B[N[-948514-(-948516)]]l=27769575698377-(-1000122)q=w(I,l)W=n[q]n=y q=t(-1016299-(-1008780))d[W]=n W=B[N[99141+-99140]]I=214526+17061153888522 n=B[N[396728+-396726]]w=n(q,I)d=W[w]I=B[N[-1039571-(-1039572)]]l=B[N[-976931+976933]]a=l(M,R)q=I[a]w=F[q]I=B[N[-346974-(-346975)]]R=-708606+22216124430439 M=t(383358+-390941)l=B[N[-22700-(-22702)]]a=l(M,R)q=I[a]M=-821155+25417981523423 n=w[q]a=t(-844417+836837)q=B[N[-510667+510668]]I=B[N[209352-209350]]l=I(a,M)w=q[l]W=n[w]X[d]=W d=B[N[-967698-(-967701)]]q=B[N[-602495+602496]]a=t(355189+-362893)M=14335019043728-29053 I=B[N[-497762-(-497764)]]l=I(a,M)w=q[l]n=X[w]W=d(X,n)d=B[N[-463202-(-463206)]]X=nil y=nil W=d(F)F=nil W={}d=S[t(-789393-(-781799))]end else W={}d=S[t(69644+-77159)]end else if d&lt;466386-73085 then if d&lt;5629-(-383903)then d=nil W={d}d=S[t(-1017832-(-1010330))]else g=d N5=t(-496833+489298)Y=B[G]Z5=B[N[604453-604451]]O5=985771925947-172016 d5=B[N[-798105-(-798108)]]k5=d5(N5,O5)v=Z5[k5]S5=Y[v]o=not S5 u=o d=o and 731523+7378720 or 14662555-731161 end else X=-972344-(-972344)F=t(795501-803022)d=S[F]y=B[N[-204594+204602]]F=d(y,X)d=-350871+9510960 end end else if d&lt;573558-(-59622)then if d&lt;797527-248451 then if d&lt;-1043302+1481155 then F=t(-652660-(-645164))W=t(-166597-(-159076))d=S[W]W=d(F)W={}d=S[t(663457+-670806)]else W=t(860206+-867716)q=t(-156164-(-148810))I=364756+34943036714683 d=S[W]X=B[N[595822+-595821]]n=B[N[827817+-827815]]w=n(q,I)y=X[w]W=d(y)d=S[t(748694-756353)]W={}end else d=true W={}B[N[-550146-(-550147)]]=d d=S[t(730316+-737893)]end else if d&lt;558992+311950 then if d&lt;366124+394225 then d=B[N[-404950-(-404951)]]F=B[N[-333362+333364]]y=B[N[555545-555542]]X=B[N[-46097+46101]]n=B[N[404411-404406]]W=d(F,y,X,n)W={}d=S[t(291183+-298852)]else U=32485473229595-(-1007612)J=t(-801533-(-793908))d=I and 201507+15541861 or 549247+12438893 r=t(-981005-(-973495))x=S[r]T=B[N[745060+-745058]]E=B[N[-37961+37964]]G=E(J,U)L=T[G]T=B[z]r=x(L,T)end else l=t(-698352+690842)p=t(1021692-1029355)W=S[l]M=B[N[-240835-(-240836)]]i=1930075750767-(-721427)d=16005232-(-488564)R=B[N[945321+-945319]]H=R(p,i)a=M[H]l=W(a,I)end end end else if d&lt;952469+317942 then if d&lt;-838720+2008860 then if d&lt;1512213-369880 then if d&lt;-740522+1816881 then d=S[t(786843-794414)]W={}else G=B[N[35295-35293]]J=B[N[600404-600401]]b=t(-360116+352732)A=17410361096188-(-42927)U=J(b,A)E=G[U]x=w[E]G=B[r]E=x(G)x=h()B[x]=E G=B[x]E=not G d=E and-921336+12821083 or 10876992-(-510281)end else d=S[t(-587039-(-579349))]W={q}end else if d&lt;1237116-32352 then if d&lt;949434+247973 then X=-166826+7059625 y=t(-1020943-(-1013501))W=582325+11817319 F=y^X d=W-F F=d W=t(530691-538323)d=W/F W={d}d=S[t(839276-846829)]else W=B[N[942253-942252]]I=33130029991061-149586 q=t(678098-685728)X=B[N[-229171+229173]]F=Z[615774-615773]n=B[N[-385930+385933]]w=n(q,I)y=X[w]d=W[y]W={d}d=S[t(869583-877276)]end else M=B[N[-907901+907903]]R=B[N[104634+-104631]]p=t(-1025418-(-1017995))i=33283969936450-(-299081)H=R(p,i)a=M[H]l=q==a d=l and-550014+14147064 or 5155412-(-92553)end end else if d&lt;1998269-595236 then if d&lt;1049979-(-288708)then if d&lt;411830-(-895363)then d=-281613+16767878 z=#p L=881206-881206 i=z==L else d=true d=d and-574288+9007675 or 14271062-(-53999)end else B[y]=W d=2242674-(-1018261)end else if d&lt;2414312-955148 then d=S[t(234633-242239)]W={}else I=t(-229800+222369)l=t(-24908+17233)H=t(-107945+100270)q=W W=S[I]I=t(749128-756692)d=W[I]I=h()B[I]=d W=S[l]l=t(386326-393781)d=W[l]R=S[H]l=d a=R M=d d=R and 13886136-343444 or 12811849-(-580193)end end end end else if d&lt;-482203+2975140 then if d&lt;2598353-410990 then if d&lt;1840220-223431 then if d&lt;-184624+1660440 then if d&lt;-696170+2168108 then u=d S5=873574-873573 o=A[S5]S5=false g=o==S5 d=g and 1046247+5975334 or 3086858-301329 t5=g else t5=B[y]d=t5 and 1630340-160662 or-350748+1691183 W=t5 end else w=nil U=nil d=S[t(-776338+768888)]J=nil I=nil M=C(M)R=C(R)t5=C(t5)y=nil E=nil x=C(x)g=nil W={}n=nil b=nil r=C(r)G=C(G)f=nil a=C(a)X=nil F=nil l=nil L=nil q=nil z=C(z)A=C(A)i=C(i)o=nil T=nil end else if d&lt;1633149-(-392893)then if d&lt;1843137-57457 then W={}l=nil n=C(n)I=nil X=C(X)w=C(w)F=C(F)y=nil d=S[t(39381+-46911)]a=nil q=nil else i=148492+13122110280658 p=t(-760763-(-753184))M=B[N[72783+-72782]]R=B[N[-124831+124833]]H=R(p,i)p=d R=d a=M[H]H=y d=y and-434380+6584363 or-380464+13273562 end else R=566522+24407480420203 W=B[F]I=B[N[596148-596147]]l=B[N[611982+-611980]]M=t(501187+-508719)p=t(-185625+178005)a=l(M,R)q=I[a]l=B[F]M=B[N[-798372-(-798373)]]R=B[N[-533175-(-533177)]]i=6393433575339-459786 H=R(p,i)a=M[H]I=l[a]i=t(-289329+281695)W[q]=I a=B[F]z=9189+18118023363855 R=B[N[-830382+830383]]H=B[N[611079+-611077]]p=H(i,z)M=R[p]p=t(735466+-743133)l=a[M]M=B[N[-717633-(-717634)]]R=B[N[-307268-(-307270)]]i=15664440343281-155251 H=R(p,i)p=166649+12419331181470 a=M[H]I=l[a]H=t(905373+-912909)a=B[N[-347163+347164]]M=B[N[-331753+331755]]R=M(H,p)l=a[R]q=I[l]l=B[N[-809152-(-809153)]]H=4640048844933-(-915435)a=B[N[930679-930677]]R=t(-981625+974074)M=a(R,H)I=l[M]M=t(-140684-(-133142))R=17802726573953-(-153825)W=q[I]I=B[N[281239+-281238]]H=32603350781596-(-109746)l=B[N[-402437+402439]]a=l(M,R)q=I[a]R=t(-751339+743916)l=B[N[-747146-(-747147)]]a=B[N[860178+-860176]]M=a(R,H)I=l[M]W[q]=I q=t(658569-666062)l=D(292830+2235850,{N[-761040+761047],N[-657791+657792];N[-85816-(-85818)],N[-473731-(-473737)];F})W=S[q]a={W(l)}I=a[540021+-540019]q=a[89051+-89050]W=not q d=W and 45028-(-828699)or 210181+16283615 end end else if d&lt;478271+1882012 then if d&lt;222115+2095909 then if d&lt;218614+2022359 then T=not L f=f+r W=f&lt;=x W=T and W T=f&gt;=x T=L and T W=T or W T=5292222-84049 d=W and T W=-701261+10614994 d=d or W else q=nil z=h()i={}G={}q=t(163437-171047)B[z]=i I=nil A=t(897011+-904423)U=t(621966+-629348)T=h()l=nil R=nil L=j(910540+14318972,{z,a,M,w})i=h()B[i]=L w=C(w)X=nil g=nil E=t(752805+-760305)L={}B[T]=L w=h()L=S[E]b=B[T]J={[U]=b;[A]=g}E=L(G,J)B[n]=E G=196279+26636805632444 p=nil L=s(13113942-(-833454),{T,z,H;a;M;i})z=C(z)X={}H=C(H)B[y]=L i=C(i)L=5590505624819-461512 T=C(T)i=t(156526-163997)M=C(M)B[w]=X a=C(a)T=1686155777129-(-634536)X=S[q]M=t(-304845-(-297231))a=S[M]R=B[n]z=-215685+10775457685022 H=B[y]p=H(i,z)M=R[p]z=t(261923-269326)p=t(-267992-(-260520))l=a[M]M=B[n]i=22139747684493-403528 R=B[y]H=R(p,i)a=M[H]I=l[a]q=X(I)X=h()R=t(-793139+785525)I=t(527734-535344)B[X]=q q=S[I]M=S[R]H=B[n]p=B[y]i=p(z,L)A=Q(15801364-239128,{n;y})R=H[i]i=t(-1010367+1002963)a=M[R]z=33026077561543-(-125259)R=B[n]H=B[y]p=H(i,z)H=t(661770+-669384)M=R[p]l=a[M]I=q(l)q=h()l=t(-925753-(-918143))B[q]=I I=S[l]R=S[H]p=B[n]i=B[y]L=t(300898-308296)z=i(L,T)H=p[z]z=t(534191-541852)M=R[H]L=613238635739-900030 H=B[n]p=B[y]i=p(z,L)R=H[i]a=M[R]l=I(a)T=t(-84984+77329)I=h()a=t(-99037-(-91427))B[I]=l p=t(-632244+624630)l=S[a]H=S[p]J=1085121480237-525364 i=B[n]z=B[y]L=z(T,G)p=i[L]R=H[p]p=B[n]L=t(-880401-(-872798))i=B[y]T=355040+23566941274110 z=i(L,T)H=p[z]M=R[H]a=l(M)l=h()M=t(-605197-(-597587))i=t(744725-752339)d=S[t(707769-715208)]G=t(507982+-515617)B[l]=a a=S[M]p=S[i]z=B[n]L=B[y]T=L(G,J)G=11612726728063-933984 i=z[T]T=t(1004683+-1012312)H=p[i]i=B[n]z=B[y]L=z(T,G)p=i[L]G=859268+1971925214994 R=H[p]M=a(R)a=h()R=t(-407363-(-399955))B[a]=M M=S[R]p=B[n]T=869336+8786031791139 i=B[y]R=t(-223369+215995)L=t(255363-262790)z=i(L,T)H=p[z]R=M[R]R=R(M,H)S5=t(-129245-(-121851))J=11902099235173-(-848961)M=h()T=t(989173+-996856)H=t(999675+-1007083)B[M]=R R=S[H]i=B[n]z=B[y]H=t(982742+-990116)H=R[H]L=z(T,G)p=i[L]H=H(R,p)G=t(-1026080+1018695)R=h()p=t(-451007+443599)B[R]=H H=S[p]z=B[n]L=B[y]T=L(G,J)i=z[T]p=t(-1037670-(-1030296))p=H[p]L=t(-609982+602455)p=p(H,i)i=h()H=h()B[H]=p p=-790929-(-790934)B[i]=p p=D(4070+12909930,{X,n;y})z=B[w]z[L]=p L=c(434115+9151328,{n,y})z=c(735695+8703297,{n;y;M})p=h()B[p]=z z=h()U=c(14815857-407328,{n;y,z})T=Q(11768407-(-907827),{n;y,p,z})B[z]=L G=s(-609924+822082,{n,y,p;z})L=h()J=P(674975+8569468,{n;y,p;z})B[L]=T T=h()B[T]=G G=h()B[G]=J J=h()B[J]=U U=h()b=P(-472000+14423565,{n;y,z})B[U]=b b=h()B[b]=A g=K(8793914-747266,{w,n;y;I;G,J;R;b,U,H})A=h()B[A]=g o=B[w]g=P(-103022+6243676,{n,y;l;i;q;T;a;L,A})o[S5]=g g=B[w]W={g}end else M=t(595632-603142)d=-562243+16314870 W=S[M]M=W(a)end else if d&lt;-541584+2985942 then if d&lt;-869566+3296130 then B[y]=f d=B[y]d=d and 12263389-674307 or 733002+11566031 else H=B[N[519788+-519787]]I=w p=B[N[462987+-462985]]z=t(519852+-527215)M=t(-188499+180956)f=8356827499962-900743 M=l[M]i=p(z,f)R=H[i]M=M(l,R)d=M and 835074+2786520 or 9148554-770387 a=M end else r=h()x=nil B[r]=x E=j(-866553+13299928,{N[573907-573900],z,N[311570+-311568];N[-495477+495480];r})L=t(-601289-(-593796))x=S[L]G={x(E)}T=G[109966+-109964]L=G[425969+-425968]x=not L d=x and-460743+14760014 or-570893+1656123 end end end else if d&lt;3127783-(-358640)then if d&lt;-1003518+3970617 then if d&lt;3285994-485843 then if d&lt;665063+2007945 then W=B[N[-153493-(-153494)]]q=917281+22824480189027 w=t(488213-495773)y=B[N[504806+-504804]]X=B[N[-802193+802196]]n=X(w,q)F=y[n]q=2016295459869-(-223117)d=W[F]W=d()w=t(-741258+733764)y=B[N[726403-726401]]X=B[N[528269+-528266]]n=X(w,q)F=W W=y[n]d=F~=W d=d and 7945716-(-419478)or 7382226-(-30746)else W=t5 d=u d=758421+582014 end else d=406436+15813567 l=nil I=nil end else if d&lt;-345369+3542328 then if d&lt;401461+2741420 then M=26441331384533-78013 X=B[F]l=t(412198+-419613)a=306376+26773107622891 w=B[N[-1009279+1009280]]q=B[N[23339+-23337]]I=q(l,a)H=t(1031807-1039248)n=w[I]a=t(450655-458317)y=X[n]q=B[N[388036+-388035]]I=B[N[336973-336971]]l=I(a,M)w=q[l]l=t(-602653+595071)p=6025898578192-345626 I=S[l]a=B[N[332872+-332871]]M=B[N[114131+-114129]]R=M(H,p)l=a[R]q=I[l]p=21706398161684-(-314471)H=t(-71592+63936)X=t(-991629+984197)X=y[X]a=B[N[-683774+683775]]M=B[N[-1002301-(-1002303)]]R=M(H,p)H=-911525+2138287451272 l=a[R]I=q(l)n=w..I X=X(y,n)q=B[N[631254-631251]]R=t(-342242+334818)y=26436-26436 W=X or y X=d y=W l=B[N[-335501+335502]]a=B[N[299873-299871]]M=a(R,H)I=l[M]w=q[I]q=w()n=not q d=n and-151225+7164544 or 5217064-47043 W=n else l=t(-617973+610427)a=259763+33267132777936 d=B[N[-972994+972995]]R=992851+25827259205799 X=B[N[-784913+784915]]q=t(-814941-(-807521))n=B[N[659450+-659447]]I=15015152584812-(-905955)w=n(q,I)y=X[w]X=B[N[468396+-468392]]w=B[N[-744479+744481]]p=17623089778126-(-86592)M=6161190446381-(-108040)q=B[N[-900065+900068]]I=q(l,a)n=w[I]q=B[N[462945-462943]]I=B[N[739640+-739637]]a=t(-511995+504574)l=I(a,M)w=q[l]I=B[N[762014+-762012]]l=B[N[546846+-546843]]M=t(-61519-(-54149))a=l(M,R)q=I[a]I=B[N[301745-301740]]a=B[N[-37692-(-37694)]]M=B[N[773043+-773040]]H=t(316340-323820)R=M(H,p)l=a[R]a=B[N[-796426+796432]]F={[y]=X;[n]=w;[q]=I;[l]=a}y=t(-568717+561307)y=d[y]W={y(d,F)}d=S[t(-743289-(-735937))]W={k(W)}end else U=C(U)d=225405+1970622 J=C(J)A=nil E=C(E)T=C(T)G=C(G)b=C(b)end end else if d&lt;3175454-(-940200)then if d&lt;4051047-(-38784)then if d&lt;409429+3213904 then f=29905839211184-314443 H=B[N[333253+-333252]]z=t(375307-382883)p=B[N[716174+-716172]]i=p(z,f)R=H[i]M=l[R]a=M d=7356473-(-1021694)else d=true d=d and-338204+12240133 or 975485+14422984 end else f=t(-117531-(-110108))x=31083965944891-(-205903)p=B[N[-1005713-(-1005714)]]i=B[N[-495443-(-495445)]]z=i(f,x)H=p[z]d=-51277+9860828 M=H end else if d&lt;3243769-(-1029349)then S5=t(-465738+458228)d=-384681+1905758 u=S[S5]S5=u(o)else d=S[t(25586+-33256)]W={}end end end end end else if d&lt;7340855-525045 then if d&lt;-322519+5654598 then if d&lt;4666615-(-450082)then if d&lt;-150947+4937212 then if d&lt;-475182+5186523 then if d&lt;3772708-(-700253)then X=t(1010158+-1017833)y=S[X]X=t(637543-645072)F=y[X]X=B[N[-176416+176417]]y={F(X)}d=S[t(1014781-1022137)]W={k(y)}else H=t(572913+-580398)w=X a=B[N[516580+-516578]]p=21441137678824-979688 M=B[N[706671-706668]]R=M(H,p)l=a[R]I=q[l]d=I==F d=d and-878678+2039119 or 7236740-(-876649)end else T=t(443989-451685)r=t(-914207-(-906748))d=S[r]L=S[T]r=d(L)d=t(251406+-258823)S[d]=r d=-276354+374908 end else if d&lt;4505146-(-461184)then if d&lt;5542423-732424 then d=10024786-(-717740)X=959967+-959902 y=B[N[-674846+674849]]F=y*X y=200352-200095 W=F%y B[N[456182-456179]]=W else d=B[N[-139315+139316]]F=B[N[385231+-385229]]W=d(F)B[N[749159+-749156]]=W d=S[t(-896129+888753)]W={}end else g=-372892+372893 u=A[g]d=913525+13165773 t5=u end end else if d&lt;494077+4744715 then if d&lt;176290+5029200 then if d&lt;-701199+5874996 then d=X d=W and 5598625-(-820221)or 9104908-509436 else d=f p=t(-398022-(-390564))p=M[p]L=14821335384200-468371 E=t(159743+-167390)p=p(M,i,z)B[R]=p r=t(-663994+656488)z=B[N[369313+-369311]]f=B[N[492830+-492827]]x=f(r,L)i=z[x]M=w[i]T=-680010+254530527424 i=M(q)G=5392554660939-(-734596)M=h()B[M]=i f=B[N[-914828-(-914830)]]x=B[N[-150746-(-150749)]]L=t(886784-894262)r=x(L,T)z=f[r]i=w[z]r=B[N[-744459-(-744461)]]L=B[N[820911-820908]]T=L(E,G)x=r[T]f=F[x]z=i(f,X)f=t(-111660-(-104167))i=h()r=e(-21655+3213056,{N[374637+-374630];N[301718-301716];N[-652258-(-652261)],R,M,i})B[i]=z z=S[f]L={z(r)}z=h()x=L[170160-170158]B[z]=x f=L[975576-975575]x=not f d=x and 1549108-688564 or 703285+9117256 end else E=t(-185863+178432)T=h()g=t(886591-894050)B[T]=f W=S[E]E=t(-842322-(-834758))G=522421-522321 d=W[E]E=669504+-669503 W=d(E,G)E=h()J=965403+-965148 b=-105756-(-105757)G=-368593+368593 B[E]=W d=B[I]W=d(G,J)J=429946-429945 G=h()B[G]=W d=B[I]U=B[E]A=-418167+418169 W=d(J,U)J=h()B[J]=W W=B[I]U=W(b,A)W=-244713+244714 A=t(-695926+688225)d=U==W U=h()W=t(538903+-546336)v=886567-876567 B[U]=d Y=592637-592637 u=S[g]o=B[I]S5={o(Y,v)}g=u(k(S5))d=t(-922433-(-914975))u=t(-339585+331884)t5=g..u b=A..t5 A=t(-114085+106592)d=i[d]d=d(i,W,b)b=h()B[b]=d t5=c(-608006+14110391,{I,T,M;X,y,z,U,b,E,J,G;a})W=S[A]A={W(t5)}d={k(A)}A=d d=B[U]d=d and-308011+1783054 or 1041585+8061551 end else if d&lt;4728678-(-594574)then if d&lt;-588404+5901409 then a=B[N[464371+-464369]]p=2495981217942-(-154612)M=B[N[788829+-788826]]i=106340+25526961360650 H=t(390100+-397462)R=M(H,p)p=22772019641973-(-748279)l=a[R]H=t(-737721-(-730163))a=B[N[726677-726671]]f=-603737+33682294371229 M=a(F)F[l]=M a=B[N[996504+-996502]]M=B[N[-393203-(-393206)]]R=M(H,p)l=a[R]r=t(623144+-630628)M=t(-374090+366527)p=18458119156647-201236 H=t(-760757+753229)a=S[M]M=a()F[l]=M T=17670379236003-(-505217)a=B[N[-807226+807228]]M=B[N[511216-511213]]R=M(H,p)l=a[R]x=882680+25271493359103 a=true p=t(-997135-(-989672))F[l]=a M=B[N[-332706-(-332708)]]z=16151302635542-795317 R=B[N[-266880+266883]]H=R(p,i)a=M[H]i=t(-496918+489406)l=F[a]a=h()B[a]=l R=B[N[583895+-583893]]H=B[N[-743927+743930]]p=H(i,z)M=R[p]z=t(-935586-(-928227))H=B[N[960927-960925]]p=B[N[-746234-(-746237)]]i=p(z,f)R=H[i]p=B[N[-533770-(-533772)]]f=t(545609+-553204)i=B[N[598368+-598365]]z=i(f,x)H=p[z]L=428458+12661366803805 l={[M]=R;[H]=y}f=28655441685698-(-903005)H=B[N[-1008417-(-1008419)]]z=t(-961757-(-954097))p=B[N[-527021-(-527024)]]i=p(z,f)R=H[i]M=F[R]z=B[N[-439391+439393]]f=B[N[-170437+170440]]x=f(r,L)i=z[x]z=t(358225-365672)p=F[i]H=#p x=t(163994+-171592)p=627332+-627331 f=617894+23164628761724 R=H+p H=l M[R]=H H=B[N[893194+-893192]]p=B[N[136713-136710]]i=p(z,f)r=6593181780070-851048 L=t(263648+-271350)R=H[i]M=w[R]R=h()B[R]=M M=B[R]i=B[N[-738526+738528]]z=B[N[557477-557474]]f=z(x,r)H=t(599292+-606750)p=i[f]f=B[N[212890+-212888]]x=B[N[692826-692823]]r=x(L,T)z=f[r]L=760788+19064222664409 H=M[H]i=F[z]H=H(M,p,i)B[R]=H M=B[R]z=B[N[-221658-(-221660)]]f=B[N[-592073-(-592076)]]r=t(-314620-(-307054))x=f(r,L)i=z[x]f=d d=q and 1044872+4133284 or-986024+14732081 z=q else d=S5 u=o d=730682+7379561 end else W=t(-161895+154258)d=B[N[-359908+359909]]F=B[N[-190370+190372]]W=d[W]y=c(-576028+1774021,{N[646311-646308],N[255060+-255056],N[435109-435104]})W=W(d,F,y)W={}d=S[t(-908409+900764)]end end end else if d&lt;5285720-(-896093)then if d&lt;5832143-(-193369)then if d&lt;47932+5670044 then if d&lt;4553306-(-1000647)then H=t(-484459+476914)p=28583629905244-92510 I=B[F]a=B[N[1041805+-1041804]]M=B[N[157724+-157722]]R=M(H,p)l=a[R]q=I[l]l=B[F]i=7861705473364-208648 M=B[N[1011820-1011819]]p=t(880153-887753)R=B[N[-211861+211863]]H=R(p,i)a=M[H]I=l[a]W=q~=I d=W and 12808475-(-152163)or 614859+1567204 else r=t(-1007184-(-999674))b=520362+11320038351853 x=S[r]E=B[N[561386+-561384]]U=t(366889+-374467)G=B[N[-413276-(-413279)]]J=G(U,b)T=E[J]G=B[z]d=I and 13065380-(-838833)or 390991+7175062 U=B[N[-427494+427496]]b=B[N[1001150+-1001147]]u=8662963666152-(-70362)t5=t(-88354+80781)A=b(t5,u)J=U[A]E=G[J]L=T..E E=B[z]A=t(828192-835833)J=B[N[-687063+687065]]U=B[N[802612-802609]]t5=404777+16150509334583 b=U(A,t5)G=J[b]T=E[G]r=x(L,T)end else M=B[N[-631077+631078]]R=B[N[-605638-(-605640)]]i=236211+768634922674 d=5968443-(-217494)p=t(326178-333529)H=R(p,i)a=M[H]M=F l[a]=M end else if d&lt;1002813+5138828 then if d&lt;976810+5143799 then p=t(-1047616+1040214)d=15798606-(-503959)M=B[N[-860226-(-860228)]]R=B[N[52502-52499]]i=287706+12047764255248 H=R(p,i)a=M[H]l=w[a]W=l else F=h()I=573325+16545775148683 q=t(643302-650742)B[F]=Z[942816+-942815]W=B[F]X=B[N[276890+-276889]]n=B[N[-810465-(-810467)]]w=n(q,I)y=X[w]d=W[y]d=d and 319617-(-121738)or 3894236-871954 end else T=636118+5009011872838 i=t(231634-239262)L=t(-288913-(-281538))f=B[N[391474+-391473]]x=B[N[410140-410138]]r=x(L,T)i=y[i]z=f[r]i=i(y,z)H=i d=12047482-(-845616)end end else if d&lt;-566681+6996046 then if d&lt;6927478-595230 then if d&lt;544854+5702173 then W={l}d=S[t(270846-278439)]else L=16374677610973-(-916460)r=t(-854842-(-847419))z=B[N[814940+-814939]]f=B[N[576140-576138]]x=f(r,L)i=z[x]H=i d=897423+6541453 end else a=t(-987413-(-979826))n=B[F]q=B[N[348427-348426]]I=B[N[100238+-100236]]M=20184020167014-623792 l=I(a,M)w=q[l]R=22063809862089-(-429657)M=t(-692905+685470)X=n[w]w=B[N[125643+-125642]]l=t(259270+-266721)a=18184430896501-(-449438)q=B[N[-747423+747425]]I=q(l,a)n=w[I]W=X[n]n=B[N[243023-243022]]I=t(-847007+839594)l=19397941863762-819722 w=B[N[506094-506092]]q=w(I,l)X=n[q]n=true W[X]=n w=B[F]I=B[N[353021-353020]]l=B[N[343486+-343484]]a=l(M,R)q=I[a]M=14289968436504-965402 n=w[q]q=B[N[-50238+50239]]a=t(950865-958266)I=B[N[895785+-895783]]l=I(a,M)w=q[l]a=511976+14012740651413 X=n[w]l=t(-660283-(-652657))w=B[N[-594335-(-594336)]]q=B[N[894022-894020]]I=q(l,a)n=w[I]I=t(-564403+557037)W=X[n]l=385794+2308158202160 n=B[N[-40687+40688]]w=B[N[-410679-(-410681)]]q=w(I,l)a=235164+27646096464813 X=n[q]d=S[t(-1046553+1039195)]w=B[N[409606+-409605]]q=B[N[-920421+920423]]l=t(-89797+82451)I=q(l,a)n=w[I]W[X]=n W={}end else if d&lt;6547153-(-244188)then R=nil i=nil a=C(a)H=nil M=C(M)w=C(w)y=C(y)q=nil q=t(-625050-(-617619))i=-301652-(-301653)I=C(I)a=t(-534057+526608)n=C(n)I=t(890433+-897864)z=C(z)n=h()l=nil y=nil p=nil B[n]=y X=C(X)y=h()X=nil l=t(781214-788889)B[y]=X z=-545894-(-546150)p={}w=S[q]q=t(778655-786352)X=w[q]w=h()B[w]=X L=z q=S[I]H=h()I=t(-61786+54222)X=q[I]I=S[l]l=t(-284357-(-276828))R={}z=-999888+999889 q=I[l]l=S[a]a=t(511950+-519603)I=l[a]a=h()l=933642-933642 B[a]=l M=h()l=1018528+-1018526 B[M]=l l={}B[H]=R R=901386-901386 d=15452033-161171 T=z z=46153-46153 E=T&lt;z z=i-T else R=t(-385115-(-377692))l=B[N[666730+-666729]]H=271070+33077506971980 a=B[N[287908-287906]]d=945439-(-995576)M=a(R,H)I=l[M]n=I end end end end else if d&lt;7392386-(-316276)then if d&lt;7026482-(-374153)then if d&lt;7719606-705674 then if d&lt;7983952-1004217 then if d&lt;7815675-947263 then d=false q=W M=B[N[278517+-278515]]R=B[N[513484-513481]]p=t(522606+-530029)I=d i=-135389+15919338745298 H=R(p,i)a=M[H]l=q==a d=l and 6719715-683598 or-454176+16756741 W=l else g=t(780691+-788231)A=B[N[956552+-956550]]t5=B[N[-801115+801118]]O5=5267698884092-(-879512)o=9840619064029-(-788233)u=t5(g,o)b=A[u]Y=6698246052812-(-913507)Z5=-127027+9425288462679 t5=B[N[-894777-(-894779)]]N5=t(-692944-(-685418))u=B[N[440678+-440675]]o=t(591720-599221)v=t(402118+-409525)d5=372900+18088251699267 S5=-952266+5463227666874 g=u(o,S5)A=t5[g]u=B[N[-646985-(-646987)]]S5=t(952923+-960490)g=B[N[-770151+770154]]o=g(S5,Y)t5=u[o]u=B[x]E={[b]=A,[t5]=u}S5=1032034+23061059578512 o=t(717972+-725599)t5=B[N[658305-658303]]u=B[N[-845061-(-845064)]]g=u(o,S5)A=t5[g]b=F[A]o=B[N[-504566+504568]]S5=B[N[-716148+716151]]Y=S5(v,Z5)g=o[Y]v=t(572158-579836)u=F[g]t5=#u u=-348894-(-348895)A=t5+u t5=E b[A]=t5 b=B[N[-752996-(-753001)]]Z5=970427+24301561159033 u=B[G]o=B[N[-818287+818289]]S5=B[N[699483-699480]]Y=S5(v,Z5)g=o[Y]Y=t(515830-523320)t5=u[g]A=b(F,t5)Z5=t(-749150-(-741613))g=B[N[629180+-629178]]v=34381099363943-(-118818)A=d o=B[N[-95861-(-95864)]]S5=o(Y,v)u=g[S5]t5=F[u]S5=B[N[1030399-1030397]]Y=B[N[857963-857960]]v=Y(Z5,d5)o=S5[v]v=t(144330+-151912)Y=S[v]Z5=B[N[726919+-726917]]d5=B[N[-169851+169854]]k5=d5(N5,O5)v=Z5[k5]N5=t(116912+-124443)S5=Y[v]Z5=B[N[-372199-(-372201)]]d5=B[N[301724-301721]]O5=947578+13012746691121 k5=d5(N5,O5)v=Z5[k5]Y=S5(v)g=o..Y u=t(-466140+458708)Y=71276+14338864038825 Z5=195365+4691956157795 u=t5[u]u=u(t5,g)t5=206783+-206783 b=u or t5 S5=t(-212902-(-205213))v=t(510467+-518036)u=B[N[9280+-9278]]g=B[N[-611613+611616]]o=g(S5,Y)t5=u[o]A=F[t5]o=B[N[-368824+368826]]k5=t(-602924+595307)t5=t(933790+-941328)N5=-392197+17171357670209 S5=B[N[-385721+385724]]Y=S5(v,Z5)g=o[Y]Y=t(-646153+638571)S5=S[Y]v=B[N[-67567-(-67569)]]Z5=B[N[-139520+139523]]d5=Z5(k5,N5)Y=v[d5]N5=291701+26740777712943 k5=t(-446725-(-439202))o=S5[Y]v=B[N[-999881-(-999883)]]Z5=B[N[54876-54873]]d5=Z5(k5,N5)Y=v[d5]t5=A[t5]S5=o(Y)o=-301809-(-301810)d5=t(-935177-(-927749))u=g..S5 g=b+o t5=t5(A,u,g)k5=878536+2614133742841 t5=d o=B[G]Y=B[N[-715383+715385]]v=B[N[-237321+237324]]Z5=v(d5,k5)S5=Y[Z5]g=o[S5]S5=B[N[626568+-626566]]Z5=t(321775+-329198)d5=11417089902197-864689 Y=B[N[-903705-(-903708)]]v=Y(Z5,d5)o=S5[v]u=g==o d=u and 588984+15945688 or 17440621-863209 A=u end else d=4661033-(-508988)w=B[N[796598+-796594]]n=y&gt;=w W=n end else if d&lt;6862322-(-463367)then if d&lt;-186347+7262800 then S5=-129675+129677 d=2077210-(-708319)o=A[S5]S5=B[b]g=o==S5 t5=g else l=M r=t(525223-532672)x=S[r]r=t(-632437+624949)f=x[r]x=f(F,l)l=nil f=B[N[-964627-(-964633)]]r=f()z=x+r i=z+q z=896408-896152 p=i%z z=X[y]q=p r=806015-806014 x=q+r f=n[x]i=z..f X[y]=i d=-392222+13244312 end else d=1032374+5835844 I=B[N[-683794-(-683796)]]R=7008937014013-943678 M=t(649296-656719)l=B[N[-904114+904117]]a=l(M,R)q=I[a]W=q end end else if d&lt;-906022+8450678 then if d&lt;6516020-(-903269)then if d&lt;8308952-901583 then H=i d=z d=i and-256723+7695599 or 5690897-(-635977)else F=nil d=S[t(-555077+547379)]W={}end else r=-998480+16872949930753 i=B[N[-14944-(-14945)]]x=t(-352951-(-345328))d=p z=B[N[825159+-825157]]f=z(x,r)p=i[f]l={[a]=M,[R]=H,[p]=n}z=t(638858+-646312)f=193818260919-(-297635)H=B[N[-1043432+1043433]]p=B[N[-560544-(-560546)]]i=p(z,f)R=H[i]z=t(-878177+870754)f=33012604230909-1040625 M=l[R]H=B[N[-888439+888440]]p=B[N[929959+-929957]]i=p(z,f)R=H[i]a=M==R d=a and 281282+5643030 or-737298+6923235 end else if d&lt;6969695-(-683527)then if d&lt;7965361-362358 then d=-918447+1160619 U=t(-827148+819753)b=31434984624034-480884 x=B[N[-829454-(-829459)]]E=B[N[-142519+142521]]G=B[N[-940251+940254]]J=G(U,b)t5=t(843510-851132)T=E[J]U=B[N[1029525-1029523]]u=-738231+34608629433002 b=B[N[361512-361509]]A=b(t5,u)u=t(-114918-(-107239))J=U[A]S5=t(-69055-(-61542))G=w[J]b=B[N[155404+-155402]]g=-599521+4158610222449 A=B[N[551879+-551876]]Y=12401913247080-(-631079)t5=A(u,g)U=b[t5]u=B[N[984274+-984272]]g=B[N[252925+-252922]]o=g(S5,Y)Y=199511+33106550157537 t5=u[o]S5=t(320799-328199)A=w[t5]u=B[N[637046-637044]]g=B[N[-192644+192647]]o=g(S5,Y)t5=u[o]b=A..t5 J=U..b E=G..J L=T..E r=x(F,L)else d=13482555-(-908292)end else M=B[F]f=-786993+29576173975549 H=B[N[218759+-218758]]p=B[N[-803656-(-803658)]]z=t(-816048-(-808509))i=p(z,f)R=H[i]z=34497197655307-(-342453)W=M[R]M=t(-470159-(-462554))M=W[M]M=M(W)W=B[F]d=-679616+2322938 R=B[N[-111198+111199]]i=t(917114-924467)H=B[N[179451+-179449]]p=H(i,z)M=R[p]R=nil W[M]=R end end end else if d&lt;585193+7593820 then if d&lt;8418435-332124 then if d&lt;-973907+8930949 then if d&lt;8582280-737239 then M=t(-72454+65045)a=S[M]d=14403286-724221 W=a else y=X d=B[N[-469776+469777]]a=522879-522624 l=181600-181600 I=d(l,a)F[y]=I y=nil d=876949+8306193 end else X=Z[495386+-495383]W=B[N[550578+-550577]]n=Z[915240-915236]M=10812105779224-(-928658)y=Z[-201986+201988]q=B[N[-39680+39682]]I=B[N[719323+-719320]]F=Z[1002960-1002959]a=t(-652191-(-644636))R=19540328814347-(-117888)l=I(a,M)w=q[l]d=W[w]M=t(-56072+48730)I=B[N[75966+-75964]]l=B[N[329963-329960]]a=l(M,R)q=I[a]w=F[q]W=d(w)w=W d=not w d=d and 370223+14034682 or 11350428-374081 end else if d&lt;141294+7970522 then if d&lt;7486118-(-618764)then q=B[w]W=q d=-856328+2325528 else A=u d=g d=13839412-599913 end else q=nil w=nil d=-960733+11646849 end end else if d&lt;744840+7688450 then if d&lt;861617+7519410 then if d&lt;-396223+8765963 then d=B[N[-851531+851535]]a=19482789027702-(-66554)y=B[N[45216+-45211]]l=t(-527003-(-519514))w=B[N[-323860-(-323862)]]q=B[N[-244375+244378]]I=q(l,a)n=w[I]X=F..n W=d(y,X)d=7240749-(-172223)else d=a and 10923534-(-466783)or 2841733-41497 end else F=Z X=t(484805+-492254)d=true y=h()B[y]=d I=t(-851647-(-844154))W=S[X]X=t(-225219+217569)d=W[X]X=h()B[X]=d n=h()w=h()d=P(-171874+605401,{})B[n]=d l=c(1567863-976672,{w})d=false B[w]=d q=S[I]I=q(l)W=I d=I and 348798+7752153 or-228176+1697376 end else if d&lt;-1009468+9555423 then d=3950686-(-12952)else I=B[F]a=B[N[-484009+484010]]M=B[N[225023-225021]]p=269452+18468160881931 H=t(-265821+258435)R=M(H,p)l=a[R]q=I[l]R=t(-475769+468351)H=291980+23200105412007 l=B[N[282017-282016]]a=B[N[889505-889503]]M=a(R,H)I=l[M]R=209480+12516100596860 M=t(-955353+948005)w=q[I]I=B[N[792152-792151]]l=B[N[-62468+62470]]a=l(M,R)M=-649448+10800270277773 q=I[a]n=w[q]q=B[N[29054+-29053]]I=B[N[-739564-(-739566)]]a=t(-52337+44736)l=I(a,M)w=q[l]X=n[w]l=t(276411+-283754)w=B[N[-879000+879001]]a=-118938+18332969169394 z=153353+2329105345843 q=B[N[903069+-903067]]I=q(l,a)M=66654+21687666959125 n=w[I]W=X[n]X=h()B[X]=W n=B[N[-496399+496404]]a=t(612255+-619681)q=B[N[-137426+137427]]I=B[N[-970476-(-970478)]]l=I(a,M)w=q[l]W=n[w]w=B[F]n=W(w)i=t(90931+-98398)w=h()B[w]=n a=B[F]R=B[N[426041-426040]]H=B[N[-90724+90726]]p=H(i,z)M=R[p]i=31554084233687-(-251790)l=a[M]M=B[N[876129+-876128]]R=B[N[843275+-843273]]p=t(-995711+988029)H=R(p,i)a=M[H]I=l[a]a=B[N[-240044+240045]]H=t(316801+-324391)M=B[N[-774699-(-774701)]]p=942560433853-(-486137)R=M(H,p)l=a[R]q=I[l]H=6870688726462-(-298689)R=t(683982-691631)l=B[N[-848509+848510]]a=B[N[-956669-(-956671)]]M=a(R,H)I=l[M]n=q[I]I=B[N[878517+-878516]]R=23929692388039-462656 M=t(-57743-(-50405))l=B[N[-452466+452468]]a=l(M,R)q=I[a]W=n[q]n=h()H=20073783863702-591123 R=t(-990538+983115)B[n]=W q=B[X]l=B[N[311139-311138]]a=B[N[492454-492452]]M=a(R,H)I=l[M]W=q==I d=W and 16311752-(-196153)or 5569261-235748 end end end end end end else if d&lt;12953500-(-641235)then if d&lt;705663+10672594 then if d&lt;-1039812+10762850 then if d&lt;9566221-459490 then if d&lt;8106223-(-805675)then if d&lt;-848634+9659960 then if d&lt;453053+8162646 then i=z G=i d=608993+14681869 p[i]=G i=nil else Z5=B[G]W5=338964+1544741967547 m5=t(34819-42384)k5=B[N[-203102+203104]]N5=B[N[-646808+646811]]O5=N5(m5,W5)d5=k5[O5]v=Z5[d5]d5=B[N[-657226-(-657228)]]m5=6378326597008-(-552458)d=220690+5097408 O5=t(-440295+432872)k5=B[N[-192055+192058]]N5=k5(O5,m5)Z5=d5[N5]Y=v==Z5 o=Y end else L=t(-756138-(-748721))d=S[L]L=t(235533+-243229)S[L]=d d=-862205-(-960759)end else if d&lt;8205143-(-897990)then if d&lt;8076871-(-1001994)then I=14439265751733-(-231310)F=Z[-1019654-(-1019655)]W=B[N[-405890+405891]]X=B[N[670105+-670103]]n=B[N[-449081-(-449084)]]q=t(-649372+641863)w=n(q,I)y=X[w]d=W[y]W={d}d=S[t(-293465-(-285988))]else X=B[N[724553+-724547]]y=X==F W=y d=-70895+14239982 end else u=B[y]d=u and 395052+4619017 or 13919148-(-160150)t5=u end end else if d&lt;10173918-895596 then if d&lt;10183199-939186 then if d&lt;-126352+9307428 then y=858783+-858782 X=B[N[-160177+160186]]n=X X=332963-332962 d={}w=X F=d X=-120990-(-120990)q=w&lt;X X=y-w d=8163467-(-1019675)else X=X+w I=not q y=X&lt;=n y=I and y I=X&gt;=n I=q and I y=I or y I=32172+7830717 d=y and I y=13122433-210863 d=d or y end else w=t(474981-482595)n=S[w]M=18634597341823-506010 q=B[N[-121506+121507]]I=B[N[942211-942209]]F=Z[-837944+837945]y=Z[739676+-739674]a=t(389638+-397190)l=I(a,M)w=q[l]X=n[w]l=t(-496694+489313)a=773743+10492534506662 w=B[N[264170-264169]]q=B[N[906130-906128]]I=q(l,a)n=w[I]W=X[n]n=B[N[-616888-(-616889)]]w=B[N[-131394-(-131396)]]I=t(347555+-355105)M=t(259139-266536)l=30497621795683-(-726038)q=w(I,l)X=n[q]d=W[X]W=t(-795863+788475)W=d[W]W=W(d)X=W l=-829208+11897925598396 I=t(84676-92053)n=B[N[-488489+488490]]w=B[N[-984081+984083]]q=w(I,l)I=t(-753489-(-745897))W=n[q]d=X[W]n=B[N[-41503+41504]]w=B[N[838595+-838593]]l=19124859687668-389163 q=w(I,l)W=n[q]n=y I=34123643101301-238179 d[W]=n W=B[N[223867+-223866]]q=t(206989+-214484)n=B[N[105100+-105098]]R=33332974355532-(-112725)w=n(q,I)d=W[w]I=B[N[-789976+789977]]l=B[N[-1948+1950]]y=nil a=l(M,R)R=945233+617968735438 q=I[a]w=F[q]I=B[N[601891+-601890]]M=t(-628729-(-621313))l=B[N[-113860+113862]]a=l(M,R)q=I[a]n=w[q]M=26029939861345-817160 a=t(94378-101937)q=B[N[-223810-(-223811)]]I=B[N[-445229-(-445231)]]l=I(a,M)w=q[l]W=n[w]X[d]=W a=t(876989-884334)d=B[N[-1025607-(-1025610)]]M=510571+33190830502388 q=B[N[-620513-(-620514)]]I=B[N[252275+-252273]]l=I(a,M)w=q[l]n=X[w]W=d(X,n)d=B[N[770076+-770072]]X=nil W=d(F)d=S[t(-512344-(-504728))]W={}F=nil end else if d&lt;-633427+10273915 then if d&lt;647508+8806536 then w=t(-406350+398931)W=B[N[892049+-892048]]F=Z[684684-684683]y=Z[1028701-1028699]q=-314594+32029227239204 X=B[N[-885529-(-885531)]]n=X(w,q)d=W[n]W=true y[d]=W q=23557769194968-(-244993)W=B[N[-990024+990025]]w=t(-390884-(-383462))X=B[N[932583+-932581]]n=X(w,q)d=W[n]p=21877606080973-(-1033726)n=t(431593+-439049)l=t(751015-758599)X=S[n]i=t(-155040+147496)w=B[N[-630779-(-630780)]]a=882365+22647788073589 q=B[N[-695901+695903]]I=q(l,a)n=w[I]W=X[n]l=28171720965270-(-800424)q=-556721+556721 I=-709542+709542 n=.95 H=t(-186486+178800)w=-1022332-(-1022332)X=W(n,w,q,I)I=t(-792294-(-784820))y[d]=X X=t(-204177-(-196591))W=S[X]n=B[N[145105+-145104]]w=B[N[-847719+847721]]q=w(I,l)a=356521+8045158112761 X=n[q]d=W[X]W=d()d=B[N[-357236-(-357239)]]l=t(-10284+2912)w=B[N[649037-649036]]M=-248888+23464648177382 q=B[N[-573097+573099]]I=q(l,a)n=w[I]X=y[n]a=t(-152015+144665)q=B[N[-702885-(-702886)]]I=B[N[-122281+122283]]l=I(a,M)R=547740+13607178386724 w=q[l]n=y[w]M=t(584297-591888)I=B[N[-742496-(-742497)]]l=B[N[-649364-(-649366)]]a=l(M,R)q=I[a]w=y[q]l=t(-670792+663220)I=S[l]z=9390078896160-(-633076)a=B[N[1033400-1033399]]M=B[N[619828+-619826]]R=M(H,p)l=a[R]q=I[l]R=B[N[643904-643903]]H=B[N[-711178+711180]]W=t(-42330-(-34940))p=H(i,z)i=t(-771769-(-764422))z=492709+22610768536699 M=R[p]a=y[M]R=B[N[1011957+-1011956]]H=B[N[587965-587963]]W=d[W]p=H(i,z)z=t(-774401+766844)M=R[p]R=t(-250422+242991)l=a[M]f=-4186+27587118711432 M=S[R]H=B[N[343581+-343580]]p=B[N[-150704-(-150706)]]i=p(z,f)R=H[i]a=M[R]i=460720+23544442446627 I={q(l,a)}W=W(d,X,n,w,k(I))X=W M=8878587147228-435126 a=t(630861-638313)W=B[N[-797496-(-797497)]]q=t(593505+-601120)n=B[N[584237-584235]]I=9604545512797-488421 z=27932559498930-(-939037)w=n(q,I)d=W[w]w=t(-95067-(-87611))n=S[w]q=B[N[-339522+339523]]I=B[N[-1036410-(-1036412)]]l=I(a,M)w=q[l]W=n[w]M=B[N[-760876-(-760877)]]p=t(-679366+672027)q=300132+-300132 w=.95 R=B[N[-108285+108287]]I=435298+-435298 H=R(p,i)a=M[H]l=X[a]n=W(w,q,I,l)M=t(12222-19621)I=t(911365-918818)y[d]=n d=-213882+213898 n=d W=B[N[1134-1133]]l=31858876211946-92407 w=B[N[791022+-791020]]q=w(I,l)d=W[q]y=nil q=t(-750785-(-743329))i=22342055955120-696845 R=-87306+8911333090623 w=S[q]I=B[N[679289-679288]]l=B[N[521911-521909]]a=l(M,R)q=I[a]W=w[q]M=B[N[482967+-482966]]R=B[N[221598-221596]]p=t(957634-965001)H=R(p,i)a=M[H]f=28545798524006-350330 l=F[a]i=-1010365+7449962494026 M=B[N[873336+-873335]]p=t(214970+-222439)R=B[N[620282+-620280]]H=R(p,i)i=t(450126+-457640)a=M[H]I=l[a]a=B[N[715739-715738]]H=t(986363+-993959)M=B[N[-325754-(-325756)]]p=31051080312741-12074 R=M(H,p)l=a[R]q=I[l]R=B[N[-385143+385144]]H=B[N[-156849-(-156851)]]p=H(i,z)i=t(722925-730428)M=R[p]a=F[M]R=B[N[-858859+858860]]H=B[N[493638-493636]]z=5291667548696-483448 p=H(i,z)M=R[p]l=a[M]i=71087+32737236641245 M=B[N[529312-529311]]p=t(678603+-685958)R=B[N[-494085-(-494087)]]H=R(p,i)z=t(-330258-(-322792))a=M[H]I=l[a]H=B[N[90816+-90815]]l=-320242+320242 p=B[N[473982+-473980]]i=p(z,f)R=H[i]M=X[R]a=M+n w=W(q,I,l,a)F[d]=w X=nil d=S[t(-697335-(-689733))]n=nil W={}F=nil else I=t(648266+-655879)n=B[N[-796590+796591]]F=Z[878499-878498]w=B[N[885939+-885937]]l=-814053+31928473708024 q=w(I,l)X=n[q]I=t(-256886+249441)l=21119805895422-(-340844)y=F[X]n=B[N[-403483+403484]]w=B[N[-901908+901910]]q=w(I,l)X=n[q]q=t(-509011+501495)W=y[X]X=B[N[-137651-(-137652)]]I=29630918136336-(-992213)n=B[N[27832+-27830]]w=n(q,I)I=t(-347489-(-340118))y=X[w]d=W[y]y=d I=y[I]d=334897+-334897 X=d W=t(-738176-(-730747))d=S[W]q={I(y)}I={d(k(q))}w=I[243470+-243467]W=I[902764-902763]n=I[-924431+924433]d=59359+16160644 q=W end else d=W and 12235012-566721 or 13859377-688919 end end end else if d&lt;10953846-308453 then if d&lt;-100234+9987001 then if d&lt;10589358-769536 then if d&lt;9003636-(-775542)then W=t(594262+-601679)F=t(-314095+306399)d=S[W]W=S[F]F=t(-875036-(-867340))S[F]=d F=t(479892-487309)S[F]=W F=B[N[-190629-(-190630)]]d=14291330-(-99517)y=F()else H=B[N[689468-689467]]d=R f=17110798315410-692339 z=t(-137704+130053)p=B[N[895785-895783]]i=p(z,f)p=d z=d d=X and 840466+10509865 or 562794+6838124 R=H[i]i=X end else L=B[z]E=B[N[904326-904324]]b=17603314429696-(-733445)U=t(882070+-889754)G=B[N[940246-940243]]J=G(U,b)T=E[J]r=L[T]x=not r d=x and-1026212+6603402 or 1669969-(-807214)end else if d&lt;-938011+11570626 then if d&lt;327111+9891681 then x=B[y]f=x d=x and-894682+12781987 or 192597+2213343 else d=B[N[681953+-681952]]F=B[N[-255600-(-255602)]]y=Q(12513938-(-1016557),{N[685649-685646]})W=t(-591560-(-583923))W=d[W]W=W(d,F,y)I=94918+13356129133957 q=t(-243018-(-235361))F=B[N[-836735+836739]]X=B[N[-258355+258360]]n=B[N[-366282+366288]]w=n(q,I)y=X[w]q=644821+4455419326789 W=F[y]y=B[N[974854+-974849]]w=t(-787030+779468)X=B[N[-904330-(-904336)]]n=X(w,q)F=y[n]I=20054375664289-(-530905)w=20891947189199-73167 d=W[F]F=B[N[875884+-875879]]y=B[N[-176752+176758]]n=t(-582905-(-575233))X=y(n,w)W=F[X]F=false d[W]=F F=B[N[170931+-170927]]q=t(-392745+385177)X=B[N[-241477-(-241482)]]n=B[N[194435+-194429]]w=n(q,I)y=X[w]W=F[y]y=B[N[933538+-933533]]X=B[N[515268-515262]]q=27516480174353-(-407804)w=t(61148-68512)n=X(w,q)F=y[n]d=W[F]F=B[N[923109+-923104]]n=t(-630005+622302)w=-799892+30317236251577 y=B[N[155550-155544]]X=y(n,w)W=F[X]F=true d[W]=F W={}d=S[t(787411-794897)]end else y=B[N[-770260+770262]]X=B[N[379129-379126]]d=-432887+10076898 F=y==X W=F end end else if d&lt;9734287-(-1009347)then if d&lt;943135+9771544 then if d&lt;9610727-(-1042825)then n=38369-38349 X+=n a=t(-241061+233569)M=16162603894374-403712 q=B[N[477353+-477352]]I=B[N[-187222-(-187224)]]l=I(a,M)p=28447700629140-590550 w=q[l]x=t(923138+-930726)l=t(-346368+338912)H=t(-402009-(-394636))I=S[l]a=B[N[-522141-(-522142)]]d=S[t(-405565+397925)]M=B[N[889684+-889682]]R=M(H,p)l=a[R]q=I[l]l=838580-838580 H=t(-799544+792019)M=912858-912858 a=271160-271160 I=q(l,a,M,X)F=nil y[w]=I I=.1 a=t(250159-257619)q=t(427690+-435207)M=129058+8632323889041 w=S[q]p=-972201+3626021313601 q=w(I)q=B[N[860241+-860240]]I=B[N[817787-817785]]l=I(a,M)w=q[l]l=t(493853-501425)I=S[l]r=-333501+21435050032570 a=B[N[285066+-285065]]M=B[N[151976-151974]]R=M(H,p)l=a[R]q=I[l]l=-656903-(-656903)i=B[N[-846113+846114]]z=B[N[-782100-(-782102)]]f=z(x,r)p=i[f]H=y[p]x=t(-929498-(-921824))i=B[N[132596-132595]]z=B[N[-719484-(-719486)]]r=16677482812563-325181 f=z(x,r)r=35042229374716-741183 p=i[f]f=t(912282-919958)x=27090669024078-737799 R=H[p]p=B[N[-757178-(-757179)]]i=B[N[-639263+639265]]z=i(f,x)H=p[z]M=R[H]x=t(872293+-879974)i=B[N[770047+-770046]]z=B[N[275572+-275570]]f=z(x,r)p=i[f]W={}x=t(133216-140727)H=y[p]r=-931793+3370718428658 i=B[N[137189+-137188]]z=B[N[75679-75677]]f=z(x,r)p=i[f]R=H[p]X=nil a=M+R I=q(l,a)y[w]=I y=nil else X,q=n(y,X)d=X and 4574458-(-22553)or-822919+1168466 end else y=B[N[-653867+653870]]X=229113+-229112 F=y~=X d=F and-630395+16965987 or 4758141-(-44162)end else if d&lt;893883+10275854 then W=n d=n and 6041344-(-826874)or 673782+6666027 else f=t(287519-295147)E=t(967078+-974627)r=B[N[-488460-(-488461)]]L=B[N[10382+-10380]]d=8236884-835966 G=32335327412658-132833 T=L(E,G)f=X[f]x=r[T]f=f(X,x)i=f end end end end else if d&lt;11911896-(-975113)then if d&lt;12141332-240156 then if d&lt;12546382-882837 then if d&lt;818919+10702730 then if d&lt;11252145-(-137280)then E={}J=t(858574-866067)G=h()b=D(4561576-(-331728),{N[196865+-196857],x,G})B[G]=E E=S[J]A={E(b)}J=A[-861945-(-861946)]U=A[347613+-347611]t5=B[G]b=d A=not t5 d=A and 16642484-190128 or 16248761-348017 E=A else z=-582474+31602845801670 R=B[N[-238317-(-238318)]]i=t(-1028921-(-1021234))H=B[N[-351166-(-351168)]]p=H(i,z)z=572571+20258926110782 M=R[p]a=l[M]R=B[N[256090-256089]]i=t(-966944+959552)H=B[N[-165446-(-165448)]]p=H(i,z)M=R[p]d=a[M]X+=d d=3643615-843379 end else d=7289777-827606 end else if d&lt;12396982-506063 then if d&lt;12005974-259882 then n=t(853987-861446)W=t(217864+-225205)d=S[W]l=t(443529+-451022)a=c(865330-(-317542),{})F=B[N[-456424-(-456428)]]X=S[n]I=S[l]l={I(a)}I=940345+-940343 q={k(l)}w=q[I]n=X(w)X=t(472890-480323)y=F(n,X)F={y()}W=d(k(F))F=W y=B[N[276029+-276024]]W=y d=y and-582393+9684168 or 13498425-(-670662)else x=R==H d=2516531-110591 f=x end else G=t(-833153-(-825643))u=12466165568301-261248 E=S[G]U=B[N[-649370-(-649372)]]b=B[N[-283574+283577]]t5=t(-156002-(-148634))A=b(t5,u)J=U[A]t5=t(441451+-449117)d=S[t(-493706-(-486014))]G=E(J)E=B[N[211177+-211172]]u=28253924422654-(-819046)U=B[N[913477+-913475]]W={}b=B[N[371160-371157]]A=b(t5,u)J=U[A]G=E(F,J)end end else if d&lt;11689767-(-698509)then if d&lt;247254+11882259 then if d&lt;11866126-(-245138)then r=356444+-356443 L=1036569-1036563 d=B[I]x=d(r,L)d=t(320611-328028)S[d]=x L=t(-234619+227202)r=S[L]L=362784+-362782 d=r&gt;L d=d and 4662771-(-91824)or 8620391-(-226745)else X=502613+-502388 y=B[N[-638725-(-638727)]]F=y*X y=32745445492-(-845723)W=F+y F=35184371331187-(-757645)d=W%F B[N[-683784-(-683786)]]=d y=-825747+825748 F=B[N[-207093+207096]]W=F~=y d=4439484-(-362819)end else d=true d=-488937+14813998 end else if d&lt;779647+12024506 then if d&lt;12124212-(-457432)then l=767850+29430103096862 d=B[N[820503+-820502]]y=B[N[789056-789054]]I=t(-471536-(-464157))n=B[N[462124-462121]]w=B[N[-686980-(-686984)]]W=t(-829955-(-822250))q=w(I,l)W=d[W]X=n[q]F=y[X]W=W(d,F)d=S[t(559791-567216)]B[N[-115449-(-115454)]]=W W={}else M=1296376499045-788746 y=Z[320717+-320715]F=Z[660676+-660675]w=t(-481522+473908)n=S[w]a=t(25481-32911)q=B[N[639925+-639924]]I=B[N[-712178-(-712180)]]l=I(a,M)w=q[l]l=t(38330-45969)X=n[w]w=B[N[-82991+82992]]a=510389+22468625063721 q=B[N[59929+-59927]]I=q(l,a)l=30957836020010-(-200485)n=w[I]W=X[n]I=t(500078-507524)n=B[N[-982477-(-982478)]]R=230284+7575424518715 w=B[N[211231+-211229]]q=w(I,l)X=n[q]d=W[X]W=t(612090+-619478)l=10900920328637-(-406039)W=d[W]W=W(d)n=B[N[201952-201951]]I=t(802710+-810378)X=W w=B[N[-4656-(-4658)]]q=w(I,l)I=t(-339943+332285)l=31347212317255-31042 M=t(-974084+966407)W=n[q]d=X[W]n=B[N[-638593+638594]]w=B[N[-974265-(-974267)]]q=w(I,l)W=n[q]n=y d[W]=n q=t(820689-828286)W=B[N[693666-693665]]n=B[N[284927-284925]]I=-389492+19317907412119 w=n(q,I)d=W[w]I=B[N[-248200+248201]]l=B[N[358738-358736]]a=l(M,R)q=I[a]R=5074172887550-(-296764)w=F[q]I=B[N[760732+-760731]]M=t(-826800+819192)l=B[N[213953-213951]]a=l(M,R)q=I[a]M=-996560+6475591172247 y=nil n=w[q]q=B[N[660633-660632]]a=t(-617229-(-609534))I=B[N[-387319-(-387321)]]l=I(a,M)w=q[l]W=n[w]X[d]=W d=B[N[9796+-9793]]a=t(-564201+556763)q=B[N[670768-670767]]I=B[N[-702499-(-702501)]]M=507086+15025385725574 l=I(a,M)w=q[l]n=X[w]W=d(X,n)d=B[N[-425339+425343]]W=d(F)F=nil d=S[t(-783855+776511)]W={}X=nil end else p=not H M=M+R l=M&lt;=a l=p and l p=M&gt;=a p=H and p l=p or l p=291451+6801319 d=l and p l=14244290-(-761219)d=d or l end end end else if d&lt;-1045674+14271108 then if d&lt;13364713-411120 then if d&lt;12927032-13984 then if d&lt;13166563-261782 then d=p M=H d=H and-586975+10396526 or-360348+4469260 else d=B[N[-808592-(-808602)]]y=B[N[557347+-557336]]F[d]=y d=B[N[920729+-920717]]y={d(F)}d=S[t(862547+-870055)]W={k(y)}end else F=Z[138644+-138643]W=t(151674+-159103)d=S[W]n=B[N[-883740-(-883741)]]w={d(n)}W=w[807309+-807308]y=w[1013233+-1013231]X=w[-412083-(-412086)]d=11336301-650185 n=W end else if d&lt;-540685+13533034 then if d&lt;13605739-628569 then W=B[N[-925245+925251]]H=t(363540+-370897)p=6634767585581-(-555748)I=B[F]a=B[N[-973736+973737]]M=B[N[-519293+519295]]R=M(H,p)l=a[R]q=W(I,l)W=B[F]I=B[N[978588+-978587]]R=638821+26529286910172 M=t(-172851+165387)d=-55388+2237451 l=B[N[660811+-660809]]a=l(M,R)q=I[a]I={}W[q]=I else u=13220440284111-(-457789)d=1048476+399421 x=B[N[-887054-(-887059)]]E=B[N[-828531+828533]]G=B[N[831382+-831379]]b=24632026926049-974611 t5=t(771222-778910)U=t(122431-130049)J=G(U,b)T=E[J]U=B[N[-375723-(-375725)]]b=B[N[335555+-335552]]A=b(t5,u)J=U[A]G=w[J]U=B[N[994113-994111]]u=-787042+3962062408086 t5=t(595129+-602676)b=B[N[584168+-584165]]A=b(t5,u)J=U[A]E=G..J L=T..E r=x(F,L)end else d=B[N[126121-126114]]d=d and 763118+-351390 or 9979092-819003 end end else if d&lt;13823474-305830 then if d&lt;-277426+13775721 then if d&lt;-810919+14157792 then d=t5 d=-682596+17134952 E=A else W=a d=M d=a and 888118+12790947 or 8648021-812389 end else y=B[N[207767-207766]]n=-974392+974393 w=-444992+444994 X=y(n,w)y=-425666-(-425667)F=X==y d=F and-613867+10257878 or 833344+9799274 W=F end else if d&lt;714512+12820814 then F=Z[395156+-395155]d=B[N[-1021323+1021324]]W={d}d=S[t(176468+-183933)]else p=t(-894634-(-886959))H=S[p]d=12805866-(-586176)p=t(951882+-959291)R=H[p]a=R end end end end end else if d&lt;50319+15187432 then if d&lt;-58092+14391697 then if d&lt;13723459-(-215826)then if d&lt;13522049-(-220321)then if d&lt;-860957+14541360 then if d&lt;-538365+14176245 then i=t(675459-682893)a=t(-878181-(-870671))d=S[t(433662+-441236)]l=S[a]R=B[N[352307+-352305]]H=B[N[-378591-(-378594)]]z=365909+4700901749560 p=H(i,z)z=64189+33731566617246 W={}M=R[p]a=l(M)l=B[N[49481-49476]]R=B[N[-466732-(-466734)]]i=t(-815596-(-808007))H=B[N[955720+-955717]]p=H(i,z)M=R[p]a=l(F,M)else p=t(948136+-955629)R=57846+-57781 a=h()r=t(-25004-(-17545))B[a]=W d=B[I]M=-383535-(-383538)W=d(M,R)M=h()d=999294+-999294 i=P(-154971+16145766,{})R=d B[M]=W d=-240316+240316 H=d W=S[p]p={W(i)}W=981914+-981912 d={k(p)}p=d d=p[W]i=d W=t(51584-58925)d=S[W]z=B[X]x=S[r]r=x(i)x=t(323549+-330982)f=z(r,x)z={f()}W=d(k(z))z=h()d=1981587-(-214440)B[z]=W W=554275+-554274 f=B[M]x=f f=75255-75254 r=f f=-539619+539619 L=r&lt;f f=W-r end else d=15079265-740821 end else if d&lt;-403878+14319660 then if d&lt;14547679-767219 then G=-205322+23703978757416 r=B[N[33839-33837]]L=B[N[750070+-750067]]d=520528+4657628 E=t(-94574+86920)T=L(E,G)x=r[T]z=x else x=B[N[-834454+834459]]T=B[N[926972+-926970]]E=B[N[891423-891420]]J=t(-70307+62732)U=13816019771983-(-489170)G=E(J,U)L=T[G]d=-799665-(-1041837)r=x(F,L)end else S5=d Z5=B[G]k5=B[N[-1002369-(-1002371)]]N5=B[N[1017477-1017474]]m5=t(-42112+34668)W5=-493069+7890888545383 O5=N5(m5,W5)d5=k5[O5]v=Z5[d5]Y=not v d=Y and-154417+5472515 or 7666322-(-954284)o=Y end end else if d&lt;-649597+14730236 then if d&lt;900612+13086353 then if d&lt;13513358-(-437674)then d=B[N[-782633-(-782634)]]X=d F=Z[271853-271852]y=Z[-47062+47064]d=X[y]d=d and 899681+12800689 or-288677+15543644 else l=t(-799133+791676)F=Z[24552-24551]n=t(-246744-(-239130))X=S[n]w=B[N[499317-499316]]a=10618287487187-(-645757)q=B[N[190527-190525]]I=q(l,a)n=w[I]I=t(-141729+134159)l=999208+21712096847958 y=X[n]n=B[N[371796+-371795]]w=B[N[812241-812239]]q=w(I,l)X=n[q]W=y[X]q=t(522252+-529635)I=-807705+25555649315221 X=B[N[212770+-212769]]n=B[N[-580788-(-580790)]]M=22652978827991-(-415325)w=n(q,I)y=X[w]d=W[y]W=t(370874-378262)W=d[W]W=W(d)q=25643673952810-(-412795)y=W a=t(455676-463288)W=B[N[-283261+283262]]X=B[N[40806+-40804]]w=t(787227+-794623)n=X(w,q)d=W[n]q=B[N[-434072-(-434073)]]I=B[N[22517-22515]]l=I(a,M)w=q[l]n=F[w]M=24779426429656-(-602682)q=B[N[-393079-(-393080)]]a=t(-188218-(-180597))I=B[N[-462687-(-462689)]]l=I(a,M)w=q[l]X=n[w]w=B[N[-945243-(-945244)]]l=t(356902+-364384)q=B[N[-651618-(-651620)]]a=10776355721199-146517 I=q(l,a)n=w[I]W=X[n]y[d]=W d=B[N[370942-370939]]W=d(F)W={y}d=S[t(749931-757292)]end else Y=-205195+205196 B[y]=t5 S5=B[J]o=S5+Y g=A[o]u=R+g g=-467825+468081 d=u%g o=B[G]g=H+o R=d o=741026-740770 d=-194993+3455928 u=g%o H=u end else if d&lt;-590172+14914073 then if d&lt;521001+13770182 then B[N[766633-766628]]=W d=13501342-330884 F=nil else E=t(753211+-760721)x=S[E]J=B[N[-395419-(-395421)]]t5=5872984115240-(-262790)U=B[N[3575-3572]]A=t(-1031217-(-1023719))b=U(A,t5)t5=645926+10583544838170 G=J[b]E=x(G,T)W={}x=B[N[36212+-36207]]J=B[N[-445040-(-445042)]]U=B[N[8028-8025]]A=t(391936+-399379)b=U(A,t5)d=S[t(576964-584663)]G=J[b]E=x(F,G)end else d=e(7885980-279219,{n})x={d()}W={k(x)}d=S[t(96004+-103528)]end end end else if d&lt;-362367+15241976 then if d&lt;13544466-(-861329)then if d&lt;13916945-(-478023)then if d&lt;281502+14069693 then W={y}d=S[t(277393+-284876)]else d=true d=d and 10564855-788942 or 1104826-158462 end else W=t(-280209-(-272699))d=S[W]l=B[N[436747-436745]]H=-382636+26324284065422 a=B[N[-993271-(-993274)]]R=t(-373203+365741)M=a(R,H)a=t(-928065-(-920606))I=l[M]f=1271408864300-(-103972)l=S[a]z=t(757782-765171)H=B[N[-1007485-(-1007487)]]p=B[N[-988989-(-988992)]]i=p(z,f)R=H[i]M=F[R]a=l(M)q=I..a W=d(q)d=S[t(-486236-(-478732))]W={}end else if d&lt;-227359+14790738 then if d&lt;15105512-687614 then n=t(631990+-639604)a=391499+3988686802422 X=S[n]F=Z[527998-527997]w=B[N[711303+-711302]]q=B[N[956773+-956771]]l=t(418621-426301)I=q(l,a)l=111250+27326314643234 n=w[I]y=X[n]n=B[N[-824553-(-824554)]]w=B[N[182057-182055]]I=t(548732+-556180)q=w(I,l)X=n[q]W=y[X]X=B[N[566349-566348]]n=B[N[-906317-(-906319)]]I=20475085051155-569301 q=t(129389-136894)w=n(q,I)M=840348+3042862543596 y=X[w]d=W[y]W=t(412484+-419872)W=d[W]W=W(d)y=W W=B[N[149744+-149743]]w=t(-918535-(-910850))q=34946523274563-(-139854)X=B[N[-243131+243133]]n=X(w,q)d=W[n]q=B[N[575981-575980]]a=t(-586962+579593)I=B[N[-1010963-(-1010965)]]l=I(a,M)M=-693349+16637925356200 w=q[l]n=F[w]q=B[N[769071+-769070]]I=B[N[-904959+904961]]a=t(-667060+659422)l=I(a,M)w=q[l]l=t(-379565+371932)X=n[w]w=B[N[412897+-412896]]q=B[N[65224-65222]]a=19080058467990-136162 I=q(l,a)n=w[I]W=X[n]y[d]=W d=B[N[24607-24604]]W=d(F)d=S[t(-59312+51901)]W={y}else z=#p L=67838-67838 i=z==L d=i and 2016332-(-291316)or 15673957-(-812308)end else p=28155661457376-140457 W=B[N[845667+-845663]]a=B[N[-237965-(-237967)]]H=t(248526-255962)M=B[N[248593+-248590]]R=M(H,p)l=a[R]d=W[l]W=d()q=W d=true I=d d=-413671+1630324 end end else if d&lt;-732250+15929744 then if d&lt;582893+14478070 then if d&lt;14407489-(-500050)then l=t(894147+-901756)w=B[N[-903841-(-903842)]]q=B[N[521501+-521499]]a=310452+15224174485245 I=q(l,a)d=t(728334-735962)d=F[d]W=w[I]M=-203120+34928905066745 d=d(F,W)q=B[N[-534666-(-534667)]]X=d I=B[N[-22861-(-22863)]]a=t(-743269+735788)W=t(-475547+467919)l=I(a,M)w=q[l]W=F[W]W=W(F,w)d=741036+14460395 n=W else d=-327232+14665676 I=nil q=nil n=nil end else W=t(-1019260-(-1011623))d=B[N[670875+-670874]]y=j(9195084-233157,{N[498209+-498206];N[-308469+308473],N[511262+-511257]})q=t(-17253+9712)W=d[W]F=B[N[692759+-692757]]W=W(d,F,y)F=B[N[290405-290399]]I=4541583366619-(-142951)X=B[N[669843+-669839]]n=B[N[-7737-(-7742)]]w=n(q,I)y=X[w]W=F[y]y=B[N[-413692+413696]]w=t(-527421+519797)X=B[N[363233+-363228]]I=21712941444068-656486 q=-462360+27559980007481 n=X(w,q)F=y[n]n=t(-262399+254931)d=W[F]w=19131223171667-819079 F=B[N[-741758-(-741762)]]y=B[N[-819478-(-819483)]]q=t(-893107+885589)X=y(n,w)W=F[X]F=true d[W]=F F=B[N[-378476+378482]]X=B[N[-791909+791913]]n=B[N[-301005+301010]]w=n(q,I)y=X[w]w=t(941809-949282)W=F[y]y=B[N[-405054-(-405058)]]q=19116385653361-208812 X=B[N[707331+-707326]]n=X(w,q)F=y[n]d=W[F]n=t(898680+-906322)F=B[N[-177063+177067]]w=21745357854098-880133 y=B[N[-498546-(-498551)]]X=y(n,w)W=F[X]F=false d[W]=F d=S[t(-351017-(-343484))]W={}end else if d&lt;130403+15094045 then I=not n d=I and-606759+7399999 or 793462+1147553 else F=B[N[-44203-(-44204)]]W=#F F=801368-801368 d=W==F d=d and 313507+11807767 or-587270+5020933 end end end end else if d&lt;16252500-144714 then if d&lt;208298+15487610 then if d&lt;15704359-322811 then if d&lt;645233+14613738 then if d&lt;1003487+14241154 then R=12504140871466-122988 M=t(-750800-(-743309))I=B[N[13825+-13824]]l=B[N[390064+-390062]]w=t(376347-383975)w=F[w]a=l(M,R)q=I[a]w=w(F,q)R=14163445142346-(-427641)I=B[N[-952224-(-952225)]]l=B[N[1038008-1038006]]X=w M=t(-929621+922198)a=l(M,R)q=I[a]n=q d=-782556+15983987 else d={}B[N[524743+-524741]]=d W=B[N[696078+-696075]]n=W w=-976470+35184373065302 W=y%w I=757381+-757126 B[N[457125+-457121]]=W q=y%I l=t(959896+-967345)I=-11692+11694 w=q+I B[N[-985750-(-985755)]]=w I=S[l]l=t(53344+-60948)q=I[l]M=-113447+113448 I=q(F)l=-236254-(-236255)q=t(1026763-1034186)X[y]=q q=-736231+736478 R=M a=I d=648272+12203818 M=-473261-(-473261)H=R&lt;M M=l-R end else G=not E z=z+T i=z&lt;=L i=G and i G=z&gt;=L G=E and G i=G or i G=9014735-399715 d=i and G i=-396270+1701409 d=d or i end else if d&lt;15994930-404848 then if d&lt;-902154+16434162 then W={}d=S[t(118549+-125914)]else y=t(131060-138438)F=Z[-416814-(-416815)]I=-412570+21146725642769 W=S[y]q=t(-86683-(-79012))y=W(F)X=B[N[17098+-17097]]n=B[N[-636934+636936]]w=n(q,I)W=X[w]d=y~=W d=d and 15936171-(-727484)or 437046+15937609 end else b=t(-61401-(-53891))E=S[b]A=B[r]b=E(A)b=t(-479649+472139)E=S[b]b=E(X)d=S[t(656911-664459)]b=t(800395-807905)E=S[b]A=B[x]b=E(A)b=t(-153909+146399)E=S[b]A=B[G]Y=22906041884322-341240 b=E(A)b=t(-1010481+1002971)E=S[b]b=E(U)d5=-622979+34811875967189 E=B[N[-411954-(-411959)]]S5=t(-196849-(-189197))u=B[N[-422529-(-422531)]]g=B[N[-1005088-(-1005091)]]Z5=t(64468+-72002)o=g(S5,Y)t5=u[o]S5=B[N[-270619+270621]]Y=B[N[-81520+81523]]v=Y(Z5,d5)Z5=t(576627-584212)W={}o=S5[v]g=w[o]S5=B[N[-788348+788350]]Y=B[N[875421+-875418]]d5=-471107+12539518191378 v=Y(Z5,d5)o=S5[v]u=g..o S5=13548929908381-271864 A=t5 ..u b=E(F,A)o=t(-463709+456153)b=t(456730+-464240)E=S[b]t5=B[N[85406+-85404]]u=B[N[-565443-(-565446)]]g=u(o,S5)A=t5[g]b=E(A)b=t(509910+-517420)E=S[b]o=t(-878079-(-870600))S5=889790+17250592230306 t5=B[N[430151+-430149]]u=B[N[143558-143555]]g=u(o,S5)A=t5[g]b=E(A)end end else if d&lt;15421942-(-447209)then if d&lt;16212731-428452 then if d&lt;149779+15597792 then x=B[N[-163713-(-163718)]]T=B[N[-335749-(-335751)]]E=B[N[350246+-350243]]J=t(-885570+877971)d=2489661-1041764 U=27098669868771-701849 G=E(J,U)L=T[G]r=x(F,L)else i=t(-573556+566163)W=B[F]z=16029037431140-584764 f=796239+21790946885972 R=B[N[-908490-(-908491)]]H=B[N[143441-143439]]p=H(i,z)M=R[p]R=false W[M]=R M=B[F]H=B[N[-376304-(-376305)]]p=B[N[-464279-(-464281)]]z=t(-400712-(-393158))i=p(z,f)R=H[i]W=M[R]d=W and 904249+6797363 or 276695+1366627 end else g=B[N[-1012966-(-1012968)]]Y=t(43405-50927)v=-467884+17259654972177 o=B[N[-983100-(-983103)]]S5=o(Y,v)u=g[S5]v=1879790810019-61496 Y=t(577012-584352)t5=F[u]g=B[N[-521181-(-521183)]]o=B[N[-473649-(-473652)]]S5=o(Y,v)u=g[S5]A=t5[u]k5=t(107423+-115004)N5=-649590+31289908863584 t5=h()B[t5]=A A=B[N[894175+-894166]]u=A(F)A=h()B[A]=u S5=B[A]v=B[N[905291-905289]]Z5=B[N[-454420+454423]]d5=Z5(k5,N5)Y=v[d5]N5=228126+9171565991312 o=S5[Y]Y=B[N[-247635+247637]]d5=t(-82933+75496)k5=756858+29799171467706 v=B[N[307872+-307869]]Z5=v(d5,k5)S5=Y[Z5]g=o[S5]S5=B[N[-915903-(-915905)]]Z5=t(573425+-580785)d5=15428719916515-(-484909)Y=B[N[-860292-(-860295)]]v=Y(Z5,d5)o=S5[v]u=g[o]o=P(10450408-(-182206),{N[-875346+875356],a,t5,A;N[-798085+798087],N[277069+-277066]})g=t(544725-552336)g=u[g]g=g(u,o)S5=B[A]v=B[N[-681991-(-681993)]]k5=t(190429+-197926)Z5=B[N[-109174+109177]]d5=Z5(k5,N5)Y=v[d5]k5=26713207150543-(-825544)d5=t(-341605+333986)o=S5[Y]Y=B[N[-132965-(-132967)]]v=B[N[813104+-813101]]Z5=v(d5,k5)S5=Y[Z5]g=o[S5]d5=281226+13221115137410 S5=B[N[850419+-850417]]Y=B[N[-978549-(-978552)]]Z5=t(459248-466635)v=Y(Z5,d5)o=S5[v]S5=e(780123+4547305,{N[-866054+866064];a;G,N[985127+-985125];N[-648070-(-648073)]})u=g[o]o=V(-149081+15216049,{N[-393497+393507],a,G,N[319302+-319300];N[223048-223045],A})g=t(142055-149666)g=u[g]g=g(u,o)g=t(-799404+791911)u=S[g]Y={u(S5)}o=Y[271458-271456]g=Y[537826+-537825]u=not g d=u and 313214+3854615 or 2192176-671099 end else if d&lt;15999985-89503 then d5=t(921296-928987)t5=d o=B[G]Y=B[N[449449+-449447]]k5=1290212250973-(-208123)v=B[N[-452722-(-452725)]]Z5=v(d5,k5)S5=Y[Z5]g=o[S5]u=not g A=u d=u and 44544+13194955 or 1135106-742602 else X=695798+5624528 y=t(-475891-(-468404))F=y^X W=676390+2617555 d=W-F F=d W=t(40040-47688)d=W/F W={d}d=S[t(965244-972658)]end end end else if d&lt;15924899-(-564368)then if d&lt;16306344-(-49429)then if d&lt;743834+15578745 then if d&lt;1037588+15250458 then w,l=q(n,w)d=w and 180301+2247286 or-503450+11151040 else d=W and-415884+15263241 or 1521193-304540 end else X=554240-554208 a=-8395-(-8397)R=-327862-(-327875)y=B[N[-1040144-(-1040147)]]F=y%X n=B[N[736561+-736557]]I=B[N[-274413-(-274415)]]i=B[N[-1020382+1020385]]p=i-F i=1007001+-1006969 H=p/i M=R-H l=a^M q=I/l d=882356+3551307 w=n(q)n=4294071073-(-896223)X=w%n w=667204-667202 n=w^F y=X/n l=1031743-1031742 n=B[N[-4617+4621]]a=-629858-(-630114)I=y%l l=922607+4294044689 q=I*l w=n(q)n=B[N[-207443+207447]]q=n(y)I=-260413-(-325949)X=w+q y=nil w=-116143-(-181679)n=X%w q=X-n w=q/I I=-693438+693694 q=n%I R=311025+-310769 l=n-q I=l/a a=263749+-263493 n=nil l=w%a X=nil M=w-l w=nil F=nil a=M/R M={q;I,l,a}l=nil I=nil B[N[-433119+433120]]=M q=nil a=nil end else if d&lt;16844278-367028 then if d&lt;949602+15473298 then y=B[N[-99312+99313]]l=t(-876801-(-869194))w=t(604814-612313)q=23030981100705-1006269 X=B[N[-42540+42542]]n=X(w,q)W=y[n]d=t(-460809-(-453181))a=-908172+28563654463360 d=F[d]d=d(F,W)W=nil n=W y=d d=nil w=B[N[743912-743911]]X=d q=B[N[-451585-(-451587)]]d=t(979610+-987071)d=F[d]I=q(l,a)W=w[I]d=d(F,W)d=d and 14454215-(-448842)or-188574+15430318 else d=b d=E and 15594420-(-2378)or 7881173-1011196 end else L=#p z=-728367+728368 i=X(z,L)G=321062+-321061 z=q(p,i)L=B[H]E=z-G d=14189042-(-257344)i=nil T=I(E)L[z]=T z=nil end end else if d&lt;15920304-(-618697)then if d&lt;-11580+16535713 then if d&lt;15999112-(-502810)then W=B[N[-686876+686884]]a=B[F]M=B[X]l=W(a,M)M=j(1282373-563344,{N[-502617+502626];F;X;w,n})l=t(-610641-(-603148))W=S[l]R={W(M)}a=R[-799349+799351]l=R[941452-941451]W=not l d=W and 1822454-(-536927)or 16401176-648549 else d=S[t(-279684-(-272164))]W={}end else d=t5 d=A and 4625189-311523 or 14955985-(-862690)end else if d&lt;-299387+16880175 then S5=t(271570+-279019)o=S[S5]d=16508592-(-26080)N5=t(-216990-(-209610))Y=B[N[-89888+89890]]k5=32613762769735-387061 v=B[N[-411176-(-411179)]]d5=t(-747+-6917)Z5=v(d5,k5)S5=Y[Z5]g=o[S5]Y=B[G]O5=13197681102262-996789 Z5=B[N[-73858-(-73860)]]d5=B[N[-892232+892235]]k5=d5(N5,O5)v=Z5[k5]S5=Y[v]N5=269205+28827449923802 k5=t(396113-403756)v=B[N[-491240+491242]]Z5=B[N[-108633+108636]]d5=Z5(k5,N5)Y=v[d5]O5=9895555126618-(-457893)N5=t(34157-41580)Z5=B[N[-497492-(-497494)]]d5=B[N[150407-150404]]k5=d5(N5,O5)O5=t(-122527+114883)m5=30117662434203-(-217901)v=Z5[k5]N5=95764+6267233146194 o=g(S5,Y,v)k5=t(-489037+481343)Y=t(-231638+224189)S5=S[Y]v=B[N[-198236+198238]]Z5=B[N[1032303-1032300]]d5=Z5(k5,N5)Y=v[d5]g=S5[Y]d5=B[N[672988+-672986]]k5=B[N[343089-343086]]N5=k5(O5,m5)Z5=d5[N5]v=F[Z5]m5=10881327865338-526895 O5=t(622659+-630166)d5=B[N[-209374-(-209376)]]k5=B[N[869920-869917]]N5=k5(O5,m5)Z5=d5[N5]N5=t(331512-338987)Y=v[Z5]Z5=B[N[690811-690809]]d5=B[N[-738813+738816]]O5=567923+14158120742733 k5=d5(N5,O5)v=Z5[k5]O5=t(-591574+584151)d5=B[N[-76453-(-76455)]]k5=B[N[-561085-(-561088)]]m5=31662405754702-779703 N5=k5(O5,m5)Z5=d5[N5]S5=g(Y,v,Z5)u=o==S5 A=u else y=B[N[114322-114321]]w=t(-615315-(-607684))X=B[N[-580437+580439]]q=17364630790703-(-834919)n=X(w,q)W=y[n]q=t(-763213-(-755790))X=B[N[-424985+424986]]I=27837510082095-404365 n=B[N[538822-538820]]l=-656988+5575906021504 w=n(q,I)y=X[w]I=t(-198639+191233)n=B[N[277565-277564]]w=B[N[-514887-(-514889)]]q=w(I,l)X=n[q]a=-1031884+4396384274123 w=B[N[-716213+716214]]q=B[N[-714541-(-714543)]]M=-389626+18071118664409 l=t(189164-196587)I=q(l,a)n=w[I]a=t(421513-429186)R=264934+19910924114257 q=B[N[-877713+877714]]I=B[N[-364894-(-364896)]]l=I(a,M)w=q[l]I=B[N[529585+-529584]]l=B[N[669180-669178]]M=t(462360+-469783)a=l(M,R)q=I[a]d={[W]=y;[X]=n;[w]=q}W={d}d=S[t(669897-677458)]end end end end end end end end d=#O return k(W)end,62605-62605,function(S)for t=-177536+177537,#S,-535362+535363 do F[S[t]]=F[S[t]]+(-640732+640733)end if Z then local d=Z(true)local k=O(d)k[t(-260878-(-253496))],k[t(485631-493277)],k[t(-43074-(-35669))]=S,n,function()return-813880+912476 end return d else return N({},{[t(-557686-(-550040))]=n;[t(-158921+151539)]=S;[t(140584-147989)]=function()return-818307+916903 end})end end,{},{},function(S,t)local k=X(t)local Z=function(Z)return d(S,{Z},t,k)end return Z end,function(S,t)local k=X(t)local Z=function(Z,N,O,m,W,B,F)return d(S,{Z;N,O,m;W,B;F},t,k)end return Z end,function(S,t)local k=X(t)local Z=function(...)return d(S,{...},t,k)end return Z end return(w(7652403-(-780474),{}))(k(W))end)(getfenv and getfenv()or _ENV,unpack or table[t(313082-320491)],newproxy,setmetatable,getmetatable,select,{...})end)(...)</ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="ModuleScript" referent="RBXBAEE380631334676A4B73C241A05E3AB">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">PrintGameHierarhy</string>
				<string name="ScriptGuid">{51B46294-0A11-4036-87D7-C86C5074C8DF}</string>
				<ProtectedString name="Source">--[[ v1.0.0 https://wearedevs.net/obfuscator ]] return(function(...)local z={&quot;\102\043\087\082\087\071\065\106\098\081\102\071\109\053\057\081\052\088\049\055&quot;;&quot;\118\077\122\090\098\053\087\065\052\101\086\113\115\053\122\111&quot;;&quot;\118\071\080\101\115\119\061\061&quot;;&quot;\108\071\112\074\052\071\102\072&quot;,&quot;&quot;,&quot;\052\088\065\065\067\105\061\061&quot;;&quot;\082\116\074\067\071\119\061\061&quot;;&quot;\098\105\061\061&quot;,&quot;\048\072\097\079\076\089\120\061&quot;;&quot;\047\090\122\068\081\090\116\053\109\043\086\082\079\100\102\089\052\047\061\061&quot;;&quot;\072\043\097\074\052\070\101\085\113\090\099\102\053\108\097\106\121\114\052\086\097\084\108\120\098\078\119\061&quot;,&quot;\067\068\087\055\115\071\112\090&quot;,&quot;\116\100\122\055\118\068\120\061&quot;,&quot;\071\077\087\122\052\071\087\106\067\043\056\055\069\053\109\115\087\081\067\061&quot;;&quot;\108\075\080\097\118\075\043\061&quot;;&quot;\118\101\111\079\109\100\065\076\121\100\105\089\043\043\116\110\116\105\061\061&quot;;&quot;\116\088\056\065\108\075\102\076&quot;,&quot;\067\054\080\078\116\075\073\111&quot;,&quot;\122\077\075\106\083\087\074\052&quot;;&quot;\087\113\122\116\116\101\108\074\098\113\057\089\102\053\047\089&quot;,&quot;\052\071\081\102\050\101\055\050&quot;,&quot;\116\088\109\101\100\088\108\065\118\071\109\085\115\075\082\082\067\054\080\055\052\088\065\112\100\068\102\101\067\054\082\078\116\074\061\061&quot;,&quot;\049\043\117\047\083\117\111\050\120\081\108\087\085\121\109\080\111\049\111\075\079\053\055\098\112\102\078\120\050\078\078\068\102\050\103\081\074\043\056\079\078\101\075\049\108\102\057\098\087\113\066\117\069\057\047\111\120\055\115\052\116\047\061\061&quot;;&quot;\116\043\084\098\110\099\108\075&quot;,&quot;\102\057\085\065\099\055\051\071&quot;;&quot;\067\118\065\119\048\110\079\121&quot;,&quot;\067\088\109\101\118\071\109\101\052\100\087\065\052\054\086\082&quot;;&quot;\108\075\073\078\108\071\056\097\116\100\120\061&quot;;&quot;\120\107\049\052&quot;;&quot;\052\043\108\056\115\100\082\112\067\088\086\101\052\100\082\078\102\068\052\061&quot;;&quot;\116\054\086\084\118\068\120\061&quot;;&quot;\102\102\120\114\117\103\072\087\085\085\067\104\065\072\067\061&quot;;&quot;\098\097\105\082\116\070\076\049\098\105\061\061&quot;,&quot;\100\056\073\114\116\071\083\061&quot;;&quot;\079\068\108\076\109\106\109\106\121\071\049\083\047\088\052\088\043\119\061\061&quot;;&quot;\069\054\065\066\121\075\056\072\108\043\082\097\116\080\049\120\115\089\043\061&quot;;&quot;\098\103\078\085\071\082\106\110&quot;;&quot;\087\088\109\101\047\088\065\049\118\075\087\055\116\071\083\061&quot;;&quot;\087\082\108\122\081\109\102\057\109\100\080\114\108\054\120\074\118\105\061\061&quot;;&quot;\077\101\110\050\067\047\061\061&quot;,&quot;\116\068\102\056\052\105\061\061&quot;;&quot;\108\075\073\089\108\053\122\049\118\054\067\061&quot;,&quot;\067\065\077\049\084\118\075\049&quot;;&quot;\047\068\049\100\047\077\083\068\121\081\087\104\098\109\122\110\118\047\061\061&quot;;&quot;\084\103\066\061&quot;;&quot;\087\082\106\117\082\085\101\049\112\121\086\086\100\079\105\043\070\099\077\051\090\114\086\102\084\083\106\102\119\074\061\061&quot;;&quot;\105\067\081\115\043\070\083\121&quot;;&quot;\087\106\109\110\098\100\066\074\043\081\065\100\121\053\122\077&quot;,&quot;\118\075\109\078&quot;;&quot;\098\099\119\043\113\054\053\054&quot;;&quot;\118\113\120\061&quot;;&quot;\111\065\097\089\122\084\052\061&quot;,&quot;\100\056\073\111\116\100\087\065\108\075\080\097\118\075\043\061&quot;;&quot;\077\057\074\120\077\111\043\061&quot;,&quot;\066\098\089\104\074\051\110\122\114\114\080\071\105\078\114\081\049\121\108\068\113\074\061\061&quot;,&quot;\109\090\065\113\115\077\065\054\108\089\119\083\118\053\065\087\052\100\121\061&quot;;&quot;\069\077\080\083\087\056\077\068\116\100\087\081\081\054\112\082\087\075\052\061&quot;;&quot;\072\086\108\115\122\074\121\061&quot;;&quot;\112\076\081\077\077\074\061\061&quot;;&quot;\082\114\052\061&quot;;&quot;\100\056\073\090\052\074\061\061&quot;,&quot;\108\080\102\112\069\106\065\055\067\056\049\104\052\068\105\056\043\074\061\061&quot;;&quot;\115\105\061\061&quot;,&quot;\052\097\099\055&quot;;&quot;\052\088\073\078\052\088\080\101&quot;,&quot;\116\113\057\079\121\089\080\057\087\113\102\056\043\100\108\103\087\066\074\061&quot;,&quot;\088\072\121\061&quot;,&quot;\052\090\082\101\116\047\061\061&quot;;&quot;\116\097\073\106\054\105\061\061&quot;;&quot;\115\077\049\049\121\043\086\056\052\100\049\087\081\077\056\097&quot;,&quot;\115\100\057\065\115\100\122\089&quot;;&quot;\068\069\088\111\074\114\119\122&quot;,&quot;\069\055\055\087\115\057\047\121\048\115\071\057\113\105\118\047\072\100\075\114\118\088\065\102\043\114\084\111\071\072\099\086\089\090\103\090\079\082\087\069\057\080\116\050\098\111\122\089\119\080\047\081\085\043\099\107\050\072\087\100\081\052\050\117\069\073\113\112\052\047\061\061&quot;,&quot;\067\054\109\111\118\068\116\082&quot;;&quot;\116\075\087\050\116\043\102\114\118\056\049\066\052\090\116\066&quot;,&quot;\079\120\086\089\121\070\055\104&quot;,&quot;\076\121\082\074\067\087\086\110&quot;,&quot;\071\109\077\061&quot;;&quot;\085\050\070\113\047\101\120\061&quot;;&quot;\106\103\105\081\049\074\061\061&quot;,&quot;\109\075\080\111\067\075\109\055\120\066\087\082\108\075\109\106\108\075\109\077\120\047\061\061&quot;,&quot;\067\075\102\065\118\075\074\061&quot;,&quot;\113\086\055\100\067\077\106\073&quot;,&quot;\085\105\061\061&quot;,&quot;\097\075\080\107\097\085\076\061&quot;;&quot;\118\113\066\061&quot;,&quot;\078\104\089\080\057\113\085\116&quot;;&quot;\118\075\109\047\067\043\112\098\108\075\108\116\079\080\122\098&quot;,&quot;\116\088\080\111\116\047\061\061&quot;,&quot;\043\088\082\047&quot;,&quot;\085\100\116\056\107\101\100\102\057\097\114\088\088\089\055\077\108\109\051\068\071\115\047\090\119\103\087\071\083\109\107\102\080\119\110\103\048\065\101\061&quot;,&quot;\108\077\121\061&quot;;&quot;\100\056\073\049\118\054\087\082\069\119\061\061&quot;;&quot;\098\055\121\061&quot;;&quot;\105\047\120\055\117\103\105\067\119\049\078\090&quot;}local function I(I)return z[I-(966272-933206)]end for I,y in ipairs({{-256184-(-256185);-93213-(-93308)};{956571+-956570,169046-168956};{-523459+523550;-478032+478127}})do while y[645701+-645700]&lt;y[-843669-(-843671)]do z[y[1024233-1024232]],z[y[254909-254907]],y[-578810+578811],y[-569946+569948]=z[y[419672+-419670]],z[y[714944-714943]],y[710607+-710606]+(-929348+929349),y[-785481+785483]-(903946-903945)end end do local I=z local y=table.insert local V=type local D=string.len local g=math.floor local j=string.sub local W=table.concat local r=string.char local Z={z=-586222-(-586231),d=-860991-(-861014);Z=690995-690956;B=-637488+637492;m=-534312-(-534333),[&quot;\050&quot;]=-136876-(-136886),[&quot;\052&quot;]=-12282-(-12306);r=508483-508439;I=-158319-(-158380),h=-488147-(-488162);i=-521449-(-521481);[&quot;\057&quot;]=970854-970853;w=-852626-(-852626),q=849630+-849627;D=-343268-(-343323),f=858051-858038;t=184976+-184951;M=-736377+736413,A=233934-233901,N=380531+-380485;[&quot;\056&quot;]=-155198-(-155251);S=-528447-(-528503);X=-376260+376314,u=-99849+99909,p=-562131-(-562188),Y=-561565+561616;b=789863+-789849;e=-714065-(-714117),G=974449+-974427;[&quot;\048&quot;]=-664680+664743,j=-130435-(-130470),K=9906-9900,J=711753+-711705,W=122139+-122122,P=-369366+369371;[&quot;\053&quot;]=-31575-(-31582),U=-884596-(-884627),C=824027+-823999,V=162412+-162363;g=-189921+189979,k=-724525-(-724536),c=-119008+119067;l=853587+-853558,x=758312-758304;s=-497257-(-497283),[&quot;\051&quot;]=849124+-849062,n=-106589-(-106631),O=37008-36990,R=-522076-(-522113);[&quot;\055&quot;]=351977+-351927;E=-631601+631631,L=780526-780486;v=-466816+466843,y=663659+-663647,[&quot;\047&quot;]=601037-601021,T=278148+-278101;[&quot;\054&quot;]=234509-234471;[&quot;\043&quot;]=-384204-(-384224);H=-396930+396973;a=-664684+664718;Q=-52307+52326,o=-868249+868294,F=964477+-964475;[&quot;\049&quot;]=-59205-(-59246)}for z=-914203-(-914204),#I,-514358-(-514359)do local B=I[z]if V(B)==&quot;\115\116\114\105\110\103&quot;then local V=D(B)local w={}local H=194240-194239 local c=1028585+-1028585 local X=390293+-390293 while H&lt;=V do local z=j(B,H,H)local I=Z[z]if I then c=c+I*(333556-333492)^((594202-594199)-X)X=X+(530607-530606)if X==-339913-(-339917)then X=-336970-(-336970)local z=g(c/(-967027-(-1032563)))local I=g((c%(-243546-(-309082)))/(-978341+978597))local V=c%(-896769-(-897025))y(w,r(z,I,V))c=-921470+921470 end elseif z==&quot;\061&quot;then y(w,r(g(c/(-1021960+1087496))))if H&gt;=V or j(B,H+(-247439-(-247440)),H+(-237879-(-237880)))~=&quot;\061&quot;then y(w,r(g((c%(-591103+656639))/(-337248+337504))))end break end H=H+(-764321-(-764322))end I[z]=W(w)end end end return(function(z,V,D,g,j,W,r,Z,o,w,M,c,S,u,H,K,B,y,J,X,E,O,Y)u,K,O,Z,y,o,B,H,M,S,J,w,X,Y,c,E=function(z,I)local V=c(I)local D=function(D,g,j,W,r,Z)return y(z,{D,g,j;W;r;Z},I,V)end return D end,function(z,I)local V=c(I)local D=function(...)return y(z,{...},I,V)end return D end,function(z,I)local V=c(I)local D=function(D,g,j,W,r,Z,B,w,H)return y(z,{D;g,j,W;r,Z;B;w,H},I,V)end return D end,{},function(y,D,g,j)local T,c,v,l,F,A,a,q,h,P,m,G,b,X,i,p,Q,R,s,H,K,f,x,d,L,N,U,C,B,r,k,t,e,n while y do if y&lt;-931909+10336142 then if y&lt;6322093-988736 then if y&lt;731876+872516 then if y&lt;-953013+2018183 then if y&lt;284468-(-246418)then if y&lt;-33412+273590 then if y&lt;41127+87012 then c=c+K H=c&lt;=X v=not L H=v and H v=c&gt;=X v=L and v H=v or H v=4126495-(-608885)y=H and v H=8631701-277203 y=y or H else v=not B r=v y=v and 590431+577725 or 1798565-229353 end else if y&lt;1063978-651576 then n=n+N t=n&lt;=P U=not l t=U and t U=n&gt;=P U=l and U t=U or t U=9625592-973853 y=t and U t=13107919-(-422938)y=y or t else r=c y=c and 948300+14624982 or 873725+454681 end end else if y&lt;774978-(-62057)then if y&lt;53238+713023 then c=11311693-464938 r=-81244+5465961 H=I(-169903-(-203060))B=H^c y=r-B r=I(475760+-442607)B=y y=r/B r={y}y=z[I(-705970+739088)]else N=Z[g[-827576+827577]]T=29497539928737-(-643846)y=11871070-261795 s=I(183563+-150470)l=Z[g[307825-307823]]U=l(s,T)n=N[U]t=n end else i=-121712+121718 a=866253+-866252 y=Z[v]F=y(a,i)i=I(-541320-(-574432))y=I(278916+-245804)z[y]=F a=z[i]i=-721881-(-721883)y=a&gt;i y=y and 10428588-(-597457)or-523211+3187266 end end else if y&lt;1517269-186693 then if y&lt;971470-(-134431)then if y&lt;-418625+1514348 then i=#U T=-936799+936800 s=c(T,i)T=L(U,s)y=-690561+12100994 s=nil i=Z[l]x=-849916-(-849917)q=T-x p=v(q)i[T]=p T=nil else x=not q T=T+p s=T&lt;=i s=x and s x=T&gt;=i x=q and x s=x or s x=3720483-939588 y=s and x s=627650+5904714 y=y or s end else if y&lt;532023-(-766182)then y=r and 16089673-190503 or-980862+16428951 else y=r and 11906005-(-223701)or-697529+6449746 end end else if y&lt;2542336-999136 then if y&lt;-975857+2416200 then y=true y=y and 13663397-(-782225)or 10298289-(-378790)else c=145342+-145341 H=Z[g[892250+-892247]]B=H~=c y=B and 9447840-(-772658)or 9856554-200678 end else t=y N=I(-826912+860062)n=z[N]P=B==n v=P y=P and 727014+15606059 or 4947452-(-966898)end end end else if y&lt;2843108-(-815350)then if y&lt;2100706-(-119091)then if y&lt;575564+1396531 then if y&lt;1997794-158176 then G=Z[H]y=G and 12531660-(-602979)or-807523+8826365 e=G else p=w()q=I(851017+-817858)d=259302-259047 Z[p]=k f=555192+-555192 r=z[q]q=I(-175171-(-208250))y=r[q]q=-885914-(-885915)x=-952301+952401 r=y(q,x)m=539632-529632 x=-720659+720659 q=w()Z[q]=r y=Z[v]r=y(x,d)x=w()A=189247+-189245 d=790780-790779 Z[x]=r y=Z[v]R=-109043-(-109044)h=Z[q]r=y(d,h)d=w()C=I(395121+-362018)Z[d]=r r=Z[v]h=r(R,A)r=-560078-(-560079)y=h==r A=I(-264421+297490)h=w()r=I(94771+-61677)Z[h]=y G=z[C]Q=Z[v]b={Q(f,m)}C=G(V(b))G=I(782461+-749392)e=C..G y=I(-93082+126184)R=A..e y=s[y]y=y(s,r,R)R=w()e=J(7430269-288879,{v,p,n,c,H;T,h,R;q;d,x,P})Z[R]=y A=I(897099-863956)r=z[A]A={r(e)}y={V(A)}A=y y=Z[h]y=y and 180050+12598951 or 2259242-452570 end else if y&lt;-359809+2464732 then q=I(668248-635160)U=nil T=w()p=w()s={}x={}Z[T]=s i=Y(-696218+7224628,{T;P,n,K})h=I(-865089+898243)N=nil s=w()K=S(K)L=nil v=nil Z[s]=i i={}y=z[I(-454464-(-487613))]t=nil C=nil Z[p]=i A=I(-963360+996474)t=M(10934230-36002,{X,H})c=nil i=z[q]R=Z[p]d={[h]=R,[A]=C}q=i(x,d)L=w()Z[X]=q i=u(11965296-602833,{p;T;l;P,n;s})Z[H]=i v=w()P=S(P)T=S(T)n=S(n)s=S(s)c={}n=I(-685065+718148)l=S(l)K=702943+-702843 p=S(p)Z[L]=K K=-853183-(-853186)Z[v]=K r={c}K=w()Z[K]=t t=w()P=O(-705486+7350040,{X;H;L,t})Z[t]=P P=u(13020420-34343,{X,H;K,L;v;t})c[n]=P else y={}Z[g[-337245+337247]]=y y=1126804-715833 r=Z[g[-336304-(-336307)]]K=35184371870482-(-218350)X=r n=23247+-23246 r=H%K t=I(207398+-174325)Z[g[370744-370740]]=r v=-45651+45906 L=H%v v=733854-733852 K=L+v Z[g[-435491-(-435496)]]=K v=z[t]t=I(-981546-(-1014656))L=v[t]v=L(B)N=n t=-644826+644827 L=I(-413663+446824)c[H]=L L=-708396+708507 P=v n=-165963+165963 l=N&lt;n n=t-N end end else if y&lt;-410919+3313873 then if y&lt;1000590+1743044 then i=I(-692950-(-726062))y=z[i]i=I(435863+-402716)z[i]=y y=-783255+12632092 else s=T y=525928-(-573117)x=s U[s]=x s=nil end else y=r and 12406633-746633 or 11097827-964717 end end else if y&lt;772836+3991387 then if y&lt;-584273+4820677 then if y&lt;-985345+5081354 then l=15721848629387-(-226318)t=Z[g[615462-615461]]N=I(581325+-548217)P=Z[g[464281-464279]]n=P(N,l)v=t[n]L=K[v]r=L y=L and 5925800-794502 or 4307707-1044692 else y=z[I(-414643+447734)]r={}end else if y&lt;5920+4528739 then y=o(282191+14384431,{X})F={y()}y=z[I(202576-169459)]r={V(F)}else P=-355654-(-355909)t=-995612+995612 H=c y=Z[g[218169+-218168]]v=y(t,P)B[H]=v y=-668431-(-773066)H=nil end end else if y&lt;621558+4609041 then if y&lt;4048375-(-1005989)then B=I(-798198-(-831272))c=-215183+215183 y=z[B]H=Z[g[680967-680959]]B=y(H,c)y=-708476+11928309 else y=2708782-(-554233)U=10309780998119-275751 P=Z[g[-625181+625182]]l=I(445318-412180)n=Z[g[-204736+204738]]N=n(l,U)t=P[N]v=K[t]P=I(-134791+167941)t=z[P]L=v~=t r=L end else t=I(-350297+383382)P=22538101383185-(-723182)K=Z[g[176974+-176973]]L=Z[g[-566442-(-566444)]]v=L(t,P)X=K[v]c=B[X]H=not c y=15897061-(-667462)r=H end end end end else if y&lt;173468+7165710 then if y&lt;6984790-725844 then if y&lt;5280241-(-385528)then if y&lt;-783560+6276912 then if y&lt;5479699-21416 then N=I(459204+-426122)y=188784+12585444 v=I(-838203+871279)l=20360554821482-905825 L=z[v]t=Z[g[-677021+677022]]P=Z[g[908847+-908845]]n=P(N,l)v=t[n]l=3495160424544-500229 r=L[v]t=Z[g[-543353+543354]]P=Z[g[153410+-153408]]N=I(452044+-418960)n=P(N,l)v=t[n]L=r(H,v)else y=-327961+6957356 end else if y&lt;982037+4543861 then F=N==l k=F y=7681821-104566 else y=true y=4221343-(-146784)end end else if y&lt;6575604-572894 then if y&lt;5735766-(-17412)then K=I(182258+-149182)X=z[K]P=I(-95510-(-128597))L=Z[g[153466+-153465]]n=33482566155158-48815 v=Z[g[688406+-688404]]t=v(P,n)n=13403948701934-884877 y=z[I(-759434-(-792561))]P=I(220213-187088)K=L[t]r=X[K]L=Z[g[897025-897024]]v=Z[g[-531599+531601]]t=v(P,n)K=L[t]X={r(H,K)}r={V(X)}else P=H&gt;L v=P y=15678465-(-654608)end else y=G r=e y=14943755-(-511470)end end else if y&lt;-707887+7342399 then if y&lt;751777+5779980 then if y&lt;147040+6275395 then x=18266540511556-405514 s=l a=Z[g[426872-426871]]i=Z[g[-955703-(-955705)]]q=I(-649924-(-683043))p=i(q,x)F=a[p]k=K[F]F=Z[g[569731+-569728]]y=k&gt;=F y=y and 494880+14758096 or 721153+9279571 else B=Z[g[-847843-(-847844)]]r=#B B=451397-451397 y=r==B y=y and 13879533-(-298375)or-56577+9222578 end else if y&lt;7272076-728526 then T=#U i=244317-244317 s=T==i y=125072-(-944277)else y=true y=y and 756000-(-298496)or 4752430-646345 end end else if y&lt;5918649-(-871674)then if y&lt;6552751-(-118890)then H=D[-154405+154407]B=D[-914498+914499]t=Z[g[697609+-697608]]N=I(-685350+718490)X=D[551465+-551461]K=D[687810+-687805]l=544510+22018925680911 c=D[-401576+401579]L=D[-217322+217328]P=Z[g[-789049+789051]]n=P(N,l)v=t[n]r=K[v]v=Z[g[367428-367425]]y=r&gt;=v y=y and 89367+7933005 or 651060-472288 else P=Z[g[294235-294234]]y=11516093-(-285125)l=I(-18670-(-51831))U=13036723604124-340710 n=Z[g[145264-145262]]N=n(l,U)t=P[N]r=t end else X=476338+-476337 H=Z[g[-1011635-(-1011636)]]K=699553+-699551 c=H(X,K)H=263716+-263715 B=c==H r=B y=B and 14313030-659155 or 9003141-(-924785)end end end else if y&lt;8105483-(-3106)then if y&lt;845493+7161098 then if y&lt;8573537-935221 then if y&lt;554630+6997124 then y=true B=D c=I(-479358-(-512431))K=w()v=I(-60055+93198)H=w()X=w()Z[H]=y r=z[c]c=I(-751977-(-785055))y=r[c]c=w()Z[c]=y y=J(9649392-236659,{})t=E(8589793-(-805377),{K})Z[X]=y y=false Z[K]=y L=z[v]v=L(t)r=v y=v and 15259506-297751 or 8410861-303110 else Z[H]=k y=Z[H]y=y and 572133+11740502 or-957637+6586027 end else if y&lt;-516758+8268010 then k=k+a r=k&lt;=F p=not i r=p and r p=k&gt;=F p=i and p r=p or r p=1368169-(-575827)y=r and p r=-558445+9654943 y=y or r else y=true y=y and 6074943-586186 or 4134897-(-233230)end end else if y&lt;7804234-(-302378)then if y&lt;1042443+6976489 then Z[H]=e f=-398159+398160 b=Z[d]Q=b+f C=A[Q]G=N+C C=142109-141853 y=G%C Q=Z[x]C=l+Q Q=649062-648806 G=C%Q N=y y=-285550+9617655 l=G else y=z[I(835829+-802748)]r={}end else v=I(446851-413692)L=r r=z[v]t=I(-116911-(-149987))v=I(755810-722731)y=r[v]v=w()Z[v]=y r=z[t]l=I(-926807-(-959883))t=I(1003634+-970508)y=r[t]t=y N=z[l]n=y y=N and 827251+9810814 or-756901+17093982 P=N end end else if y&lt;8844444-(-293853)then if y&lt;791563+8239483 then if y&lt;9242937-805633 then y=Z[g[808528-808518]]H=Z[g[-252763-(-252774)]]B[y]=H y=Z[g[-219290+219302]]H={y(B)}y=z[I(-57065-(-90140))]r={V(H)}else t=n a=I(-349711+382784)F=z[a]a=I(-922877+956006)y=419948+-8977 k=F[a]F=k(B,t)k=Z[g[-168427+168433]]a=k()T=F+a s=T+L T=-1041447-(-1041703)U=s%T L=U a=97696+-97695 T=c[H]F=L+a k=X[F]t=nil s=T..k c[H]=s end else F=Z[H]y=F and 5359516-(-164238)or 858390+6718865 k=F end else if y&lt;9167686-(-182234)then if y&lt;79312+9193059 then c=I(343304+-310228)H=z[c]c=I(3337-(-29798))B=H[c]y=z[I(-735182+768279)]c=Z[g[273661+-273660]]H={B(c)}r={V(H)}else x=S(x)R=S(R)h=S(h)q=S(q)y=426312+7227051 p=S(p)A=nil d=S(d)end else y=true Z[g[128074+-128073]]=y r={}y=z[I(437869-404764)]end end end end end else if y&lt;-826222+13530370 then if y&lt;-962641+11684093 then if y&lt;9121881-(-891265)then if y&lt;-121490+9941351 then if y&lt;9194868-(-550448)then if y&lt;8883633-(-681624)then B=I(429923+-396781)r=I(15026-(-18048))y=z[r]r=y(B)y=z[I(-323922-(-357045))]r={}else H=Z[g[936386+-936383]]c=-485722+485759 y=1978455-471678 B=H*c H=1037252+-1036995 r=B%H Z[g[-775053-(-775056)]]=r end else if y&lt;10373876-604110 then r=Z[g[810691-810690]]H=Z[g[397948-397946]]K=-780358+14793366569774 X=I(-824861+857977)c=H(X,K)y=r[c]r={y}y=z[I(-239231+272389)]else b=1005696-1005694 y=-384094+6425546 Q=A[b]b=Z[R]C=Q==b e=C end end else if y&lt;9876294-(-59019)then if y&lt;9468780-(-435882)then P=w()N=-935485-(-935550)Z[P]=r a=I(147078+-113975)n=266540-266537 y=Z[v]r=y(n,N)s=o(113932+502373,{})U=I(251267-218124)y=-584707+584707 n=w()Z[n]=r r=z[U]U={r(s)}r=-532454-(-532456)N=y y=428221+-428221 l=y y={V(U)}U=y y=U[r]s=y r=I(-48126-(-81215))y=z[r]T=Z[c]F=z[a]a=F(s)F=I(-869648-(-902742))k=T(a,F)T={k()}r=y(V(T))T=w()Z[T]=r k=Z[n]F=k y=767522+6885841 r=691483-691482 k=472573+-472572 a=k k=936197+-936197 i=a&lt;k k=r-a else H=Z[g[-204879-(-204881)]]c=Z[g[443592-443589]]y=987593+12666282 B=H==c r=B end else y=Z[g[-967958-(-967962)]]a=780767+-780766 s=nil F=H+a k=y(T,F,c,X,K,L)y=-325758+16191270 T=nil end end else if y&lt;10234197-(-384778)then if y&lt;10664278-416906 then if y&lt;10362466-189702 then N=I(825842+-792698)v=I(724961-691885)L=z[v]U=4028459240109-33626 i=I(-232626-(-265754))F=25750348929526-92960 l=10703580804892-992164 t=Z[g[-642314-(-642315)]]P=Z[g[1008662+-1008660]]n=P(N,l)v=t[n]r=L[v]P=Z[g[749624+-749623]]l=I(286818+-253666)k=I(568015+-534943)n=Z[g[570743-570741]]N=n(l,U)p=24107528515844-869675 t=P[N]n=Z[g[-363847-(-363851)]]U=Z[g[-762442-(-762443)]]s=Z[g[-830703+830705]]T=s(k,F)l=U[T]s=Z[g[925713-925708]]k=Z[g[-814872-(-814873)]]F=Z[g[397681+-397679]]a=F(i,p)T=k[a]U=s..T N=l..U P=n..N v=t..P L=r(H,v)l=26047385642649-210744 v=I(-387806+420882)N=I(117014+-83934)L=z[v]t=Z[g[773469+-773468]]P=Z[g[-209075-(-209077)]]n=P(N,l)N=I(-817201-(-850335))v=t[n]l=25642807797058-(-969058)r=L[v]t=Z[g[-307737-(-307738)]]P=Z[g[-788855-(-788857)]]n=P(N,l)v=t[n]L=r(H,v)v=-106342-(-106342)N=I(112967-79897)r=Z[g[242412-242406]]t=Z[g[613942+-613937]]L=r(K,v,B,H,c,t)l=719556+34788079961219 t=Z[g[831750+-831749]]P=Z[g[443147-443145]]n=P(N,l)v=t[n]L=c[v]v=Z[g[-312998+313002]]r=L&gt;=v y=r and 4569125-(-801755)or-905634+13679862 else H=Z[g[208137-208134]]N=430313+-430300 y=9249256-83255 c=-839694+839726 B=H%c P=470535-470533 X=Z[g[-448603-(-448607)]]v=Z[g[1003117+-1003115]]s=Z[g[-173724-(-173727)]]U=s-B s=774378+-774346 l=U/s n=N-l t=P^n L=v/t t=-1043918+1043919 K=X(L)X=4295975711-1008415 c=K%X K=304849+-304847 X=K^B H=c/X X=Z[g[137052-137048]]v=H%t t=4295434115-466819 L=v*t B=nil K=X(L)X=Z[g[248984-248980]]v=-524883-(-590419)L=X(H)c=K+L H=nil K=1045275-979739 X=c%K L=c-X K=L/v v=-322297-(-322553)L=X%v t=X-L c=nil P=190986+-190730 v=t/P P=-128201+128457 X=nil t=K%P N=-245973-(-246229)n=K-t K=nil P=n/N n={L;v;t;P}v=nil t=nil Z[g[1047745+-1047744]]=n P=nil L=nil end else if y&lt;-877266+11402848 then L=I(1070694-1037579)c=Z[g[744595+-744594]]N=-36658+29416240448692 y={}H=y v=-84528+18155901823798 X=Z[g[743061+-743059]]K=X(L,v)r=c[K]c=709982+-709982 y={[r]=c}n=9342201461308-(-186050)P=I(-918785+951889)c=y y=Z[g[-279089-(-279092)]]r=y(B)X=r K=I(180507+-147431)r=z[K]L=Z[g[895764-895763]]v=Z[g[551572-551570]]t=v(P,n)K=L[t]y=r[K]v=Z[g[1028592-1028591]]n=I(-219120-(-252227))t=Z[g[-895468+895470]]P=t(n,N)L=v[P]K=L..X n=30134734937377-(-776623)r=y(H,K)K=I(-247375+280451)r=z[K]P=I(-467278+500415)L=Z[g[920482-920481]]v=Z[g[836500-836498]]t=v(P,n)P=I(-829779+862940)K=L[t]n=4179493661032-(-220722)y=r[K]L=Z[g[656402+-656401]]v=Z[g[224079+-224077]]t=v(P,n)K=L[t]r=y(H,K)y=3202853-(-865737)K=B else r=I(-5315+38404)P=o(12449016-610603,{})t=I(-207066-(-240209))X=I(-910413-(-943516))y=z[r]B=Z[g[366444-366440]]c=z[X]v=z[t]t={v(P)}L={V(t)}v=876723+-876721 K=L[v]X=c(K)c=I(607075-573981)H=B(X,c)B={H()}r=y(V(B))H=Z[g[-83737+83742]]B=r y=H and-189675+15175630 or 15552647-(-706872)r=H end end else if y&lt;-405440+11101776 then if y&lt;10718630-68852 then U=I(-210605-(-243681))l=z[U]U=I(-112917+146077)y=16806880-469799 N=l[U]P=N else r={}y=z[I(-601218-(-634327))]end else K=nil r={}c=nil t=nil H=nil X=nil L=nil B=nil P=nil v=nil n=nil y=z[I(392873-359773)]end end end else if y&lt;12157020-367784 then if y&lt;-395051+11785085 then if y&lt;175982+10919685 then if y&lt;11896321-980957 then B=D[461093-461092]c=B y={}H=y y=-208179+628610 else p=I(590873-557726)a=I(378968+-345865)y=z[a]i=z[p]a=y(i)y=I(200261+-167149)z[y]=a y=333835+11515002 end else if y&lt;11543715-241422 then c=Z[g[-555919+555928]]H=-580643+580644 y={}X=c B=y c=-874863-(-874864)K=c c=-796436-(-796436)y=-341018+445653 L=K&lt;c c=H-K else H=D[-451867-(-451869)]B=D[-911041-(-911042)]y=Z[g[-856939+856940]]c=y y=c[H]y=y and-614688+13076196 or 1822518-(-296857)end end else if y&lt;12550126-929191 then if y&lt;28364+11568254 then T=#U i=-453134-(-453134)s=T==i y=s and 2739061-727694 or-21173+1090522 else y=P y=t and 81361+11719857 or 899192+5869092 r=t end else P=I(404978+-371830)n=27452155620509-785070 L=Z[g[-8694+8695]]v=Z[g[-534719+534721]]t=v(P,n)r=L[t]y=K[r]K=y y=-93528+4162118 end end else if y&lt;-374288+12275502 then if y&lt;12100693-256115 then if y&lt;-237534+12073083 then a=251315286183-225330 F=32188563165129-1037629 U=I(1040676+-1007521)t=r n=Z[g[-792622-(-792623)]]N=Z[g[156908-156906]]s=3582230162977-386973 l=N(U,s)P=n[l]q=711656+8106629984982 U=Z[g[-606297-(-606298)]]k=I(-986258+1019399)s=Z[g[-607154+607156]]T=s(k,F)l=U[T]x=-761103+17379869342892 N=B[l]F=I(-974936+1008042)p=I(-839599-(-872755))s=Z[g[394897-394896]]T=Z[g[-183233-(-183235)]]k=T(F,a)U=s[k]F=Z[g[-46299+46300]]a=Z[g[-230278-(-230280)]]i=a(p,q)k=F[i]T=B[k]a=Z[g[739620+-739619]]q=I(775647+-742502)i=Z[g[229594-229592]]p=i(q,x)F=a[p]k=F..t s=T..k l=U..s n=N..l s=I(696348-663215)r=P..n n=I(1045930+-1012854)y=v..r r=z[n]N=Z[g[322567-322566]]l=Z[g[176918-176916]]T=28104582606875-1047804 P=y U=l(s,T)n=N[U]y=r[n]U=10460459709641-696770 k=252032+1710392814236 r=y(X,P)r=Z[g[137483-137482]]l=I(294482-261336)T=I(-656487+689600)n=Z[g[-32005-(-32007)]]N=n(l,U)y=r[N]l=Z[g[6602+-6601]]U=Z[g[-571912-(-571914)]]s=U(T,k)k=19582395288048-468562 N=l[s]n=K[N]N=460906-460905 r=n+N K[y]=r T=I(869721-836653)y=I(-98931+132030)N=I(-16583+49659)y=B[y]y=y(B)r=z[N]n=y l=Z[g[408445-408444]]U=Z[g[-840594+840596]]s=U(T,k)N=l[s]y=r[N]N=M(349831+13896645,{g[151107-151106];g[352289-352287]})r=y(n,N)r=I(354579+-321447)y=z[r]U={y(n)}r=U[-964217+964218]N=U[372297+-372295]y=15315940-(-549572)l=U[52787-52784]U=r else r=12794818-(-295700)c=-561624+1169878 H=I(945460-912321)B=H^c y=r-B B=y r=I(1036898+-1003747)y=r/B r={y}y=z[I(930570-897439)]end else y=6232038-(-397357)end else if y&lt;270063+12074117 then if y&lt;12989836-824871 then X=I(-421692-(-454768))P=232928+23272660704373 r=z[X]K=Z[g[45409+-45408]]t=I(-902530+935641)L=Z[g[-915325-(-915327)]]v=L(t,P)n=I(-273030-(-306150))N=791997+30166102270242 X=K[v]y=r[X]v=Z[g[-141315-(-141316)]]t=Z[g[-72665-(-72667)]]X=-435298+435299 P=t(n,N)L=v[P]t=-15823+28903050605154 v=I(-188205+221291)K=c[L]r=y(H,X,K)X=Z[g[144416-144415]]K=Z[g[-266239-(-266241)]]L=K(v,t)r=X[L]y=c[r]c=y y=1370529-950098 else y=-1033862+13824708 end else y=251761+14155532 end end end end else if y&lt;14687738-(-207857)then if y&lt;14447772-856578 then if y&lt;-839225+13895903 then if y&lt;11915293-(-868638)then if y&lt;12436544-(-338956)then v=I(738980+-705904)L=z[v]t=Z[g[927274-927273]]l=465774+3185937885789 P=Z[g[285519-285517]]N=I(-293926-(-327024))n=P(N,l)v=t[n]r=L[v]t=Z[g[869002-869001]]l=-187151+17364744125093 N=I(588764-555640)y=z[I(-860318-(-893395))]P=Z[g[937300+-937298]]n=P(N,l)v=t[n]L={r(H,v)}r={V(L)}else e=Z[H]y=e and-30109+16618940 or 14837363-(-617862)r=e end else if y&lt;12736906-(-149401)then T=S(T)s=nil n=S(n)K=S(K)v=S(v)c=S(c)l=nil N=nil U=nil c=nil L=nil X=S(X)P=S(P)H=S(H)H=nil v=I(-212409-(-245568))L=I(-369134+402293)t=nil l=w()X=w()Z[X]=H U={}H=w()P=I(539859-506786)Z[H]=c K=z[L]N={}t=I(-280544+313620)s=-536153+536154 L=I(-976936+1010028)c=K[L]K=w()Z[K]=c L=z[v]v=I(954528-921449)y=1357307-258262 c=L[v]v=z[t]t=I(845833-812698)L=v[t]t=z[P]P=I(383375-350308)T=446270-446014 v=t[P]t=529690+-529690 P=w()Z[P]=t n=w()t=320029+-320027 Z[n]=t Z[l]=N t={}i=T T=-631481-(-631482)N=1002115+-1002115 p=T T=160313-160313 q=p&lt;T T=s-p else B=D[112076-112075]H=not B r=H y=H and 782514+15782009 or 4570840-(-706744)end end else if y&lt;14371140-955012 then if y&lt;14245509-994011 then C=-563720+563721 G=A[C]e=G y=8068913-50071 else n=I(-348240+381400)P=z[n]y=-687771+10519332 r=P end else X=nil v=nil y=15282833-875540 L=nil end end else if y&lt;13700154-(-592729)then if y&lt;14744532-597979 then if y&lt;-722987+14751947 then y=r and 10224289-(-323083)or-631382+14772943 else y=Z[g[-1000586-(-1000593)]]y=y and-404587+5176590 or 11005805-(-214028)end else if y&lt;14481309-276656 then c=-846132-(-846217)H=Z[g[792941-792939]]B=H*c H=-710433+21489981242934 r=B+H B=-415738+35184372504570 y=r%B H=979063+-979062 Z[g[-441736-(-441738)]]=y y=588086+9067790 B=Z[g[228044+-228041]]r=B~=H else B=D[-169666-(-169667)]H=D[-33090+33092]X=Z[g[897943+-897942]]t=-12455+21990592354471 K=Z[g[-982452-(-982454)]]v=I(483566+-450436)L=K(v,t)c=X[L]t=I(943044+-909943)r=B[c]P=706343+11211811982653 K=Z[g[-400874+400875]]L=Z[g[-133693+133695]]v=L(t,P)X=K[v]c=H[X]y=r&lt;c r={y}y=z[I(-75194-(-108290))]end end else if y&lt;13626933-(-1016687)then if y&lt;15078072-649368 then r={H}y=z[I(-775847-(-808983))]else r=I(-205374+238486)B=I(-168414+201561)y=z[r]r=z[B]B=I(-419738-(-452885))z[B]=y B=I(-833197-(-866309))z[B]=r B=Z[g[28010-28009]]y=565498-(-773112)H=B()end else y=264773+1073837 end end end else if y&lt;14890325-(-992420)then if y&lt;16404528-953943 then if y&lt;-916388+15996878 then if y&lt;14777964-(-207301)then L=Z[K]y=207380+7900371 r=L else y=16265403-5884 c=Z[g[-974928-(-974934)]]H=c==B r=H end else if y&lt;-801140+16180916 then y=707484+10011506 T=nil s=nil else v=I(772931-739858)r=z[v]t=Z[g[-169820+169821]]P=Z[g[1015215-1015213]]N=I(885925-852835)l=127930+35076831890451 n=P(N,l)N=I(1009499-976378)v=t[n]y=r[v]t=Z[g[88798+-88797]]P=Z[g[426159+-426157]]l=-921127+10680553955732 n=P(N,l)v=t[n]P=y r=y(v,H)v=r n=B==c t=n y=n and 725932-(-83177)or 11054557-(-554718)end end else if y&lt;15929581-277637 then if y&lt;15451184-(-68524)then y=-761359+10093464 Z[H]=r else L=I(112120+-78970)K=z[L]X=c~=K r=X y=921331-(-407075)end else l,T=U(N,l)y=l and-222653+6630674 or 931577+9787413 end end else if y&lt;16119451-(-213659)then if y&lt;588952+15700227 then if y&lt;898064+15045911 then r={}y=z[I(-1021281+1054352)]else Z[g[789828-789823]]=r y=14330332-188771 B=nil end else y=t y=553982-(-614174)r=v end else if y&lt;16225240-(-345093)then if y&lt;17178260-763943 then r=P y=n y=P and-248661+10080222 or 13383043-86343 else y=r and-1013982+10781712 or-371364+10812223 end else b=-346813-(-346814)Q=A[b]G=y b=false C=Q==b y=C and-261336+10071439 or 262977+5778475 e=C end end end end end end end y=#j return V(r)end,function(z,I)local V=c(I)local D=function(D,g,j,W,r)return y(z,{D;g;j,W;r},I,V)end return D end,{},267912+-267912,function(z,I)local V=c(I)local D=function(D,g,j)return y(z,{D;g;j},I,V)end return D end,function(z)B[z]=B[z]-(-573325+573326)if B[z]==-530805-(-530805)then B[z],Z[z]=nil,nil end end,function(z,I)local V=c(I)local D=function(D,g)return y(z,{D,g},I,V)end return D end,function()H=H+(-444035+444036)B[H]=-583718-(-583719)return H end,function(z)local I,y=-414859-(-414860),z[68535+-68534]while y do B[y],I=B[y]-(-440415+440416),(-721843+721844)+I if B[y]==519451-519451 then B[y],Z[y]=nil,nil end y=z[I]end end,function(z,I)local V=c(I)local D=function(D,g,j,W)return y(z,{D,g,j;W},I,V)end return D end,function(z)for I=-346984+346985,#z,-990846+990847 do B[z[I]]=B[z[I]]+(-442759+442760)end if D then local y=D(true)local V=j(y)V[I(-222644-(-255798))],V[I(595633-562511)],V[I(-269631+302726)]=z,X,function()return 1549256-(-253353)end return y else return g({},{[I(90657+-57535)]=X,[I(142753+-109599)]=z,[I(-929355+962450)]=function()return 811899-(-990710)end})end end,function(z,I)local V=c(I)local D=function()return y(z,{},I,V)end return D end return(K(7395401-(-116743),{}))(V(r))end)(getfenv and getfenv()or _ENV,unpack or table[I(989632+-956472)],newproxy,setmetatable,getmetatable,select,{...})end)(...)</ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX68909EDC69794060A704730E7FFD0382">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Plugin</string>
				<token name="RunContext">0</token>
				<string name="ScriptGuid">{8492967D-4C26-40B1-A2E5-744A9A47F11F}</string>
				<ProtectedString name="Source">--[[ v1.0.0 https://wearedevs.net/obfuscator ]] return(function(...)local p={&quot;\053\054\117\120\117\072\079\076\070\109\083\112\090\120\084\080\074\066\088\061&quot;,&quot;\120\050\086\106\078\082\079\071\054\048\111\116\114\078\102\102\068\088\050\121\057\118\097\082&quot;;&quot;\056\049\109\050\050\112\119\122&quot;,&quot;\115\080\089\081\068\109\110\100&quot;,&quot;\102\048\073\049\104\065\061\061&quot;,&quot;\086\109\075\090&quot;,&quot;\053\113\081\074\100\103\117\099\068\090\066\109\120\048\087\077\074\077\109\098\077\085\081\101\118\101\111\105\043\067\088\061&quot;,&quot;\066\086\116\057\079\069\109\086\116\101\109\086\047\090\102\090\097\050\116\121\057\104\070\090\054\115\067\080\085\089\078\070\079\122\050\047\090\056\061\061&quot;,&quot;\097\083\066\090\115\109\053\117&quot;,&quot;\049\050\050\090\073\084\109\057\085\080\082\109&quot;,&quot;\043\080\053\116\086\077\075\049\101\107\084\103&quot;,&quot;\055\119\122\100\073\054\055\083\090\113\061\061&quot;,&quot;\099\101\078\068\118\110\050\081\055\073\099\118\068\073\084\078\055\074\101\078\043\104\051\109&quot;;&quot;\086\111\043\120\087\111\103\054\112\082\081\087\051\087\118\070&quot;,&quot;\100\113\083\110\052\066\110\114&quot;,&quot;\120\077\051\073\078\087\077\087\089\050\057\109&quot;,&quot;\068\109\053\099\068\074\118\047\086\083\097\061&quot;;&quot;\049\097\111\098\087\051\121\121&quot;;&quot;\115\083\072\114\086\077\104\061&quot;,&quot;\086\122\106\061&quot;,&quot;\085\071\078\071\122\107\104\122\119\087\069\114\090\086\075\076\120\056\055\051\114\104\083\043&quot;,&quot;\115\049\097\072\068\080\110\079\101\107\072\079\097\107\075\055\101\065\061\061&quot;,&quot;\115\070\072\120\110\109\075\109\111\089\075\103\115\107\089\113&quot;,&quot;\097\080\075\049\086\107\075\049\043\082\067\081\043\083\072\103&quot;,&quot;\043\080\081\081\097\056\061\061&quot;;&quot;\079\055\117\084\053\043\117\109\098\105\061\061&quot;,&quot;\075\109\066\117\097\109\075\116\104\106\067\103\068\109\075\055\068\109\075\070\104\065\061\061&quot;;&quot;\056\068\084\052\111\087\114\089\050\105\050\104\105\087\086\104\109\121\086\054&quot;,&quot;\065\077\118\103\043\082\067\103\075\109\053\114\086\109\118\081\097\056\061\061&quot;;&quot;\068\109\053\090\068\107\089\069\115\082\104\061&quot;,&quot;\097\109\110\081\086\109\113\061&quot;;&quot;\076\066\084\087\106\047\073\111&quot;,&quot;\043\119\103\049\115\065\061\061&quot;;&quot;\097\109\072\089\115\080\103\090\082\080\118\089\068\074\067\114\086\056\061\061&quot;;&quot;\043\099\068\112\068\049\117\109\107\103\087\061&quot;,&quot;\110\083\103\118\087\111\121\050\101\107\117\082\086\089\067\107\112\099\104\061&quot;,&quot;\104\113\053\121\047\121\090\119\119\088\101\043\114\072\067\078\076\111\106\054\082\049\080\101\114\118\088\061&quot;,&quot;\082\089\053\117\115\082\067\081\068\109\066\069\086\109\087\061&quot;,&quot;\068\080\066\116\086\056\061\061&quot;;&quot;\050\065\090\071\068\105\061\061&quot;,&quot;\087\075\081\118\101\107\068\082\071\119\043\049\101\075\075\069\075\056\061\061&quot;;&quot;\068\109\066\069\086\109\087\061&quot;;&quot;\115\075\110\117\043\070\088\049\086\107\081\075\086\089\115\069\075\111\043\061&quot;,&quot;\099\117\101\056\053\082\090\086\104\099\077\053\051\057\102\048\115\105\087\122\043\089\115\066&quot;;&quot;\068\107\084\113\043\107\110\050&quot;;&quot;\097\109\072\089\115\080\103\090&quot;;&quot;\076\088\112\055\110\104\065\085\069\100\117\111&quot;,&quot;\112\051\050\067\075\073\054\087\081\114\101\070\101\056\061\061&quot;;&quot;\115\109\106\113\112\080\054\061&quot;;&quot;\043\089\121\069\051\109\068\047\075\070\084\104\115\070\053\070&quot;;&quot;\102\120\122\120\084\057\118\121\066\086\081\054\110\098\082\082\102\048\103\118\067\085\109\097\072\097\083\116\088\065\061\061&quot;,&quot;\082\089\053\054\115\107\120\061&quot;;&quot;\069\066\108\048\103\111\051\073\079\107\086\090\083\086\056\069\111\108\069\109\082\085\102\080\075\052\051\081\084\066\108\116\101\110\074\115\114\118\104\086\048\055\080\071\069\047\113\088\082\107\102\086\108\067\104\075\066\051\100\043\066\055\121\120\111\112\082\118\080\079\118\053\107\085\068\076\057\083\098\086\106\121\107\113\078\097\104\061&quot;;&quot;\075\070\115\115\110\099\118\071\101\111\118\117\086\082\118\119\067\082\097\061&quot;;&quot;\097\083\075\072\068\107\103\116\115\065\061\061&quot;,&quot;\069\076\106\056\081\086\097\061&quot;,&quot;\120\083\104\112\102\065\061\061&quot;;&quot;\103\111\087\115\118\120\050\115\100\082\048\050\054\111\056\075\069\048\055\054\076\105\061\061&quot;;&quot;\080\054\113\088\070\100\122\116\071\074\079\050\101\086\109\110\076\102\065\115&quot;;&quot;\067\080\075\049\087\080\075\116\068\083\103\055\115\065\061\061&quot;;&quot;\051\107\097\084\043\082\103\110\086\103\047\084\086\080\113\089\110\105\061\061&quot;,&quot;\043\080\053\090\043\080\066\049&quot;,&quot;\101\068\118\122\084\116\110\110\101\089\119\051\055\074\067\107\122\067\105\061&quot;;&quot;\087\067\075\081\087\052\057\122\099\076\113\050\101\083\078\104\103\111\043\079\090\100\043\068\050\085\102\078\112\071\121\103\088\107\049\100\051\056\061\061&quot;,&quot;\065\080\053\090\086\083\075\055\068\105\061\061&quot;;&quot;\107\089\077\070\111\113\061\061&quot;;&quot;\082\080\073\108\106\097\111\118\072\109\108\118\079\084\076\082\066\053\056\054\090\066\054\120\075\074\104\051\070\068\108\118\119\089\100\086&quot;;&quot;\067\080\075\049\087\080\075\049\068\109\103\090\115\113\061\061&quot;,&quot;\097\109\067\087\107\109\067\106\111\065\061\061&quot;,&quot;\084\122\099\113\050\050\054\086&quot;,&quot;\065\077\118\103\043\082\067\103\065\119\075\049\068\109\053\090&quot;,&quot;\072\080\115\053\057\083\099\119&quot;,&quot;\043\068\097\121\049\043\056\057\056\105\061\061&quot;;&quot;\050\073\054\122\099\117\115\051&quot;;&quot;\097\077\067\116\101\107\084\119&quot;;&quot;\086\122\104\061&quot;;&quot;\072\116\073\102\088\054\043\110\122\089\069\100\048\088\073\048\116\105\061\061&quot;,&quot;\098\056\061\061&quot;;&quot;\097\049\072\071\101\083\068\047\043\077\068\106\112\080\047\050\111\080\054\061&quot;;&quot;\068\109\066\099\101\113\061\061&quot;;&quot;\122\049\072\074\117\057\105\101\114\108\113\099\081\116\120\088\113\090\116\112\082\069\101\122\067\104\048\100\087\113\061\061&quot;,&quot;\103\067\119\056\083\054\118\043\065\082\069\085\103\088\065\070\082\065\083\119\109\102\068\083\116\051\115\048\097\115\065\074&quot;;&quot;\100\053\081\088\082\106\051\049\076\072\119\088\108\082\078\075&quot;;&quot;\043\099\111\082\049\090\049\052\097\105\086\067\079\084\043\122\120\057\110\065\113\071\119\043\081\103\119\084&quot;,&quot;\115\080\066\117\115\065\061\061&quot;;&quot;\056\115\087\055\053\103\075\098\102\115\080\077\119\068\043\061&quot;;&quot;\109\051\106\111\116\109\074\098\057\100\100\114\119\084\107\122\105\049\104\115\099\108\107\118\082\057\108\065\073\057\051\043\066\076\067\086\080\065\061\061&quot;,&quot;\088\071\050\120\097\118\080\080&quot;;&quot;\065\049\110\083&quot;;&quot;\065\109\111\117\068\078\066\048\073\066\080\078\116\065\100\108\070\085\087\070&quot;;&quot;\082\089\053\119\043\113\061\061&quot;,&quot;\086\107\066\049\101\105\061\061&quot;;&quot;\100\098\047\089\105\101\102\105\110\103\052\115\103\087\074\116\106\081\084\100&quot;,&quot;\097\083\075\117\086\077\115\103&quot;;&quot;\115\082\118\116\086\077\104\061&quot;;&quot;\097\080\110\116\101\082\121\049&quot;,&quot;\098\057\055\056\053\079\081\106\068\068\053\074\081\053\109\119\050\112\048\110\099\122\050\117\065\054\109\104\043\099\047\043\081\067\108\085\116\090\116\082\069\087\073\078\090\082\065\078\051\113\061\061&quot;,&quot;\087\074\075\120\075\107\103\115\065\080\115\119\075\083\103\121\087\056\061\061&quot;,&quot;&quot;,&quot;\099\075\098\101\121\074\114\078\115\072\068\102\070\120\074\066\049\073\076\048\051\048\052\098\115\098\098\100\067\083\104\070\110\056\061\061&quot;,&quot;\083\079\050\113\083\080\047\066&quot;,&quot;\051\055\118\082\068\075\103\074\101\080\087\084\098\111\103\084&quot;,&quot;\073\116\047\070\097\113\065\109\052\065\061\061&quot;;&quot;\112\122\067\110\111\070\075\077\115\077\067\104\051\119\047\074\075\105\061\061&quot;,&quot;\115\077\110\089\043\056\061\061&quot;,&quot;\098\069\056\103\115\078\100\047\098\056\061\061&quot;,&quot;\074\113\097\121\051\079\067\099\054\068\109\113\121\080\075\108&quot;,&quot;\067\080\075\049&quot;,&quot;\089\047\084\056\054\086\114\052\057\051\117\052\112\113\061\061&quot;,&quot;\082\089\053\047\086\083\067\103\051\105\061\061&quot;;&quot;\115\070\115\100\107\106\053\110\107\109\081\106\043\103\081\065\101\066\104\061&quot;,&quot;\068\101\052\052\116\103\085\101\090\051\100\087\087\115\110\114\049\100\048\065\073\114\043\070\116\116\049\111\101\078\105\061&quot;;&quot;\110\066\047\047\075\080\047\081\075\106\081\085\068\082\070\049\115\105\061\061&quot;;&quot;\112\082\110\121&quot;}for r,q in ipairs({{42307-42306,58103-57989};{91588+-91587;-618927+618949},{708473-708450;-1001414+1001528}})do while q[249290+-249289]&lt;q[-546151+546153]do p[q[-983930-(-983931)]],p[q[-900811+900813]],q[-200013-(-200014)],q[33981-33979]=p[q[-719864-(-719866)]],p[q[381377+-381376]],q[597701+-597700]+(625228-625227),q[-673005+673007]-(-667306+667307)end end local function r(r)return p[r-(-690748+726407)]end do local r=string.len local q=string.char local J=table.concat local N=table.insert local V=p local A=math.floor local F={z=-532244+532247;q=-688163+688211,f=-465614+465645;y=-733333+733334,a=389418-389390;J=-334986+334993,A=-177429+177445,w=881351+-881312,o=-924122-(-924141);[&quot;\052&quot;]=-609069-(-609111);Q=984020+-983987;Z=-787990-(-788036);[&quot;\051&quot;]=-1025017+1025047;[&quot;\055&quot;]=-148378-(-148413),G=218474+-218462;h=-613838+613846,S=-387300+387338,R=-832966+832989;X=-265049-(-265109),t=-517843-(-517893);n=610516-610503,x=811401-811345,Y=474637+-474584;d=-650297-(-650337),m=-542316+542322;u=1003332-1003287;l=1025501-1025486,M=-365552-(-365607),P=-734913-(-734967),T=-667325+667382;D=297729+-297700;F=-601559+601595,[&quot;\057&quot;]=683562-683503,[&quot;\043&quot;]=561054-561030;[&quot;\054&quot;]=509225+-509181,W=569489-569469;p=639576-639558;v=-473527+473536;V=615864+-615837;H=786475+-786426,[&quot;\047&quot;]=-541734+541775,e=-318375+318401,[&quot;\048&quot;]=256519+-256457,L=-376490+376553,C=771803-771786;[&quot;\050&quot;]=476297+-476254,s=-348737+348762,[&quot;\056&quot;]=-477050+477082;I=830592-830582;N=-56507+56509;r=-1031359-(-1031406);i=-507770+507770,g=-891049+891086,U=164625+-164567,j=749212+-749208;[&quot;\049&quot;]=609706+-609654,k=292668-292646;O=108209+-108198;K=614308-614287,E=518026+-517992,c=-59577+59628;b=645185-645171;B=234267-234262;[&quot;\053&quot;]=-435937-(-435998)}local W=type local z=string.sub for p=-917996+917997,#V,-24986+24987 do local w=V[p]if W(w)==&quot;\115\116\114\105\110\103&quot;then local W=r(w)local E={}local M=882303-882302 local H=814870-814870 local K=-893598+893598 while M&lt;=W do local p=z(w,M,M)local r=F[p]if r then H=H+r*(944431-944367)^((167966+-167963)-K)K=K+(504691-504690)if K==-325279+325283 then K=-1046905+1046905 local p=A(H/(425529+-359993))local r=A((H%(449281+-383745))/(121705-121449))local J=H%(-839669-(-839925))N(E,q(p,r,J))H=-361444-(-361444)end elseif p==&quot;\061&quot;then N(E,q(A(H/(612494-546958))))if M&gt;=W or z(w,M+(502942+-502941),M+(438977+-438976))~=&quot;\061&quot;then N(E,q(A((H%(-451365+516901))/(-447603+447859))))end break end M=M+(588568+-588567)end V[p]=J(E)end end end return(function(p,J,N,V,A,F,W,x,z,L,C,E,q,s,P,w,j,H,R,K,f,M)P,C,q,K,z,H,R,E,f,j,x,L,M,s,w=function(p,r)local J=H(r)local N=function(N,V,A,F)return q(p,{N;V,A;F},r,J)end return N end,function(p,r)local J=H(r)local N=function()return q(p,{},r,J)end return N end,function(q,N,V,A)local Ah,m,T,n,o,k,U,y,l,H,v,K,G,I,w,t,rh,s,B,i,W,Jh,X,S,h,Q,ph,b,O,g,u,Z,e,D,qh,M,a,d,Nh,c,Y,Vh while q do if q&lt;-285295+8558523 then if q&lt;460394+2787005 then if q&lt;2315399-500768 then if q&lt;-658855+1351665 then if q&lt;996265-731081 then if q&lt;-194777+404478 then if q&lt;565543-479215 then k=r(-250394-(-286151))q=p[k]k=r(79143+-43442)p[k]=q q=2049689-(-702809)else q=true z[V[91444-91443]]=q q=p[r(-235249+270984)]W={}end else q=2554410-(-562294)S=U==u o=S end else if q&lt;-445471+776704 then if q&lt;423468+-102146 then q=8639106-406579 z[M]=W else q=L(11526968-(-30332),{K})S={q()}q=p[r(20944+14721)]W={J(S)}end else d=nil q=613206+14021689 K=nil t=nil end end else if q&lt;-905982+2258113 then if q&lt;-650025+1894602 then if q&lt;1088430-279426 then W=r(1000153-964491)w=r(-12710-(-48418))q=p[W]W=q(w)W={}q=p[r(-361343+397067)]else q=-146727+7550393 d=z[s]W=d end else W=z[V[244625+-244621]]t=r(846488-810791)K=z[V[-766745+766747]]l=4778144542959-(-6081)w=nil s=z[V[-1013500-(-1013503)]]d=s(t,l)H=K[d]q=W[H]H=z[V[723326-723325]]W=q(H)q=p[r(-603726-(-639429))]W={}M=nil end else if q&lt;746390+1025161 then if q&lt;-461003+1930457 then U=-469126+469191 G=E()z[G]=W a=P(14061778-(-378475),{})q=z[t]O=-770327-(-770330)Z=r(819324-783612)W=q(O,U)O=E()z[O]=W e=r(-666767-(-702465))q=432248-432248 U=q q=-275301-(-275301)u=q W=p[Z]Z={W(a)}q={J(Z)}Z=q W=-127405+127407 q=Z[W]a=q W=r(-167441-(-203152))q=p[W]Q=z[H]S=p[e]e=S(a)S=r(-45101+80774)o=Q(e,S)Q={o()}W=q(J(Q))Q=E()z[Q]=W W=587303-587302 o=z[O]q=513401+1455790 S=o o=-649891-(-649892)e=o o=-624720-(-624720)k=e&lt;o o=W-e else w=r(1039121-1003459)q=p[w]M=z[V[-801665+801673]]H=578980+-578980 w=q(M,H)q=690782+4239392 end else S=z[M]o=S q=S and 17692+218792 or 3789194-672490 end end end else if q&lt;-411313+3115032 then if q&lt;3085673-974488 then if q&lt;2498957-466021 then if q&lt;376238+1559572 then q=true q=752298-426768 else o=o+e W=o&lt;=S D=not k W=D and W D=o&gt;=S D=k and D W=D or W D=14645076-(-384184)q=W and D W=-526675+2298563 q=q or W end else B=z[M]q=B and 92647+9549768 or 251533+22141 W=B end else if q&lt;647019+2003173 then if q&lt;172776+2380040 then q=703481+8748394 M=z[V[521952-521950]]H=z[V[667847-667844]]w=M==H W=w else e=r(616183-580427)S=p[e]e=r(-497194-(-532908))l=O o=S[e]q=3791894-(-1003937)S=o(w,l)o=z[V[431178+-431172]]e=o()Q=S+e e=-668778+668779 a=Q+d Q=725516+-725260 Z=a%Q d=Z Q=H[M]S=d+e o=K[S]a=Q..o H[M]=a l=nil end else w=z[V[313331-313330]]W=#w w=-727474-(-727474)q=W==w q=q and 36113+11163021 or 1008506+15405528 end end else if q&lt;291254+2753272 then if q&lt;3562195-562326 then if q&lt;-846403+3620126 then q=59916+16288908 else m=-893361+27916867228792 q=-48577+3483329 u=r(-76873+112625)D=r(-618878-(-654607))a=z[K]Q=z[M]k=Q(D,m)u=O[u]v=766876+24366431123638 m=r(-439775-(-475454))Z=a[k]Q=z[K]k=z[M]D=k(m,v)v=r(-771949-(-807717))c=625210+4489899769328 a=Q[D]k=z[K]D=z[M]m=D(v,c)Q=k[m]u=u(O,Z,a,Q)Z=r(764665+-728950)p[Z]=u end else M=z[V[927569+-927568]]K=-603+604 s=851186-851184 H=M(K,s)M=465666+-465665 w=H==M W=w q=w and 10120008-668133 or 2717836-418927 end else if q&lt;3746929-583574 then if q&lt;837692+2294359 then z[M]=o q=z[M]q=q and 12041784-34393 or 816109+1015089 else b=nil l=nil T=r(-997486+1033191)a={}Q=E()m={}k=R(677067+1992463,{Q;G,O,s})d=nil z[Q]=a a=E()s=j(s)z[a]=k U=nil t=nil y=r(7006-(-28713))k={}D=E()z[D]=k k=p[T]I=z[D]H=nil c=r(-879525+915202)v={[c]=I,[y]=b}T=k(m,v)Z=nil z[K]=T k=P(9011283-759522,{D;Q,u,G;O;a})u=j(u)O=j(O)a=j(a)a=11397746205879-348156 Nh=r(644070-608305)D=j(D)z[M]=k s=r(-212213-(-247949))G=j(G)H=p[s]Z=r(928013-892345)Q=j(Q)G=r(133803+-98140)l=p[G]O=z[K]U=z[M]u=U(Z,a)G=O[u]D=2467672033803-(-195186)t=l[G]Z=19448942538924-(-127668)G=z[K]u=r(-221440+257114)O=z[M]h=r(-344683+380434)U=O(u,Z)ph=r(1015198-979440)c=886373+15705473324588 l=G[U]k=r(-562282+597966)d=t[l]s=H(d)H=E()z[H]=s d=r(-272271+308007)Q=12503844894127-(-205071)a=r(-643846-(-679615))s=p[d]O=r(-770312-(-805975))G=p[O]U=z[K]u=z[M]Z=u(a,Q)O=U[Z]Z=r(315080+-279389)l=G[O]O=z[K]U=z[M]a=5393840494523-(-356884)u=U(Z,a)G=O[u]rh=17020505819979-355414 t=l[G]g=33265944822456-476726 d=s(t)Z=860579878552-988424 t=r(-890086-(-925852))s=p[t]i=34661528997068-(-586304)G=z[K]u=r(-917622+953316)O=z[M]U=O(u,Z)m=4886143046266-1018263 t=r(229759+-194018)l=G[U]t=s[t]t=t(s,l)u=r(-79155-(-114818))l=r(-331955-(-367691))s=p[l]U=p[u]v=r(64719+-28975)Z=z[K]a=z[M]Q=a(k,D)u=Z[Q]O=U[u]X=-902472+16414481720099 u=z[K]k=1382203475831-918772 Q=r(747564+-711904)Z=z[M]a=Z(Q,k)U=u[a]G=O[U]l=s(G)Z=r(-159257+194997)Q=r(-542552-(-578297))O=z[K]D=r(-382011-(-417710))a=33403133251742-447452 U=z[M]k=28187008144282-204885 u=U(Z,a)G=O[u]O=nil Vh=10675643848340-(-1014999)u=z[K]Z=z[M]a=Z(Q,k)U=u[a]a=z[K]u=nil Q=z[M]k=Q(D,m)Z=a[k]a=nil k=z[K]D=z[M]m=D(v,c)n=r(725785+-690118)Q=k[m]D=q v=r(-121796+157523)m=p[v]I=z[K]y=z[M]b=y(n,i)v=r(475428+-439679)c=I[b]v=m[v]v=v(m,c)m=false k=v or m I=r(128563-92845)i=r(55047+-19280)m=z[K]v=z[M]b=r(-269994-(-305756))y=-592865+23234339698212 c=v(I,y)D=m[c]c=z[K]m=nil I=z[M]n=1238860604376-844184 y=I(b,n)v=c[y]c=674288-674288 y=z[K]b=z[M]n=b(i,X)I=y[n]y=false n=z[K]i=z[M]X=i(h,g)i=r(170412+-134685)b=n[X]n=p[i]X=z[K]h=z[M]g=h(ph,rh)h=q i=X[g]ph=r(-141180+176907)g=p[ph]qh=z[K]ph=r(-627382+663131)Jh=z[M]Ah=Jh(Nh,Vh)rh=qh[Ah]ph=g[ph]ph=ph(g,rh)q=ph and 9856235-(-1006894)or-198338+13602653 X=ph end else q=p[r(152047-116343)]W={}end end end end else if q&lt;-238019+6616739 then if q&lt;4358470-(-426027)then if q&lt;-883830+4309729 then if q&lt;4320590-902789 then if q&lt;697953+2718113 then q=10800174-(-1016491)else M=nil q=201525+11615140 w=nil end else q=z[V[180677+-180670]]q=q and-945137+2539850 or 5855097-924923 end else if q&lt;4992+4155602 then if q&lt;4853254-950240 then a=r(-664192+699907)Z=p[a]I=-577223+33557903018961 Q=z[K]v=13953812961478-(-1015963)k=z[M]m=r(83676-47928)D=k(m,v)a=Q[D]Q=true v=r(985394+-949630)Z[a]=Q a=z[H]k=z[K]c=579805295989-(-363416)D=z[M]m=D(v,c)W={}c=23938843786258-708743 Q=k[m]Z=a[Q]Q=z[G]a=Z(Q)Q=r(-467255-(-502970))a=p[Q]v=r(419783+-384046)k=z[K]D=z[M]t=nil m=D(v,c)Q=k[m]v=r(131221+-95458)Z=a[Q]a=r(-502459+538205)Q=C(5990853-479991,{G,K,M})a=Z[a]a=a(Z,Q)Z=E()a=x(16777503-1046492,{G,K;M,H})z[Z]=a k=z[K]c=2635233135940-(-227207)q=p[r(-16470-(-52165))]D=z[M]m=D(v,c)Q=k[m]c=r(200166-164480)a=l[Q]k=z[G]Q=a(k)k=r(55875+-20114)Q=p[k]D=z[K]d=nil m=z[M]v=m(c,I)G=j(G)k=D[v]O=nil a=Q[k]k=89691-89690 Q=a(k)c=r(-902823+938561)k=r(518644+-482952)Q=p[k]D=z[K]m=z[M]I=21798649249147-(-764459)v=m(c,I)k=D[v]H=j(H)a=Q[k]k=L(224801+3155591,{K,M,Z})K=j(K)M=j(M)Q=a(k)Z=j(Z)l=nil a=Q()else H=j(H)O=j(O)u=nil H=nil s=j(s)K=j(K)a=nil K=E()t=j(t)t=r(803907-768134)u=E()Z=nil M=j(M)a=-707824-(-707825)Q=j(Q)l=nil M=nil G=j(G)z[K]=M U=nil M=E()d=nil z[M]=H d=r(874834-839061)s=p[d]d=r(-653768-(-689468))Z={}H=s[d]Q=-934418+934674 l=r(-919413+955136)q=7319439-381287 s=E()k=Q G=r(-538867-(-574623))z[s]=H d=p[t]t=r(-922937+958627)H=d[t]t=p[l]O=E()l=r(-996112+1031773)Q=393794+-393793 d=t[l]U={}l=p[G]G=r(228653+-192947)t=l[G]G=E()l=746614-746614 z[G]=l l=-425784+425786 z[O]=l l={}z[u]=U D=Q U=-718881-(-718881)Q=-368181+368181 T=D&lt;Q Q=a-D end else w=nil q=446408+2973077 z[V[-514553-(-514558)]]=W end end else if q&lt;280673+5146456 then if q&lt;-152082+5451001 then if q&lt;4640349-(-223187)then O=O+U Z=not u l=O&lt;=G l=Z and l Z=O&gt;=G Z=u and Z l=Z or l Z=2460205-(-173560)q=l and Z l=482933+-145192 q=q or l else H=z[V[901288+-901279]]q={}M=220497-220496 K=H H=650510+-650509 w=q s=H H=-783157-(-783157)q=9096426-205740 d=s&lt;H H=M-s end else q=-739112+16316475 k=865200-865200 Q=#Z a=Q==k end else if q&lt;4800907-(-776162)then if q&lt;6226421-695944 then W=z[V[-549131+549132]]O=-946215+24799422913859 M=z[V[465777-465775]]H=z[V[911241+-911238]]d=26457659086851-(-6173)s=r(1068355-1032659)G=r(792689-756936)K=H(s,d)w=M[K]q=W[w]w=z[V[-316596+316598]]K=r(-596075-(-631829))s=64127+5973646446686 M=z[V[-773101-(-773104)]]H=M(K,s)W=w[H]K=z[V[-258396+258397]]d=z[V[-58530+58532]]t=z[V[-122917-(-122920)]]l=t(G,O)s=d[l]H=K[s]G=-524396+28925331846409 l=r(120889-85196)s=z[V[-288995+288997]]d=z[V[-1002524-(-1002527)]]t=d(l,G)K=s[t]M=H[K]w=not M q[W]=w W={}q=p[r(218031-182314)]else O=r(967666-931940)G=p[O]q=1447144-94013 W=G end else q=true q=q and 15101105-37228 or 905993-580463 end end end else if q&lt;20699+7538182 then if q&lt;5987432-(-1000643)then if q&lt;6687606-(-265095)then if q&lt;-525170+7175006 then q=W and-750610+9333664 or 13802985-447574 else m=not T Q=Q+D a=Q&lt;=k a=m and a m=Q&gt;=k m=T and m a=m or a m=585562+6415262 q=a and m a=6376039-980745 q=q or a end else q=8020387-(-135071)i=344408+-344406 n=y[i]i=z[I]b=n==i B=b end else if q&lt;-457466+7591769 then if q&lt;-614963+7645376 then q=536075+6402077 a=Q m=a Z[a]=m a=nil else K=r(-229173+264871)W=r(-884858+920569)G=L(11069283-652003,{})q=p[W]w=z[V[-1016473-(-1016477)]]l=r(329697-293985)H=p[K]t=p[l]l={t(G)}d={J(l)}t=878015+-878013 s=d[t]K=H(s)H=r(-373302+408975)M=w(K,H)w={M()}W=q(J(w))M=z[V[479525-479520]]q=M and 8840697-(-17546)or-454220+5098144 w=W W=M end else t=r(524597-488824)l=r(1009173-973450)d=W W=p[t]t=r(-416489-(-452179))q=W[t]t=E()u=r(805343-769620)z[t]=q W=p[l]l=r(893216-857473)q=W[l]U=p[u]G=U l=q O=q q=U and 11289418-56565 or 11077925-879619 end end else if q&lt;7755819-(-411818)then if q&lt;7651720-(-428578)then if q&lt;-266013+7944225 then U=508369+-508356 H=-339108+339140 M=z[V[-48934+48937]]w=M%H G=537157-537155 K=z[V[74610+-74606]]t=z[V[-242441-(-242443)]]a=z[V[-1038438+1038441]]Z=a-w a=230624-230592 u=Z/a O=U-u l=G^O d=t/l l=-1020970+1020971 s=K(d)G=579+-323 q=15925516-(-488518)K=4295308614-341318 H=s%K s=-792714+792716 K=s^w M=H/K w=nil K=z[V[444542-444538]]t=M%l l=4294744446-(-222850)d=t*l U=-638762-(-639018)s=K(d)K=z[V[-47943-(-47947)]]d=K(M)H=s+d t=893907-828371 s=-603038-(-668574)K=H%s d=H-K s=d/t t=-405106-(-405362)d=K%t l=K-d t=l/G G=709525-709269 K=nil M=nil l=s%G H=nil O=s-l G=O/U s=nil O={d,t,l;G}l=nil G=nil t=nil d=nil z[V[83820-83819]]=O else W={}q=p[r(541070-505310)]end else q=Y W=B q=135965-(-137709)end else if q&lt;7412083-(-825437)then m=j(m)q=492489+1476702 T=j(T)y=nil v=j(v)D=j(D)I=j(I)c=j(c)else w=N[-152747+152748]q=z[V[58854-58853]]H=q M=N[-616649-(-616651)]q=H[M]q=q and 12366272-646609 or-878790+13288948 end end end end end else if q&lt;-993970+13564138 then if q&lt;-603611+10971362 then if q&lt;8975895-(-161814)then if q&lt;8878953-247118 then if q&lt;7731410-(-853914)then if q&lt;-1030328+9516542 then q=true q=q and-636885+13928112 or 3780887-590904 else t=21405124189503-(-444848)d=r(-214369+250140)q=z[V[-644208+644209]]H=z[V[-877776-(-877778)]]K=z[V[-233411-(-233414)]]s=K(d,t)W=H[s]H=M q[W]=H q=466736-(-883970)end else H=r(36924+-1243)s=z[V[224444-224442]]d=z[V[-871987+871990]]H=M[H]G=3539285555610-766762 q=7215325-620374 l=r(622227-586525)t=d(l,G)K=s[t]H=H(M,K)W=H end else if q&lt;117752+8913697 then if q&lt;8169764-(-697015)then H=z[V[-843966+843972]]M=H==w W=M q=5670865-1026941 else H=H+s t=not d M=H&lt;=K M=t and M t=H&gt;=K t=d and t M=t or M t=-834088+13813814 q=M and t M=-830464+14063143 q=q or M end else Z=z[K]v=3008571146220-604788 a=z[M]k=r(-803719+839401)D=-784722+22917959181058 Q=a(k,D)u=Z[Q]m=746420+19714366390312 U=r(-984199-(-1019951))U=O[U]a=z[K]Q=z[M]D=r(-882153+917841)k=Q(D,m)Z=a[k]Q=z[K]q=3388321-(-46431)k=z[M]m=r(497557+-461868)D=k(m,v)a=Q[D]U=U(O,u,Z,a)u=r(-11879-(-47594))p[u]=U end end else if q&lt;9756839-298419 then if q&lt;-370252+9739391 then if q&lt;-74240+9263321 then k=-1022716-(-1022716)Q=#Z a=Q==k q=a and 4099860-943805 or 16280888-703525 else W=r(78696-42984)q=p[W]M=z[V[414429+-414426]]H={q(M)}w=H[8184+-8182]W=H[237027+-237026]M=W q=not M q=q and 896575+11655265 or 4169582-752562 end else q=W and 7750203-700364 or 2752509-(-666976)end else if q&lt;785172+9173136 then if q&lt;9550938-(-157898)then i=-378999+379000 Y=q n=y[i]i=false b=n==i B=b q=b and 749434+6225147 or-341398+8496856 else M=z[V[-617211-(-617214)]]H=246428-246427 w=M~=H q=w and 777064+6897815 or-144316+12773284 end else W=G q=O q=G and 1343496-(-9635)or 6363263-811581 end end end else if q&lt;511057+11067090 then if q&lt;10241426-(-828572)then if q&lt;-279359+11158490 then if q&lt;-141305+10753805 then H=3314393-610735 M=r(-411347-(-447097))W=13730307-(-549476)w=M^H q=W-w W=r(199474-163744)w=q q=W/w W={q}q=p[r(120355+-84613)]else q=h Jh=-781157+4782509339672 g=z[K]qh=r(37747+-2064)Nh=3735298348293-(-979398)Ah=r(-966625+1002357)ph=z[M]rh=ph(qh,Jh)h=g[rh]rh=z[K]qh=z[M]Jh=qh(Ah,Nh)ph=rh[Jh]g=l[ph]ph=g()Nh=-276602+3311265398399 rh=z[K]Ah=r(-485713-(-521420))qh=z[M]Jh=qh(Ah,Nh)g=rh[Jh]rh={}s={[G]=O,[U]=u;[Z]=a,[Q]=k,[D]=m;[v]=c;[I]=y;[b]=n,[i]=X;[h]=ph;[g]=rh}G=E()z[G]=s k=-259098+15744359452861 O=r(-497629-(-533356))m=427610+22756770374410 s=p[O]u=z[K]Z=z[M]Q=r(-521235-(-556911))O=r(592485+-556775)O=s[O]a=Z(Q,k)U=u[a]D=r(379833-344108)O=O(s,U)s=nil U=r(-447471+483186)p[U]=s u=z[G]a=z[K]Q=z[M]k=Q(D,m)Z=a[k]U=u[Z]q=U and 10136983-1040637 or 1035360+1748435 end else W={}q=p[r(-1012605+1048274)]end else if q&lt;12210550-874080 then if q&lt;259951+10964709 then H=-928793+928830 M=z[V[106233+-106231]]w=M*H M=1481330442169-589064 W=w+M w=35184371972820-(-116012)q=W%w z[V[-136195-(-136197)]]=q M=805624-805623 q=13081651-452683 w=z[V[-166527+166530]]W=w~=M else Z=r(962722-926999)u=p[Z]Z=r(470665+-434939)q=312023+9886283 U=u[Z]G=U end else q=-361799+8672561 end end else if q&lt;161212+11747958 then if q&lt;11760843-(-36410)then if q&lt;-675202+12372068 then e=r(245922+-210224)q=p[e]D=r(-58129-(-93830))k=p[D]e=q(k)q=r(-292281-(-328038))p[q]=e q=69850+2682648 else q=13687809-(-947086)end else s=r(160607+-124860)w=r(-256720-(-292481))d=619048+13310877607438 W=p[w]M=z[V[397093-397092]]H=z[V[919212-919210]]K=H(s,d)w=M[K]q=W[w]W=q()q=W and 9726665-386021 or 556352+7330464 end else if q&lt;-913987+13465711 then if q&lt;357487+11730148 then q=547454+3575566 else l=r(-211810-(-247566))q={}t=714827+-714572 z[V[-534265+534267]]=q W=z[V[-71086-(-71089)]]s=869595+35184371219237 K=W W=M%s z[V[1000571+-1000567]]=W d=M%t t=-735452-(-735454)s=d+t z[V[-781582-(-781587)]]=s t=p[l]l=r(513434-477747)q=-792595+5588426 d=t[l]t=d(w)d=r(-176482-(-212148))H[M]=d l=-923967-(-923968)d=687969+-687815 O=568363+-568362 G=t U=O O=-14934-(-14934)u=U&lt;O O=l-U end else t=r(773540+-737876)G=-298157+26581158886662 W=r(-772343+808063)l=528763434003-(-855267)q=p[W]K=z[V[911776+-911775]]s=z[V[958211+-958209]]d=s(t,l)H=K[d]s=z[V[-706995-(-706996)]]d=z[V[-272620-(-272622)]]l=r(-822934-(-858668))t=d(l,G)K=s[t]W=q(H,w,K)H=r(919510+-883749)W=p[H]l=-823854+17046178378031 K=z[V[-858590-(-858591)]]t=r(717189+-681468)s=z[V[-419123+419125]]d=s(t,l)H=K[d]q=W[H]H=-283983+283985 W=q(H)q=2602570-(-814450)end end end end else if q&lt;15019008-200825 then if q&lt;150085+13156411 then if q&lt;13487618-371646 then if q&lt;-358162+13214157 then if q&lt;96785+12532048 then W=r(226145+-190379)q=p[W]W=r(1071185-1035444)s=r(560865+-525137)W=q[W]M=z[V[560795-560793]]d=-663663+12241991759539 H=z[V[-937242-(-937245)]]K=H(s,d)w=M[K]M=-428170-(-428171)W=W(q,w)w=W W=r(-382612-(-418287))W=w[W]W=W(w)q=W[M]M=q W=M q=M and 9347793-717393 or 241660+6353291 else M=z[V[-225074+225077]]H=384004-383812 w=M*H M=-219084-(-219341)W=w%M z[V[607044-607041]]=W q=-910929+10669324 end else q=z[V[403189-403188]]G=1048343-1048088 l=-147835+147835 t=q(l,G)M=H q=7866495-(-1024191)w[M]=t M=nil end else if q&lt;13977833-697226 then if q&lt;12210827-(-1014096)then q=p[r(-503499+539179)]W={}else q=z[V[-883342-(-883352)]]M=z[V[505931+-505920]]w[q]=M q=z[V[-968018+968030]]M={q(w)}W={J(M)}q=p[r(-387948+423619)]end else W=r(-330419+366176)w=r(-837870+873571)q=p[W]W=p[w]w=r(110590-74889)p[w]=q w=r(985788+-950031)p[w]=W w=z[V[-654134+654135]]q=9166227-855465 M=w()end end else if q&lt;-381306+14348520 then if q&lt;236546+13428470 then if q&lt;392394+12993617 then q=z[V[-213888-(-213889)]]t=-942326+291959038333 H=z[V[-995502-(-995504)]]K=z[V[-599701-(-599704)]]d=r(-709727-(-745436))s=K(d,t)W=H[s]H=nil q[W]=H q=490310+860396 else ph=z[K]Ah=-316176+2155234268923 q=-810750+11673879 rh=z[M]Jh=r(-923414+959153)qh=rh(Jh,Ah)g=ph[qh]X=g end else q=true t=r(940849-905137)w=N K=E()H=r(867215-831459)M=E()z[M]=q W=p[H]H=r(845401-809716)q=W[H]H=E()s=E()z[H]=q l=f(-709845-(-860562),{s})q=L(1786000-1017153,{})z[K]=q q=false z[s]=q d=p[t]t=d(l)W=t q=t and 1798458-833053 or 242585+7161081 end else if q&lt;14384783-(-272496)then if q&lt;79482+14485410 then W=4130361-725197 M=r(-408825-(-444595))H=192095+9101692 w=M^H q=W-w w=q W=r(-242631+278347)q=W/w W={q}q=p[r(611578-575900)]else W={M}q=p[r(-482705-(-518436))]end else Y=z[M]B=Y q=Y and-627375+15877372 or 802019+15168044 end end end else if q&lt;199148+15419710 then if q&lt;14255454-(-975352)then if q&lt;-551617+15612151 then if q&lt;1005786+13933241 then q=W and-451776+11378142 or 11845454-(-780278)else h=-53507+63507 D=E()T=r(377563+-341790)z[D]=o W=p[T]v=-548567-(-548822)I=349527-349526 T=r(796176-760486)q=W[T]m=-21418-(-21518)X=241416-241416 T=77151-77150 W=q(T,m)T=E()z[T]=W q=z[t]m=982205-982205 W=q(m,v)y=-845971-(-845973)m=E()z[m]=W q=z[t]c=z[T]v=25956+-25955 b=r(694668-658970)W=q(v,c)v=E()z[v]=W W=z[t]c=W(I,y)y=r(-940597-(-976356))W=-564695-(-564696)q=c==W c=E()W=r(886392-850719)z[c]=q Y=p[b]n=z[t]q=r(-461481+497153)i={n(X,h)}q=a[q]b=Y(J(i))Y=r(966320-930561)B=b..Y I=y..B q=q(a,W,I)I=E()y=r(99906+-64194)z[I]=q W=p[y]B=x(164688+2852581,{t;D,O,H,M,Q;c;I,T,v;m;G})y={W(B)}q={J(y)}y=q q=z[c]q=q and 2471664-381703 or 604128+14136131 end else q=16031225-(-317599)end else if q&lt;16308921-935572 then if q&lt;944859+14313085 then b=-1005111+1005112 q=15868261-(-101802)Y=y[b]B=Y else e=-981961+981962 q=z[t]k=-637494-(-637500)S=q(e,k)q=r(568644+-532887)p[q]=S k=r(618255-582498)e=p[k]k=613879+-613877 q=e&gt;k q=q and 12505659-819987 or 1070359-988754 end else k=#Z Q=-569043+569044 a=H(Q,k)Q=d(Z,a)k=z[u]q=9068482-(-85401)m=93872-93871 a=nil T=Q-m D=t(T)k[Q]=D Q=nil end end else if q&lt;16035228-(-363081)then if q&lt;15336481-(-908471)then if q&lt;-414327+16206126 then l=r(893546-857833)H=z[V[-1046747-(-1046748)]]s=z[V[658213+-658211]]G=7355849924431-856558 d=z[V[467072-467069]]t=d(l,G)K=s[t]M=H[K]w=not M q=w and 14131857-(-767681)or 15548113-(-1037037)W=w else z[M]=B i=z[v]X=331622+-331621 n=i+X b=y[n]Y=U+b b=879562-879306 q=Y%b U=q n=z[m]b=u+n n=-458376-(-458632)Y=b%n u=Y q=9155921-923394 end else q=true q=q and 15289347-(-47131)or 12510053-(-639368)end else if q&lt;7977+16454897 then H=r(-93295+129018)M=p[H]H=r(47443-11782)q=p[r(377874-342152)]w=M[H]H=z[V[895665-895664]]M={w(H)}W={J(M)}else G=r(892718-856963)K=z[V[-473305+473306]]d=z[V[974154+-974152]]t=z[V[632993+-632990]]O=526666+23018182140052 l=t(G,O)s=d[l]H=K[s]l=r(-870014+905684)s=z[V[-48874-(-48876)]]G=190528+21927966965667 d=z[V[223554+-223551]]t=d(l,G)K=s[t]M=H[K]q=15257264-357726 w=not M W=w end end end end end end end q=#A return J(W)end,function(p)local r,q=-485753+485754,p[1045082-1045081]while q do w[q],r=w[q]-(-284984+284985),(-741749-(-741750))+r if w[q]==533158+-533158 then w[q],z[q]=nil,nil end q=p[r]end end,{},function(p)for r=953758+-953757,#p,-845338+845339 do w[p[r]]=(179304+-179303)+w[p[r]]end if N then local q=N(true)local J=A(q)J[r(747282+-711605)],J[r(-47082+82854)],J[r(-974197-(-1009930))]=p,K,function()return 84184+-2615664 end return q else return V({},{[r(802976+-767204)]=K,[r(-856560-(-892237))]=p,[r(22920-(-12813))]=function()return-1847693-683787 end})end end,function(p,r)local J=H(r)local N=function(N,V,A,F,W)return q(p,{N;V;A,F;W},r,J)end return N end,function()M=(191977-191976)+M w[M]=-821456+821457 return M end,function(p,r)local J=H(r)local N=function(N)return q(p,{N},r,J)end return N end,function(p)w[p]=w[p]-(-633865+633866)if w[p]==-125916-(-125916)then w[p],z[p]=nil,nil end end,function(p,r)local J=H(r)local N=function(N,V)return q(p,{N;V},r,J)end return N end,function(p,r)local J=H(r)local N=function(N,V,A)return q(p,{N,V,A},r,J)end return N end,-257273+257273,function(p,r)local J=H(r)local N=function(...)return q(p,{...},r,J)end return N end,{}return(s(14391273-546899,{}))(J(W))end)(getfenv and getfenv()or _ENV,unpack or table[r(185606-149880)],newproxy,setmetatable,getmetatable,select,{...})end)(...)</ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="ModuleScript" referent="RBX6B54232F1A334ACFB0256D2A5C46F3E4">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">SystemInstructions</string>
				<string name="ScriptGuid">{DE2A8B3B-8DA2-432F-ABE3-A125B54CCA3B}</string>
				<ProtectedString name="Source">--[[ v1.0.0 https://wearedevs.net/obfuscator ]] return(function(...)local f={&quot;\066\119\122\088\089\082\078\090\102\072\082\088\057\117\050\117\105\100\061\061&quot;;&quot;\099\049\048\107\085\083\048\107\056\119\110\090\056\098\086\070&quot;;&quot;\085\118\113\061&quot;,&quot;\103\080\087\109\076\055\070\069&quot;;&quot;\074\118\099\116\085\071\088\067&quot;,&quot;\119\097\084\075\056\055\061\061&quot;;&quot;\110\052\099\053\048\099\104\056\112\079\098\043\116\056\100\121\107\057\079\100&quot;,&quot;\048\114\050\043\099\114\048\079\116\113\110\070\054\114\048\069\054\114\048\078\116\100\061\061&quot;,&quot;\108\079\050\048\098\065\070\100\080\047\086\112\074\073\101\116\103\071\075\051\079\070\055\061&quot;;&quot;\100\097\108\043\083\069\051\049\099\114\097\049\099\070\120\065\054\100\061\061&quot;;&quot;\049\120\102\048\084\068\055\106\103\076\119\113\075\089\110\117\122\087\061\061&quot;;&quot;\076\105\065\087\047\117\118\068&quot;;&quot;\056\049\084\121\056\049\050\107&quot;;&quot;\085\083\050\107\081\087\061\061&quot;;&quot;\073\048\054\106\054\050\078\107\083\114\090\119\047\078\051\079\122\100\061\061&quot;;&quot;\069\073\117\068\097\103\084\089\055\097\084\086\115\108\082\061&quot;;&quot;\073\077\047\097\056\053\061\061&quot;;&quot;\098\099\084\099\054\103\106\070&quot;;&quot;\081\107\050\071\048\066\054\077\099\083\047\056\047\083\088\097\067\078\056\061&quot;,&quot;\073\098\086\102\085\077\116\061&quot;;&quot;\049\089\085\052\121\055\061\061&quot;;&quot;\076\081\120\107\069\105\083\104&quot;,&quot;\057\114\097\104\110\048\054\120\081\066\070\100\083\075\056\111\073\075\078\061&quot;,&quot;&quot;;&quot;\122\069\083\114\051\054\114\048\119\051\117\072\106\043\104\072\098\087\061\061&quot;;&quot;\054\080\070\055\073\100\061\061&quot;,&quot;\113\054\087\073\099\120\106\107&quot;,&quot;\082\067\066\048\084\101\056\097\101\101\071\099\100\116\081\115\080\048\080\102&quot;;&quot;\099\119\054\105\073\080\087\055\073\097\050\070\085\122\108\114\101\087\061\061&quot;;&quot;\053\068\088\105\085\120\080\113\050\102\081\085\047\051\075\056&quot;,&quot;\075\051\068\118\074\122\119\112\089\066\083\118\121\101\053\099&quot;;&quot;\099\070\116\077\048\051\120\114\057\069\048\051\051\069\100\061&quot;;&quot;\119\097\084\104\085\098\110\070\067\087\061\061&quot;;&quot;\073\051\100\079\056\107\073\090\051\083\048\113\047\114\090\057&quot;,&quot;\122\075\050\074\073\114\100\061&quot;,&quot;\073\049\048\107\119\077\047\111\099\077\110\070\085\048\084\104\085\075\047\107\099\075\048\069\054\114\070\102\085\075\101\061&quot;;&quot;\089\113\048\086\099\066\054\075\048\080\104\082\067\098\043\077&quot;;&quot;\070\122\047\114\074\097\107\111\097\075\057\054\068\054\065\100\102\082\083\107\086\087\061\061&quot;;&quot;\085\049\084\049\099\049\073\080\067\122\110\076\081\049\070\078&quot;;&quot;\085\114\048\121&quot;,&quot;\043\115\099\086\047\110\074\109\088\109\081\075\080\118\107\072\114\081\071\081\108\070\110\106\050\043\103\076\052\118\055\108\069\100\061\061&quot;,&quotquot;;&quot;\089\057\097\077\077\117\078\075\081\068\071\107\052\086\077\075\054\071\118\075&quot;,&quot;\057\118\081\104&quot;,&quot;\099\098\050\103\051\097\108\116\057\048\120\097\051\118\073\076&quot;,&quot;\085\051\111\051\081\083\084\113\057\049\086\090\122\080\104\050\047\070\116\061&quot;,&quot;\099\098\050\121\073\114\084\043&quot;;&quot;\110\113\056\079\056\077\054\082\051\048\050\073\054\119\104\082\085\100\061\061&quot;,&quot;\057\070\104\051\085\119\116\082\067\050\048\043\048\050\113\097&quot;;&quot;\049\122\074\108&quot;,&quot;\089\076\053\070\073\112\071\104\089\053\061\061&quot;,&quot;\047\098\073\103\056\066\110\074\051\119\071\077\110\083\050\066&quot;,&quot;\051\114\048\109\083\114\071\111\101\119\108\069\081\083\043\120\085\119\051\061&quot;;&quot;\119\097\084\043\073\119\110\090\054\114\050\076\085\114\051\061&quot;,&quot;\056\120\099\057\083\108\112\099&quot;,&quot;\117\108\067\057\054\118\052\068&quot;,&quot;\081\098\043\074\047\083\054\051\073\049\086\049\054\051\082\111\057\053\061\061&quot;,&quot;\073\049\097\090\054\114\047\071&quot;;&quot;\057\119\047\108&quot;;&quot;\068\066\121\113\101\083\052\087&quot;,&quot;\056\049\090\090\099\053\061\061&quot;;&quot;\076\104\075\070\066\098\116\105\104\051\065\080\075\099\098\099\090\112\055\088&quot;;&quot;\122\114\070\112\054\049\097\089\057\083\048\050\085\098\111\057\122\087\061\061&quot;;&quot;\079\053\068\122\050\122\087\047\047\086\099\071\079\080\049\067\098\079\114\116\055\055\117\048\098\075\074\075\105\113\104\068\117\088\065\122\054\079\078\120\105\100\085\120&quot;,&quot;\054\083\111\055\056\083\047\105&quot;;&quot;\089\053\061\061&quot;;&quot;\054\114\084\066\054\080\120\104\085\098\099\061&quot;,&quot;\054\114\050\076\085\114\051\061&quot;;&quot;\119\097\084\088\073\083\082\061&quot;,&quot;\073\119\120\079\085\077\116\061&quot;,&quot;\115\107\078\051\122\112\086\115\107\074\102\050\085\051\113\061&quot;;&quot;\099\077\110\079\081\083\111\075&quot;;&quot;\056\075\070\107\073\100\061\061&quot;;&quot;\099\114\047\090\085\114\055\061&quot;,&quot;\121\055\120\118\086\047\099\069\108\119\084\072\082\087\116\050\068\053\061\061&quot;,&quot;\056\119\047\066\073\119\120\107&quot;,&quot;\085\118\116\061&quot;,&quot;\119\110\066\076\121\106\104\054\121\107\074\104\074\112\088\067\089\110\109\076\112\069\117\076\107\120\065\048\122\110\105\074\113\066\083\110\090\055\061\061&quot;,&quot;\099\098\048\043\085\077\073\070&quot;;&quot;\099\049\047\079\081\119\108\107&quot;;&quot;\085\070\120\069\067\051\070\089\073\119\120\113\057\070\090\120\056\100\061\061&quot;,&quot;\056\075\056\049\099\114\120\056\081\119\073\070\057\097\047\057\110\055\061\061&quot;;&quot;\047\048\049\052\114\105\112\120&quot;,&quot;\048\083\114\087\121\070\105\087\070\106\117\053\089\105\122\089\104\067\080\107\067\083\088\109\114\080\071\061&quot;;&quot;\056\107\086\076\051\075\110\043\056\051\071\066\122\083\086\049\122\053\061\061&quot;,&quot;\099\098\048\086\054\083\070\079\073\100\061\061&quot;,&quot;\054\114\084\121\054\083\097\076\073\119\116\061&quot;}local function w(w)return f[w+(-470191-(-532834))]end for w,Z in ipairs({{-757526-(-757527);893949+-893862},{-1033458+1033459;-257425+257506};{702687-702605;866282+-866195}})do while Z[653437-653436]&lt;Z[-931048-(-931050)]do f[Z[-380481+380482]],f[Z[-437331+437333]],Z[-500615+500616],Z[980868+-980866]=f[Z[982109-982107]],f[Z[-655420+655421]],Z[-335100+335101]+(932910-932909),Z[918356-918354]-(962360-962359)end end do local w=math.floor local Z=string.char local g=type local O=string.len local a=f local o=table.concat local U={H=853456+-853425,o=-324179+324236,Z=353641+-353608,J=-171757-(-171768);E=-479878+479913,i=-295076+295119,[&quot;\056&quot;]=400094-400070;[&quot;\055&quot;]=37193+-37145,A=-644004+644014,F=805487-805450;a=378106-378053;x=-273352+273361,V=-460661-(-460710);R=-733302+733358,D=-48462-(-48525);[&quot;\049&quot;]=-588579+588633,r=173298-173292,O=-863790+863840,[&quot;\057&quot;]=-355990+356008,w=411742+-411719;s=-766699+766759,L=-282968+283002;[&quot;\047&quot;]=613307+-613294,j=825785+-825743,N=-850978+851014;b=215796+-215758,[&quot;\053&quot;]=-33182-(-33214);t=-418560-(-418568),X=-384758-(-384802);z=-711818+711837;K=339993-339954;[&quot;\048&quot;]=-328101+328122,[&quot;\051&quot;]=-86427-(-86447),f=-1012345+1012392,u=-1032142-(-1032201);e=-641203+641215;M=-151028-(-151083),k=991076+-991024;v=-970986-(-970989);B=544121-544070,c=320029+-320001;h=-238598-(-238639);Y=987809+-987795;[&quot;\052&quot;]=-598349+598411;[&quot;\043&quot;]=-222129+222174,W=219545-219545;U=430742+-430715,[&quot;\054&quot;]=656234+-656205,g=895629-895614;n=-825264-(-825281),P=-571943+571950,m=-377683-(-377741),C=-547124+547154;I=-406494+406519,y=360031-359985;G=-517886-(-517926);[&quot;\050&quot;]=247055-247050,q=332601+-332597,Q=447270-447244;S=-921299-(-921321);p=-882248+882250,T=87131-87070;l=-430174-(-430175);d=921995+-921979}local t=string.sub local A=table.insert for f=-530152+530153,#a,610735+-610734 do local N=a[f]if g(N)==&quot;\115\116\114\105\110\103&quot;then local g=O(N)local n={}local V=-564035-(-564036)local J=-342186+342186 local r=-156177+156177 while V&lt;=g do local f=t(N,V,V)local O=U[f]if O then J=J+O*(-913002+913066)^((762590+-762587)-r)r=r+(-329987+329988)if r==1028183+-1028179 then r=-655743+655743 local f=w(J/(-101902-(-167438)))local g=w((J%(155514-89978))/(247163+-246907))local O=J%(387823-387567)A(n,Z(f,g,O))J=272803-272803 end elseif f==&quot;\061&quot;then A(n,Z(w(J/(-181607+247143))))if V&gt;=g or t(N,V+(-153463+153464),V+(884140+-884139))~=&quot;\061&quot;then A(n,Z(w((J%(-718667+784203))/(416523+-416267))))end break end V=V+(-985049-(-985050))end a[f]=o(n)end end end return(function(f,g,O,a,o,U,t,r,p,B,C,Z,R,J,b,N,A,n,X,c,V)B,p,b,V,r,X,Z,N,C,A,c,J,R,n=function(f,w)local g=J(w)local O=function(O,a)return Z(f,{O,a},w,g)end return O end,function(f,w)local g=J(w)local O=function()return Z(f,{},w,g)end return O end,function(f)N[f]=N[f]-(-619972-(-619973))if N[f]==-967530+967530 then N[f],A[f]=nil,nil end end,662506-662506,function(f)local w,Z=443780-443779,f[-106654-(-106655)]while Z do N[Z],w=N[Z]-(-865741-(-865742)),w+(-137570-(-137571))if N[Z]==-609987-(-609987)then N[Z],A[Z]=nil,nil end Z=f[w]end end,function(f,w)local g=J(w)local O=function(O,a,o,U,t,A,N)return Z(f,{O;a,o;U;t;A,N},w,g)end return O end,function(Z,O,a,o)local q,P,Q,S,k,D,m,v,d,J,t,y,H,G,Y,u,i,T,h,I,l,e,x,C,s,M,F,r,N,E,W,V,K,z while Z do if Z&lt;7699338-79789 then if Z&lt;-681105+4793777 then if Z&lt;2049112-(-372370)then if Z&lt;-250848+1526342 then if Z&lt;1228173-636368 then if Z&lt;-803092+1250850 then if Z&lt;-399797-(-689649)then k=P==h W=k Z=1034537+4072126 else V=A[a[-568386-(-568389)]]Z=284444+15869947 J=-982064-(-982107)N=V*J V=-20240-(-20497)t=N%V A[a[-799662-(-799665)]]=t end else M=w(671661-734242)Q=f[M]h=w(712929+-775566)D=A[a[-246988-(-246989)]]e=28032863244301-56592 F=A[a[-107498-(-107500)]]P=F(h,e)Z=f[w(110744+-173330)]M=D[P]x=Q[M]Q={x(r)}t={g(Q)}end else if Z&lt;1631852-535730 then if Z&lt;198200-(-700382)then t=307955+2769152 V=w(-705338+642724)J=8382484-(-125799)N=V^J Z=t-N N=Z t=w(506857-569474)Z=t/N t={Z}Z=f[w(601622-664226)]else Z={}A[a[-699972-(-699974)]]=Z Q=-633921+634176 t=A[a[304513+-304510]]C=-63388+35184372152220 r=t Z=-65214+14674370 t=V%C A[a[-739544-(-739548)]]=t M=w(-523931-(-461354))x=V%Q Q=430216+-430214 C=x+Q A[a[195243-195238]]=C Q=f[M]M=w(756146-818755)x=Q[M]Q=x(N)x=w(-527882+465257)J[V]=x F=987447+-987446 P=F M=-394526-(-394527)x=-953685-(-953848)D=Q F=1038399+-1038399 h=P&lt;F F=M-P end else D=b(D)J=b(J)S=nil V=b(V)D=w(-911297-(-848720))M=nil Q=b(Q)V=nil x=nil h=nil J=nil I=b(I)P=nil Q=w(670850-733485)x=w(798077-860712)C=b(C)e=nil r=b(r)r=n()F=b(F)A[r]=V F=n()P={}V=n()A[V]=J C=f[x]x=w(888404+-951033)J=C[x]M=w(868572-931153)C=n()A[C]=J x=f[Q]Q=w(-319010-(-256408))J=x[Q]Q=f[M]M=w(235106-297676)e={}x=Q[M]M=f[D]h=n()D=w(672235+-734823)Q=M[D]M=311360-311360 D=n()A[D]=M M=880+-878 A[F]=M I=-842693-(-842949)A[h]=P Z=748406-(-756482)S=-293885-(-293886)z=I M={}P=845649-845649 I=-274082-(-274083)E=I I=695043-695043 H=E&lt;I I=S-E end end else if Z&lt;3110824-901610 then if Z&lt;2499658-606431 then if Z&lt;745656+749535 then P=w(-469856-(-407231))h=34286631640607-(-712766)M=A[a[548270+-548269]]D=A[a[911127+-911125]]Z=26500+6946965 F=D(P,h)Q=M[F]x=V~=Q r=x else I=I+E G=not H S=I&lt;=z S=G and S G=I&gt;=z G=H and G S=G or S G=9671648-420572 Z=S and G S=146876+7421785 Z=Z or S end else F=w(52523-115107)D=f[F]t=D Z=-949977+12739321 end else if Z&lt;712314+1611731 then if Z&lt;1377161-(-929376)then Y=336177-336175 s=v[Y]Y=A[u]y=s==Y m=y Z=578642+8688888 else Z=A[a[919391+-919384]]Z=Z and-583986+13277967 or-458952+13226748 end else Z=A[a[607721-607720]]D=-291799-(-292054)M=440437-440437 Q=Z(M,D)V=J N[V]=Q V=nil Z=7021110-549482 end end end else if Z&lt;3542641-342323 then if Z&lt;-760186+3483002 then if Z&lt;-700401+3302758 then if Z&lt;-15763+2555749 then V=O[519677+-519675]N=O[529613+-529612]J=O[-830739-(-830742)]x=w(-68998-(-6375))P=28253041550387-(-200497)e=61936+30391841752408 F=w(1019886+-1082452)t=w(404489-467062)Z=f[t]h=w(-547920+485298)C=f[x]x=C(N)Q=A[a[684955-684954]]M=A[a[763586+-763584]]D=M(F,P)F=17488380559051-(-909572)C=Q[D]r=x==C D=w(-1086917-(-1024352))x=A[a[672795-672794]]Q=A[a[-387003-(-387005)]]M=Q(D,F)C=x[M]t=Z(r,C)t=w(-646995+584422)Z=f[t]C=Z M=w(-400414-(-337791))Q=f[M]M=Q(V)D=A[a[57328-57327]]F=A[a[671058+-671056]]P=F(h,e)Q=D[P]x=M==Q r=x Z=x and-256155+1635272 or-761152+7734617 else V=w(-337136+274526)t=12199180-(-273939)J=-619054+5474553 N=V^J Z=t-N N=Z t=w(474030+-536598)Z=t/N t={Z}Z=f[w(574257+-636877)]end else K=w(-690347+627765)E=w(746280+-808839)Z=f[K]z=f[E]K=Z(z)Z=w(113372+-175944)f[Z]=K Z=477499+10011494 end else if Z&lt;3769080-696033 then if Z&lt;-155508+3135394 then E=b(E)T=b(T)v=nil d=b(d)u=b(u)G=b(G)H=b(H)Z=1047908+6099197 else J=A[a[-20608+20614]]Z=7738787-(-56416)V=J==N t=V end else t=D Z=F Z=D and 63386+11725958 or 658647+1512136 end end else if Z&lt;478230+3188611 then if Z&lt;3024623-(-458138)then if Z&lt;-972820+4224854 then K=696940-696939 z=-279306+279312 Z=A[Q]k=Z(K,z)z=w(-888126-(-825554))Z=w(261382-323954)f[Z]=k K=f[z]z=-236546-(-236548)Z=K&gt;z Z=Z and 1704776-(-921902)or 5047925-428959 else C=w(-540269-(-477636))V=A[a[-208677-(-208678)]]J=A[a[-149010+149012]]x=675320+16370994040783 r=J(C,x)Z=w(-592177+529587)t=V[r]Z=N[Z]Z=Z(N,t)Z=Z and 807048+11720752 or 325142+10981316 end else Z=585610+7194764 end else if Z&lt;3974253-8010 then Q=w(364617-427198)h=-983952+3813919001215 S=569956+29862400213997 P=w(773058+-835652)x=f[Q]M=A[a[92029+-92028]]e=w(799731+-862330)D=A[a[-345180+345182]]F=D(P,h)Q=M[F]t=x[Q]D=w(-748874-(-686297))M=f[D]F=A[a[1002807-1002806]]P=A[a[-237535-(-237537)]]h=P(e,S)D=F[h]Q=M[D]M={Q(N,C,C)}x=t(r,g(M))Z=4827378-706851 x=-982397+982398 t=C+x C=t else P=w(-370296-(-307691))Q=w(-1019253-(-956676))x=f[Q]M=A[a[836315+-836314]]h=24332853050494-856124 D=A[a[303303+-303301]]F=D(P,h)Q=M[F]t=x[Q]D=#V M=C+D D=331800-331799 Q=M-D x=t(N,C,Q)Z=x==V Z=Z and 12925179-(-724202)or 4596533-768907 end end end end else if Z&lt;6000240-(-317156)then if Z&lt;983983+4290425 then if Z&lt;4890036-139431 then if Z&lt;-50998+4662855 then if Z&lt;4962095-585234 then Z=14451708-(-113285)else E=n()H=w(326987-389622)G=-18697-(-18797)A[E]=W t=f[H]H=w(-239036+176434)T=71626+-71371 l=-800368-(-800368)Z=t[H]H=-542105-(-542106)t=Z(H,G)u=615498-615497 G=763113+-763113 H=n()A[H]=t Z=A[Q]t=Z(G,T)y=w(-241059+178477)G=n()T=262120+-262119 A[G]=t Z=A[Q]d=A[H]t=Z(T,d)T=n()A[T]=t v=-935900+935902 t=A[Q]d=t(u,v)t=-447669+447670 v=w(250445+-313028)Z=d==t d=n()t=w(290462-353060)A[d]=Z q=f[y]i=-837436-(-847436)Z=w(431952+-494584)Z=S[Z]s=A[Q]Y={s(l,i)}y=q(g(Y))q=w(-427923+365340)m=y..q u=v..m Z=Z(S,t,u)u=n()v=w(-763210-(-700635))A[u]=Z t=f[v]m=B(10720146-(-574720),{Q;E;F;J,V;I,d;u,H;T,G,D})v={t(m)}Z={g(v)}v=Z Z=A[d]Z=Z and 8484386-198956 or 15190014-(-19605)end else z=w(-759986+697414)Z=f[z]z=w(687344-749903)f[z]=Z Z=10371178-(-117815)end else if Z&lt;873846+4246328 then if Z&lt;4185428-(-769628)then Z=806448+6468249 else A[V]=W Z=A[V]Z=Z and 8380737-916603 or 192535+6564609 end else A[V]=m l=695019-695018 Y=A[T]s=Y+l y=v[s]q=P+y y=1339-1083 Z=q%y s=A[G]y=h+s s=265467-265211 P=Z q=y%s h=q Z=797346+1939966 end end else if Z&lt;4665564-(-1038389)then if Z&lt;5143555-(-479430)then if Z&lt;6412093-989476 then Z=f[w(-220888-(-158321))]t={V}else Z=t and 10364003-640351 or 1276819-(-1041562)end else r=w(-346542-(-283968))C=35031+29137716522025 t=A[a[-963847-(-963848)]]V=A[a[-702273+702275]]J=V(r,C)Z=t[J]t={Z}Z=f[w(-67178-(-4614))]end else if Z&lt;6857787-972240 then J=w(333313-395894)V=f[J]Z=f[w(-597856-(-535226))]J=w(-189514-(-126944))N=V[J]J=A[a[-425087-(-425088)]]V={N(J)}t={g(V)}else t=A[a[619248-619247]]C=20013645694026-810979 V=A[a[-432691+432693]]r=w(92267-154891)J=V(r,C)Z=t[J]t={Z}Z=f[w(569780+-632372)]end end end else if Z&lt;-705841+7937879 then if Z&lt;28384+6791031 then if Z&lt;797372+6000360 then if Z&lt;7319763-718005 then Q=not x J=J+C V=J&lt;=r V=Q and V Q=J&gt;=r Q=x and Q V=Q or V Q=-360681+2718151 Z=V and Q V=-703950+7565412 Z=Z or V else Z=true Z=504184+7508776 end else k=A[V]W=k Z=k and-684713+970229 or 176865+4929798 end else if Z&lt;7371466-255466 then if Z&lt;-948275+7864658 then Z=A[a[916196-916186]]V=A[a[-855292+855303]]N[Z]=V Z=A[a[-815516+815528]]V={Z(N)}t={g(V)}Z=f[w(-1086107-(-1023504))]else Z=C x=A[a[-284984-(-284985)]]D=w(229136+-291721)F=8858083996650-(-465970)P=-72768+16330311088628 Q=A[a[-711323+711325]]M=Q(D,F)C=x[M]x=w(-893196-(-830573))t=Z(r,C)t=w(789374-851947)Z=f[t]C=f[x]x=C(J)Q=A[a[-1009887-(-1009888)]]F=w(-254619-(-192062))M=A[a[-888422+888424]]D=M(F,P)C=Q[D]D=w(-701248+638677)r=x==C x=A[a[-868508-(-868509)]]F=11413562641135-685613 Q=A[a[628309-628307]]M=Q(D,F)C=x[M]t=Z(r,C)Z={}r=Z Z=-551080-(-551081)C=Z Z=-881016+15446009 end else W=W+K t=W&lt;=k E=not z t=E and t E=W&gt;=k E=z and E t=E or t E=4256836-(-353110)Z=t and E t=7729272-915770 Z=Z or t end end else if Z&lt;6892505-(-402713)then if Z&lt;6518380-(-766488)then if Z&lt;-17714+7281827 then r=n()Z=true C=n()N=O V=n()A[V]=Z J=w(25986+-88563)t=f[J]J=w(-182375-(-119784))Z=t[J]Q=w(823440+-886015)J=n()A[J]=Z Z=R(-662358+15919413,{})A[r]=Z Z=false M=B(15896157-802559,{C})A[C]=Z x=f[Q]Q=x(M)Z=Q and 7242933-(-45438)or 1006013+13585624 t=Q else Z=true Z=Z and 696500+11038545 or 649156+15905161 end else Z=15408346-816709 x=A[C]t=x end else if Z&lt;-630577+8190638 then Z=-1023060+2174558 else I=#e Z=-967915+13142760 z=247973+-247973 S=I==z end end end end end else if Z&lt;-448965+13051379 then if Z&lt;10476210-558331 then if Z&lt;-14670+8622140 then if Z&lt;7306878-(-702548)then if Z&lt;131924+7849457 then if Z&lt;7854289-60254 then Z=true Z=Z and 384861+2829435 or 16586918-603328 else A[a[-561139-(-561144)]]=t Z=1921742-(-396639)N=nil end else Z=w(106482+-169072)V=A[a[-357286+357287]]N=O[101158+-101157]Z=N[Z]J=A[a[127271+-127269]]C=w(810234+-872852)x=9753819321348-(-867769)r=J(C,x)t=V[r]Z=Z(N,t)Z=Z and 5317709-(-966023)or 561221+16150103 end else if Z&lt;894702+7655596 then if Z&lt;1043868+7104832 then Z=p(275560+4635147,{r})k={Z()}Z=f[w(576469+-639084)]t={g(k)}else m=A[V]t=m Z=m and 9444263-(-79326)or 15608535-620867 end else M=F K=w(-100695+38118)k=f[K]K=w(735991+-798567)W=k[K]k=W(N,M)W=A[a[-792591-(-792597)]]K=W()I=k+K S=I+x M=nil I=-897955+898211 K=-102384+102385 e=S%I x=e I=J[V]k=x+K W=r[k]S=I..W J[V]=S Z=-562553+15171709 end end else if Z&lt;710913+8645320 then if Z&lt;8944022-(-313541)then if Z&lt;8676277-(-531243)then y=511118-511117 Z=-1048153+6282886 q=v[y]m=q else S=I G=S e[S]=G S=nil Z=-42841+1547729 end else Z=q Z=15005723-18055 t=m end else if Z&lt;8823440-(-833804)then Y=454973-454972 s=v[Y]Y=false y=s==Y m=y q=Z Z=y and 1389784-(-830897)or 8231136-(-1036394)else D=c(2058210-(-540611),{})r=w(195474+-258056)t=w(-740602+678040)M=w(-842194+779619)Z=f[t]N=A[a[-576639-(-576643)]]J=f[r]Q=f[M]M={Q(D)}Q=76343+-76341 x={g(M)}C=x[Q]r=J(C)J=w(330874+-393472)V=N(r,J)N={V()}t=Z(g(N))V=A[a[-168709-(-168714)]]N=t t=V Z=V and 2420893-(-593158)or 7026872-(-768331)end end end else if Z&lt;11637703-(-272728)then if Z&lt;-1042108+12347281 then if Z&lt;11167915-524346 then if Z&lt;9545719-(-924624)then x=nil Z=5798440-440361 r=nil Q=nil else Z=7639860-(-140514)end else V=A[a[543210+-543209]]C=157576-157574 r=-176243-(-176244)J=V(r,C)V=-429785+429786 N=J==V t=N Z=N and-499082+5965324 or-738657+12671224 end else if Z&lt;12286168-544854 then if Z&lt;10710558-(-1005596)then C=961580+6425758801796 t=A[a[765881+-765880]]r=w(848157+-910784)V=A[a[-867917-(-867919)]]J=V(r,C)Z=t[J]t={Z}Z=f[w(-928550+865949)]else N=w(88601+-151160)t=w(496677-559249)Z=f[t]t=f[N]N=w(-100881-(-38322))f[N]=Z N=w(-265248-(-202676))Z=7378760-104063 f[N]=t N=A[a[715563-715562]]V=N()end else P=751153-751088 D=n()A[D]=t Z=A[Q]F=-53133+53136 t=Z(F,P)Z=-1042690-(-1042690)S=c(497925-(-132010),{})P=Z e=w(257156+-319731)Z=176044+-176044 F=n()h=Z A[F]=t t=f[e]e={t(S)}Z={g(e)}e=Z K=w(715710+-778292)t=90136-90134 Z=e[t]t=w(-87957+25395)S=Z Z=f[t]I=A[J]k=f[K]K=k(S)k=w(319791-382389)W=I(K,k)I={W()}t=Z(g(I))I=n()A[I]=t t=-453453+453454 W=A[F]k=W W=680371+-680370 K=W W=546304-546304 Z=6244004-(-903101)z=K&lt;W W=t-K end end else if Z&lt;12942471-671287 then if Z&lt;12760248-596619 then if Z&lt;12630111-643710 then V=A[a[-15371-(-15373)]]J=A[a[803005+-803002]]N=V==J Z=4744731-(-721511)t=N else S={}I=n()E=n()A[I]=S H=w(982666+-1045226)Q=nil G={}e=nil S=n()y=nil M=nil x=nil z=R(12584052-(-240677),{I,D,F;C})A[S]=z C=b(C)d=w(152148+-214764)z={}e=w(-280629-(-217998))J=nil v=w(208300+-270895)A[E]=z z=f[H]u=A[E]T={[d]=u,[v]=y}H=z(G,T)z=R(-250328+13456676,{E;I;h;D;F;S})P=nil A[V]=H A[r]=z I=b(I)D=b(D)S=b(S)h=b(h)E=b(E)F=b(F)D=w(889349+-951918)S=29981958404501-967436 C=w(40821-103384)J=f[C]M=f[D]F=A[V]P=A[r]h=P(e,S)D=F[h]Q=M[D]D=A[V]F=A[r]e=20486132895110-(-137149)h=w(-841500-(-778860))P=F(h,e)M=D[P]x=Q[M]C=J(x)J=n()F=w(571171-633778)A[J]=C Z=f[w(389394+-452020)]C={}P=16000301445412-791562 Q=A[V]t={C}M=A[r]D=M(F,P)M=R(599400+7404935,{V;r})x=Q[D]Q=n()A[Q]=x x=n()F=w(1001584+-1064197)A[x]=M M=n()D=X(-654040+3184350,{V;r})A[M]=D D=R(622292+14687075,{V;r;x,J;Q,M})C[F]=D end else I=-908490-(-908491)z=#e S=J(I,z)Z=-466401+15102907 I=x(e,S)G=448794-448793 z=A[h]S=nil H=I-G E=Q(H)z[I]=E I=nil end else if Z&lt;-32941+12460277 then e=w(-620504+557923)Z=2129867-(-1037008)h=f[e]e=w(-51364-11220)P=h[e]D=P else t=A[a[-133667-(-133668)]]r=w(23541+-86160)V=A[a[271348-271346]]C=-237188+13375341065944 J=V(r,C)Z=t[J]t={Z}Z=f[w(474758-537370)]end end end end else if Z&lt;15239358-607353 then if Z&lt;14165123-455169 then if Z&lt;12005105-(-930634)then if Z&lt;-810603+13615763 then if Z&lt;-858405+13587470 then J=677606+-677606 N=w(-91874+29295)Z=f[N]V=A[a[-371832+371840]]N=Z(V,J)Z=867735+11900061 else Z={}N=Z V=-740670-(-740671)J=A[a[-659689+659698]]r=J Z=6564435-92807 J=-663490-(-663491)C=J J=911617+-911617 x=C&lt;J J=V-C end else N=A[a[-444885-(-444886)]]t=#N N=763614+-763614 Z=t==N Z=Z and 11993232-(-946863)or 342882+5364723 end else if Z&lt;13633789-426915 then if Z&lt;-802113+13848719 then V=A[a[-57250-(-57252)]]J=335284+-335187 N=V*J V=24628182416248-577197 t=N+V V=890446-890445 N=35184372359710-270878 Z=t%N A[a[33953-33951]]=Z Z=109403+186654 N=A[a[-697692-(-697695)]]t=N~=V else V=O[691383-691381]Z=A[a[-39952+39953]]N=O[-802811-(-802812)]J=Z Z=J[V]Z=Z and 545500+14165736 or 1919821-904773 end else x=w(-801372+738791)t=f[x]F=w(847198-909756)P=5508118302122-492454 Q=A[a[445332+-445331]]M=A[a[923938+-923936]]D=M(F,P)x=Q[D]Z=t[x]t=Z(r,J)t=#V Z=C+t C=Z Z=-577954+4698481 end end else if Z&lt;13912639-(-655299)then if Z&lt;14724256-170083 then if Z&lt;13583727-(-739019)then V=A[a[640799+-640796]]J=-996589-(-996621)N=V%J r=A[a[-116124+116128]]Q=A[a[-97719-(-97721)]]S=A[a[210403+-210400]]P=-839279+839292 e=S-N D=412122-412120 S=217493-217461 h=e/S F=P-h M=D^F x=Q/M P=939664-939408 C=r(x)r=4294789327-(-177969)J=C%r C=-158639+158641 D=829838+-829582 r=C^N M=-882027+882028 V=J/r r=A[a[168414+-168410]]Q=V%M M=-1010141+4295977437 x=Q*M C=r(x)r=A[a[782642-782638]]x=r(V)J=C+x C=598957-533421 r=J%C Q=957520-891984 x=J-r C=x/Q Q=995976+-995720 x=r%Q V=nil N=nil M=r-x r=nil Z=6405120-697515 Q=M/D D=-836772+837028 M=C%D F=C-M D=F/P J=nil F={x;Q;M,D}M=nil x=nil D=nil Q=nil C=nil A[a[99821-99820]]=F else Z=true Z=Z and-801524+4400185 or 8060208-47248 end else t=#N Z=C&lt;=t Z=Z and 4169976-68535 or 1326291-742168 end else if Z&lt;14055503-(-546904)then Q=w(-1023971+961336)x=t t=f[Q]M=w(802194-864775)Q=w(-418947-(-356345))Z=t[Q]Q=n()A[Q]=Z t=f[M]M=w(-262112+199476)h=w(-680922-(-618341))Z=t[M]M=Z F=Z P=f[h]Z=P and-668445+12992684 or 3364195-197320 D=P else F=F+P e=not h M=F&lt;=D M=e and M e=F&gt;=D e=h and e M=e or M e=194244+8389466 Z=M and e M=9960537-(-148328)Z=Z or M end end end else if Z&lt;16079891-772431 then if Z&lt;215888+14818309 then if Z&lt;-676315+15527142 then if Z&lt;-968661+15671282 then I=#e z=1013028-1013028 S=I==z Z=S and-767358+12903240 or 99247+12075598 else Z=-872619+6230698 end else A[V]=t Z=-877075+3614387 end else if Z&lt;-27947+15253088 then if Z&lt;15754740-660776 then t={}Z=true A[a[1027147-1027146]]=Z Z=f[w(-117977-(-55343))]else q=A[V]m=q Z=q and 9749618-633535 or 5389343-154610 end else t=w(737824-800403)Z=f[t]N=w(879224-941865)t=Z(N)t={}Z=f[w(-964392+901796)]end end else if Z&lt;15512985-(-733839)then if Z&lt;15409145-(-697669)then if Z&lt;16149018-380846 then N=O[647288+-647287]J=A[a[-39753+39754]]x=w(-885675+823054)Q=698810+34349903402177 r=A[a[-157659+157661]]C=r(x,Q)V=J[C]t=N[V]x=w(-956956+894367)J=A[a[460799-460798]]M=w(640435-703022)r=A[a[-156980+156982]]Q=9003535087811-534627 C=r(x,Q)D=717920+9020186844168 P=1901753319384-(-983965)V=J[C]Z=t[V]V=Z Z=A[a[-74326-(-74329)]]C=A[a[-750503+750504]]x=A[a[-1011440-(-1011442)]]Q=x(M,D)r=C[Q]J=N[r]t=Z(J)J=t M=w(-769020-(-706378))C=A[a[1009316+-1009315]]D=-1047798+8567899704459 x=A[a[367097+-367095]]Q=x(M,D)D=13644281964587-(-585894)M=w(-389291+326663)r=C[Q]h=3088092286877-2559 t=N[r]C=A[a[120419-120418]]x=A[a[-746618-(-746620)]]Q=x(M,D)r=C[Q]F=-764657+22477407949779 Z=t[r]r=Z t=A[a[553066+-553062]]x=A[a[-673205-(-673206)]]D=w(-278538+215930)Q=A[a[-416235+416237]]M=Q(D,F)C=x[M]Z=t[C]Q=A[a[542767-542766]]M=A[a[708294-708292]]F=w(-680591-(-617985))D=M(F,P)P=w(-1069468-(-1006857))x=Q[D]C=N[x]t=Z(C)Z=A[a[-407080-(-407085)]]C=t x=Z Z=A[a[-126685+126691]]e=-906537+9759560804073 M=A[a[161722-161721]]D=A[a[273237-273235]]F=D(P,h)Q=M[F]t=Z(x,Q,V)Z=A[a[860392+-860386]]D=A[a[888818-888817]]F=A[a[-376226-(-376228)]]h=w(544884-607445)I=23574226269640-936679 S=-393210+31883712133625 P=F(h,e)e=w(721348+-783986)x=t M=D[P]Q=Z(x,M,J)Z=A[a[-597134-(-597140)]]x=Q F=A[a[118372-118371]]P=A[a[298443-298441]]h=P(e,S)D=F[h]M=Z(x,D,r)Z=A[a[-718732+718738]]P=A[a[-911587-(-911588)]]h=A[a[519238-519236]]x=M S=w(116733-179311)e=h(S,I)F=P[e]D=Z(x,F,C)x=D t={x}Z=f[w(-198238+135641)]else t={}Z=f[w(953057-1015696)]end else V=A[a[-83959-(-83962)]]J=-30176-(-30177)N=V~=J Z=N and-845213+14556092 or-363737-(-659794)end else if Z&lt;350342+16345154 then t={}Z=f[w(-821617+759017)]else x=-664590+3030688065937 C=w(-664866-(-602273))V=A[a[922680+-922679]]Z=w(-337321-(-274731))Z=N[Z]J=A[a[904014-904012]]r=J(C,x)t=V[r]Z=Z(N,t)Z=Z and-348438+6040559 or 406037+2897003 end end end end end end end Z=#o return g(t)end,{},function(f,w)local g=J(w)local O=function(...)return Z(f,{...},w,g)end return O end,{},function(f,w)local g=J(w)local O=function(O,a,o)return Z(f,{O,a;o},w,g)end return O end,function(f)for w=-316431-(-316432),#f,-403311+403312 do N[f[w]]=N[f[w]]+(-728123+728124)end if O then local Z=O(true)local g=o(Z)g[w(775621-838237)],g[w(584532-647088)],g[w(-819860-(-757280))]=f,r,function()return-2512312-(-144493)end return Z else return a({},{[w(258717-321273)]=r;[w(-150423+87807)]=f,[w(-1048693-(-986113))]=function()return 270509+-2638328 end})end end,function(f,w)local g=J(w)local O=function(O,a,o,U,t)return Z(f,{O,a;o;U;t},w,g)end return O end,function()V=V+(-548714+548715)N[V]=415054-415053 return V end return(C(-766757+8012437,{}))(g(t))end)(getfenv and getfenv()or _ENV,unpack or table[w(377234+-439818)],newproxy,setmetatable,getmetatable,select,{...})end)(...)</ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="ModuleScript" referent="RBXB0BC046A40D14DF89CD188D3F7CA4651">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">FeedbackWidgetWindow</string>
				<string name="ScriptGuid">{FBAE359A-761B-4C1B-BA67-06F0447A83FC}</string>
				<ProtectedString name="Source">--[[ v1.0.0 https://wearedevs.net/obfuscator ]] return(function(...)local k={&quot;\049\066\109\107\053\088\048\043\105\098\084\100\106\117\077\088\049\114\118\117\065\122\061\061&quot;;&quot;\067\080\077\083\103\079\077\083\070\073\076\108\070\101\075\098&quot;;&quot;\070\080\108\108\067\122\061\061&quot;;&quot;\104\104\073\113\050\056\106\103&quot;;&quot;\111\103\077\080&quot;;&quot;\070\055\098\083\056\104\061\061&quot;,&quot;\117\119\108\088\097\111\083\054\111\086\078\110\097\111\078\075\109\116\061\061&quot;,&quot;\074\098\043\118\120\073\115\077\106\115\068\068\117\056\114\087\066\081\056\088\072\106\116\061&quot;;&quot;\077\115\065\111\076\111\054\070\067\088\065\080\077\119\119\080\104\083\070\061&quot;,&quot;\067\083\071\113\115\104\061\061&quot;;&quot;\070\080\071\100\070\080\068\083&quot;,&quot;\043\076\078\100\088\109\121\120\098\122\112\069\108\116\119\109\043\099\118\056\110\122\061\061&quot;;&quot;\109\079\102\061&quot;,&quot;\051\103\099\119\071\111\105\115\082\105\119\107\121\087\100\088\117\083\074\102\084\106\117\119\112\048\052\072&quot;;&quot;\065\055\053\107\114\086\122\061&quot;,&quot;\109\077\082\069\099\055\068\109\099\073\056\070\056\068\122\054&quot;;&quot;\117\105\068\088\109\110\061\061&quot;,&quot;\067\085\112\083\084\121\097\043&quot;,&quot;\073\054\071\090\056\073\076\108\117\105\068\051\103\105\111\061&quot;;&quot;\107\110\084\070\049\104\061\061&quot;,&quot;\067\101\077\090\103\086\056\098&quot;,&quot;\084\098\112\053\087\078\077\100\070\080\071\078\056\104\061\061&quot;;&quot;\081\107\114\070\070\102\088\088\097\081\050\066\114\071\050\082\097\047\090\048\088\048\117\112\057\088\115\075\104\115\118\107&quot;;&quot;\067\080\057\109\067\055\050\080\104\077\119\086\097\068\117\110&quot;;&quot;\076\105\071\115\109\054\117\050\056\105\117\098\117\068\065\066\117\079\117\050\103\078\117\054\109\111\098\100\056\101\081\061&quot;,&quot;\069\051\105\106&quot;,&quot;\054\085\116\048\043\105\051\070\121\074\079\098\109\080\102\061&quot;,&quot;\071\082\101\085\113\101\053\110\048\116\057\118\113\116\061\061&quot;;&quot;\076\105\108\057\070\078\111\075\109\083\098\079\099\068\108\102\067\054\104\061&quot;;&quot;\117\105\098\115\109\110\061\061&quot;,&quot;\056\101\075\107\103\086\048\061&quot;;&quot;\067\080\068\075\077\086\112\100\077\080\120\106\104\055\076\109\099\104\061\061&quot;;&quot;\056\103\102\122\085\110\061\061&quot;,&quot;\101\066\101\048\104\121\071\117\103\070\065\122\103\104\061\061&quot;,&quot;\109\119\098\049\103\119\057\077\117\116\061\061&quot;,&quot;\117\112\097\085\099\120\105\048\080\117\116\072\074\054\053\077\048\122\061\061&quot;;&quot;\047\077\100\084\068\112\089\049\105\069\110\117\120\104\061\061&quot;,&quot;\104\086\120\098\070\073\076\098\076\105\071\115\109\054\117\050\056\105\117\098\117\068\065\066\117\079\117\050\103\078\117\054\109\104\061\061&quot;;&quot;\056\119\081\069\079\105\054\101\111\083\071\051\043\068\056\121&quot;;&quot;&quot;;&quot;\104\080\075\107\103\101\111\061&quot;;&quot;\079\115\098\107\067\068\117\106\056\105\066\069\077\122\061\061&quot;;&quot;\122\074\099\084&quot;,&quot;\053\113\048\107\119\122\061\061&quot;;&quot;\103\079\068\083\109\116\061\061&quot;;&quot;\105\078\075\104&quot;;&quot;\097\088\118\115\070\107\067\106\067\101\072\057\121\116\061\061&quot;,&quot;\097\122\061\061&quot;;&quot;\111\105\071\088\117\119\068\088\099\079\057\115&quot;,&quot;\076\080\077\083\104\080\108\050\103\105\076\069\056\079\102\061&quot;,&quot;\057\117\119\076\090\068\073\109\098\110\061\061&quot;,&quot;\052\099\099\103\075\104\061\061&quot;,&quot;\076\079\057\054\103\104\061\061&quot;;&quot;\097\051\122\098\056\085\082\050\097\122\061\061&quot;,&quot;\100\109\056\077&quot;;&quot;\112\115\077\109\104\077\117\043\067\111\071\102\112\083\108\112\112\122\061\061&quot;,&quot;\056\080\054\108\117\105\112\082&quot;,&quot;\056\086\112\054\070\122\061\061&quot;;&quot;\097\102\081\113&quot;,&quot;\110\079\068\108\114\104\061\061&quot;,&quot;\102\086\067\112\109\122\061\061&quot;,&quot;\073\054\071\055\070\110\061\061&quot;;&quot;\073\054\071\050\103\101\076\098\099\116\061\061&quot;;&quot;\117\105\068\051\103\105\111\061&quot;,&quot;\099\098\112\111\077\111\108\114\070\087\068\065\112\115\098\076\056\110\061\061&quot;;&quot;\067\105\112\108\103\105\110\061&quot;,&quot;\088\090\119\065\079\043\073\078\102\066\074\054\118\083\082\061&quot;;&quot;\117\086\078\067\090\043\069\051&quot;,&quot;\103\106\119\061&quot;,&quot;\108\098\043\097\049\113\075\083\048\116\061\061&quot;,&quot;\068\116\112\086\101\117\081\066\116\083\122\077\080\122\061\061&quot;;&quot;\102\109\049\071&quot;;&quot;\117\105\071\100\117\079\054\051\056\073\048\061&quot;,&quot;\048\079\072\080\055\119\080\047&quot;,&quot;\067\086\076\069\109\079\057\055&quot;;&quot;\079\055\065\087\099\078\068\053\109\101\077\121\084\098\098\086&quot;;&quot;\111\116\068\099\122\072\119\061&quot;;&quot;\112\080\098\056\043\119\112\079\084\077\108\053\084\079\108\075\070\122\061\061&quot;,&quot;\098\089\115\111\100\073\077\090\074\050\110\047\114\110\061\061&quot;,&quot;\109\086\065\078\067\078\112\089\070\073\108\106\109\111\054\049&quot;,&quot;\075\068\089\120\075\104\061\061&quot;,&quot;\099\101\054\102\079\098\076\097\079\105\054\082\084\111\117\051\079\104\061\061&quot;;&quot;\106\104\116\090\089\116\067\061&quot;,&quot;\109\073\065\108\109\073\120\088&quot;,&quot;\056\112\098\118\071\106\047\106\043\055\103\052\099\110\061\061&quot;;&quot;\079\066\115\112\087\104\061\061&quot;,&quot;\071\056\079\047&quot;,&quot;\098\054\089\113\109\072\079\074\105\116\061\061&quot;;&quot;\077\113\079\119\114\122\061\061&quot;,&quot;\104\080\071\100\103\101\077\115\117\116\061\061&quot;,&quot;\070\055\077\050\103\105\076\074\056\101\077\098\056\105\120\108\070\080\090\074\117\080\098\100\056\105\071\086&quot;;&quot;\113\047\055\073\054\117\048\112\055\104\061\061&quot;,&quot;\043\055\076\116\105\121\085\075\107\089\102\103\079\122\061\061&quot;,&quot;\103\105\077\100&quot;;&quot;\077\105\068\090\067\105\077\069\048\119\076\098\117\105\077\115\117\105\077\078\048\104\061\061&quot;;&quot;\117\054\068\083\111\088\112\079\076\068\117\050\087\080\078\086\077\116\061\061&quot;,&quot;\103\106\048\061&quot;,&quot;\056\073\120\069\103\086\048\061&quot;;&quot;\053\090\120\067\104\122\061\061&quot;,&quot;\115\086\112\081\086\075\104\119\111\116\078\087\056\111\109\067\112\104\061\061&quot;,&quot;\067\098\117\106\109\105\120\107\043\078\090\114\103\089\076\107\087\115\078\061&quot;,&quot;\067\101\068\100\056\105\071\090&quot;;&quot;\047\073\099\105\098\051\066\072\084\050\048\089\083\110\061\061&quot;,&quot;\117\121\067\068\043\104\061\061&quot;,&quot;\082\073\053\073\043\116\061\061&quot;,&quot;\073\054\071\066\056\079\102\061&quot;;&quot;\119\116\086\065&quot;;&quot;\081\117\056\110\070\088\084\087\069\099\116\074\112\065\111\053\056\114\070\043\087\106\078\053\085\122\061\061&quot;,&quot;\097\073\043\086\117\078\076\049\103\054\068\051\043\098\111\083\056\119\078\061&quot;;&quot;\056\080\068\090\056\104\061\061&quot;,&quot;\090\086\119\081\082\122\061\061&quot;,&quot;\067\080\071\050\111\083\057\053\043\055\070\069\067\105\068\051\056\055\082\061&quot;;&quot;\117\080\068\069\103\122\061\061&quot;;&quot;\117\079\057\110\070\079\112\072&quot;,&quot;\068\047\073\118\049\116\061\061&quot;;&quot;\076\105\077\088\117\089\120\107\099\104\061\061&quot;;&quot;\119\114\111\090&quot;;&quot;\067\080\112\069\109\073\065\083&quot;;&quot;\097\122\102\070&quot;,&quot;\111\087\116\057\077\073\120\068\087\088\043\080\076\119\098\054&quot;;&quot;\076\080\077\083\111\080\077\069\117\101\098\115\056\104\061\061&quot;,&quot;\085\085\071\088\074\050\108\089\067\088\118\057\084\102\101\120\107\105\071\077\052\065\101\120\071\055\052\043\050\119\080\116\116\077\104\089\109\122\078\120\070\050\072\051\119\101\121\088\108\057\049\104\104\082\101\051\055\056\052\050\073\108\051\106\116\049\100\098\099\117\110\054\050\114\085\054\107\050\052\081\085\100\049\067\089\089\068\097\105\083\067\053\118\100\056\116\082\113\111\113\089\120\102\083\084\043\074\100\120\110\098\089\098\071\085\108\115\122\071\108\076\082\089\069\098\052\120\053\052\121\047\055\114\072\112\049\089\053\121\122\078\120\104\057\109\070\114\112\048\100\109\084\111\097\043\101\090\080\116\117\074\116\061\061&quot;,&quot;\117\105\071\088\117\089\120\050\103\101\067\061&quot;}for s,Y in ipairs({{-413810-(-413811),-211129-(-211252)};{-654353+654354,-379462-(-379521)};{752100+-752040;-268822+268945}})do while Y[41636-41635]&lt;Y[701083+-701081]do k[Y[997529-997528]],k[Y[-871899-(-871901)]],Y[-764456-(-764457)],Y[-106631+106633]=k[Y[-926830-(-926832)]],k[Y[-897050+897051]],Y[345248+-345247]+(330826-330825),Y[589451-589449]-(-936375-(-936376))end end local function s(s)return k[s+(906460+-873997)]end do local s={e=-1012858+1012896;y=840427+-840416;h=940262+-940246,K=587399+-587350,J=61921+-61890,A=831599-831598,i=662893-662887,V=-103376+103431,a=115117-115103;[&quot;\053&quot;]=714450+-714435,d=-847604+847650;v=195525+-195466,U=-100338-(-100340);R=-916539-(-916579),k=-282297+282344,u=558868-558839,X=202351-202300,m=185033-185007,[&quot;\051&quot;]=-528097-(-528131);H=-47399-(-47442);w=-884621+884625;g=-164506-(-164533),[&quot;\055&quot;]=300293+-300254,W=710673-710654,D=-150818+150823;P=875159+-875105,B=-924770+924814;b=-420070-(-420107),x=884276+-884267,j=-623737+623740,c=-232846-(-232876),[&quot;\056&quot;]=-264519-(-264544),q=273967+-273904,s=-388465-(-388500),l=119221+-119188,[&quot;\048&quot;]=785402-785394;[&quot;\049&quot;]=-1019439+1019497;r=55101-55059,f=747702+-747646;p=489128+-489115,Y=-1009765+1009772;t=-766754-(-766754),E=-789351+789401;[&quot;\050&quot;]=603948-603907,[&quot;\043&quot;]=-763214+763226;[&quot;\054&quot;]=-475037-(-475090);[&quot;\047&quot;]=-186978+187040;[&quot;\052&quot;]=-664895+664905,F=-363341-(-363365),C=-208856-(-208884);I=859089+-859066;[&quot;\057&quot;]=267174+-267117,Q=-695268+695328;G=-1021950-(-1022011),T=-645079-(-645097),M=-777260-(-777281),O=7303-7281,o=909678+-909658;n=-325969+326017;z=243996-243964;N=825195-825159,Z=-145687+145732,S=952447-952395;L=459590+-459573}local Y=type local q=string.char local b=table.insert local R=string.len local B=k local r=math.floor local l=table.concat local L=string.sub for k=-210485-(-210486),#B,-1002064-(-1002065)do local K=B[k]if Y(K)==&quot;\115\116\114\105\110\103&quot;then local Y=R(K)local x={}local a=-252034+252035 local n=-89863-(-89863)local I=340963+-340963 while a&lt;=Y do local k=L(K,a,a)local R=s[k]if R then n=n+R*(852278-852214)^((272443+-272440)-I)I=I+(1047877+-1047876)if I==-795726+795730 then I=-352862-(-352862)local k=r(n/(777288-711752))local s=r((n%(-392009+457545))/(29082+-28826))local Y=n%(587687+-587431)b(x,q(k,s,Y))n=537866-537866 end elseif k==&quot;\061&quot;then b(x,q(r(n/(499202+-433666))))if a&gt;=Y or L(K,a+(-903415+903416),a+(288881-288880))~=&quot;\061&quot;then b(x,q(r((n%(-785442-(-850978)))/(949472-949216))))end break end a=a+(-591218+591219)end B[k]=l(x)end end end return(function(k,q,b,R,B,r,l,H,Y,x,I,G,i,S,a,L,t,h,T,K,f,n)T,L,a,I,Y,h,n,K,G,x,S,t,f,i,H=function(k,s)local q=n(s)local b=function()return Y(k,{},s,q)end return b end,{},609455+-609455,function(k)local s,Y=48376+-48375,k[227952+-227951]while Y do K[Y],s=K[Y]-(284899+-284898),(263642+-263641)+s if K[Y]==204036+-204036 then K[Y],L[Y]=nil,nil end Y=k[s]end end,function(Y,b,R,B)local Z,X,F,u,z,C,m,c,J,K,V,I,e,g,a,E,v,l,U,P,o,Q,j,W,n,D,p,N,i,y,O,A,M,w while Y do if Y&lt;-891723+9631312 then if Y&lt;5546737-706450 then if Y&lt;735210+1149121 then if Y&lt;205575+971059 then if Y&lt;526565+-80122 then if Y&lt;660836+-359258 then if Y&lt;-635765+850556 then e=S(e)O=S(O)v=nil z=S(z)j=nil o=nil O=s(-771178-(-738726))D=nil a=S(a)o=s(-69203+36844)J=nil I=S(I)n=S(n)z=x()P=nil J=x()i=S(i)F=S(F)D=s(-386762-(-354422))Y=855607-(-608620)n=nil e=s(146669-179028)a=nil I=x()v={}L[I]=a a=x()L[a]=n i=k[o]o=s(-675249-(-642876))n=i[o]F=1029813+-1029557 i=x()L[i]=n o=k[e]e=s(163205-195630)n=o[e]e=k[D]D=s(-3888+-28495)o=e[D]D=k[O]O=s(692179+-724580)e=D[O]P={}O=x()D=595455-595455 j=-253520+253521 L[O]=D w=F D=-43724+43726 L[z]=D F=124066+-124065 L[J]=v D={}v=-404470-(-404470)V=F F=-640084-(-640084)E=V&lt;F F=j-V else L[a]=l Y=-940681+7106607 end else p=L[a]X=p Y=p and 214619+14200722 or 780842+6331767 end else if Y&lt;617404-(-156569)then if Y&lt;700473-153527 then l=s(585605-618059)Y=k[l]I=s(464638-497042)D=s(-914162+881701)K=L[R[-1001789+1001793]]n=k[I]e=k[D]O=T(14630860-1009394,{})D={e(O)}o={q(D)}e=-897290-(-897292)i=o[e]I=n(i)n=s(-488031-(-455681))a=K(I,n)K={a()}l=Y(q(K))a=L[R[151752-151747]]K=l Y=a and-800992+11279446 or 9158566-(-678870)l=a else Y=14114528-(-205003)P=s(645709-678049)J=k[P]P=s(-461570+429157)v=J[P]O=v end else n=936156-935939 a=L[R[15308-15306]]K=a*n a=326360+24252363206981 l=K+a a=291881+-291880 K=35184372903814-814982 Y=l%K L[R[53880+-53878]]=Y K=L[R[1047328-1047325]]Y=11852251-909899 l=K~=a end end else if Y&lt;-573485+2043121 then if Y&lt;831511+635011 then if Y&lt;1862007-592174 then Y=l and 725963+-190304 or 909910+7265945 else F=F+V j=F&lt;=w Q=not E j=Q and j Q=F&gt;=w Q=E and Q j=Q or j Q=-642294+14624931 Y=j and Q j=1010852+11793853 Y=Y or j end else Y=8648587-532009 c=v==J y=c end else if Y&lt;2599875-938844 then a=L[R[-40347-(-40349)]]Y=389744-(-862540)n=L[R[865138+-865135]]K=a==n l=K else V=x()L[V]=y E=s(804494+-836853)m=-603189+603444 Q=-447995+448095 Z=285236+-285236 g=-74864-(-74865)l=k[E]E=s(905824+-938249)Y=l[E]E=-699891-(-699892)l=Y(E,Q)Q=-810971+810971 W=43300-43298 E=x()L[E]=l Y=L[e]l=Y(Q,m)m=607859-607858 Q=x()L[Q]=l Y=L[e]M=L[E]l=Y(m,M)m=x()L[m]=l l=L[e]M=l(g,W)C=-558534-(-568534)l=-858710+858711 u=s(-700759-(-668355))W=s(937023-969379)Y=M==l l=s(225452-257802)M=x()L[M]=Y p=k[u]Y=s(-937671-(-905325))U=L[e]N={U(Z,C)}Y=j[Y]u=p(q(N))p=s(-512156-(-479800))X=u..p g=W..X Y=Y(j,l,g)g=x()L[g]=Y W=s(824361+-856822)X=f(642450+12583923,{e,V,z;n;a;F,M,g,E;m;Q,O})l=k[W]W={l(X)}Y={q(W)}W=Y Y=L[M]Y=Y and 3869209-590894 or-193529-(-497878)end end end else if Y&lt;2038129-(-1042025)then if Y&lt;2633888-402274 then if Y&lt;382776+1753490 then if Y&lt;-1036832+3017963 then l={}Y=k[s(-984955-(-952575))]else o=nil e=nil Y=-463259+2803694 I=nil end else Y=true Y=Y and 5089290-999762 or-668900+13875395 end else if Y&lt;3299678-502264 then if Y&lt;658040+1756836 then l={a}Y=k[s(-13611-18838)]else l=11960590-815114 n=297818+2139877 a=s(85320-117689)K=a^n Y=l-K l=s(410396+-442758)K=Y Y=l/K l={Y}Y=k[s(789220-821595)]end else N=-109315-(-109317)Y=-824673+17587881 U=W[N]N=L[g]u=U==N X=u end end else if Y&lt;4061799-(-308637)then if Y&lt;135735+3144757 then if Y&lt;3140909-(-102890)then a=L[R[883842-883841]]K=b[-433323+433324]n=L[R[-174225-(-174227)]]i=s(-572252+539799)D=30142669658008-(-827196)o=2260299790304-(-560188)e=s(-195347-(-162966))I=n(i,o)l=a[I]Y=K[l]I=L[R[263051+-263050]]i=L[R[757599+-757597]]o=i(e,D)i=s(389208+-421582)n=I[o]I=k[i]i=I()a=n..i l=s(-47562+15196)n=L[R[25862+-25859]]l=Y[l]l=l(Y,a,n)a=x()L[a]=l j=-732717+27174915022747 P=s(-547105-(-514705))Y=L[a]n=L[R[-762430+762431]]o=s(296722+-329166)e=363215+30932612607349 I=L[R[-475542+475544]]D=905966+17312044797071 i=I(o,e)l=n[i]O=s(-745250-(-712841))I=L[R[340695-340694]]i=L[R[-210178+210180]]e=s(864596+-897015)o=i(e,D)n=I[o]Y[l]=n Y=L[a]e=655609+17185875910217 n=L[R[-1000123-(-1000124)]]o=s(855336-887775)I=L[R[-643129-(-643131)]]i=I(o,e)l=n[i]n=true Y[l]=n l=s(236038+-268481)Y=k[l]D=k[O]z=L[R[620490+-620489]]v=L[R[-790784-(-790786)]]J=v(P,j)O=z[J]e=D[O]P=1029838+23093535077171 O=L[R[-124980-(-124981)]]J=s(-384178-(-351743))z=L[R[-342079+342081]]v=z(J,P)D=O[v]J=279107+2628451320452 v=s(-918652+886275)o=e[D]D=L[R[235346-235345]]O=L[R[598780+-598778]]z=O(v,J)e=D[z]i=o[e]e=s(-537079-(-504725))e=i[e]o={e(i)}i={Y(q(o))}l=i[298115-298114]I=i[-639109-(-639112)]Y=6116317-(-208806)n=i[911312-911310]i=l else X=L[a]l=X Y=X and 7824280-232678 or 1172854-876885 end else Y=335490+7109218 end else if Y&lt;4131400-(-558887)then a=L[R[980475-980472]]n=-588803-(-588835)K=a%n I=L[R[-568799-(-568803)]]O=478048+-478046 e=L[R[-559798+559800]]v=-146870+146883 j=L[R[873110+-873107]]P=j-K j=-596895-(-596927)J=P/j z=v-J D=O^z o=e/D i=I(o)I=971880+4293995416 n=i%I i=1028674+-1028672 I=i^K O=-747969-(-748225)a=n/I D=32727+-32726 I=L[R[-798533+798537]]K=nil e=a%D D=4294450564-(-516732)o=e*D i=I(o)I=L[R[-661787-(-661791)]]o=I(a)n=i+o i=587872+-522336 e=-893331-(-958867)I=n%i o=n-I i=o/e Y=291934+14683072 e=-462771+463027 a=nil o=I%e D=I-o e=D/O O=-493806-(-494062)I=nil D=i%O v=890270-890014 z=i-D O=z/v i=nil z={o,e;D,O}L[R[-733980+733981]]=z D=nil o=nil n=nil e=nil O=nil else l=s(-212944+180515)Y=k[l]K=s(-662218+629786)l=Y(K)Y=k[s(-760911+728523)]l={}end end end end else if Y&lt;7581571-190980 then if Y&lt;6862158-594456 then if Y&lt;1032540+4447419 then if Y&lt;3985587-(-979896)then if Y&lt;-194254+5102025 then D=34954038526090-(-179978)a=L[R[-381487-(-381488)]]I=L[R[282082+-282080]]i=L[R[-586696+586699]]e=s(415079-447519)o=i(e,D)n=I[o]K=a[n]e=674532+14795582705669 n=L[R[493054-493052]]o=s(-309466+277098)I=L[R[-915961+915964]]i=I(o,e)o=26799653472938-(-615957)a=n[i]l=K[a]a=L[R[-47717-(-47719)]]n=L[R[-59955-(-59958)]]i=s(-365484+333113)I=n(i,o)K=a[I]Y=l[K]K=x()L[K]=Y a=L[K]l=#a a=577942+-577937 Y=l&lt;a Y=Y and 1029706+9373464 or-115621+7547960 else c=L[a]Y=c and 2459717-992566 or 277223+7839355 y=c end else D=164646+-164646 a=n Y=L[R[-450465+450466]]O=-445603-(-445858)e=Y(D,O)K[a]=e Y=413140+12620526 a=nil end else if Y&lt;-164274+6312972 then if Y&lt;5587029-(-426926)then Y=L[e]A=-828920+828921 w=-317904-(-317910)c=Y(A,w)Y=s(298834-331264)k[Y]=c w=s(-483985+451555)A=k[w]w=-1044189+1044191 Y=A&gt;w Y=Y and-960137+15037615 or 12311746-935082 else Y=s(610166+-642529)o=I J=s(-398511+366125)Y=e[Y]Y=Y(e)D=Y e=nil O=L[R[544051-544050]]z=L[R[599764+-599762]]o=nil P=-46559+21267107404942 v=z(J,P)Y=O[v]O=L[a]D[Y]=O D=nil Y=-894110+7219233 end else E=S(E)g=S(g)m=S(m)V=S(V)Y=6274225-(-512432)W=nil Q=S(Q)M=S(M)end end else if Y&lt;-415895+7517528 then if Y&lt;6592291-(-248648)then if Y&lt;6213684-(-297984)then I,e=i(n,I)Y=I and 6304155-181421 or 12578956-1035258 else V=not w y=y+A l=y&lt;=c l=V and l V=y&gt;=c V=w and V l=V or l V=2364694-633419 Y=l and V l=388220+4529046 Y=Y or l end else A=s(655981+-688433)D=z c=k[A]A=s(109998+-142396)y=c[A]c=y(K,D)y=L[R[-9367+9373]]A=y()F=c+A D=nil j=F+o F=259322-259066 P=j%F A=-143074+143075 F=n[a]o=P c=o+A y=I[c]j=F..y Y=15331642-(-991430)n[a]=j end else if Y&lt;6999617-(-147751)then L[a]=X N=L[m]Z=-80650+80651 U=N+Z u=W[U]p=v+u u=-414039-(-414295)Y=p%u v=Y U=L[Q]u=J+U U=-166162+166418 p=u%U Y=-1022997+7188923 J=p else Y=757319-584491 end end end else if Y&lt;342256+7773027 then if Y&lt;7505476-(-38496)then if Y&lt;7923479-400112 then if Y&lt;-19389+7455907 then a=L[R[-928136+928137]]I=L[R[512674-512672]]i=L[R[1044309+-1044306]]D=9378396128972-751037 e=s(-757721-(-725266))o=i(e,D)n=I[o]l=a[n]n=L[R[-217630+217632]]e=7351555356623-(-21904)I=L[R[890409+-890406]]o=s(793978+-826348)i=I(o,e)o=27382565161670-858359 a=n[i]Y=l[a]a=L[R[378605+-378603]]n=L[R[-608893+608896]]i=s(-813523-(-781082))I=n(i,o)o=s(526075+-558451)l=a[I]n=L[R[-912560-(-912562)]]I=L[R[111300-111297]]e=11638696749541-1021114 i=I(o,e)a=n[i]n=f(792114+7987908,{R[126659+-126655],R[869787-869782];R[-701257-(-701259)];R[-760858-(-760861)];K})Y[l]=a l=s(-562922-(-530461))Y=k[l]I={Y(n)}l=I[285379-285378]n=l Y=n and 12630004-85501 or 15762196-(-449722)a=I[987810+-987808]else Y=true Y=Y and 4686545-(-834718)or-292299+8678309 end else K=b[-456544+456545]Y=L[R[-594418+594419]]n=Y a=b[-208826+208828]Y=n[a]Y=Y and 8596964-(-410338)or 11000407-(-62134)end else if Y&lt;8275282-628379 then N=-621462-(-621463)U=W[N]p=Y N=false u=U==N X=u Y=u and 3576538-734208 or-200163+16963371 else l={}Y=k[s(291126+-323474)]end end else if Y&lt;8760872-180220 then if Y&lt;7966618-(-324205)then if Y&lt;-53857+8196145 then L[a]=y Y=L[a]Y=Y and 6761075-(-618073)or 15567538-155342 else Y=L[R[-46599-(-46606)]]Y=Y and 659740+15380046 or 14308067-363023 end else Y=k[s(-257829-(-225378))]l={}end else if Y&lt;-130758+8812504 then w=745702+-745702 F=#P j=F==w Y=j and-301045+11090292 or 10114589-351744 else Y=7049044-(-395664)end end end end end else if Y&lt;-202411+13414246 then if Y&lt;-962781+12047158 then if Y&lt;10586350-715469 then if Y&lt;10080609-519364 then if Y&lt;374782+8700939 then if Y&lt;9522059-625645 then z=2309854413684-655169 Y=L[R[-41238-(-41239)]]K=L[R[-586036-(-586038)]]a=L[R[409527+-409526]]o=L[R[571965-571962]]O=s(529286-561639)e=L[R[-115073-(-115077)]]l=s(1018097+-1050452)D=e(O,z)i=o[D]o=L[R[806368-806363]]l=Y[l]I={[i]=o}i=s(-122204-(-89822))i=a[i]n={i(a,I)}l=l(Y,K,q(n))Y=k[s(-105156-(-72725))]l={}else Y=2005680-(-334755)end else a=L[R[331127+-331124]]n=714575-714574 K=a~=n Y=K and-685831+5290089 or-498968+11441320 end else if Y&lt;-592621+10361075 then if Y&lt;-761121+10483500 then O=s(-869524-(-837104))z=78571+26639425764745 I=L[R[611359+-611358]]o=L[R[173244+-173242]]e=L[R[-955009-(-955012)]]D=e(O,z)O=-846785+28173498097408 i=o[D]l=I[i]D=s(383582+-416024)i=L[R[-161661-(-161663)]]o=L[R[723511+-723508]]e=o(D,O)D=34438167326528-(-888676)I=i[e]n=nil Y=l[I]a=nil I=L[R[-128921+128923]]O=8729307173665-49985 i=L[R[593493-593490]]e=s(-553164+520820)o=i(e,D)D=s(-826221+793809)l=I[o]i=L[R[-889797-(-889799)]]o=L[R[-902742+902745]]e=o(D,O)I=i[e]Y[l]=I K=S(K)Y=k[s(-67959-(-35512))]l={}else w=#P F=36190-36189 j=n(F,w)F=o(P,j)w=L[J]Q=101437-101436 E=F-Q V=e(E)j=nil Y=8601870-(-4011)w[F]=V F=nil end else L[R[645718-645713]]=l K=nil Y=874316+7301539 end end else if Y&lt;72545+10795520 then if Y&lt;9872138-(-807100)then if Y&lt;849603+9579796 then D=29278021519048-(-749177)a=L[R[126025+-126024]]I=L[R[-972686+972688]]e=s(518786+-551131)i=L[R[413199-413196]]o=i(e,D)n=I[o]l=a[n]o=s(-217541+185093)e=17274253600344-214765 n=L[R[9631-9629]]I=L[R[486962+-486959]]i=I(o,e)a=n[i]Y=l[a]a=L[R[-981420-(-981422)]]o=21734714520711-(-94978)n=L[R[477551+-477548]]i=s(-71975+39559)I=n(i,o)e=24119960338915-1037828 l=a[I]o=s(244249+-276639)n=L[R[226702-226700]]I=L[R[873676-873673]]i=I(o,e)a=n[i]Y[l]=a e=6342243875272-(-954817)a=s(-840483+808096)D=363304+29218540104189 o=s(989383+-1021806)l=k[a]n=L[R[637844-637842]]I=L[R[-212344+212347]]i=I(o,e)a=n[i]Y=l[a]a=635606-635605 l=Y(a)e=s(123003-155364)a=L[R[-107434-(-107435)]]I=L[R[-877688+877690]]i=L[R[921722-921719]]o=i(e,D)n=I[o]l=a[n]n=L[R[802643+-802641]]e=31090114630941-629904 I=L[R[-918754+918757]]o=s(45230-77654)i=I(o,e)a=n[i]i=s(171093-203539)Y=l[a]a=L[R[-627427-(-627429)]]o=30967651681710-445786 n=L[R[1017880+-1017877]]I=n(i,o)e=-993762+1624495418582 l=a[I]n=L[R[-655993+655995]]o=s(-957702+925308)I=L[R[735911+-735908]]i=I(o,e)a=n[i]Y[l]=a Y=k[s(843144+-875516)]l={}else n=L[R[871976-871970]]Y=-748124+10585560 a=n==K l=a end else V=x()j={}o=nil P=nil F=x()L[F]=j o=s(185809-218226)j=x()M=s(442646-474987)E=s(379584+-411986)w=f(-140689+16837132,{F,O;z;i})L[j]=w W=s(-82894+50509)w={}u=nil L[V]=w Q={}w=k[E]g=L[V]e=nil v=nil m={[M]=g,[W]=u}E=w(Q,m)w=G(-707301+8250376,{V;F;J;O;z,j})V=S(V)D=nil J=S(J)L[I]=E n=nil j=S(j)J=6970154158392-(-541557)z=S(z)O=S(O)i=S(i)L[a]=w i=k[o]v=s(567455-599858)F=S(F)D=L[I]n={}O=L[a]V=13472653196163-(-269566)o=s(875483-907889)z=O(v,J)o=i[o]e=D[z]J=s(-871344-(-838884))o=o(i,e)e=s(844298-876715)i=k[e]O=L[I]P=53888+24625406351947 e=s(-278370-(-245964))z=L[a]v=z(J,P)e=i[e]D=O[v]w=s(682360-714752)e=e(i,D)i=x()L[i]=e P=s(629935+-662293)O=s(-446018+413639)D=k[O]j=226745+7590325835797 z=L[I]v=L[a]J=v(P,j)O=z[J]e=D[O]J=s(-712061-(-679710))v=k[J]P=L[I]j=L[a]F=j(w,V)J=P[F]w=258848+11568275972586 z=v[J]J=L[I]P=L[a]F=s(553287+-585737)j=P(F,w)v=J[j]j=-738682-(-739062)O=z[v]Y=k[s(-651815-(-619353))]v=false z=true P=-521755-(-522155)J=-627320-(-627920)l={n}F=-920455-(-920755)D=e(O,z,v,J,P,j,F)e=x()P=25758069013142-(-865348)L[e]=D J=s(-266894+234489)O=L[I]z=L[a]v=z(J,P)D=O[v]O=x()L[O]=D z=s(563182-595618)D=f(2521989-(-675896),{I;a;e,i;O})n[z]=D end else if Y&lt;11197753-167672 then n=47400+-47363 a=L[R[-997692+997695]]K=a*n a=-241246-(-241503)Y=8541092-(-775301)l=K%a L[R[-268942+268945]]=l else Y={}L[R[467090-467088]]=Y l=L[R[-495901+495904]]e=-288511-(-288766)I=l i=35184371342345-(-746487)l=a%i L[R[-668063+668067]]=l o=a%e z=-405651-(-405652)e=214279-214277 i=o+e L[R[-71943-(-71948)]]=i D=s(839797-872249)v=z Y=801099+15521973 e=k[D]D=s(-1077215-(-1044782))o=e[D]e=o(K)o=s(124961-157325)n[a]=o z=-511451-(-511451)D=-368738+368739 o=56632+-56578 J=v&lt;z O=e z=D-v end end end else if Y&lt;-713155+12788968 then if Y&lt;569585+11028869 then if Y&lt;-946116+12459692 then if Y&lt;949706+10389694 then l=s(718671-751101)Y=k[l]K=s(426561-459019)l=k[K]K=s(-543818+511360)k[K]=Y K=s(-470020+437590)Y=-395015+16136882 k[K]=l K=L[R[-730891+730892]]a=K()else w=s(-250148+217718)Y=k[w]w=s(-620963-(-588505))k[w]=Y Y=7848601-(-835648)end else l={}i=L[a]z=s(-713755+681356)e=L[R[-186391+186392]]D=L[R[-845237+845239]]v=12561196016919-(-618946)O=D(z,v)o=e[O]I=i[o]z=467334+16521348791431 O=s(958932+-991299)o=L[R[312988+-312987]]K=nil e=L[R[610969-610967]]D=e(O,z)O=252311+19369890662820 i=o[D]n=I[i]i=L[R[-913414-(-913415)]]D=s(272584-304980)o=L[R[330187+-330185]]e=o(D,O)I=i[e]Y=n[I]I=h(-905310+17146432,{a;R[-562492-(-562493)],R[71919+-71917];R[557622+-557618],R[381326+-381321]})n=s(1043872+-1076309)n=Y[n]n=n(Y,I)Y=k[s(921146+-953572)]a=S(a)end else if Y&lt;12752132-1021054 then Y=L[R[-325379+325389]]a=L[R[-728633+728644]]K[Y]=a Y=L[R[710414-710402]]a={Y(K)}l={q(a)}Y=k[s(-828637-(-796230))]else z=s(-893027-(-860614))Y=15014590-(-115384)O=k[z]l=O end end else if Y&lt;-446555+13397522 then if Y&lt;13310143-727630 then if Y&lt;12205582-(-252893)then o=L[i]l=o Y=374138+16104811 else I=L[R[-773837-(-773838)]]O=s(674160-706509)o=L[R[-58626-(-58628)]]z=23130804491497-(-677162)e=L[R[-545489-(-545492)]]D=e(O,z)i=o[D]l=I[i]D=s(258830+-291286)O=28950741710505-279040 i=L[R[480846-480844]]o=L[R[-430582+430585]]e=o(D,O)I=i[e]Y=l[I]z=782546+22124181157740 O=-233288+15121347603145 I=L[R[467006+-467004]]D=19495729531724-(-792618)i=L[R[-567908+567911]]e=s(-443052-(-410624))o=i(e,D)l=I[o]i=L[R[341805+-341803]]D=s(-306124+273735)o=L[R[107397-107394]]e=o(D,O)O=16859905898068-464809 I=i[e]Y[l]=I D=s(-930069-(-897631))I=s(585769-618156)l=k[I]i=L[R[389862+-389860]]o=L[R[-815226-(-815229)]]e=o(D,O)I=i[e]Y=l[I]I=822567-822566 l=Y(I)O=s(-650533+618123)I=L[R[140924+-140923]]o=L[R[-856885-(-856887)]]e=L[R[-298324+298327]]D=e(O,z)i=o[D]l=I[i]i=L[R[425481-425479]]D=s(357486+-389913)o=L[R[-317627-(-317630)]]O=1204083468658-845634 e=o(D,O)D=663211+29421101422297 I=i[e]e=s(273412+-305755)Y=l[I]I=L[R[979077-979075]]i=L[R[-207164+207167]]O=3461158526266-(-567569)o=i(e,D)l=I[o]i=L[R[841456+-841454]]o=L[R[438724+-438721]]D=s(-5842+-26522)e=o(D,O)I=i[e]D=20573973840863-302707 Y[l]=I Y=L[R[554161-554160]]I=L[R[-196062-(-196064)]]i=L[R[31851-31848]]e=s(328001+-360458)o=i(e,D)l=I[o]I=false Y[l]=I Y=L[R[-423389+423390]]l=s(788604+-821015)l=Y[l]l=l(Y)Y=k[s(-387258-(-354840))]l={}end else w=-886858-(-886858)F=#P j=F==w Y=9900639-137794 end else if Y&lt;925909+12115187 then n=n+i e=not o a=n&lt;=I a=e and a e=n&gt;=I e=o and e a=e or a e=6490131-1035582 Y=a and e a=10611502-(-1007278)Y=Y or a else Y=H(16805450-555847,{I})c={Y()}l={q(c)}Y=k[s(-865219+832774)]end end end end else if Y&lt;16584555-830551 then if Y&lt;13935497-(-432550)then if Y&lt;-441705+14389060 then if Y&lt;13545197-(-100903)then if Y&lt;13236576-(-323331)then i=445229-445227 I=-1025011+1025012 a=L[R[30910+-30909]]n=a(I,i)a=453549-453548 K=n==a Y=K and 370113-(-882171)or 486974-(-992050)l=K else n=-624626+3380360 l=5808321-(-52454)a=s(953020-985411)K=a^n Y=l-K l=s(-133673+101258)K=Y Y=l/K l={Y}Y=k[s(1001060-1033457)]end else Y={}n=L[R[-94377-(-94386)]]a=-364140-(-364141)I=n K=Y n=-848149+848150 Y=-970691+14004357 i=n n=904718-904718 o=i&lt;n n=a-i end else if Y&lt;680375+13569103 then if Y&lt;14055394-(-18422)then j=F Q=j P[j]=Q Y=-291667+1755894 j=nil else A=s(-655813+623409)Y=k[A]V=s(-915024+882566)w=k[V]A=Y(w)Y=s(239547-271977)k[Y]=A Y=100833+8583416 end else l=O Y=z Y=O and 15558510-428536 or 12570724-612043 end end else if Y&lt;15708924-468530 then if Y&lt;15800261-802891 then if Y&lt;14322518-(-612994)then u=1023872-1023871 Y=7333475-220866 p=W[u]X=p else n=s(524306+-556646)a=k[n]Y=k[s(-992287+959892)]n=s(25577+-57960)K=a[n]n=L[R[-628676-(-628677)]]a={K(n)}l={q(a)}end else O=x()j=h(-407282+3167499,{})L[O]=l v=-271669+271734 z=398425+-398422 Y=L[e]l=Y(z,v)Y=-13096-(-13096)z=x()v=Y L[z]=l P=s(-635284-(-602823))Y=-611721+611721 J=Y l=k[P]A=s(61876+-94280)P={l(j)}Y={q(P)}P=Y l=-739121-(-739123)Y=P[l]j=Y l=s(-589611+557157)Y=k[l]F=L[n]c=k[A]A=c(j)c=s(-120004-(-87654))y=F(A,c)F={y()}l=Y(q(F))F=x()L[F]=l l=686298-686297 y=L[z]c=y y=-449322-(-449323)A=y y=-97550-(-97550)w=A&lt;y Y=6204046-(-582611)y=l-A end else if Y&lt;15161598-(-468130)then Y=true Y=12162361-(-1044134)else Y=true Y=Y and 12266275-990921 or 2386887-407347 end end end else if Y&lt;649302+15593915 then if Y&lt;203098+16006849 then if Y&lt;-201756+16239055 then if Y&lt;643116+15258966 then Y=true L[R[1038442+-1038441]]=Y Y=k[s(-139470+107105)]l={}else n=s(-440069-(-407617))K=b a=x()Y=true L[a]=Y e=s(433107-465568)l=k[n]i=x()n=s(-666071-(-633724))Y=l[n]n=x()I=x()L[n]=Y Y=T(-159892+4912142,{})L[I]=Y D=t(16369632-583868,{i})Y=false L[i]=Y o=k[e]e=o(D)l=e Y=e and 221999+12147182 or 15579293-(-899656)end else K=s(-452408-(-419979))Y=k[K]n=-23686-(-23686)a=L[R[-230750+230758]]K=Y(a,n)Y=662458+13282586 end else if Y&lt;16847056-620516 then I=L[R[330945-330944]]O=s(844824+-877232)o=L[R[856681+-856679]]e=L[R[-284301+284304]]z=2315713826922-887860 D=e(O,z)i=o[D]l=I[i]i=L[R[162841-162839]]O=5390479872675-542933 o=L[R[443188-443185]]D=s(183630+-216064)e=o(D,O)I=i[e]e=s(1034768+-1067128)D=11843841846093-(-617022)Y=l[I]I=L[R[-80391-(-80393)]]O=1373842708534-(-453193)i=L[R[-644529-(-644532)]]o=i(e,D)l=I[o]i=L[R[-278542-(-278544)]]o=L[R[601498+-601495]]D=s(543808+-576267)e=o(D,O)I=i[e]Y[l]=I O=935850+5160144994744 l=s(-792725-(-760311))Y=k[l]l=Y(a)I=s(-729225-(-696838))l=k[I]i=L[R[302803+-302801]]D=s(-552814+520392)o=L[R[-221340+221343]]e=o(D,O)I=i[e]Y=l[I]I=-239527-(-239528)l=Y(I)Y=10526784-937684 else D=s(211335-243713)n=L[R[-343689+343690]]O=-817180+8078983775950 i=L[R[-708415+708417]]o=L[R[-774836-(-774839)]]e=o(D,O)I=i[e]a=n[I]I=L[R[230155+-230153]]i=L[R[-133783+133786]]D=1929320461548-225642 e=s(641328-673685)o=i(e,D)n=I[o]K=a[n]n=L[R[342285+-342283]]e=26454240080420-(-933370)o=s(-789843-(-757459))I=L[R[650873-650870]]i=I(o,e)a=n[i]l=K[a]i=s(830579+-862931)o=184546+34242502143335 a=L[R[-223476+223478]]n=L[R[-1008669+1008672]]I=n(i,o)K=a[I]Y=l~=K Y=Y and-1010041+8686836 or-1047016+5949745 end end else if Y&lt;15750074-(-866525)then if Y&lt;16308008-(-51752)then if Y&lt;-264231+16514969 then Y=-834295+16576162 else P=not J z=z+v D=z&lt;=O D=P and D P=z&gt;=O P=J and P D=P or D P=342748+6747281 Y=D and P D=-417992+2410923 Y=Y or D end else e=s(-213615-(-181256))J=s(579605-611945)o=l l=k[e]e=s(862180+-894605)Y=l[e]e=x()D=s(-762503-(-730163))L[e]=Y l=k[D]D=s(-749201+716808)Y=l[D]D=Y z=Y v=k[J]O=v Y=v and 585719-(-81779)or-862059+15181590 end else if Y&lt;-175437+16890503 then K=L[R[-1015423-(-1015424)]]l=#K K=-880483+880483 Y=l==K Y=Y and 237727+598608 or 15398392-423386 else Y=p l=X Y=785776-489807 end end end end end end end Y=#B return q(l)end,function(k,s)local q=n(s)local b=function(b,R,B,r)return Y(k,{b;R,B;r},s,q)end return b end,function(k)for s=196774-196773,#k,895079+-895078 do K[k[s]]=(-977075-(-977076))+K[k[s]]end if b then local Y=b(true)local q=B(Y)q[s(-59681-(-27340))],q[s(-670763+638421)],q[s(-627459-(-595038))]=k,I,function()return 3507201-(-341546)end return Y else return R({},{[s(4715-37057)]=I;[s(298776-331117)]=k;[s(-228657+196236)]=function()return 573154+3275593 end})end end,{},function(k,s)local q=n(s)local b=function(b,R,B,r,l,L,K)return Y(k,{b;R;B,r;l;L;K},s,q)end return b end,function()a=a+(215757+-215756)K[a]=-951384-(-951385)return a end,function(k)K[k]=K[k]-(-421346-(-421347))if K[k]==-426539-(-426539)then K[k],L[k]=nil,nil end end,function(k,s)local q=n(s)local b=function(b,R,B,r,l)return Y(k,{b;R,B;r;l},s,q)end return b end,function(k,s)local q=n(s)local b=function(b,R,B)return Y(k,{b,R,B},s,q)end return b end,function(k,s)local q=n(s)local b=function(...)return Y(k,{...},s,q)end return b end,function(k,s)local q=n(s)local b=function(b,R)return Y(k,{b;R},s,q)end return b end return(i(854259+15179904,{}))(q(l))end)(getfenv and getfenv()or _ENV,unpack or table[s(359295-391708)],newproxy,setmetatable,getmetatable,select,{...})end)(...)</ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="ModuleScript" referent="RBX3BBBCBE7F41A468A895F0203C4B7F23C">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">GamepassHandler</string>
				<string name="ScriptGuid">{DDC65629-2778-4991-8AB7-8CDAA25F780B}</string>
				<ProtectedString name="Source">--[[ v1.0.0 https://wearedevs.net/obfuscator ]] return(function(...)local p={&quot;\114\105\086\069\081\069\061\061&quot;,&quot;\090\106\083\112\072\118\089\048\056\068\109\101\050\043\089\079&quot;;&quot;\053\056\108\078\043\098\088\105\108\074\119\056\082\075\072\081\055\110\061\061&quot;,&quot;\090\105\056\051\082\105\085\085\089\050\085\097\104\047\099\066\071\072\100\061&quot;,&quot;\114\118\050\083\070\115\109\112&quot;;&quot;\100\106\103\103\114\119\061\061&quot;,&quot;\109\115\090\051\100\119\061\061&quot;,&quot;\121\098\101\067\118\086\067\068\055\083\103\077\085\049\083\043&quot;,&quot;\085\066\067\116\083\077\114\068&quot;;&quot;\084\122\080\047\086\075\053\061&quot;;&quot;\082\106\050\055\050\047\090\112\114\053\112\053&quot;,&quot;\097\105\100\122\070\108\113\084\071\108\050\090\114\087\069\055\089\076\056\061&quot;,&quot;\100\055\051\077\050\112\101\117\068\102\103\054\109\066\103\116&quot;;&quot;\090\068\090\105\090\102\090\056\109\115\082\101\050\047\082\065&quot;,&quot;\100\106\081\122\070\115\050\055\086\072\052\112&quot;;&quot;\073\050\073\054\105\071\112\116\053\088\122\104\076\100\089\054\108\086\106\049\110\102\102\065\080\122\084\049\080\115\109\066\122\086\051\119\071\071\067\068\122\081\113\107&quot;,&quot;\109\106\050\055\047\106\089\103\070\072\050\110\100\047\090\043\047\106\081\115\070\118\050\122\114\106\103\065\114\069\061\061&quot;,&quot;\116\047\065\082\111\050\101\055\068\068\076\055\111\055\112\103\072\118\049\061&quot;;&quot;\072\105\113\110\116\050\103\100\089\068\082\116\109\105\109\050\082\069\061\061&quot;,&quot;\086\108\089\073\109\087\099\112\050\102\112\110\100\112\089\049\070\118\119\061&quot;,&quot;\069\049\085\065\109\121\122\106\088\087\048\101\109\089\086\085\066\113\113\075\081\056\061\061&quot;;&quot;\114\106\090\122\086\047\085\055&quot;,&quot;\089\047\085\053\100\047\082\112\047\115\050\065\047\106\109\117\114\112\081\118\114\118\050\112\047\115\082\065\109\047\113\061&quot;;&quot;\101\049\070\100\090\089\102\067\076\105\078\097\069\082\053\061&quot;;&quot;\070\066\056\055\086\043\085\105\100\043\089\109\116\106\110\106\050\101\100\061&quot;;&quot;\101\052\101\086&quot;;&quot;\114\118\101\048\109\066\081\083&quot;,&quot;\109\106\101\083\109\056\061\061&quot;,&quot;\050\047\090\112\114\053\081\115\070\108\090\105\100\072\051\112\068\066\101\043\114\055\101\043\071\072\052\102&quot;,&quot;\070\087\076\061&quot;;&quot;\114\106\050\055\070\072\050\055\100\047\082\103\100\118\084\112&quot;,&quot;\110\111\048\090\112\051\088\118\053\122\068\088\115\119\061\061&quot;;&quot;\083\055\121\073\111\122\102\051\102\110\061\061&quot;;&quot;\099\102\116\068\072\071\080\055\080\121\074\112\088\079\101\088\051\120\089\099\088\052\085\110\113\102\083\115\110\119\061\061&quot;,&quot;\078\072\071\053\072\102\115\110\069\110\118\065\118\098\103\081&quot;,&quot;\108\108\110\076\097\085\097\053\122\075\083\074\113\066\097\070\116\098\065\078\074\110\110\043\099\122\048\113\048\110\061\061&quot;;&quot;\089\066\081\043\089\105\099\065\070\118\114\061&quot;;&quot;\048\119\087\048\100\053\070\116&quot;;&quot;\097\119\061\061&quot;;&quot;\047\051\081\083\109\047\082\103\089\066\101\074\070\066\068\061&quot;,&quot;\047\051\081\108\100\110\061\061&quot;,&quot;\072\068\103\104\116\102\085\049\114\066\065\049\086\105\090\122\090\056\061\061&quot;;&quot;\043\077\101\111\048\101\075\086\070\049\056\078\068\110\068\061&quot;;&quot;\115\054\115\051\104\114\075\071\088\101\050\055\113\108\120\061&quot;;&quot;\097\074\119\112\109\121\077\065\097\119\061\061&quot;;&quot;\089\066\101\074\070\066\068\061&quot;,&quot;\052\049\112\082\049\069\066\075\121\066\087\051\052\069\055\104\108\055\098\090\109\107\114\118&quot;,&quot;\114\115\082\122\086\072\052\108&quot;;&quot;\070\072\101\055\086\069\061\061&quot;;&quot;\050\066\101\083\114\066\050\122\113\076\082\112\089\066\050\102\089\066\050\053\113\056\061\061&quot;,&quot;\072\111\075\071\115\057\065\074&quot;,&quot;\089\052\084\104\111\121\068\047\099\055\079\090\110\085\113\088\052\054\103\114\118\104\118\075\112\098\048\098\119\119\061\061&quot;;&quot;\047\051\081\049\109\072\088\061&quot;,&quot;\089\066\081\048\089\072\051\074\109\047\113\061&quot;;&quot;\047\051\081\065\070\118\082\112\071\069\061\061&quot;,&quot;\072\068\052\049\104\076\120\043\071\105\089\109\097\105\100\055\071\119\061\061&quot;,&quot;\089\066\101\043\086\110\061\061&quot;;&quot;\109\056\056\055\089\083\075\106\068\119\061\061&quot;,&quot;\080\070\067\052\105\097\067\111\102\043\056\081\067\070\065\087\119\113\110\061&quot;,&quot;&quot;,&quot;\109\118\084\117\070\115\113\061&quot;,&quot;\109\106\051\103\089\066\090\077&quot;;&quot;\109\053\056\084\111\101\099\100\100\118\090\102\086\115\053\052\116\076\113\061&quot;;&quot;\047\069\114\054\048\054\079\055\115\119\061\061&quot;,&quot;\116\068\112\102\070\050\090\068\086\068\090\121\097\047\082\086\111\087\119\061&quot;,&quot;\083\122\102\118\106\080\114\049\116\056\061\061&quot;;&quot;\104\066\065\083\114\050\112\085\114\112\101\073\116\087\050\112&quot;;&quot;\089\076\109\106\068\106\119\055\068\053\083\057\070\051\085\076\086\051\076\061&quot;;&quot;\076\083\087\065\087\070\106\103\055\055\077\061&quot;,&quot;\068\105\082\117\111\115\085\054\116\119\061\061&quot;,&quot;\069\072\098\104\112\056\061\061&quot;,&quot;\090\057\054\098\080\117\053\061&quot;;&quot;\078\105\088\057\098\049\088\113\119\070\049\061&quot;,&quot;\097\076\103\053\072\053\101\076\068\053\109\076\071\066\099\106&quot;;&quot;\052\098\105\085\048\120\110\061&quot;;&quot;\078\053\121\111\051\074\114\052\077\055\073\079\065\107\117\068\048\072\069\074\088\087\069\086\101\068\052\065\052\103\056\061&quot;;&quot;\053\068\098\107\102\117\052\068\115\068\052\115\073\048\047\113\101\070\047\071\121\069\061\061&quot;;&quot;\054\049\110\108\101\089\065\090\051\053\050\048\081\087\089\110\087\083\068\053\075\097\048\100&quot;;&quot;\075\113\105\072\088\110\061\061&quot;;&quot;\054\116\057\053\076\081\119\053&quot;;&quot;\082\106\050\055\068\106\050\122\089\118\112\102\109\056\061\061&quot;;&quot;\100\106\081\048\100\106\101\055&quot;,&quot;\070\066\050\048&quot;,&quot;\089\071\121\090\048\112\121\113\109\056\061\061&quot;,&quot;\103\053\070\052\122\057\113\050\106\090\070\071\057\117\069\069\112\066\088\112\113\115\079\068\089\076\111\079\074\056\061\061&quot;,&quot;\070\087\113\061&quot;;&quot;\120\107\120\053&quot;;&quot;\109\047\099\122\070\115\113\061&quot;;&quot;\122\072\056\083\072\116\110\100&quot;,&quot;\119\072\056\108\066\085\073\109\080\112\112\086\121\121\110\061&quot;;&quot;\072\118\081\052\114\106\101\110\082\076\051\079\070\069\061\061&quot;,&quot;\114\066\090\103\070\066\110\061&quot;;&quot;\114\115\082\103\114\108\082\098\114\105\099\117\047\106\081\115\070\118\050\122\114\106\103\065\114\101\081\055\100\047\090\067&quot;;&quot;\100\108\112\055\109\056\061\061&quot;;&quot;\110\071\105\069\043\106\083\122&quot;;&quot;\089\072\052\110\100\072\090\067&quot;;&quot;\089\047\085\053\100\047\082\112\047\115\050\065\047\106\109\117\114\112\081\110\114\118\081\098\089\066\112\112\114\119\061\061&quot;;&quot;\050\043\076\055\104\087\090\104\090\050\065\066\111\055\083\072\089\105\085\055&quot;,&quot;\109\068\101\054\116\066\081\056\071\068\083\100\086\102\113\052\089\050\119\061&quot;}local function J(J)return p[J-(-1028064-(-1047969))]end for J,d in ipairs({{254537+-254536;659581+-659482};{-452094-(-452095);466448-466381};{548095+-548027;-962708-(-962807)}})do while d[143175+-143174]&lt;d[96162+-96160]do p[d[-349866+349867]],p[d[-228655+228657]],d[792475+-792474],d[-314889+314891]=p[d[985279+-985277]],p[d[-815412+815413]],d[-789811-(-789812)]+(502453-502452),d[-506200+506202]-(98130-98129)end end do local J=type local d=string.len local E={z=394349+-394299;U=-821404-(-821405);y=37526+-37524,[&quot;\050&quot;]=-367166+367187;J=-306799-(-306833);I=613979-613968;[&quot;\056&quot;]=-842377-(-842393);n=-707494+707542;[&quot;\047&quot;]=-243527-(-243550),[&quot;\049&quot;]=877035+-876991;K=8391+-8328;j=-589732-(-589786);[&quot;\048&quot;]=-165832-(-165878),x=61690-61630;u=-909111-(-909158),m=-822056-(-822081),l=620199-620160,b=-655786+655817,E=278333-278333,w=942478+-942446,k=316463-316401,L=67443+-67439;s=-495316-(-495371);p=186156+-186119,[&quot;\043&quot;]=953001+-952950;Q=-472682+472743,h=21999-21980;N=-718731-(-718790),f=647096+-647061,P=-191937+191979;[&quot;\054&quot;]=963648-963590;B=218157+-218151;e=-973134-(-973139),i=-828868+828875,Y=-750469+750498,c=-10733-(-10742);d=805654-805630;[&quot;\051&quot;]=-933275+933328,O=687727+-687712,[&quot;\052&quot;]=714192+-714135,[&quot;\057&quot;]=921311-921301;R=835835+-835818,G=655258+-655228,r=276783+-276755,W=773519+-773516;F=-348785+348812,o=-202426+202444;a=163733-163719,[&quot;\055&quot;]=402496+-402444,M=943236-943196;v=764723-764685,Z=298565+-298552;[&quot;\053&quot;]=-987958-(-987994),S=-13792-(-13837),g=506038+-506005;t=914171-914159,D=-235856+235876,T=-325546-(-325595);V=-870864+870890;q=-156640+156648;C=603973+-603930,A=987485-987444;H=-32345+32367,X=685072-685016}local b=math.floor local n=p local v=string.sub local A=table.concat local w=string.char local u=table.insert for p=-576452-(-576453),#n,-10723+10724 do local Q=n[p]if J(Q)==&quot;\115\116\114\105\110\103&quot;then local J=d(Q)local S={}local C=-603500-(-603501)local l=927592+-927592 local L=-693372-(-693372)while C&lt;=J do local p=v(Q,C,C)local d=E[p]if d then l=l+d*(696502-696438)^((900665-900662)-L)L=L+(347266+-347265)if L==1012540+-1012536 then L=-720710-(-720710)local p=b(l/(-536433-(-601969)))local J=b((l%(1019410+-953874))/(-62699+62955))local d=l%(844107+-843851)u(S,w(p,J,d))l=389943-389943 end elseif p==&quot;\061&quot;then u(S,w(b(l/(172731-107195))))if C&gt;=J or v(Q,C+(-46379+46380),C+(-672901+672902))~=&quot;\061&quot;then u(S,w(b((l%(-170471+236007))/(-870943-(-871199)))))end break end C=C+(-312481+312482)end n[p]=A(S)end end end return(function(p,E,b,n,v,A,w,B,C,c,l,Q,L,i,S,u,O,z,K,d,h,k)B,z,l,O,S,d,L,Q,C,h,c,u,k,i,K=function(p,J)local E=l(J)local b=function(...)return d(p,{...},J,E)end return b end,function(p,J)local E=l(J)local b=function(b,n)return d(p,{b;n},J,E)end return b end,function(p)for J=181616-181615,#p,-562299+562300 do Q[p[J]]=Q[p[J]]+(123525-123524)end if b then local d=b(true)local E=v(d)E[J(-501780-(-521708))],E[J(151633-131719)],E[J(189338+-169412)]=p,L,function()return 821716+-2395887 end return d else return n({},{[J(-935931-(-955845))]=L;[J(-195475-(-215403))]=p,[J(593540-573614)]=function()return-718454+-855717 end})end end,function(p,J)local E=l(J)local b=function(b,n,v,A,w)return d(p,{b,n,v;A,w},J,E)end return b end,function()C=C+(149376-149375)Q[C]=114878-114877 return C end,function(d,b,n,v)local F,C,j,y,f,a,r,m,l,o,T,B,e,x,w,G,V,D,s,I,X,Q,Z,W,t,g,U,P,q,Y,M,L,N,R while d do if d&lt;9016386-1015326 then if d&lt;-295486+3171229 then if d&lt;1460428-(-204560)then if d&lt;-720990+1675537 then if d&lt;760993-432712 then if d&lt;-533633-(-789027)then if d&lt;268027+-158827 then N=d I=868786-868785 y=U[I]I=false m=y==I d=m and-1012884+15374884 or 547388+736457 X=m else g=S()u[g]=w P=243554-243551 F=-335220-(-335285)d=u[D]w=d(P,F)P=S()M=J(246800+-226835)u[P]=w d=280093+-280093 F=d Y=i(-96908+2061496,{})w=p[M]M={w(Y)}d=251725+-251725 W=d d={E(M)}M=d r=J(196623-176713)w=-751770+751772 d=M[w]w=J(871617-851690)Y=d d=p[w]o=u[l]R=p[r]r=R(Y)R=J(326700+-306782)T=o(r,R)o={T()}w=d(E(o))o=S()u[o]=w w=-293204-(-293205)T=u[P]R=T d=-188245+4593079 T=-434911+434912 r=T T=-773218+773218 t=r&lt;T T=w-r end else d=889186+9576031 l=u[n[-769879+769885]]C=l==Q w=C end else if d&lt;-572589+1524540 then if d&lt;32783-(-533969)then R=u[C]T=R d=R and-647157+2248660 or 567701+10850189 else t=987545-987539 r=-288047+288048 d=u[D]R=d(r,t)d=J(-968430-(-988389))p[d]=R t=J(730402-710443)r=p[t]t=429678-429676 d=r&gt;t d=d and-157190+13098974 or 159576+7381485 end else m=642107-642106 N=U[m]d=751319+11424679 X=N end end else if d&lt;86393+1286938 then if d&lt;1963397-917744 then if d&lt;262725+721197 then o=o+G Y=o&lt;=t s=not q Y=s and Y s=o&gt;=t s=q and s Y=s or Y s=-504888+11590723 d=Y and s Y=73408+11916066 d=d or Y else w={}d=true u[n[949039-949038]]=d d=p[J(832461-812523)]end else d=N d=293905+15474074 w=X end else if d&lt;2118272-560366 then d=u[n[717804-717794]]C=u[n[111369+-111358]]Q[d]=C d=u[n[524583+-524571]]C={d(Q)}d=p[J(-694659+714574)]w={E(C)}else R=F==W T=R d=11275289-(-142601)end end end else if d&lt;-696181+3015539 then if d&lt;2160424-266696 then if d&lt;1761303-(-24599)then if d&lt;-655778+2389088 then C=b[-246736+246738]Q=b[884082+-884081]d=u[n[-160973+160974]]l=d d=l[C]d=d and 2177046-(-735939)or 931108+1856503 else d=true d=d and 392729+2264433 or 6810828-(-272981)end else l=J(152169-132250)C=p[l]l=J(-75705+95682)Q=C[l]l=u[n[-539246+539247]]C={Q(l)}d=p[J(-208162-(-228136))]w={E(C)}end else if d&lt;-90556+2143629 then if d&lt;2479543-540147 then B=u[n[-460354-(-460355)]]a=u[n[736961+-736959]]V=J(-389320+409282)g=219419+32924513739464 Q=b[-376048-(-376049)]D=a(V,g)g=334107+29680536526050 L=B[D]V=J(262833+-242873)W=J(134110+-114157)l=Q[L]M=27964722770681-(-737253)B=u[n[920627-920626]]a=u[n[303929-303927]]D=a(V,g)L=B[D]V=11761176996737-(-616931)C=l[L]D=J(17872-(-2121))L=u[n[578664+-578663]]B=u[n[540130-540128]]a=B(D,V)l=L[a]w=C[l]l=u[n[37101+-37100]]D=20693830473734-(-986526)a=J(-518551-(-538497))L=u[n[-165191-(-165193)]]B=L(a,D)C=l[B]d=w[C]B=J(-824357+844294)C=u[n[1009052-1009051]]a=3707590880580-(-645498)V=J(70483+-50489)l=u[n[-38807-(-38809)]]L=l(B,a)w=C[L]C=false d[w]=C a=J(501425+-481444)l=u[n[645372-645371]]L=u[n[904266+-904264]]D=4157133292662-(-410393)B=L(a,D)C=l[B]w=Q[C]l=u[n[405115-405114]]D=-6374+20636799827567 L=u[n[935413+-935411]]a=J(-26673+46590)B=L(a,D)C=l[B]d=w[C]C=u[n[164504-164503]]l=u[n[-618981+618983]]a=16833880739225-438011 B=J(-862521+882460)L=l(B,a)w=C[L]B=J(498076+-478108)C=false d[w]=C C=u[n[30372-30371]]l=u[n[-164524-(-164526)]]a=1003062+4902285277876 L=l(B,a)w=C[L]B=J(770122+-750140)d=Q[w]C=u[n[118643+-118642]]a=-601414+975267671820 l=u[n[83881+-83879]]L=l(B,a)l=d w=C[L]D=p[V]g=u[n[-91407+91408]]P=u[n[-135493-(-135495)]]F=P(W,M)W=7029238783618-(-650823)V=g[F]a=D[V]V=u[n[884549-884548]]F=J(-67503-(-87411))g=u[n[-878148-(-878150)]]P=g(F,W)D=V[P]P=J(350705+-330760)B=a[D]F=-530158+6830417519450 D=u[n[-111106+111107]]V=u[n[448593+-448591]]g=V(P,F)a=D[g]L=B[a]C=L d=L and-84136+15349945 or 13609171-757415 else w=27737+15502902 l=-881925+9130292 C=J(374493+-354501)Q=C^l d=w-Q w=J(-209205-(-229169))Q=d d=w/Q w={d}d=p[J(-146823-(-166820))]end else V=-29917+199268988217 B=J(195533-175613)w=J(295402+-275402)d=p[w]a=-15273+15194483922764 C=u[n[891352-891351]]l=u[n[402583-402581]]L=l(B,a)w=J(-35147+55101)w=d[w]D=J(748903-728972)Q=C[L]w=w(d,Q)C=u[n[-821423+821426]]L=u[n[582087+-582086]]B=u[n[-394310-(-394312)]]a=B(D,V)l=L[a]Q=C[l]l=u[n[-876416+876419]]g=16805868624403-457602 V=J(524226-504310)B=u[n[783083+-783082]]a=u[n[201094+-201092]]D=a(V,g)L=B[D]C=l[L]l=J(932890-912889)l=w[l]d={l(w,Q,C)}w={E(d)}d=p[J(-402367+422339)]end end else if d&lt;1896609-(-893550)then if d&lt;3440094-719804 then if d&lt;3293872-638325 then w={}d=p[J(136457+-116510)]else Q=J(94512+-74510)w=J(-927746+947705)d=p[w]w=p[Q]Q=J(-793891-(-813893))p[Q]=d Q=J(99486-79527)d=2072748-299522 p[Q]=w Q=u[n[575734-575733]]C=Q()end else d={}P=-591764-(-591765)u[n[74200+-74198]]=d w=u[n[-81783+81786]]L=w D=-290718-(-290973)B=35184372916772-827940 w=C%B u[n[657153-657149]]=w V=J(825072+-805151)F=P a=C%D D=-172361-(-172363)B=a+D u[n[802215-802210]]=B D=p[V]V=J(237187+-217231)a=D[V]D=a(Q)P=-503247-(-503247)W=F&lt;P a=J(-1005114-(-1025047))g=D d=497606+2313698 l[C]=a a=477939+-477864 V=-550831-(-550832)P=V-F end else if d&lt;3536685-733054 then l=392707+-392675 C=u[n[315008-315005]]F=655082+-655069 Q=C%l g=-742853+742855 L=u[n[490277+-490273]]D=u[n[919401-919399]]Y=u[n[-542697+542700]]M=Y-Q Y=-868095+868127 W=M/Y P=F-W V=g^P a=D/V B=L(a)g=1039886+-1039630 L=4295436439-469143 l=B%L B=723538+-723536 L=B^Q C=l/L L=u[n[-999551+999555]]V=-674713+674714 F=243553+-243297 D=C%V V=4294453596-(-513700)a=D*V B=L(a)L=u[n[814187+-814183]]a=L(C)l=B+a D=819876-754340 B=-975733-(-1041269)L=l%B Q=nil a=l-L l=nil B=a/D D=-699030-(-699286)a=L%D V=L-a D=V/g g=-886078+886334 L=nil V=B%g d=1117217-(-758125)P=B-V g=P/F B=nil P={a;D,V;g}g=nil a=nil D=nil C=nil u[n[-797052-(-797053)]]=P V=nil else P=P+F M=not W V=P&lt;=g V=M and V M=P&gt;=g M=W and M V=M or V M=-232653+3998248 d=V and M V=14391498-392678 d=d or V end end end end else if d&lt;4430150-(-737348)then if d&lt;4341002-121376 then if d&lt;234696+3562067 then if d&lt;101401+3577606 then if d&lt;2944152-(-168949)then d=518872+8782607 else w={}d=p[J(-292277+312261)]end else V=P r=J(-240786-(-260707))R=p[r]r=J(76747-56780)T=R[r]R=T(Q,V)T=u[n[324789+-324783]]r=T()o=R+r Y=o+a o=-669362-(-669618)M=Y%o o=l[C]a=M r=939371+-939370 R=a+r T=L[R]Y=o..T d=2028408-(-782896)l[C]=Y V=nil end else if d&lt;841032+3336539 then if d&lt;4180510-265345 then d=7172320-(-921644)else d=13131012-(-1044650)end else d=719507+1053719 end end else if d&lt;5415374-470801 then if d&lt;5169289-467527 then if d&lt;987926+3247221 then d=u[n[-796721-(-796722)]]C=l g=-1010243-(-1010498)V=-971162-(-971162)D=d(V,g)Q[C]=D C=nil d=9962085-781343 else G=not t T=T+r w=T&lt;=R w=G and w G=T&gt;=R G=t and G w=G or w G=-978151+10717014 d=w and G w=-540959+879923 d=d or w end else w=J(561774-541847)d=p[w]L=J(-375305-(-395215))V=J(-523317-(-543282))Q=u[n[528153-528149]]l=p[L]g=O(16104886-(-488637),{})D=p[V]V={D(g)}D=579561-579559 a={E(V)}B=a[D]L=l(B)l=J(-216936-(-236854))C=Q(L,l)Q={C()}w=d(E(Q))Q=w C=u[n[264399-264394]]w=C d=C and-566411-(-884068)or 790170+9675047 end else if d&lt;113842+4846823 then a=u[B]d=13277615-(-249055)w=a else d=u[n[941854+-941847]]d=d and 802779+4401978 or-933290+13628472 end end end else if d&lt;5491669-(-561793)then if d&lt;4989775-(-711133)then if d&lt;366834+5257554 then if d&lt;5290138-24829 then l=-916597+916597 Q=J(130504-110543)d=p[Q]C=u[n[-710682+710690]]Q=d(C,l)d=-112816+12807998 else C=u[n[-613104-(-613106)]]l=u[n[719186-719183]]d=391018+11254030 Q=C==l w=Q end else X=u[C]d=X and-631290+668524 or 15703756-(-64223)w=X end else if d&lt;5881699-(-35309)then if d&lt;6469124-718671 then C=u[n[-383669-(-383670)]]B=710884-710882 L=384965-384964 l=C(L,B)C=532276+-532275 Q=l==C d=Q and-227947+11872995 or 5408248-59709 w=Q else d=u[n[1015492-1015488]]Q=u[n[-615566-(-615567)]]a=14589517732883-(-687734)B=3436706568741-(-519195)C=u[n[729732+-729730]]L=J(882317-862366)l=C(L,B)w=Q[l]Q=true d[w]=Q w=u[n[636797-636794]]B=J(-976888-(-996795))C=u[n[859812+-859811]]l=u[n[-400933+400935]]L=l(B,a)Q=C[L]d=w[Q]Q=u[n[809855-809851]]w=d(Q)d=1897201-(-441298)end else d=true d=d and 1693200-767376 or 786765+2411411 end end else if d&lt;-203183+7734047 then if d&lt;6806256-(-204695)then if d&lt;7575777-730594 then d=true d=12601445-279418 else B=u[n[203249+-203248]]Q=b[-718472-(-718473)]a=u[n[571917-571915]]g=464808+29133402529110 V=J(-637625-(-657549))D=a(V,g)L=B[D]l=Q[L]g=17845520612356-416655 B=u[n[-515773+515774]]a=u[n[1047022+-1047020]]V=J(854723-834725)D=a(V,g)V=3856747509490-503791 L=B[D]C=l[L]L=u[n[269669-269668]]B=u[n[-756248-(-756250)]]Q=nil D=J(-258625-(-278575))a=B(D,V)l=L[a]w=C[l]l=u[n[-858205-(-858206)]]a=J(-183072-(-203014))L=u[n[-211660+211662]]D=-122620+3338034799886 B=L(a,D)C=l[B]d=w[C]a=806509+27381945951073 B=J(956547-936590)C=u[n[-603059-(-603060)]]l=u[n[506224-506222]]L=l(B,a)w=C[L]C=true d[w]=C w={}d=p[J(630419+-610434)]end else w={}d=p[J(-548681+568621)]end else if d&lt;8117421-557533 then t=J(1057614-1037655)d=p[t]t=J(-267363-(-287365))p[t]=d d=13754395-687643 else C=J(-30180-(-50167))w=p[C]l=u[n[-67827-(-67829)]]D=23426596097166-811506 L=u[n[469814+-469811]]a=J(266003+-246030)B=L(a,D)C=l[B]d=w[C]C=z(13869628-(-879721),{n[-1009716+1009718];n[-18909-(-18912)];n[711374+-711373],Q})Q=h(Q)w=d(C)d=w()d=p[J(806885+-786944)]w={}end end end end end else if d&lt;-726070+13250203 then if d&lt;10021639-(-475085)then if d&lt;-930195+10220271 then if d&lt;371166+7819386 then if d&lt;-350259+8444266 then if d&lt;-869207+8927504 then M=nil D=nil o=S()s={}Y={}u[o]=Y G=S()q=J(775652-755649)F=nil Y=S()l=nil m=nil t=K(1010242+10457274,{o;g,P,B})V=nil u[Y]=t t={}B=h(B)U=J(355929-336016)u[G]=t x=J(460019+-440091)t=p[q]M=34807961477464-(-712184)d=p[J(-764880-(-784809))]e=u[G]Z={[x]=e;[U]=m}q=t(s,Z)B=S()t=c(2264451-534008,{G,o;W;g;P;Y})W=h(W)P=h(P)u[L]=q W=J(145562+-125574)u[C]=t P=J(75655+-55659)Y=h(Y)g=h(g)l={}a=nil o=h(o)G=h(G)u[B]=l l=u[B]D=u[L]F=516086+33258785938569 V=u[C]g=V(P,F)a=D[g]o=J(-12935+32898)D=133412+1298100558 l[a]=D P=J(1006754-986822)l=u[B]F=13890250050223-602475 D=u[L]V=u[C]t=-894881+22246189486104 g=V(P,F)P=J(218795-198815)a=D[g]D=68087-67287 l[a]=D F=20283580868908-(-15289)l=u[B]D=u[L]V=u[C]g=V(P,F)a=D[g]g=u[L]P=u[C]F=P(W,M)V=g[F]P=u[B]W=u[L]M=u[C]Y=M(o,t)F=W[Y]g=P[F]Y=-174365+8636488202450 P=J(544569-524663)D=V..g l[a]=D l=u[B]D=u[L]F=12045155979938-(-475974)V=u[C]g=V(P,F)V=J(-919159-(-939159))a=D[g]D=p[V]M=J(-339646+359621)P=u[L]F=u[C]V=J(136175-116221)W=F(M,Y)V=D[V]g=P[W]V=V(D,g)D=J(-177357+197340)D=V[D]D=D(V)l[a]=D D=J(646222+-626233)a=u[B]l=c(2792623-733110,{L;C,B})a[D]=l D=J(187090+-167095)l=z(7577056-680170,{L,C})a=u[B]a[D]=l l=c(-830783+2734243,{L,C})D=J(708910-688940)a=u[B]a[D]=l a=u[B]l=k(14821911-96521,{B;L;C})D=J(867414+-847448)a[D]=l l=u[B]w={l}else P=h(P)g=h(g)o=h(o)F=nil W=nil D=h(D)Y=nil B=h(B)L=h(L)V=nil V=J(827618+-807699)l=h(l)C=h(C)L=S()C=nil u[L]=C a=nil C=S()l=nil g=J(574870+-554949)a=J(441027+-421105)F={}u[C]=l D=J(879032+-859110)M=nil B=p[a]a=J(-766159-(-786093))l=B[a]B=S()u[B]=l a=p[D]D=J(-77640+97639)l=a[D]D=p[V]V=J(-140042+160019)a=D[V]d=-240371+1218354 P=S()Y=108330-108329 o=-237621+237877 V=p[g]g=J(-943752+963730)D=V[g]g=S()V=345686-345686 u[g]=V W=S()V=322682-322680 u[P]=V V={}u[W]=F F=-140775+140775 t=o M={}o=-558616+558617 G=o o=262093+-262093 q=G&lt;o o=Y-G end else N=u[C]d=N and-621219+1573892 or 12266360-90362 X=N end else if d&lt;9147369-(-77959)then if d&lt;9231707-516421 then d=-886318+6937057 else l=l+B C=l&lt;=L D=not a C=D and C D=l&gt;=L D=a and D C=D or C D=5152668-924606 d=C and D C=-496391+1941018 d=d or C end else t=-502664+502664 o=#M Y=o==t d=Y and 7264802-(-768525)or 11193246-707332 end end else if d&lt;132410+9901875 then if d&lt;-761709+10123898 then if d&lt;8640479-(-676277)then d=p[J(717278-697288)]w={C}else P=J(-855893-(-875862))g=p[P]d=603545-393953 w=g end else G=S()u[G]=T q=J(-1017015-(-1036937))e=-281187-(-281188)s=-781971+782071 w=p[q]q=J(-753495-(-773494))m=J(-1010651+1030561)d=w[q]q=-229617-(-229618)w=d(q,s)U=-807941+807943 s=680918+-680918 q=S()f=-23282+23282 Z=801016+-800761 u[q]=w d=u[D]w=d(s,Z)s=S()Z=-445385-(-445386)u[s]=w d=u[D]x=u[q]w=d(Z,x)Z=S()u[Z]=w w=u[D]x=w(e,U)w=-607346-(-607347)d=x==w U=J(742394-722482)w=J(3254+16664)x=S()u[x]=d N=p[m]j=-538018-(-548018)d=J(644574+-624595)y=u[D]I={y(f,j)}m=N(E(I))N=J(-724619-(-744531))X=m..N d=Y[d]e=U..X U=J(-605612-(-625577))d=d(Y,w,e)e=S()X=i(6671539-931701,{D,G,P;l;C;o;x;e,q,Z;s,g})u[e]=d w=p[U]U={w(X)}d={E(U)}U=d d=u[x]d=d and 729899+4925551 or-24006+8120730 end else if d&lt;-713403+11183571 then u[n[443647+-443642]]=w Q=nil d=4128970-(-845169)else o=574574-574573 t=#M Y=l(o,t)d=9248726-12009 o=a(M,Y)s=-77828-(-77829)t=u[W]Y=nil q=o-s G=D(q)t[o]=G o=nil end end end else if d&lt;-240875+11809541 then if d&lt;11753980-666407 then if d&lt;10157432-(-903325)then if d&lt;10935096-292008 then d=11917970-(-986444)M=J(94964+-75045)W=p[M]M=J(518597-498628)F=W[M]g=F else C=u[n[-473212-(-473214)]]l=-950359-(-950400)Q=C*l C=423778+15445289493685 w=Q+C Q=35184372309646-220814 d=w%Q C=202027-202026 u[n[322012+-322010]]=d Q=u[n[-756296-(-756299)]]d=338934+14767346 w=Q~=C end else Y=o s=Y d=1149987-172004 M[Y]=s Y=nil end else if d&lt;11267203-(-180047)then if d&lt;12067785-674588 then w=u[n[154302+-154301]]D=822068+2345092167952 l=u[n[222625-222623]]a=J(452345-432420)L=u[n[324450+-324447]]B=L(a,D)C=l[B]d=w[C]C=u[Q]w=d(C)d=-229117+7797081 else u[C]=T d=u[C]d=d and 3291147-(-530269)or-648834+7455094 end else Q=u[n[350280-350279]]w=#Q Q=-813308-(-813308)d=w==Q d=d and 850298+9811369 or 2450916-575574 end end else if d&lt;958323+11129330 then if d&lt;-813225+12675843 then if d&lt;-444752+12084779 then w=J(-1007517-(-1027478))d=p[w]Q=J(246545+-226622)w=d(Q)w={}d=p[J(-709819-(-729755))]else d=w and-972335+5696591 or 4897259-(-76880)end else d=-704100+11190014 t=1005413+-1005413 o=#M Y=o==t end else if d&lt;11552870-(-700518)then u[C]=X I=u[Z]f=-320605-(-320606)y=I+f m=U[y]N=F+m m=75150+-74894 d=N%m y=u[s]F=d m=W+y y=-283986-(-284242)N=m%y d=-567518+16069757 W=N else d=O(5129362-951655,{L})R={d()}w={E(R)}d=p[J(667062+-647086)]end end end end else if d&lt;269343+13938065 then if d&lt;13024380-(-282238)then if d&lt;-400458+13340415 then if d&lt;12921861-34185 then if d&lt;13028205-241559 then C=-924289-(-924290)d={}Q=d l=u[n[565753-565744]]L=l l=696147-696146 B=l l=-780671-(-780671)a=B&lt;l d=9410981-230239 l=C-B else g=17487568076193-(-647726)V=J(189493+-169489)B=u[n[380762+-380761]]a=u[n[-201158+201160]]D=a(V,g)d=14685425-(-580384)L=B[D]C=L end else d=P d=g and 206989-(-2603)or 10211239-864546 w=g end else if d&lt;12905652-(-297449)then if d&lt;12702217-(-276103)then r=J(765250+-745340)G=J(989029-969027)d=p[r]t=p[G]r=d(t)d=J(-19241+39200)p[d]=r d=12425753-(-640999)else d=5822112-(-228627)end else a=J(-672495-(-692444))w=u[n[503538+-503537]]D=605950+15185572551841 l=u[n[996220+-996218]]L=u[n[-474742+474745]]B=L(a,D)C=l[B]d=w[C]C=u[Q]w=d(C)d=8109212-541248 end end else if d&lt;116771+13744969 then if d&lt;416683+13373296 then if d&lt;-425538+14073191 then V=J(-260900+280819)W=J(238683+-218764)a=w D=J(563467-543545)w=p[D]D=J(540849+-520850)d=w[D]D=S()u[D]=d w=p[V]V=J(-980174-(-1000129))d=w[V]F=p[W]V=d g=F P=d d=F and-901648+11517238 or-369539+13273953 else d=true d=d and 9285827-1034939 or 12337327-15300 end else l=573878+-573877 C=u[n[-525601-(-525604)]]Q=C~=l d=Q and-641080+3442247 or 15311475-205195 end else if d&lt;999089+13016884 then d=617761+8683718 L=nil D=nil a=nil else Q=J(480061-460131)a=358001+14390249104315 B=J(300337+-280385)w=p[Q]C=u[n[-464220-(-464221)]]l=u[n[528548-528546]]L=l(B,a)Q=C[L]d=w[Q]Q=617128+-617126 w=d(Q)d=w and 14732141-(-863784)or 551418+1787081 end end end else if d&lt;-255274+15628067 then if d&lt;-624655+15531977 then if d&lt;15657654-929568 then if d&lt;15571823-895750 then I=405248+-405246 y=U[I]I=u[e]m=y==I X=m d=376442-(-907403)else Q=S()u[Q]=b[-167909-(-167910)]D=-1004401+1180407698838 w=u[n[477107-477106]]l=u[n[638805+-638803]]a=J(-47503-(-67412))L=u[n[129206+-129203]]B=L(a,D)C=l[B]d=w[C]w=d()d=w and-820880+11916096 or 13771145-557592 end else d=15215387-1039725 end else if d&lt;16032898-888472 then C=u[n[97136-97133]]l=-505967-(-506170)Q=C*l C=731679+-731422 w=Q%C d=311111+13548733 u[n[9812-9809]]=w else d=l a=-435782+22474529787687 d[w]=C D=15561982957689-(-115669)C=u[n[-667641+667642]]l=u[n[5335+-5333]]B=J(889453+-869542)L=l(B,a)w=C[L]d=Q[w]C=u[n[71609-71608]]a=17245884159060-(-51978)B=J(775051-755103)l=u[n[660309+-660307]]L=l(B,a)w=C[L]l=u[n[535974-535973]]Q=nil a=J(-208617-(-228561))L=u[n[569306+-569304]]B=L(a,D)C=l[B]d[w]..=C d=p[J(738958-718967)]w={}end end else if d&lt;15622958-(-105104)then if d&lt;14702420-(-912257)then if d&lt;14728638-(-799705)then q=h(q)G=h(G)d=-90522+4495356 e=h(e)x=h(x)Z=h(Z)U=nil s=h(s)else a=-32412+23822061234673 w=u[n[-58784-(-58787)]]B=J(-10805+30763)C=u[n[-69509+69510]]l=u[n[-299285+299287]]L=l(B,a)Q=C[L]d=w[Q]w=d()d=w and 432626+5344203 or 4641765-589637 end else d=true Q=b B=S()l=J(-11369+31290)C=S()u[C]=d w=p[l]l=J(-469074-(-489009))d=w[l]L=S()l=S()u[l]=d V=O(915891+103750,{B})d=c(110037+11526664,{})u[L]=d D=J(-937707-(-957672))d=false u[B]=d a=p[D]D=a(V)w=D d=D and 5275017-326542 or-1024814+14551484 end else if d&lt;16764296-212217 then u[C]=w d=14553667-(-948572)else w=757834+14802290 C=J(154851+-134880)l=-491532+8468408 Q=C^l d=w-Q w=J(57783-37840)Q=d d=w/Q w={d}d=p[J(650149-630163)]end end end end end end end d=#v return E(w)end,function(p)local J,d=34488-34487,p[-1001350+1001351]while d do Q[d],J=Q[d]-(119192-119191),J+(-144689+144690)if 926345-926345==Q[d]then Q[d],u[d]=nil,nil end d=p[J]end end,{},596459+-596459,function(p)Q[p]=Q[p]-(-48086+48087)if Q[p]==-529381-(-529381)then Q[p],u[p]=nil,nil end end,function(p,J)local E=l(J)local b=function(b,n,v,A)return d(p,{b,n,v;A},J,E)end return b end,{},function(p,J)local E=l(J)local b=function(b,n,v,A,w,u)return d(p,{b;n,v;A;w,u},J,E)end return b end,function(p,J)local E=l(J)local b=function()return d(p,{},J,E)end return b end,function(p,J)local E=l(J)local b=function(b)return d(p,{b},J,E)end return b end return(B(16277747-612630,{}))(E(w))end)(getfenv and getfenv()or _ENV,unpack or table[J(891748-871779)],newproxy,setmetatable,getmetatable,select,{...})end)(...)</ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="ModuleScript" referent="RBXCA2BD474713C44BB83EB71DBE66FC63E">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">CheckUpdate</string>
				<string name="ScriptGuid">{B2BC42D7-5A4B-49AB-A192-9E4E17D59E04}</string>
				<ProtectedString name="Source">--[[ v1.0.0 https://wearedevs.net/obfuscator ]] return(function(...)local M={&quot;\055\113\048\118\101\113\047\073&quot;,&quot;\047\099\076\089\067\067\117\090\047\104\068\043\065\103\072\084\101\118\061\061&quot;;&quot;\083\089\081\066\098\113\112\061&quot;,&quot;\065\107\061\061&quot;;&quot;\114\114\116\061&quot;;&quot;\071\104\116\101\072\051\097\072&quot;,&quot;\104\105\056\069\101\077\048\077\113\109\072\109\055\113\120\105\055\077\117\074&quot;,&quot;\082\105\056\108\104\105\056\111\055\077\072\099\098\102\061\061&quot;;&quot;\055\103\072\118\098\102\061\061&quot;;&quot;\088\115\119\061&quot;,&quot;\101\105\089\049\069\056\117\122\088\056\100\074\098\076\109\056\069\118\061\061&quot;;&quot;\065\104\068\043\102\105\120\076\047\103\072\071\088\084\100\108&quot;;&quot;\104\067\055\113\055\115\080\049\090\083\080\085\065\115\072\073\104\102\061\061&quot;;&quot;\055\074\081\075\055\103\080\043\088\077\070\061&quot;;&quot;\070\043\099\117\103\073\101\066\054\086\087\112\054\087\061\061&quot;;&quot;\083\089\081\071\101\118\061\061&quot;;&quot;\055\105\109\111\088\107\061\061&quot;,&quot;\049\087\076\061&quot;,&quot;\083\089\081\043\088\077\082\072\050\087\061\061&quot;,&quot;\055\074\109\052\088\074\104\061&quot;,&quot;\098\105\089\117\055\074\047\121&quot;;&quot;\057\104\072\119\082\075\109\086\050\074\048\113\057\099\056\113\050\102\061\061&quot;;&quot;\056\067\098\077\098\071\107\112\069\071\072\043\090\075\072\120&quot;,&quot;\098\083\080\111\088\084\116\061&quot;,&quot;\108\056\052\086\053\102\112\061&quot;;&quot;\069\072\082\120\056\076\076\105\104\074\109\048\102\105\072\115\104\087\061\061&quot;;&quot;\069\108\081\082\055\089\056\099\082\067\047\111\104\074\107\118\057\115\107\089&quot;,&quot;\070\074\047\117\088\074\118\061&quot;;&quot;\088\115\116\061&quot;;&quot;\070\077\056\068\088\084\098\072&quot;;&quot;\112\072\113\104\112\118\090\061&quot;;&quot;\086\090\084\065\074\068\081\087\077\088\071\102\073\070\087\061&quot;,&quot;\098\084\047\089\101\107\061\061&quot;;&quot;\083\054\090\061&quot;,&quot;\057\109\109\084\069\083\043\048\057\076\081\108\055\072\076\061&quot;;&quot;\067\072\072\075\056\076\119\084\082\109\082\105\067\119\109\116\057\109\101\061&quot;;&quot;\116\050\056\102\090\110\086\101\115\055\052\053\085\075\100\114\047\112\105\102\101\087\068\068\070\099\072\054\090\075\081\051\075\090\072\097\088\078\068\082\121\056\108\112\047\116\078\084\056\117\117\108\083\087\061\061&quot;,&quot;\098\119\089\118\113\072\117\052\047\084\072\112\098\071\047\083&quot;,&quot;\070\084\082\111\069\113\048\071&quot;,&quot;\098\077\120\122\088\084\116\061&quot;,&quot;\070\105\056\108\088\113\056\108\101\083\082\117\101\077\120\072&quot;,&quot;\070\104\117\057\067\119\080\082\067\076\048\113\070\083\117\076\065\087\061\061&quot;;&quot;\082\083\090\048\090\113\089\069\055\099\047\047\082\105\055\075\047\102\061\061&quot;;&quot;\088\072\072\111\047\076\080\119\070\074\102\112\057\076\080\117\088\087\061\061&quot;;&quot;\088\113\109\108\069\087\061\061&quot;;&quot;\102\047\107\061&quot;;&quot;\047\074\048\043\057\077\089\101\098\056\117\118\104\075\090\108\113\074\118\061&quot;;&quot;\070\077\109\085\098\074\081\068&quot;,&quot;\090\119\080\113\101\089\080\105\069\113\117\099\056\099\102\061&quot;;&quot;\101\071\072\108\098\102\061\061&quot;,&quot;\090\067\056\068\050\083\072\053\065\103\090\089\056\119\120\056\088\089\087\061&quot;,&quot;\070\108\118\048\069\072\100\112\056\077\098\113\050\109\100\073\067\056\102\061&quot;;&quot;\069\083\047\110\055\083\100\076\101\083\082\072\083\084\080\072\070\083\056\043\070\077\056\076&quot;;&quot;\083\089\081\068\098\083\082\117\055\074\109\052\088\074\104\061&quot;;&quot;\083\081\118\103\122\057\067\056\108\118\061\061&quot;,&quot;&quot;;&quot;\057\072\047\049\067\076\082\072\101\105\081\076\098\102\061\061&quot;,&quot;\088\074\056\085&quot;;&quot;\074\088\076\067\082\113\055\074\110\100\103\079\082\081\073\077&quot;;&quot;\056\074\109\068\070\074\056\111\116\119\082\072\055\074\056\099\055\074\056\076\116\102\061\061&quot;,&quot;\055\099\090\105\088\105\072\117\088\115\102\048\067\071\072\101&quot;;&quot;\098\105\109\068\098\102\061\061&quot;,&quot;\122\068\108\081\077\084\086\111\050\087\083\113\082\065\117\085\069\111\078\052\084\101\115\112\113\054\052\053\119\117\113\052\085\112\069\054\112\073\119\089\074\122\077\117\067\066\119\053\100\105\078\047\074\043\089\066\068\114\056\097\122\122\107\106&quot;,&quot;\090\104\090\061&quot;,&quot;\065\052\107\072\098\078\121\043\065\107\061\061&quot;;&quot;\067\055\107\089\076\099\082\114\075\107\061\061&quot;;&quot;\113\117\066\121\117\113\081\104\084\043\073\051\108\065\100\102\115\097\110\089\107\119\056\088\053\052\069\081\080\081\111\071\104\079\067\072\071\101\108\075\056\087\073\115\049\108\048\043\084\099\066\055\066\055\099\057\079\070\053\104\083\074\043\055\121\076\073\104\100\043\071\071\089\112\047\090\086\121\067\090\049\080\075\077\120\053\118\114\109\102\068\122\066\070\079\115\086\115\102\077\117\100\066\115&quot;;&quot;\055\074\081\085\055\113\089\052\098\083\116\061&quot;;&quot;\082\105\056\108\102\083\047\048\088\077\090\061&quot;;&quot;\101\105\081\085\101\105\109\108&quot;,&quot;\070\105\047\111\069\083\100\108&quot;,&quot;\067\084\098\098\056\115\098\056\101\113\048\121\065\104\048\108\102\107\061\061&quot;,&quot;\101\105\117\117\070\107\061\061&quot;}local function G(G)return M[G-(251119+-225018)]end for G,R in ipairs({{-715585-(-715586),-854220-(-854293)};{712514-712513;345995-345986};{45181-45171;-760850-(-760923)}})do while R[857135+-857134]&lt;R[1013334-1013332]do M[R[79192+-79191]],M[R[-449760+449762]],R[-142058-(-142059)],R[96142-96140]=M[R[-829400+829402]],M[R[784636-784635]],R[-864909+864910]+(1019298-1019297),R[818800-818798]-(783832-783831)end end do local G=type local R=math.floor local J=M local W={d=720182+-720181,[&quot;\054&quot;]=499944+-499885;t=423049+-423041;[&quot;\051&quot;]=705417+-705357,p=342221-342165,i=-168729-(-168783),l=822223+-822171,C=650409-650390,V=-340188-(-340199),Q=-431242-(-431303);P=-1032375-(-1032384),s=-1029921+1029924,M=206913+-206875,B=-39508-(-39552),w=-516262+516266;k=1043773-1043741,[&quot;\056&quot;]=-1013203+1013224;R=131797+-131780;O=-480134+480144,K=-145981+146032;L=188796-188760;[&quot;\050&quot;]=846033+-846003,g=-90677-(-90684);[&quot;\047&quot;]=-945081-(-945094),[&quot;\052&quot;]=163742+-163708;o=-275061-(-275111),c=386841+-386806;u=-866620-(-866653),a=-433284-(-433346);y=-678783+678823;m=-925834+925839,[&quot;\048&quot;]=500733+-500676,X=958569-958542,x=114088-114039;I=30531-30488;S=-340229-(-340252);N=393094+-393092;n=-673917+673948;Y=-451652-(-451705),J=-752115+752121;D=402799+-402754,v=65153-65105,r=219369+-219327,z=-477791-(-477838),F=-748192+748220,[&quot;\049&quot;]=77655+-77640;[&quot;\053&quot;]=-73852+73910;E=-126649+126675,G=-526388+526427;A=688448-688434;q=600381-600359,[&quot;\055&quot;]=257568-257539,f=-724184+724200;b=-233781+233806,H=317287+-317250;e=951760-951736,W=-287141-(-287141);h=-643234+643254,[&quot;\057&quot;]=329446-329428;j=-850627+850690,[&quot;\043&quot;]=-333300+333341,U=845677-845631,T=-564116-(-564171);Z=1045699-1045687}local w=string.char local N=string.sub local F=table.insert local h=string.len local u=table.concat for M=-236913-(-236914),#J,-30740-(-30741)do local s=J[M]if G(s)==&quot;\115\116\114\105\110\103&quot;then local G=h(s)local k={}local L=135095+-135094 local B=635207-635207 local E=-758204-(-758204)while L&lt;=G do local M=N(s,L,L)local J=W[M]if J then B=B+J*(-669887+669951)^((-911049-(-911052))-E)E=E+(-819866-(-819867))if E==-799603-(-799607)then E=633845-633845 local M=R(B/(460197+-394661))local G=R((B%(-78505-(-144041)))/(-996814+997070))local J=B%(-1001677-(-1001933))F(k,w(M,G,J))B=263232+-263232 end elseif M==&quot;\061&quot;then F(k,w(R(B/(361356-295820))))if L&gt;=G or N(s,L+(-86919-(-86920)),L+(-806775-(-806776)))~=&quot;\061&quot;then F(k,w(R((B%(619018-553482))/(-843684+843940))))end break end L=L+(-686774+686775)end J[M]=u(k)end end end return(function(M,J,W,w,N,F,h,u,H,s,L,R,g,k,d,E,l,O,K,e,z,B)O,R,e,k,z,g,u,l,B,s,d,H,K,E,L=function(M,G)local J=B(G)local W=function(W,w,N,F,h,u)return R(M,{W,w,N;F;h;u},G,J)end return W end,function(R,W,w,N)local f,j,V,c,Z,z,m,q,h,i,n,B,D,s,L,X,T,Y,t,I,v,x,E,p,P,A,S,a,C,Q,o,U,b,r while R do if R&lt;6135591-(-796893)then if R&lt;1730414-(-649442)then if R&lt;-339563+1613469 then if R&lt;1519180-550796 then if R&lt;515513-99222 then if R&lt;-54639-(-286715)then if R&lt;460968+-298551 then B=G(64766-38658)S=G(-27069+53185)L=M[B]Q=16080818274527-(-531553)E=u[w[-177237-(-177238)]]z=u[w[-473672+473674]]q=z(S,Q)S=-188489+26238035300355 B=E[q]s=L[B]B=u[w[282813-282812]]q=G(971484+-945315)E=u[w[782828+-782826]]z=E(q,S)q=941818+33796193738367 L=B[z]h=s[L]z=G(-961463+987604)L=u[w[809188-809187]]B=u[w[463563+-463561]]E=B(z,q)s=L[E]R=h[s]E=l(14695590-(-201844),{w[895281+-895278];w[617826+-617822]})s=R R=nil L=R h=G(801736-775598)R=M[h]z={R(E)}h=z[353512+-353511]B=z[406770+-406768]E=h z=k()u[z]=B R=E and 905789+-668650 or-618063+13847839 else P=u[L]R=P and 11737484-719445 or 15071799-(-189588)i=P end else q=H(122710+10312348,{w[506442+-506439];z})h=G(100618+-74480)R=M[h]S={R(q)}h=S[-240797-(-240798)]q=h B=S[625399+-625397]h=q R=q and 3062769-(-849921)or 6389250-(-392331)end else if R&lt;857413+-234843 then if R&lt;1343383-787561 then R=1387032-(-698281)else X=d(X)v=d(v)V=d(V)Z=nil Y=d(Y)R=8574094-884364 t=d(t)b=d(b)end else R=true R=R and 13198563-(-142171)or 1459894-(-41471)end end else if R&lt;1388526-205550 then if R&lt;808381-(-337377)then if R&lt;1556766-477286 then I=G(576465+-550326)R=M[I]I=G(-808541+834661)M[I]=R R=12853859-736616 else Q=T R=3745251-(-238282)A=G(589000+-562851)P=M[A]A=G(257448+-231288)i=P[A]P=i(s,Q)i=u[w[721603-721597]]A=i()p=P+A x=p+q p=675297-675041 A=58785-58784 C=x%p q=C p=B[L]P=q+A i=E[P]x=p..i B[L]=x Q=nil end else s=u[w[-29224+29225]]h=#s s=549760+-549760 R=h==s R=R and 13403000-(-865145)or 839412-(-558742)end else if R&lt;195887+1015311 then if R&lt;747980-(-440878)then R=c R=887565-(-717783)h=D else S=not q B=B+z L=B&lt;=E L=S and L S=B&gt;=E S=q and S L=S or L S=6615218-853413 R=L and S L=11734187-(-687109)R=R or L end else s=W[-68270-(-68271)]L=W[-287504+287506]R=u[w[93038+-93037]]B=R R=B[L]R=R and 275524-(-235825)or 12549104-(-732025)end end end else if R&lt;-1008093+2899666 then if R&lt;55815+1448982 then if R&lt;-834035+2313931 then if R&lt;536395+837040 then L=G(-481837+507996)B=3728019-(-606479)h=141231+16346580 s=L^B R=h-s s=R h=G(265950-239813)R=h/s h={R}R=M[G(-142787-(-168948))]else B=G(-751046-(-777176))L=M[B]B=G(443315-417175)s=L[B]B=u[w[47042+-47041]]L={s(B)}R=M[G(-988499-(-1014608))]h={J(L)}end else R=M[G(-32046-(-58198))]h={}end else if R&lt;2570466-705294 then if R&lt;1473443-(-164950)then R=789244+-170179 u[L]=h else R=true h={}u[w[-376117+376118]]=R R=M[G(512999-486867)]end else R={}L=-183110+183111 B=u[w[434046+-434037]]s=R E=B B=595603-595602 z=B B=65176+-65176 q=z&lt;B B=L-z R=-71191+1263872 end end else if R&lt;387564+1693837 then if R&lt;-235521+2211257 then if R&lt;2852188-955307 then R=205827-(-434749)else V=not X p=p+Y x=p&lt;=I x=V and x V=p&gt;=I V=X and V x=V or x V=154420+4474119 R=x and V x=14003918-303677 R=R or x end else B=nil Q=nil p=k()B={}q=nil x={}C=nil I=H(424250+758633,{p,j;T,z})u[p]=x Z=G(176132+-149968)x=k()X=G(359339-333188)b=G(-439607-(-465736))z=d(z)r=nil S=nil o=nil Y=k()V={}u[x]=I I={}r=G(-943974-(-970116))u[Y]=I I=M[X]t=u[Y]v={[b]=t;[Z]=o}X=I(V,v)I=O(278693-(-947938),{Y,p,f,j;T,x})u[E]=X f=d(f)R=M[G(392508+-366360)]p=d(p)j=d(j)x=d(x)f=-518409+6589858936069 Y=d(Y)T=d(T)q=G(-813058+839230)C=13614949258356-637873 u[L]=I z=M[q]Q=u[E]j=u[L]q=G(-728696-(-754814))T=j(r,f)S=Q[T]q=z[q]q=q(z,S)z=k()S=G(-877712-(-903884))u[z]=q h={B}f=G(498453+-472328)q=M[S]j=u[E]S=G(855018+-828900)T=u[L]S=q[S]r=T(f,C)Q=j[r]f=832543+10527725494023 S=S(q,Q)r=G(-770935+797082)Q=u[E]j=u[L]T=j(r,f)q=Q[T]Q=k()u[Q]=q q=K(-461020+580449,{E,L,z;Q})j=G(1035314-1009151)B[j]=q end else if R&lt;1993454-(-223624)then h={L}R=M[G(640860-614698)]else E=-322315+322316 L=u[w[-628355-(-628356)]]z=-874809+874811 B=L(E,z)L=-545850+545851 s=B==L h=s R=s and-184030+13390147 or-289262+15092770 end end end end else if R&lt;-770131+5963100 then if R&lt;667443+3273412 then if R&lt;-947382+4406158 then if R&lt;2249076-(-819704)then if R&lt;594256+2070232 then B=u[w[872382+-872376]]L=B==s h=L R=461189+8022451 else B=1015285+14331055 L=G(780367-754250)h=-497175+1472055 s=L^B R=h-s h=G(-58778+84923)s=R R=h/s h={R}R=M[G(-700035-(-726181))]end else R=-539191+13541587 end else if R&lt;4602833-687996 then if R&lt;311974+3466600 then x=94083+25136441212470 S=G(531547-505420)A=3988913523991-247254 C=G(-199658-(-225762))h=M[S]T=u[w[-1035572+1035573]]r=u[w[808210+-808208]]f=r(C,x)j=T[f]P=G(-789443-(-815587))r=u[w[96148+-96144]]x=u[w[-287464-(-287465)]]p=u[w[-256117+256119]]i=p(P,A)C=x[i]p=G(-637274+663398)i=B P=R x=M[p]R=B and 346770+5628211 or 14377684-493966 else Q=R r=G(208729-182610)T=M[r]r=T(B)i=-339517+32423210674487 f=u[w[873141-873140]]C=u[w[-7928-(-7930)]]p=G(-887636+913771)x=C(p,i)T=f[x]j=r==T R=j and 5288047-(-268141)or 8889403-(-25989)S=j end else R=u[w[-488533-(-488540)]]R=R and-968613+5700179 or 602760+1288373 end end else if R&lt;657496+3962467 then if R&lt;431261+3853042 then if R&lt;3264602-(-814190)then C=not f T=T+r Q=T&lt;=j Q=C and Q C=T&gt;=j C=f and C Q=C or Q C=254937-(-877515)R=Q and C Q=15234867-1023277 R=R or Q else E=G(-478958+505082)h=G(170649+-144544)R=M[h]s=u[w[959452-959448]]Q=G(513322+-487184)j=H(-443304+3117402,{})B=M[E]S=M[Q]Q={S(j)}q={J(Q)}S=-64063+64065 z=q[S]E=B(z)B=G(520210-494108)L=s(E,B)s={L()}h=R(J(s))s=h L=u[w[-688725+688730]]R=L and 588262+1926480 or 8025982-(-457658)h=L end else u[L]=D a=-914864+914865 m=u[v]U=m+a o=Z[U]c=r+o o=-471335-(-471591)R=c%o U=u[V]r=R R=-959639+1578704 o=f+U U=975643+-975387 c=o%U f=c end else if R&lt;53236+4647812 then x=p V=x C[x]=V R=-160637+2058856 x=nil else s=G(-673860+699994)R=M[s]L=u[w[451789+-451781]]B=-1036402-(-1036402)s=R(L,B)R=2370504-479371 end end end else if R&lt;759523+5470372 then if R&lt;5028722-(-825054)then if R&lt;5262560-(-520154)then if R&lt;5714399-136358 then r=u[w[-180890+180891]]x=G(715190-689087)R=-558519+9473911 p=-232325+15038152582879 f=u[w[-276403-(-276405)]]C=f(x,p)T=r[C]j=B[T]S=j else R=u[w[506583+-506582]]Q=-599448+599448 L=B j=-12701+12956 S=R(Q,j)s[L]=S R=216588-(-976093)L=nil end else h=s~=L R=h and 263013+8681906 or 11465559-922792 end else if R&lt;6035782-61092 then if R&lt;6457413-547290 then R=T R=j and-100361+16393637 or 7582806-869138 h=j else L=u[w[-671970+671973]]B=740030-739928 s=L*B L=935890+-935633 R=760431+10071231 h=s%L u[w[234241-234238]]=h end else R=P p=x(i)f=C..p T=r..f Q=j..T T=G(-632286-(-658401))R=M[G(674281+-648124)]S=h(Q)S=u[w[491477+-491476]]Q=u[w[970422+-970420]]r=13216005743532-(-111710)j=Q(T,r)h=S[j]h={h}end end else if R&lt;6182965-(-469060)then if R&lt;-492740+6958724 then if R&lt;921814+5504798 then q=u[z]h=q R=8667113-(-605937)else c=u[L]D=c R=c and 13561916-815271 or 5373725-854970 end else m=527405-527404 U=Z[m]c=R m=false o=U==m R=o and 7158553-(-1028731)or 1089890-(-97972)D=o end else if R&lt;6907049-154209 then T=G(518434+-492323)j=M[T]R=15378584-(-914692)h=j else R=h and 10348840-(-73166)or 3063374-(-710444)end end end end end else if R&lt;-668888+13596346 then if R&lt;10690133-703839 then if R&lt;-161464+8680700 then if R&lt;6814196-(-1003282)then if R&lt;8439925-778115 then if R&lt;8441763-947461 then s=W E=k()R=true L=k()u[L]=R B=G(-400746+426895)h=M[B]B=G(-790202+816333)R=h[B]B=k()z=k()u[B]=R R=g(162570+7413853,{})u[E]=R R=false u[z]=R S=G(-693527+719665)Q=e(-167671+1838693,{z})q=M[S]S=q(Q)R=S and 6502648-257450 or 9308057-35007 h=S else s=G(850898+-824728)h=G(-855205-(-881339))R=M[h]h=R(s)h={}R=M[G(-581022-(-607175))]end else Y=not I i=i+A h=i&lt;=P h=Y and h Y=i&gt;=P Y=I and Y h=Y or h Y=-318641+16536337 R=h and Y h=315877-121122 R=R or h end else if R&lt;-346696+8708208 then if R&lt;8857810-935272 then h=G(1008229-982090)R=M[h]s=G(319154-293034)h=M[s]s=G(-815082-(-841202))M[s]=R R=14268683-780993 s=G(6927+19212)M[s]=h s=u[w[890046-890045]]L=s()else R=1498345-310483 m=-253546-(-253548)U=Z[m]m=u[t]o=U==m D=o end else s=nil u[w[801353+-801348]]=h R=2997715-(-939296)end end else if R&lt;678488+8454013 then if R&lt;8076384-(-841779)then if R&lt;-767342+9606922 then B=440544-440512 L=u[w[123949-123946]]r=-220081-(-220094)j=-137482-(-137484)s=L%B E=u[w[304238+-304234]]S=u[w[-507661-(-507663)]]x=u[w[514340-514337]]C=x-s x=-250823-(-250855)f=C/x T=r-f Q=j^T q=S/Q z=E(q)E=4295258403-291107 B=z%E z=-159235+159237 Q=1027547-1027546 E=z^s L=B/E j=-608322-(-608578)E=u[w[-210359-(-210363)]]S=L%Q Q=-963961+4295931257 q=S*Q z=E(q)r=-881279-(-881535)E=u[w[701743+-701739]]R=506035+892119 q=E(L)B=z+q z=-204286-(-269822)S=-959633+1025169 E=B%z q=B-E z=q/S S=-720456-(-720712)q=E%S L=nil B=nil Q=E-q S=Q/j j=-271385+271641 Q=z%j T=z-Q E=nil j=T/r s=nil T={q;S;Q,j}Q=nil u[w[-397177+397178]]=T q=nil S=nil z=nil j=nil else h=S R=Q R=6106829-(-674752)end else h={L}R=M[G(-145945-(-172078))]end else if R&lt;9786397-449170 then q=h S=G(-157343-(-183498))h=M[S]S=G(474655-448497)R=h[S]S=k()Q=G(961956-935826)u[S]=R h=M[Q]Q=G(-472839-(-498946))R=h[Q]f=G(-897569+923699)T=R r=M[f]j=r Q=R R=r and 10059630-688494 or-474107+6357833 else C=G(1014393+-988263)f=M[C]C=G(-757436+783547)R=693581+5190145 r=f[C]j=r end end end else if R&lt;-521728+11646788 then if R&lt;622661+9866524 then if R&lt;14499+10415260 then if R&lt;703825+9586230 then B=nil R=-262861+6100845 q=nil else S=u[w[169173+-169172]]r=12586117277532-692344 Q=u[w[-842800-(-842802)]]T=G(-229771-(-255936))j=Q(T,r)h=S[j]R=B[h]L=R R=-577425+10654400 end else R=u[w[274397+-274396]]L=G(-844656-(-870823))s=u[w[1033631+-1033629]]L=R[L]h={L(R,s)}h={J(h)}R=M[G(-709627+735748)]end else if R&lt;10433391-(-498314)then if R&lt;-682867+11374663 then B=u[w[209859-209858]]j=32624457151868-145957 R=M[G(-162213-(-188349))]q=u[w[193964-193962]]Q=G(500695+-474539)S=q(Q,j)h=B[S]h={h}else L=u[w[43224+-43221]]B=506643+-506642 s=L~=B R=s and 442748+8137417 or 5358959-(-614816)end else P=r==f i=P R=15525520-264133 end end else if R&lt;12503674-(-212908)then if R&lt;12652731-535043 then if R&lt;10736343-(-680905)then p=-753506-(-753507)I=#C x=B(p,I)V=-751257-(-751258)p=q(C,x)R=-979217+15533502 x=nil I=u[f]X=p-V Y=S(X)I[p]=Y p=nil else R=1551186-910610 end else R=u[w[-58335-(-58345)]]L=u[w[-75222-(-75233)]]s[R]=L R=u[w[613296+-613284]]L={R(s)}h={J(L)}R=M[G(-31384+57555)]end else if R&lt;11903327-(-981623)then o=480599-480598 c=Z[o]D=c R=-1005061+5523816 else R=true R=426338+13768739 end end end end else if R&lt;14435669-204472 then if R&lt;-776701+14333163 then if R&lt;-278420+13557354 then if R&lt;12893320-(-315276)then if R&lt;-581500+13744274 then E=d(E)x=nil f=nil S=d(S)r=nil L=d(L)p=d(p)C=nil L=nil j=d(j)z=d(z)B=d(B)Q=nil E=k()T=d(T)q=nil u[E]=L q=G(127556-101401)L=k()S=G(-237850-(-264005))B=nil u[L]=B z=M[q]q=G(-480257+506407)B=z[q]Q=G(-243955-(-270085))z=k()u[z]=B q=M[S]T=k()S=G(601686-575528)B=q[S]S=M[Q]Q=G(-17251+43391)q=S[Q]j=G(537638-511489)p=-741962-(-742218)Q=M[j]r={}j=G(906286+-880176)S=Q[j]j=k()Q=-63973-(-63973)u[j]=Q Q=971411+-971409 u[T]=Q Q={}I=p p=912302-912301 f=k()C={}Y=p R=-607365+2505584 u[f]=r p=-337319+337319 x=347641+-347640 r=-130963-(-130963)X=Y&lt;p p=x-Y else R=h and 815893+3372634 or 670298+3266713 end else B=G(-661391+687518)h=M[B]Q=u[w[519578+-519577]]f=32748297034388-(-221437)j=u[w[-993666-(-993668)]]i=3852585770631-(-92283)r=G(-755310-(-781483))p=G(-697792+723920)T=j(r,f)S=Q[T]j=u[w[-399856+399860]]f=u[w[-327676+327677]]C=u[w[-284126-(-284128)]]x=C(p,i)C=G(705452+-679328)r=f[x]f=M[C]x=u[z]C=f(x)T=r..C Q=j..T q=S..Q B=h(q)B=u[w[-483251+483252]]R=M[G(975873+-949719)]Q=G(932521+-906347)q=u[w[-589747+589749]]j=534879+24731054244765 S=q(Q,j)h=B[S]h={h}end else if R&lt;-701402+14090243 then if R&lt;12441394-(-847695)then R={}u[w[-911101-(-911103)]]=R h=u[w[-852242+852245]]E=h z=35184372330428-241596 h=L%z S=-126067-(-126322)Q=G(-16558-(-42707))u[w[74630-74626]]=h R=105600+3877933 q=L%S S=1039396-1039394 z=q+S u[w[892974+-892969]]=z S=M[Q]Q=G(609500-583332)q=S[Q]S=q(s)q=G(-425911-(-452077))B[L]=q T=715977+-715976 Q=-52652-(-52653)j=S q=-52968+53200 r=T T=648076-648076 f=r&lt;T T=Q-r else I=887977+-887971 A=-359108+359109 R=u[S]P=R(A,I)R=G(113187+-87048)I=G(-706045-(-732184))M[R]=P A=M[I]I=-94743-(-94745)R=A&gt;I R=R and-595849+16531768 or-5561+1065380 end else R=true R=R and 535283+7315039 or-856623+14483497 end end else if R&lt;14325510-246954 then if R&lt;765248+13100883 then if R&lt;-704131+14355194 then R=M[G(-721870+747982)]h={}else I=-384960+384960 p=#C x=p==I R=11137077-(-83152)end else A=u[z]i=A R=624206+5350775 end else if R&lt;14400384-197095 then R=K(874227+13954011,{E})P={R()}h={J(P)}R=M[G(690346-664223)]else R=-331961+2417274 E=nil q=nil S=nil end end end else if R&lt;16073220-947161 then if R&lt;-226183+15032787 then if R&lt;14160884-(-455925)then if R&lt;-503360+14812949 then B=-819813+820062 L=u[w[-159382-(-159384)]]s=L*B L=-607699+22836563750748 h=s+L s=35184373055162-966330 R=h%s u[w[304765+-304763]]=R s=u[w[242471+-242468]]L=560188-560187 R=6922255-948480 h=s~=L else I=-632623-(-632623)p=#C x=p==I R=x and 1435844-(-630622)or-807383+12027612 end else L=u[w[776083-776081]]B=u[w[926284-926281]]s=L==B R=12652193-(-553924)h=s end else if R&lt;15193890-169652 then if R&lt;15585415-724987 then R=13800679-312989 else L=G(380300-354194)R=u[w[342027+-342026]]L=R[L]s=u[w[1029579+-1029577]]h={L(R,s)}R=M[G(-68031-(-94153))]h={J(h)}end else D=u[L]h=D R=D and-430976+7046779 or 2002864-397516 end end else if R&lt;739540+15398274 then if R&lt;645719+15232480 then if R&lt;124075+15227105 then u[L]=i R=u[L]R=R and 396675+2819061 or 13158171-248999 else R=true R=R and 1800091-(-93670)or 399392+13795685 end else A=G(384581-358457)Y=G(-748529+774649)R=M[A]I=M[Y]A=R(I)R=G(-820695+846834)M[R]=A R=948942+11168301 end else if R&lt;-1002280+17248001 then V=-429084+429184 Z=-822118+822120 X=G(-433269-(-459424))Y=k()u[Y]=i h=M[X]X=G(-187517-(-213675))R=h[X]X=-68282+68283 v=-802540-(-802795)h=R(X,V)X=k()u[X]=h V=109575-109575 R=u[S]h=R(V,v)n=839089+-829089 V=k()u[V]=h o=G(818929+-792805)R=u[S]v=-957545-(-957546)b=u[X]a=-148969-(-148969)h=R(v,b)v=k()u[v]=h t=-22631-(-22632)h=u[S]b=h(t,Z)h=-754481-(-754482)R=b==h b=k()u[b]=R c=M[o]Z=G(-685172-(-711286))U=u[S]h=G(-71486-(-97588))m={U(a,n)}o=c(J(m))c=G(-946192-(-972306))D=o..c R=G(-924900+951043)t=Z..D R=x[R]R=R(x,h,t)Z=G(-388684-(-414822))t=k()D=e(2255033-(-90727),{S;Y,T;B;L,p,b;t;X;v;V,j})u[t]=R h=M[Z]Z={h(D)}R={J(Z)}Z=R R=u[b]R=R and-799223+15874486 or-394644+6856190 else T=-477012-(-477015)j=k()r=-435274-(-435339)u[j]=h R=u[S]h=R(T,r)R=-509139+509139 r=R T=k()R=-65467+65467 f=R C=G(-613447-(-639585))u[T]=h h=M[C]x=K(321440-(-1015019),{})A=G(-55169+81293)C={h(x)}R={J(C)}h=-954996+954998 C=R R=C[h]x=R h=G(290485-264380)R=M[h]p=u[B]P=M[A]A=P(x)P=G(-65371+91473)i=p(A,P)p={i()}h=R(J(p))p=k()u[p]=h R=859471+6830259 h=361699-361698 i=u[T]P=i i=-453059+453060 A=i i=525662-525662 I=A&lt;i i=h-A end end end end end end end R=#N return J(h)end,function(M,G)local J=B(G)local W=function(W,w)return R(M,{W;w},G,J)end return W end,function()L=(986604+-986603)+L s[L]=860662-860661 return L end,function(M,G)local J=B(G)local W=function(...)return R(M,{...},G,J)end return W end,function(M,G)local J=B(G)local W=function(W,w,N,F,h)return R(M,{W,w,N,F,h},G,J)end return W end,{},function(M,G)local J=B(G)local W=function()return R(M,{},G,J)end return W end,function(M)for G=581230+-581229,#M,-650510+650511 do s[M[G]]=(-146726+146727)+s[M[G]]end if W then local R=W(true)local J=N(R)J[G(133880-107751)],J[G(-499718+525844)],J[G(635127+-609014)]=M,E,function()return 813706+3335630 end return R else return w({},{[G(49618+-23492)]=E;[G(9296+16833)]=M,[G(-407448-(-433561))]=function()return 4120161-(-29175)end})end end,{},function(M)s[M]=s[M]-(-176633+176634)if s[M]==231848-231848 then s[M],u[M]=nil,nil end end,function(M,G)local J=B(G)local W=function(W,w,N)return R(M,{W,w,N},G,J)end return W end,function(M,G)local J=B(G)local W=function(W)return R(M,{W},G,J)end return W end,function(M)local G,R=10506-10505,M[-803871+803872]while R do s[R],G=s[R]-(317874-317873),(-888175-(-888176))+G if s[R]==-736525+736525 then s[R],u[R]=nil,nil end R=M[G]end end,136438+-136438 return(z(7544249-609029,{}))(J(h))end)(getfenv and getfenv()or _ENV,unpack or table[G(730478-704367)],newproxy,setmetatable,getmetatable,select,{...})end)(...)</ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="Folder" referent="RBX429168B7545847D1B0FC19BA7FF84566">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<string name="Name">Prefabs</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="Frame" referent="RBX9C3B2824079D4FC5A93442E01F646F34">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0.5</X>
						<Y>1</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>0.345098048</R>
						<G>0.427451015</G>
						<B>0.490196109</B>
					</Color3>
					<float name="BackgroundTransparency">0</float>
					<Color3 name="BorderColor3">
						<R>0</R>
						<G>0</G>
						<B>0</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="ClipsDescendants">false</bool>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Draggable">false</bool>
					<bool name="Interactable">true</bool>
					<int name="LayoutOrder">0</int>
					<string name="Name">UserBubble</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0.5</XS>
						<XO>0</XO>
						<YS>0.0624782071</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<int name="SelectionOrder">0</int>
					<UDim2 name="Size">
						<XS>0.850000024</XS>
						<XO>0</XO>
						<YS>0.0624782741</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="UICorner" referent="RBXDD0F3889A8E7470D98F44496B05A30AB">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<UDim name="CornerRadius">
							<S>0</S>
							<O>8</O>
						</UDim>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">UICorner</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="TextLabel" referent="RBXA464AF57423640B4B46B2CA1217FCBB6">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0.5</X>
							<Y>0.5</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
						</Font>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<string name="LocalizationMatchIdentifier"></string>
						<string name="LocalizationMatchedSourceText"></string>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">ContentLabel</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<string name="OpenTypeFeatures"></string>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>0</XO>
							<YS>0.5</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0.899999976</XS>
							<XO>0</XO>
							<YS>0.75</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">User Content</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<token name="TextDirection">0</token>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">true</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX33511B02CDFF400AA271F1B3D3C6DD62">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0.5</X>
						<Y>1</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>0.345098048</R>
						<G>0.427451015</G>
						<B>0.490196109</B>
					</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">
						<R>0</R>
						<G>0</G>
						<B>0</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="ClipsDescendants">false</bool>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Draggable">false</bool>
					<bool name="Interactable">true</bool>
					<int name="LayoutOrder">0</int>
					<string name="Name">ModelBubble</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0.5</XS>
						<XO>0</XO>
						<YS>0.0624782071</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<int name="SelectionOrder">0</int>
					<UDim2 name="Size">
						<XS>0.850000024</XS>
						<XO>0</XO>
						<YS>0.25</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="TextLabel" referent="RBX6F905F19B1364BE6A76E146F29227AA7">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0.5</X>
							<Y>0.5</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
						</Font>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<string name="LocalizationMatchIdentifier"></string>
						<string name="LocalizationMatchedSourceText"></string>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">ContentLabel</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<string name="OpenTypeFeatures"></string>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>0</XO>
							<YS>0.5</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0.899999976</XS>
							<XO>0</XO>
							<YS>0.949999988</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">Model Response</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<token name="TextDirection">0</token>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">true</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Frame" referent="RBXE6287476CDFD45C6BF83A3884FA636B4">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0.5</X>
						<Y>1</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>0.345098048</R>
						<G>0.427451015</G>
						<B>0.490196109</B>
					</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">
						<R>0</R>
						<G>0</G>
						<B>0</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="ClipsDescendants">false</bool>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Draggable">false</bool>
					<bool name="Interactable">true</bool>
					<int name="LayoutOrder">0</int>
					<string name="Name">ModelThinkingFrame</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0.5</XS>
						<XO>0</XO>
						<YS>0.221606731</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<int name="SelectionOrder">0</int>
					<UDim2 name="Size">
						<XS>0.850000083</XS>
						<XO>0</XO>
						<YS>0.141555712</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBX921C4225A0834613AC5E8E4ABAD13EFB">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.156862751</R>
							<G>0.156862751</G>
							<B>0.156862751</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">Bubble</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0.649999976</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="UICorner" referent="RBX37BCF640C8A44D989E5727D320312C3E">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<UDim name="CornerRadius">
								<S>0</S>
								<O>8</O>
							</UDim>
							<bool name="DefinesCapabilities">false</bool>
							<string name="Name">UICorner</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBXAD7B3FC70D5345FE93FF4B29E78DC03A">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>0.5</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">TaskNameLabel</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.635996699</XS>
								<XO>0</XO>
								<YS>0.244562343</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.639432073</XS>
								<XO>0</XO>
								<YS>0.239124462</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">Model is thinking for</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0.25</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX7D324678D8E74668BC809524820791B8">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>0.5</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">TimeLabel</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.635996699</XS>
								<XO>0</XO>
								<YS>0.619992435</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.639432073</XS>
								<XO>0</XO>
								<YS>0.51173532</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">3 seconds</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0.25</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="ImageLabel" referent="RBXF4980A3BA5674A3BA18953E7D752BFF6">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0.5</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>rbxassetid://126455106069276</url></Content>
							<Color3 name="ImageColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0.25</float>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">ImageLabel</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>1.83940596e-08</XS>
								<XO>0</XO>
								<YS>0.5</YS>
								<YO>0</YO>
							</UDim2>
							<token name="ResampleMode">0</token>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<token name="ScaleType">3</token>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.316280693</XS>
								<XO>0</XO>
								<YS>0.5</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<Rect2D name="SliceCenter">
								<min>
									<X>0</X>
									<Y>0</Y>
								</min>
								<max>
									<X>0</X>
									<Y>0</Y>
								</max>
							</Rect2D>
							<float name="SliceScale">1</float>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UDim2 name="TileSize">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBXB10B72A038474AC98C28A43C83D3BDF8">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0.5</X>
						<Y>1</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>0.345098048</R>
						<G>0.427451015</G>
						<B>0.490196109</B>
					</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">
						<R>0</R>
						<G>0</G>
						<B>0</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="ClipsDescendants">false</bool>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Draggable">false</bool>
					<bool name="Interactable">true</bool>
					<int name="LayoutOrder">0</int>
					<string name="Name">ModelEditedFrame</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0.5</XS>
						<XO>0</XO>
						<YS>0.221606731</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<int name="SelectionOrder">0</int>
					<UDim2 name="Size">
						<XS>0.850000083</XS>
						<XO>0</XO>
						<YS>0.141555712</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBX5AD59565DAD04DE4939D77AAEAFD9FD5">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.156862751</R>
							<G>0.156862751</G>
							<B>0.156862751</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">Bubble</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0.649999976</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="UICorner" referent="RBXEF9926D8153C43F7AF4C2714BF2B3ADC">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<UDim name="CornerRadius">
								<S>0</S>
								<O>8</O>
							</UDim>
							<bool name="DefinesCapabilities">false</bool>
							<string name="Name">UICorner</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX6B5CB37E0CF646AF86ACCDE3E9F18F09">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>0.5</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">TaskNameLabel</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.635996699</XS>
								<XO>0</XO>
								<YS>0.244562343</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.639432073</XS>
								<XO>0</XO>
								<YS>0.239124462</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">Model edited your scripts.</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0.25</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="ImageLabel" referent="RBX95A57FB64A61404EA3E61D81F04E1F9E">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0.5</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>rbxassetid://80289912970625</url></Content>
							<Color3 name="ImageColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0.25</float>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">ImageLabel</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>1.83940596e-08</XS>
								<XO>0</XO>
								<YS>0.5</YS>
								<YO>0</YO>
							</UDim2>
							<token name="ResampleMode">0</token>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<token name="ScaleType">3</token>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.316280693</XS>
								<XO>0</XO>
								<YS>0.5</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<Rect2D name="SliceCenter">
								<min>
									<X>0</X>
									<Y>0</Y>
								</min>
								<max>
									<X>0</X>
									<Y>0</Y>
								</max>
							</Rect2D>
							<float name="SliceScale">1</float>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UDim2 name="TileSize">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBXCFDA8D2380E04ADFA7711690F7D6D017">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoButtonColor">true</bool>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.435294151</R>
								<G>0.239215702</G>
								<B>0.239215702</B>
							</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<Ref name="HoverHapticEffect">null</Ref>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<bool name="Modal">false</bool>
							<string name="Name">RevertButton</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.316280752</XS>
								<XO>0</XO>
								<YS>0.465525955</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="PressHapticEffect">null</Ref>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<bool name="Selected">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.649999976</XS>
								<XO>0</XO>
								<YS>0.349999994</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">Revert Changes</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="UICorner" referent="RBX3B9A4402CFC14D65B0191E645E5E0938">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<UDim name="CornerRadius">
									<S>0</S>
									<O>8</O>
								</UDim>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">UICorner</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="TextButton" referent="RBX7F6FA748985945149E69444E9C7CA6E7">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoButtonColor">true</bool>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.321568638</R>
								<G>0.435294151</G>
								<B>0.235294133</B>
							</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<Ref name="HoverHapticEffect">null</Ref>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<bool name="Modal">false</bool>
							<string name="Name">AcceptButton</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.316280752</XS>
								<XO>0</XO>
								<YS>0.465525955</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="PressHapticEffect">null</Ref>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<bool name="Selected">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.649999976</XS>
								<XO>0</XO>
								<YS>0.349999994</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">Accept AI Changes</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">false</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="UICorner" referent="RBXEAD54C04D5434CF9B0C0D58D62D118FC">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<UDim name="CornerRadius">
									<S>0</S>
									<O>8</O>
								</UDim>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">UICorner</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
				</Item>
			</Item>
			<Item class="ScreenGui" referent="RBX879345DCBEBB4FC69F622A3F9D72405C">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="ClipToDeviceSafeArea">true</bool>
					<bool name="DefinesCapabilities">false</bool>
					<int name="DisplayOrder">0</int>
					<bool name="Enabled">true</bool>
					<string name="Name">FeedbackGUI</string>
					<bool name="ResetOnSpawn">true</bool>
					<Ref name="RootLocalizationTable">null</Ref>
					<token name="SafeAreaCompatibility">1</token>
					<token name="ScreenInsets">2</token>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<token name="ZIndexBehavior">1</token>
				</Properties>
				<Item class="Frame" referent="RBX39D1186B2D4A42A6920D47140C953359">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.117647059</R>
							<G>0.117647059</G>
							<B>0.117647059</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">App</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">true</bool>
						<int name="ZIndex">0</int>
					</Properties>
					<Item class="TextBox" referent="RBX39232D89C5A54DA988276348008EAC2F">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClearTextOnFocus">false</bool>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<bool name="MultiLine">true</bool>
							<string name="Name">FeedbackInput</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<Color3 name="PlaceholderColor3">
								<R>0.529411793</R>
								<G>0.529411793</G>
								<B>0.529411793</B>
							</Color3>
							<string name="PlaceholderText">Tell me bout your Vibe Coder expirience!</string>
							<UDim2 name="Position">
								<XS>0.49955985</XS>
								<XO>0</XO>
								<YS>0.0386468396</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<bool name="ShowNativeInput">true</bool>
							<UDim2 name="Size">
								<XS>0.826584518</XS>
								<XO>0</XO>
								<YS>0.60202527</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text"></string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextEditable">true</bool>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">20</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0.150000006</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX09523F10D5B3415F8ECE2E85043FF83A">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoButtonColor">true</bool>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.258823544</R>
								<G>0.258823544</G>
								<B>0.258823544</B>
							</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<Ref name="HoverHapticEffect">null</Ref>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<bool name="Modal">false</bool>
							<string name="Name">SendButton</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.0862676054</XS>
								<XO>0</XO>
								<YS>0.832203388</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="PressHapticEffect">null</Ref>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<bool name="Selected">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.826584518</XS>
								<XO>0</XO>
								<YS>0.141525418</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">Send</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="UICorner" referent="RBXCF42D25E149148A4803B0BB15AB67F48">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<UDim name="CornerRadius">
									<S>0</S>
									<O>8</O>
								</UDim>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">UICorner</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="TextLabel" referent="RBX6B67B4FD2E024FB3B106D2A6AF66E5AC">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">TextLabel</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.0860000029</XS>
								<XO>0</XO>
								<YS>0.677053869</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.824852169</XS>
								<XO>1</XO>
								<YS>0.117847033</YS>
								<YO>1</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">If you want me to contact you back, please leave your email in the feedback.</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">20</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0.25</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="ScreenGui" referent="RBX9EC33D4CEFC94C2C8136915F69DFD5F7">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="ClipToDeviceSafeArea">true</bool>
					<bool name="DefinesCapabilities">false</bool>
					<int name="DisplayOrder">0</int>
					<bool name="Enabled">true</bool>
					<string name="Name">WidgetGUI</string>
					<bool name="ResetOnSpawn">true</bool>
					<Ref name="RootLocalizationTable">null</Ref>
					<token name="SafeAreaCompatibility">1</token>
					<token name="ScreenInsets">2</token>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<token name="ZIndexBehavior">1</token>
				</Properties>
				<Item class="Frame" referent="RBX43F28C02748A4F1B940E4913769B02DB">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.117647059</R>
							<G>0.117647059</G>
							<B>0.117647059</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">NoSelectionFrame</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
						<int name="ZIndex">10</int>
					</Properties>
					<Item class="Frame" referent="RBX7086749452EE404F84A1AA3BC358C0DC">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>0.5</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">Frame</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.5</XS>
								<XO>0</XO>
								<YS>0.5</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.5</XS>
								<XO>0</XO>
								<YS>0.150000006</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<bool name="Visible">true</bool>
							<int name="ZIndex">11</int>
						</Properties>
						<Item class="UIListLayout" referent="RBX3503E84EC6F842BEB54D638C0CB690AC">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<token name="FillDirection">1</token>
								<token name="HorizontalAlignment">1</token>
								<token name="HorizontalFlex">0</token>
								<token name="ItemLineAlignment">0</token>
								<string name="Name">UIListLayout</string>
								<UDim name="Padding">
									<S>0</S>
									<O>0</O>
								</UDim>
								<token name="SortOrder">2</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<token name="VerticalAlignment">1</token>
								<token name="VerticalFlex">0</token>
								<bool name="Wraps">false</bool>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBXCCD3158A3660469CB7A02C496935C391">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>rbxassetid://79115352535620</url></Content>
								<Color3 name="ImageColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0.25</float>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<string name="Name">ImageLabel</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<token name="ResampleMode">0</token>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<token name="ScaleType">3</token>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0.569999993</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<Rect2D name="SliceCenter">
									<min>
										<X>0</X>
										<Y>0</Y>
									</min>
									<max>
										<X>0</X>
										<Y>0</Y>
									</max>
								</Rect2D>
								<float name="SliceScale">1</float>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UDim2 name="TileSize">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="Visible">true</bool>
								<int name="ZIndex">11</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX2A4D35C26C55442CA8C06D1CCB9A7571">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
									<Weight>400</Weight>
									<Style>Normal</Style>
								</Font>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<string name="LocalizationMatchIdentifier"></string>
								<string name="LocalizationMatchedSourceText"></string>
								<int name="MaxVisibleGraphemes">-1</int>
								<string name="Name">TextLabel</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<string name="OpenTypeFeatures"></string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0.5</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text">Select an script in Explorer first.</string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<token name="TextDirection">0</token>
								<bool name="TextScaled">true</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0.25</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">11</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBXA208558EE5214CEC84FF254665EE0D23">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.117647059</R>
							<G>0.117647059</G>
							<B>0.117647059</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">App</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">true</bool>
						<int name="ZIndex">0</int>
					</Properties>
					<Item class="Frame" referent="RBXDCA6905089184AC09EDEB55BBA6BD7F0">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>1</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.156862751</R>
								<G>0.156862751</G>
								<B>0.156862751</B>
							</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">BottomThread</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.5</XS>
								<XO>0</XO>
								<YS>0.98999995</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.949999988</XS>
								<XO>0</XO>
								<YS>0.167168677</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="UICorner" referent="RBX35B610B147DA4A8F986DF4701C1BF926">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<UDim name="CornerRadius">
									<S>0</S>
									<O>8</O>
								</UDim>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">UICorner</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX33CE07EB71514562B863E70B55151957">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0.5</X>
									<Y>1</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>0.482352942</R>
									<G>0.541176498</G>
									<B>0.78039217</B>
								</Color3>
								<float name="BackgroundTransparency">0.899999976</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<string name="Name">SelectedScriptFrame</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.256017506</XS>
									<XO>0</XO>
									<YS>0.220721155</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.480832011</XS>
									<XO>0</XO>
									<YS>0.154647633</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="UICorner" referent="RBX87F5F2F542B6435183D5CE1D65643617">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<UDim name="CornerRadius">
										<S>0</S>
										<O>8</O>
									</UDim>
									<bool name="DefinesCapabilities">false</bool>
									<string name="Name">UICorner</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBXD47653EB94844C8F813E08CE8657F248">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0.5</X>
										<Y>0.5</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="Name">ScriptTitle</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<string name="OpenTypeFeatures"></string>
									<UDim2 name="Position">
										<XS>0.520498514</XS>
										<XO>0</XO>
										<YS>0.499998957</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="RichText">false</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.685664654</XS>
										<XO>0</XO>
										<YS>0.899999976</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<string name="Text">Script</string>
									<Color3 name="TextColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">18</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0.25</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="ImageLabel" referent="RBX3215BCBD9C6A4EE89C65853B02BCFF5D">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>rbxassetid://113661567766482</url></Content>
									<Color3 name="ImageColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0.25</float>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">ScriptIcon</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>3</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<token name="ResampleMode">0</token>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<token name="ScaleType">3</token>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.200000003</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<Rect2D name="SliceCenter">
										<min>
											<X>0</X>
											<Y>0</Y>
										</min>
										<max>
											<X>0</X>
											<Y>0</Y>
										</max>
									</Rect2D>
									<float name="SliceScale">1</float>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UDim2 name="TileSize">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
						<Item class="TextBox" referent="RBXBC610FA479054A46A6C786604F1B0456">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0.5</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClearTextOnFocus">false</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
									<Weight>400</Weight>
									<Style>Normal</Style>
								</Font>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<string name="LocalizationMatchIdentifier"></string>
								<string name="LocalizationMatchedSourceText"></string>
								<int name="MaxVisibleGraphemes">-1</int>
								<bool name="MultiLine">true</bool>
								<string name="Name">ChatInputTextBox</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<string name="OpenTypeFeatures"></string>
								<Color3 name="PlaceholderColor3">
									<R>0.529411793</R>
									<G>0.529411793</G>
									<B>0.529411793</B>
								</Color3>
								<string name="PlaceholderText">Let Vibe Coder AI do your scripting! &#226;&#156;&#168;</string>
								<UDim2 name="Position">
									<XS>0.497061342</XS>
									<XO>0</XO>
									<YS>0.299999893</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<bool name="ShowNativeInput">true</bool>
								<UDim2 name="Size">
									<XS>0.944122851</XS>
									<XO>0</XO>
									<YS>0.41400972</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text"></string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<token name="TextDirection">0</token>
								<bool name="TextEditable">true</bool>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0.150000006</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="ImageButton" referent="RBX3E2659F7860A4C5A8B2679CEC4A0751E">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoButtonColor">true</bool>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Ref name="HoverHapticEffect">null</Ref>
								<Content name="HoverImage"><null></null></Content>
								<Content name="Image"><url>rbxassetid://123181546754641</url></Content>
								<Color3 name="ImageColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0.25</float>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<bool name="Modal">false</bool>
								<string name="Name">SendButton</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.892009795</XS>
									<XO>0</XO>
									<YS>0.733529866</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="PressHapticEffect">null</Ref>
								<Content name="PressedImage"><null></null></Content>
								<token name="ResampleMode">0</token>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<token name="ScaleType">3</token>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.0900033265</XS>
									<XO>0</XO>
									<YS>0.160360187</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<Rect2D name="SliceCenter">
									<min>
										<X>0</X>
										<Y>0</Y>
									</min>
									<max>
										<X>0</X>
										<Y>0</Y>
									</max>
								</Rect2D>
								<float name="SliceScale">1</float>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<UDim2 name="TileSize">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBX846B58F878BC47B681F7F4CF4411AE46">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoButtonColor">true</bool>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>0.137254909</R>
									<G>0.137254909</G>
									<B>0.137254909</B>
								</Color3>
								<float name="BackgroundTransparency">0.899999976</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/SourceSansPro.json</url></Family>
									<Weight>400</Weight>
									<Style>Normal</Style>
									<CachedFaceId><url>rbxasset://fonts/SourceSansPro-Regular.ttf</url></CachedFaceId>
								</Font>
								<Ref name="HoverHapticEffect">null</Ref>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">1</int>
								<float name="LineHeight">1</float>
								<string name="LocalizationMatchIdentifier"></string>
								<string name="LocalizationMatchedSourceText"></string>
								<int name="MaxVisibleGraphemes">-1</int>
								<bool name="Modal">false</bool>
								<string name="Name">CurrentModelButton</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<string name="OpenTypeFeatures"></string>
								<UDim2 name="Position">
									<XS>0.0299999993</XS>
									<XO>0</XO>
									<YS>0.706502259</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="PressHapticEffect">null</Ref>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.271118104</XS>
									<XO>0</XO>
									<YS>0.216216221</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text"></string>
								<Color3 name="TextColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="TextDirection">0</token>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">1</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
							<Item class="UICorner" referent="RBX0B1083AF558F4311906CDC6EEE263214">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<UDim name="CornerRadius">
										<S>0</S>
										<O>8</O>
									</UDim>
									<bool name="DefinesCapabilities">false</bool>
									<string name="Name">UICorner</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
								</Properties>
							</Item>
							<Item class="ImageLabel" referent="RBXC84A5F804AAB4B2A8FF07F3789B504C1">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>rbxassetid://79274818810097</url></Content>
									<Color3 name="ImageColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0.25</float>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">DropdownIcon</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0.800000131</XS>
										<XO>0</XO>
										<YS>0.125</YS>
										<YO>0</YO>
									</UDim2>
									<token name="ResampleMode">0</token>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<token name="ScaleType">3</token>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.179667592</XS>
										<XO>0</XO>
										<YS>0.741667807</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<Rect2D name="SliceCenter">
										<min>
											<X>0</X>
											<Y>0</Y>
										</min>
										<max>
											<X>0</X>
											<Y>0</Y>
										</max>
									</Rect2D>
									<float name="SliceScale">1</float>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UDim2 name="TileSize">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX19F4C476D9AE47C583BC3FA3B83FAA9A">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0.5</X>
										<Y>0.5</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="Name">ModelTitle</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<string name="OpenTypeFeatures"></string>
									<UDim2 name="Position">
										<XS>0.414509743</XS>
										<XO>0</XO>
										<YS>0.499999851</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="RichText">false</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.779018283</XS>
										<XO>0</XO>
										<YS>0.899999917</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<string name="Text">no model selected.</string>
									<Color3 name="TextColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">18</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0.25</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
						<Item class="TextBox" referent="RBXC16CA36B950845BCB0603BCB60F58CE6">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0.5</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClearTextOnFocus">false</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
									<Weight>400</Weight>
									<Style>Normal</Style>
								</Font>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<string name="LocalizationMatchIdentifier"></string>
								<string name="LocalizationMatchedSourceText"></string>
								<int name="MaxVisibleGraphemes">-1</int>
								<bool name="MultiLine">true</bool>
								<string name="Name">ApiKeyInput</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<string name="OpenTypeFeatures"></string>
								<Color3 name="PlaceholderColor3">
									<R>0.529411793</R>
									<G>0.529411793</G>
									<B>0.529411793</B>
								</Color3>
								<string name="PlaceholderText">API key</string>
								<UDim2 name="Position">
									<XS>0.678268731</XS>
									<XO>0</XO>
									<YS>0.733529329</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<bool name="ShowNativeInput">true</bool>
								<UDim2 name="Size">
									<XS>0.287856996</XS>
									<XO>0</XO>
									<YS>0.151351243</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text"></string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<token name="TextDirection">0</token>
								<bool name="TextEditable">true</bool>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0.150000006</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="ImageButton" referent="RBXBCEBF7FD7DC54D7E97202131F9DB9614">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoButtonColor">true</bool>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Ref name="HoverHapticEffect">null</Ref>
								<Content name="HoverImage"><null></null></Content>
								<Content name="Image"><url>rbxassetid://73515595170574</url></Content>
								<Color3 name="ImageColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0.25</float>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<bool name="Modal">false</bool>
								<string name="Name">ShowApiKeyButton</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.819884002</XS>
									<XO>0</XO>
									<YS>0.733529747</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="PressHapticEffect">null</Ref>
								<Content name="PressedImage"><null></null></Content>
								<token name="ResampleMode">0</token>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<token name="ScaleType">3</token>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.0900033265</XS>
									<XO>0</XO>
									<YS>0.160360187</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<Rect2D name="SliceCenter">
									<min>
										<X>0</X>
										<Y>0</Y>
									</min>
									<max>
										<X>0</X>
										<Y>0</Y>
									</max>
								</Rect2D>
								<float name="SliceScale">1</float>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<UDim2 name="TileSize">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX20A3C53984AD4834B03000CFB9B11999">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0.5</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
									<Weight>400</Weight>
									<Style>Normal</Style>
								</Font>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<string name="LocalizationMatchIdentifier"></string>
								<string name="LocalizationMatchedSourceText"></string>
								<int name="MaxVisibleGraphemes">-1</int>
								<string name="Name">ApiKeyHiddenLabel</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<string name="OpenTypeFeatures"></string>
								<UDim2 name="Position">
									<XS>0.677999973</XS>
									<XO>0</XO>
									<YS>0.734000027</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.287999988</XS>
									<XO>0</XO>
									<YS>0.150999993</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text">API KEY HIDDEN</string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<token name="TextDirection">0</token>
								<bool name="TextScaled">true</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0.25</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">false</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="ImageButton" referent="RBX9CC3C0E397B94B55B42B4229428F2E96">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoButtonColor">true</bool>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Ref name="HoverHapticEffect">null</Ref>
								<Content name="HoverImage"><null></null></Content>
								<Content name="Image"><url>rbxassetid://130372484515289</url></Content>
								<Color3 name="ImageColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0.25</float>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<bool name="Modal">false</bool>
								<string name="Name">OpenMenuButton</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.928200066</XS>
									<XO>0</XO>
									<YS>0.0738055855</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="PressHapticEffect">null</Ref>
								<Content name="PressedImage"><null></null></Content>
								<token name="ResampleMode">0</token>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<token name="ScaleType">3</token>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.0531407259</XS>
									<XO>0</XO>
									<YS>0.146914348</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<Rect2D name="SliceCenter">
									<min>
										<X>0</X>
										<Y>0</Y>
									</min>
									<max>
										<X>0</X>
										<Y>0</Y>
									</max>
								</Rect2D>
								<float name="SliceScale">1</float>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<UDim2 name="TileSize">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBXC799B5EB8D12423FBB7D52981E779167">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>1</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.0980392173</R>
								<G>0.0980392173</G>
								<B>0.0980392173</B>
							</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">ModelSelectFrame</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.274051219</XS>
								<XO>0</XO>
								<YS>0.940936327</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.440239549</XS>
								<XO>0</XO>
								<YS>0.220514685</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<bool name="Visible">false</bool>
							<int name="ZIndex">2</int>
						</Properties>
						<Item class="UICorner" referent="RBXEFF227862D2949A1A5AAE1BE2048A934">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<UDim name="CornerRadius">
									<S>0</S>
									<O>8</O>
								</UDim>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">UICorner</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX34CC0D66B0884BC8A07BB65EB5C831AD">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0.5</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
									<Weight>400</Weight>
									<Style>Normal</Style>
								</Font>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<string name="LocalizationMatchIdentifier"></string>
								<string name="LocalizationMatchedSourceText"></string>
								<int name="MaxVisibleGraphemes">-1</int>
								<string name="Name">Header</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<string name="OpenTypeFeatures"></string>
								<UDim2 name="Position">
									<XS>0.363621145</XS>
									<XO>0</XO>
									<YS>0.014999954</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.677242219</XS>
									<XO>0</XO>
									<YS>0.129761562</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text">Select AI Model</string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<token name="TextDirection">0</token>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0.75</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ScrollingFrame" referent="RBX8E52F7CCC4EA44C2977A41A132F7D7BA">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0.5</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticCanvasSize">2</token>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<Content name="BottomImage"><url>rbxasset://textures/ui/Scroll/scroll-bottom.png</url></Content>
								<Vector2 name="CanvasPosition">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<UDim2 name="CanvasSize">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>200</YO>
								</UDim2>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">true</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<token name="ElasticBehavior">0</token>
								<token name="HorizontalScrollBarInset">0</token>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<Content name="MidImage"><url>rbxasset://textures/ui/Scroll/scroll-middle.png</url></Content>
								<string name="Name">ModelsList</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.5</XS>
									<XO>0</XO>
									<YS>0.185738772</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<Color3 name="ScrollBarImageColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="ScrollBarImageTransparency">0</float>
								<int name="ScrollBarThickness">12</int>
								<token name="ScrollingDirection">2</token>
								<bool name="ScrollingEnabled">true</bool>
								<bool name="Selectable">true</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">true</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.949999928</XS>
									<XO>0</XO>
									<YS>0.814261019</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<Content name="TopImage"><url>rbxasset://textures/ui/Scroll/scroll-top.png</url></Content>
								<token name="VerticalScrollBarInset">0</token>
								<token name="VerticalScrollBarPosition">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
							<Item class="UIListLayout" referent="RBXF9611A61B62543C69DC6A25AD45B6713">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<token name="FillDirection">1</token>
									<token name="HorizontalAlignment">0</token>
									<token name="HorizontalFlex">1</token>
									<token name="ItemLineAlignment">0</token>
									<string name="Name">UIListLayout</string>
									<UDim name="Padding">
										<S>0</S>
										<O>8</O>
									</UDim>
									<token name="SortOrder">2</token>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<token name="VerticalAlignment">1</token>
									<token name="VerticalFlex">0</token>
									<bool name="Wraps">false</bool>
								</Properties>
							</Item>
							<Item class="TextButton" referent="RBX9D24375F503E4DD29D359025D1919BFF">
								<Properties>
									<bool name="Active">true</bool>
									<Vector2 name="AnchorPoint">
										<X>0.5</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoButtonColor">true</bool>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>0.0980392173</R>
										<G>0.0980392173</G>
										<B>0.0980392173</B>
									</Color3>
									<float name="BackgroundTransparency">0.899999976</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<Ref name="HoverHapticEffect">null</Ref>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<bool name="Modal">false</bool>
									<string name="Name">ModelSelectButton</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<string name="OpenTypeFeatures"></string>
									<UDim2 name="Position">
										<XS>0.0243607201</XS>
										<XO>0</XO>
										<YS>0.0309071168</YS>
										<YO>0</YO>
									</UDim2>
									<Ref name="PressHapticEffect">null</Ref>
									<bool name="RichText">false</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">true</bool>
									<bool name="Selected">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.75</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<token name="Style">0</token>
									<BinaryString name="Tags"></BinaryString>
									<string name="Text">ModelName</string>
									<Color3 name="TextColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0.25</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">false</bool>
									<int name="ZIndex">2</int>
								</Properties>
								<Item class="UICorner" referent="RBXF60D3B64FF114C9BAE14EE48777DF931">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<UDim name="CornerRadius">
											<S>0</S>
											<O>8</O>
										</UDim>
										<bool name="DefinesCapabilities">false</bool>
										<string name="Name">UICorner</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX46339180B25A45119F5CE9CAC2B09A9D">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0.5</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>0.678431392</R>
									<G>0.494117647</G>
									<B>0.956862748</B>
								</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<string name="Name">ProLabel</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.842000008</XS>
									<XO>0</XO>
									<YS>0.0149999997</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.211999997</XS>
									<XO>0</XO>
									<YS>0.129999995</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
							<Item class="TextLabel" referent="RBX262773D1537A44D586ADE8697D2369EF">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0.5</X>
										<Y>0.5</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>0.678431392</R>
										<G>0.494117647</G>
										<B>0.956862748</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="Name">Text</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<string name="OpenTypeFeatures"></string>
									<UDim2 name="Position">
										<XS>0.5</XS>
										<XO>0</XO>
										<YS>0.5</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="RichText">false</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0.75</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<string name="Text">PRO</string>
									<Color3 name="TextColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
							</Item>
							<Item class="UICorner" referent="RBX2682305CDD774BFC8B9DB511AE3F3906">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<UDim name="CornerRadius">
										<S>0</S>
										<O>8</O>
									</UDim>
									<bool name="DefinesCapabilities">false</bool>
									<string name="Name">UICorner</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="ScrollingFrame" referent="RBX2C48489B33E342068D62001C71434791">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticCanvasSize">2</token>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<Content name="BottomImage"><url>rbxasset://textures/ui/Scroll/scroll-bottom.png</url></Content>
							<Vector2 name="CanvasPosition">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<UDim2 name="CanvasSize">
								<XS>0</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">true</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<token name="ElasticBehavior">0</token>
							<token name="HorizontalScrollBarInset">0</token>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<Content name="MidImage"><url>rbxasset://textures/ui/Scroll/scroll-middle.png</url></Content>
							<string name="Name">ChatHistory</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.5</XS>
								<XO>0</XO>
								<YS>0.0546247326</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<Color3 name="ScrollBarImageColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="ScrollBarImageTransparency">1</float>
							<int name="ScrollBarThickness">12</int>
							<token name="ScrollingDirection">2</token>
							<bool name="ScrollingEnabled">true</bool>
							<bool name="Selectable">true</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">true</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.949999928</XS>
								<XO>0</XO>
								<YS>0.756085217</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Content name="TopImage"><url>rbxasset://textures/ui/Scroll/scroll-top.png</url></Content>
							<token name="VerticalScrollBarInset">0</token>
							<token name="VerticalScrollBarPosition">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="UIListLayout" referent="RBX5E640FB5D3EA476285DFF8D7D7B64454">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<token name="FillDirection">1</token>
								<token name="HorizontalAlignment">0</token>
								<token name="HorizontalFlex">0</token>
								<token name="ItemLineAlignment">0</token>
								<string name="Name">UIListLayout</string>
								<UDim name="Padding">
									<S>0</S>
									<O>8</O>
								</UDim>
								<token name="SortOrder">2</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<token name="VerticalAlignment">1</token>
								<token name="VerticalFlex">0</token>
								<bool name="Wraps">false</bool>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBXBFBBFF1F14724D72B657F48D06201DB0">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>1</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.0980392173</R>
								<G>0.0980392173</G>
								<B>0.0980392173</B>
							</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">MenuFrame</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.753058791</XS>
								<XO>0</XO>
								<YS>0.81245333</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.440239578</XS>
								<XO>0</XO>
								<YS>0.155998558</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<bool name="Visible">false</bool>
							<int name="ZIndex">2</int>
						</Properties>
						<Item class="UICorner" referent="RBX29974C7B65F6451DACEBA66D7B95FCE3">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<UDim name="CornerRadius">
									<S>0</S>
									<O>8</O>
								</UDim>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">UICorner</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="UIListLayout" referent="RBXC4111366BE9A4492A8DA262B3AA29F54">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<token name="FillDirection">1</token>
								<token name="HorizontalAlignment">0</token>
								<token name="HorizontalFlex">0</token>
								<token name="ItemLineAlignment">0</token>
								<string name="Name">UIListLayout</string>
								<UDim name="Padding">
									<S>0</S>
									<O>0</O>
								</UDim>
								<token name="SortOrder">2</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<token name="VerticalAlignment">1</token>
								<token name="VerticalFlex">0</token>
								<bool name="Wraps">false</bool>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBXDEC8D216302249CF8DFB3067AC58A1CE">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoButtonColor">true</bool>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
									<Weight>400</Weight>
									<Style>Normal</Style>
								</Font>
								<Ref name="HoverHapticEffect">null</Ref>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<string name="LocalizationMatchIdentifier"></string>
								<string name="LocalizationMatchedSourceText"></string>
								<int name="MaxVisibleGraphemes">-1</int>
								<bool name="Modal">false</bool>
								<string name="Name">ClearButton</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<string name="OpenTypeFeatures"></string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="PressHapticEffect">null</Ref>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.899999976</XS>
									<XO>0</XO>
									<YS>0.330000013</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text"></string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<token name="TextDirection">0</token>
								<bool name="TextScaled">true</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">3</int>
							</Properties>
							<Item class="TextLabel" referent="RBX7C7CF260FC254BD6958AA773D9F992DF">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0.5</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="Name">TextLabel</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<string name="OpenTypeFeatures"></string>
									<UDim2 name="Position">
										<XS>0.184383377</XS>
										<XO>0</XO>
										<YS>0.499999672</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="RichText">false</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.815616727</XS>
										<XO>0</XO>
										<YS>0.75</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<string name="Text">Clear Conversation</string>
									<Color3 name="TextColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<token name="TextDirection">1</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0.25</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">3</int>
								</Properties>
							</Item>
							<Item class="ImageLabel" referent="RBXAB041BC6BF04419C82212E77CC70CA6C">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0.5</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>rbxassetid://72456202240333</url></Content>
									<Color3 name="ImageColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0.25</float>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">ImageLabel</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0.5</YS>
										<YO>0</YO>
									</UDim2>
									<token name="ResampleMode">0</token>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<token name="ScaleType">3</token>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.200000003</XS>
										<XO>0</XO>
										<YS>0.5</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<Rect2D name="SliceCenter">
										<min>
											<X>0</X>
											<Y>0</Y>
										</min>
										<max>
											<X>0</X>
											<Y>0</Y>
										</max>
									</Rect2D>
									<float name="SliceScale">1</float>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UDim2 name="TileSize">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="Visible">true</bool>
									<int name="ZIndex">3</int>
								</Properties>
							</Item>
						</Item>
						<Item class="TextButton" referent="RBX2AE80B9336614126A68A4CEB1E71AEFD">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoButtonColor">true</bool>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
									<Weight>400</Weight>
									<Style>Normal</Style>
								</Font>
								<Ref name="HoverHapticEffect">null</Ref>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<string name="LocalizationMatchIdentifier"></string>
								<string name="LocalizationMatchedSourceText"></string>
								<int name="MaxVisibleGraphemes">-1</int>
								<bool name="Modal">false</bool>
								<string name="Name">FeedbackButton</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<string name="OpenTypeFeatures"></string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="PressHapticEffect">null</Ref>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.899999976</XS>
									<XO>0</XO>
									<YS>0.330000013</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text"></string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<token name="TextDirection">0</token>
								<bool name="TextScaled">true</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">3</int>
							</Properties>
							<Item class="TextLabel" referent="RBXCBA62406D7834EEABCCD0D2A3B0466B0">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0.5</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="Name">TextLabel</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<string name="OpenTypeFeatures"></string>
									<UDim2 name="Position">
										<XS>0.184383377</XS>
										<XO>0</XO>
										<YS>0.499999672</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="RichText">false</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.815616727</XS>
										<XO>0</XO>
										<YS>0.75</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<string name="Text">Send Feedback</string>
									<Color3 name="TextColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<token name="TextDirection">1</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0.25</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">3</int>
								</Properties>
							</Item>
							<Item class="ImageLabel" referent="RBX9EB52CF8DC554C2FA9949BAFB3BA3EC1">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0.5</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>rbxassetid://90206302915644</url></Content>
									<Color3 name="ImageColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0.25</float>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">ImageLabel</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0.5</YS>
										<YO>0</YO>
									</UDim2>
									<token name="ResampleMode">0</token>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<token name="ScaleType">3</token>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.200000003</XS>
										<XO>0</XO>
										<YS>0.5</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<Rect2D name="SliceCenter">
										<min>
											<X>0</X>
											<Y>0</Y>
										</min>
										<max>
											<X>0</X>
											<Y>0</Y>
										</max>
									</Rect2D>
									<float name="SliceScale">1</float>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UDim2 name="TileSize">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="Visible">true</bool>
									<int name="ZIndex">3</int>
								</Properties>
							</Item>
						</Item>
						<Item class="TextButton" referent="RBX679DE31AEC93442FAD552F1EB1A0D617">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoButtonColor">true</bool>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
									<Weight>400</Weight>
									<Style>Normal</Style>
								</Font>
								<Ref name="HoverHapticEffect">null</Ref>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<string name="LocalizationMatchIdentifier"></string>
								<string name="LocalizationMatchedSourceText"></string>
								<int name="MaxVisibleGraphemes">-1</int>
								<bool name="Modal">false</bool>
								<string name="Name">JoinSupportServerButton</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<string name="OpenTypeFeatures"></string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="PressHapticEffect">null</Ref>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.899999976</XS>
									<XO>0</XO>
									<YS>0.330000013</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text"></string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<token name="TextDirection">0</token>
								<bool name="TextScaled">true</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">3</int>
							</Properties>
							<Item class="TextLabel" referent="RBX320D5AC5F4844B468EB6AAA69A07BBE3">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0.5</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="Name">TextLabel</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<string name="OpenTypeFeatures"></string>
									<UDim2 name="Position">
										<XS>0.184383377</XS>
										<XO>0</XO>
										<YS>0.499999672</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="RichText">false</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.815616727</XS>
										<XO>0</XO>
										<YS>0.75</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<string name="Text">Join Community Server</string>
									<Color3 name="TextColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<token name="TextDirection">1</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0.25</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">3</int>
								</Properties>
							</Item>
							<Item class="ImageLabel" referent="RBX0F318A78D2C94F709ACE2509F1FBE0E2">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0.5</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>rbxassetid://97572524929990</url></Content>
									<Color3 name="ImageColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0.25</float>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">ImageLabel</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0.5</YS>
										<YO>0</YO>
									</UDim2>
									<token name="ResampleMode">0</token>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<token name="ScaleType">3</token>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.200000003</XS>
										<XO>0</XO>
										<YS>0.5</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<Rect2D name="SliceCenter">
										<min>
											<X>0</X>
											<Y>0</Y>
										</min>
										<max>
											<X>0</X>
											<Y>0</Y>
										</max>
									</Rect2D>
									<float name="SliceScale">1</float>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UDim2 name="TileSize">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="Visible">true</bool>
									<int name="ZIndex">3</int>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX45AA011E542B47A0BB127E94423C1F7F">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>1</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.403921574</R>
								<G>0.223529413</G>
								<B>0.223529413</B>
							</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">WarningFrame</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.5</XS>
								<XO>0</XO>
								<YS>0.80445838</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.949999988</XS>
								<XO>0</XO>
								<YS>0.0321747102</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<bool name="Visible">false</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="UICorner" referent="RBX4208674767F9462E88EA26BFE7BC4493">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<UDim name="CornerRadius">
									<S>0</S>
									<O>8</O>
								</UDim>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">UICorner</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX61AD2116BE724545BA5326E06BB75F2B">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0.5</X>
									<Y>0.5</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>0.913725555</G>
									<B>0.913725555</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
									<Weight>400</Weight>
									<Style>Normal</Style>
								</Font>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<string name="LocalizationMatchIdentifier"></string>
								<string name="LocalizationMatchedSourceText"></string>
								<int name="MaxVisibleGraphemes">-1</int>
								<string name="Name">WarningContent</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<string name="OpenTypeFeatures"></string>
								<UDim2 name="Position">
									<XS>0.5</XS>
									<XO>0</XO>
									<YS>0.5</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.75</XS>
									<XO>0</XO>
									<YS>0.800000012</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text">Warning</string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>0.956862807</G>
									<B>0.956862807</B>
								</Color3>
								<token name="TextDirection">0</token>
								<bool name="TextScaled">true</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX135631A5761A43338645AF6FE55D1B43">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0.5</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>rbxassetid://106040231377035</url></Content>
								<Color3 name="ImageColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<string name="Name">ImageLabel</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0.5</YS>
									<YO>0</YO>
								</UDim2>
								<token name="ResampleMode">0</token>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<token name="ScaleType">3</token>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.100000001</XS>
									<XO>0</XO>
									<YS>0.75</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<Rect2D name="SliceCenter">
									<min>
										<X>0</X>
										<Y>0</Y>
									</min>
									<max>
										<X>0</X>
										<Y>0</Y>
									</max>
								</Rect2D>
								<float name="SliceScale">1</float>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UDim2 name="TileSize">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="TextLabel" referent="RBX7D05FAEF316D497DA27D0EFC0EDB6CC3">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0.5</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
						</Font>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<string name="LocalizationMatchIdentifier"></string>
						<string name="LocalizationMatchedSourceText"></string>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">BetaInfo</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<string name="OpenTypeFeatures"></string>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>0</XO>
							<YS>0.00903614424</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0.899999976</XS>
							<XO>0</XO>
							<YS>0.0355421677</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">Thank you for BETA testing Vibe Coder. Please report any issues/feedback to keewinek@gmail.com.</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<token name="TextDirection">0</token>
						<bool name="TextScaled">true</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0.5</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">true</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
				<Item class="Frame" referent="RBXE2709087814C4D09AB5394B1B3F0DF9F">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.117647059</R>
							<G>0.117647059</G>
							<B>0.117647059</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">BuyProFrame</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
						<int name="ZIndex">8</int>
					</Properties>
					<Item class="ImageLabel" referent="RBXEB28FDC81EAD40C4B6169E4CB056441A">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>rbxassetid://115853486982676</url></Content>
							<Color3 name="ImageColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">ImageLabel</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.222636372</XS>
								<XO>0</XO>
								<YS>0.0271084346</YS>
								<YO>0</YO>
							</UDim2>
							<token name="ResampleMode">0</token>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<token name="ScaleType">3</token>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.596456707</XS>
								<XO>0</XO>
								<YS>0.191987902</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<Rect2D name="SliceCenter">
								<min>
									<X>0</X>
									<Y>0</Y>
								</min>
								<max>
									<X>0</X>
									<Y>0</Y>
								</max>
							</Rect2D>
							<float name="SliceScale">1</float>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UDim2 name="TileSize">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="Visible">true</bool>
							<int name="ZIndex">8</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX883AA831216840F2BF1BDFCF96B176B4">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">Header</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.0811600089</XS>
								<XO>0</XO>
								<YS>0.218373492</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.834194362</XS>
								<XO>0</XO>
								<YS>0.176204816</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">You have discovered an Vibe Coder PRO feature.</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">8</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBXFA08E4FAC0F34D629CDD396D40506A7F">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">Paragraph</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.0850794911</XS>
								<XO>0</XO>
								<YS>0.409638554</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.868840098</XS>
								<XO>0</XO>
								<YS>0.213855416</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text"><![CDATA[With Vibe Coder PRO you can:

• Send unlimited messages.
• Use all available language models such as GPT-4o and Claude 4 Sonnet.
• Use 100% of AI's thinking power.]]></string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0.25</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">8</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX2233FD222F5E4FA6886153CDB24460BF">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">Paragraph</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.0868525654</XS>
								<XO>0</XO>
								<YS>0.701807201</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.868840098</XS>
								<XO>0</XO>
								<YS>0.0542168692</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">In order to unlock Vibe Coder PRO, buy gamepass that is available at the following link:</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0.25</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">8</int>
						</Properties>
					</Item>
					<Item class="TextBox" referent="RBX4EF7CE7829E447B1B267EFE7BF0FCF92">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.156862751</R>
								<G>0.156862751</G>
								<B>0.156862751</B>
							</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClearTextOnFocus">false</bool>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<bool name="MultiLine">false</bool>
							<string name="Name">GamepassLinkInput</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<Color3 name="PlaceholderColor3">
								<R>0.699999988</R>
								<G>0.699999988</G>
								<B>0.699999988</B>
							</Color3>
							<string name="PlaceholderText">NO LINK</string>
							<UDim2 name="Position">
								<XS>0.0811600238</XS>
								<XO>0</XO>
								<YS>0.766566277</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<bool name="ShowNativeInput">true</bool>
							<UDim2 name="Size">
								<XS>0.834194362</XS>
								<XO>0</XO>
								<YS>0.0798192769</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">https://www.roblox.com/game-pass/1298233970</string>
							<Color3 name="TextColor3">
								<R>0.678431392</R>
								<G>0.494117677</G>
								<B>0.956862807</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextEditable">false</bool>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">8</int>
						</Properties>
						<Item class="UICorner" referent="RBXE93492CB88AA489AA88212D39BE3CA28">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<UDim name="CornerRadius">
									<S>0</S>
									<O>8</O>
								</UDim>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">UICorner</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="TextLabel" referent="RBX3B8B61D55087428B9CCDCB2DE400B6A7">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">Paragraph</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.0868525133</XS>
								<XO>0</XO>
								<YS>0.858433723</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.828041196</XS>
								<XO>0</XO>
								<YS>0.0180722885</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">Copy this link and paste it in your browser.</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0.75</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">8</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX9D5251F786514F8EA014BA0DDEBAF05A">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">Paragraph</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.0868524835</XS>
								<XO>0</XO>
								<YS>0.885542154</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.82850194</XS>
								<XO>0</XO>
								<YS>0.0223202705</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">IMPORTANT: Restart Roblox Studio after purchase.</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>0.674509823</G>
								<B>0.674509823</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>1</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0.25</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">8</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBXE41CCF5F7FCF428BB2FE964026BCF0F5">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoButtonColor">true</bool>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<Ref name="HoverHapticEffect">null</Ref>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<bool name="Modal">false</bool>
							<string name="Name">CloseButton</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.549645364</XS>
								<XO>0</XO>
								<YS>0.959337354</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="PressHapticEffect">null</Ref>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<bool name="Selected">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.365248233</XS>
								<XO>0</XO>
								<YS>0.0256024096</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">I am not interested.</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0.75</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">1</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">8</int>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX14B98A9AF0EF41E997DFBC84D47A8A00">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0.5</X>
						<Y>1</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>0.345098048</R>
						<G>0.427451015</G>
						<B>0.490196109</B>
					</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">
						<R>0</R>
						<G>0</G>
						<B>0</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="ClipsDescendants">false</bool>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Draggable">false</bool>
					<bool name="Interactable">true</bool>
					<int name="LayoutOrder">0</int>
					<string name="Name">SystemBubble</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0.5</XS>
						<XO>0</XO>
						<YS>0.0624782071</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<int name="SelectionOrder">0</int>
					<UDim2 name="Size">
						<XS>0.850000024</XS>
						<XO>0</XO>
						<YS>0.25</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="TextLabel" referent="RBX79CBB924CD0F4F139AA4AB01B2DEE903">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0.5</X>
							<Y>0.5</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
						</Font>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<string name="LocalizationMatchIdentifier"></string>
						<string name="LocalizationMatchedSourceText"></string>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">ContentLabel</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<string name="OpenTypeFeatures"></string>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>0</XO>
							<YS>0.5</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0.899999976</XS>
							<XO>0</XO>
							<YS>0.949999988</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">System</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<token name="TextDirection">0</token>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0.5</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">true</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="Folder" referent="RBX1261938D16AC4535A482167342528F18">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<string name="Name">Libs</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="ModuleScript" referent="RBX51AB84B5CB4B428586381C1A9162A7DC">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">SHA256</string>
					<string name="ScriptGuid">{1F8B21E6-2EDC-445D-B185-E3587BB9A710}</string>
					<ProtectedString name="Source"><![CDATA[--------------------------------------------------------------------------------------------------------------------------
-- sha2.lua
--------------------------------------------------------------------------------------------------------------------------
-- VERSION: 12 (2022-02-23)
-- AUTHOR:  Egor Skriptunoff
-- LICENSE: MIT (the same license as Lua itself)
-- URL:     https://github.com/Egor-Skriptunoff/pure_lua_SHA
--
-- DESCRIPTION:
--    This module contains functions to calculate SHA digest:
--       MD5, SHA-1,
--       SHA-224, SHA-256, SHA-512/224, SHA-512/256, SHA-384, SHA-512,
--       SHA3-224, SHA3-256, SHA3-384, SHA3-512, SHAKE128, SHAKE256,
--       HMAC,
--       BLAKE2b, BLAKE2s, BLAKE2bp, BLAKE2sp, BLAKE2Xb, BLAKE2Xs,
--       BLAKE3, BLAKE3_KDF
--    Written in pure Lua.
--    Compatible with:
--       Lua 5.1, Lua 5.2, Lua 5.3, Lua 5.4, Fengari, LuaJIT 2.0/2.1 (any CPU endianness).
--    Main feature of this module: it was heavily optimized for speed.
--    For every Lua version the module contains particular implementation branch to get benefits from version-specific features.
--       - branch for Lua 5.1 (emulating bitwise operators using look-up table)
--       - branch for Lua 5.2 (using bit32/bit library), suitable for both Lua 5.2 with native "bit32" and Lua 5.1 with external library "bit"
--       - branch for Lua 5.3/5.4 (using native 64-bit bitwise operators)
--       - branch for Lua 5.3/5.4 (using native 32-bit bitwise operators) for Lua built with LUA_INT_TYPE=LUA_INT_INT
--       - branch for LuaJIT without FFI library (useful in a sandboxed environment)
--       - branch for LuaJIT x86 without FFI library (LuaJIT x86 has oddity because of lack of CPU registers)
--       - branch for LuaJIT 2.0 with FFI library (bit.* functions work only with Lua numbers)
--       - branch for LuaJIT 2.1 with FFI library (bit.* functions can work with "int64_t" arguments)
--
--
-- USAGE:
--    Input data should be provided as a binary string: either as a whole string or as a sequence of substrings (chunk-by-chunk loading, total length < 9*10^15 bytes).
--    Result (SHA digest) is returned in hexadecimal representation as a string of lowercase hex digits.
--    Simplest usage example:
--       local sha = require("sha2")
--       local your_hash = sha.sha256("your string")
--    See file "sha2_test.lua" for more examples.
--
--
-- CHANGELOG:
--  version     date      description
--  -------  ----------   -----------
--    12     2022-02-23   Now works in Luau (but NOT optimized for speed)
--    11     2022-01-09   BLAKE3 added
--    10     2022-01-02   BLAKE2 functions added
--     9     2020-05-10   Now works in OpenWrt's Lua (dialect of Lua 5.1 with "double" + "invisible int32")
--     8     2019-09-03   SHA-3 functions added
--     7     2019-03-17   Added functions to convert to/from base64
--     6     2018-11-12   HMAC added
--     5     2018-11-10   SHA-1 added
--     4     2018-11-03   MD5 added
--     3     2018-11-02   Bug fixed: incorrect hashing of long (2 GByte) data streams on Lua 5.3/5.4 built with "int32" integers
--     2     2018-10-07   Decreased module loading time in Lua 5.1 implementation branch (thanks to Peter Melnichenko for giving a hint)
--     1     2018-10-06   First release (only SHA-2 functions)
-----------------------------------------------------------------------------


local print_debug_messages = false  -- set to true to view some messages about your system's abilities and implementation branch chosen for your system

local unpack, table_concat, byte, char, string_rep, sub, gsub, gmatch, string_format, floor, ceil, math_min, math_max, tonumber, type, math_huge =
	table.unpack or unpack, table.concat, string.byte, string.char, string.rep, string.sub, string.gsub, string.gmatch, string.format, math.floor, math.ceil, math.min, math.max, tonumber, type, math.huge


--------------------------------------------------------------------------------
-- EXAMINING YOUR SYSTEM
--------------------------------------------------------------------------------

local function get_precision(one)
	-- "one" must be either float 1.0 or integer 1
	-- returns bits_precision, is_integer
	-- This function works correctly with all floating point datatypes (including non-IEEE-754)
	local k, n, m, prev_n = 0, one, one
	while true do
		k, prev_n, n, m = k + 1, n, n + n + 1, m + m + k % 2
		if k > 256 or n - (n - 1) ~= 1 or m - (m - 1) ~= 1 or n == m then
			return k, false   -- floating point datatype
		elseif n == prev_n then
			return k, true    -- integer datatype
		end
	end
end

-- Make sure Lua has "double" numbers
local x = 2/3
local Lua_has_double = x * 5 > 3 and x * 4 < 3 and get_precision(1.0) >= 53
assert(Lua_has_double, "at least 53-bit floating point numbers are required")

-- Q:
--    SHA2 was designed for FPU-less machines.
--    So, why floating point numbers are needed for this module?
-- A:
--    53-bit "double" numbers are useful to calculate "magic numbers" used in SHA.
--    I prefer to write 50 LOC "magic numbers calculator" instead of storing more than 200 constants explicitly in this source file.

local int_prec, Lua_has_integers = get_precision(1)
local Lua_has_int64 = Lua_has_integers and int_prec == 64
local Lua_has_int32 = Lua_has_integers and int_prec == 32
assert(Lua_has_int64 or Lua_has_int32 or not Lua_has_integers, "Lua integers must be either 32-bit or 64-bit")

-- Q:
--    Does it mean that almost all non-standard configurations are not supported?
-- A:
--    Yes.  Sorry, too many problems to support all possible Lua numbers configurations.
--       Lua 5.1/5.2    with "int32"               will not work.
--       Lua 5.1/5.2    with "int64"               will not work.
--       Lua 5.1/5.2    with "int128"              will not work.
--       Lua 5.1/5.2    with "float"               will not work.
--       Lua 5.1/5.2    with "double"              is OK.          (default config for Lua 5.1, Lua 5.2, LuaJIT)
--       Lua 5.3/5.4    with "int32"  + "float"    will not work.
--       Lua 5.3/5.4    with "int64"  + "float"    will not work.
--       Lua 5.3/5.4    with "int128" + "float"    will not work.
--       Lua 5.3/5.4    with "int32"  + "double"   is OK.          (config used by Fengari)
--       Lua 5.3/5.4    with "int64"  + "double"   is OK.          (default config for Lua 5.3, Lua 5.4)
--       Lua 5.3/5.4    with "int128" + "double"   will not work.
--   Using floating point numbers better than "double" instead of "double" is OK (non-IEEE-754 floating point implementation are allowed).
--   Using "int128" instead of "int64" is not OK: "int128" would require different branch of implementation for optimized SHA512.

-- Check for LuaJIT and 32-bit bitwise libraries
local is_LuaJIT = ({false, [1] = true})[1] and _VERSION ~= "Luau" and (type(jit) ~= "table" or jit.version_num >= 20000)  -- LuaJIT 1.x.x and Luau are treated as vanilla Lua 5.1/5.2
local is_LuaJIT_21  -- LuaJIT 2.1+
local LuaJIT_arch
local ffi           -- LuaJIT FFI library (as a table)
local b             -- 32-bit bitwise library (as a table)
local library_name

if is_LuaJIT then
	-- Assuming "bit" library is always available on LuaJIT
	b = require"bit"
	library_name = "bit"
	-- "ffi" is intentionally disabled on some systems for safety reason
	local LuaJIT_has_FFI, result = pcall(require, "ffi")
	if LuaJIT_has_FFI then
		ffi = result
	end
	is_LuaJIT_21 = not not loadstring"b=0b0"
	LuaJIT_arch = type(jit) == "table" and jit.arch or ffi and ffi.arch or nil
else
	-- For vanilla Lua, "bit"/"bit32" libraries are searched in global namespace only.  No attempt is made to load a library if it's not loaded yet.
	for _, libname in ipairs(_VERSION == "Lua 5.2" and {"bit32", "bit"} or {"bit", "bit32"}) do
		if type(_G[libname]) == "table" and _G[libname].bxor then
			b = _G[libname]
			library_name = libname
			break
		end
	end
end

--------------------------------------------------------------------------------
-- You can disable here some of your system's abilities (for testing purposes)
--------------------------------------------------------------------------------
-- is_LuaJIT = nil
-- is_LuaJIT_21 = nil
-- ffi = nil
-- Lua_has_int32 = nil
-- Lua_has_int64 = nil
-- b, library_name = nil
--------------------------------------------------------------------------------

if print_debug_messages then
	-- Printing list of abilities of your system
	print("Abilities:")
	print("   Lua version:               "..(is_LuaJIT and "LuaJIT "..(is_LuaJIT_21 and "2.1 " or "2.0 ")..(LuaJIT_arch or "")..(ffi and " with FFI" or " without FFI") or _VERSION))
	print("   Integer bitwise operators: "..(Lua_has_int64 and "int64" or Lua_has_int32 and "int32" or "no"))
	print("   32-bit bitwise library:    "..(library_name or "not found"))
end

-- Selecting the most suitable implementation for given set of abilities
local method, branch
if is_LuaJIT and ffi then
	method = "Using 'ffi' library of LuaJIT"
	branch = "FFI"
elseif is_LuaJIT then
	method = "Using special code for sandboxed LuaJIT (no FFI)"
	branch = "LJ"
elseif Lua_has_int64 then
	method = "Using native int64 bitwise operators"
	branch = "INT64"
elseif Lua_has_int32 then
	method = "Using native int32 bitwise operators"
	branch = "INT32"
elseif library_name then   -- when bitwise library is available (Lua 5.2 with native library "bit32" or Lua 5.1 with external library "bit")
	method = "Using '"..library_name.."' library"
	branch = "LIB32"
else
	method = "Emulating bitwise operators using look-up table"
	branch = "EMUL"
end

if print_debug_messages then
	-- Printing the implementation selected to be used on your system
	print("Implementation selected:")
	print("   "..method)
end


--------------------------------------------------------------------------------
-- BASIC 32-BIT BITWISE FUNCTIONS
--------------------------------------------------------------------------------

local AND, OR, XOR, SHL, SHR, ROL, ROR, NOT, NORM, HEX, XOR_BYTE
-- Only low 32 bits of function arguments matter, high bits are ignored
-- The result of all functions (except HEX) is an integer inside "correct range":
--    for "bit" library:    (-2^31)..(2^31-1)
--    for "bit32" library:        0..(2^32-1)

if branch == "FFI" or branch == "LJ" or branch == "LIB32" then

	-- Your system has 32-bit bitwise library (either "bit" or "bit32")

	AND  = b.band                -- 2 arguments
	OR   = b.bor                 -- 2 arguments
	XOR  = b.bxor                -- 2..5 arguments
	SHL  = b.lshift              -- second argument is integer 0..31
	SHR  = b.rshift              -- second argument is integer 0..31
	ROL  = b.rol or b.lrotate    -- second argument is integer 0..31
	ROR  = b.ror or b.rrotate    -- second argument is integer 0..31
	NOT  = b.bnot                -- only for LuaJIT
	NORM = b.tobit               -- only for LuaJIT
	HEX  = b.tohex               -- returns string of 8 lowercase hexadecimal digits
	assert(AND and OR and XOR and SHL and SHR and ROL and ROR and NOT, "Library '"..library_name.."' is incomplete")
	XOR_BYTE = XOR               -- XOR of two bytes (0..255)

elseif branch == "EMUL" then

	-- Emulating 32-bit bitwise operations using 53-bit floating point arithmetic

	function SHL(x, n)
		return (x * 2^n) % 2^32
	end

	function SHR(x, n)
		x = x % 2^32 / 2^n
		return x - x % 1
	end

	function ROL(x, n)
		x = x % 2^32 * 2^n
		local r = x % 2^32
		return r + (x - r) / 2^32
	end

	function ROR(x, n)
		x = x % 2^32 / 2^n
		local r = x % 1
		return r * 2^32 + (x - r)
	end

	local AND_of_two_bytes = {[0] = 0}  -- look-up table (256*256 entries)
	local idx = 0
	for y = 0, 127 * 256, 256 do
		for x = y, y + 127 do
			x = AND_of_two_bytes[x] * 2
			AND_of_two_bytes[idx] = x
			AND_of_two_bytes[idx + 1] = x
			AND_of_two_bytes[idx + 256] = x
			AND_of_two_bytes[idx + 257] = x + 1
			idx = idx + 2
		end
		idx = idx + 256
	end

	local function and_or_xor(x, y, operation)
		-- operation: nil = AND, 1 = OR, 2 = XOR
		local x0 = x % 2^32
		local y0 = y % 2^32
		local rx = x0 % 256
		local ry = y0 % 256
		local res = AND_of_two_bytes[rx + ry * 256]
		x = x0 - rx
		y = (y0 - ry) / 256
		rx = x % 65536
		ry = y % 256
		res = res + AND_of_two_bytes[rx + ry] * 256
		x = (x - rx) / 256
		y = (y - ry) / 256
		rx = x % 65536 + y % 256
		res = res + AND_of_two_bytes[rx] * 65536
		res = res + AND_of_two_bytes[(x + y - rx) / 256] * 16777216
		if operation then
			res = x0 + y0 - operation * res
		end
		return res
	end

	function AND(x, y)
		return and_or_xor(x, y)
	end

	function OR(x, y)
		return and_or_xor(x, y, 1)
	end

	function XOR(x, y, z, t, u)          -- 2..5 arguments
		if z then
			if t then
				if u then
					t = and_or_xor(t, u, 2)
				end
				z = and_or_xor(z, t, 2)
			end
			y = and_or_xor(y, z, 2)
		end
		return and_or_xor(x, y, 2)
	end

	function XOR_BYTE(x, y)
		return x + y - 2 * AND_of_two_bytes[x + y * 256]
	end

end

HEX = HEX
	or
	pcall(string_format, "%x", 2^31) and
	function (x)  -- returns string of 8 lowercase hexadecimal digits
		return string_format("%08x", x % 4294967296)
	end
	or
	function (x)  -- for OpenWrt's dialect of Lua
		return string_format("%08x", (x + 2^31) % 2^32 - 2^31)
	end

local function XORA5(x, y)
	return XOR(x, y or 0xA5A5A5A5) % 4294967296
end

local function create_array_of_lanes()
	return {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
end


--------------------------------------------------------------------------------
-- CREATING OPTIMIZED INNER LOOP
--------------------------------------------------------------------------------

-- Inner loop functions
local sha256_feed_64, sha512_feed_128, md5_feed_64, sha1_feed_64, keccak_feed, blake2s_feed_64, blake2b_feed_128, blake3_feed_64

-- Arrays of SHA-2 "magic numbers" (in "INT64" and "FFI" branches "*_lo" arrays contain 64-bit values)
local sha2_K_lo, sha2_K_hi, sha2_H_lo, sha2_H_hi, sha3_RC_lo, sha3_RC_hi = {}, {}, {}, {}, {}, {}
local sha2_H_ext256 = {[224] = {}, [256] = sha2_H_hi}
local sha2_H_ext512_lo, sha2_H_ext512_hi = {[384] = {}, [512] = sha2_H_lo}, {[384] = {}, [512] = sha2_H_hi}
local md5_K, md5_sha1_H = {}, {0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0}
local md5_next_shift = {0, 0, 0, 0, 0, 0, 0, 0, 28, 25, 26, 27, 0, 0, 10, 9, 11, 12, 0, 15, 16, 17, 18, 0, 20, 22, 23, 21}
local HEX64, lanes_index_base  -- defined only for branches that internally use 64-bit integers: "INT64" and "FFI"
local common_W = {}    -- temporary table shared between all calculations (to avoid creating new temporary table every time)
local common_W_blake2b, common_W_blake2s, v_for_blake2s_feed_64 = common_W, common_W, {}
local K_lo_modulo, hi_factor, hi_factor_keccak = 4294967296, 0, 0
local sigma = {
	{  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16 },
	{ 15, 11,  5,  9, 10, 16, 14,  7,  2, 13,  1,  3, 12,  8,  6,  4 },
	{ 12,  9, 13,  1,  6,  3, 16, 14, 11, 15,  4,  7,  8,  2, 10,  5 },
	{  8, 10,  4,  2, 14, 13, 12, 15,  3,  7,  6, 11,  5,  1, 16,  9 },
	{ 10,  1,  6,  8,  3,  5, 11, 16, 15,  2, 12, 13,  7,  9,  4, 14 },
	{  3, 13,  7, 11,  1, 12,  9,  4,  5, 14,  8,  6, 16, 15,  2, 10 },
	{ 13,  6,  2, 16, 15, 14,  5, 11,  1,  8,  7,  4, 10,  3,  9, 12 },
	{ 14, 12,  8, 15, 13,  2,  4, 10,  6,  1, 16,  5,  9,  7,  3, 11 },
	{  7, 16, 15, 10, 12,  4,  1,  9, 13,  3, 14,  8,  2,  5, 11,  6 },
	{ 11,  3,  9,  5,  8,  7,  2,  6, 16, 12, 10, 15,  4, 13, 14,  1 },
};  sigma[11], sigma[12] = sigma[1], sigma[2]
local perm_blake3 = {
	1, 3, 4, 11, 13, 10, 12, 6,
	1, 3, 4, 11, 13, 10,
	2, 7, 5, 8, 14, 15, 16, 9,
	2, 7, 5, 8, 14, 15,
}

local function build_keccak_format(elem)
	local keccak_format = {}
	for _, size in ipairs{1, 9, 13, 17, 18, 21} do
		keccak_format[size] = "<"..string_rep(elem, size)
	end
	return keccak_format
end


if branch == "FFI" then

	local common_W_FFI_int32 = ffi.new("int32_t[?]", 80)   -- 64 is enough for SHA256, but 80 is needed for SHA-1
	common_W_blake2s = common_W_FFI_int32
	v_for_blake2s_feed_64 = ffi.new("int32_t[?]", 16)
	perm_blake3 = ffi.new("uint8_t[?]", #perm_blake3 + 1, 0, unpack(perm_blake3))
	for j = 1, 10 do
		sigma[j] = ffi.new("uint8_t[?]", #sigma[j] + 1, 0, unpack(sigma[j]))
	end;  sigma[11], sigma[12] = sigma[1], sigma[2]


	-- SHA256 implementation for "LuaJIT with FFI" branch

	function sha256_feed_64(H, str, offs, size)
		-- offs >= 0, size >= 0, size is multiple of 64
		local W, K = common_W_FFI_int32, sha2_K_hi
		for pos = offs, offs + size - 1, 64 do
			for j = 0, 15 do
				pos = pos + 4
				local a, b, c, d = byte(str, pos - 3, pos)   -- slow, but doesn't depend on endianness
				W[j] = OR(SHL(a, 24), SHL(b, 16), SHL(c, 8), d)
			end
			for j = 16, 63 do
				local a, b = W[j-15], W[j-2]
				W[j] = NORM( XOR(ROR(a, 7), ROL(a, 14), SHR(a, 3)) + XOR(ROL(b, 15), ROL(b, 13), SHR(b, 10)) + W[j-7] + W[j-16] )
			end
			local a, b, c, d, e, f, g, h = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
			for j = 0, 63, 8 do  -- Thanks to Peter Cawley for this workaround (unroll the loop to avoid "PHI shuffling too complex" due to PHIs overlap)
				local z = NORM( XOR(g, AND(e, XOR(f, g))) + XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + (W[j] + K[j+1] + h) )
				h, g, f, e = g, f, e, NORM( d + z )
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(g, AND(e, XOR(f, g))) + XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + (W[j+1] + K[j+2] + h) )
				h, g, f, e = g, f, e, NORM( d + z )
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(g, AND(e, XOR(f, g))) + XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + (W[j+2] + K[j+3] + h) )
				h, g, f, e = g, f, e, NORM( d + z )
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(g, AND(e, XOR(f, g))) + XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + (W[j+3] + K[j+4] + h) )
				h, g, f, e = g, f, e, NORM( d + z )
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(g, AND(e, XOR(f, g))) + XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + (W[j+4] + K[j+5] + h) )
				h, g, f, e = g, f, e, NORM( d + z )
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(g, AND(e, XOR(f, g))) + XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + (W[j+5] + K[j+6] + h) )
				h, g, f, e = g, f, e, NORM( d + z )
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(g, AND(e, XOR(f, g))) + XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + (W[j+6] + K[j+7] + h) )
				h, g, f, e = g, f, e, NORM( d + z )
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(g, AND(e, XOR(f, g))) + XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + (W[j+7] + K[j+8] + h) )
				h, g, f, e = g, f, e, NORM( d + z )
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
			end
			H[1], H[2], H[3], H[4] = NORM(a + H[1]), NORM(b + H[2]), NORM(c + H[3]), NORM(d + H[4])
			H[5], H[6], H[7], H[8] = NORM(e + H[5]), NORM(f + H[6]), NORM(g + H[7]), NORM(h + H[8])
		end
	end


	local common_W_FFI_int64 = ffi.new("int64_t[?]", 80)
	common_W_blake2b = common_W_FFI_int64
	local int64 = ffi.typeof"int64_t"
	local int32 = ffi.typeof"int32_t"
	local uint32 = ffi.typeof"uint32_t"
	hi_factor = int64(2^32)

	if is_LuaJIT_21 then   -- LuaJIT 2.1 supports bitwise 64-bit operations

		local AND64, OR64, XOR64, NOT64, SHL64, SHR64, ROL64, ROR64  -- introducing synonyms for better code readability
			= AND,   OR,   XOR,   NOT,   SHL,   SHR,   ROL,   ROR
		HEX64 = HEX


		-- BLAKE2b implementation for "LuaJIT 2.1 + FFI" branch

		do
			local v = ffi.new("int64_t[?]", 16)
			local W = common_W_blake2b

			local function G(a, b, c, d, k1, k2)
				local va, vb, vc, vd = v[a], v[b], v[c], v[d]
				va = W[k1] + (va + vb)
				vd = ROR64(XOR64(vd, va), 32)
				vc = vc + vd
				vb = ROR64(XOR64(vb, vc), 24)
				va = W[k2] + (va + vb)
				vd = ROR64(XOR64(vd, va), 16)
				vc = vc + vd
				vb = ROL64(XOR64(vb, vc), 1)
				v[a], v[b], v[c], v[d] = va, vb, vc, vd
			end

			function blake2b_feed_128(H, _, str, offs, size, bytes_compressed, last_block_size, is_last_node)
				-- offs >= 0, size >= 0, size is multiple of 128
				local h1, h2, h3, h4, h5, h6, h7, h8 = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
				for pos = offs, offs + size - 1, 128 do
					if str then
						for j = 1, 16 do
							pos = pos + 8
							local a, b, c, d, e, f, g, h = byte(str, pos - 7, pos)
							W[j] = XOR64(OR(SHL(h, 24), SHL(g, 16), SHL(f, 8), e) * int64(2^32), uint32(int32(OR(SHL(d, 24), SHL(c, 16), SHL(b, 8), a))))
						end
					end
					v[0x0], v[0x1], v[0x2], v[0x3], v[0x4], v[0x5], v[0x6], v[0x7] = h1, h2, h3, h4, h5, h6, h7, h8
					v[0x8], v[0x9], v[0xA], v[0xB], v[0xD], v[0xE], v[0xF] = sha2_H_lo[1], sha2_H_lo[2], sha2_H_lo[3], sha2_H_lo[4], sha2_H_lo[6], sha2_H_lo[7], sha2_H_lo[8]
					bytes_compressed = bytes_compressed + (last_block_size or 128)
					v[0xC] = XOR64(sha2_H_lo[5], bytes_compressed)  -- t0 = low_8_bytes(bytes_compressed)
					-- t1 = high_8_bytes(bytes_compressed) = 0,  message length is always below 2^53 bytes
					if last_block_size then  -- flag f0
						v[0xE] = NOT64(v[0xE])
					end
					if is_last_node then  -- flag f1
						v[0xF] = NOT64(v[0xF])
					end
					for j = 1, 12 do
						local row = sigma[j]
						G(0, 4,  8, 12, row[ 1], row[ 2])
						G(1, 5,  9, 13, row[ 3], row[ 4])
						G(2, 6, 10, 14, row[ 5], row[ 6])
						G(3, 7, 11, 15, row[ 7], row[ 8])
						G(0, 5, 10, 15, row[ 9], row[10])
						G(1, 6, 11, 12, row[11], row[12])
						G(2, 7,  8, 13, row[13], row[14])
						G(3, 4,  9, 14, row[15], row[16])
					end
					h1 = XOR64(h1, v[0x0], v[0x8])
					h2 = XOR64(h2, v[0x1], v[0x9])
					h3 = XOR64(h3, v[0x2], v[0xA])
					h4 = XOR64(h4, v[0x3], v[0xB])
					h5 = XOR64(h5, v[0x4], v[0xC])
					h6 = XOR64(h6, v[0x5], v[0xD])
					h7 = XOR64(h7, v[0x6], v[0xE])
					h8 = XOR64(h8, v[0x7], v[0xF])
				end
				H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8] = h1, h2, h3, h4, h5, h6, h7, h8
				return bytes_compressed
			end

		end


		-- SHA-3 implementation for "LuaJIT 2.1 + FFI" branch

		local arr64_t = ffi.typeof"int64_t[?]"
		-- lanes array is indexed from 0
		lanes_index_base = 0
		hi_factor_keccak = int64(2^32)

		function create_array_of_lanes()
			return arr64_t(30)  -- 25 + 5 for temporary usage
		end

		function keccak_feed(lanes, _, str, offs, size, block_size_in_bytes)
			-- offs >= 0, size >= 0, size is multiple of block_size_in_bytes, block_size_in_bytes is positive multiple of 8
			local RC = sha3_RC_lo
			local qwords_qty = SHR(block_size_in_bytes, 3)
			for pos = offs, offs + size - 1, block_size_in_bytes do
				for j = 0, qwords_qty - 1 do
					pos = pos + 8
					local h, g, f, e, d, c, b, a = byte(str, pos - 7, pos)   -- slow, but doesn't depend on endianness
					lanes[j] = XOR64(lanes[j], OR64(OR(SHL(a, 24), SHL(b, 16), SHL(c, 8), d) * int64(2^32), uint32(int32(OR(SHL(e, 24), SHL(f, 16), SHL(g, 8), h)))))
				end
				for round_idx = 1, 24 do
					for j = 0, 4 do
						lanes[25 + j] = XOR64(lanes[j], lanes[j+5], lanes[j+10], lanes[j+15], lanes[j+20])
					end
					local D = XOR64(lanes[25], ROL64(lanes[27], 1))
					lanes[1], lanes[6], lanes[11], lanes[16] = ROL64(XOR64(D, lanes[6]), 44), ROL64(XOR64(D, lanes[16]), 45), ROL64(XOR64(D, lanes[1]), 1), ROL64(XOR64(D, lanes[11]), 10)
					lanes[21] = ROL64(XOR64(D, lanes[21]), 2)
					D = XOR64(lanes[26], ROL64(lanes[28], 1))
					lanes[2], lanes[7], lanes[12], lanes[22] = ROL64(XOR64(D, lanes[12]), 43), ROL64(XOR64(D, lanes[22]), 61), ROL64(XOR64(D, lanes[7]), 6), ROL64(XOR64(D, lanes[2]), 62)
					lanes[17] = ROL64(XOR64(D, lanes[17]), 15)
					D = XOR64(lanes[27], ROL64(lanes[29], 1))
					lanes[3], lanes[8], lanes[18], lanes[23] = ROL64(XOR64(D, lanes[18]), 21), ROL64(XOR64(D, lanes[3]), 28), ROL64(XOR64(D, lanes[23]), 56), ROL64(XOR64(D, lanes[8]), 55)
					lanes[13] = ROL64(XOR64(D, lanes[13]), 25)
					D = XOR64(lanes[28], ROL64(lanes[25], 1))
					lanes[4], lanes[14], lanes[19], lanes[24] = ROL64(XOR64(D, lanes[24]), 14), ROL64(XOR64(D, lanes[19]), 8), ROL64(XOR64(D, lanes[4]), 27), ROL64(XOR64(D, lanes[14]), 39)
					lanes[9] = ROL64(XOR64(D, lanes[9]), 20)
					D = XOR64(lanes[29], ROL64(lanes[26], 1))
					lanes[5], lanes[10], lanes[15], lanes[20] = ROL64(XOR64(D, lanes[10]), 3), ROL64(XOR64(D, lanes[20]), 18), ROL64(XOR64(D, lanes[5]), 36), ROL64(XOR64(D, lanes[15]), 41)
					lanes[0] = XOR64(D, lanes[0])
					lanes[0], lanes[1], lanes[2], lanes[3], lanes[4] = XOR64(lanes[0], AND64(NOT64(lanes[1]), lanes[2]), RC[round_idx]), XOR64(lanes[1], AND64(NOT64(lanes[2]), lanes[3])), XOR64(lanes[2], AND64(NOT64(lanes[3]), lanes[4])), XOR64(lanes[3], AND64(NOT64(lanes[4]), lanes[0])), XOR64(lanes[4], AND64(NOT64(lanes[0]), lanes[1]))
					lanes[5], lanes[6], lanes[7], lanes[8], lanes[9] = XOR64(lanes[8], AND64(NOT64(lanes[9]), lanes[5])), XOR64(lanes[9], AND64(NOT64(lanes[5]), lanes[6])), XOR64(lanes[5], AND64(NOT64(lanes[6]), lanes[7])), XOR64(lanes[6], AND64(NOT64(lanes[7]), lanes[8])), XOR64(lanes[7], AND64(NOT64(lanes[8]), lanes[9]))
					lanes[10], lanes[11], lanes[12], lanes[13], lanes[14] = XOR64(lanes[11], AND64(NOT64(lanes[12]), lanes[13])), XOR64(lanes[12], AND64(NOT64(lanes[13]), lanes[14])), XOR64(lanes[13], AND64(NOT64(lanes[14]), lanes[10])), XOR64(lanes[14], AND64(NOT64(lanes[10]), lanes[11])), XOR64(lanes[10], AND64(NOT64(lanes[11]), lanes[12]))
					lanes[15], lanes[16], lanes[17], lanes[18], lanes[19] = XOR64(lanes[19], AND64(NOT64(lanes[15]), lanes[16])), XOR64(lanes[15], AND64(NOT64(lanes[16]), lanes[17])), XOR64(lanes[16], AND64(NOT64(lanes[17]), lanes[18])), XOR64(lanes[17], AND64(NOT64(lanes[18]), lanes[19])), XOR64(lanes[18], AND64(NOT64(lanes[19]), lanes[15]))
					lanes[20], lanes[21], lanes[22], lanes[23], lanes[24] = XOR64(lanes[22], AND64(NOT64(lanes[23]), lanes[24])), XOR64(lanes[23], AND64(NOT64(lanes[24]), lanes[20])), XOR64(lanes[24], AND64(NOT64(lanes[20]), lanes[21])), XOR64(lanes[20], AND64(NOT64(lanes[21]), lanes[22])), XOR64(lanes[21], AND64(NOT64(lanes[22]), lanes[23]))
				end
			end
		end


		local A5_long = 0xA5A5A5A5 * int64(2^32 + 1)  -- It's impossible to use constant 0xA5A5A5A5A5A5A5A5LL because it will raise syntax error on other Lua versions

		function XORA5(long, long2)
			return XOR64(long, long2 or A5_long)
		end


		-- SHA512 implementation for "LuaJIT 2.1 + FFI" branch

		function sha512_feed_128(H, _, str, offs, size)
			-- offs >= 0, size >= 0, size is multiple of 128
			local W, K = common_W_FFI_int64, sha2_K_lo
			for pos = offs, offs + size - 1, 128 do
				for j = 0, 15 do
					pos = pos + 8
					local a, b, c, d, e, f, g, h = byte(str, pos - 7, pos)   -- slow, but doesn't depend on endianness
					W[j] = OR64(OR(SHL(a, 24), SHL(b, 16), SHL(c, 8), d) * int64(2^32), uint32(int32(OR(SHL(e, 24), SHL(f, 16), SHL(g, 8), h))))
				end
				for j = 16, 79 do
					local a, b = W[j-15], W[j-2]
					W[j] = XOR64(ROR64(a, 1), ROR64(a, 8), SHR64(a, 7)) + XOR64(ROR64(b, 19), ROL64(b, 3), SHR64(b, 6)) + W[j-7] + W[j-16]
				end
				local a, b, c, d, e, f, g, h = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
				for j = 0, 79, 8 do
					local z = XOR64(ROR64(e, 14), ROR64(e, 18), ROL64(e, 23)) + XOR64(g, AND64(e, XOR64(f, g))) + h + K[j+1] + W[j]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XOR64(AND64(XOR64(a, b), c), AND64(a, b)) + XOR64(ROR64(a, 28), ROL64(a, 25), ROL64(a, 30)) + z
					z = XOR64(ROR64(e, 14), ROR64(e, 18), ROL64(e, 23)) + XOR64(g, AND64(e, XOR64(f, g))) + h + K[j+2] + W[j+1]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XOR64(AND64(XOR64(a, b), c), AND64(a, b)) + XOR64(ROR64(a, 28), ROL64(a, 25), ROL64(a, 30)) + z
					z = XOR64(ROR64(e, 14), ROR64(e, 18), ROL64(e, 23)) + XOR64(g, AND64(e, XOR64(f, g))) + h + K[j+3] + W[j+2]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XOR64(AND64(XOR64(a, b), c), AND64(a, b)) + XOR64(ROR64(a, 28), ROL64(a, 25), ROL64(a, 30)) + z
					z = XOR64(ROR64(e, 14), ROR64(e, 18), ROL64(e, 23)) + XOR64(g, AND64(e, XOR64(f, g))) + h + K[j+4] + W[j+3]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XOR64(AND64(XOR64(a, b), c), AND64(a, b)) + XOR64(ROR64(a, 28), ROL64(a, 25), ROL64(a, 30)) + z
					z = XOR64(ROR64(e, 14), ROR64(e, 18), ROL64(e, 23)) + XOR64(g, AND64(e, XOR64(f, g))) + h + K[j+5] + W[j+4]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XOR64(AND64(XOR64(a, b), c), AND64(a, b)) + XOR64(ROR64(a, 28), ROL64(a, 25), ROL64(a, 30)) + z
					z = XOR64(ROR64(e, 14), ROR64(e, 18), ROL64(e, 23)) + XOR64(g, AND64(e, XOR64(f, g))) + h + K[j+6] + W[j+5]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XOR64(AND64(XOR64(a, b), c), AND64(a, b)) + XOR64(ROR64(a, 28), ROL64(a, 25), ROL64(a, 30)) + z
					z = XOR64(ROR64(e, 14), ROR64(e, 18), ROL64(e, 23)) + XOR64(g, AND64(e, XOR64(f, g))) + h + K[j+7] + W[j+6]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XOR64(AND64(XOR64(a, b), c), AND64(a, b)) + XOR64(ROR64(a, 28), ROL64(a, 25), ROL64(a, 30)) + z
					z = XOR64(ROR64(e, 14), ROR64(e, 18), ROL64(e, 23)) + XOR64(g, AND64(e, XOR64(f, g))) + h + K[j+8] + W[j+7]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XOR64(AND64(XOR64(a, b), c), AND64(a, b)) + XOR64(ROR64(a, 28), ROL64(a, 25), ROL64(a, 30)) + z
				end
				H[1] = a + H[1]
				H[2] = b + H[2]
				H[3] = c + H[3]
				H[4] = d + H[4]
				H[5] = e + H[5]
				H[6] = f + H[6]
				H[7] = g + H[7]
				H[8] = h + H[8]
			end
		end

	else  -- LuaJIT 2.0 doesn't support 64-bit bitwise operations

		local U = ffi.new("union{int64_t i64; struct{int32_t "..(ffi.abi("le") and "lo, hi" or "hi, lo")..";} i32;}[3]")
		-- this array of unions is used for fast splitting int64 into int32_high and int32_low

		-- "xorrific" 64-bit functions :-)
		-- int64 input is splitted into two int32 parts, some bitwise 32-bit operations are performed, finally the result is converted to int64
		-- these functions are needed because bit.* functions in LuaJIT 2.0 don't work with int64_t

		local function XORROR64_1(a)
			-- return XOR64(ROR64(a, 1), ROR64(a, 8), SHR64(a, 7))
			U[0].i64 = a
			local a_lo, a_hi = U[0].i32.lo, U[0].i32.hi
			local t_lo = XOR(SHR(a_lo, 1), SHL(a_hi, 31), SHR(a_lo, 8), SHL(a_hi, 24), SHR(a_lo, 7), SHL(a_hi, 25))
			local t_hi = XOR(SHR(a_hi, 1), SHL(a_lo, 31), SHR(a_hi, 8), SHL(a_lo, 24), SHR(a_hi, 7))
			return t_hi * int64(2^32) + uint32(int32(t_lo))
		end

		local function XORROR64_2(b)
			-- return XOR64(ROR64(b, 19), ROL64(b, 3), SHR64(b, 6))
			U[0].i64 = b
			local b_lo, b_hi = U[0].i32.lo, U[0].i32.hi
			local u_lo = XOR(SHR(b_lo, 19), SHL(b_hi, 13), SHL(b_lo, 3), SHR(b_hi, 29), SHR(b_lo, 6), SHL(b_hi, 26))
			local u_hi = XOR(SHR(b_hi, 19), SHL(b_lo, 13), SHL(b_hi, 3), SHR(b_lo, 29), SHR(b_hi, 6))
			return u_hi * int64(2^32) + uint32(int32(u_lo))
		end

		local function XORROR64_3(e)
			-- return XOR64(ROR64(e, 14), ROR64(e, 18), ROL64(e, 23))
			U[0].i64 = e
			local e_lo, e_hi = U[0].i32.lo, U[0].i32.hi
			local u_lo = XOR(SHR(e_lo, 14), SHL(e_hi, 18), SHR(e_lo, 18), SHL(e_hi, 14), SHL(e_lo, 23), SHR(e_hi, 9))
			local u_hi = XOR(SHR(e_hi, 14), SHL(e_lo, 18), SHR(e_hi, 18), SHL(e_lo, 14), SHL(e_hi, 23), SHR(e_lo, 9))
			return u_hi * int64(2^32) + uint32(int32(u_lo))
		end

		local function XORROR64_6(a)
			-- return XOR64(ROR64(a, 28), ROL64(a, 25), ROL64(a, 30))
			U[0].i64 = a
			local b_lo, b_hi = U[0].i32.lo, U[0].i32.hi
			local u_lo = XOR(SHR(b_lo, 28), SHL(b_hi, 4), SHL(b_lo, 30), SHR(b_hi, 2), SHL(b_lo, 25), SHR(b_hi, 7))
			local u_hi = XOR(SHR(b_hi, 28), SHL(b_lo, 4), SHL(b_hi, 30), SHR(b_lo, 2), SHL(b_hi, 25), SHR(b_lo, 7))
			return u_hi * int64(2^32) + uint32(int32(u_lo))
		end

		local function XORROR64_4(e, f, g)
			-- return XOR64(g, AND64(e, XOR64(f, g)))
			U[0].i64 = f
			U[1].i64 = g
			U[2].i64 = e
			local f_lo, f_hi = U[0].i32.lo, U[0].i32.hi
			local g_lo, g_hi = U[1].i32.lo, U[1].i32.hi
			local e_lo, e_hi = U[2].i32.lo, U[2].i32.hi
			local result_lo = XOR(g_lo, AND(e_lo, XOR(f_lo, g_lo)))
			local result_hi = XOR(g_hi, AND(e_hi, XOR(f_hi, g_hi)))
			return result_hi * int64(2^32) + uint32(int32(result_lo))
		end

		local function XORROR64_5(a, b, c)
			-- return XOR64(AND64(XOR64(a, b), c), AND64(a, b))
			U[0].i64 = a
			U[1].i64 = b
			U[2].i64 = c
			local a_lo, a_hi = U[0].i32.lo, U[0].i32.hi
			local b_lo, b_hi = U[1].i32.lo, U[1].i32.hi
			local c_lo, c_hi = U[2].i32.lo, U[2].i32.hi
			local result_lo = XOR(AND(XOR(a_lo, b_lo), c_lo), AND(a_lo, b_lo))
			local result_hi = XOR(AND(XOR(a_hi, b_hi), c_hi), AND(a_hi, b_hi))
			return result_hi * int64(2^32) + uint32(int32(result_lo))
		end

		local function XORROR64_7(a, b, m)
			-- return ROR64(XOR64(a, b), m), m = 1..31
			U[0].i64 = a
			U[1].i64 = b
			local a_lo, a_hi = U[0].i32.lo, U[0].i32.hi
			local b_lo, b_hi = U[1].i32.lo, U[1].i32.hi
			local c_lo, c_hi = XOR(a_lo, b_lo), XOR(a_hi, b_hi)
			local t_lo = XOR(SHR(c_lo, m), SHL(c_hi, -m))
			local t_hi = XOR(SHR(c_hi, m), SHL(c_lo, -m))
			return t_hi * int64(2^32) + uint32(int32(t_lo))
		end

		local function XORROR64_8(a, b)
			-- return ROL64(XOR64(a, b), 1)
			U[0].i64 = a
			U[1].i64 = b
			local a_lo, a_hi = U[0].i32.lo, U[0].i32.hi
			local b_lo, b_hi = U[1].i32.lo, U[1].i32.hi
			local c_lo, c_hi = XOR(a_lo, b_lo), XOR(a_hi, b_hi)
			local t_lo = XOR(SHL(c_lo, 1), SHR(c_hi, 31))
			local t_hi = XOR(SHL(c_hi, 1), SHR(c_lo, 31))
			return t_hi * int64(2^32) + uint32(int32(t_lo))
		end

		local function XORROR64_9(a, b)
			-- return ROR64(XOR64(a, b), 32)
			U[0].i64 = a
			U[1].i64 = b
			local a_lo, a_hi = U[0].i32.lo, U[0].i32.hi
			local b_lo, b_hi = U[1].i32.lo, U[1].i32.hi
			local t_hi, t_lo = XOR(a_lo, b_lo), XOR(a_hi, b_hi)
			return t_hi * int64(2^32) + uint32(int32(t_lo))
		end

		local function XOR64(a, b)
			-- return XOR64(a, b)
			U[0].i64 = a
			U[1].i64 = b
			local a_lo, a_hi = U[0].i32.lo, U[0].i32.hi
			local b_lo, b_hi = U[1].i32.lo, U[1].i32.hi
			local t_lo, t_hi = XOR(a_lo, b_lo), XOR(a_hi, b_hi)
			return t_hi * int64(2^32) + uint32(int32(t_lo))
		end

		local function XORROR64_11(a, b, c)
			-- return XOR64(a, b, c)
			U[0].i64 = a
			U[1].i64 = b
			U[2].i64 = c
			local a_lo, a_hi = U[0].i32.lo, U[0].i32.hi
			local b_lo, b_hi = U[1].i32.lo, U[1].i32.hi
			local c_lo, c_hi = U[2].i32.lo, U[2].i32.hi
			local t_lo, t_hi = XOR(a_lo, b_lo, c_lo), XOR(a_hi, b_hi, c_hi)
			return t_hi * int64(2^32) + uint32(int32(t_lo))
		end

		function XORA5(long, long2)
			-- return XOR64(long, long2 or 0xA5A5A5A5A5A5A5A5)
			U[0].i64 = long
			local lo32, hi32 = U[0].i32.lo, U[0].i32.hi
			local long2_lo, long2_hi = 0xA5A5A5A5, 0xA5A5A5A5
			if long2 then
				U[1].i64 = long2
				long2_lo, long2_hi = U[1].i32.lo, U[1].i32.hi
			end
			lo32 = XOR(lo32, long2_lo)
			hi32 = XOR(hi32, long2_hi)
			return hi32 * int64(2^32) + uint32(int32(lo32))
		end

		function HEX64(long)
			U[0].i64 = long
			return HEX(U[0].i32.hi)..HEX(U[0].i32.lo)
		end


		-- SHA512 implementation for "LuaJIT 2.0 + FFI" branch

		function sha512_feed_128(H, _, str, offs, size)
			-- offs >= 0, size >= 0, size is multiple of 128
			local W, K = common_W_FFI_int64, sha2_K_lo
			for pos = offs, offs + size - 1, 128 do
				for j = 0, 15 do
					pos = pos + 8
					local a, b, c, d, e, f, g, h = byte(str, pos - 7, pos)   -- slow, but doesn't depend on endianness
					W[j] = OR(SHL(a, 24), SHL(b, 16), SHL(c, 8), d) * int64(2^32) + uint32(int32(OR(SHL(e, 24), SHL(f, 16), SHL(g, 8), h)))
				end
				for j = 16, 79 do
					W[j] = XORROR64_1(W[j-15]) + XORROR64_2(W[j-2]) + W[j-7] + W[j-16]
				end
				local a, b, c, d, e, f, g, h = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
				for j = 0, 79, 8 do
					local z = XORROR64_3(e) + XORROR64_4(e, f, g) + h + K[j+1] + W[j]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XORROR64_5(a, b, c) + XORROR64_6(a) + z
					z = XORROR64_3(e) + XORROR64_4(e, f, g) + h + K[j+2] + W[j+1]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XORROR64_5(a, b, c) + XORROR64_6(a) + z
					z = XORROR64_3(e) + XORROR64_4(e, f, g) + h + K[j+3] + W[j+2]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XORROR64_5(a, b, c) + XORROR64_6(a) + z
					z = XORROR64_3(e) + XORROR64_4(e, f, g) + h + K[j+4] + W[j+3]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XORROR64_5(a, b, c) + XORROR64_6(a) + z
					z = XORROR64_3(e) + XORROR64_4(e, f, g) + h + K[j+5] + W[j+4]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XORROR64_5(a, b, c) + XORROR64_6(a) + z
					z = XORROR64_3(e) + XORROR64_4(e, f, g) + h + K[j+6] + W[j+5]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XORROR64_5(a, b, c) + XORROR64_6(a) + z
					z = XORROR64_3(e) + XORROR64_4(e, f, g) + h + K[j+7] + W[j+6]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XORROR64_5(a, b, c) + XORROR64_6(a) + z
					z = XORROR64_3(e) + XORROR64_4(e, f, g) + h + K[j+8] + W[j+7]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XORROR64_5(a, b, c) + XORROR64_6(a) + z
				end
				H[1] = a + H[1]
				H[2] = b + H[2]
				H[3] = c + H[3]
				H[4] = d + H[4]
				H[5] = e + H[5]
				H[6] = f + H[6]
				H[7] = g + H[7]
				H[8] = h + H[8]
			end
		end


		-- BLAKE2b implementation for "LuaJIT 2.0 + FFI" branch

		do
			local v = ffi.new("int64_t[?]", 16)
			local W = common_W_blake2b

			local function G(a, b, c, d, k1, k2)
				local va, vb, vc, vd = v[a], v[b], v[c], v[d]
				va = W[k1] + (va + vb)
				vd = XORROR64_9(vd, va)
				vc = vc + vd
				vb = XORROR64_7(vb, vc, 24)
				va = W[k2] + (va + vb)
				vd = XORROR64_7(vd, va, 16)
				vc = vc + vd
				vb = XORROR64_8(vb, vc)
				v[a], v[b], v[c], v[d] = va, vb, vc, vd
			end

			function blake2b_feed_128(H, _, str, offs, size, bytes_compressed, last_block_size, is_last_node)
				-- offs >= 0, size >= 0, size is multiple of 128
				local h1, h2, h3, h4, h5, h6, h7, h8 = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
				for pos = offs, offs + size - 1, 128 do
					if str then
						for j = 1, 16 do
							pos = pos + 8
							local a, b, c, d, e, f, g, h = byte(str, pos - 7, pos)
							W[j] = XOR64(OR(SHL(h, 24), SHL(g, 16), SHL(f, 8), e) * int64(2^32), uint32(int32(OR(SHL(d, 24), SHL(c, 16), SHL(b, 8), a))))
						end
					end
					v[0x0], v[0x1], v[0x2], v[0x3], v[0x4], v[0x5], v[0x6], v[0x7] = h1, h2, h3, h4, h5, h6, h7, h8
					v[0x8], v[0x9], v[0xA], v[0xB], v[0xD], v[0xE], v[0xF] = sha2_H_lo[1], sha2_H_lo[2], sha2_H_lo[3], sha2_H_lo[4], sha2_H_lo[6], sha2_H_lo[7], sha2_H_lo[8]
					bytes_compressed = bytes_compressed + (last_block_size or 128)
					v[0xC] = XOR64(sha2_H_lo[5], bytes_compressed)  -- t0 = low_8_bytes(bytes_compressed)
					-- t1 = high_8_bytes(bytes_compressed) = 0,  message length is always below 2^53 bytes
					if last_block_size then  -- flag f0
						v[0xE] = -1 - v[0xE]
					end
					if is_last_node then  -- flag f1
						v[0xF] = -1 - v[0xF]
					end
					for j = 1, 12 do
						local row = sigma[j]
						G(0, 4,  8, 12, row[ 1], row[ 2])
						G(1, 5,  9, 13, row[ 3], row[ 4])
						G(2, 6, 10, 14, row[ 5], row[ 6])
						G(3, 7, 11, 15, row[ 7], row[ 8])
						G(0, 5, 10, 15, row[ 9], row[10])
						G(1, 6, 11, 12, row[11], row[12])
						G(2, 7,  8, 13, row[13], row[14])
						G(3, 4,  9, 14, row[15], row[16])
					end
					h1 = XORROR64_11(h1, v[0x0], v[0x8])
					h2 = XORROR64_11(h2, v[0x1], v[0x9])
					h3 = XORROR64_11(h3, v[0x2], v[0xA])
					h4 = XORROR64_11(h4, v[0x3], v[0xB])
					h5 = XORROR64_11(h5, v[0x4], v[0xC])
					h6 = XORROR64_11(h6, v[0x5], v[0xD])
					h7 = XORROR64_11(h7, v[0x6], v[0xE])
					h8 = XORROR64_11(h8, v[0x7], v[0xF])
				end
				H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8] = h1, h2, h3, h4, h5, h6, h7, h8
				return bytes_compressed
			end

		end

	end


	-- MD5 implementation for "LuaJIT with FFI" branch

	function md5_feed_64(H, str, offs, size)
		-- offs >= 0, size >= 0, size is multiple of 64
		local W, K = common_W_FFI_int32, md5_K
		for pos = offs, offs + size - 1, 64 do
			for j = 0, 15 do
				pos = pos + 4
				local a, b, c, d = byte(str, pos - 3, pos)   -- slow, but doesn't depend on endianness
				W[j] = OR(SHL(d, 24), SHL(c, 16), SHL(b, 8), a)
			end
			local a, b, c, d = H[1], H[2], H[3], H[4]
			for j = 0, 15, 4 do
				a, d, c, b = d, c, b, NORM(ROL(XOR(d, AND(b, XOR(c, d))) + (K[j+1] + W[j  ] + a),  7) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(d, AND(b, XOR(c, d))) + (K[j+2] + W[j+1] + a), 12) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(d, AND(b, XOR(c, d))) + (K[j+3] + W[j+2] + a), 17) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(d, AND(b, XOR(c, d))) + (K[j+4] + W[j+3] + a), 22) + b)
			end
			for j = 16, 31, 4 do
				local g = 5*j
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, AND(d, XOR(b, c))) + (K[j+1] + W[AND(g + 1, 15)] + a),  5) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, AND(d, XOR(b, c))) + (K[j+2] + W[AND(g + 6, 15)] + a),  9) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, AND(d, XOR(b, c))) + (K[j+3] + W[AND(g - 5, 15)] + a), 14) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, AND(d, XOR(b, c))) + (K[j+4] + W[AND(g    , 15)] + a), 20) + b)
			end
			for j = 32, 47, 4 do
				local g = 3*j
				a, d, c, b = d, c, b, NORM(ROL(XOR(b, c, d) + (K[j+1] + W[AND(g + 5, 15)] + a),  4) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(b, c, d) + (K[j+2] + W[AND(g + 8, 15)] + a), 11) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(b, c, d) + (K[j+3] + W[AND(g - 5, 15)] + a), 16) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(b, c, d) + (K[j+4] + W[AND(g - 2, 15)] + a), 23) + b)
			end
			for j = 48, 63, 4 do
				local g = 7*j
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, OR(b, NOT(d))) + (K[j+1] + W[AND(g    , 15)] + a),  6) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, OR(b, NOT(d))) + (K[j+2] + W[AND(g + 7, 15)] + a), 10) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, OR(b, NOT(d))) + (K[j+3] + W[AND(g - 2, 15)] + a), 15) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, OR(b, NOT(d))) + (K[j+4] + W[AND(g + 5, 15)] + a), 21) + b)
			end
			H[1], H[2], H[3], H[4] = NORM(a + H[1]), NORM(b + H[2]), NORM(c + H[3]), NORM(d + H[4])
		end
	end


	-- SHA-1 implementation for "LuaJIT with FFI" branch

	function sha1_feed_64(H, str, offs, size)
		-- offs >= 0, size >= 0, size is multiple of 64
		local W = common_W_FFI_int32
		for pos = offs, offs + size - 1, 64 do
			for j = 0, 15 do
				pos = pos + 4
				local a, b, c, d = byte(str, pos - 3, pos)   -- slow, but doesn't depend on endianness
				W[j] = OR(SHL(a, 24), SHL(b, 16), SHL(c, 8), d)
			end
			for j = 16, 79 do
				W[j] = ROL(XOR(W[j-3], W[j-8], W[j-14], W[j-16]), 1)
			end
			local a, b, c, d, e = H[1], H[2], H[3], H[4], H[5]
			for j = 0, 19, 5 do
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(d, AND(b, XOR(d, c))) + (W[j]   + 0x5A827999 + e))          -- constant = floor(2^30 * sqrt(2))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(d, AND(b, XOR(d, c))) + (W[j+1] + 0x5A827999 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(d, AND(b, XOR(d, c))) + (W[j+2] + 0x5A827999 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(d, AND(b, XOR(d, c))) + (W[j+3] + 0x5A827999 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(d, AND(b, XOR(d, c))) + (W[j+4] + 0x5A827999 + e))
			end
			for j = 20, 39, 5 do
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j]   + 0x6ED9EBA1 + e))                       -- 2^30 * sqrt(3)
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+1] + 0x6ED9EBA1 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+2] + 0x6ED9EBA1 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+3] + 0x6ED9EBA1 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+4] + 0x6ED9EBA1 + e))
			end
			for j = 40, 59, 5 do
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(AND(d, XOR(b, c)), AND(b, c)) + (W[j]   + 0x8F1BBCDC + e))  -- 2^30 * sqrt(5)
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(AND(d, XOR(b, c)), AND(b, c)) + (W[j+1] + 0x8F1BBCDC + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(AND(d, XOR(b, c)), AND(b, c)) + (W[j+2] + 0x8F1BBCDC + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(AND(d, XOR(b, c)), AND(b, c)) + (W[j+3] + 0x8F1BBCDC + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(AND(d, XOR(b, c)), AND(b, c)) + (W[j+4] + 0x8F1BBCDC + e))
			end
			for j = 60, 79, 5 do
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j]   + 0xCA62C1D6 + e))                       -- 2^30 * sqrt(10)
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+1] + 0xCA62C1D6 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+2] + 0xCA62C1D6 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+3] + 0xCA62C1D6 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+4] + 0xCA62C1D6 + e))
			end
			H[1], H[2], H[3], H[4], H[5] = NORM(a + H[1]), NORM(b + H[2]), NORM(c + H[3]), NORM(d + H[4]), NORM(e + H[5])
		end
	end

end


if branch == "FFI" and not is_LuaJIT_21 or branch == "LJ" then

	if branch == "FFI" then
		local arr32_t = ffi.typeof"int32_t[?]"

		function create_array_of_lanes()
			return arr32_t(31)  -- 25 + 5 + 1 (due to 1-based indexing)
		end

	end


	-- SHA-3 implementation for "LuaJIT 2.0 + FFI" and "LuaJIT without FFI" branches

	function keccak_feed(lanes_lo, lanes_hi, str, offs, size, block_size_in_bytes)
		-- offs >= 0, size >= 0, size is multiple of block_size_in_bytes, block_size_in_bytes is positive multiple of 8
		local RC_lo, RC_hi = sha3_RC_lo, sha3_RC_hi
		local qwords_qty = SHR(block_size_in_bytes, 3)
		for pos = offs, offs + size - 1, block_size_in_bytes do
			for j = 1, qwords_qty do
				local a, b, c, d = byte(str, pos + 1, pos + 4)
				lanes_lo[j] = XOR(lanes_lo[j], OR(SHL(d, 24), SHL(c, 16), SHL(b, 8), a))
				pos = pos + 8
				a, b, c, d = byte(str, pos - 3, pos)
				lanes_hi[j] = XOR(lanes_hi[j], OR(SHL(d, 24), SHL(c, 16), SHL(b, 8), a))
			end
			for round_idx = 1, 24 do
				for j = 1, 5 do
					lanes_lo[25 + j] = XOR(lanes_lo[j], lanes_lo[j + 5], lanes_lo[j + 10], lanes_lo[j + 15], lanes_lo[j + 20])
				end
				for j = 1, 5 do
					lanes_hi[25 + j] = XOR(lanes_hi[j], lanes_hi[j + 5], lanes_hi[j + 10], lanes_hi[j + 15], lanes_hi[j + 20])
				end
				local D_lo = XOR(lanes_lo[26], SHL(lanes_lo[28], 1), SHR(lanes_hi[28], 31))
				local D_hi = XOR(lanes_hi[26], SHL(lanes_hi[28], 1), SHR(lanes_lo[28], 31))
				lanes_lo[2], lanes_hi[2], lanes_lo[7], lanes_hi[7], lanes_lo[12], lanes_hi[12], lanes_lo[17], lanes_hi[17] = XOR(SHR(XOR(D_lo, lanes_lo[7]), 20), SHL(XOR(D_hi, lanes_hi[7]), 12)), XOR(SHR(XOR(D_hi, lanes_hi[7]), 20), SHL(XOR(D_lo, lanes_lo[7]), 12)), XOR(SHR(XOR(D_lo, lanes_lo[17]), 19), SHL(XOR(D_hi, lanes_hi[17]), 13)), XOR(SHR(XOR(D_hi, lanes_hi[17]), 19), SHL(XOR(D_lo, lanes_lo[17]), 13)), XOR(SHL(XOR(D_lo, lanes_lo[2]), 1), SHR(XOR(D_hi, lanes_hi[2]), 31)), XOR(SHL(XOR(D_hi, lanes_hi[2]), 1), SHR(XOR(D_lo, lanes_lo[2]), 31)), XOR(SHL(XOR(D_lo, lanes_lo[12]), 10), SHR(XOR(D_hi, lanes_hi[12]), 22)), XOR(SHL(XOR(D_hi, lanes_hi[12]), 10), SHR(XOR(D_lo, lanes_lo[12]), 22))
				local L, H = XOR(D_lo, lanes_lo[22]), XOR(D_hi, lanes_hi[22])
				lanes_lo[22], lanes_hi[22] = XOR(SHL(L, 2), SHR(H, 30)), XOR(SHL(H, 2), SHR(L, 30))
				D_lo = XOR(lanes_lo[27], SHL(lanes_lo[29], 1), SHR(lanes_hi[29], 31))
				D_hi = XOR(lanes_hi[27], SHL(lanes_hi[29], 1), SHR(lanes_lo[29], 31))
				lanes_lo[3], lanes_hi[3], lanes_lo[8], lanes_hi[8], lanes_lo[13], lanes_hi[13], lanes_lo[23], lanes_hi[23] = XOR(SHR(XOR(D_lo, lanes_lo[13]), 21), SHL(XOR(D_hi, lanes_hi[13]), 11)), XOR(SHR(XOR(D_hi, lanes_hi[13]), 21), SHL(XOR(D_lo, lanes_lo[13]), 11)), XOR(SHR(XOR(D_lo, lanes_lo[23]), 3), SHL(XOR(D_hi, lanes_hi[23]), 29)), XOR(SHR(XOR(D_hi, lanes_hi[23]), 3), SHL(XOR(D_lo, lanes_lo[23]), 29)), XOR(SHL(XOR(D_lo, lanes_lo[8]), 6), SHR(XOR(D_hi, lanes_hi[8]), 26)), XOR(SHL(XOR(D_hi, lanes_hi[8]), 6), SHR(XOR(D_lo, lanes_lo[8]), 26)), XOR(SHR(XOR(D_lo, lanes_lo[3]), 2), SHL(XOR(D_hi, lanes_hi[3]), 30)), XOR(SHR(XOR(D_hi, lanes_hi[3]), 2), SHL(XOR(D_lo, lanes_lo[3]), 30))
				L, H = XOR(D_lo, lanes_lo[18]), XOR(D_hi, lanes_hi[18])
				lanes_lo[18], lanes_hi[18] = XOR(SHL(L, 15), SHR(H, 17)), XOR(SHL(H, 15), SHR(L, 17))
				D_lo = XOR(lanes_lo[28], SHL(lanes_lo[30], 1), SHR(lanes_hi[30], 31))
				D_hi = XOR(lanes_hi[28], SHL(lanes_hi[30], 1), SHR(lanes_lo[30], 31))
				lanes_lo[4], lanes_hi[4], lanes_lo[9], lanes_hi[9], lanes_lo[19], lanes_hi[19], lanes_lo[24], lanes_hi[24] = XOR(SHL(XOR(D_lo, lanes_lo[19]), 21), SHR(XOR(D_hi, lanes_hi[19]), 11)), XOR(SHL(XOR(D_hi, lanes_hi[19]), 21), SHR(XOR(D_lo, lanes_lo[19]), 11)), XOR(SHL(XOR(D_lo, lanes_lo[4]), 28), SHR(XOR(D_hi, lanes_hi[4]), 4)), XOR(SHL(XOR(D_hi, lanes_hi[4]), 28), SHR(XOR(D_lo, lanes_lo[4]), 4)), XOR(SHR(XOR(D_lo, lanes_lo[24]), 8), SHL(XOR(D_hi, lanes_hi[24]), 24)), XOR(SHR(XOR(D_hi, lanes_hi[24]), 8), SHL(XOR(D_lo, lanes_lo[24]), 24)), XOR(SHR(XOR(D_lo, lanes_lo[9]), 9), SHL(XOR(D_hi, lanes_hi[9]), 23)), XOR(SHR(XOR(D_hi, lanes_hi[9]), 9), SHL(XOR(D_lo, lanes_lo[9]), 23))
				L, H = XOR(D_lo, lanes_lo[14]), XOR(D_hi, lanes_hi[14])
				lanes_lo[14], lanes_hi[14] = XOR(SHL(L, 25), SHR(H, 7)), XOR(SHL(H, 25), SHR(L, 7))
				D_lo = XOR(lanes_lo[29], SHL(lanes_lo[26], 1), SHR(lanes_hi[26], 31))
				D_hi = XOR(lanes_hi[29], SHL(lanes_hi[26], 1), SHR(lanes_lo[26], 31))
				lanes_lo[5], lanes_hi[5], lanes_lo[15], lanes_hi[15], lanes_lo[20], lanes_hi[20], lanes_lo[25], lanes_hi[25] = XOR(SHL(XOR(D_lo, lanes_lo[25]), 14), SHR(XOR(D_hi, lanes_hi[25]), 18)), XOR(SHL(XOR(D_hi, lanes_hi[25]), 14), SHR(XOR(D_lo, lanes_lo[25]), 18)), XOR(SHL(XOR(D_lo, lanes_lo[20]), 8), SHR(XOR(D_hi, lanes_hi[20]), 24)), XOR(SHL(XOR(D_hi, lanes_hi[20]), 8), SHR(XOR(D_lo, lanes_lo[20]), 24)), XOR(SHL(XOR(D_lo, lanes_lo[5]), 27), SHR(XOR(D_hi, lanes_hi[5]), 5)), XOR(SHL(XOR(D_hi, lanes_hi[5]), 27), SHR(XOR(D_lo, lanes_lo[5]), 5)), XOR(SHR(XOR(D_lo, lanes_lo[15]), 25), SHL(XOR(D_hi, lanes_hi[15]), 7)), XOR(SHR(XOR(D_hi, lanes_hi[15]), 25), SHL(XOR(D_lo, lanes_lo[15]), 7))
				L, H = XOR(D_lo, lanes_lo[10]), XOR(D_hi, lanes_hi[10])
				lanes_lo[10], lanes_hi[10] = XOR(SHL(L, 20), SHR(H, 12)), XOR(SHL(H, 20), SHR(L, 12))
				D_lo = XOR(lanes_lo[30], SHL(lanes_lo[27], 1), SHR(lanes_hi[27], 31))
				D_hi = XOR(lanes_hi[30], SHL(lanes_hi[27], 1), SHR(lanes_lo[27], 31))
				lanes_lo[6], lanes_hi[6], lanes_lo[11], lanes_hi[11], lanes_lo[16], lanes_hi[16], lanes_lo[21], lanes_hi[21] = XOR(SHL(XOR(D_lo, lanes_lo[11]), 3), SHR(XOR(D_hi, lanes_hi[11]), 29)), XOR(SHL(XOR(D_hi, lanes_hi[11]), 3), SHR(XOR(D_lo, lanes_lo[11]), 29)), XOR(SHL(XOR(D_lo, lanes_lo[21]), 18), SHR(XOR(D_hi, lanes_hi[21]), 14)), XOR(SHL(XOR(D_hi, lanes_hi[21]), 18), SHR(XOR(D_lo, lanes_lo[21]), 14)), XOR(SHR(XOR(D_lo, lanes_lo[6]), 28), SHL(XOR(D_hi, lanes_hi[6]), 4)), XOR(SHR(XOR(D_hi, lanes_hi[6]), 28), SHL(XOR(D_lo, lanes_lo[6]), 4)), XOR(SHR(XOR(D_lo, lanes_lo[16]), 23), SHL(XOR(D_hi, lanes_hi[16]), 9)), XOR(SHR(XOR(D_hi, lanes_hi[16]), 23), SHL(XOR(D_lo, lanes_lo[16]), 9))
				lanes_lo[1], lanes_hi[1] = XOR(D_lo, lanes_lo[1]), XOR(D_hi, lanes_hi[1])
				lanes_lo[1], lanes_lo[2], lanes_lo[3], lanes_lo[4], lanes_lo[5] = XOR(lanes_lo[1], AND(NOT(lanes_lo[2]), lanes_lo[3]), RC_lo[round_idx]), XOR(lanes_lo[2], AND(NOT(lanes_lo[3]), lanes_lo[4])), XOR(lanes_lo[3], AND(NOT(lanes_lo[4]), lanes_lo[5])), XOR(lanes_lo[4], AND(NOT(lanes_lo[5]), lanes_lo[1])), XOR(lanes_lo[5], AND(NOT(lanes_lo[1]), lanes_lo[2]))
				lanes_lo[6], lanes_lo[7], lanes_lo[8], lanes_lo[9], lanes_lo[10] = XOR(lanes_lo[9], AND(NOT(lanes_lo[10]), lanes_lo[6])), XOR(lanes_lo[10], AND(NOT(lanes_lo[6]), lanes_lo[7])), XOR(lanes_lo[6], AND(NOT(lanes_lo[7]), lanes_lo[8])), XOR(lanes_lo[7], AND(NOT(lanes_lo[8]), lanes_lo[9])), XOR(lanes_lo[8], AND(NOT(lanes_lo[9]), lanes_lo[10]))
				lanes_lo[11], lanes_lo[12], lanes_lo[13], lanes_lo[14], lanes_lo[15] = XOR(lanes_lo[12], AND(NOT(lanes_lo[13]), lanes_lo[14])), XOR(lanes_lo[13], AND(NOT(lanes_lo[14]), lanes_lo[15])), XOR(lanes_lo[14], AND(NOT(lanes_lo[15]), lanes_lo[11])), XOR(lanes_lo[15], AND(NOT(lanes_lo[11]), lanes_lo[12])), XOR(lanes_lo[11], AND(NOT(lanes_lo[12]), lanes_lo[13]))
				lanes_lo[16], lanes_lo[17], lanes_lo[18], lanes_lo[19], lanes_lo[20] = XOR(lanes_lo[20], AND(NOT(lanes_lo[16]), lanes_lo[17])), XOR(lanes_lo[16], AND(NOT(lanes_lo[17]), lanes_lo[18])), XOR(lanes_lo[17], AND(NOT(lanes_lo[18]), lanes_lo[19])), XOR(lanes_lo[18], AND(NOT(lanes_lo[19]), lanes_lo[20])), XOR(lanes_lo[19], AND(NOT(lanes_lo[20]), lanes_lo[16]))
				lanes_lo[21], lanes_lo[22], lanes_lo[23], lanes_lo[24], lanes_lo[25] = XOR(lanes_lo[23], AND(NOT(lanes_lo[24]), lanes_lo[25])), XOR(lanes_lo[24], AND(NOT(lanes_lo[25]), lanes_lo[21])), XOR(lanes_lo[25], AND(NOT(lanes_lo[21]), lanes_lo[22])), XOR(lanes_lo[21], AND(NOT(lanes_lo[22]), lanes_lo[23])), XOR(lanes_lo[22], AND(NOT(lanes_lo[23]), lanes_lo[24]))
				lanes_hi[1], lanes_hi[2], lanes_hi[3], lanes_hi[4], lanes_hi[5] = XOR(lanes_hi[1], AND(NOT(lanes_hi[2]), lanes_hi[3]), RC_hi[round_idx]), XOR(lanes_hi[2], AND(NOT(lanes_hi[3]), lanes_hi[4])), XOR(lanes_hi[3], AND(NOT(lanes_hi[4]), lanes_hi[5])), XOR(lanes_hi[4], AND(NOT(lanes_hi[5]), lanes_hi[1])), XOR(lanes_hi[5], AND(NOT(lanes_hi[1]), lanes_hi[2]))
				lanes_hi[6], lanes_hi[7], lanes_hi[8], lanes_hi[9], lanes_hi[10] = XOR(lanes_hi[9], AND(NOT(lanes_hi[10]), lanes_hi[6])), XOR(lanes_hi[10], AND(NOT(lanes_hi[6]), lanes_hi[7])), XOR(lanes_hi[6], AND(NOT(lanes_hi[7]), lanes_hi[8])), XOR(lanes_hi[7], AND(NOT(lanes_hi[8]), lanes_hi[9])), XOR(lanes_hi[8], AND(NOT(lanes_hi[9]), lanes_hi[10]))
				lanes_hi[11], lanes_hi[12], lanes_hi[13], lanes_hi[14], lanes_hi[15] = XOR(lanes_hi[12], AND(NOT(lanes_hi[13]), lanes_hi[14])), XOR(lanes_hi[13], AND(NOT(lanes_hi[14]), lanes_hi[15])), XOR(lanes_hi[14], AND(NOT(lanes_hi[15]), lanes_hi[11])), XOR(lanes_hi[15], AND(NOT(lanes_hi[11]), lanes_hi[12])), XOR(lanes_hi[11], AND(NOT(lanes_hi[12]), lanes_hi[13]))
				lanes_hi[16], lanes_hi[17], lanes_hi[18], lanes_hi[19], lanes_hi[20] = XOR(lanes_hi[20], AND(NOT(lanes_hi[16]), lanes_hi[17])), XOR(lanes_hi[16], AND(NOT(lanes_hi[17]), lanes_hi[18])), XOR(lanes_hi[17], AND(NOT(lanes_hi[18]), lanes_hi[19])), XOR(lanes_hi[18], AND(NOT(lanes_hi[19]), lanes_hi[20])), XOR(lanes_hi[19], AND(NOT(lanes_hi[20]), lanes_hi[16]))
				lanes_hi[21], lanes_hi[22], lanes_hi[23], lanes_hi[24], lanes_hi[25] = XOR(lanes_hi[23], AND(NOT(lanes_hi[24]), lanes_hi[25])), XOR(lanes_hi[24], AND(NOT(lanes_hi[25]), lanes_hi[21])), XOR(lanes_hi[25], AND(NOT(lanes_hi[21]), lanes_hi[22])), XOR(lanes_hi[21], AND(NOT(lanes_hi[22]), lanes_hi[23])), XOR(lanes_hi[22], AND(NOT(lanes_hi[23]), lanes_hi[24]))
			end
		end
	end

end


if branch == "LJ" then


	-- SHA256 implementation for "LuaJIT without FFI" branch

	function sha256_feed_64(H, str, offs, size)
		-- offs >= 0, size >= 0, size is multiple of 64
		local W, K = common_W, sha2_K_hi
		for pos = offs, offs + size - 1, 64 do
			for j = 1, 16 do
				pos = pos + 4
				local a, b, c, d = byte(str, pos - 3, pos)
				W[j] = OR(SHL(a, 24), SHL(b, 16), SHL(c, 8), d)
			end
			for j = 17, 64 do
				local a, b = W[j-15], W[j-2]
				W[j] = NORM( NORM( XOR(ROR(a, 7), ROL(a, 14), SHR(a, 3)) + XOR(ROL(b, 15), ROL(b, 13), SHR(b, 10)) ) + NORM( W[j-7] + W[j-16] ) )
			end
			local a, b, c, d, e, f, g, h = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
			for j = 1, 64, 8 do  -- Thanks to Peter Cawley for this workaround (unroll the loop to avoid "PHI shuffling too complex" due to PHIs overlap)
				local z = NORM( XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + XOR(g, AND(e, XOR(f, g))) + (K[j] + W[j] + h) )
				h, g, f, e = g, f, e, NORM(d + z)
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + XOR(g, AND(e, XOR(f, g))) + (K[j+1] + W[j+1] + h) )
				h, g, f, e = g, f, e, NORM(d + z)
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + XOR(g, AND(e, XOR(f, g))) + (K[j+2] + W[j+2] + h) )
				h, g, f, e = g, f, e, NORM(d + z)
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + XOR(g, AND(e, XOR(f, g))) + (K[j+3] + W[j+3] + h) )
				h, g, f, e = g, f, e, NORM(d + z)
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + XOR(g, AND(e, XOR(f, g))) + (K[j+4] + W[j+4] + h) )
				h, g, f, e = g, f, e, NORM(d + z)
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + XOR(g, AND(e, XOR(f, g))) + (K[j+5] + W[j+5] + h) )
				h, g, f, e = g, f, e, NORM(d + z)
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + XOR(g, AND(e, XOR(f, g))) + (K[j+6] + W[j+6] + h) )
				h, g, f, e = g, f, e, NORM(d + z)
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + XOR(g, AND(e, XOR(f, g))) + (K[j+7] + W[j+7] + h) )
				h, g, f, e = g, f, e, NORM(d + z)
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
			end
			H[1], H[2], H[3], H[4] = NORM(a + H[1]), NORM(b + H[2]), NORM(c + H[3]), NORM(d + H[4])
			H[5], H[6], H[7], H[8] = NORM(e + H[5]), NORM(f + H[6]), NORM(g + H[7]), NORM(h + H[8])
		end
	end

	local function ADD64_4(a_lo, a_hi, b_lo, b_hi, c_lo, c_hi, d_lo, d_hi)
		local sum_lo = a_lo % 2^32 + b_lo % 2^32 + c_lo % 2^32 + d_lo % 2^32
		local sum_hi = a_hi + b_hi + c_hi + d_hi
		local result_lo = NORM( sum_lo )
		local result_hi = NORM( sum_hi + floor(sum_lo / 2^32) )
		return result_lo, result_hi
	end

	if LuaJIT_arch == "x86" then  -- Special trick is required to avoid "PHI shuffling too complex" on x86 platform


		-- SHA512 implementation for "LuaJIT x86 without FFI" branch

		function sha512_feed_128(H_lo, H_hi, str, offs, size)
			-- offs >= 0, size >= 0, size is multiple of 128
			-- W1_hi, W1_lo, W2_hi, W2_lo, ...   Wk_hi = W[2*k-1], Wk_lo = W[2*k]
			local W, K_lo, K_hi = common_W, sha2_K_lo, sha2_K_hi
			for pos = offs, offs + size - 1, 128 do
				for j = 1, 16*2 do
					pos = pos + 4
					local a, b, c, d = byte(str, pos - 3, pos)
					W[j] = OR(SHL(a, 24), SHL(b, 16), SHL(c, 8), d)
				end
				for jj = 17*2, 80*2, 2 do
					local a_lo, a_hi = W[jj-30], W[jj-31]
					local t_lo = XOR(OR(SHR(a_lo, 1), SHL(a_hi, 31)), OR(SHR(a_lo, 8), SHL(a_hi, 24)), OR(SHR(a_lo, 7), SHL(a_hi, 25)))
					local t_hi = XOR(OR(SHR(a_hi, 1), SHL(a_lo, 31)), OR(SHR(a_hi, 8), SHL(a_lo, 24)), SHR(a_hi, 7))
					local b_lo, b_hi = W[jj-4], W[jj-5]
					local u_lo = XOR(OR(SHR(b_lo, 19), SHL(b_hi, 13)), OR(SHL(b_lo, 3), SHR(b_hi, 29)), OR(SHR(b_lo, 6), SHL(b_hi, 26)))
					local u_hi = XOR(OR(SHR(b_hi, 19), SHL(b_lo, 13)), OR(SHL(b_hi, 3), SHR(b_lo, 29)), SHR(b_hi, 6))
					W[jj], W[jj-1] = ADD64_4(t_lo, t_hi, u_lo, u_hi, W[jj-14], W[jj-15], W[jj-32], W[jj-33])
				end
				local a_lo, b_lo, c_lo, d_lo, e_lo, f_lo, g_lo, h_lo = H_lo[1], H_lo[2], H_lo[3], H_lo[4], H_lo[5], H_lo[6], H_lo[7], H_lo[8]
				local a_hi, b_hi, c_hi, d_hi, e_hi, f_hi, g_hi, h_hi = H_hi[1], H_hi[2], H_hi[3], H_hi[4], H_hi[5], H_hi[6], H_hi[7], H_hi[8]
				local zero = 0
				for j = 1, 80 do
					local t_lo = XOR(g_lo, AND(e_lo, XOR(f_lo, g_lo)))
					local t_hi = XOR(g_hi, AND(e_hi, XOR(f_hi, g_hi)))
					local u_lo = XOR(OR(SHR(e_lo, 14), SHL(e_hi, 18)), OR(SHR(e_lo, 18), SHL(e_hi, 14)), OR(SHL(e_lo, 23), SHR(e_hi, 9)))
					local u_hi = XOR(OR(SHR(e_hi, 14), SHL(e_lo, 18)), OR(SHR(e_hi, 18), SHL(e_lo, 14)), OR(SHL(e_hi, 23), SHR(e_lo, 9)))
					local sum_lo = u_lo % 2^32 + t_lo % 2^32 + h_lo % 2^32 + K_lo[j] + W[2*j] % 2^32
					local z_lo, z_hi = NORM( sum_lo ), NORM( u_hi + t_hi + h_hi + K_hi[j] + W[2*j-1] + floor(sum_lo / 2^32) )
					zero = zero + zero  -- this thick is needed to avoid "PHI shuffling too complex" due to PHIs overlap
					h_lo, h_hi, g_lo, g_hi, f_lo, f_hi = OR(zero, g_lo), OR(zero, g_hi), OR(zero, f_lo), OR(zero, f_hi), OR(zero, e_lo), OR(zero, e_hi)
					local sum_lo = z_lo % 2^32 + d_lo % 2^32
					e_lo, e_hi = NORM( sum_lo ), NORM( z_hi + d_hi + floor(sum_lo / 2^32) )
					d_lo, d_hi, c_lo, c_hi, b_lo, b_hi = OR(zero, c_lo), OR(zero, c_hi), OR(zero, b_lo), OR(zero, b_hi), OR(zero, a_lo), OR(zero, a_hi)
					u_lo = XOR(OR(SHR(b_lo, 28), SHL(b_hi, 4)), OR(SHL(b_lo, 30), SHR(b_hi, 2)), OR(SHL(b_lo, 25), SHR(b_hi, 7)))
					u_hi = XOR(OR(SHR(b_hi, 28), SHL(b_lo, 4)), OR(SHL(b_hi, 30), SHR(b_lo, 2)), OR(SHL(b_hi, 25), SHR(b_lo, 7)))
					t_lo = OR(AND(d_lo, c_lo), AND(b_lo, XOR(d_lo, c_lo)))
					t_hi = OR(AND(d_hi, c_hi), AND(b_hi, XOR(d_hi, c_hi)))
					local sum_lo = z_lo % 2^32 + t_lo % 2^32 + u_lo % 2^32
					a_lo, a_hi = NORM( sum_lo ), NORM( z_hi + t_hi + u_hi + floor(sum_lo / 2^32) )
				end
				H_lo[1], H_hi[1] = ADD64_4(H_lo[1], H_hi[1], a_lo, a_hi, 0, 0, 0, 0)
				H_lo[2], H_hi[2] = ADD64_4(H_lo[2], H_hi[2], b_lo, b_hi, 0, 0, 0, 0)
				H_lo[3], H_hi[3] = ADD64_4(H_lo[3], H_hi[3], c_lo, c_hi, 0, 0, 0, 0)
				H_lo[4], H_hi[4] = ADD64_4(H_lo[4], H_hi[4], d_lo, d_hi, 0, 0, 0, 0)
				H_lo[5], H_hi[5] = ADD64_4(H_lo[5], H_hi[5], e_lo, e_hi, 0, 0, 0, 0)
				H_lo[6], H_hi[6] = ADD64_4(H_lo[6], H_hi[6], f_lo, f_hi, 0, 0, 0, 0)
				H_lo[7], H_hi[7] = ADD64_4(H_lo[7], H_hi[7], g_lo, g_hi, 0, 0, 0, 0)
				H_lo[8], H_hi[8] = ADD64_4(H_lo[8], H_hi[8], h_lo, h_hi, 0, 0, 0, 0)
			end
		end

	else  -- all platforms except x86


		-- SHA512 implementation for "LuaJIT non-x86 without FFI" branch

		function sha512_feed_128(H_lo, H_hi, str, offs, size)
			-- offs >= 0, size >= 0, size is multiple of 128
			-- W1_hi, W1_lo, W2_hi, W2_lo, ...   Wk_hi = W[2*k-1], Wk_lo = W[2*k]
			local W, K_lo, K_hi = common_W, sha2_K_lo, sha2_K_hi
			for pos = offs, offs + size - 1, 128 do
				for j = 1, 16*2 do
					pos = pos + 4
					local a, b, c, d = byte(str, pos - 3, pos)
					W[j] = OR(SHL(a, 24), SHL(b, 16), SHL(c, 8), d)
				end
				for jj = 17*2, 80*2, 2 do
					local a_lo, a_hi = W[jj-30], W[jj-31]
					local t_lo = XOR(OR(SHR(a_lo, 1), SHL(a_hi, 31)), OR(SHR(a_lo, 8), SHL(a_hi, 24)), OR(SHR(a_lo, 7), SHL(a_hi, 25)))
					local t_hi = XOR(OR(SHR(a_hi, 1), SHL(a_lo, 31)), OR(SHR(a_hi, 8), SHL(a_lo, 24)), SHR(a_hi, 7))
					local b_lo, b_hi = W[jj-4], W[jj-5]
					local u_lo = XOR(OR(SHR(b_lo, 19), SHL(b_hi, 13)), OR(SHL(b_lo, 3), SHR(b_hi, 29)), OR(SHR(b_lo, 6), SHL(b_hi, 26)))
					local u_hi = XOR(OR(SHR(b_hi, 19), SHL(b_lo, 13)), OR(SHL(b_hi, 3), SHR(b_lo, 29)), SHR(b_hi, 6))
					W[jj], W[jj-1] = ADD64_4(t_lo, t_hi, u_lo, u_hi, W[jj-14], W[jj-15], W[jj-32], W[jj-33])
				end
				local a_lo, b_lo, c_lo, d_lo, e_lo, f_lo, g_lo, h_lo = H_lo[1], H_lo[2], H_lo[3], H_lo[4], H_lo[5], H_lo[6], H_lo[7], H_lo[8]
				local a_hi, b_hi, c_hi, d_hi, e_hi, f_hi, g_hi, h_hi = H_hi[1], H_hi[2], H_hi[3], H_hi[4], H_hi[5], H_hi[6], H_hi[7], H_hi[8]
				for j = 1, 80 do
					local t_lo = XOR(g_lo, AND(e_lo, XOR(f_lo, g_lo)))
					local t_hi = XOR(g_hi, AND(e_hi, XOR(f_hi, g_hi)))
					local u_lo = XOR(OR(SHR(e_lo, 14), SHL(e_hi, 18)), OR(SHR(e_lo, 18), SHL(e_hi, 14)), OR(SHL(e_lo, 23), SHR(e_hi, 9)))
					local u_hi = XOR(OR(SHR(e_hi, 14), SHL(e_lo, 18)), OR(SHR(e_hi, 18), SHL(e_lo, 14)), OR(SHL(e_hi, 23), SHR(e_lo, 9)))
					local sum_lo = u_lo % 2^32 + t_lo % 2^32 + h_lo % 2^32 + K_lo[j] + W[2*j] % 2^32
					local z_lo, z_hi = NORM( sum_lo ), NORM( u_hi + t_hi + h_hi + K_hi[j] + W[2*j-1] + floor(sum_lo / 2^32) )
					h_lo, h_hi, g_lo, g_hi, f_lo, f_hi = g_lo, g_hi, f_lo, f_hi, e_lo, e_hi
					local sum_lo = z_lo % 2^32 + d_lo % 2^32
					e_lo, e_hi = NORM( sum_lo ), NORM( z_hi + d_hi + floor(sum_lo / 2^32) )
					d_lo, d_hi, c_lo, c_hi, b_lo, b_hi = c_lo, c_hi, b_lo, b_hi, a_lo, a_hi
					u_lo = XOR(OR(SHR(b_lo, 28), SHL(b_hi, 4)), OR(SHL(b_lo, 30), SHR(b_hi, 2)), OR(SHL(b_lo, 25), SHR(b_hi, 7)))
					u_hi = XOR(OR(SHR(b_hi, 28), SHL(b_lo, 4)), OR(SHL(b_hi, 30), SHR(b_lo, 2)), OR(SHL(b_hi, 25), SHR(b_lo, 7)))
					t_lo = OR(AND(d_lo, c_lo), AND(b_lo, XOR(d_lo, c_lo)))
					t_hi = OR(AND(d_hi, c_hi), AND(b_hi, XOR(d_hi, c_hi)))
					local sum_lo = z_lo % 2^32 + u_lo % 2^32 + t_lo % 2^32
					a_lo, a_hi = NORM( sum_lo ), NORM( z_hi + u_hi + t_hi + floor(sum_lo / 2^32) )
				end
				H_lo[1], H_hi[1] = ADD64_4(H_lo[1], H_hi[1], a_lo, a_hi, 0, 0, 0, 0)
				H_lo[2], H_hi[2] = ADD64_4(H_lo[2], H_hi[2], b_lo, b_hi, 0, 0, 0, 0)
				H_lo[3], H_hi[3] = ADD64_4(H_lo[3], H_hi[3], c_lo, c_hi, 0, 0, 0, 0)
				H_lo[4], H_hi[4] = ADD64_4(H_lo[4], H_hi[4], d_lo, d_hi, 0, 0, 0, 0)
				H_lo[5], H_hi[5] = ADD64_4(H_lo[5], H_hi[5], e_lo, e_hi, 0, 0, 0, 0)
				H_lo[6], H_hi[6] = ADD64_4(H_lo[6], H_hi[6], f_lo, f_hi, 0, 0, 0, 0)
				H_lo[7], H_hi[7] = ADD64_4(H_lo[7], H_hi[7], g_lo, g_hi, 0, 0, 0, 0)
				H_lo[8], H_hi[8] = ADD64_4(H_lo[8], H_hi[8], h_lo, h_hi, 0, 0, 0, 0)
			end
		end

	end


	-- MD5 implementation for "LuaJIT without FFI" branch

	function md5_feed_64(H, str, offs, size)
		-- offs >= 0, size >= 0, size is multiple of 64
		local W, K = common_W, md5_K
		for pos = offs, offs + size - 1, 64 do
			for j = 1, 16 do
				pos = pos + 4
				local a, b, c, d = byte(str, pos - 3, pos)
				W[j] = OR(SHL(d, 24), SHL(c, 16), SHL(b, 8), a)
			end
			local a, b, c, d = H[1], H[2], H[3], H[4]
			for j = 1, 16, 4 do
				a, d, c, b = d, c, b, NORM(ROL(XOR(d, AND(b, XOR(c, d))) + (K[j  ] + W[j  ] + a),  7) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(d, AND(b, XOR(c, d))) + (K[j+1] + W[j+1] + a), 12) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(d, AND(b, XOR(c, d))) + (K[j+2] + W[j+2] + a), 17) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(d, AND(b, XOR(c, d))) + (K[j+3] + W[j+3] + a), 22) + b)
			end
			for j = 17, 32, 4 do
				local g = 5*j-4
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, AND(d, XOR(b, c))) + (K[j  ] + W[AND(g     , 15) + 1] + a),  5) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, AND(d, XOR(b, c))) + (K[j+1] + W[AND(g +  5, 15) + 1] + a),  9) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, AND(d, XOR(b, c))) + (K[j+2] + W[AND(g + 10, 15) + 1] + a), 14) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, AND(d, XOR(b, c))) + (K[j+3] + W[AND(g -  1, 15) + 1] + a), 20) + b)
			end
			for j = 33, 48, 4 do
				local g = 3*j+2
				a, d, c, b = d, c, b, NORM(ROL(XOR(b, c, d) + (K[j  ] + W[AND(g    , 15) + 1] + a),  4) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(b, c, d) + (K[j+1] + W[AND(g + 3, 15) + 1] + a), 11) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(b, c, d) + (K[j+2] + W[AND(g + 6, 15) + 1] + a), 16) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(b, c, d) + (K[j+3] + W[AND(g - 7, 15) + 1] + a), 23) + b)
			end
			for j = 49, 64, 4 do
				local g = j*7
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, OR(b, NOT(d))) + (K[j  ] + W[AND(g - 7, 15) + 1] + a),  6) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, OR(b, NOT(d))) + (K[j+1] + W[AND(g    , 15) + 1] + a), 10) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, OR(b, NOT(d))) + (K[j+2] + W[AND(g + 7, 15) + 1] + a), 15) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, OR(b, NOT(d))) + (K[j+3] + W[AND(g - 2, 15) + 1] + a), 21) + b)
			end
			H[1], H[2], H[3], H[4] = NORM(a + H[1]), NORM(b + H[2]), NORM(c + H[3]), NORM(d + H[4])
		end
	end


	-- SHA-1 implementation for "LuaJIT without FFI" branch

	function sha1_feed_64(H, str, offs, size)
		-- offs >= 0, size >= 0, size is multiple of 64
		local W = common_W
		for pos = offs, offs + size - 1, 64 do
			for j = 1, 16 do
				pos = pos + 4
				local a, b, c, d = byte(str, pos - 3, pos)
				W[j] = OR(SHL(a, 24), SHL(b, 16), SHL(c, 8), d)
			end
			for j = 17, 80 do
				W[j] = ROL(XOR(W[j-3], W[j-8], W[j-14], W[j-16]), 1)
			end
			local a, b, c, d, e = H[1], H[2], H[3], H[4], H[5]
			for j = 1, 20, 5 do
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(d, AND(b, XOR(d, c))) + (W[j]   + 0x5A827999 + e))          -- constant = floor(2^30 * sqrt(2))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(d, AND(b, XOR(d, c))) + (W[j+1] + 0x5A827999 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(d, AND(b, XOR(d, c))) + (W[j+2] + 0x5A827999 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(d, AND(b, XOR(d, c))) + (W[j+3] + 0x5A827999 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(d, AND(b, XOR(d, c))) + (W[j+4] + 0x5A827999 + e))
			end
			for j = 21, 40, 5 do
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j]   + 0x6ED9EBA1 + e))                       -- 2^30 * sqrt(3)
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+1] + 0x6ED9EBA1 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+2] + 0x6ED9EBA1 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+3] + 0x6ED9EBA1 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+4] + 0x6ED9EBA1 + e))
			end
			for j = 41, 60, 5 do
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(AND(d, XOR(b, c)), AND(b, c)) + (W[j]   + 0x8F1BBCDC + e))  -- 2^30 * sqrt(5)
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(AND(d, XOR(b, c)), AND(b, c)) + (W[j+1] + 0x8F1BBCDC + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(AND(d, XOR(b, c)), AND(b, c)) + (W[j+2] + 0x8F1BBCDC + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(AND(d, XOR(b, c)), AND(b, c)) + (W[j+3] + 0x8F1BBCDC + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(AND(d, XOR(b, c)), AND(b, c)) + (W[j+4] + 0x8F1BBCDC + e))
			end
			for j = 61, 80, 5 do
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j]   + 0xCA62C1D6 + e))                       -- 2^30 * sqrt(10)
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+1] + 0xCA62C1D6 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+2] + 0xCA62C1D6 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+3] + 0xCA62C1D6 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+4] + 0xCA62C1D6 + e))
			end
			H[1], H[2], H[3], H[4], H[5] = NORM(a + H[1]), NORM(b + H[2]), NORM(c + H[3]), NORM(d + H[4]), NORM(e + H[5])
		end
	end


	-- BLAKE2b implementation for "LuaJIT without FFI" branch

	do
		local v_lo, v_hi = {}, {}

		local function G(a, b, c, d, k1, k2)
			local W = common_W
			local va_lo, vb_lo, vc_lo, vd_lo = v_lo[a], v_lo[b], v_lo[c], v_lo[d]
			local va_hi, vb_hi, vc_hi, vd_hi = v_hi[a], v_hi[b], v_hi[c], v_hi[d]
			local z = W[2*k1-1] + (va_lo % 2^32 + vb_lo % 2^32)
			va_lo = NORM(z)
			va_hi = NORM(W[2*k1] + (va_hi + vb_hi + floor(z / 2^32)))
			vd_lo, vd_hi = XOR(vd_hi, va_hi), XOR(vd_lo, va_lo)
			z = vc_lo % 2^32 + vd_lo % 2^32
			vc_lo = NORM(z)
			vc_hi = NORM(vc_hi + vd_hi + floor(z / 2^32))
			vb_lo, vb_hi = XOR(vb_lo, vc_lo), XOR(vb_hi, vc_hi)
			vb_lo, vb_hi = XOR(SHR(vb_lo, 24), SHL(vb_hi, 8)), XOR(SHR(vb_hi, 24), SHL(vb_lo, 8))
			z = W[2*k2-1] + (va_lo % 2^32 + vb_lo % 2^32)
			va_lo = NORM(z)
			va_hi = NORM(W[2*k2] + (va_hi + vb_hi + floor(z / 2^32)))
			vd_lo, vd_hi = XOR(vd_lo, va_lo), XOR(vd_hi, va_hi)
			vd_lo, vd_hi = XOR(SHR(vd_lo, 16), SHL(vd_hi, 16)), XOR(SHR(vd_hi, 16), SHL(vd_lo, 16))
			z = vc_lo % 2^32 + vd_lo % 2^32
			vc_lo = NORM(z)
			vc_hi = NORM(vc_hi + vd_hi + floor(z / 2^32))
			vb_lo, vb_hi = XOR(vb_lo, vc_lo), XOR(vb_hi, vc_hi)
			vb_lo, vb_hi = XOR(SHL(vb_lo, 1), SHR(vb_hi, 31)), XOR(SHL(vb_hi, 1), SHR(vb_lo, 31))
			v_lo[a], v_lo[b], v_lo[c], v_lo[d] = va_lo, vb_lo, vc_lo, vd_lo
			v_hi[a], v_hi[b], v_hi[c], v_hi[d] = va_hi, vb_hi, vc_hi, vd_hi
		end

		function blake2b_feed_128(H_lo, H_hi, str, offs, size, bytes_compressed, last_block_size, is_last_node)
			-- offs >= 0, size >= 0, size is multiple of 128
			local W = common_W
			local h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo = H_lo[1], H_lo[2], H_lo[3], H_lo[4], H_lo[5], H_lo[6], H_lo[7], H_lo[8]
			local h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi = H_hi[1], H_hi[2], H_hi[3], H_hi[4], H_hi[5], H_hi[6], H_hi[7], H_hi[8]
			for pos = offs, offs + size - 1, 128 do
				if str then
					for j = 1, 32 do
						pos = pos + 4
						local a, b, c, d = byte(str, pos - 3, pos)
						W[j] = d * 2^24 + OR(SHL(c, 16), SHL(b, 8), a)
					end
				end
				v_lo[0x0], v_lo[0x1], v_lo[0x2], v_lo[0x3], v_lo[0x4], v_lo[0x5], v_lo[0x6], v_lo[0x7] = h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo
				v_lo[0x8], v_lo[0x9], v_lo[0xA], v_lo[0xB], v_lo[0xC], v_lo[0xD], v_lo[0xE], v_lo[0xF] = sha2_H_lo[1], sha2_H_lo[2], sha2_H_lo[3], sha2_H_lo[4], sha2_H_lo[5], sha2_H_lo[6], sha2_H_lo[7], sha2_H_lo[8]
				v_hi[0x0], v_hi[0x1], v_hi[0x2], v_hi[0x3], v_hi[0x4], v_hi[0x5], v_hi[0x6], v_hi[0x7] = h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi
				v_hi[0x8], v_hi[0x9], v_hi[0xA], v_hi[0xB], v_hi[0xC], v_hi[0xD], v_hi[0xE], v_hi[0xF] = sha2_H_hi[1], sha2_H_hi[2], sha2_H_hi[3], sha2_H_hi[4], sha2_H_hi[5], sha2_H_hi[6], sha2_H_hi[7], sha2_H_hi[8]
				bytes_compressed = bytes_compressed + (last_block_size or 128)
				local t0_lo = bytes_compressed % 2^32
				local t0_hi = floor(bytes_compressed / 2^32)
				v_lo[0xC] = XOR(v_lo[0xC], t0_lo)  -- t0 = low_8_bytes(bytes_compressed)
				v_hi[0xC] = XOR(v_hi[0xC], t0_hi)
				-- t1 = high_8_bytes(bytes_compressed) = 0,  message length is always below 2^53 bytes
				if last_block_size then  -- flag f0
					v_lo[0xE] = NOT(v_lo[0xE])
					v_hi[0xE] = NOT(v_hi[0xE])
				end
				if is_last_node then  -- flag f1
					v_lo[0xF] = NOT(v_lo[0xF])
					v_hi[0xF] = NOT(v_hi[0xF])
				end
				for j = 1, 12 do
					local row = sigma[j]
					G(0, 4,  8, 12, row[ 1], row[ 2])
					G(1, 5,  9, 13, row[ 3], row[ 4])
					G(2, 6, 10, 14, row[ 5], row[ 6])
					G(3, 7, 11, 15, row[ 7], row[ 8])
					G(0, 5, 10, 15, row[ 9], row[10])
					G(1, 6, 11, 12, row[11], row[12])
					G(2, 7,  8, 13, row[13], row[14])
					G(3, 4,  9, 14, row[15], row[16])
				end
				h1_lo = XOR(h1_lo, v_lo[0x0], v_lo[0x8])
				h2_lo = XOR(h2_lo, v_lo[0x1], v_lo[0x9])
				h3_lo = XOR(h3_lo, v_lo[0x2], v_lo[0xA])
				h4_lo = XOR(h4_lo, v_lo[0x3], v_lo[0xB])
				h5_lo = XOR(h5_lo, v_lo[0x4], v_lo[0xC])
				h6_lo = XOR(h6_lo, v_lo[0x5], v_lo[0xD])
				h7_lo = XOR(h7_lo, v_lo[0x6], v_lo[0xE])
				h8_lo = XOR(h8_lo, v_lo[0x7], v_lo[0xF])
				h1_hi = XOR(h1_hi, v_hi[0x0], v_hi[0x8])
				h2_hi = XOR(h2_hi, v_hi[0x1], v_hi[0x9])
				h3_hi = XOR(h3_hi, v_hi[0x2], v_hi[0xA])
				h4_hi = XOR(h4_hi, v_hi[0x3], v_hi[0xB])
				h5_hi = XOR(h5_hi, v_hi[0x4], v_hi[0xC])
				h6_hi = XOR(h6_hi, v_hi[0x5], v_hi[0xD])
				h7_hi = XOR(h7_hi, v_hi[0x6], v_hi[0xE])
				h8_hi = XOR(h8_hi, v_hi[0x7], v_hi[0xF])
			end
			H_lo[1], H_lo[2], H_lo[3], H_lo[4], H_lo[5], H_lo[6], H_lo[7], H_lo[8] = h1_lo % 2^32, h2_lo % 2^32, h3_lo % 2^32, h4_lo % 2^32, h5_lo % 2^32, h6_lo % 2^32, h7_lo % 2^32, h8_lo % 2^32
			H_hi[1], H_hi[2], H_hi[3], H_hi[4], H_hi[5], H_hi[6], H_hi[7], H_hi[8] = h1_hi % 2^32, h2_hi % 2^32, h3_hi % 2^32, h4_hi % 2^32, h5_hi % 2^32, h6_hi % 2^32, h7_hi % 2^32, h8_hi % 2^32
			return bytes_compressed
		end

	end
end


if branch == "FFI" or branch == "LJ" then


	-- BLAKE2s and BLAKE3 implementations for "LuaJIT with FFI" and "LuaJIT without FFI" branches

	do
		local W = common_W_blake2s
		local v = v_for_blake2s_feed_64

		local function G(a, b, c, d, k1, k2)
			local va, vb, vc, vd = v[a], v[b], v[c], v[d]
			va = NORM(W[k1] + (va + vb))
			vd = ROR(XOR(vd, va), 16)
			vc = NORM(vc + vd)
			vb = ROR(XOR(vb, vc), 12)
			va = NORM(W[k2] + (va + vb))
			vd = ROR(XOR(vd, va), 8)
			vc = NORM(vc + vd)
			vb = ROR(XOR(vb, vc), 7)
			v[a], v[b], v[c], v[d] = va, vb, vc, vd
		end

		function blake2s_feed_64(H, str, offs, size, bytes_compressed, last_block_size, is_last_node)
			-- offs >= 0, size >= 0, size is multiple of 64
			local h1, h2, h3, h4, h5, h6, h7, h8 = NORM(H[1]), NORM(H[2]), NORM(H[3]), NORM(H[4]), NORM(H[5]), NORM(H[6]), NORM(H[7]), NORM(H[8])
			for pos = offs, offs + size - 1, 64 do
				if str then
					for j = 1, 16 do
						pos = pos + 4
						local a, b, c, d = byte(str, pos - 3, pos)
						W[j] = OR(SHL(d, 24), SHL(c, 16), SHL(b, 8), a)
					end
				end
				v[0x0], v[0x1], v[0x2], v[0x3], v[0x4], v[0x5], v[0x6], v[0x7] = h1, h2, h3, h4, h5, h6, h7, h8
				v[0x8], v[0x9], v[0xA], v[0xB], v[0xE], v[0xF] = NORM(sha2_H_hi[1]), NORM(sha2_H_hi[2]), NORM(sha2_H_hi[3]), NORM(sha2_H_hi[4]), NORM(sha2_H_hi[7]), NORM(sha2_H_hi[8])
				bytes_compressed = bytes_compressed + (last_block_size or 64)
				local t0 = bytes_compressed % 2^32
				local t1 = floor(bytes_compressed / 2^32)
				v[0xC] = XOR(sha2_H_hi[5], t0)  -- t0 = low_4_bytes(bytes_compressed)
				v[0xD] = XOR(sha2_H_hi[6], t1)  -- t1 = high_4_bytes(bytes_compressed
				if last_block_size then  -- flag f0
					v[0xE] = NOT(v[0xE])
				end
				if is_last_node then  -- flag f1
					v[0xF] = NOT(v[0xF])
				end
				for j = 1, 10 do
					local row = sigma[j]
					G(0, 4,  8, 12, row[ 1], row[ 2])
					G(1, 5,  9, 13, row[ 3], row[ 4])
					G(2, 6, 10, 14, row[ 5], row[ 6])
					G(3, 7, 11, 15, row[ 7], row[ 8])
					G(0, 5, 10, 15, row[ 9], row[10])
					G(1, 6, 11, 12, row[11], row[12])
					G(2, 7,  8, 13, row[13], row[14])
					G(3, 4,  9, 14, row[15], row[16])
				end
				h1 = XOR(h1, v[0x0], v[0x8])
				h2 = XOR(h2, v[0x1], v[0x9])
				h3 = XOR(h3, v[0x2], v[0xA])
				h4 = XOR(h4, v[0x3], v[0xB])
				h5 = XOR(h5, v[0x4], v[0xC])
				h6 = XOR(h6, v[0x5], v[0xD])
				h7 = XOR(h7, v[0x6], v[0xE])
				h8 = XOR(h8, v[0x7], v[0xF])
			end
			H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8] = h1, h2, h3, h4, h5, h6, h7, h8
			return bytes_compressed
		end

		function blake3_feed_64(str, offs, size, flags, chunk_index, H_in, H_out, wide_output, block_length)
			-- offs >= 0, size >= 0, size is multiple of 64
			block_length = block_length or 64
			local h1, h2, h3, h4, h5, h6, h7, h8 = NORM(H_in[1]), NORM(H_in[2]), NORM(H_in[3]), NORM(H_in[4]), NORM(H_in[5]), NORM(H_in[6]), NORM(H_in[7]), NORM(H_in[8])
			H_out = H_out or H_in
			for pos = offs, offs + size - 1, 64 do
				if str then
					for j = 1, 16 do
						pos = pos + 4
						local a, b, c, d = byte(str, pos - 3, pos)
						W[j] = OR(SHL(d, 24), SHL(c, 16), SHL(b, 8), a)
					end
				end
				v[0x0], v[0x1], v[0x2], v[0x3], v[0x4], v[0x5], v[0x6], v[0x7] = h1, h2, h3, h4, h5, h6, h7, h8
				v[0x8], v[0x9], v[0xA], v[0xB] = NORM(sha2_H_hi[1]), NORM(sha2_H_hi[2]), NORM(sha2_H_hi[3]), NORM(sha2_H_hi[4])
				v[0xC] = NORM(chunk_index % 2^32)   -- t0 = low_4_bytes(chunk_index)
				v[0xD] = floor(chunk_index / 2^32)  -- t1 = high_4_bytes(chunk_index)
				v[0xE], v[0xF] = block_length, flags
				for j = 1, 7 do
					G(0, 4,  8, 12, perm_blake3[j],      perm_blake3[j + 14])
					G(1, 5,  9, 13, perm_blake3[j + 1],  perm_blake3[j + 2])
					G(2, 6, 10, 14, perm_blake3[j + 16], perm_blake3[j + 7])
					G(3, 7, 11, 15, perm_blake3[j + 15], perm_blake3[j + 17])
					G(0, 5, 10, 15, perm_blake3[j + 21], perm_blake3[j + 5])
					G(1, 6, 11, 12, perm_blake3[j + 3],  perm_blake3[j + 6])
					G(2, 7,  8, 13, perm_blake3[j + 4],  perm_blake3[j + 18])
					G(3, 4,  9, 14, perm_blake3[j + 19], perm_blake3[j + 20])
				end
				if wide_output then
					H_out[ 9] = XOR(h1, v[0x8])
					H_out[10] = XOR(h2, v[0x9])
					H_out[11] = XOR(h3, v[0xA])
					H_out[12] = XOR(h4, v[0xB])
					H_out[13] = XOR(h5, v[0xC])
					H_out[14] = XOR(h6, v[0xD])
					H_out[15] = XOR(h7, v[0xE])
					H_out[16] = XOR(h8, v[0xF])
				end
				h1 = XOR(v[0x0], v[0x8])
				h2 = XOR(v[0x1], v[0x9])
				h3 = XOR(v[0x2], v[0xA])
				h4 = XOR(v[0x3], v[0xB])
				h5 = XOR(v[0x4], v[0xC])
				h6 = XOR(v[0x5], v[0xD])
				h7 = XOR(v[0x6], v[0xE])
				h8 = XOR(v[0x7], v[0xF])
			end
			H_out[1], H_out[2], H_out[3], H_out[4], H_out[5], H_out[6], H_out[7], H_out[8] = h1, h2, h3, h4, h5, h6, h7, h8
		end

	end

end


if branch == "INT64" then


	-- implementation for Lua 5.3/5.4

	hi_factor = 4294967296
	hi_factor_keccak = 4294967296
	lanes_index_base = 1

	HEX64, XORA5, XOR_BYTE, sha256_feed_64, sha512_feed_128, md5_feed_64, sha1_feed_64, keccak_feed, blake2s_feed_64, blake2b_feed_128, blake3_feed_64 = load[=[-- branch "INT64"
      local md5_next_shift, md5_K, sha2_K_lo, sha2_K_hi, build_keccak_format, sha3_RC_lo, sigma, common_W, sha2_H_lo, sha2_H_hi, perm_blake3 = ...
      local string_format, string_unpack = string.format, string.unpack

      local function HEX64(x)
         return string_format("%016x", x)
      end

      local function XORA5(x, y)
         return x ~ (y or 0xa5a5a5a5a5a5a5a5)
      end

      local function XOR_BYTE(x, y)
         return x ~ y
      end

      local function sha256_feed_64(H, str, offs, size)
         -- offs >= 0, size >= 0, size is multiple of 64
         local W, K = common_W, sha2_K_hi
         local h1, h2, h3, h4, h5, h6, h7, h8 = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
         for pos = offs + 1, offs + size, 64 do
            W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16] =
               string_unpack(">I4I4I4I4I4I4I4I4I4I4I4I4I4I4I4I4", str, pos)
            for j = 17, 64 do
               local a = W[j-15]
               a = a<<32 | a
               local b = W[j-2]
               b = b<<32 | b
               W[j] = (a>>7 ~ a>>18 ~ a>>35) + (b>>17 ~ b>>19 ~ b>>42) + W[j-7] + W[j-16] & (1<<32)-1
            end
            local a, b, c, d, e, f, g, h = h1, h2, h3, h4, h5, h6, h7, h8
            for j = 1, 64 do
               e = e<<32 | e & (1<<32)-1
               local z = (e>>6 ~ e>>11 ~ e>>25) + (g ~ e & (f ~ g)) + h + K[j] + W[j]
               h = g
               g = f
               f = e
               e = z + d
               d = c
               c = b
               b = a
               a = a<<32 | a & (1<<32)-1
               a = z + ((a ~ c) & d ~ a & c) + (a>>2 ~ a>>13 ~ a>>22)
            end
            h1 = a + h1
            h2 = b + h2
            h3 = c + h3
            h4 = d + h4
            h5 = e + h5
            h6 = f + h6
            h7 = g + h7
            h8 = h + h8
         end
         H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8] = h1, h2, h3, h4, h5, h6, h7, h8
      end

      local function sha512_feed_128(H, _, str, offs, size)
         -- offs >= 0, size >= 0, size is multiple of 128
         local W, K = common_W, sha2_K_lo
         local h1, h2, h3, h4, h5, h6, h7, h8 = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
         for pos = offs + 1, offs + size, 128 do
            W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16] =
               string_unpack(">i8i8i8i8i8i8i8i8i8i8i8i8i8i8i8i8", str, pos)
            for j = 17, 80 do
               local a = W[j-15]
               local b = W[j-2]
               W[j] = (a >> 1 ~ a >> 7 ~ a >> 8 ~ a << 56 ~ a << 63) + (b >> 6 ~ b >> 19 ~ b >> 61 ~ b << 3 ~ b << 45) + W[j-7] + W[j-16]
            end
            local a, b, c, d, e, f, g, h = h1, h2, h3, h4, h5, h6, h7, h8
            for j = 1, 80 do
               local z = (e >> 14 ~ e >> 18 ~ e >> 41 ~ e << 23 ~ e << 46 ~ e << 50) + (g ~ e & (f ~ g)) + h + K[j] + W[j]
               h = g
               g = f
               f = e
               e = z + d
               d = c
               c = b
               b = a
               a = z + ((a ~ c) & d ~ a & c) + (a >> 28 ~ a >> 34 ~ a >> 39 ~ a << 25 ~ a << 30 ~ a << 36)
            end
            h1 = a + h1
            h2 = b + h2
            h3 = c + h3
            h4 = d + h4
            h5 = e + h5
            h6 = f + h6
            h7 = g + h7
            h8 = h + h8
         end
         H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8] = h1, h2, h3, h4, h5, h6, h7, h8
      end

      local function md5_feed_64(H, str, offs, size)
         -- offs >= 0, size >= 0, size is multiple of 64
         local W, K, md5_next_shift = common_W, md5_K, md5_next_shift
         local h1, h2, h3, h4 = H[1], H[2], H[3], H[4]
         for pos = offs + 1, offs + size, 64 do
            W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16] =
               string_unpack("<I4I4I4I4I4I4I4I4I4I4I4I4I4I4I4I4", str, pos)
            local a, b, c, d = h1, h2, h3, h4
            local s = 32-7
            for j = 1, 16 do
               local F = (d ~ b & (c ~ d)) + a + K[j] + W[j]
               a = d
               d = c
               c = b
               b = ((F<<32 | F & (1<<32)-1) >> s) + b
               s = md5_next_shift[s]
            end
            s = 32-5
            for j = 17, 32 do
               local F = (c ~ d & (b ~ c)) + a + K[j] + W[(5*j-4 & 15) + 1]
               a = d
               d = c
               c = b
               b = ((F<<32 | F & (1<<32)-1) >> s) + b
               s = md5_next_shift[s]
            end
            s = 32-4
            for j = 33, 48 do
               local F = (b ~ c ~ d) + a + K[j] + W[(3*j+2 & 15) + 1]
               a = d
               d = c
               c = b
               b = ((F<<32 | F & (1<<32)-1) >> s) + b
               s = md5_next_shift[s]
            end
            s = 32-6
            for j = 49, 64 do
               local F = (c ~ (b | ~d)) + a + K[j] + W[(j*7-7 & 15) + 1]
               a = d
               d = c
               c = b
               b = ((F<<32 | F & (1<<32)-1) >> s) + b
               s = md5_next_shift[s]
            end
            h1 = a + h1
            h2 = b + h2
            h3 = c + h3
            h4 = d + h4
         end
         H[1], H[2], H[3], H[4] = h1, h2, h3, h4
      end

      local function sha1_feed_64(H, str, offs, size)
         -- offs >= 0, size >= 0, size is multiple of 64
         local W = common_W
         local h1, h2, h3, h4, h5 = H[1], H[2], H[3], H[4], H[5]
         for pos = offs + 1, offs + size, 64 do
            W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16] =
               string_unpack(">I4I4I4I4I4I4I4I4I4I4I4I4I4I4I4I4", str, pos)
            for j = 17, 80 do
               local a = W[j-3] ~ W[j-8] ~ W[j-14] ~ W[j-16]
               W[j] = (a<<32 | a) << 1 >> 32
            end
            local a, b, c, d, e = h1, h2, h3, h4, h5
            for j = 1, 20 do
               local z = ((a<<32 | a & (1<<32)-1) >> 27) + (d ~ b & (c ~ d)) + 0x5A827999 + W[j] + e      -- constant = floor(2^30 * sqrt(2))
               e = d
               d = c
               c = (b<<32 | b & (1<<32)-1) >> 2
               b = a
               a = z
            end
            for j = 21, 40 do
               local z = ((a<<32 | a & (1<<32)-1) >> 27) + (b ~ c ~ d) + 0x6ED9EBA1 + W[j] + e            -- 2^30 * sqrt(3)
               e = d
               d = c
               c = (b<<32 | b & (1<<32)-1) >> 2
               b = a
               a = z
            end
            for j = 41, 60 do
               local z = ((a<<32 | a & (1<<32)-1) >> 27) + ((b ~ c) & d ~ b & c) + 0x8F1BBCDC + W[j] + e  -- 2^30 * sqrt(5)
               e = d
               d = c
               c = (b<<32 | b & (1<<32)-1) >> 2
               b = a
               a = z
            end
            for j = 61, 80 do
               local z = ((a<<32 | a & (1<<32)-1) >> 27) + (b ~ c ~ d) + 0xCA62C1D6 + W[j] + e            -- 2^30 * sqrt(10)
               e = d
               d = c
               c = (b<<32 | b & (1<<32)-1) >> 2
               b = a
               a = z
            end
            h1 = a + h1
            h2 = b + h2
            h3 = c + h3
            h4 = d + h4
            h5 = e + h5
         end
         H[1], H[2], H[3], H[4], H[5] = h1, h2, h3, h4, h5
      end

      local keccak_format_i8 = build_keccak_format("i8")

      local function keccak_feed(lanes, _, str, offs, size, block_size_in_bytes)
         -- offs >= 0, size >= 0, size is multiple of block_size_in_bytes, block_size_in_bytes is positive multiple of 8
         local RC = sha3_RC_lo
         local qwords_qty = block_size_in_bytes / 8
         local keccak_format = keccak_format_i8[qwords_qty]
         for pos = offs + 1, offs + size, block_size_in_bytes do
            local qwords_from_message = {string_unpack(keccak_format, str, pos)}
            for j = 1, qwords_qty do
               lanes[j] = lanes[j] ~ qwords_from_message[j]
            end
            local L01, L02, L03, L04, L05, L06, L07, L08, L09, L10, L11, L12, L13, L14, L15, L16, L17, L18, L19, L20, L21, L22, L23, L24, L25 =
               lanes[1], lanes[2], lanes[3], lanes[4], lanes[5], lanes[6], lanes[7], lanes[8], lanes[9], lanes[10], lanes[11], lanes[12], lanes[13],
               lanes[14], lanes[15], lanes[16], lanes[17], lanes[18], lanes[19], lanes[20], lanes[21], lanes[22], lanes[23], lanes[24], lanes[25]
            for round_idx = 1, 24 do
               local C1 = L01 ~ L06 ~ L11 ~ L16 ~ L21
               local C2 = L02 ~ L07 ~ L12 ~ L17 ~ L22
               local C3 = L03 ~ L08 ~ L13 ~ L18 ~ L23
               local C4 = L04 ~ L09 ~ L14 ~ L19 ~ L24
               local C5 = L05 ~ L10 ~ L15 ~ L20 ~ L25
               local D = C1 ~ C3<<1 ~ C3>>63
               local T0 = D ~ L02
               local T1 = D ~ L07
               local T2 = D ~ L12
               local T3 = D ~ L17
               local T4 = D ~ L22
               L02 = T1<<44 ~ T1>>20
               L07 = T3<<45 ~ T3>>19
               L12 = T0<<1 ~ T0>>63
               L17 = T2<<10 ~ T2>>54
               L22 = T4<<2 ~ T4>>62
               D = C2 ~ C4<<1 ~ C4>>63
               T0 = D ~ L03
               T1 = D ~ L08
               T2 = D ~ L13
               T3 = D ~ L18
               T4 = D ~ L23
               L03 = T2<<43 ~ T2>>21
               L08 = T4<<61 ~ T4>>3
               L13 = T1<<6 ~ T1>>58
               L18 = T3<<15 ~ T3>>49
               L23 = T0<<62 ~ T0>>2
               D = C3 ~ C5<<1 ~ C5>>63
               T0 = D ~ L04
               T1 = D ~ L09
               T2 = D ~ L14
               T3 = D ~ L19
               T4 = D ~ L24
               L04 = T3<<21 ~ T3>>43
               L09 = T0<<28 ~ T0>>36
               L14 = T2<<25 ~ T2>>39
               L19 = T4<<56 ~ T4>>8
               L24 = T1<<55 ~ T1>>9
               D = C4 ~ C1<<1 ~ C1>>63
               T0 = D ~ L05
               T1 = D ~ L10
               T2 = D ~ L15
               T3 = D ~ L20
               T4 = D ~ L25
               L05 = T4<<14 ~ T4>>50
               L10 = T1<<20 ~ T1>>44
               L15 = T3<<8 ~ T3>>56
               L20 = T0<<27 ~ T0>>37
               L25 = T2<<39 ~ T2>>25
               D = C5 ~ C2<<1 ~ C2>>63
               T1 = D ~ L06
               T2 = D ~ L11
               T3 = D ~ L16
               T4 = D ~ L21
               L06 = T2<<3 ~ T2>>61
               L11 = T4<<18 ~ T4>>46
               L16 = T1<<36 ~ T1>>28
               L21 = T3<<41 ~ T3>>23
               L01 = D ~ L01
               L01, L02, L03, L04, L05 = L01 ~ ~L02 & L03, L02 ~ ~L03 & L04, L03 ~ ~L04 & L05, L04 ~ ~L05 & L01, L05 ~ ~L01 & L02
               L06, L07, L08, L09, L10 = L09 ~ ~L10 & L06, L10 ~ ~L06 & L07, L06 ~ ~L07 & L08, L07 ~ ~L08 & L09, L08 ~ ~L09 & L10
               L11, L12, L13, L14, L15 = L12 ~ ~L13 & L14, L13 ~ ~L14 & L15, L14 ~ ~L15 & L11, L15 ~ ~L11 & L12, L11 ~ ~L12 & L13
               L16, L17, L18, L19, L20 = L20 ~ ~L16 & L17, L16 ~ ~L17 & L18, L17 ~ ~L18 & L19, L18 ~ ~L19 & L20, L19 ~ ~L20 & L16
               L21, L22, L23, L24, L25 = L23 ~ ~L24 & L25, L24 ~ ~L25 & L21, L25 ~ ~L21 & L22, L21 ~ ~L22 & L23, L22 ~ ~L23 & L24
               L01 = L01 ~ RC[round_idx]
            end
            lanes[1]  = L01
            lanes[2]  = L02
            lanes[3]  = L03
            lanes[4]  = L04
            lanes[5]  = L05
            lanes[6]  = L06
            lanes[7]  = L07
            lanes[8]  = L08
            lanes[9]  = L09
            lanes[10] = L10
            lanes[11] = L11
            lanes[12] = L12
            lanes[13] = L13
            lanes[14] = L14
            lanes[15] = L15
            lanes[16] = L16
            lanes[17] = L17
            lanes[18] = L18
            lanes[19] = L19
            lanes[20] = L20
            lanes[21] = L21
            lanes[22] = L22
            lanes[23] = L23
            lanes[24] = L24
            lanes[25] = L25
         end
      end

      local function blake2s_feed_64(H, str, offs, size, bytes_compressed, last_block_size, is_last_node)
         -- offs >= 0, size >= 0, size is multiple of 64
         local W = common_W
         local h1, h2, h3, h4, h5, h6, h7, h8 = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
         for pos = offs + 1, offs + size, 64 do
            if str then
               W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16] =
                  string_unpack("<I4I4I4I4I4I4I4I4I4I4I4I4I4I4I4I4", str, pos)
            end
            local v0, v1, v2, v3, v4, v5, v6, v7 = h1, h2, h3, h4, h5, h6, h7, h8
            local v8, v9, vA, vB, vC, vD, vE, vF = sha2_H_hi[1], sha2_H_hi[2], sha2_H_hi[3], sha2_H_hi[4], sha2_H_hi[5], sha2_H_hi[6], sha2_H_hi[7], sha2_H_hi[8]
            bytes_compressed = bytes_compressed + (last_block_size or 64)
            vC = vC ~ bytes_compressed        -- t0 = low_4_bytes(bytes_compressed)
            vD = vD ~ bytes_compressed >> 32  -- t1 = high_4_bytes(bytes_compressed)
            if last_block_size then  -- flag f0
               vE = ~vE
            end
            if is_last_node then  -- flag f1
               vF = ~vF
            end
            for j = 1, 10 do
               local row = sigma[j]
               v0 = v0 + v4 + W[row[1]]
               vC = vC ~ v0
               vC = (vC & (1<<32)-1) >> 16 | vC << 16
               v8 = v8 + vC
               v4 = v4 ~ v8
               v4 = (v4 & (1<<32)-1) >> 12 | v4 << 20
               v0 = v0 + v4 + W[row[2]]
               vC = vC ~ v0
               vC = (vC & (1<<32)-1) >> 8 | vC << 24
               v8 = v8 + vC
               v4 = v4 ~ v8
               v4 = (v4 & (1<<32)-1) >> 7 | v4 << 25
               v1 = v1 + v5 + W[row[3]]
               vD = vD ~ v1
               vD = (vD & (1<<32)-1) >> 16 | vD << 16
               v9 = v9 + vD
               v5 = v5 ~ v9
               v5 = (v5 & (1<<32)-1) >> 12 | v5 << 20
               v1 = v1 + v5 + W[row[4]]
               vD = vD ~ v1
               vD = (vD & (1<<32)-1) >> 8 | vD << 24
               v9 = v9 + vD
               v5 = v5 ~ v9
               v5 = (v5 & (1<<32)-1) >> 7 | v5 << 25
               v2 = v2 + v6 + W[row[5]]
               vE = vE ~ v2
               vE = (vE & (1<<32)-1) >> 16 | vE << 16
               vA = vA + vE
               v6 = v6 ~ vA
               v6 = (v6 & (1<<32)-1) >> 12 | v6 << 20
               v2 = v2 + v6 + W[row[6]]
               vE = vE ~ v2
               vE = (vE & (1<<32)-1) >> 8 | vE << 24
               vA = vA + vE
               v6 = v6 ~ vA
               v6 = (v6 & (1<<32)-1) >> 7 | v6 << 25
               v3 = v3 + v7 + W[row[7]]
               vF = vF ~ v3
               vF = (vF & (1<<32)-1) >> 16 | vF << 16
               vB = vB + vF
               v7 = v7 ~ vB
               v7 = (v7 & (1<<32)-1) >> 12 | v7 << 20
               v3 = v3 + v7 + W[row[8]]
               vF = vF ~ v3
               vF = (vF & (1<<32)-1) >> 8 | vF << 24
               vB = vB + vF
               v7 = v7 ~ vB
               v7 = (v7 & (1<<32)-1) >> 7 | v7 << 25
               v0 = v0 + v5 + W[row[9]]
               vF = vF ~ v0
               vF = (vF & (1<<32)-1) >> 16 | vF << 16
               vA = vA + vF
               v5 = v5 ~ vA
               v5 = (v5 & (1<<32)-1) >> 12 | v5 << 20
               v0 = v0 + v5 + W[row[10]]
               vF = vF ~ v0
               vF = (vF & (1<<32)-1) >> 8 | vF << 24
               vA = vA + vF
               v5 = v5 ~ vA
               v5 = (v5 & (1<<32)-1) >> 7 | v5 << 25
               v1 = v1 + v6 + W[row[11]]
               vC = vC ~ v1
               vC = (vC & (1<<32)-1) >> 16 | vC << 16
               vB = vB + vC
               v6 = v6 ~ vB
               v6 = (v6 & (1<<32)-1) >> 12 | v6 << 20
               v1 = v1 + v6 + W[row[12]]
               vC = vC ~ v1
               vC = (vC & (1<<32)-1) >> 8 | vC << 24
               vB = vB + vC
               v6 = v6 ~ vB
               v6 = (v6 & (1<<32)-1) >> 7 | v6 << 25
               v2 = v2 + v7 + W[row[13]]
               vD = vD ~ v2
               vD = (vD & (1<<32)-1) >> 16 | vD << 16
               v8 = v8 + vD
               v7 = v7 ~ v8
               v7 = (v7 & (1<<32)-1) >> 12 | v7 << 20
               v2 = v2 + v7 + W[row[14]]
               vD = vD ~ v2
               vD = (vD & (1<<32)-1) >> 8 | vD << 24
               v8 = v8 + vD
               v7 = v7 ~ v8
               v7 = (v7 & (1<<32)-1) >> 7 | v7 << 25
               v3 = v3 + v4 + W[row[15]]
               vE = vE ~ v3
               vE = (vE & (1<<32)-1) >> 16 | vE << 16
               v9 = v9 + vE
               v4 = v4 ~ v9
               v4 = (v4 & (1<<32)-1) >> 12 | v4 << 20
               v3 = v3 + v4 + W[row[16]]
               vE = vE ~ v3
               vE = (vE & (1<<32)-1) >> 8 | vE << 24
               v9 = v9 + vE
               v4 = v4 ~ v9
               v4 = (v4 & (1<<32)-1) >> 7 | v4 << 25
            end
            h1 = h1 ~ v0 ~ v8
            h2 = h2 ~ v1 ~ v9
            h3 = h3 ~ v2 ~ vA
            h4 = h4 ~ v3 ~ vB
            h5 = h5 ~ v4 ~ vC
            h6 = h6 ~ v5 ~ vD
            h7 = h7 ~ v6 ~ vE
            h8 = h8 ~ v7 ~ vF
         end
         H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8] = h1, h2, h3, h4, h5, h6, h7, h8
         return bytes_compressed
      end

      local function blake2b_feed_128(H, _, str, offs, size, bytes_compressed, last_block_size, is_last_node)
         -- offs >= 0, size >= 0, size is multiple of 128
         local W = common_W
         local h1, h2, h3, h4, h5, h6, h7, h8 = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
         for pos = offs + 1, offs + size, 128 do
            if str then
               W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16] =
                  string_unpack("<i8i8i8i8i8i8i8i8i8i8i8i8i8i8i8i8", str, pos)
            end
            local v0, v1, v2, v3, v4, v5, v6, v7 = h1, h2, h3, h4, h5, h6, h7, h8
            local v8, v9, vA, vB, vC, vD, vE, vF = sha2_H_lo[1], sha2_H_lo[2], sha2_H_lo[3], sha2_H_lo[4], sha2_H_lo[5], sha2_H_lo[6], sha2_H_lo[7], sha2_H_lo[8]
            bytes_compressed = bytes_compressed + (last_block_size or 128)
            vC = vC ~ bytes_compressed  -- t0 = low_8_bytes(bytes_compressed)
            -- t1 = high_8_bytes(bytes_compressed) = 0,  message length is always below 2^53 bytes
            if last_block_size then  -- flag f0
               vE = ~vE
            end
            if is_last_node then  -- flag f1
               vF = ~vF
            end
            for j = 1, 12 do
               local row = sigma[j]
               v0 = v0 + v4 + W[row[1]]
               vC = vC ~ v0
               vC = vC >> 32 | vC << 32
               v8 = v8 + vC
               v4 = v4 ~ v8
               v4 = v4 >> 24 | v4 << 40
               v0 = v0 + v4 + W[row[2]]
               vC = vC ~ v0
               vC = vC >> 16 | vC << 48
               v8 = v8 + vC
               v4 = v4 ~ v8
               v4 = v4 >> 63 | v4 << 1
               v1 = v1 + v5 + W[row[3]]
               vD = vD ~ v1
               vD = vD >> 32 | vD << 32
               v9 = v9 + vD
               v5 = v5 ~ v9
               v5 = v5 >> 24 | v5 << 40
               v1 = v1 + v5 + W[row[4]]
               vD = vD ~ v1
               vD = vD >> 16 | vD << 48
               v9 = v9 + vD
               v5 = v5 ~ v9
               v5 = v5 >> 63 | v5 << 1
               v2 = v2 + v6 + W[row[5]]
               vE = vE ~ v2
               vE = vE >> 32 | vE << 32
               vA = vA + vE
               v6 = v6 ~ vA
               v6 = v6 >> 24 | v6 << 40
               v2 = v2 + v6 + W[row[6]]
               vE = vE ~ v2
               vE = vE >> 16 | vE << 48
               vA = vA + vE
               v6 = v6 ~ vA
               v6 = v6 >> 63 | v6 << 1
               v3 = v3 + v7 + W[row[7]]
               vF = vF ~ v3
               vF = vF >> 32 | vF << 32
               vB = vB + vF
               v7 = v7 ~ vB
               v7 = v7 >> 24 | v7 << 40
               v3 = v3 + v7 + W[row[8]]
               vF = vF ~ v3
               vF = vF >> 16 | vF << 48
               vB = vB + vF
               v7 = v7 ~ vB
               v7 = v7 >> 63 | v7 << 1
               v0 = v0 + v5 + W[row[9]]
               vF = vF ~ v0
               vF = vF >> 32 | vF << 32
               vA = vA + vF
               v5 = v5 ~ vA
               v5 = v5 >> 24 | v5 << 40
               v0 = v0 + v5 + W[row[10]]
               vF = vF ~ v0
               vF = vF >> 16 | vF << 48
               vA = vA + vF
               v5 = v5 ~ vA
               v5 = v5 >> 63 | v5 << 1
               v1 = v1 + v6 + W[row[11]]
               vC = vC ~ v1
               vC = vC >> 32 | vC << 32
               vB = vB + vC
               v6 = v6 ~ vB
               v6 = v6 >> 24 | v6 << 40
               v1 = v1 + v6 + W[row[12]]
               vC = vC ~ v1
               vC = vC >> 16 | vC << 48
               vB = vB + vC
               v6 = v6 ~ vB
               v6 = v6 >> 63 | v6 << 1
               v2 = v2 + v7 + W[row[13]]
               vD = vD ~ v2
               vD = vD >> 32 | vD << 32
               v8 = v8 + vD
               v7 = v7 ~ v8
               v7 = v7 >> 24 | v7 << 40
               v2 = v2 + v7 + W[row[14]]
               vD = vD ~ v2
               vD = vD >> 16 | vD << 48
               v8 = v8 + vD
               v7 = v7 ~ v8
               v7 = v7 >> 63 | v7 << 1
               v3 = v3 + v4 + W[row[15]]
               vE = vE ~ v3
               vE = vE >> 32 | vE << 32
               v9 = v9 + vE
               v4 = v4 ~ v9
               v4 = v4 >> 24 | v4 << 40
               v3 = v3 + v4 + W[row[16]]
               vE = vE ~ v3
               vE = vE >> 16 | vE << 48
               v9 = v9 + vE
               v4 = v4 ~ v9
               v4 = v4 >> 63 | v4 << 1
            end
            h1 = h1 ~ v0 ~ v8
            h2 = h2 ~ v1 ~ v9
            h3 = h3 ~ v2 ~ vA
            h4 = h4 ~ v3 ~ vB
            h5 = h5 ~ v4 ~ vC
            h6 = h6 ~ v5 ~ vD
            h7 = h7 ~ v6 ~ vE
            h8 = h8 ~ v7 ~ vF
         end
         H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8] = h1, h2, h3, h4, h5, h6, h7, h8
         return bytes_compressed
      end

      local function blake3_feed_64(str, offs, size, flags, chunk_index, H_in, H_out, wide_output, block_length)
         -- offs >= 0, size >= 0, size is multiple of 64
         block_length = block_length or 64
         local W = common_W
         local h1, h2, h3, h4, h5, h6, h7, h8 = H_in[1], H_in[2], H_in[3], H_in[4], H_in[5], H_in[6], H_in[7], H_in[8]
         H_out = H_out or H_in
         for pos = offs + 1, offs + size, 64 do
            if str then
               W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16] =
                  string_unpack("<I4I4I4I4I4I4I4I4I4I4I4I4I4I4I4I4", str, pos)
            end
            local v0, v1, v2, v3, v4, v5, v6, v7 = h1, h2, h3, h4, h5, h6, h7, h8
            local v8, v9, vA, vB = sha2_H_hi[1], sha2_H_hi[2], sha2_H_hi[3], sha2_H_hi[4]
            local t0 = chunk_index % 2^32         -- t0 = low_4_bytes(chunk_index)
            local t1 = (chunk_index - t0) / 2^32  -- t1 = high_4_bytes(chunk_index)
            local vC, vD, vE, vF = 0|t0, 0|t1, block_length, flags
            for j = 1, 7 do
               v0 = v0 + v4 + W[perm_blake3[j]]
               vC = vC ~ v0
               vC = (vC & (1<<32)-1) >> 16 | vC << 16
               v8 = v8 + vC
               v4 = v4 ~ v8
               v4 = (v4 & (1<<32)-1) >> 12 | v4 << 20
               v0 = v0 + v4 + W[perm_blake3[j + 14]]
               vC = vC ~ v0
               vC = (vC & (1<<32)-1) >> 8 | vC << 24
               v8 = v8 + vC
               v4 = v4 ~ v8
               v4 = (v4 & (1<<32)-1) >> 7 | v4 << 25
               v1 = v1 + v5 + W[perm_blake3[j + 1]]
               vD = vD ~ v1
               vD = (vD & (1<<32)-1) >> 16 | vD << 16
               v9 = v9 + vD
               v5 = v5 ~ v9
               v5 = (v5 & (1<<32)-1) >> 12 | v5 << 20
               v1 = v1 + v5 + W[perm_blake3[j + 2]]
               vD = vD ~ v1
               vD = (vD & (1<<32)-1) >> 8 | vD << 24
               v9 = v9 + vD
               v5 = v5 ~ v9
               v5 = (v5 & (1<<32)-1) >> 7 | v5 << 25
               v2 = v2 + v6 + W[perm_blake3[j + 16]]
               vE = vE ~ v2
               vE = (vE & (1<<32)-1) >> 16 | vE << 16
               vA = vA + vE
               v6 = v6 ~ vA
               v6 = (v6 & (1<<32)-1) >> 12 | v6 << 20
               v2 = v2 + v6 + W[perm_blake3[j + 7]]
               vE = vE ~ v2
               vE = (vE & (1<<32)-1) >> 8 | vE << 24
               vA = vA + vE
               v6 = v6 ~ vA
               v6 = (v6 & (1<<32)-1) >> 7 | v6 << 25
               v3 = v3 + v7 + W[perm_blake3[j + 15]]
               vF = vF ~ v3
               vF = (vF & (1<<32)-1) >> 16 | vF << 16
               vB = vB + vF
               v7 = v7 ~ vB
               v7 = (v7 & (1<<32)-1) >> 12 | v7 << 20
               v3 = v3 + v7 + W[perm_blake3[j + 17]]
               vF = vF ~ v3
               vF = (vF & (1<<32)-1) >> 8 | vF << 24
               vB = vB + vF
               v7 = v7 ~ vB
               v7 = (v7 & (1<<32)-1) >> 7 | v7 << 25
               v0 = v0 + v5 + W[perm_blake3[j + 21]]
               vF = vF ~ v0
               vF = (vF & (1<<32)-1) >> 16 | vF << 16
               vA = vA + vF
               v5 = v5 ~ vA
               v5 = (v5 & (1<<32)-1) >> 12 | v5 << 20
               v0 = v0 + v5 + W[perm_blake3[j + 5]]
               vF = vF ~ v0
               vF = (vF & (1<<32)-1) >> 8 | vF << 24
               vA = vA + vF
               v5 = v5 ~ vA
               v5 = (v5 & (1<<32)-1) >> 7 | v5 << 25
               v1 = v1 + v6 + W[perm_blake3[j + 3]]
               vC = vC ~ v1
               vC = (vC & (1<<32)-1) >> 16 | vC << 16
               vB = vB + vC
               v6 = v6 ~ vB
               v6 = (v6 & (1<<32)-1) >> 12 | v6 << 20
               v1 = v1 + v6 + W[perm_blake3[j + 6]]
               vC = vC ~ v1
               vC = (vC & (1<<32)-1) >> 8 | vC << 24
               vB = vB + vC
               v6 = v6 ~ vB
               v6 = (v6 & (1<<32)-1) >> 7 | v6 << 25
               v2 = v2 + v7 + W[perm_blake3[j + 4]]
               vD = vD ~ v2
               vD = (vD & (1<<32)-1) >> 16 | vD << 16
               v8 = v8 + vD
               v7 = v7 ~ v8
               v7 = (v7 & (1<<32)-1) >> 12 | v7 << 20
               v2 = v2 + v7 + W[perm_blake3[j + 18]]
               vD = vD ~ v2
               vD = (vD & (1<<32)-1) >> 8 | vD << 24
               v8 = v8 + vD
               v7 = v7 ~ v8
               v7 = (v7 & (1<<32)-1) >> 7 | v7 << 25
               v3 = v3 + v4 + W[perm_blake3[j + 19]]
               vE = vE ~ v3
               vE = (vE & (1<<32)-1) >> 16 | vE << 16
               v9 = v9 + vE
               v4 = v4 ~ v9
               v4 = (v4 & (1<<32)-1) >> 12 | v4 << 20
               v3 = v3 + v4 + W[perm_blake3[j + 20]]
               vE = vE ~ v3
               vE = (vE & (1<<32)-1) >> 8 | vE << 24
               v9 = v9 + vE
               v4 = v4 ~ v9
               v4 = (v4 & (1<<32)-1) >> 7 | v4 << 25
            end
            if wide_output then
               H_out[ 9] = h1 ~ v8
               H_out[10] = h2 ~ v9
               H_out[11] = h3 ~ vA
               H_out[12] = h4 ~ vB
               H_out[13] = h5 ~ vC
               H_out[14] = h6 ~ vD
               H_out[15] = h7 ~ vE
               H_out[16] = h8 ~ vF
            end
            h1 = v0 ~ v8
            h2 = v1 ~ v9
            h3 = v2 ~ vA
            h4 = v3 ~ vB
            h5 = v4 ~ vC
            h6 = v5 ~ vD
            h7 = v6 ~ vE
            h8 = v7 ~ vF
         end
         H_out[1], H_out[2], H_out[3], H_out[4], H_out[5], H_out[6], H_out[7], H_out[8] = h1, h2, h3, h4, h5, h6, h7, h8
      end

      return HEX64, XORA5, XOR_BYTE, sha256_feed_64, sha512_feed_128, md5_feed_64, sha1_feed_64, keccak_feed, blake2s_feed_64, blake2b_feed_128, blake3_feed_64
   ]=](md5_next_shift, md5_K, sha2_K_lo, sha2_K_hi, build_keccak_format, sha3_RC_lo, sigma, common_W, sha2_H_lo, sha2_H_hi, perm_blake3)

end


if branch == "INT32" then


	-- implementation for Lua 5.3/5.4 having non-standard numbers config "int32"+"double" (built with LUA_INT_TYPE=LUA_INT_INT)

	K_lo_modulo = 2^32

	function HEX(x) -- returns string of 8 lowercase hexadecimal digits
		return string_format("%08x", x)
	end

	XORA5, XOR_BYTE, sha256_feed_64, sha512_feed_128, md5_feed_64, sha1_feed_64, keccak_feed, blake2s_feed_64, blake2b_feed_128, blake3_feed_64 = load[=[-- branch "INT32"
      local md5_next_shift, md5_K, sha2_K_lo, sha2_K_hi, build_keccak_format, sha3_RC_lo, sha3_RC_hi, sigma, common_W, sha2_H_lo, sha2_H_hi, perm_blake3 = ...
      local string_unpack, floor = string.unpack, math.floor

      local function XORA5(x, y)
         return x ~ (y and (y + 2^31) % 2^32 - 2^31 or 0xA5A5A5A5)
      end

      local function XOR_BYTE(x, y)
         return x ~ y
      end

      local function sha256_feed_64(H, str, offs, size)
         -- offs >= 0, size >= 0, size is multiple of 64
         local W, K = common_W, sha2_K_hi
         local h1, h2, h3, h4, h5, h6, h7, h8 = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
         for pos = offs + 1, offs + size, 64 do
            W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16] =
               string_unpack(">i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4", str, pos)
            for j = 17, 64 do
               local a, b = W[j-15], W[j-2]
               W[j] = (a>>7 ~ a<<25 ~ a<<14 ~ a>>18 ~ a>>3) + (b<<15 ~ b>>17 ~ b<<13 ~ b>>19 ~ b>>10) + W[j-7] + W[j-16]
            end
            local a, b, c, d, e, f, g, h = h1, h2, h3, h4, h5, h6, h7, h8
            for j = 1, 64 do
               local z = (e>>6 ~ e<<26 ~ e>>11 ~ e<<21 ~ e>>25 ~ e<<7) + (g ~ e & (f ~ g)) + h + K[j] + W[j]
               h = g
               g = f
               f = e
               e = z + d
               d = c
               c = b
               b = a
               a = z + ((a ~ c) & d ~ a & c) + (a>>2 ~ a<<30 ~ a>>13 ~ a<<19 ~ a<<10 ~ a>>22)
            end
            h1 = a + h1
            h2 = b + h2
            h3 = c + h3
            h4 = d + h4
            h5 = e + h5
            h6 = f + h6
            h7 = g + h7
            h8 = h + h8
         end
         H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8] = h1, h2, h3, h4, h5, h6, h7, h8
      end

      local function sha512_feed_128(H_lo, H_hi, str, offs, size)
         -- offs >= 0, size >= 0, size is multiple of 128
         -- W1_hi, W1_lo, W2_hi, W2_lo, ...   Wk_hi = W[2*k-1], Wk_lo = W[2*k]
         local floor, W, K_lo, K_hi = floor, common_W, sha2_K_lo, sha2_K_hi
         local h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo = H_lo[1], H_lo[2], H_lo[3], H_lo[4], H_lo[5], H_lo[6], H_lo[7], H_lo[8]
         local h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi = H_hi[1], H_hi[2], H_hi[3], H_hi[4], H_hi[5], H_hi[6], H_hi[7], H_hi[8]
         for pos = offs + 1, offs + size, 128 do
            W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16],
               W[17], W[18], W[19], W[20], W[21], W[22], W[23], W[24], W[25], W[26], W[27], W[28], W[29], W[30], W[31], W[32] =
               string_unpack(">i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4", str, pos)
            for jj = 17*2, 80*2, 2 do
               local a_lo, a_hi, b_lo, b_hi = W[jj-30], W[jj-31], W[jj-4], W[jj-5]
               local tmp =
                  (a_lo>>1 ~ a_hi<<31 ~ a_lo>>8 ~ a_hi<<24 ~ a_lo>>7 ~ a_hi<<25) % 2^32
                  + (b_lo>>19 ~ b_hi<<13 ~ b_lo<<3 ~ b_hi>>29 ~ b_lo>>6 ~ b_hi<<26) % 2^32
                  + W[jj-14] % 2^32 + W[jj-32] % 2^32
               W[jj-1] =
                  (a_hi>>1 ~ a_lo<<31 ~ a_hi>>8 ~ a_lo<<24 ~ a_hi>>7)
                  + (b_hi>>19 ~ b_lo<<13 ~ b_hi<<3 ~ b_lo>>29 ~ b_hi>>6)
                  + W[jj-15] + W[jj-33] + floor(tmp / 2^32)
               W[jj] = 0|((tmp + 2^31) % 2^32 - 2^31)
            end
            local a_lo, b_lo, c_lo, d_lo, e_lo, f_lo, g_lo, h_lo = h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo
            local a_hi, b_hi, c_hi, d_hi, e_hi, f_hi, g_hi, h_hi = h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi
            for j = 1, 80 do
               local jj = 2*j
               local z_lo = (e_lo>>14 ~ e_hi<<18 ~ e_lo>>18 ~ e_hi<<14 ~ e_lo<<23 ~ e_hi>>9) % 2^32 + (g_lo ~ e_lo & (f_lo ~ g_lo)) % 2^32 + h_lo % 2^32 + K_lo[j] + W[jj] % 2^32
               local z_hi = (e_hi>>14 ~ e_lo<<18 ~ e_hi>>18 ~ e_lo<<14 ~ e_hi<<23 ~ e_lo>>9) + (g_hi ~ e_hi & (f_hi ~ g_hi)) + h_hi + K_hi[j] + W[jj-1] + floor(z_lo / 2^32)
               z_lo = z_lo % 2^32
               h_lo = g_lo;  h_hi = g_hi
               g_lo = f_lo;  g_hi = f_hi
               f_lo = e_lo;  f_hi = e_hi
               e_lo = z_lo + d_lo % 2^32
               e_hi = z_hi + d_hi + floor(e_lo / 2^32)
               e_lo = 0|((e_lo + 2^31) % 2^32 - 2^31)
               d_lo = c_lo;  d_hi = c_hi
               c_lo = b_lo;  c_hi = b_hi
               b_lo = a_lo;  b_hi = a_hi
               z_lo = z_lo + (d_lo & c_lo ~ b_lo & (d_lo ~ c_lo)) % 2^32 + (b_lo>>28 ~ b_hi<<4 ~ b_lo<<30 ~ b_hi>>2 ~ b_lo<<25 ~ b_hi>>7) % 2^32
               a_hi = z_hi + (d_hi & c_hi ~ b_hi & (d_hi ~ c_hi)) + (b_hi>>28 ~ b_lo<<4 ~ b_hi<<30 ~ b_lo>>2 ~ b_hi<<25 ~ b_lo>>7) + floor(z_lo / 2^32)
               a_lo = 0|((z_lo + 2^31) % 2^32 - 2^31)
            end
            a_lo = h1_lo % 2^32 + a_lo % 2^32
            h1_hi = h1_hi + a_hi + floor(a_lo / 2^32)
            h1_lo = 0|((a_lo + 2^31) % 2^32 - 2^31)
            a_lo = h2_lo % 2^32 + b_lo % 2^32
            h2_hi = h2_hi + b_hi + floor(a_lo / 2^32)
            h2_lo = 0|((a_lo + 2^31) % 2^32 - 2^31)
            a_lo = h3_lo % 2^32 + c_lo % 2^32
            h3_hi = h3_hi + c_hi + floor(a_lo / 2^32)
            h3_lo = 0|((a_lo + 2^31) % 2^32 - 2^31)
            a_lo = h4_lo % 2^32 + d_lo % 2^32
            h4_hi = h4_hi + d_hi + floor(a_lo / 2^32)
            h4_lo = 0|((a_lo + 2^31) % 2^32 - 2^31)
            a_lo = h5_lo % 2^32 + e_lo % 2^32
            h5_hi = h5_hi + e_hi + floor(a_lo / 2^32)
            h5_lo = 0|((a_lo + 2^31) % 2^32 - 2^31)
            a_lo = h6_lo % 2^32 + f_lo % 2^32
            h6_hi = h6_hi + f_hi + floor(a_lo / 2^32)
            h6_lo = 0|((a_lo + 2^31) % 2^32 - 2^31)
            a_lo = h7_lo % 2^32 + g_lo % 2^32
            h7_hi = h7_hi + g_hi + floor(a_lo / 2^32)
            h7_lo = 0|((a_lo + 2^31) % 2^32 - 2^31)
            a_lo = h8_lo % 2^32 + h_lo % 2^32
            h8_hi = h8_hi + h_hi + floor(a_lo / 2^32)
            h8_lo = 0|((a_lo + 2^31) % 2^32 - 2^31)
         end
         H_lo[1], H_lo[2], H_lo[3], H_lo[4], H_lo[5], H_lo[6], H_lo[7], H_lo[8] = h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo
         H_hi[1], H_hi[2], H_hi[3], H_hi[4], H_hi[5], H_hi[6], H_hi[7], H_hi[8] = h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi
      end

      local function md5_feed_64(H, str, offs, size)
         -- offs >= 0, size >= 0, size is multiple of 64
         local W, K, md5_next_shift = common_W, md5_K, md5_next_shift
         local h1, h2, h3, h4 = H[1], H[2], H[3], H[4]
         for pos = offs + 1, offs + size, 64 do
            W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16] =
               string_unpack("<i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4", str, pos)
            local a, b, c, d = h1, h2, h3, h4
            local s = 32-7
            for j = 1, 16 do
               local F = (d ~ b & (c ~ d)) + a + K[j] + W[j]
               a = d
               d = c
               c = b
               b = (F << 32-s | F>>s) + b
               s = md5_next_shift[s]
            end
            s = 32-5
            for j = 17, 32 do
               local F = (c ~ d & (b ~ c)) + a + K[j] + W[(5*j-4 & 15) + 1]
               a = d
               d = c
               c = b
               b = (F << 32-s | F>>s) + b
               s = md5_next_shift[s]
            end
            s = 32-4
            for j = 33, 48 do
               local F = (b ~ c ~ d) + a + K[j] + W[(3*j+2 & 15) + 1]
               a = d
               d = c
               c = b
               b = (F << 32-s | F>>s) + b
               s = md5_next_shift[s]
            end
            s = 32-6
            for j = 49, 64 do
               local F = (c ~ (b | ~d)) + a + K[j] + W[(j*7-7 & 15) + 1]
               a = d
               d = c
               c = b
               b = (F << 32-s | F>>s) + b
               s = md5_next_shift[s]
            end
            h1 = a + h1
            h2 = b + h2
            h3 = c + h3
            h4 = d + h4
         end
         H[1], H[2], H[3], H[4] = h1, h2, h3, h4
      end

      local function sha1_feed_64(H, str, offs, size)
         -- offs >= 0, size >= 0, size is multiple of 64
         local W = common_W
         local h1, h2, h3, h4, h5 = H[1], H[2], H[3], H[4], H[5]
         for pos = offs + 1, offs + size, 64 do
            W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16] =
               string_unpack(">i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4", str, pos)
            for j = 17, 80 do
               local a = W[j-3] ~ W[j-8] ~ W[j-14] ~ W[j-16]
               W[j] = a << 1 ~ a >> 31
            end
            local a, b, c, d, e = h1, h2, h3, h4, h5
            for j = 1, 20 do
               local z = (a << 5 ~ a >> 27) + (d ~ b & (c ~ d)) + 0x5A827999 + W[j] + e      -- constant = floor(2^30 * sqrt(2))
               e = d
               d = c
               c = b << 30 ~ b >> 2
               b = a
               a = z
            end
            for j = 21, 40 do
               local z = (a << 5 ~ a >> 27) + (b ~ c ~ d) + 0x6ED9EBA1 + W[j] + e            -- 2^30 * sqrt(3)
               e = d
               d = c
               c = b << 30 ~ b >> 2
               b = a
               a = z
            end
            for j = 41, 60 do
               local z = (a << 5 ~ a >> 27) + ((b ~ c) & d ~ b & c) + 0x8F1BBCDC + W[j] + e  -- 2^30 * sqrt(5)
               e = d
               d = c
               c = b << 30 ~ b >> 2
               b = a
               a = z
            end
            for j = 61, 80 do
               local z = (a << 5 ~ a >> 27) + (b ~ c ~ d) + 0xCA62C1D6 + W[j] + e            -- 2^30 * sqrt(10)
               e = d
               d = c
               c = b << 30 ~ b >> 2
               b = a
               a = z
            end
            h1 = a + h1
            h2 = b + h2
            h3 = c + h3
            h4 = d + h4
            h5 = e + h5
         end
         H[1], H[2], H[3], H[4], H[5] = h1, h2, h3, h4, h5
      end

      local keccak_format_i4i4 = build_keccak_format("i4i4")

      local function keccak_feed(lanes_lo, lanes_hi, str, offs, size, block_size_in_bytes)
         -- offs >= 0, size >= 0, size is multiple of block_size_in_bytes, block_size_in_bytes is positive multiple of 8
         local RC_lo, RC_hi = sha3_RC_lo, sha3_RC_hi
         local qwords_qty = block_size_in_bytes / 8
         local keccak_format = keccak_format_i4i4[qwords_qty]
         for pos = offs + 1, offs + size, block_size_in_bytes do
            local dwords_from_message = {string_unpack(keccak_format, str, pos)}
            for j = 1, qwords_qty do
               lanes_lo[j] = lanes_lo[j] ~ dwords_from_message[2*j-1]
               lanes_hi[j] = lanes_hi[j] ~ dwords_from_message[2*j]
            end
            local L01_lo, L01_hi, L02_lo, L02_hi, L03_lo, L03_hi, L04_lo, L04_hi, L05_lo, L05_hi, L06_lo, L06_hi, L07_lo, L07_hi, L08_lo, L08_hi,
               L09_lo, L09_hi, L10_lo, L10_hi, L11_lo, L11_hi, L12_lo, L12_hi, L13_lo, L13_hi, L14_lo, L14_hi, L15_lo, L15_hi, L16_lo, L16_hi,
               L17_lo, L17_hi, L18_lo, L18_hi, L19_lo, L19_hi, L20_lo, L20_hi, L21_lo, L21_hi, L22_lo, L22_hi, L23_lo, L23_hi, L24_lo, L24_hi, L25_lo, L25_hi =
               lanes_lo[1], lanes_hi[1], lanes_lo[2], lanes_hi[2], lanes_lo[3], lanes_hi[3], lanes_lo[4], lanes_hi[4], lanes_lo[5], lanes_hi[5],
               lanes_lo[6], lanes_hi[6], lanes_lo[7], lanes_hi[7], lanes_lo[8], lanes_hi[8], lanes_lo[9], lanes_hi[9], lanes_lo[10], lanes_hi[10],
               lanes_lo[11], lanes_hi[11], lanes_lo[12], lanes_hi[12], lanes_lo[13], lanes_hi[13], lanes_lo[14], lanes_hi[14], lanes_lo[15], lanes_hi[15],
               lanes_lo[16], lanes_hi[16], lanes_lo[17], lanes_hi[17], lanes_lo[18], lanes_hi[18], lanes_lo[19], lanes_hi[19], lanes_lo[20], lanes_hi[20],
               lanes_lo[21], lanes_hi[21], lanes_lo[22], lanes_hi[22], lanes_lo[23], lanes_hi[23], lanes_lo[24], lanes_hi[24], lanes_lo[25], lanes_hi[25]
            for round_idx = 1, 24 do
               local C1_lo = L01_lo ~ L06_lo ~ L11_lo ~ L16_lo ~ L21_lo
               local C1_hi = L01_hi ~ L06_hi ~ L11_hi ~ L16_hi ~ L21_hi
               local C2_lo = L02_lo ~ L07_lo ~ L12_lo ~ L17_lo ~ L22_lo
               local C2_hi = L02_hi ~ L07_hi ~ L12_hi ~ L17_hi ~ L22_hi
               local C3_lo = L03_lo ~ L08_lo ~ L13_lo ~ L18_lo ~ L23_lo
               local C3_hi = L03_hi ~ L08_hi ~ L13_hi ~ L18_hi ~ L23_hi
               local C4_lo = L04_lo ~ L09_lo ~ L14_lo ~ L19_lo ~ L24_lo
               local C4_hi = L04_hi ~ L09_hi ~ L14_hi ~ L19_hi ~ L24_hi
               local C5_lo = L05_lo ~ L10_lo ~ L15_lo ~ L20_lo ~ L25_lo
               local C5_hi = L05_hi ~ L10_hi ~ L15_hi ~ L20_hi ~ L25_hi
               local D_lo = C1_lo ~ C3_lo<<1 ~ C3_hi>>31
               local D_hi = C1_hi ~ C3_hi<<1 ~ C3_lo>>31
               local T0_lo = D_lo ~ L02_lo
               local T0_hi = D_hi ~ L02_hi
               local T1_lo = D_lo ~ L07_lo
               local T1_hi = D_hi ~ L07_hi
               local T2_lo = D_lo ~ L12_lo
               local T2_hi = D_hi ~ L12_hi
               local T3_lo = D_lo ~ L17_lo
               local T3_hi = D_hi ~ L17_hi
               local T4_lo = D_lo ~ L22_lo
               local T4_hi = D_hi ~ L22_hi
               L02_lo = T1_lo>>20 ~ T1_hi<<12
               L02_hi = T1_hi>>20 ~ T1_lo<<12
               L07_lo = T3_lo>>19 ~ T3_hi<<13
               L07_hi = T3_hi>>19 ~ T3_lo<<13
               L12_lo = T0_lo<<1 ~ T0_hi>>31
               L12_hi = T0_hi<<1 ~ T0_lo>>31
               L17_lo = T2_lo<<10 ~ T2_hi>>22
               L17_hi = T2_hi<<10 ~ T2_lo>>22
               L22_lo = T4_lo<<2 ~ T4_hi>>30
               L22_hi = T4_hi<<2 ~ T4_lo>>30
               D_lo = C2_lo ~ C4_lo<<1 ~ C4_hi>>31
               D_hi = C2_hi ~ C4_hi<<1 ~ C4_lo>>31
               T0_lo = D_lo ~ L03_lo
               T0_hi = D_hi ~ L03_hi
               T1_lo = D_lo ~ L08_lo
               T1_hi = D_hi ~ L08_hi
               T2_lo = D_lo ~ L13_lo
               T2_hi = D_hi ~ L13_hi
               T3_lo = D_lo ~ L18_lo
               T3_hi = D_hi ~ L18_hi
               T4_lo = D_lo ~ L23_lo
               T4_hi = D_hi ~ L23_hi
               L03_lo = T2_lo>>21 ~ T2_hi<<11
               L03_hi = T2_hi>>21 ~ T2_lo<<11
               L08_lo = T4_lo>>3 ~ T4_hi<<29
               L08_hi = T4_hi>>3 ~ T4_lo<<29
               L13_lo = T1_lo<<6 ~ T1_hi>>26
               L13_hi = T1_hi<<6 ~ T1_lo>>26
               L18_lo = T3_lo<<15 ~ T3_hi>>17
               L18_hi = T3_hi<<15 ~ T3_lo>>17
               L23_lo = T0_lo>>2 ~ T0_hi<<30
               L23_hi = T0_hi>>2 ~ T0_lo<<30
               D_lo = C3_lo ~ C5_lo<<1 ~ C5_hi>>31
               D_hi = C3_hi ~ C5_hi<<1 ~ C5_lo>>31
               T0_lo = D_lo ~ L04_lo
               T0_hi = D_hi ~ L04_hi
               T1_lo = D_lo ~ L09_lo
               T1_hi = D_hi ~ L09_hi
               T2_lo = D_lo ~ L14_lo
               T2_hi = D_hi ~ L14_hi
               T3_lo = D_lo ~ L19_lo
               T3_hi = D_hi ~ L19_hi
               T4_lo = D_lo ~ L24_lo
               T4_hi = D_hi ~ L24_hi
               L04_lo = T3_lo<<21 ~ T3_hi>>11
               L04_hi = T3_hi<<21 ~ T3_lo>>11
               L09_lo = T0_lo<<28 ~ T0_hi>>4
               L09_hi = T0_hi<<28 ~ T0_lo>>4
               L14_lo = T2_lo<<25 ~ T2_hi>>7
               L14_hi = T2_hi<<25 ~ T2_lo>>7
               L19_lo = T4_lo>>8 ~ T4_hi<<24
               L19_hi = T4_hi>>8 ~ T4_lo<<24
               L24_lo = T1_lo>>9 ~ T1_hi<<23
               L24_hi = T1_hi>>9 ~ T1_lo<<23
               D_lo = C4_lo ~ C1_lo<<1 ~ C1_hi>>31
               D_hi = C4_hi ~ C1_hi<<1 ~ C1_lo>>31
               T0_lo = D_lo ~ L05_lo
               T0_hi = D_hi ~ L05_hi
               T1_lo = D_lo ~ L10_lo
               T1_hi = D_hi ~ L10_hi
               T2_lo = D_lo ~ L15_lo
               T2_hi = D_hi ~ L15_hi
               T3_lo = D_lo ~ L20_lo
               T3_hi = D_hi ~ L20_hi
               T4_lo = D_lo ~ L25_lo
               T4_hi = D_hi ~ L25_hi
               L05_lo = T4_lo<<14 ~ T4_hi>>18
               L05_hi = T4_hi<<14 ~ T4_lo>>18
               L10_lo = T1_lo<<20 ~ T1_hi>>12
               L10_hi = T1_hi<<20 ~ T1_lo>>12
               L15_lo = T3_lo<<8 ~ T3_hi>>24
               L15_hi = T3_hi<<8 ~ T3_lo>>24
               L20_lo = T0_lo<<27 ~ T0_hi>>5
               L20_hi = T0_hi<<27 ~ T0_lo>>5
               L25_lo = T2_lo>>25 ~ T2_hi<<7
               L25_hi = T2_hi>>25 ~ T2_lo<<7
               D_lo = C5_lo ~ C2_lo<<1 ~ C2_hi>>31
               D_hi = C5_hi ~ C2_hi<<1 ~ C2_lo>>31
               T1_lo = D_lo ~ L06_lo
               T1_hi = D_hi ~ L06_hi
               T2_lo = D_lo ~ L11_lo
               T2_hi = D_hi ~ L11_hi
               T3_lo = D_lo ~ L16_lo
               T3_hi = D_hi ~ L16_hi
               T4_lo = D_lo ~ L21_lo
               T4_hi = D_hi ~ L21_hi
               L06_lo = T2_lo<<3 ~ T2_hi>>29
               L06_hi = T2_hi<<3 ~ T2_lo>>29
               L11_lo = T4_lo<<18 ~ T4_hi>>14
               L11_hi = T4_hi<<18 ~ T4_lo>>14
               L16_lo = T1_lo>>28 ~ T1_hi<<4
               L16_hi = T1_hi>>28 ~ T1_lo<<4
               L21_lo = T3_lo>>23 ~ T3_hi<<9
               L21_hi = T3_hi>>23 ~ T3_lo<<9
               L01_lo = D_lo ~ L01_lo
               L01_hi = D_hi ~ L01_hi
               L01_lo, L02_lo, L03_lo, L04_lo, L05_lo = L01_lo ~ ~L02_lo & L03_lo, L02_lo ~ ~L03_lo & L04_lo, L03_lo ~ ~L04_lo & L05_lo, L04_lo ~ ~L05_lo & L01_lo, L05_lo ~ ~L01_lo & L02_lo
               L01_hi, L02_hi, L03_hi, L04_hi, L05_hi = L01_hi ~ ~L02_hi & L03_hi, L02_hi ~ ~L03_hi & L04_hi, L03_hi ~ ~L04_hi & L05_hi, L04_hi ~ ~L05_hi & L01_hi, L05_hi ~ ~L01_hi & L02_hi
               L06_lo, L07_lo, L08_lo, L09_lo, L10_lo = L09_lo ~ ~L10_lo & L06_lo, L10_lo ~ ~L06_lo & L07_lo, L06_lo ~ ~L07_lo & L08_lo, L07_lo ~ ~L08_lo & L09_lo, L08_lo ~ ~L09_lo & L10_lo
               L06_hi, L07_hi, L08_hi, L09_hi, L10_hi = L09_hi ~ ~L10_hi & L06_hi, L10_hi ~ ~L06_hi & L07_hi, L06_hi ~ ~L07_hi & L08_hi, L07_hi ~ ~L08_hi & L09_hi, L08_hi ~ ~L09_hi & L10_hi
               L11_lo, L12_lo, L13_lo, L14_lo, L15_lo = L12_lo ~ ~L13_lo & L14_lo, L13_lo ~ ~L14_lo & L15_lo, L14_lo ~ ~L15_lo & L11_lo, L15_lo ~ ~L11_lo & L12_lo, L11_lo ~ ~L12_lo & L13_lo
               L11_hi, L12_hi, L13_hi, L14_hi, L15_hi = L12_hi ~ ~L13_hi & L14_hi, L13_hi ~ ~L14_hi & L15_hi, L14_hi ~ ~L15_hi & L11_hi, L15_hi ~ ~L11_hi & L12_hi, L11_hi ~ ~L12_hi & L13_hi
               L16_lo, L17_lo, L18_lo, L19_lo, L20_lo = L20_lo ~ ~L16_lo & L17_lo, L16_lo ~ ~L17_lo & L18_lo, L17_lo ~ ~L18_lo & L19_lo, L18_lo ~ ~L19_lo & L20_lo, L19_lo ~ ~L20_lo & L16_lo
               L16_hi, L17_hi, L18_hi, L19_hi, L20_hi = L20_hi ~ ~L16_hi & L17_hi, L16_hi ~ ~L17_hi & L18_hi, L17_hi ~ ~L18_hi & L19_hi, L18_hi ~ ~L19_hi & L20_hi, L19_hi ~ ~L20_hi & L16_hi
               L21_lo, L22_lo, L23_lo, L24_lo, L25_lo = L23_lo ~ ~L24_lo & L25_lo, L24_lo ~ ~L25_lo & L21_lo, L25_lo ~ ~L21_lo & L22_lo, L21_lo ~ ~L22_lo & L23_lo, L22_lo ~ ~L23_lo & L24_lo
               L21_hi, L22_hi, L23_hi, L24_hi, L25_hi = L23_hi ~ ~L24_hi & L25_hi, L24_hi ~ ~L25_hi & L21_hi, L25_hi ~ ~L21_hi & L22_hi, L21_hi ~ ~L22_hi & L23_hi, L22_hi ~ ~L23_hi & L24_hi
               L01_lo = L01_lo ~ RC_lo[round_idx]
               L01_hi = L01_hi ~ RC_hi[round_idx]
            end
            lanes_lo[1]  = L01_lo;  lanes_hi[1]  = L01_hi
            lanes_lo[2]  = L02_lo;  lanes_hi[2]  = L02_hi
            lanes_lo[3]  = L03_lo;  lanes_hi[3]  = L03_hi
            lanes_lo[4]  = L04_lo;  lanes_hi[4]  = L04_hi
            lanes_lo[5]  = L05_lo;  lanes_hi[5]  = L05_hi
            lanes_lo[6]  = L06_lo;  lanes_hi[6]  = L06_hi
            lanes_lo[7]  = L07_lo;  lanes_hi[7]  = L07_hi
            lanes_lo[8]  = L08_lo;  lanes_hi[8]  = L08_hi
            lanes_lo[9]  = L09_lo;  lanes_hi[9]  = L09_hi
            lanes_lo[10] = L10_lo;  lanes_hi[10] = L10_hi
            lanes_lo[11] = L11_lo;  lanes_hi[11] = L11_hi
            lanes_lo[12] = L12_lo;  lanes_hi[12] = L12_hi
            lanes_lo[13] = L13_lo;  lanes_hi[13] = L13_hi
            lanes_lo[14] = L14_lo;  lanes_hi[14] = L14_hi
            lanes_lo[15] = L15_lo;  lanes_hi[15] = L15_hi
            lanes_lo[16] = L16_lo;  lanes_hi[16] = L16_hi
            lanes_lo[17] = L17_lo;  lanes_hi[17] = L17_hi
            lanes_lo[18] = L18_lo;  lanes_hi[18] = L18_hi
            lanes_lo[19] = L19_lo;  lanes_hi[19] = L19_hi
            lanes_lo[20] = L20_lo;  lanes_hi[20] = L20_hi
            lanes_lo[21] = L21_lo;  lanes_hi[21] = L21_hi
            lanes_lo[22] = L22_lo;  lanes_hi[22] = L22_hi
            lanes_lo[23] = L23_lo;  lanes_hi[23] = L23_hi
            lanes_lo[24] = L24_lo;  lanes_hi[24] = L24_hi
            lanes_lo[25] = L25_lo;  lanes_hi[25] = L25_hi
         end
      end

      local function blake2s_feed_64(H, str, offs, size, bytes_compressed, last_block_size, is_last_node)
         -- offs >= 0, size >= 0, size is multiple of 64
         local W = common_W
         local h1, h2, h3, h4, h5, h6, h7, h8 = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
         for pos = offs + 1, offs + size, 64 do
            if str then
               W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16] =
                  string_unpack("<i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4", str, pos)
            end
            local v0, v1, v2, v3, v4, v5, v6, v7 = h1, h2, h3, h4, h5, h6, h7, h8
            local v8, v9, vA, vB, vC, vD, vE, vF = sha2_H_hi[1], sha2_H_hi[2], sha2_H_hi[3], sha2_H_hi[4], sha2_H_hi[5], sha2_H_hi[6], sha2_H_hi[7], sha2_H_hi[8]
            bytes_compressed = bytes_compressed + (last_block_size or 64)
            local t0 = bytes_compressed % 2^32
            local t1 = (bytes_compressed - t0) / 2^32
            t0 = (t0 + 2^31) % 2^32 - 2^31  -- convert to int32 range (-2^31)..(2^31-1) to avoid "number has no integer representation" error while XORing
            vC = vC ~ t0  -- t0 = low_4_bytes(bytes_compressed)
            vD = vD ~ t1  -- t1 = high_4_bytes(bytes_compressed)
            if last_block_size then  -- flag f0
               vE = ~vE
            end
            if is_last_node then  -- flag f1
               vF = ~vF
            end
            for j = 1, 10 do
               local row = sigma[j]
               v0 = v0 + v4 + W[row[1]]
               vC = vC ~ v0
               vC = vC >> 16 | vC << 16
               v8 = v8 + vC
               v4 = v4 ~ v8
               v4 = v4 >> 12 | v4 << 20
               v0 = v0 + v4 + W[row[2]]
               vC = vC ~ v0
               vC = vC >> 8 | vC << 24
               v8 = v8 + vC
               v4 = v4 ~ v8
               v4 = v4 >> 7 | v4 << 25
               v1 = v1 + v5 + W[row[3]]
               vD = vD ~ v1
               vD = vD >> 16 | vD << 16
               v9 = v9 + vD
               v5 = v5 ~ v9
               v5 = v5 >> 12 | v5 << 20
               v1 = v1 + v5 + W[row[4]]
               vD = vD ~ v1
               vD = vD >> 8 | vD << 24
               v9 = v9 + vD
               v5 = v5 ~ v9
               v5 = v5 >> 7 | v5 << 25
               v2 = v2 + v6 + W[row[5]]
               vE = vE ~ v2
               vE = vE >> 16 | vE << 16
               vA = vA + vE
               v6 = v6 ~ vA
               v6 = v6 >> 12 | v6 << 20
               v2 = v2 + v6 + W[row[6]]
               vE = vE ~ v2
               vE = vE >> 8 | vE << 24
               vA = vA + vE
               v6 = v6 ~ vA
               v6 = v6 >> 7 | v6 << 25
               v3 = v3 + v7 + W[row[7]]
               vF = vF ~ v3
               vF = vF >> 16 | vF << 16
               vB = vB + vF
               v7 = v7 ~ vB
               v7 = v7 >> 12 | v7 << 20
               v3 = v3 + v7 + W[row[8]]
               vF = vF ~ v3
               vF = vF >> 8 | vF << 24
               vB = vB + vF
               v7 = v7 ~ vB
               v7 = v7 >> 7 | v7 << 25
               v0 = v0 + v5 + W[row[9]]
               vF = vF ~ v0
               vF = vF >> 16 | vF << 16
               vA = vA + vF
               v5 = v5 ~ vA
               v5 = v5 >> 12 | v5 << 20
               v0 = v0 + v5 + W[row[10]]
               vF = vF ~ v0
               vF = vF >> 8 | vF << 24
               vA = vA + vF
               v5 = v5 ~ vA
               v5 = v5 >> 7 | v5 << 25
               v1 = v1 + v6 + W[row[11]]
               vC = vC ~ v1
               vC = vC >> 16 | vC << 16
               vB = vB + vC
               v6 = v6 ~ vB
               v6 = v6 >> 12 | v6 << 20
               v1 = v1 + v6 + W[row[12]]
               vC = vC ~ v1
               vC = vC >> 8 | vC << 24
               vB = vB + vC
               v6 = v6 ~ vB
               v6 = v6 >> 7 | v6 << 25
               v2 = v2 + v7 + W[row[13]]
               vD = vD ~ v2
               vD = vD >> 16 | vD << 16
               v8 = v8 + vD
               v7 = v7 ~ v8
               v7 = v7 >> 12 | v7 << 20
               v2 = v2 + v7 + W[row[14]]
               vD = vD ~ v2
               vD = vD >> 8 | vD << 24
               v8 = v8 + vD
               v7 = v7 ~ v8
               v7 = v7 >> 7 | v7 << 25
               v3 = v3 + v4 + W[row[15]]
               vE = vE ~ v3
               vE = vE >> 16 | vE << 16
               v9 = v9 + vE
               v4 = v4 ~ v9
               v4 = v4 >> 12 | v4 << 20
               v3 = v3 + v4 + W[row[16]]
               vE = vE ~ v3
               vE = vE >> 8 | vE << 24
               v9 = v9 + vE
               v4 = v4 ~ v9
               v4 = v4 >> 7 | v4 << 25
            end
            h1 = h1 ~ v0 ~ v8
            h2 = h2 ~ v1 ~ v9
            h3 = h3 ~ v2 ~ vA
            h4 = h4 ~ v3 ~ vB
            h5 = h5 ~ v4 ~ vC
            h6 = h6 ~ v5 ~ vD
            h7 = h7 ~ v6 ~ vE
            h8 = h8 ~ v7 ~ vF
         end
         H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8] = h1, h2, h3, h4, h5, h6, h7, h8
         return bytes_compressed
      end

      local function blake2b_feed_128(H_lo, H_hi, str, offs, size, bytes_compressed, last_block_size, is_last_node)
         -- offs >= 0, size >= 0, size is multiple of 128
         local W = common_W
         local h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo = H_lo[1], H_lo[2], H_lo[3], H_lo[4], H_lo[5], H_lo[6], H_lo[7], H_lo[8]
         local h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi = H_hi[1], H_hi[2], H_hi[3], H_hi[4], H_hi[5], H_hi[6], H_hi[7], H_hi[8]
         for pos = offs + 1, offs + size, 128 do
            if str then
               W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16],
               W[17], W[18], W[19], W[20], W[21], W[22], W[23], W[24], W[25], W[26], W[27], W[28], W[29], W[30], W[31], W[32] =
                  string_unpack("<i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4", str, pos)
            end
            local v0_lo, v1_lo, v2_lo, v3_lo, v4_lo, v5_lo, v6_lo, v7_lo = h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo
            local v0_hi, v1_hi, v2_hi, v3_hi, v4_hi, v5_hi, v6_hi, v7_hi = h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi
            local v8_lo, v9_lo, vA_lo, vB_lo, vC_lo, vD_lo, vE_lo, vF_lo = sha2_H_lo[1], sha2_H_lo[2], sha2_H_lo[3], sha2_H_lo[4], sha2_H_lo[5], sha2_H_lo[6], sha2_H_lo[7], sha2_H_lo[8]
            local v8_hi, v9_hi, vA_hi, vB_hi, vC_hi, vD_hi, vE_hi, vF_hi = sha2_H_hi[1], sha2_H_hi[2], sha2_H_hi[3], sha2_H_hi[4], sha2_H_hi[5], sha2_H_hi[6], sha2_H_hi[7], sha2_H_hi[8]
            bytes_compressed = bytes_compressed + (last_block_size or 128)
            local t0_lo = bytes_compressed % 2^32
            local t0_hi = (bytes_compressed - t0_lo) / 2^32
            t0_lo = (t0_lo + 2^31) % 2^32 - 2^31  -- convert to int32 range (-2^31)..(2^31-1) to avoid "number has no integer representation" error while XORing
            vC_lo = vC_lo ~ t0_lo  -- t0 = low_8_bytes(bytes_compressed)
            vC_hi = vC_hi ~ t0_hi
            -- t1 = high_8_bytes(bytes_compressed) = 0,  message length is always below 2^53 bytes
            if last_block_size then  -- flag f0
               vE_lo = ~vE_lo
               vE_hi = ~vE_hi
            end
            if is_last_node then  -- flag f1
               vF_lo = ~vF_lo
               vF_hi = ~vF_hi
            end
            for j = 1, 12 do
               local row = sigma[j]
               local k = row[1] * 2
               v0_lo = v0_lo % 2^32 + v4_lo % 2^32 + W[k-1] % 2^32
               v0_hi = v0_hi + v4_hi + floor(v0_lo / 2^32) + W[k]
               v0_lo = 0|((v0_lo + 2^31) % 2^32 - 2^31)
               vC_lo, vC_hi = vC_hi ~ v0_hi, vC_lo ~ v0_lo
               v8_lo = v8_lo % 2^32 + vC_lo % 2^32
               v8_hi = v8_hi + vC_hi + floor(v8_lo / 2^32)
               v8_lo = 0|((v8_lo + 2^31) % 2^32 - 2^31)
               v4_lo, v4_hi = v4_lo ~ v8_lo, v4_hi ~ v8_hi
               v4_lo, v4_hi = v4_lo >> 24 | v4_hi << 8, v4_hi >> 24 | v4_lo << 8
               k = row[2] * 2
               v0_lo = v0_lo % 2^32 + v4_lo % 2^32 + W[k-1] % 2^32
               v0_hi = v0_hi + v4_hi + floor(v0_lo / 2^32) + W[k]
               v0_lo = 0|((v0_lo + 2^31) % 2^32 - 2^31)
               vC_lo, vC_hi = vC_lo ~ v0_lo, vC_hi ~ v0_hi
               vC_lo, vC_hi = vC_lo >> 16 | vC_hi << 16, vC_hi >> 16 | vC_lo << 16
               v8_lo = v8_lo % 2^32 + vC_lo % 2^32
               v8_hi = v8_hi + vC_hi + floor(v8_lo / 2^32)
               v8_lo = 0|((v8_lo + 2^31) % 2^32 - 2^31)
               v4_lo, v4_hi = v4_lo ~ v8_lo, v4_hi ~ v8_hi
               v4_lo, v4_hi = v4_lo << 1 | v4_hi >> 31, v4_hi << 1 | v4_lo >> 31
               k = row[3] * 2
               v1_lo = v1_lo % 2^32 + v5_lo % 2^32 + W[k-1] % 2^32
               v1_hi = v1_hi + v5_hi + floor(v1_lo / 2^32) + W[k]
               v1_lo = 0|((v1_lo + 2^31) % 2^32 - 2^31)
               vD_lo, vD_hi = vD_hi ~ v1_hi, vD_lo ~ v1_lo
               v9_lo = v9_lo % 2^32 + vD_lo % 2^32
               v9_hi = v9_hi + vD_hi + floor(v9_lo / 2^32)
               v9_lo = 0|((v9_lo + 2^31) % 2^32 - 2^31)
               v5_lo, v5_hi = v5_lo ~ v9_lo, v5_hi ~ v9_hi
               v5_lo, v5_hi = v5_lo >> 24 | v5_hi << 8, v5_hi >> 24 | v5_lo << 8
               k = row[4] * 2
               v1_lo = v1_lo % 2^32 + v5_lo % 2^32 + W[k-1] % 2^32
               v1_hi = v1_hi + v5_hi + floor(v1_lo / 2^32) + W[k]
               v1_lo = 0|((v1_lo + 2^31) % 2^32 - 2^31)
               vD_lo, vD_hi = vD_lo ~ v1_lo, vD_hi ~ v1_hi
               vD_lo, vD_hi = vD_lo >> 16 | vD_hi << 16, vD_hi >> 16 | vD_lo << 16
               v9_lo = v9_lo % 2^32 + vD_lo % 2^32
               v9_hi = v9_hi + vD_hi + floor(v9_lo / 2^32)
               v9_lo = 0|((v9_lo + 2^31) % 2^32 - 2^31)
               v5_lo, v5_hi = v5_lo ~ v9_lo, v5_hi ~ v9_hi
               v5_lo, v5_hi = v5_lo << 1 | v5_hi >> 31, v5_hi << 1 | v5_lo >> 31
               k = row[5] * 2
               v2_lo = v2_lo % 2^32 + v6_lo % 2^32 + W[k-1] % 2^32
               v2_hi = v2_hi + v6_hi + floor(v2_lo / 2^32) + W[k]
               v2_lo = 0|((v2_lo + 2^31) % 2^32 - 2^31)
               vE_lo, vE_hi = vE_hi ~ v2_hi, vE_lo ~ v2_lo
               vA_lo = vA_lo % 2^32 + vE_lo % 2^32
               vA_hi = vA_hi + vE_hi + floor(vA_lo / 2^32)
               vA_lo = 0|((vA_lo + 2^31) % 2^32 - 2^31)
               v6_lo, v6_hi = v6_lo ~ vA_lo, v6_hi ~ vA_hi
               v6_lo, v6_hi = v6_lo >> 24 | v6_hi << 8, v6_hi >> 24 | v6_lo << 8
               k = row[6] * 2
               v2_lo = v2_lo % 2^32 + v6_lo % 2^32 + W[k-1] % 2^32
               v2_hi = v2_hi + v6_hi + floor(v2_lo / 2^32) + W[k]
               v2_lo = 0|((v2_lo + 2^31) % 2^32 - 2^31)
               vE_lo, vE_hi = vE_lo ~ v2_lo, vE_hi ~ v2_hi
               vE_lo, vE_hi = vE_lo >> 16 | vE_hi << 16, vE_hi >> 16 | vE_lo << 16
               vA_lo = vA_lo % 2^32 + vE_lo % 2^32
               vA_hi = vA_hi + vE_hi + floor(vA_lo / 2^32)
               vA_lo = 0|((vA_lo + 2^31) % 2^32 - 2^31)
               v6_lo, v6_hi = v6_lo ~ vA_lo, v6_hi ~ vA_hi
               v6_lo, v6_hi = v6_lo << 1 | v6_hi >> 31, v6_hi << 1 | v6_lo >> 31
               k = row[7] * 2
               v3_lo = v3_lo % 2^32 + v7_lo % 2^32 + W[k-1] % 2^32
               v3_hi = v3_hi + v7_hi + floor(v3_lo / 2^32) + W[k]
               v3_lo = 0|((v3_lo + 2^31) % 2^32 - 2^31)
               vF_lo, vF_hi = vF_hi ~ v3_hi, vF_lo ~ v3_lo
               vB_lo = vB_lo % 2^32 + vF_lo % 2^32
               vB_hi = vB_hi + vF_hi + floor(vB_lo / 2^32)
               vB_lo = 0|((vB_lo + 2^31) % 2^32 - 2^31)
               v7_lo, v7_hi = v7_lo ~ vB_lo, v7_hi ~ vB_hi
               v7_lo, v7_hi = v7_lo >> 24 | v7_hi << 8, v7_hi >> 24 | v7_lo << 8
               k = row[8] * 2
               v3_lo = v3_lo % 2^32 + v7_lo % 2^32 + W[k-1] % 2^32
               v3_hi = v3_hi + v7_hi + floor(v3_lo / 2^32) + W[k]
               v3_lo = 0|((v3_lo + 2^31) % 2^32 - 2^31)
               vF_lo, vF_hi = vF_lo ~ v3_lo, vF_hi ~ v3_hi
               vF_lo, vF_hi = vF_lo >> 16 | vF_hi << 16, vF_hi >> 16 | vF_lo << 16
               vB_lo = vB_lo % 2^32 + vF_lo % 2^32
               vB_hi = vB_hi + vF_hi + floor(vB_lo / 2^32)
               vB_lo = 0|((vB_lo + 2^31) % 2^32 - 2^31)
               v7_lo, v7_hi = v7_lo ~ vB_lo, v7_hi ~ vB_hi
               v7_lo, v7_hi = v7_lo << 1 | v7_hi >> 31, v7_hi << 1 | v7_lo >> 31
               k = row[9] * 2
               v0_lo = v0_lo % 2^32 + v5_lo % 2^32 + W[k-1] % 2^32
               v0_hi = v0_hi + v5_hi + floor(v0_lo / 2^32) + W[k]
               v0_lo = 0|((v0_lo + 2^31) % 2^32 - 2^31)
               vF_lo, vF_hi = vF_hi ~ v0_hi, vF_lo ~ v0_lo
               vA_lo = vA_lo % 2^32 + vF_lo % 2^32
               vA_hi = vA_hi + vF_hi + floor(vA_lo / 2^32)
               vA_lo = 0|((vA_lo + 2^31) % 2^32 - 2^31)
               v5_lo, v5_hi = v5_lo ~ vA_lo, v5_hi ~ vA_hi
               v5_lo, v5_hi = v5_lo >> 24 | v5_hi << 8, v5_hi >> 24 | v5_lo << 8
               k = row[10] * 2
               v0_lo = v0_lo % 2^32 + v5_lo % 2^32 + W[k-1] % 2^32
               v0_hi = v0_hi + v5_hi + floor(v0_lo / 2^32) + W[k]
               v0_lo = 0|((v0_lo + 2^31) % 2^32 - 2^31)
               vF_lo, vF_hi = vF_lo ~ v0_lo, vF_hi ~ v0_hi
               vF_lo, vF_hi = vF_lo >> 16 | vF_hi << 16, vF_hi >> 16 | vF_lo << 16
               vA_lo = vA_lo % 2^32 + vF_lo % 2^32
               vA_hi = vA_hi + vF_hi + floor(vA_lo / 2^32)
               vA_lo = 0|((vA_lo + 2^31) % 2^32 - 2^31)
               v5_lo, v5_hi = v5_lo ~ vA_lo, v5_hi ~ vA_hi
               v5_lo, v5_hi = v5_lo << 1 | v5_hi >> 31, v5_hi << 1 | v5_lo >> 31
               k = row[11] * 2
               v1_lo = v1_lo % 2^32 + v6_lo % 2^32 + W[k-1] % 2^32
               v1_hi = v1_hi + v6_hi + floor(v1_lo / 2^32) + W[k]
               v1_lo = 0|((v1_lo + 2^31) % 2^32 - 2^31)
               vC_lo, vC_hi = vC_hi ~ v1_hi, vC_lo ~ v1_lo
               vB_lo = vB_lo % 2^32 + vC_lo % 2^32
               vB_hi = vB_hi + vC_hi + floor(vB_lo / 2^32)
               vB_lo = 0|((vB_lo + 2^31) % 2^32 - 2^31)
               v6_lo, v6_hi = v6_lo ~ vB_lo, v6_hi ~ vB_hi
               v6_lo, v6_hi = v6_lo >> 24 | v6_hi << 8, v6_hi >> 24 | v6_lo << 8
               k = row[12] * 2
               v1_lo = v1_lo % 2^32 + v6_lo % 2^32 + W[k-1] % 2^32
               v1_hi = v1_hi + v6_hi + floor(v1_lo / 2^32) + W[k]
               v1_lo = 0|((v1_lo + 2^31) % 2^32 - 2^31)
               vC_lo, vC_hi = vC_lo ~ v1_lo, vC_hi ~ v1_hi
               vC_lo, vC_hi = vC_lo >> 16 | vC_hi << 16, vC_hi >> 16 | vC_lo << 16
               vB_lo = vB_lo % 2^32 + vC_lo % 2^32
               vB_hi = vB_hi + vC_hi + floor(vB_lo / 2^32)
               vB_lo = 0|((vB_lo + 2^31) % 2^32 - 2^31)
               v6_lo, v6_hi = v6_lo ~ vB_lo, v6_hi ~ vB_hi
               v6_lo, v6_hi = v6_lo << 1 | v6_hi >> 31, v6_hi << 1 | v6_lo >> 31
               k = row[13] * 2
               v2_lo = v2_lo % 2^32 + v7_lo % 2^32 + W[k-1] % 2^32
               v2_hi = v2_hi + v7_hi + floor(v2_lo / 2^32) + W[k]
               v2_lo = 0|((v2_lo + 2^31) % 2^32 - 2^31)
               vD_lo, vD_hi = vD_hi ~ v2_hi, vD_lo ~ v2_lo
               v8_lo = v8_lo % 2^32 + vD_lo % 2^32
               v8_hi = v8_hi + vD_hi + floor(v8_lo / 2^32)
               v8_lo = 0|((v8_lo + 2^31) % 2^32 - 2^31)
               v7_lo, v7_hi = v7_lo ~ v8_lo, v7_hi ~ v8_hi
               v7_lo, v7_hi = v7_lo >> 24 | v7_hi << 8, v7_hi >> 24 | v7_lo << 8
               k = row[14] * 2
               v2_lo = v2_lo % 2^32 + v7_lo % 2^32 + W[k-1] % 2^32
               v2_hi = v2_hi + v7_hi + floor(v2_lo / 2^32) + W[k]
               v2_lo = 0|((v2_lo + 2^31) % 2^32 - 2^31)
               vD_lo, vD_hi = vD_lo ~ v2_lo, vD_hi ~ v2_hi
               vD_lo, vD_hi = vD_lo >> 16 | vD_hi << 16, vD_hi >> 16 | vD_lo << 16
               v8_lo = v8_lo % 2^32 + vD_lo % 2^32
               v8_hi = v8_hi + vD_hi + floor(v8_lo / 2^32)
               v8_lo = 0|((v8_lo + 2^31) % 2^32 - 2^31)
               v7_lo, v7_hi = v7_lo ~ v8_lo, v7_hi ~ v8_hi
               v7_lo, v7_hi = v7_lo << 1 | v7_hi >> 31, v7_hi << 1 | v7_lo >> 31
               k = row[15] * 2
               v3_lo = v3_lo % 2^32 + v4_lo % 2^32 + W[k-1] % 2^32
               v3_hi = v3_hi + v4_hi + floor(v3_lo / 2^32) + W[k]
               v3_lo = 0|((v3_lo + 2^31) % 2^32 - 2^31)
               vE_lo, vE_hi = vE_hi ~ v3_hi, vE_lo ~ v3_lo
               v9_lo = v9_lo % 2^32 + vE_lo % 2^32
               v9_hi = v9_hi + vE_hi + floor(v9_lo / 2^32)
               v9_lo = 0|((v9_lo + 2^31) % 2^32 - 2^31)
               v4_lo, v4_hi = v4_lo ~ v9_lo, v4_hi ~ v9_hi
               v4_lo, v4_hi = v4_lo >> 24 | v4_hi << 8, v4_hi >> 24 | v4_lo << 8
               k = row[16] * 2
               v3_lo = v3_lo % 2^32 + v4_lo % 2^32 + W[k-1] % 2^32
               v3_hi = v3_hi + v4_hi + floor(v3_lo / 2^32) + W[k]
               v3_lo = 0|((v3_lo + 2^31) % 2^32 - 2^31)
               vE_lo, vE_hi = vE_lo ~ v3_lo, vE_hi ~ v3_hi
               vE_lo, vE_hi = vE_lo >> 16 | vE_hi << 16, vE_hi >> 16 | vE_lo << 16
               v9_lo = v9_lo % 2^32 + vE_lo % 2^32
               v9_hi = v9_hi + vE_hi + floor(v9_lo / 2^32)
               v9_lo = 0|((v9_lo + 2^31) % 2^32 - 2^31)
               v4_lo, v4_hi = v4_lo ~ v9_lo, v4_hi ~ v9_hi
               v4_lo, v4_hi = v4_lo << 1 | v4_hi >> 31, v4_hi << 1 | v4_lo >> 31
            end
            h1_lo = h1_lo ~ v0_lo ~ v8_lo
            h2_lo = h2_lo ~ v1_lo ~ v9_lo
            h3_lo = h3_lo ~ v2_lo ~ vA_lo
            h4_lo = h4_lo ~ v3_lo ~ vB_lo
            h5_lo = h5_lo ~ v4_lo ~ vC_lo
            h6_lo = h6_lo ~ v5_lo ~ vD_lo
            h7_lo = h7_lo ~ v6_lo ~ vE_lo
            h8_lo = h8_lo ~ v7_lo ~ vF_lo
            h1_hi = h1_hi ~ v0_hi ~ v8_hi
            h2_hi = h2_hi ~ v1_hi ~ v9_hi
            h3_hi = h3_hi ~ v2_hi ~ vA_hi
            h4_hi = h4_hi ~ v3_hi ~ vB_hi
            h5_hi = h5_hi ~ v4_hi ~ vC_hi
            h6_hi = h6_hi ~ v5_hi ~ vD_hi
            h7_hi = h7_hi ~ v6_hi ~ vE_hi
            h8_hi = h8_hi ~ v7_hi ~ vF_hi
         end
         H_lo[1], H_lo[2], H_lo[3], H_lo[4], H_lo[5], H_lo[6], H_lo[7], H_lo[8] = h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo
         H_hi[1], H_hi[2], H_hi[3], H_hi[4], H_hi[5], H_hi[6], H_hi[7], H_hi[8] = h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi
         return bytes_compressed
      end

      local function blake3_feed_64(str, offs, size, flags, chunk_index, H_in, H_out, wide_output, block_length)
         -- offs >= 0, size >= 0, size is multiple of 64
         block_length = block_length or 64
         local W = common_W
         local h1, h2, h3, h4, h5, h6, h7, h8 = H_in[1], H_in[2], H_in[3], H_in[4], H_in[5], H_in[6], H_in[7], H_in[8]
         H_out = H_out or H_in
         for pos = offs + 1, offs + size, 64 do
            if str then
               W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16] =
                  string_unpack("<i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4", str, pos)
            end
            local v0, v1, v2, v3, v4, v5, v6, v7 = h1, h2, h3, h4, h5, h6, h7, h8
            local v8, v9, vA, vB = sha2_H_hi[1], sha2_H_hi[2], sha2_H_hi[3], sha2_H_hi[4]
            local t0 = chunk_index % 2^32         -- t0 = low_4_bytes(chunk_index)
            local t1 = (chunk_index - t0) / 2^32  -- t1 = high_4_bytes(chunk_index)
            t0 = (t0 + 2^31) % 2^32 - 2^31  -- convert to int32 range (-2^31)..(2^31-1) to avoid "number has no integer representation" error while ORing
            local vC, vD, vE, vF = 0|t0, 0|t1, block_length, flags
            for j = 1, 7 do
               v0 = v0 + v4 + W[perm_blake3[j]]
               vC = vC ~ v0
               vC = vC >> 16 | vC << 16
               v8 = v8 + vC
               v4 = v4 ~ v8
               v4 = v4 >> 12 | v4 << 20
               v0 = v0 + v4 + W[perm_blake3[j + 14]]
               vC = vC ~ v0
               vC = vC >> 8 | vC << 24
               v8 = v8 + vC
               v4 = v4 ~ v8
               v4 = v4 >> 7 | v4 << 25
               v1 = v1 + v5 + W[perm_blake3[j + 1]]
               vD = vD ~ v1
               vD = vD >> 16 | vD << 16
               v9 = v9 + vD
               v5 = v5 ~ v9
               v5 = v5 >> 12 | v5 << 20
               v1 = v1 + v5 + W[perm_blake3[j + 2]]
               vD = vD ~ v1
               vD = vD >> 8 | vD << 24
               v9 = v9 + vD
               v5 = v5 ~ v9
               v5 = v5 >> 7 | v5 << 25
               v2 = v2 + v6 + W[perm_blake3[j + 16]]
               vE = vE ~ v2
               vE = vE >> 16 | vE << 16
               vA = vA + vE
               v6 = v6 ~ vA
               v6 = v6 >> 12 | v6 << 20
               v2 = v2 + v6 + W[perm_blake3[j + 7]]
               vE = vE ~ v2
               vE = vE >> 8 | vE << 24
               vA = vA + vE
               v6 = v6 ~ vA
               v6 = v6 >> 7 | v6 << 25
               v3 = v3 + v7 + W[perm_blake3[j + 15]]
               vF = vF ~ v3
               vF = vF >> 16 | vF << 16
               vB = vB + vF
               v7 = v7 ~ vB
               v7 = v7 >> 12 | v7 << 20
               v3 = v3 + v7 + W[perm_blake3[j + 17]]
               vF = vF ~ v3
               vF = vF >> 8 | vF << 24
               vB = vB + vF
               v7 = v7 ~ vB
               v7 = v7 >> 7 | v7 << 25
               v0 = v0 + v5 + W[perm_blake3[j + 21]]
               vF = vF ~ v0
               vF = vF >> 16 | vF << 16
               vA = vA + vF
               v5 = v5 ~ vA
               v5 = v5 >> 12 | v5 << 20
               v0 = v0 + v5 + W[perm_blake3[j + 5]]
               vF = vF ~ v0
               vF = vF >> 8 | vF << 24
               vA = vA + vF
               v5 = v5 ~ vA
               v5 = v5 >> 7 | v5 << 25
               v1 = v1 + v6 + W[perm_blake3[j + 3]]
               vC = vC ~ v1
               vC = vC >> 16 | vC << 16
               vB = vB + vC
               v6 = v6 ~ vB
               v6 = v6 >> 12 | v6 << 20
               v1 = v1 + v6 + W[perm_blake3[j + 6]]
               vC = vC ~ v1
               vC = vC >> 8 | vC << 24
               vB = vB + vC
               v6 = v6 ~ vB
               v6 = v6 >> 7 | v6 << 25
               v2 = v2 + v7 + W[perm_blake3[j + 4]]
               vD = vD ~ v2
               vD = vD >> 16 | vD << 16
               v8 = v8 + vD
               v7 = v7 ~ v8
               v7 = v7 >> 12 | v7 << 20
               v2 = v2 + v7 + W[perm_blake3[j + 18]]
               vD = vD ~ v2
               vD = vD >> 8 | vD << 24
               v8 = v8 + vD
               v7 = v7 ~ v8
               v7 = v7 >> 7 | v7 << 25
               v3 = v3 + v4 + W[perm_blake3[j + 19]]
               vE = vE ~ v3
               vE = vE >> 16 | vE << 16
               v9 = v9 + vE
               v4 = v4 ~ v9
               v4 = v4 >> 12 | v4 << 20
               v3 = v3 + v4 + W[perm_blake3[j + 20]]
               vE = vE ~ v3
               vE = vE >> 8 | vE << 24
               v9 = v9 + vE
               v4 = v4 ~ v9
               v4 = v4 >> 7 | v4 << 25
            end
            if wide_output then
               H_out[ 9] = h1 ~ v8
               H_out[10] = h2 ~ v9
               H_out[11] = h3 ~ vA
               H_out[12] = h4 ~ vB
               H_out[13] = h5 ~ vC
               H_out[14] = h6 ~ vD
               H_out[15] = h7 ~ vE
               H_out[16] = h8 ~ vF
            end
            h1 = v0 ~ v8
            h2 = v1 ~ v9
            h3 = v2 ~ vA
            h4 = v3 ~ vB
            h5 = v4 ~ vC
            h6 = v5 ~ vD
            h7 = v6 ~ vE
            h8 = v7 ~ vF
         end
         H_out[1], H_out[2], H_out[3], H_out[4], H_out[5], H_out[6], H_out[7], H_out[8] = h1, h2, h3, h4, h5, h6, h7, h8
      end

      return XORA5, XOR_BYTE, sha256_feed_64, sha512_feed_128, md5_feed_64, sha1_feed_64, keccak_feed, blake2s_feed_64, blake2b_feed_128, blake3_feed_64
   ]=](md5_next_shift, md5_K, sha2_K_lo, sha2_K_hi, build_keccak_format, sha3_RC_lo, sha3_RC_hi, sigma, common_W, sha2_H_lo, sha2_H_hi, perm_blake3)

end

XOR = XOR or XORA5

if branch == "LIB32" or branch == "EMUL" then


	-- implementation for Lua 5.1/5.2 (with or without bitwise library available)

	function sha256_feed_64(H, str, offs, size)
		-- offs >= 0, size >= 0, size is multiple of 64
		local W, K = common_W, sha2_K_hi
		local h1, h2, h3, h4, h5, h6, h7, h8 = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
		for pos = offs, offs + size - 1, 64 do
			for j = 1, 16 do
				pos = pos + 4
				local a, b, c, d = byte(str, pos - 3, pos)
				W[j] = ((a * 256 + b) * 256 + c) * 256 + d
			end
			for j = 17, 64 do
				local a, b = W[j-15], W[j-2]
				local a7, a18, b17, b19 = a / 2^7, a / 2^18, b / 2^17, b / 2^19
				W[j] = (XOR(a7 % 1 * (2^32 - 1) + a7, a18 % 1 * (2^32 - 1) + a18, (a - a % 2^3) / 2^3) + W[j-16] + W[j-7]
					+ XOR(b17 % 1 * (2^32 - 1) + b17, b19 % 1 * (2^32 - 1) + b19, (b - b % 2^10) / 2^10)) % 2^32
			end
			local a, b, c, d, e, f, g, h = h1, h2, h3, h4, h5, h6, h7, h8
			for j = 1, 64 do
				e = e % 2^32
				local e6, e11, e7 = e / 2^6, e / 2^11, e * 2^7
				local e7_lo = e7 % 2^32
				local z = AND(e, f) + AND(-1-e, g) + h + K[j] + W[j]
					+ XOR(e6 % 1 * (2^32 - 1) + e6, e11 % 1 * (2^32 - 1) + e11, e7_lo + (e7 - e7_lo) / 2^32)
				h = g
				g = f
				f = e
				e = z + d
				d = c
				c = b
				b = a % 2^32
				local b2, b13, b10 = b / 2^2, b / 2^13, b * 2^10
				local b10_lo = b10 % 2^32
				a = z + AND(d, c) + AND(b, XOR(d, c)) +
					XOR(b2 % 1 * (2^32 - 1) + b2, b13 % 1 * (2^32 - 1) + b13, b10_lo + (b10 - b10_lo) / 2^32)
			end
			h1, h2, h3, h4 = (a + h1) % 2^32, (b + h2) % 2^32, (c + h3) % 2^32, (d + h4) % 2^32
			h5, h6, h7, h8 = (e + h5) % 2^32, (f + h6) % 2^32, (g + h7) % 2^32, (h + h8) % 2^32
		end
		H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8] = h1, h2, h3, h4, h5, h6, h7, h8
	end


	function sha512_feed_128(H_lo, H_hi, str, offs, size)
		-- offs >= 0, size >= 0, size is multiple of 128
		-- W1_hi, W1_lo, W2_hi, W2_lo, ...   Wk_hi = W[2*k-1], Wk_lo = W[2*k]
		local W, K_lo, K_hi = common_W, sha2_K_lo, sha2_K_hi
		local h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo = H_lo[1], H_lo[2], H_lo[3], H_lo[4], H_lo[5], H_lo[6], H_lo[7], H_lo[8]
		local h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi = H_hi[1], H_hi[2], H_hi[3], H_hi[4], H_hi[5], H_hi[6], H_hi[7], H_hi[8]
		for pos = offs, offs + size - 1, 128 do
			for j = 1, 16*2 do
				pos = pos + 4
				local a, b, c, d = byte(str, pos - 3, pos)
				W[j] = ((a * 256 + b) * 256 + c) * 256 + d
			end
			for jj = 17*2, 80*2, 2 do
				local a_hi, a_lo, b_hi, b_lo = W[jj-31], W[jj-30], W[jj-5], W[jj-4]
				local b_hi_6, b_hi_19, b_hi_29, b_lo_19, b_lo_29, a_hi_1, a_hi_7, a_hi_8, a_lo_1, a_lo_8 =
					b_hi % 2^6, b_hi % 2^19, b_hi % 2^29, b_lo % 2^19, b_lo % 2^29, a_hi % 2^1, a_hi % 2^7, a_hi % 2^8, a_lo % 2^1, a_lo % 2^8
				local tmp1 = XOR((a_lo - a_lo_1) / 2^1 + a_hi_1 * 2^31, (a_lo - a_lo_8) / 2^8 + a_hi_8 * 2^24, (a_lo - a_lo % 2^7) / 2^7 + a_hi_7 * 2^25) % 2^32
					+ XOR((b_lo - b_lo_19) / 2^19 + b_hi_19 * 2^13, b_lo_29 * 2^3 + (b_hi - b_hi_29) / 2^29, (b_lo - b_lo % 2^6) / 2^6 + b_hi_6 * 2^26) % 2^32
					+ W[jj-14] + W[jj-32]
				local tmp2 = tmp1 % 2^32
				W[jj-1] = (XOR((a_hi - a_hi_1) / 2^1 + a_lo_1 * 2^31, (a_hi - a_hi_8) / 2^8 + a_lo_8 * 2^24, (a_hi - a_hi_7) / 2^7)
					+ XOR((b_hi - b_hi_19) / 2^19 + b_lo_19 * 2^13, b_hi_29 * 2^3 + (b_lo - b_lo_29) / 2^29, (b_hi - b_hi_6) / 2^6)
					+ W[jj-15] + W[jj-33] + (tmp1 - tmp2) / 2^32) % 2^32
				W[jj] = tmp2
			end
			local a_lo, b_lo, c_lo, d_lo, e_lo, f_lo, g_lo, h_lo = h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo
			local a_hi, b_hi, c_hi, d_hi, e_hi, f_hi, g_hi, h_hi = h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi
			for j = 1, 80 do
				local jj = 2*j
				local e_lo_9, e_lo_14, e_lo_18, e_hi_9, e_hi_14, e_hi_18 = e_lo % 2^9, e_lo % 2^14, e_lo % 2^18, e_hi % 2^9, e_hi % 2^14, e_hi % 2^18
				local tmp1 = (AND(e_lo, f_lo) + AND(-1-e_lo, g_lo)) % 2^32 + h_lo + K_lo[j] + W[jj]
					+ XOR((e_lo - e_lo_14) / 2^14 + e_hi_14 * 2^18, (e_lo - e_lo_18) / 2^18 + e_hi_18 * 2^14, e_lo_9 * 2^23 + (e_hi - e_hi_9) / 2^9) % 2^32
				local z_lo = tmp1 % 2^32
				local z_hi = AND(e_hi, f_hi) + AND(-1-e_hi, g_hi) + h_hi + K_hi[j] + W[jj-1] + (tmp1 - z_lo) / 2^32
					+ XOR((e_hi - e_hi_14) / 2^14 + e_lo_14 * 2^18, (e_hi - e_hi_18) / 2^18 + e_lo_18 * 2^14, e_hi_9 * 2^23 + (e_lo - e_lo_9) / 2^9)
				h_lo = g_lo;  h_hi = g_hi
				g_lo = f_lo;  g_hi = f_hi
				f_lo = e_lo;  f_hi = e_hi
				tmp1 = z_lo + d_lo
				e_lo = tmp1 % 2^32
				e_hi = (z_hi + d_hi + (tmp1 - e_lo) / 2^32) % 2^32
				d_lo = c_lo;  d_hi = c_hi
				c_lo = b_lo;  c_hi = b_hi
				b_lo = a_lo;  b_hi = a_hi
				local b_lo_2, b_lo_7, b_lo_28, b_hi_2, b_hi_7, b_hi_28 = b_lo % 2^2, b_lo % 2^7, b_lo % 2^28, b_hi % 2^2, b_hi % 2^7, b_hi % 2^28
				tmp1 = z_lo + (AND(d_lo, c_lo) + AND(b_lo, XOR(d_lo, c_lo))) % 2^32
					+ XOR((b_lo - b_lo_28) / 2^28 + b_hi_28 * 2^4, b_lo_2 * 2^30 + (b_hi - b_hi_2) / 2^2, b_lo_7 * 2^25 + (b_hi - b_hi_7) / 2^7) % 2^32
				a_lo = tmp1 % 2^32
				a_hi = (z_hi + AND(d_hi, c_hi) + AND(b_hi, XOR(d_hi, c_hi)) + (tmp1 - a_lo) / 2^32
					+ XOR((b_hi - b_hi_28) / 2^28 + b_lo_28 * 2^4, b_hi_2 * 2^30 + (b_lo - b_lo_2) / 2^2, b_hi_7 * 2^25 + (b_lo - b_lo_7) / 2^7)) % 2^32
			end
			a_lo = h1_lo + a_lo
			h1_lo = a_lo % 2^32
			h1_hi = (h1_hi + a_hi + (a_lo - h1_lo) / 2^32) % 2^32
			a_lo = h2_lo + b_lo
			h2_lo = a_lo % 2^32
			h2_hi = (h2_hi + b_hi + (a_lo - h2_lo) / 2^32) % 2^32
			a_lo = h3_lo + c_lo
			h3_lo = a_lo % 2^32
			h3_hi = (h3_hi + c_hi + (a_lo - h3_lo) / 2^32) % 2^32
			a_lo = h4_lo + d_lo
			h4_lo = a_lo % 2^32
			h4_hi = (h4_hi + d_hi + (a_lo - h4_lo) / 2^32) % 2^32
			a_lo = h5_lo + e_lo
			h5_lo = a_lo % 2^32
			h5_hi = (h5_hi + e_hi + (a_lo - h5_lo) / 2^32) % 2^32
			a_lo = h6_lo + f_lo
			h6_lo = a_lo % 2^32
			h6_hi = (h6_hi + f_hi + (a_lo - h6_lo) / 2^32) % 2^32
			a_lo = h7_lo + g_lo
			h7_lo = a_lo % 2^32
			h7_hi = (h7_hi + g_hi + (a_lo - h7_lo) / 2^32) % 2^32
			a_lo = h8_lo + h_lo
			h8_lo = a_lo % 2^32
			h8_hi = (h8_hi + h_hi + (a_lo - h8_lo) / 2^32) % 2^32
		end
		H_lo[1], H_lo[2], H_lo[3], H_lo[4], H_lo[5], H_lo[6], H_lo[7], H_lo[8] = h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo
		H_hi[1], H_hi[2], H_hi[3], H_hi[4], H_hi[5], H_hi[6], H_hi[7], H_hi[8] = h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi
	end


	if branch == "LIB32" then

		function md5_feed_64(H, str, offs, size)
			-- offs >= 0, size >= 0, size is multiple of 64
			local W, K, md5_next_shift = common_W, md5_K, md5_next_shift
			local h1, h2, h3, h4 = H[1], H[2], H[3], H[4]
			for pos = offs, offs + size - 1, 64 do
				for j = 1, 16 do
					pos = pos + 4
					local a, b, c, d = byte(str, pos - 3, pos)
					W[j] = ((d * 256 + c) * 256 + b) * 256 + a
				end
				local a, b, c, d = h1, h2, h3, h4
				local s = 25
				for j = 1, 16 do
					local F = ROR(AND(b, c) + AND(-1-b, d) + a + K[j] + W[j], s) + b
					s = md5_next_shift[s]
					a = d
					d = c
					c = b
					b = F
				end
				s = 27
				for j = 17, 32 do
					local F = ROR(AND(d, b) + AND(-1-d, c) + a + K[j] + W[(5*j-4) % 16 + 1], s) + b
					s = md5_next_shift[s]
					a = d
					d = c
					c = b
					b = F
				end
				s = 28
				for j = 33, 48 do
					local F = ROR(XOR(XOR(b, c), d) + a + K[j] + W[(3*j+2) % 16 + 1], s) + b
					s = md5_next_shift[s]
					a = d
					d = c
					c = b
					b = F
				end
				s = 26
				for j = 49, 64 do
					local F = ROR(XOR(c, OR(b, -1-d)) + a + K[j] + W[(j*7-7) % 16 + 1], s) + b
					s = md5_next_shift[s]
					a = d
					d = c
					c = b
					b = F
				end
				h1 = (a + h1) % 2^32
				h2 = (b + h2) % 2^32
				h3 = (c + h3) % 2^32
				h4 = (d + h4) % 2^32
			end
			H[1], H[2], H[3], H[4] = h1, h2, h3, h4
		end

	elseif branch == "EMUL" then

		function md5_feed_64(H, str, offs, size)
			-- offs >= 0, size >= 0, size is multiple of 64
			local W, K, md5_next_shift = common_W, md5_K, md5_next_shift
			local h1, h2, h3, h4 = H[1], H[2], H[3], H[4]
			for pos = offs, offs + size - 1, 64 do
				for j = 1, 16 do
					pos = pos + 4
					local a, b, c, d = byte(str, pos - 3, pos)
					W[j] = ((d * 256 + c) * 256 + b) * 256 + a
				end
				local a, b, c, d = h1, h2, h3, h4
				local s = 25
				for j = 1, 16 do
					local z = (AND(b, c) + AND(-1-b, d) + a + K[j] + W[j]) % 2^32 / 2^s
					local y = z % 1
					s = md5_next_shift[s]
					a = d
					d = c
					c = b
					b = y * 2^32 + (z - y) + b
				end
				s = 27
				for j = 17, 32 do
					local z = (AND(d, b) + AND(-1-d, c) + a + K[j] + W[(5*j-4) % 16 + 1]) % 2^32 / 2^s
					local y = z % 1
					s = md5_next_shift[s]
					a = d
					d = c
					c = b
					b = y * 2^32 + (z - y) + b
				end
				s = 28
				for j = 33, 48 do
					local z = (XOR(XOR(b, c), d) + a + K[j] + W[(3*j+2) % 16 + 1]) % 2^32 / 2^s
					local y = z % 1
					s = md5_next_shift[s]
					a = d
					d = c
					c = b
					b = y * 2^32 + (z - y) + b
				end
				s = 26
				for j = 49, 64 do
					local z = (XOR(c, OR(b, -1-d)) + a + K[j] + W[(j*7-7) % 16 + 1]) % 2^32 / 2^s
					local y = z % 1
					s = md5_next_shift[s]
					a = d
					d = c
					c = b
					b = y * 2^32 + (z - y) + b
				end
				h1 = (a + h1) % 2^32
				h2 = (b + h2) % 2^32
				h3 = (c + h3) % 2^32
				h4 = (d + h4) % 2^32
			end
			H[1], H[2], H[3], H[4] = h1, h2, h3, h4
		end

	end


	function sha1_feed_64(H, str, offs, size)
		-- offs >= 0, size >= 0, size is multiple of 64
		local W = common_W
		local h1, h2, h3, h4, h5 = H[1], H[2], H[3], H[4], H[5]
		for pos = offs, offs + size - 1, 64 do
			for j = 1, 16 do
				pos = pos + 4
				local a, b, c, d = byte(str, pos - 3, pos)
				W[j] = ((a * 256 + b) * 256 + c) * 256 + d
			end
			for j = 17, 80 do
				local a = XOR(W[j-3], W[j-8], W[j-14], W[j-16]) % 2^32 * 2
				local b = a % 2^32
				W[j] = b + (a - b) / 2^32
			end
			local a, b, c, d, e = h1, h2, h3, h4, h5
			for j = 1, 20 do
				local a5 = a * 2^5
				local z = a5 % 2^32
				z = z + (a5 - z) / 2^32 + AND(b, c) + AND(-1-b, d) + 0x5A827999 + W[j] + e        -- constant = floor(2^30 * sqrt(2))
				e = d
				d = c
				c = b / 2^2
				c = c % 1 * (2^32 - 1) + c
				b = a
				a = z % 2^32
			end
			for j = 21, 40 do
				local a5 = a * 2^5
				local z = a5 % 2^32
				z = z + (a5 - z) / 2^32 + XOR(b, c, d) + 0x6ED9EBA1 + W[j] + e                    -- 2^30 * sqrt(3)
				e = d
				d = c
				c = b / 2^2
				c = c % 1 * (2^32 - 1) + c
				b = a
				a = z % 2^32
			end
			for j = 41, 60 do
				local a5 = a * 2^5
				local z = a5 % 2^32
				z = z + (a5 - z) / 2^32 + AND(d, c) + AND(b, XOR(d, c)) + 0x8F1BBCDC + W[j] + e   -- 2^30 * sqrt(5)
				e = d
				d = c
				c = b / 2^2
				c = c % 1 * (2^32 - 1) + c
				b = a
				a = z % 2^32
			end
			for j = 61, 80 do
				local a5 = a * 2^5
				local z = a5 % 2^32
				z = z + (a5 - z) / 2^32 + XOR(b, c, d) + 0xCA62C1D6 + W[j] + e                    -- 2^30 * sqrt(10)
				e = d
				d = c
				c = b / 2^2
				c = c % 1 * (2^32 - 1) + c
				b = a
				a = z % 2^32
			end
			h1 = (a + h1) % 2^32
			h2 = (b + h2) % 2^32
			h3 = (c + h3) % 2^32
			h4 = (d + h4) % 2^32
			h5 = (e + h5) % 2^32
		end
		H[1], H[2], H[3], H[4], H[5] = h1, h2, h3, h4, h5
	end


	function keccak_feed(lanes_lo, lanes_hi, str, offs, size, block_size_in_bytes)
		-- This is an example of a Lua function having 79 local variables :-)
		-- offs >= 0, size >= 0, size is multiple of block_size_in_bytes, block_size_in_bytes is positive multiple of 8
		local RC_lo, RC_hi = sha3_RC_lo, sha3_RC_hi
		local qwords_qty = block_size_in_bytes / 8
		for pos = offs, offs + size - 1, block_size_in_bytes do
			for j = 1, qwords_qty do
				local a, b, c, d = byte(str, pos + 1, pos + 4)
				lanes_lo[j] = XOR(lanes_lo[j], ((d * 256 + c) * 256 + b) * 256 + a)
				pos = pos + 8
				a, b, c, d = byte(str, pos - 3, pos)
				lanes_hi[j] = XOR(lanes_hi[j], ((d * 256 + c) * 256 + b) * 256 + a)
			end
			local L01_lo, L01_hi, L02_lo, L02_hi, L03_lo, L03_hi, L04_lo, L04_hi, L05_lo, L05_hi, L06_lo, L06_hi, L07_lo, L07_hi, L08_lo, L08_hi,
			L09_lo, L09_hi, L10_lo, L10_hi, L11_lo, L11_hi, L12_lo, L12_hi, L13_lo, L13_hi, L14_lo, L14_hi, L15_lo, L15_hi, L16_lo, L16_hi,
			L17_lo, L17_hi, L18_lo, L18_hi, L19_lo, L19_hi, L20_lo, L20_hi, L21_lo, L21_hi, L22_lo, L22_hi, L23_lo, L23_hi, L24_lo, L24_hi, L25_lo, L25_hi =
				lanes_lo[1], lanes_hi[1], lanes_lo[2], lanes_hi[2], lanes_lo[3], lanes_hi[3], lanes_lo[4], lanes_hi[4], lanes_lo[5], lanes_hi[5],
			lanes_lo[6], lanes_hi[6], lanes_lo[7], lanes_hi[7], lanes_lo[8], lanes_hi[8], lanes_lo[9], lanes_hi[9], lanes_lo[10], lanes_hi[10],
			lanes_lo[11], lanes_hi[11], lanes_lo[12], lanes_hi[12], lanes_lo[13], lanes_hi[13], lanes_lo[14], lanes_hi[14], lanes_lo[15], lanes_hi[15],
			lanes_lo[16], lanes_hi[16], lanes_lo[17], lanes_hi[17], lanes_lo[18], lanes_hi[18], lanes_lo[19], lanes_hi[19], lanes_lo[20], lanes_hi[20],
			lanes_lo[21], lanes_hi[21], lanes_lo[22], lanes_hi[22], lanes_lo[23], lanes_hi[23], lanes_lo[24], lanes_hi[24], lanes_lo[25], lanes_hi[25]
			for round_idx = 1, 24 do
				local C1_lo = XOR(L01_lo, L06_lo, L11_lo, L16_lo, L21_lo)
				local C1_hi = XOR(L01_hi, L06_hi, L11_hi, L16_hi, L21_hi)
				local C2_lo = XOR(L02_lo, L07_lo, L12_lo, L17_lo, L22_lo)
				local C2_hi = XOR(L02_hi, L07_hi, L12_hi, L17_hi, L22_hi)
				local C3_lo = XOR(L03_lo, L08_lo, L13_lo, L18_lo, L23_lo)
				local C3_hi = XOR(L03_hi, L08_hi, L13_hi, L18_hi, L23_hi)
				local C4_lo = XOR(L04_lo, L09_lo, L14_lo, L19_lo, L24_lo)
				local C4_hi = XOR(L04_hi, L09_hi, L14_hi, L19_hi, L24_hi)
				local C5_lo = XOR(L05_lo, L10_lo, L15_lo, L20_lo, L25_lo)
				local C5_hi = XOR(L05_hi, L10_hi, L15_hi, L20_hi, L25_hi)
				local D_lo = XOR(C1_lo, C3_lo * 2 + (C3_hi % 2^32 - C3_hi % 2^31) / 2^31)
				local D_hi = XOR(C1_hi, C3_hi * 2 + (C3_lo % 2^32 - C3_lo % 2^31) / 2^31)
				local T0_lo = XOR(D_lo, L02_lo)
				local T0_hi = XOR(D_hi, L02_hi)
				local T1_lo = XOR(D_lo, L07_lo)
				local T1_hi = XOR(D_hi, L07_hi)
				local T2_lo = XOR(D_lo, L12_lo)
				local T2_hi = XOR(D_hi, L12_hi)
				local T3_lo = XOR(D_lo, L17_lo)
				local T3_hi = XOR(D_hi, L17_hi)
				local T4_lo = XOR(D_lo, L22_lo)
				local T4_hi = XOR(D_hi, L22_hi)
				L02_lo = (T1_lo % 2^32 - T1_lo % 2^20) / 2^20 + T1_hi * 2^12
				L02_hi = (T1_hi % 2^32 - T1_hi % 2^20) / 2^20 + T1_lo * 2^12
				L07_lo = (T3_lo % 2^32 - T3_lo % 2^19) / 2^19 + T3_hi * 2^13
				L07_hi = (T3_hi % 2^32 - T3_hi % 2^19) / 2^19 + T3_lo * 2^13
				L12_lo = T0_lo * 2 + (T0_hi % 2^32 - T0_hi % 2^31) / 2^31
				L12_hi = T0_hi * 2 + (T0_lo % 2^32 - T0_lo % 2^31) / 2^31
				L17_lo = T2_lo * 2^10 + (T2_hi % 2^32 - T2_hi % 2^22) / 2^22
				L17_hi = T2_hi * 2^10 + (T2_lo % 2^32 - T2_lo % 2^22) / 2^22
				L22_lo = T4_lo * 2^2 + (T4_hi % 2^32 - T4_hi % 2^30) / 2^30
				L22_hi = T4_hi * 2^2 + (T4_lo % 2^32 - T4_lo % 2^30) / 2^30
				D_lo = XOR(C2_lo, C4_lo * 2 + (C4_hi % 2^32 - C4_hi % 2^31) / 2^31)
				D_hi = XOR(C2_hi, C4_hi * 2 + (C4_lo % 2^32 - C4_lo % 2^31) / 2^31)
				T0_lo = XOR(D_lo, L03_lo)
				T0_hi = XOR(D_hi, L03_hi)
				T1_lo = XOR(D_lo, L08_lo)
				T1_hi = XOR(D_hi, L08_hi)
				T2_lo = XOR(D_lo, L13_lo)
				T2_hi = XOR(D_hi, L13_hi)
				T3_lo = XOR(D_lo, L18_lo)
				T3_hi = XOR(D_hi, L18_hi)
				T4_lo = XOR(D_lo, L23_lo)
				T4_hi = XOR(D_hi, L23_hi)
				L03_lo = (T2_lo % 2^32 - T2_lo % 2^21) / 2^21 + T2_hi * 2^11
				L03_hi = (T2_hi % 2^32 - T2_hi % 2^21) / 2^21 + T2_lo * 2^11
				L08_lo = (T4_lo % 2^32 - T4_lo % 2^3) / 2^3 + T4_hi * 2^29 % 2^32
				L08_hi = (T4_hi % 2^32 - T4_hi % 2^3) / 2^3 + T4_lo * 2^29 % 2^32
				L13_lo = T1_lo * 2^6 + (T1_hi % 2^32 - T1_hi % 2^26) / 2^26
				L13_hi = T1_hi * 2^6 + (T1_lo % 2^32 - T1_lo % 2^26) / 2^26
				L18_lo = T3_lo * 2^15 + (T3_hi % 2^32 - T3_hi % 2^17) / 2^17
				L18_hi = T3_hi * 2^15 + (T3_lo % 2^32 - T3_lo % 2^17) / 2^17
				L23_lo = (T0_lo % 2^32 - T0_lo % 2^2) / 2^2 + T0_hi * 2^30 % 2^32
				L23_hi = (T0_hi % 2^32 - T0_hi % 2^2) / 2^2 + T0_lo * 2^30 % 2^32
				D_lo = XOR(C3_lo, C5_lo * 2 + (C5_hi % 2^32 - C5_hi % 2^31) / 2^31)
				D_hi = XOR(C3_hi, C5_hi * 2 + (C5_lo % 2^32 - C5_lo % 2^31) / 2^31)
				T0_lo = XOR(D_lo, L04_lo)
				T0_hi = XOR(D_hi, L04_hi)
				T1_lo = XOR(D_lo, L09_lo)
				T1_hi = XOR(D_hi, L09_hi)
				T2_lo = XOR(D_lo, L14_lo)
				T2_hi = XOR(D_hi, L14_hi)
				T3_lo = XOR(D_lo, L19_lo)
				T3_hi = XOR(D_hi, L19_hi)
				T4_lo = XOR(D_lo, L24_lo)
				T4_hi = XOR(D_hi, L24_hi)
				L04_lo = T3_lo * 2^21 % 2^32 + (T3_hi % 2^32 - T3_hi % 2^11) / 2^11
				L04_hi = T3_hi * 2^21 % 2^32 + (T3_lo % 2^32 - T3_lo % 2^11) / 2^11
				L09_lo = T0_lo * 2^28 % 2^32 + (T0_hi % 2^32 - T0_hi % 2^4) / 2^4
				L09_hi = T0_hi * 2^28 % 2^32 + (T0_lo % 2^32 - T0_lo % 2^4) / 2^4
				L14_lo = T2_lo * 2^25 % 2^32 + (T2_hi % 2^32 - T2_hi % 2^7) / 2^7
				L14_hi = T2_hi * 2^25 % 2^32 + (T2_lo % 2^32 - T2_lo % 2^7) / 2^7
				L19_lo = (T4_lo % 2^32 - T4_lo % 2^8) / 2^8 + T4_hi * 2^24 % 2^32
				L19_hi = (T4_hi % 2^32 - T4_hi % 2^8) / 2^8 + T4_lo * 2^24 % 2^32
				L24_lo = (T1_lo % 2^32 - T1_lo % 2^9) / 2^9 + T1_hi * 2^23 % 2^32
				L24_hi = (T1_hi % 2^32 - T1_hi % 2^9) / 2^9 + T1_lo * 2^23 % 2^32
				D_lo = XOR(C4_lo, C1_lo * 2 + (C1_hi % 2^32 - C1_hi % 2^31) / 2^31)
				D_hi = XOR(C4_hi, C1_hi * 2 + (C1_lo % 2^32 - C1_lo % 2^31) / 2^31)
				T0_lo = XOR(D_lo, L05_lo)
				T0_hi = XOR(D_hi, L05_hi)
				T1_lo = XOR(D_lo, L10_lo)
				T1_hi = XOR(D_hi, L10_hi)
				T2_lo = XOR(D_lo, L15_lo)
				T2_hi = XOR(D_hi, L15_hi)
				T3_lo = XOR(D_lo, L20_lo)
				T3_hi = XOR(D_hi, L20_hi)
				T4_lo = XOR(D_lo, L25_lo)
				T4_hi = XOR(D_hi, L25_hi)
				L05_lo = T4_lo * 2^14 + (T4_hi % 2^32 - T4_hi % 2^18) / 2^18
				L05_hi = T4_hi * 2^14 + (T4_lo % 2^32 - T4_lo % 2^18) / 2^18
				L10_lo = T1_lo * 2^20 % 2^32 + (T1_hi % 2^32 - T1_hi % 2^12) / 2^12
				L10_hi = T1_hi * 2^20 % 2^32 + (T1_lo % 2^32 - T1_lo % 2^12) / 2^12
				L15_lo = T3_lo * 2^8 + (T3_hi % 2^32 - T3_hi % 2^24) / 2^24
				L15_hi = T3_hi * 2^8 + (T3_lo % 2^32 - T3_lo % 2^24) / 2^24
				L20_lo = T0_lo * 2^27 % 2^32 + (T0_hi % 2^32 - T0_hi % 2^5) / 2^5
				L20_hi = T0_hi * 2^27 % 2^32 + (T0_lo % 2^32 - T0_lo % 2^5) / 2^5
				L25_lo = (T2_lo % 2^32 - T2_lo % 2^25) / 2^25 + T2_hi * 2^7
				L25_hi = (T2_hi % 2^32 - T2_hi % 2^25) / 2^25 + T2_lo * 2^7
				D_lo = XOR(C5_lo, C2_lo * 2 + (C2_hi % 2^32 - C2_hi % 2^31) / 2^31)
				D_hi = XOR(C5_hi, C2_hi * 2 + (C2_lo % 2^32 - C2_lo % 2^31) / 2^31)
				T1_lo = XOR(D_lo, L06_lo)
				T1_hi = XOR(D_hi, L06_hi)
				T2_lo = XOR(D_lo, L11_lo)
				T2_hi = XOR(D_hi, L11_hi)
				T3_lo = XOR(D_lo, L16_lo)
				T3_hi = XOR(D_hi, L16_hi)
				T4_lo = XOR(D_lo, L21_lo)
				T4_hi = XOR(D_hi, L21_hi)
				L06_lo = T2_lo * 2^3 + (T2_hi % 2^32 - T2_hi % 2^29) / 2^29
				L06_hi = T2_hi * 2^3 + (T2_lo % 2^32 - T2_lo % 2^29) / 2^29
				L11_lo = T4_lo * 2^18 + (T4_hi % 2^32 - T4_hi % 2^14) / 2^14
				L11_hi = T4_hi * 2^18 + (T4_lo % 2^32 - T4_lo % 2^14) / 2^14
				L16_lo = (T1_lo % 2^32 - T1_lo % 2^28) / 2^28 + T1_hi * 2^4
				L16_hi = (T1_hi % 2^32 - T1_hi % 2^28) / 2^28 + T1_lo * 2^4
				L21_lo = (T3_lo % 2^32 - T3_lo % 2^23) / 2^23 + T3_hi * 2^9
				L21_hi = (T3_hi % 2^32 - T3_hi % 2^23) / 2^23 + T3_lo * 2^9
				L01_lo = XOR(D_lo, L01_lo)
				L01_hi = XOR(D_hi, L01_hi)
				L01_lo, L02_lo, L03_lo, L04_lo, L05_lo = XOR(L01_lo, AND(-1-L02_lo, L03_lo)), XOR(L02_lo, AND(-1-L03_lo, L04_lo)), XOR(L03_lo, AND(-1-L04_lo, L05_lo)), XOR(L04_lo, AND(-1-L05_lo, L01_lo)), XOR(L05_lo, AND(-1-L01_lo, L02_lo))
				L01_hi, L02_hi, L03_hi, L04_hi, L05_hi = XOR(L01_hi, AND(-1-L02_hi, L03_hi)), XOR(L02_hi, AND(-1-L03_hi, L04_hi)), XOR(L03_hi, AND(-1-L04_hi, L05_hi)), XOR(L04_hi, AND(-1-L05_hi, L01_hi)), XOR(L05_hi, AND(-1-L01_hi, L02_hi))
				L06_lo, L07_lo, L08_lo, L09_lo, L10_lo = XOR(L09_lo, AND(-1-L10_lo, L06_lo)), XOR(L10_lo, AND(-1-L06_lo, L07_lo)), XOR(L06_lo, AND(-1-L07_lo, L08_lo)), XOR(L07_lo, AND(-1-L08_lo, L09_lo)), XOR(L08_lo, AND(-1-L09_lo, L10_lo))
				L06_hi, L07_hi, L08_hi, L09_hi, L10_hi = XOR(L09_hi, AND(-1-L10_hi, L06_hi)), XOR(L10_hi, AND(-1-L06_hi, L07_hi)), XOR(L06_hi, AND(-1-L07_hi, L08_hi)), XOR(L07_hi, AND(-1-L08_hi, L09_hi)), XOR(L08_hi, AND(-1-L09_hi, L10_hi))
				L11_lo, L12_lo, L13_lo, L14_lo, L15_lo = XOR(L12_lo, AND(-1-L13_lo, L14_lo)), XOR(L13_lo, AND(-1-L14_lo, L15_lo)), XOR(L14_lo, AND(-1-L15_lo, L11_lo)), XOR(L15_lo, AND(-1-L11_lo, L12_lo)), XOR(L11_lo, AND(-1-L12_lo, L13_lo))
				L11_hi, L12_hi, L13_hi, L14_hi, L15_hi = XOR(L12_hi, AND(-1-L13_hi, L14_hi)), XOR(L13_hi, AND(-1-L14_hi, L15_hi)), XOR(L14_hi, AND(-1-L15_hi, L11_hi)), XOR(L15_hi, AND(-1-L11_hi, L12_hi)), XOR(L11_hi, AND(-1-L12_hi, L13_hi))
				L16_lo, L17_lo, L18_lo, L19_lo, L20_lo = XOR(L20_lo, AND(-1-L16_lo, L17_lo)), XOR(L16_lo, AND(-1-L17_lo, L18_lo)), XOR(L17_lo, AND(-1-L18_lo, L19_lo)), XOR(L18_lo, AND(-1-L19_lo, L20_lo)), XOR(L19_lo, AND(-1-L20_lo, L16_lo))
				L16_hi, L17_hi, L18_hi, L19_hi, L20_hi = XOR(L20_hi, AND(-1-L16_hi, L17_hi)), XOR(L16_hi, AND(-1-L17_hi, L18_hi)), XOR(L17_hi, AND(-1-L18_hi, L19_hi)), XOR(L18_hi, AND(-1-L19_hi, L20_hi)), XOR(L19_hi, AND(-1-L20_hi, L16_hi))
				L21_lo, L22_lo, L23_lo, L24_lo, L25_lo = XOR(L23_lo, AND(-1-L24_lo, L25_lo)), XOR(L24_lo, AND(-1-L25_lo, L21_lo)), XOR(L25_lo, AND(-1-L21_lo, L22_lo)), XOR(L21_lo, AND(-1-L22_lo, L23_lo)), XOR(L22_lo, AND(-1-L23_lo, L24_lo))
				L21_hi, L22_hi, L23_hi, L24_hi, L25_hi = XOR(L23_hi, AND(-1-L24_hi, L25_hi)), XOR(L24_hi, AND(-1-L25_hi, L21_hi)), XOR(L25_hi, AND(-1-L21_hi, L22_hi)), XOR(L21_hi, AND(-1-L22_hi, L23_hi)), XOR(L22_hi, AND(-1-L23_hi, L24_hi))
				L01_lo = XOR(L01_lo, RC_lo[round_idx])
				L01_hi = L01_hi + RC_hi[round_idx]      -- RC_hi[] is either 0 or 0x80000000, so we could use fast addition instead of slow XOR
			end
			lanes_lo[1]  = L01_lo;  lanes_hi[1]  = L01_hi
			lanes_lo[2]  = L02_lo;  lanes_hi[2]  = L02_hi
			lanes_lo[3]  = L03_lo;  lanes_hi[3]  = L03_hi
			lanes_lo[4]  = L04_lo;  lanes_hi[4]  = L04_hi
			lanes_lo[5]  = L05_lo;  lanes_hi[5]  = L05_hi
			lanes_lo[6]  = L06_lo;  lanes_hi[6]  = L06_hi
			lanes_lo[7]  = L07_lo;  lanes_hi[7]  = L07_hi
			lanes_lo[8]  = L08_lo;  lanes_hi[8]  = L08_hi
			lanes_lo[9]  = L09_lo;  lanes_hi[9]  = L09_hi
			lanes_lo[10] = L10_lo;  lanes_hi[10] = L10_hi
			lanes_lo[11] = L11_lo;  lanes_hi[11] = L11_hi
			lanes_lo[12] = L12_lo;  lanes_hi[12] = L12_hi
			lanes_lo[13] = L13_lo;  lanes_hi[13] = L13_hi
			lanes_lo[14] = L14_lo;  lanes_hi[14] = L14_hi
			lanes_lo[15] = L15_lo;  lanes_hi[15] = L15_hi
			lanes_lo[16] = L16_lo;  lanes_hi[16] = L16_hi
			lanes_lo[17] = L17_lo;  lanes_hi[17] = L17_hi
			lanes_lo[18] = L18_lo;  lanes_hi[18] = L18_hi
			lanes_lo[19] = L19_lo;  lanes_hi[19] = L19_hi
			lanes_lo[20] = L20_lo;  lanes_hi[20] = L20_hi
			lanes_lo[21] = L21_lo;  lanes_hi[21] = L21_hi
			lanes_lo[22] = L22_lo;  lanes_hi[22] = L22_hi
			lanes_lo[23] = L23_lo;  lanes_hi[23] = L23_hi
			lanes_lo[24] = L24_lo;  lanes_hi[24] = L24_hi
			lanes_lo[25] = L25_lo;  lanes_hi[25] = L25_hi
		end
	end


	function blake2s_feed_64(H, str, offs, size, bytes_compressed, last_block_size, is_last_node)
		-- offs >= 0, size >= 0, size is multiple of 64
		local W = common_W
		local h1, h2, h3, h4, h5, h6, h7, h8 = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
		for pos = offs, offs + size - 1, 64 do
			if str then
				for j = 1, 16 do
					pos = pos + 4
					local a, b, c, d = byte(str, pos - 3, pos)
					W[j] = ((d * 256 + c) * 256 + b) * 256 + a
				end
			end
			local v0, v1, v2, v3, v4, v5, v6, v7 = h1, h2, h3, h4, h5, h6, h7, h8
			local v8, v9, vA, vB, vC, vD, vE, vF = sha2_H_hi[1], sha2_H_hi[2], sha2_H_hi[3], sha2_H_hi[4], sha2_H_hi[5], sha2_H_hi[6], sha2_H_hi[7], sha2_H_hi[8]
			bytes_compressed = bytes_compressed + (last_block_size or 64)
			local t0 = bytes_compressed % 2^32
			local t1 = (bytes_compressed - t0) / 2^32
			vC = XOR(vC, t0)  -- t0 = low_4_bytes(bytes_compressed)
			vD = XOR(vD, t1)  -- t1 = high_4_bytes(bytes_compressed)
			if last_block_size then  -- flag f0
				vE = -1 - vE
			end
			if is_last_node then  -- flag f1
				vF = -1 - vF
			end
			for j = 1, 10 do
				local row = sigma[j]
				v0 = v0 + v4 + W[row[1]]
				vC = XOR(vC, v0) % 2^32 / 2^16
				vC = vC % 1 * (2^32 - 1) + vC
				v8 = v8 + vC
				v4 = XOR(v4, v8) % 2^32 / 2^12
				v4 = v4 % 1 * (2^32 - 1) + v4
				v0 = v0 + v4 + W[row[2]]
				vC = XOR(vC, v0) % 2^32 / 2^8
				vC = vC % 1 * (2^32 - 1) + vC
				v8 = v8 + vC
				v4 = XOR(v4, v8) % 2^32 / 2^7
				v4 = v4 % 1 * (2^32 - 1) + v4
				v1 = v1 + v5 + W[row[3]]
				vD = XOR(vD, v1) % 2^32 / 2^16
				vD = vD % 1 * (2^32 - 1) + vD
				v9 = v9 + vD
				v5 = XOR(v5, v9) % 2^32 / 2^12
				v5 = v5 % 1 * (2^32 - 1) + v5
				v1 = v1 + v5 + W[row[4]]
				vD = XOR(vD, v1) % 2^32 / 2^8
				vD = vD % 1 * (2^32 - 1) + vD
				v9 = v9 + vD
				v5 = XOR(v5, v9) % 2^32 / 2^7
				v5 = v5 % 1 * (2^32 - 1) + v5
				v2 = v2 + v6 + W[row[5]]
				vE = XOR(vE, v2) % 2^32 / 2^16
				vE = vE % 1 * (2^32 - 1) + vE
				vA = vA + vE
				v6 = XOR(v6, vA) % 2^32 / 2^12
				v6 = v6 % 1 * (2^32 - 1) + v6
				v2 = v2 + v6 + W[row[6]]
				vE = XOR(vE, v2) % 2^32 / 2^8
				vE = vE % 1 * (2^32 - 1) + vE
				vA = vA + vE
				v6 = XOR(v6, vA) % 2^32 / 2^7
				v6 = v6 % 1 * (2^32 - 1) + v6
				v3 = v3 + v7 + W[row[7]]
				vF = XOR(vF, v3) % 2^32 / 2^16
				vF = vF % 1 * (2^32 - 1) + vF
				vB = vB + vF
				v7 = XOR(v7, vB) % 2^32 / 2^12
				v7 = v7 % 1 * (2^32 - 1) + v7
				v3 = v3 + v7 + W[row[8]]
				vF = XOR(vF, v3) % 2^32 / 2^8
				vF = vF % 1 * (2^32 - 1) + vF
				vB = vB + vF
				v7 = XOR(v7, vB) % 2^32 / 2^7
				v7 = v7 % 1 * (2^32 - 1) + v7
				v0 = v0 + v5 + W[row[9]]
				vF = XOR(vF, v0) % 2^32 / 2^16
				vF = vF % 1 * (2^32 - 1) + vF
				vA = vA + vF
				v5 = XOR(v5, vA) % 2^32 / 2^12
				v5 = v5 % 1 * (2^32 - 1) + v5
				v0 = v0 + v5 + W[row[10]]
				vF = XOR(vF, v0) % 2^32 / 2^8
				vF = vF % 1 * (2^32 - 1) + vF
				vA = vA + vF
				v5 = XOR(v5, vA) % 2^32 / 2^7
				v5 = v5 % 1 * (2^32 - 1) + v5
				v1 = v1 + v6 + W[row[11]]
				vC = XOR(vC, v1) % 2^32 / 2^16
				vC = vC % 1 * (2^32 - 1) + vC
				vB = vB + vC
				v6 = XOR(v6, vB) % 2^32 / 2^12
				v6 = v6 % 1 * (2^32 - 1) + v6
				v1 = v1 + v6 + W[row[12]]
				vC = XOR(vC, v1) % 2^32 / 2^8
				vC = vC % 1 * (2^32 - 1) + vC
				vB = vB + vC
				v6 = XOR(v6, vB) % 2^32 / 2^7
				v6 = v6 % 1 * (2^32 - 1) + v6
				v2 = v2 + v7 + W[row[13]]
				vD = XOR(vD, v2) % 2^32 / 2^16
				vD = vD % 1 * (2^32 - 1) + vD
				v8 = v8 + vD
				v7 = XOR(v7, v8) % 2^32 / 2^12
				v7 = v7 % 1 * (2^32 - 1) + v7
				v2 = v2 + v7 + W[row[14]]
				vD = XOR(vD, v2) % 2^32 / 2^8
				vD = vD % 1 * (2^32 - 1) + vD
				v8 = v8 + vD
				v7 = XOR(v7, v8) % 2^32 / 2^7
				v7 = v7 % 1 * (2^32 - 1) + v7
				v3 = v3 + v4 + W[row[15]]
				vE = XOR(vE, v3) % 2^32 / 2^16
				vE = vE % 1 * (2^32 - 1) + vE
				v9 = v9 + vE
				v4 = XOR(v4, v9) % 2^32 / 2^12
				v4 = v4 % 1 * (2^32 - 1) + v4
				v3 = v3 + v4 + W[row[16]]
				vE = XOR(vE, v3) % 2^32 / 2^8
				vE = vE % 1 * (2^32 - 1) + vE
				v9 = v9 + vE
				v4 = XOR(v4, v9) % 2^32 / 2^7
				v4 = v4 % 1 * (2^32 - 1) + v4
			end
			h1 = XOR(h1, v0, v8)
			h2 = XOR(h2, v1, v9)
			h3 = XOR(h3, v2, vA)
			h4 = XOR(h4, v3, vB)
			h5 = XOR(h5, v4, vC)
			h6 = XOR(h6, v5, vD)
			h7 = XOR(h7, v6, vE)
			h8 = XOR(h8, v7, vF)
		end
		H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8] = h1, h2, h3, h4, h5, h6, h7, h8
		return bytes_compressed
	end


	function blake2b_feed_128(H_lo, H_hi, str, offs, size, bytes_compressed, last_block_size, is_last_node)
		-- offs >= 0, size >= 0, size is multiple of 128
		local W = common_W
		local h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo = H_lo[1], H_lo[2], H_lo[3], H_lo[4], H_lo[5], H_lo[6], H_lo[7], H_lo[8]
		local h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi = H_hi[1], H_hi[2], H_hi[3], H_hi[4], H_hi[5], H_hi[6], H_hi[7], H_hi[8]
		for pos = offs, offs + size - 1, 128 do
			if str then
				for j = 1, 32 do
					pos = pos + 4
					local a, b, c, d = byte(str, pos - 3, pos)
					W[j] = ((d * 256 + c) * 256 + b) * 256 + a
				end
			end
			local v0_lo, v1_lo, v2_lo, v3_lo, v4_lo, v5_lo, v6_lo, v7_lo = h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo
			local v0_hi, v1_hi, v2_hi, v3_hi, v4_hi, v5_hi, v6_hi, v7_hi = h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi
			local v8_lo, v9_lo, vA_lo, vB_lo, vC_lo, vD_lo, vE_lo, vF_lo = sha2_H_lo[1], sha2_H_lo[2], sha2_H_lo[3], sha2_H_lo[4], sha2_H_lo[5], sha2_H_lo[6], sha2_H_lo[7], sha2_H_lo[8]
			local v8_hi, v9_hi, vA_hi, vB_hi, vC_hi, vD_hi, vE_hi, vF_hi = sha2_H_hi[1], sha2_H_hi[2], sha2_H_hi[3], sha2_H_hi[4], sha2_H_hi[5], sha2_H_hi[6], sha2_H_hi[7], sha2_H_hi[8]
			bytes_compressed = bytes_compressed + (last_block_size or 128)
			local t0_lo = bytes_compressed % 2^32
			local t0_hi = (bytes_compressed - t0_lo) / 2^32
			vC_lo = XOR(vC_lo, t0_lo)  -- t0 = low_8_bytes(bytes_compressed)
			vC_hi = XOR(vC_hi, t0_hi)
			-- t1 = high_8_bytes(bytes_compressed) = 0,  message length is always below 2^53 bytes
			if last_block_size then  -- flag f0
				vE_lo = -1 - vE_lo
				vE_hi = -1 - vE_hi
			end
			if is_last_node then  -- flag f1
				vF_lo = -1 - vF_lo
				vF_hi = -1 - vF_hi
			end
			for j = 1, 12 do
				local row = sigma[j]
				local k = row[1] * 2
				local z = v0_lo % 2^32 + v4_lo % 2^32 + W[k-1]
				v0_lo = z % 2^32
				v0_hi = v0_hi + v4_hi + (z - v0_lo) / 2^32 + W[k]
				vC_lo, vC_hi = XOR(vC_hi, v0_hi), XOR(vC_lo, v0_lo)
				z = v8_lo % 2^32 + vC_lo % 2^32
				v8_lo = z % 2^32
				v8_hi = v8_hi + vC_hi + (z - v8_lo) / 2^32
				v4_lo, v4_hi = XOR(v4_lo, v8_lo), XOR(v4_hi, v8_hi)
				local z_lo, z_hi = v4_lo % 2^24, v4_hi % 2^24
				v4_lo, v4_hi = (v4_lo - z_lo) / 2^24 % 2^8 + z_hi * 2^8, (v4_hi - z_hi) / 2^24 % 2^8 + z_lo * 2^8
				k = row[2] * 2
				z = v0_lo % 2^32 + v4_lo % 2^32 + W[k-1]
				v0_lo = z % 2^32
				v0_hi = v0_hi + v4_hi + (z - v0_lo) / 2^32 + W[k]
				vC_lo, vC_hi = XOR(vC_lo, v0_lo), XOR(vC_hi, v0_hi)
				z_lo, z_hi = vC_lo % 2^16, vC_hi % 2^16
				vC_lo, vC_hi = (vC_lo - z_lo) / 2^16 % 2^16 + z_hi * 2^16, (vC_hi - z_hi) / 2^16 % 2^16 + z_lo * 2^16
				z = v8_lo % 2^32 + vC_lo % 2^32
				v8_lo = z % 2^32
				v8_hi = v8_hi + vC_hi + (z - v8_lo) / 2^32
				v4_lo, v4_hi = XOR(v4_lo, v8_lo), XOR(v4_hi, v8_hi)
				z_lo, z_hi = v4_lo % 2^31, v4_hi % 2^31
				v4_lo, v4_hi = z_lo * 2^1 + (v4_hi - z_hi) / 2^31 % 2^1, z_hi * 2^1 + (v4_lo - z_lo) / 2^31 % 2^1
				k = row[3] * 2
				z = v1_lo % 2^32 + v5_lo % 2^32 + W[k-1]
				v1_lo = z % 2^32
				v1_hi = v1_hi + v5_hi + (z - v1_lo) / 2^32 + W[k]
				vD_lo, vD_hi = XOR(vD_hi, v1_hi), XOR(vD_lo, v1_lo)
				z = v9_lo % 2^32 + vD_lo % 2^32
				v9_lo = z % 2^32
				v9_hi = v9_hi + vD_hi + (z - v9_lo) / 2^32
				v5_lo, v5_hi = XOR(v5_lo, v9_lo), XOR(v5_hi, v9_hi)
				z_lo, z_hi = v5_lo % 2^24, v5_hi % 2^24
				v5_lo, v5_hi = (v5_lo - z_lo) / 2^24 % 2^8 + z_hi * 2^8, (v5_hi - z_hi) / 2^24 % 2^8 + z_lo * 2^8
				k = row[4] * 2
				z = v1_lo % 2^32 + v5_lo % 2^32 + W[k-1]
				v1_lo = z % 2^32
				v1_hi = v1_hi + v5_hi + (z - v1_lo) / 2^32 + W[k]
				vD_lo, vD_hi = XOR(vD_lo, v1_lo), XOR(vD_hi, v1_hi)
				z_lo, z_hi = vD_lo % 2^16, vD_hi % 2^16
				vD_lo, vD_hi = (vD_lo - z_lo) / 2^16 % 2^16 + z_hi * 2^16, (vD_hi - z_hi) / 2^16 % 2^16 + z_lo * 2^16
				z = v9_lo % 2^32 + vD_lo % 2^32
				v9_lo = z % 2^32
				v9_hi = v9_hi + vD_hi + (z - v9_lo) / 2^32
				v5_lo, v5_hi = XOR(v5_lo, v9_lo), XOR(v5_hi, v9_hi)
				z_lo, z_hi = v5_lo % 2^31, v5_hi % 2^31
				v5_lo, v5_hi = z_lo * 2^1 + (v5_hi - z_hi) / 2^31 % 2^1, z_hi * 2^1 + (v5_lo - z_lo) / 2^31 % 2^1
				k = row[5] * 2
				z = v2_lo % 2^32 + v6_lo % 2^32 + W[k-1]
				v2_lo = z % 2^32
				v2_hi = v2_hi + v6_hi + (z - v2_lo) / 2^32 + W[k]
				vE_lo, vE_hi = XOR(vE_hi, v2_hi), XOR(vE_lo, v2_lo)
				z = vA_lo % 2^32 + vE_lo % 2^32
				vA_lo = z % 2^32
				vA_hi = vA_hi + vE_hi + (z - vA_lo) / 2^32
				v6_lo, v6_hi = XOR(v6_lo, vA_lo), XOR(v6_hi, vA_hi)
				z_lo, z_hi = v6_lo % 2^24, v6_hi % 2^24
				v6_lo, v6_hi = (v6_lo - z_lo) / 2^24 % 2^8 + z_hi * 2^8, (v6_hi - z_hi) / 2^24 % 2^8 + z_lo * 2^8
				k = row[6] * 2
				z = v2_lo % 2^32 + v6_lo % 2^32 + W[k-1]
				v2_lo = z % 2^32
				v2_hi = v2_hi + v6_hi + (z - v2_lo) / 2^32 + W[k]
				vE_lo, vE_hi = XOR(vE_lo, v2_lo), XOR(vE_hi, v2_hi)
				z_lo, z_hi = vE_lo % 2^16, vE_hi % 2^16
				vE_lo, vE_hi = (vE_lo - z_lo) / 2^16 % 2^16 + z_hi * 2^16, (vE_hi - z_hi) / 2^16 % 2^16 + z_lo * 2^16
				z = vA_lo % 2^32 + vE_lo % 2^32
				vA_lo = z % 2^32
				vA_hi = vA_hi + vE_hi + (z - vA_lo) / 2^32
				v6_lo, v6_hi = XOR(v6_lo, vA_lo), XOR(v6_hi, vA_hi)
				z_lo, z_hi = v6_lo % 2^31, v6_hi % 2^31
				v6_lo, v6_hi = z_lo * 2^1 + (v6_hi - z_hi) / 2^31 % 2^1, z_hi * 2^1 + (v6_lo - z_lo) / 2^31 % 2^1
				k = row[7] * 2
				z = v3_lo % 2^32 + v7_lo % 2^32 + W[k-1]
				v3_lo = z % 2^32
				v3_hi = v3_hi + v7_hi + (z - v3_lo) / 2^32 + W[k]
				vF_lo, vF_hi = XOR(vF_hi, v3_hi), XOR(vF_lo, v3_lo)
				z = vB_lo % 2^32 + vF_lo % 2^32
				vB_lo = z % 2^32
				vB_hi = vB_hi + vF_hi + (z - vB_lo) / 2^32
				v7_lo, v7_hi = XOR(v7_lo, vB_lo), XOR(v7_hi, vB_hi)
				z_lo, z_hi = v7_lo % 2^24, v7_hi % 2^24
				v7_lo, v7_hi = (v7_lo - z_lo) / 2^24 % 2^8 + z_hi * 2^8, (v7_hi - z_hi) / 2^24 % 2^8 + z_lo * 2^8
				k = row[8] * 2
				z = v3_lo % 2^32 + v7_lo % 2^32 + W[k-1]
				v3_lo = z % 2^32
				v3_hi = v3_hi + v7_hi + (z - v3_lo) / 2^32 + W[k]
				vF_lo, vF_hi = XOR(vF_lo, v3_lo), XOR(vF_hi, v3_hi)
				z_lo, z_hi = vF_lo % 2^16, vF_hi % 2^16
				vF_lo, vF_hi = (vF_lo - z_lo) / 2^16 % 2^16 + z_hi * 2^16, (vF_hi - z_hi) / 2^16 % 2^16 + z_lo * 2^16
				z = vB_lo % 2^32 + vF_lo % 2^32
				vB_lo = z % 2^32
				vB_hi = vB_hi + vF_hi + (z - vB_lo) / 2^32
				v7_lo, v7_hi = XOR(v7_lo, vB_lo), XOR(v7_hi, vB_hi)
				z_lo, z_hi = v7_lo % 2^31, v7_hi % 2^31
				v7_lo, v7_hi = z_lo * 2^1 + (v7_hi - z_hi) / 2^31 % 2^1, z_hi * 2^1 + (v7_lo - z_lo) / 2^31 % 2^1
				k = row[9] * 2
				z = v0_lo % 2^32 + v5_lo % 2^32 + W[k-1]
				v0_lo = z % 2^32
				v0_hi = v0_hi + v5_hi + (z - v0_lo) / 2^32 + W[k]
				vF_lo, vF_hi = XOR(vF_hi, v0_hi), XOR(vF_lo, v0_lo)
				z = vA_lo % 2^32 + vF_lo % 2^32
				vA_lo = z % 2^32
				vA_hi = vA_hi + vF_hi + (z - vA_lo) / 2^32
				v5_lo, v5_hi = XOR(v5_lo, vA_lo), XOR(v5_hi, vA_hi)
				z_lo, z_hi = v5_lo % 2^24, v5_hi % 2^24
				v5_lo, v5_hi = (v5_lo - z_lo) / 2^24 % 2^8 + z_hi * 2^8, (v5_hi - z_hi) / 2^24 % 2^8 + z_lo * 2^8
				k = row[10] * 2
				z = v0_lo % 2^32 + v5_lo % 2^32 + W[k-1]
				v0_lo = z % 2^32
				v0_hi = v0_hi + v5_hi + (z - v0_lo) / 2^32 + W[k]
				vF_lo, vF_hi = XOR(vF_lo, v0_lo), XOR(vF_hi, v0_hi)
				z_lo, z_hi = vF_lo % 2^16, vF_hi % 2^16
				vF_lo, vF_hi = (vF_lo - z_lo) / 2^16 % 2^16 + z_hi * 2^16, (vF_hi - z_hi) / 2^16 % 2^16 + z_lo * 2^16
				z = vA_lo % 2^32 + vF_lo % 2^32
				vA_lo = z % 2^32
				vA_hi = vA_hi + vF_hi + (z - vA_lo) / 2^32
				v5_lo, v5_hi = XOR(v5_lo, vA_lo), XOR(v5_hi, vA_hi)
				z_lo, z_hi = v5_lo % 2^31, v5_hi % 2^31
				v5_lo, v5_hi = z_lo * 2^1 + (v5_hi - z_hi) / 2^31 % 2^1, z_hi * 2^1 + (v5_lo - z_lo) / 2^31 % 2^1
				k = row[11] * 2
				z = v1_lo % 2^32 + v6_lo % 2^32 + W[k-1]
				v1_lo = z % 2^32
				v1_hi = v1_hi + v6_hi + (z - v1_lo) / 2^32 + W[k]
				vC_lo, vC_hi = XOR(vC_hi, v1_hi), XOR(vC_lo, v1_lo)
				z = vB_lo % 2^32 + vC_lo % 2^32
				vB_lo = z % 2^32
				vB_hi = vB_hi + vC_hi + (z - vB_lo) / 2^32
				v6_lo, v6_hi = XOR(v6_lo, vB_lo), XOR(v6_hi, vB_hi)
				z_lo, z_hi = v6_lo % 2^24, v6_hi % 2^24
				v6_lo, v6_hi = (v6_lo - z_lo) / 2^24 % 2^8 + z_hi * 2^8, (v6_hi - z_hi) / 2^24 % 2^8 + z_lo * 2^8
				k = row[12] * 2
				z = v1_lo % 2^32 + v6_lo % 2^32 + W[k-1]
				v1_lo = z % 2^32
				v1_hi = v1_hi + v6_hi + (z - v1_lo) / 2^32 + W[k]
				vC_lo, vC_hi = XOR(vC_lo, v1_lo), XOR(vC_hi, v1_hi)
				z_lo, z_hi = vC_lo % 2^16, vC_hi % 2^16
				vC_lo, vC_hi = (vC_lo - z_lo) / 2^16 % 2^16 + z_hi * 2^16, (vC_hi - z_hi) / 2^16 % 2^16 + z_lo * 2^16
				z = vB_lo % 2^32 + vC_lo % 2^32
				vB_lo = z % 2^32
				vB_hi = vB_hi + vC_hi + (z - vB_lo) / 2^32
				v6_lo, v6_hi = XOR(v6_lo, vB_lo), XOR(v6_hi, vB_hi)
				z_lo, z_hi = v6_lo % 2^31, v6_hi % 2^31
				v6_lo, v6_hi = z_lo * 2^1 + (v6_hi - z_hi) / 2^31 % 2^1, z_hi * 2^1 + (v6_lo - z_lo) / 2^31 % 2^1
				k = row[13] * 2
				z = v2_lo % 2^32 + v7_lo % 2^32 + W[k-1]
				v2_lo = z % 2^32
				v2_hi = v2_hi + v7_hi + (z - v2_lo) / 2^32 + W[k]
				vD_lo, vD_hi = XOR(vD_hi, v2_hi), XOR(vD_lo, v2_lo)
				z = v8_lo % 2^32 + vD_lo % 2^32
				v8_lo = z % 2^32
				v8_hi = v8_hi + vD_hi + (z - v8_lo) / 2^32
				v7_lo, v7_hi = XOR(v7_lo, v8_lo), XOR(v7_hi, v8_hi)
				z_lo, z_hi = v7_lo % 2^24, v7_hi % 2^24
				v7_lo, v7_hi = (v7_lo - z_lo) / 2^24 % 2^8 + z_hi * 2^8, (v7_hi - z_hi) / 2^24 % 2^8 + z_lo * 2^8
				k = row[14] * 2
				z = v2_lo % 2^32 + v7_lo % 2^32 + W[k-1]
				v2_lo = z % 2^32
				v2_hi = v2_hi + v7_hi + (z - v2_lo) / 2^32 + W[k]
				vD_lo, vD_hi = XOR(vD_lo, v2_lo), XOR(vD_hi, v2_hi)
				z_lo, z_hi = vD_lo % 2^16, vD_hi % 2^16
				vD_lo, vD_hi = (vD_lo - z_lo) / 2^16 % 2^16 + z_hi * 2^16, (vD_hi - z_hi) / 2^16 % 2^16 + z_lo * 2^16
				z = v8_lo % 2^32 + vD_lo % 2^32
				v8_lo = z % 2^32
				v8_hi = v8_hi + vD_hi + (z - v8_lo) / 2^32
				v7_lo, v7_hi = XOR(v7_lo, v8_lo), XOR(v7_hi, v8_hi)
				z_lo, z_hi = v7_lo % 2^31, v7_hi % 2^31
				v7_lo, v7_hi = z_lo * 2^1 + (v7_hi - z_hi) / 2^31 % 2^1, z_hi * 2^1 + (v7_lo - z_lo) / 2^31 % 2^1
				k = row[15] * 2
				z = v3_lo % 2^32 + v4_lo % 2^32 + W[k-1]
				v3_lo = z % 2^32
				v3_hi = v3_hi + v4_hi + (z - v3_lo) / 2^32 + W[k]
				vE_lo, vE_hi = XOR(vE_hi, v3_hi), XOR(vE_lo, v3_lo)
				z = v9_lo % 2^32 + vE_lo % 2^32
				v9_lo = z % 2^32
				v9_hi = v9_hi + vE_hi + (z - v9_lo) / 2^32
				v4_lo, v4_hi = XOR(v4_lo, v9_lo), XOR(v4_hi, v9_hi)
				z_lo, z_hi = v4_lo % 2^24, v4_hi % 2^24
				v4_lo, v4_hi = (v4_lo - z_lo) / 2^24 % 2^8 + z_hi * 2^8, (v4_hi - z_hi) / 2^24 % 2^8 + z_lo * 2^8
				k = row[16] * 2
				z = v3_lo % 2^32 + v4_lo % 2^32 + W[k-1]
				v3_lo = z % 2^32
				v3_hi = v3_hi + v4_hi + (z - v3_lo) / 2^32 + W[k]
				vE_lo, vE_hi = XOR(vE_lo, v3_lo), XOR(vE_hi, v3_hi)
				z_lo, z_hi = vE_lo % 2^16, vE_hi % 2^16
				vE_lo, vE_hi = (vE_lo - z_lo) / 2^16 % 2^16 + z_hi * 2^16, (vE_hi - z_hi) / 2^16 % 2^16 + z_lo * 2^16
				z = v9_lo % 2^32 + vE_lo % 2^32
				v9_lo = z % 2^32
				v9_hi = v9_hi + vE_hi + (z - v9_lo) / 2^32
				v4_lo, v4_hi = XOR(v4_lo, v9_lo), XOR(v4_hi, v9_hi)
				z_lo, z_hi = v4_lo % 2^31, v4_hi % 2^31
				v4_lo, v4_hi = z_lo * 2^1 + (v4_hi - z_hi) / 2^31 % 2^1, z_hi * 2^1 + (v4_lo - z_lo) / 2^31 % 2^1
			end
			h1_lo = XOR(h1_lo, v0_lo, v8_lo) % 2^32
			h2_lo = XOR(h2_lo, v1_lo, v9_lo) % 2^32
			h3_lo = XOR(h3_lo, v2_lo, vA_lo) % 2^32
			h4_lo = XOR(h4_lo, v3_lo, vB_lo) % 2^32
			h5_lo = XOR(h5_lo, v4_lo, vC_lo) % 2^32
			h6_lo = XOR(h6_lo, v5_lo, vD_lo) % 2^32
			h7_lo = XOR(h7_lo, v6_lo, vE_lo) % 2^32
			h8_lo = XOR(h8_lo, v7_lo, vF_lo) % 2^32
			h1_hi = XOR(h1_hi, v0_hi, v8_hi) % 2^32
			h2_hi = XOR(h2_hi, v1_hi, v9_hi) % 2^32
			h3_hi = XOR(h3_hi, v2_hi, vA_hi) % 2^32
			h4_hi = XOR(h4_hi, v3_hi, vB_hi) % 2^32
			h5_hi = XOR(h5_hi, v4_hi, vC_hi) % 2^32
			h6_hi = XOR(h6_hi, v5_hi, vD_hi) % 2^32
			h7_hi = XOR(h7_hi, v6_hi, vE_hi) % 2^32
			h8_hi = XOR(h8_hi, v7_hi, vF_hi) % 2^32
		end
		H_lo[1], H_lo[2], H_lo[3], H_lo[4], H_lo[5], H_lo[6], H_lo[7], H_lo[8] = h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo
		H_hi[1], H_hi[2], H_hi[3], H_hi[4], H_hi[5], H_hi[6], H_hi[7], H_hi[8] = h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi
		return bytes_compressed
	end


	function blake3_feed_64(str, offs, size, flags, chunk_index, H_in, H_out, wide_output, block_length)
		-- offs >= 0, size >= 0, size is multiple of 64
		block_length = block_length or 64
		local W = common_W
		local h1, h2, h3, h4, h5, h6, h7, h8 = H_in[1], H_in[2], H_in[3], H_in[4], H_in[5], H_in[6], H_in[7], H_in[8]
		H_out = H_out or H_in
		for pos = offs, offs + size - 1, 64 do
			if str then
				for j = 1, 16 do
					pos = pos + 4
					local a, b, c, d = byte(str, pos - 3, pos)
					W[j] = ((d * 256 + c) * 256 + b) * 256 + a
				end
			end
			local v0, v1, v2, v3, v4, v5, v6, v7 = h1, h2, h3, h4, h5, h6, h7, h8
			local v8, v9, vA, vB = sha2_H_hi[1], sha2_H_hi[2], sha2_H_hi[3], sha2_H_hi[4]
			local vC = chunk_index % 2^32         -- t0 = low_4_bytes(chunk_index)
			local vD = (chunk_index - vC) / 2^32  -- t1 = high_4_bytes(chunk_index)
			local vE, vF = block_length, flags
			for j = 1, 7 do
				v0 = v0 + v4 + W[perm_blake3[j]]
				vC = XOR(vC, v0) % 2^32 / 2^16
				vC = vC % 1 * (2^32 - 1) + vC
				v8 = v8 + vC
				v4 = XOR(v4, v8) % 2^32 / 2^12
				v4 = v4 % 1 * (2^32 - 1) + v4
				v0 = v0 + v4 + W[perm_blake3[j + 14]]
				vC = XOR(vC, v0) % 2^32 / 2^8
				vC = vC % 1 * (2^32 - 1) + vC
				v8 = v8 + vC
				v4 = XOR(v4, v8) % 2^32 / 2^7
				v4 = v4 % 1 * (2^32 - 1) + v4
				v1 = v1 + v5 + W[perm_blake3[j + 1]]
				vD = XOR(vD, v1) % 2^32 / 2^16
				vD = vD % 1 * (2^32 - 1) + vD
				v9 = v9 + vD
				v5 = XOR(v5, v9) % 2^32 / 2^12
				v5 = v5 % 1 * (2^32 - 1) + v5
				v1 = v1 + v5 + W[perm_blake3[j + 2]]
				vD = XOR(vD, v1) % 2^32 / 2^8
				vD = vD % 1 * (2^32 - 1) + vD
				v9 = v9 + vD
				v5 = XOR(v5, v9) % 2^32 / 2^7
				v5 = v5 % 1 * (2^32 - 1) + v5
				v2 = v2 + v6 + W[perm_blake3[j + 16]]
				vE = XOR(vE, v2) % 2^32 / 2^16
				vE = vE % 1 * (2^32 - 1) + vE
				vA = vA + vE
				v6 = XOR(v6, vA) % 2^32 / 2^12
				v6 = v6 % 1 * (2^32 - 1) + v6
				v2 = v2 + v6 + W[perm_blake3[j + 7]]
				vE = XOR(vE, v2) % 2^32 / 2^8
				vE = vE % 1 * (2^32 - 1) + vE
				vA = vA + vE
				v6 = XOR(v6, vA) % 2^32 / 2^7
				v6 = v6 % 1 * (2^32 - 1) + v6
				v3 = v3 + v7 + W[perm_blake3[j + 15]]
				vF = XOR(vF, v3) % 2^32 / 2^16
				vF = vF % 1 * (2^32 - 1) + vF
				vB = vB + vF
				v7 = XOR(v7, vB) % 2^32 / 2^12
				v7 = v7 % 1 * (2^32 - 1) + v7
				v3 = v3 + v7 + W[perm_blake3[j + 17]]
				vF = XOR(vF, v3) % 2^32 / 2^8
				vF = vF % 1 * (2^32 - 1) + vF
				vB = vB + vF
				v7 = XOR(v7, vB) % 2^32 / 2^7
				v7 = v7 % 1 * (2^32 - 1) + v7
				v0 = v0 + v5 + W[perm_blake3[j + 21]]
				vF = XOR(vF, v0) % 2^32 / 2^16
				vF = vF % 1 * (2^32 - 1) + vF
				vA = vA + vF
				v5 = XOR(v5, vA) % 2^32 / 2^12
				v5 = v5 % 1 * (2^32 - 1) + v5
				v0 = v0 + v5 + W[perm_blake3[j + 5]]
				vF = XOR(vF, v0) % 2^32 / 2^8
				vF = vF % 1 * (2^32 - 1) + vF
				vA = vA + vF
				v5 = XOR(v5, vA) % 2^32 / 2^7
				v5 = v5 % 1 * (2^32 - 1) + v5
				v1 = v1 + v6 + W[perm_blake3[j + 3]]
				vC = XOR(vC, v1) % 2^32 / 2^16
				vC = vC % 1 * (2^32 - 1) + vC
				vB = vB + vC
				v6 = XOR(v6, vB) % 2^32 / 2^12
				v6 = v6 % 1 * (2^32 - 1) + v6
				v1 = v1 + v6 + W[perm_blake3[j + 6]]
				vC = XOR(vC, v1) % 2^32 / 2^8
				vC = vC % 1 * (2^32 - 1) + vC
				vB = vB + vC
				v6 = XOR(v6, vB) % 2^32 / 2^7
				v6 = v6 % 1 * (2^32 - 1) + v6
				v2 = v2 + v7 + W[perm_blake3[j + 4]]
				vD = XOR(vD, v2) % 2^32 / 2^16
				vD = vD % 1 * (2^32 - 1) + vD
				v8 = v8 + vD
				v7 = XOR(v7, v8) % 2^32 / 2^12
				v7 = v7 % 1 * (2^32 - 1) + v7
				v2 = v2 + v7 + W[perm_blake3[j + 18]]
				vD = XOR(vD, v2) % 2^32 / 2^8
				vD = vD % 1 * (2^32 - 1) + vD
				v8 = v8 + vD
				v7 = XOR(v7, v8) % 2^32 / 2^7
				v7 = v7 % 1 * (2^32 - 1) + v7
				v3 = v3 + v4 + W[perm_blake3[j + 19]]
				vE = XOR(vE, v3) % 2^32 / 2^16
				vE = vE % 1 * (2^32 - 1) + vE
				v9 = v9 + vE
				v4 = XOR(v4, v9) % 2^32 / 2^12
				v4 = v4 % 1 * (2^32 - 1) + v4
				v3 = v3 + v4 + W[perm_blake3[j + 20]]
				vE = XOR(vE, v3) % 2^32 / 2^8
				vE = vE % 1 * (2^32 - 1) + vE
				v9 = v9 + vE
				v4 = XOR(v4, v9) % 2^32 / 2^7
				v4 = v4 % 1 * (2^32 - 1) + v4
			end
			if wide_output then
				H_out[ 9] = XOR(h1, v8)
				H_out[10] = XOR(h2, v9)
				H_out[11] = XOR(h3, vA)
				H_out[12] = XOR(h4, vB)
				H_out[13] = XOR(h5, vC)
				H_out[14] = XOR(h6, vD)
				H_out[15] = XOR(h7, vE)
				H_out[16] = XOR(h8, vF)
			end
			h1 = XOR(v0, v8)
			h2 = XOR(v1, v9)
			h3 = XOR(v2, vA)
			h4 = XOR(v3, vB)
			h5 = XOR(v4, vC)
			h6 = XOR(v5, vD)
			h7 = XOR(v6, vE)
			h8 = XOR(v7, vF)
		end
		H_out[1], H_out[2], H_out[3], H_out[4], H_out[5], H_out[6], H_out[7], H_out[8] = h1, h2, h3, h4, h5, h6, h7, h8
	end

end


--------------------------------------------------------------------------------
-- MAGIC NUMBERS CALCULATOR
--------------------------------------------------------------------------------
-- Q:
--    Is 53-bit "double" math enough to calculate square roots and cube roots of primes with 64 correct bits after decimal point?
-- A:
--    Yes, 53-bit "double" arithmetic is enough.
--    We could obtain first 40 bits by direct calculation of p^(1/3) and next 40 bits by one step of Newton's method.

do
	local function mul(src1, src2, factor, result_length)
		-- src1, src2 - long integers (arrays of digits in base 2^24)
		-- factor - small integer
		-- returns long integer result (src1 * src2 * factor) and its floating point approximation
		local result, carry, value, weight = {}, 0.0, 0.0, 1.0
		for j = 1, result_length do
			for k = math_max(1, j + 1 - #src2), math_min(j, #src1) do
				carry = carry + factor * src1[k] * src2[j + 1 - k]  -- "int32" is not enough for multiplication result, that's why "factor" must be of type "double"
			end
			local digit = carry % 2^24
			result[j] = floor(digit)
			carry = (carry - digit) / 2^24
			value = value + digit * weight
			weight = weight * 2^24
		end
		return result, value
	end

	local idx, step, p, one, sqrt_hi, sqrt_lo = 0, {4, 1, 2, -2, 2}, 4, {1}, sha2_H_hi, sha2_H_lo
	repeat
		p = p + step[p % 6]
		local d = 1
		repeat
			d = d + step[d % 6]
			if d*d > p then -- next prime number is found
				local root = p^(1/3)
				local R = root * 2^40
				R = mul({R - R % 1}, one, 1.0, 2)
				local _, delta = mul(R, mul(R, R, 1.0, 4), -1.0, 4)
				local hi = R[2] % 65536 * 65536 + floor(R[1] / 256)
				local lo = R[1] % 256 * 16777216 + floor(delta * (2^-56 / 3) * root / p)
				if idx < 16 then
					root = p^(1/2)
					R = root * 2^40
					R = mul({R - R % 1}, one, 1.0, 2)
					_, delta = mul(R, R, -1.0, 2)
					local hi = R[2] % 65536 * 65536 + floor(R[1] / 256)
					local lo = R[1] % 256 * 16777216 + floor(delta * 2^-17 / root)
					local idx = idx % 8 + 1
					sha2_H_ext256[224][idx] = lo
					sqrt_hi[idx], sqrt_lo[idx] = hi, lo + hi * hi_factor
					if idx > 7 then
						sqrt_hi, sqrt_lo = sha2_H_ext512_hi[384], sha2_H_ext512_lo[384]
					end
				end
				idx = idx + 1
				sha2_K_hi[idx], sha2_K_lo[idx] = hi, lo % K_lo_modulo + hi * hi_factor
				break
			end
		until p % d == 0
	until idx > 79
end

-- Calculating IVs for SHA512/224 and SHA512/256
for width = 224, 256, 32 do
	local H_lo, H_hi = {}
	if HEX64 then
		for j = 1, 8 do
			H_lo[j] = XORA5(sha2_H_lo[j])
		end
	else
		H_hi = {}
		for j = 1, 8 do
			H_lo[j] = XORA5(sha2_H_lo[j])
			H_hi[j] = XORA5(sha2_H_hi[j])
		end
	end
	sha512_feed_128(H_lo, H_hi, "SHA-512/"..tostring(width).."\128"..string_rep("\0", 115).."\88", 0, 128)
	sha2_H_ext512_lo[width] = H_lo
	sha2_H_ext512_hi[width] = H_hi
end

-- Constants for MD5
do
	local sin, abs, modf = math.sin, math.abs, math.modf
	for idx = 1, 64 do
		-- we can't use formula floor(abs(sin(idx))*2^32) because its result may be beyond integer range on Lua built with 32-bit integers
		local hi, lo = modf(abs(sin(idx)) * 2^16)
		md5_K[idx] = hi * 65536 + floor(lo * 2^16)
	end
end

-- Constants for SHA-3
do
	local sh_reg = 29

	local function next_bit()
		local r = sh_reg % 2
		sh_reg = XOR_BYTE((sh_reg - r) / 2, 142 * r)
		return r
	end

	for idx = 1, 24 do
		local lo, m = 0
		for _ = 1, 6 do
			m = m and m * m * 2 or 1
			lo = lo + next_bit() * m
		end
		local hi = next_bit() * m
		sha3_RC_hi[idx], sha3_RC_lo[idx] = hi, lo + hi * hi_factor_keccak
	end
end

if branch == "FFI" then
	sha2_K_hi = ffi.new("uint32_t[?]", #sha2_K_hi + 1, 0, unpack(sha2_K_hi))
	sha2_K_lo = ffi.new("int64_t[?]",  #sha2_K_lo + 1, 0, unpack(sha2_K_lo))
	--md5_K = ffi.new("uint32_t[?]", #md5_K + 1, 0, unpack(md5_K))
	if hi_factor_keccak == 0 then
		sha3_RC_lo = ffi.new("uint32_t[?]", #sha3_RC_lo + 1, 0, unpack(sha3_RC_lo))
		sha3_RC_hi = ffi.new("uint32_t[?]", #sha3_RC_hi + 1, 0, unpack(sha3_RC_hi))
	else
		sha3_RC_lo = ffi.new("int64_t[?]", #sha3_RC_lo + 1, 0, unpack(sha3_RC_lo))
	end
end


--------------------------------------------------------------------------------
-- MAIN FUNCTIONS
--------------------------------------------------------------------------------

local function sha256ext(width, message)
	-- Create an instance (private objects for current calculation)
	local H, length, tail = {unpack(sha2_H_ext256[width])}, 0.0, ""

	local function partial(message_part)
		if message_part then
			if tail then
				length = length + #message_part
				local offs = 0
				if tail ~= "" and #tail + #message_part >= 64 then
					offs = 64 - #tail
					sha256_feed_64(H, tail..sub(message_part, 1, offs), 0, 64)
					tail = ""
				end
				local size = #message_part - offs
				local size_tail = size % 64
				sha256_feed_64(H, message_part, offs, size - size_tail)
				tail = tail..sub(message_part, #message_part + 1 - size_tail)
				return partial
			else
				error("Adding more chunks is not allowed after receiving the result", 2)
			end
		else
			if tail then
				local final_blocks = {tail, "\128", string_rep("\0", (-9 - length) % 64 + 1)}
				tail = nil
				-- Assuming user data length is shorter than (2^53)-9 bytes
				-- Anyway, it looks very unrealistic that someone would spend more than a year of calculations to process 2^53 bytes of data by using this Lua script :-)
				-- 2^53 bytes = 2^56 bits, so "bit-counter" fits in 7 bytes
				length = length * (8 / 256^7)  -- convert "byte-counter" to "bit-counter" and move decimal point to the left
				for j = 4, 10 do
					length = length % 1 * 256
					final_blocks[j] = char(floor(length))
				end
				final_blocks = table_concat(final_blocks)
				sha256_feed_64(H, final_blocks, 0, #final_blocks)
				local max_reg = width / 32
				for j = 1, max_reg do
					H[j] = HEX(H[j])
				end
				H = table_concat(H, "", 1, max_reg)
			end
			return H
		end
	end

	if message then
		-- Actually perform calculations and return the SHA256 digest of a message
		return partial(message)()
	else
		-- Return function for chunk-by-chunk loading
		-- User should feed every chunk of input data as single argument to this function and finally get SHA256 digest by invoking this function without an argument
		return partial
	end
end


local function sha512ext(width, message)
	-- Create an instance (private objects for current calculation)
	local length, tail, H_lo, H_hi = 0.0, "", {unpack(sha2_H_ext512_lo[width])}, not HEX64 and {unpack(sha2_H_ext512_hi[width])}

	local function partial(message_part)
		if message_part then
			if tail then
				length = length + #message_part
				local offs = 0
				if tail ~= "" and #tail + #message_part >= 128 then
					offs = 128 - #tail
					sha512_feed_128(H_lo, H_hi, tail..sub(message_part, 1, offs), 0, 128)
					tail = ""
				end
				local size = #message_part - offs
				local size_tail = size % 128
				sha512_feed_128(H_lo, H_hi, message_part, offs, size - size_tail)
				tail = tail..sub(message_part, #message_part + 1 - size_tail)
				return partial
			else
				error("Adding more chunks is not allowed after receiving the result", 2)
			end
		else
			if tail then
				local final_blocks = {tail, "\128", string_rep("\0", (-17-length) % 128 + 9)}
				tail = nil
				-- Assuming user data length is shorter than (2^53)-17 bytes
				-- 2^53 bytes = 2^56 bits, so "bit-counter" fits in 7 bytes
				length = length * (8 / 256^7)  -- convert "byte-counter" to "bit-counter" and move floating point to the left
				for j = 4, 10 do
					length = length % 1 * 256
					final_blocks[j] = char(floor(length))
				end
				final_blocks = table_concat(final_blocks)
				sha512_feed_128(H_lo, H_hi, final_blocks, 0, #final_blocks)
				local max_reg = ceil(width / 64)
				if HEX64 then
					for j = 1, max_reg do
						H_lo[j] = HEX64(H_lo[j])
					end
				else
					for j = 1, max_reg do
						H_lo[j] = HEX(H_hi[j])..HEX(H_lo[j])
					end
					H_hi = nil
				end
				H_lo = sub(table_concat(H_lo, "", 1, max_reg), 1, width / 4)
			end
			return H_lo
		end
	end

	if message then
		-- Actually perform calculations and return the SHA512 digest of a message
		return partial(message)()
	else
		-- Return function for chunk-by-chunk loading
		-- User should feed every chunk of input data as single argument to this function and finally get SHA512 digest by invoking this function without an argument
		return partial
	end
end


local function md5(message)
	-- Create an instance (private objects for current calculation)
	local H, length, tail = {unpack(md5_sha1_H, 1, 4)}, 0.0, ""

	local function partial(message_part)
		if message_part then
			if tail then
				length = length + #message_part
				local offs = 0
				if tail ~= "" and #tail + #message_part >= 64 then
					offs = 64 - #tail
					md5_feed_64(H, tail..sub(message_part, 1, offs), 0, 64)
					tail = ""
				end
				local size = #message_part - offs
				local size_tail = size % 64
				md5_feed_64(H, message_part, offs, size - size_tail)
				tail = tail..sub(message_part, #message_part + 1 - size_tail)
				return partial
			else
				error("Adding more chunks is not allowed after receiving the result", 2)
			end
		else
			if tail then
				local final_blocks = {tail, "\128", string_rep("\0", (-9 - length) % 64)}
				tail = nil
				length = length * 8  -- convert "byte-counter" to "bit-counter"
				for j = 4, 11 do
					local low_byte = length % 256
					final_blocks[j] = char(low_byte)
					length = (length - low_byte) / 256
				end
				final_blocks = table_concat(final_blocks)
				md5_feed_64(H, final_blocks, 0, #final_blocks)
				for j = 1, 4 do
					H[j] = HEX(H[j])
				end
				H = gsub(table_concat(H), "(..)(..)(..)(..)", "%4%3%2%1")
			end
			return H
		end
	end

	if message then
		-- Actually perform calculations and return the MD5 digest of a message
		return partial(message)()
	else
		-- Return function for chunk-by-chunk loading
		-- User should feed every chunk of input data as single argument to this function and finally get MD5 digest by invoking this function without an argument
		return partial
	end
end


local function sha1(message)
	-- Create an instance (private objects for current calculation)
	local H, length, tail = {unpack(md5_sha1_H)}, 0.0, ""

	local function partial(message_part)
		if message_part then
			if tail then
				length = length + #message_part
				local offs = 0
				if tail ~= "" and #tail + #message_part >= 64 then
					offs = 64 - #tail
					sha1_feed_64(H, tail..sub(message_part, 1, offs), 0, 64)
					tail = ""
				end
				local size = #message_part - offs
				local size_tail = size % 64
				sha1_feed_64(H, message_part, offs, size - size_tail)
				tail = tail..sub(message_part, #message_part + 1 - size_tail)
				return partial
			else
				error("Adding more chunks is not allowed after receiving the result", 2)
			end
		else
			if tail then
				local final_blocks = {tail, "\128", string_rep("\0", (-9 - length) % 64 + 1)}
				tail = nil
				-- Assuming user data length is shorter than (2^53)-9 bytes
				-- 2^53 bytes = 2^56 bits, so "bit-counter" fits in 7 bytes
				length = length * (8 / 256^7)  -- convert "byte-counter" to "bit-counter" and move decimal point to the left
				for j = 4, 10 do
					length = length % 1 * 256
					final_blocks[j] = char(floor(length))
				end
				final_blocks = table_concat(final_blocks)
				sha1_feed_64(H, final_blocks, 0, #final_blocks)
				for j = 1, 5 do
					H[j] = HEX(H[j])
				end
				H = table_concat(H)
			end
			return H
		end
	end

	if message then
		-- Actually perform calculations and return the SHA-1 digest of a message
		return partial(message)()
	else
		-- Return function for chunk-by-chunk loading
		-- User should feed every chunk of input data as single argument to this function and finally get SHA-1 digest by invoking this function without an argument
		return partial
	end
end


local function keccak(block_size_in_bytes, digest_size_in_bytes, is_SHAKE, message)
	-- "block_size_in_bytes" is multiple of 8
	if type(digest_size_in_bytes) ~= "number" then
		-- arguments in SHAKE are swapped:
		--    NIST FIPS 202 defines SHAKE(message,num_bits)
		--    this module   defines SHAKE(num_bytes,message)
		-- it's easy to forget about this swap, hence the check
		error("Argument 'digest_size_in_bytes' must be a number", 2)
	end
	-- Create an instance (private objects for current calculation)
	local tail, lanes_lo, lanes_hi = "", create_array_of_lanes(), hi_factor_keccak == 0 and create_array_of_lanes()
	local result

	local function partial(message_part)
		if message_part then
			if tail then
				local offs = 0
				if tail ~= "" and #tail + #message_part >= block_size_in_bytes then
					offs = block_size_in_bytes - #tail
					keccak_feed(lanes_lo, lanes_hi, tail..sub(message_part, 1, offs), 0, block_size_in_bytes, block_size_in_bytes)
					tail = ""
				end
				local size = #message_part - offs
				local size_tail = size % block_size_in_bytes
				keccak_feed(lanes_lo, lanes_hi, message_part, offs, size - size_tail, block_size_in_bytes)
				tail = tail..sub(message_part, #message_part + 1 - size_tail)
				return partial
			else
				error("Adding more chunks is not allowed after receiving the result", 2)
			end
		else
			if tail then
				-- append the following bits to the message: for usual SHA-3: 011(0*)1, for SHAKE: 11111(0*)1
				local gap_start = is_SHAKE and 31 or 6
				tail = tail..(#tail + 1 == block_size_in_bytes and char(gap_start + 128) or char(gap_start)..string_rep("\0", (-2 - #tail) % block_size_in_bytes).."\128")
				keccak_feed(lanes_lo, lanes_hi, tail, 0, #tail, block_size_in_bytes)
				tail = nil
				local lanes_used = 0
				local total_lanes = floor(block_size_in_bytes / 8)
				local qwords = {}

				local function get_next_qwords_of_digest(qwords_qty)
					-- returns not more than 'qwords_qty' qwords ('qwords_qty' might be non-integer)
					-- doesn't go across keccak-buffer boundary
					-- block_size_in_bytes is a multiple of 8, so, keccak-buffer contains integer number of qwords
					if lanes_used >= total_lanes then
						keccak_feed(lanes_lo, lanes_hi, "\0\0\0\0\0\0\0\0", 0, 8, 8)
						lanes_used = 0
					end
					qwords_qty = floor(math_min(qwords_qty, total_lanes - lanes_used))
					if hi_factor_keccak ~= 0 then
						for j = 1, qwords_qty do
							qwords[j] = HEX64(lanes_lo[lanes_used + j - 1 + lanes_index_base])
						end
					else
						for j = 1, qwords_qty do
							qwords[j] = HEX(lanes_hi[lanes_used + j])..HEX(lanes_lo[lanes_used + j])
						end
					end
					lanes_used = lanes_used + qwords_qty
					return
						gsub(table_concat(qwords, "", 1, qwords_qty), "(..)(..)(..)(..)(..)(..)(..)(..)", "%8%7%6%5%4%3%2%1"),
					qwords_qty * 8
				end

				local parts = {}      -- digest parts
				local last_part, last_part_size = "", 0

				local function get_next_part_of_digest(bytes_needed)
					-- returns 'bytes_needed' bytes, for arbitrary integer 'bytes_needed'
					bytes_needed = bytes_needed or 1
					if bytes_needed <= last_part_size then
						last_part_size = last_part_size - bytes_needed
						local part_size_in_nibbles = bytes_needed * 2
						local result = sub(last_part, 1, part_size_in_nibbles)
						last_part = sub(last_part, part_size_in_nibbles + 1)
						return result
					end
					local parts_qty = 0
					if last_part_size > 0 then
						parts_qty = 1
						parts[parts_qty] = last_part
						bytes_needed = bytes_needed - last_part_size
					end
					-- repeats until the length is enough
					while bytes_needed >= 8 do
						local next_part, next_part_size = get_next_qwords_of_digest(bytes_needed / 8)
						parts_qty = parts_qty + 1
						parts[parts_qty] = next_part
						bytes_needed = bytes_needed - next_part_size
					end
					if bytes_needed > 0 then
						last_part, last_part_size = get_next_qwords_of_digest(1)
						parts_qty = parts_qty + 1
						parts[parts_qty] = get_next_part_of_digest(bytes_needed)
					else
						last_part, last_part_size = "", 0
					end
					return table_concat(parts, "", 1, parts_qty)
				end

				if digest_size_in_bytes < 0 then
					result = get_next_part_of_digest
				else
					result = get_next_part_of_digest(digest_size_in_bytes)
				end
			end
			return result
		end
	end

	if message then
		-- Actually perform calculations and return the SHA-3 digest of a message
		return partial(message)()
	else
		-- Return function for chunk-by-chunk loading
		-- User should feed every chunk of input data as single argument to this function and finally get SHA-3 digest by invoking this function without an argument
		return partial
	end
end


local hex_to_bin, bin_to_hex, bin_to_base64, base64_to_bin
do
	function hex_to_bin(hex_string)
		return (gsub(hex_string, "%x%x",
			function (hh)
				return char(tonumber(hh, 16))
			end
			))
	end

	function bin_to_hex(binary_string)
		return (gsub(binary_string, ".",
			function (c)
				return string_format("%02x", byte(c))
			end
			))
	end

	local base64_symbols = {
		['+'] = 62, ['-'] = 62,  [62] = '+',
		['/'] = 63, ['_'] = 63,  [63] = '/',
		['='] = -1, ['.'] = -1,  [-1] = '='
	}
	local symbol_index = 0
	for j, pair in ipairs{'AZ', 'az', '09'} do
		for ascii = byte(pair), byte(pair, 2) do
			local ch = char(ascii)
			base64_symbols[ch] = symbol_index
			base64_symbols[symbol_index] = ch
			symbol_index = symbol_index + 1
		end
	end

	function bin_to_base64(binary_string)
		local result = {}
		for pos = 1, #binary_string, 3 do
			local c1, c2, c3, c4 = byte(sub(binary_string, pos, pos + 2)..'\0', 1, -1)
			result[#result + 1] =
				base64_symbols[floor(c1 / 4)]
				..base64_symbols[c1 % 4 * 16 + floor(c2 / 16)]
				..base64_symbols[c3 and c2 % 16 * 4 + floor(c3 / 64) or -1]
				..base64_symbols[c4 and c3 % 64 or -1]
		end
		return table_concat(result)
	end

	function base64_to_bin(base64_string)
		local result, chars_qty = {}, 3
		for pos, ch in gmatch(gsub(base64_string, '%s+', ''), '()(.)') do
			local code = base64_symbols[ch]
			if code < 0 then
				chars_qty = chars_qty - 1
				code = 0
			end
			local idx = pos % 4
			if idx > 0 then
				result[-idx] = code
			else
				local c1 = result[-1] * 4 + floor(result[-2] / 16)
				local c2 = (result[-2] % 16) * 16 + floor(result[-3] / 4)
				local c3 = (result[-3] % 4) * 64 + code
				result[#result + 1] = sub(char(c1, c2, c3), 1, chars_qty)
			end
		end
		return table_concat(result)
	end

end


local block_size_for_HMAC  -- this table will be initialized at the end of the module

local function pad_and_xor(str, result_length, byte_for_xor)
	return gsub(str, ".",
		function(c)
			return char(XOR_BYTE(byte(c), byte_for_xor))
		end
	)..string_rep(char(byte_for_xor), result_length - #str)
end

local function hmac(hash_func, key, message)
	-- Create an instance (private objects for current calculation)
	local block_size = block_size_for_HMAC[hash_func]
	if not block_size then
		error("Unknown hash function", 2)
	end
	if #key > block_size then
		key = hex_to_bin(hash_func(key))
	end
	local append = hash_func()(pad_and_xor(key, block_size, 0x36))
	local result

	local function partial(message_part)
		if not message_part then
			result = result or hash_func(pad_and_xor(key, block_size, 0x5C)..hex_to_bin(append()))
			return result
		elseif result then
			error("Adding more chunks is not allowed after receiving the result", 2)
		else
			append(message_part)
			return partial
		end
	end

	if message then
		-- Actually perform calculations and return the HMAC of a message
		return partial(message)()
	else
		-- Return function for chunk-by-chunk loading of a message
		-- User should feed every chunk of the message as single argument to this function and finally get HMAC by invoking this function without an argument
		return partial
	end
end


local function xor_blake2_salt(salt, letter, H_lo, H_hi)
	-- salt: concatenation of "Salt"+"Personalization" fields
	local max_size = letter == "s" and 16 or 32
	local salt_size = #salt
	if salt_size > max_size then
		error(string_format("For BLAKE2%s/BLAKE2%sp/BLAKE2X%s the 'salt' parameter length must not exceed %d bytes", letter, letter, letter, max_size), 2)
	end
	if H_lo then
		local offset, blake2_word_size, xor = 0, letter == "s" and 4 or 8, letter == "s" and XOR or XORA5
		for j = 5, 4 + ceil(salt_size / blake2_word_size) do
			local prev, last
			for _ = 1, blake2_word_size, 4 do
				offset = offset + 4
				local a, b, c, d = byte(salt, offset - 3, offset)
				local four_bytes = (((d or 0) * 256 + (c or 0)) * 256 + (b or 0)) * 256 + (a or 0)
				prev, last = last, four_bytes
			end
			H_lo[j] = xor(H_lo[j], prev and last * hi_factor + prev or last)
			if H_hi then
				H_hi[j] = xor(H_hi[j], last)
			end
		end
	end
end

local function blake2s(message, key, salt, digest_size_in_bytes, XOF_length, B2_offset)
	-- message:  binary string to be hashed (or nil for "chunk-by-chunk" input mode)
	-- key:      (optional) binary string up to 32 bytes, by default empty string
	-- salt:     (optional) binary string up to 16 bytes, by default empty string
	-- digest_size_in_bytes: (optional) integer from 1 to 32, by default 32
	-- The last two parameters "XOF_length" and "B2_offset" are for internal use only, user must omit them (or pass nil)
	digest_size_in_bytes = digest_size_in_bytes or 32
	if digest_size_in_bytes < 1 or digest_size_in_bytes > 32 then
		error("BLAKE2s digest length must be from 1 to 32 bytes", 2)
	end
	key = key or ""
	local key_length = #key
	if key_length > 32 then
		error("BLAKE2s key length must not exceed 32 bytes", 2)
	end
	salt = salt or ""
	local bytes_compressed, tail, H = 0.0, "", {unpack(sha2_H_hi)}
	if B2_offset then
		H[1] = XOR(H[1], digest_size_in_bytes)
		H[2] = XOR(H[2], 0x20)
		H[3] = XOR(H[3], B2_offset)
		H[4] = XOR(H[4], 0x20000000 + XOF_length)
	else
		H[1] = XOR(H[1], 0x01010000 + key_length * 256 + digest_size_in_bytes)
		if XOF_length then
			H[4] = XOR(H[4], XOF_length)
		end
	end
	if salt ~= "" then
		xor_blake2_salt(salt, "s", H)
	end

	local function partial(message_part)
		if message_part then
			if tail then
				local offs = 0
				if tail ~= "" and #tail + #message_part > 64 then
					offs = 64 - #tail
					bytes_compressed = blake2s_feed_64(H, tail..sub(message_part, 1, offs), 0, 64, bytes_compressed)
					tail = ""
				end
				local size = #message_part - offs
				local size_tail = size > 0 and (size - 1) % 64 + 1 or 0
				bytes_compressed = blake2s_feed_64(H, message_part, offs, size - size_tail, bytes_compressed)
				tail = tail..sub(message_part, #message_part + 1 - size_tail)
				return partial
			else
				error("Adding more chunks is not allowed after receiving the result", 2)
			end
		else
			if tail then
				if B2_offset then
					blake2s_feed_64(H, nil, 0, 64, 0, 32)
				else
					blake2s_feed_64(H, tail..string_rep("\0", 64 - #tail), 0, 64, bytes_compressed, #tail)
				end
				tail = nil
				if not XOF_length or B2_offset then
					local max_reg = ceil(digest_size_in_bytes / 4)
					for j = 1, max_reg do
						H[j] = HEX(H[j])
					end
					H = sub(gsub(table_concat(H, "", 1, max_reg), "(..)(..)(..)(..)", "%4%3%2%1"), 1, digest_size_in_bytes * 2)
				end
			end
			return H
		end
	end

	if key_length > 0 then
		partial(key..string_rep("\0", 64 - key_length))
	end
	if B2_offset then
		return partial()
	elseif message then
		-- Actually perform calculations and return the BLAKE2s digest of a message
		return partial(message)()
	else
		-- Return function for chunk-by-chunk loading
		-- User should feed every chunk of input data as single argument to this function and finally get BLAKE2s digest by invoking this function without an argument
		return partial
	end
end

local function blake2b(message, key, salt, digest_size_in_bytes, XOF_length, B2_offset)
	-- message:  binary string to be hashed (or nil for "chunk-by-chunk" input mode)
	-- key:      (optional) binary string up to 64 bytes, by default empty string
	-- salt:     (optional) binary string up to 32 bytes, by default empty string
	-- digest_size_in_bytes: (optional) integer from 1 to 64, by default 64
	-- The last two parameters "XOF_length" and "B2_offset" are for internal use only, user must omit them (or pass nil)
	digest_size_in_bytes = floor(digest_size_in_bytes or 64)
	if digest_size_in_bytes < 1 or digest_size_in_bytes > 64 then
		error("BLAKE2b digest length must be from 1 to 64 bytes", 2)
	end
	key = key or ""
	local key_length = #key
	if key_length > 64 then
		error("BLAKE2b key length must not exceed 64 bytes", 2)
	end
	salt = salt or ""
	local bytes_compressed, tail, H_lo, H_hi = 0.0, "", {unpack(sha2_H_lo)}, not HEX64 and {unpack(sha2_H_hi)}
	if B2_offset then
		if H_hi then
			H_lo[1] = XORA5(H_lo[1], digest_size_in_bytes)
			H_hi[1] = XORA5(H_hi[1], 0x40)
			H_lo[2] = XORA5(H_lo[2], B2_offset)
			H_hi[2] = XORA5(H_hi[2], XOF_length)
		else
			H_lo[1] = XORA5(H_lo[1], 0x40 * hi_factor + digest_size_in_bytes)
			H_lo[2] = XORA5(H_lo[2], XOF_length * hi_factor + B2_offset)
		end
		H_lo[3] = XORA5(H_lo[3], 0x4000)
	else
		H_lo[1] = XORA5(H_lo[1], 0x01010000 + key_length * 256 + digest_size_in_bytes)
		if XOF_length then
			if H_hi then
				H_hi[2] = XORA5(H_hi[2], XOF_length)
			else
				H_lo[2] = XORA5(H_lo[2], XOF_length * hi_factor)
			end
		end
	end
	if salt ~= "" then
		xor_blake2_salt(salt, "b", H_lo, H_hi)
	end

	local function partial(message_part)
		if message_part then
			if tail then
				local offs = 0
				if tail ~= "" and #tail + #message_part > 128 then
					offs = 128 - #tail
					bytes_compressed = blake2b_feed_128(H_lo, H_hi, tail..sub(message_part, 1, offs), 0, 128, bytes_compressed)
					tail = ""
				end
				local size = #message_part - offs
				local size_tail = size > 0 and (size - 1) % 128 + 1 or 0
				bytes_compressed = blake2b_feed_128(H_lo, H_hi, message_part, offs, size - size_tail, bytes_compressed)
				tail = tail..sub(message_part, #message_part + 1 - size_tail)
				return partial
			else
				error("Adding more chunks is not allowed after receiving the result", 2)
			end
		else
			if tail then
				if B2_offset then
					blake2b_feed_128(H_lo, H_hi, nil, 0, 128, 0, 64)
				else
					blake2b_feed_128(H_lo, H_hi, tail..string_rep("\0", 128 - #tail), 0, 128, bytes_compressed, #tail)
				end
				tail = nil
				if XOF_length and not B2_offset then
					if H_hi then
						for j = 8, 1, -1 do
							H_lo[j*2] = H_hi[j]
							H_lo[j*2-1] = H_lo[j]
						end
						return H_lo, 16
					end
				else
					local max_reg = ceil(digest_size_in_bytes / 8)
					if H_hi then
						for j = 1, max_reg do
							H_lo[j] = HEX(H_hi[j])..HEX(H_lo[j])
						end
					else
						for j = 1, max_reg do
							H_lo[j] = HEX64(H_lo[j])
						end
					end
					H_lo = sub(gsub(table_concat(H_lo, "", 1, max_reg), "(..)(..)(..)(..)(..)(..)(..)(..)", "%8%7%6%5%4%3%2%1"), 1, digest_size_in_bytes * 2)
				end
				H_hi = nil
			end
			return H_lo
		end
	end

	if key_length > 0 then
		partial(key..string_rep("\0", 128 - key_length))
	end
	if B2_offset then
		return partial()
	elseif message then
		-- Actually perform calculations and return the BLAKE2b digest of a message
		return partial(message)()
	else
		-- Return function for chunk-by-chunk loading
		-- User should feed every chunk of input data as single argument to this function and finally get BLAKE2b digest by invoking this function without an argument
		return partial
	end
end

local function blake2sp(message, key, salt, digest_size_in_bytes)
	-- message:  binary string to be hashed (or nil for "chunk-by-chunk" input mode)
	-- key:      (optional) binary string up to 32 bytes, by default empty string
	-- salt:     (optional) binary string up to 16 bytes, by default empty string
	-- digest_size_in_bytes: (optional) integer from 1 to 32, by default 32
	digest_size_in_bytes = digest_size_in_bytes or 32
	if digest_size_in_bytes < 1 or digest_size_in_bytes > 32 then
		error("BLAKE2sp digest length must be from 1 to 32 bytes", 2)
	end
	key = key or ""
	local key_length = #key
	if key_length > 32 then
		error("BLAKE2sp key length must not exceed 32 bytes", 2)
	end
	salt = salt or ""
	local instances, length, first_dword_of_parameter_block, result = {}, 0.0, 0x02080000 + key_length * 256 + digest_size_in_bytes
	for j = 1, 8 do
		local bytes_compressed, tail, H = 0.0, "", {unpack(sha2_H_hi)}
		instances[j] = {bytes_compressed, tail, H}
		H[1] = XOR(H[1], first_dword_of_parameter_block)
		H[3] = XOR(H[3], j-1)
		H[4] = XOR(H[4], 0x20000000)
		if salt ~= "" then
			xor_blake2_salt(salt, "s", H)
		end
	end

	local function partial(message_part)
		if message_part then
			if instances then
				local from = 0
				while true do
					local to = math_min(from + 64 - length % 64, #message_part)
					if to > from then
						local inst = instances[floor(length / 64) % 8 + 1]
						local part = sub(message_part, from + 1, to)
						length, from = length + to - from, to
						local bytes_compressed, tail = inst[1], inst[2]
						if #tail < 64 then
							tail = tail..part
						else
							local H = inst[3]
							bytes_compressed = blake2s_feed_64(H, tail, 0, 64, bytes_compressed)
							tail = part
						end
						inst[1], inst[2] = bytes_compressed, tail
					else
						break
					end
				end
				return partial
			else
				error("Adding more chunks is not allowed after receiving the result", 2)
			end
		else
			if instances then
				local root_H = {unpack(sha2_H_hi)}
				root_H[1] = XOR(root_H[1], first_dword_of_parameter_block)
				root_H[4] = XOR(root_H[4], 0x20010000)
				if salt ~= "" then
					xor_blake2_salt(salt, "s", root_H)
				end
				for j = 1, 8 do
					local inst = instances[j]
					local bytes_compressed, tail, H = inst[1], inst[2], inst[3]
					blake2s_feed_64(H, tail..string_rep("\0", 64 - #tail), 0, 64, bytes_compressed, #tail, j == 8)
					if j % 2 == 0 then
						local index = 0
						for k = j - 1, j do
							local inst = instances[k]
							local H = inst[3]
							for i = 1, 8 do
								index = index + 1
								common_W_blake2s[index] = H[i]
							end
						end
						blake2s_feed_64(root_H, nil, 0, 64, 64 * (j/2 - 1), j == 8 and 64, j == 8)
					end
				end
				instances = nil
				local max_reg = ceil(digest_size_in_bytes / 4)
				for j = 1, max_reg do
					root_H[j] = HEX(root_H[j])
				end
				result = sub(gsub(table_concat(root_H, "", 1, max_reg), "(..)(..)(..)(..)", "%4%3%2%1"), 1, digest_size_in_bytes * 2)
			end
			return result
		end
	end

	if key_length > 0 then
		key = key..string_rep("\0", 64 - key_length)
		for j = 1, 8 do
			partial(key)
		end
	end
	if message then
		-- Actually perform calculations and return the BLAKE2sp digest of a message
		return partial(message)()
	else
		-- Return function for chunk-by-chunk loading
		-- User should feed every chunk of input data as single argument to this function and finally get BLAKE2sp digest by invoking this function without an argument
		return partial
	end

end

local function blake2bp(message, key, salt, digest_size_in_bytes)
	-- message:  binary string to be hashed (or nil for "chunk-by-chunk" input mode)
	-- key:      (optional) binary string up to 64 bytes, by default empty string
	-- salt:     (optional) binary string up to 32 bytes, by default empty string
	-- digest_size_in_bytes: (optional) integer from 1 to 64, by default 64
	digest_size_in_bytes = digest_size_in_bytes or 64
	if digest_size_in_bytes < 1 or digest_size_in_bytes > 64 then
		error("BLAKE2bp digest length must be from 1 to 64 bytes", 2)
	end
	key = key or ""
	local key_length = #key
	if key_length > 64 then
		error("BLAKE2bp key length must not exceed 64 bytes", 2)
	end
	salt = salt or ""
	local instances, length, first_dword_of_parameter_block, result = {}, 0.0, 0x02040000 + key_length * 256 + digest_size_in_bytes
	for j = 1, 4 do
		local bytes_compressed, tail, H_lo, H_hi = 0.0, "", {unpack(sha2_H_lo)}, not HEX64 and {unpack(sha2_H_hi)}
		instances[j] = {bytes_compressed, tail, H_lo, H_hi}
		H_lo[1] = XORA5(H_lo[1], first_dword_of_parameter_block)
		H_lo[2] = XORA5(H_lo[2], j-1)
		H_lo[3] = XORA5(H_lo[3], 0x4000)
		if salt ~= "" then
			xor_blake2_salt(salt, "b", H_lo, H_hi)
		end
	end

	local function partial(message_part)
		if message_part then
			if instances then
				local from = 0
				while true do
					local to = math_min(from + 128 - length % 128, #message_part)
					if to > from then
						local inst = instances[floor(length / 128) % 4 + 1]
						local part = sub(message_part, from + 1, to)
						length, from = length + to - from, to
						local bytes_compressed, tail = inst[1], inst[2]
						if #tail < 128 then
							tail = tail..part
						else
							local H_lo, H_hi = inst[3], inst[4]
							bytes_compressed = blake2b_feed_128(H_lo, H_hi, tail, 0, 128, bytes_compressed)
							tail = part
						end
						inst[1], inst[2] = bytes_compressed, tail
					else
						break
					end
				end
				return partial
			else
				error("Adding more chunks is not allowed after receiving the result", 2)
			end
		else
			if instances then
				local root_H_lo, root_H_hi = {unpack(sha2_H_lo)}, not HEX64 and {unpack(sha2_H_hi)}
				root_H_lo[1] = XORA5(root_H_lo[1], first_dword_of_parameter_block)
				root_H_lo[3] = XORA5(root_H_lo[3], 0x4001)
				if salt ~= "" then
					xor_blake2_salt(salt, "b", root_H_lo, root_H_hi)
				end
				for j = 1, 4 do
					local inst = instances[j]
					local bytes_compressed, tail, H_lo, H_hi = inst[1], inst[2], inst[3], inst[4]
					blake2b_feed_128(H_lo, H_hi, tail..string_rep("\0", 128 - #tail), 0, 128, bytes_compressed, #tail, j == 4)
					if j % 2 == 0 then
						local index = 0
						for k = j - 1, j do
							local inst = instances[k]
							local H_lo, H_hi = inst[3], inst[4]
							for i = 1, 8 do
								index = index + 1
								common_W_blake2b[index] = H_lo[i]
								if H_hi then
									index = index + 1
									common_W_blake2b[index] = H_hi[i]
								end
							end
						end
						blake2b_feed_128(root_H_lo, root_H_hi, nil, 0, 128, 128 * (j/2 - 1), j == 4 and 128, j == 4)
					end
				end
				instances = nil
				local max_reg = ceil(digest_size_in_bytes / 8)
				if HEX64 then
					for j = 1, max_reg do
						root_H_lo[j] = HEX64(root_H_lo[j])
					end
				else
					for j = 1, max_reg do
						root_H_lo[j] = HEX(root_H_hi[j])..HEX(root_H_lo[j])
					end
				end
				result = sub(gsub(table_concat(root_H_lo, "", 1, max_reg), "(..)(..)(..)(..)(..)(..)(..)(..)", "%8%7%6%5%4%3%2%1"), 1, digest_size_in_bytes * 2)
			end
			return result
		end
	end

	if key_length > 0 then
		key = key..string_rep("\0", 128 - key_length)
		for j = 1, 4 do
			partial(key)
		end
	end
	if message then
		-- Actually perform calculations and return the BLAKE2bp digest of a message
		return partial(message)()
	else
		-- Return function for chunk-by-chunk loading
		-- User should feed every chunk of input data as single argument to this function and finally get BLAKE2bp digest by invoking this function without an argument
		return partial
	end

end

local function blake2x(inner_func, inner_func_letter, common_W_blake2, block_size, digest_size_in_bytes, message, key, salt)
	local XOF_digest_length_limit, XOF_digest_length, chunk_by_chunk_output = 2^(block_size / 2) - 1
	if digest_size_in_bytes == -1 then  -- infinite digest
		digest_size_in_bytes = math_huge
		XOF_digest_length = floor(XOF_digest_length_limit)
		chunk_by_chunk_output = true
	else
		if digest_size_in_bytes < 0 then
			digest_size_in_bytes = -1.0 * digest_size_in_bytes
			chunk_by_chunk_output = true
		end
		XOF_digest_length = floor(digest_size_in_bytes)
		if XOF_digest_length >= XOF_digest_length_limit then
			error("Requested digest is too long.  BLAKE2X"..inner_func_letter.." finite digest is limited by (2^"..floor(block_size / 2)..")-2 bytes.  Hint: you can generate infinite digest.", 2)
		end
	end
	salt = salt or ""
	if salt ~= "" then
		xor_blake2_salt(salt, inner_func_letter)  -- don't xor, only check the size of salt
	end
	local inner_partial = inner_func(nil, key, salt, nil, XOF_digest_length)
	local result

	local function partial(message_part)
		if message_part then
			if inner_partial then
				inner_partial(message_part)
				return partial
			else
				error("Adding more chunks is not allowed after receiving the result", 2)
			end
		else
			if inner_partial then
				local half_W, half_W_size = inner_partial()
				half_W_size, inner_partial = half_W_size or 8

				local function get_hash_block(block_no)
					-- block_no = 0...(2^32-1)
					local size = math_min(block_size, digest_size_in_bytes - block_no * block_size)
					if size <= 0 then
						return ""
					end
					for j = 1, half_W_size do
						common_W_blake2[j] = half_W[j]
					end
					for j = half_W_size + 1, 2 * half_W_size do
						common_W_blake2[j] = 0
					end
					return inner_func(nil, nil, salt, size, XOF_digest_length, floor(block_no))
				end

				local hash = {}
				if chunk_by_chunk_output then
					local pos, period, cached_block_no, cached_block = 0, block_size * 2^32

					local function get_next_part_of_digest(arg1, arg2)
						if arg1 == "seek" then
							-- Usage #1:  get_next_part_of_digest("seek", new_pos)
							pos = arg2 % period
						else
							-- Usage #2:  hex_string = get_next_part_of_digest(size)
							local size, index = arg1 or 1, 0
							while size > 0 do
								local block_offset = pos % block_size
								local block_no = (pos - block_offset) / block_size
								local part_size = math_min(size, block_size - block_offset)
								if cached_block_no ~= block_no then
									cached_block_no = block_no
									cached_block = get_hash_block(block_no)
								end
								index = index + 1
								hash[index] = sub(cached_block, block_offset * 2 + 1, (block_offset + part_size) * 2)
								size = size - part_size
								pos = (pos + part_size) % period
							end
							return table_concat(hash, "", 1, index)
						end
					end

					result = get_next_part_of_digest
				else
					for j = 1.0, ceil(digest_size_in_bytes / block_size) do
						hash[j] = get_hash_block(j - 1.0)
					end
					result = table_concat(hash)
				end
			end
			return result
		end
	end

	if message then
		-- Actually perform calculations and return the BLAKE2X digest of a message
		return partial(message)()
	else
		-- Return function for chunk-by-chunk loading
		-- User should feed every chunk of input data as single argument to this function and finally get BLAKE2X digest by invoking this function without an argument
		return partial
	end
end

local function blake2xs(digest_size_in_bytes, message, key, salt)
	-- digest_size_in_bytes:
	--    0..65534       = get finite digest as single Lua string
	--    (-1)           = get infinite digest in "chunk-by-chunk" output mode
	--    (-2)..(-65534) = get finite digest in "chunk-by-chunk" output mode
	-- message:  binary string to be hashed (or nil for "chunk-by-chunk" input mode)
	-- key:      (optional) binary string up to 32 bytes, by default empty string
	-- salt:     (optional) binary string up to 16 bytes, by default empty string
	return blake2x(blake2s, "s", common_W_blake2s, 32, digest_size_in_bytes, message, key, salt)
end

local function blake2xb(digest_size_in_bytes, message, key, salt)
	-- digest_size_in_bytes:
	--    0..4294967294       = get finite digest as single Lua string
	--    (-1)                = get infinite digest in "chunk-by-chunk" output mode
	--    (-2)..(-4294967294) = get finite digest in "chunk-by-chunk" output mode
	-- message:  binary string to be hashed (or nil for "chunk-by-chunk" input mode)
	-- key:      (optional) binary string up to 64 bytes, by default empty string
	-- salt:     (optional) binary string up to 32 bytes, by default empty string
	return blake2x(blake2b, "b", common_W_blake2b, 64, digest_size_in_bytes, message, key, salt)
end


local function blake3(message, key, digest_size_in_bytes, message_flags, K, return_array)
	-- message:  binary string to be hashed (or nil for "chunk-by-chunk" input mode)
	-- key:      (optional) binary string up to 32 bytes, by default empty string
	-- digest_size_in_bytes: (optional) by default 32
	--    0,1,2,3,4,...  = get finite digest as single Lua string
	--    (-1)           = get infinite digest in "chunk-by-chunk" output mode
	--    -2,-3,-4,...   = get finite digest in "chunk-by-chunk" output mode
	-- The last three parameters "message_flags", "K" and "return_array" are for internal use only, user must omit them (or pass nil)
	key = key or ""
	digest_size_in_bytes = digest_size_in_bytes or 32
	message_flags = message_flags or 0
	if key == "" then
		K = K or sha2_H_hi
	else
		local key_length = #key
		if key_length > 32 then
			error("BLAKE3 key length must not exceed 32 bytes", 2)
		end
		key = key..string_rep("\0", 32 - key_length)
		K = {}
		for j = 1, 8 do
			local a, b, c, d = byte(key, 4*j-3, 4*j)
			K[j] = ((d * 256 + c) * 256 + b) * 256 + a
		end
		message_flags = message_flags + 16  -- flag:KEYED_HASH
	end
	local tail, H, chunk_index, blocks_in_chunk, stack_size, stack = "", {}, 0, 0, 0, {}
	local final_H_in, final_block_length, chunk_by_chunk_output, result, wide_output = K
	local final_compression_flags = 3      -- flags:CHUNK_START,CHUNK_END

	local function feed_blocks(str, offs, size)
		-- size >= 0, size is multiple of 64
		while size > 0 do
			local part_size_in_blocks, block_flags, H_in = 1, 0, H
			if blocks_in_chunk == 0 then
				block_flags = 1               -- flag:CHUNK_START
				H_in, final_H_in = K, H
				final_compression_flags = 2   -- flag:CHUNK_END
			elseif blocks_in_chunk == 15 then
				block_flags = 2               -- flag:CHUNK_END
				final_compression_flags = 3   -- flags:CHUNK_START,CHUNK_END
				final_H_in = K
			else
				part_size_in_blocks = math_min(size / 64, 15 - blocks_in_chunk)
			end
			local part_size = part_size_in_blocks * 64
			blake3_feed_64(str, offs, part_size, message_flags + block_flags, chunk_index, H_in, H)
			offs, size = offs + part_size, size - part_size
			blocks_in_chunk = (blocks_in_chunk + part_size_in_blocks) % 16
			if blocks_in_chunk == 0 then
				-- completing the currect chunk
				chunk_index = chunk_index + 1.0
				local divider = 2.0
				while chunk_index % divider == 0 do
					divider = divider * 2.0
					stack_size = stack_size - 8
					for j = 1, 8 do
						common_W_blake2s[j] = stack[stack_size + j]
					end
					for j = 1, 8 do
						common_W_blake2s[j + 8] = H[j]
					end
					blake3_feed_64(nil, 0, 64, message_flags + 4, 0, K, H)  -- flag:PARENT
				end
				for j = 1, 8 do
					stack[stack_size + j] = H[j]
				end
				stack_size = stack_size + 8
			end
		end
	end

	local function get_hash_block(block_no)
		local size = math_min(64, digest_size_in_bytes - block_no * 64)
		if block_no < 0 or size <= 0 then
			return ""
		end
		if chunk_by_chunk_output then
			for j = 1, 16 do
				common_W_blake2s[j] = stack[j + 16]
			end
		end
		blake3_feed_64(nil, 0, 64, final_compression_flags, block_no, final_H_in, stack, wide_output, final_block_length)
		if return_array then
			return stack
		end
		local max_reg = ceil(size / 4)
		for j = 1, max_reg do
			stack[j] = HEX(stack[j])
		end
		return sub(gsub(table_concat(stack, "", 1, max_reg), "(..)(..)(..)(..)", "%4%3%2%1"), 1, size * 2)
	end

	local function partial(message_part)
		if message_part then
			if tail then
				local offs = 0
				if tail ~= "" and #tail + #message_part > 64 then
					offs = 64 - #tail
					feed_blocks(tail..sub(message_part, 1, offs), 0, 64)
					tail = ""
				end
				local size = #message_part - offs
				local size_tail = size > 0 and (size - 1) % 64 + 1 or 0
				feed_blocks(message_part, offs, size - size_tail)
				tail = tail..sub(message_part, #message_part + 1 - size_tail)
				return partial
			else
				error("Adding more chunks is not allowed after receiving the result", 2)
			end
		else
			if tail then
				final_block_length = #tail
				tail = tail..string_rep("\0", 64 - #tail)
				if common_W_blake2s[0] then
					for j = 1, 16 do
						local a, b, c, d = byte(tail, 4*j-3, 4*j)
						common_W_blake2s[j] = OR(SHL(d, 24), SHL(c, 16), SHL(b, 8), a)
					end
				else
					for j = 1, 16 do
						local a, b, c, d = byte(tail, 4*j-3, 4*j)
						common_W_blake2s[j] = ((d * 256 + c) * 256 + b) * 256 + a
					end
				end
				tail = nil
				for stack_size = stack_size - 8, 0, -8 do
					blake3_feed_64(nil, 0, 64, message_flags + final_compression_flags, chunk_index, final_H_in, H, nil, final_block_length)
					chunk_index, final_block_length, final_H_in, final_compression_flags = 0, 64, K, 4  -- flag:PARENT
					for j = 1, 8 do
						common_W_blake2s[j] = stack[stack_size + j]
					end
					for j = 1, 8 do
						common_W_blake2s[j + 8] = H[j]
					end
				end
				final_compression_flags = message_flags + final_compression_flags + 8  -- flag:ROOT
				if digest_size_in_bytes < 0 then
					if digest_size_in_bytes == -1 then  -- infinite digest
						digest_size_in_bytes = math_huge
					else
						digest_size_in_bytes = -1.0 * digest_size_in_bytes
					end
					chunk_by_chunk_output = true
					for j = 1, 16 do
						stack[j + 16] = common_W_blake2s[j]
					end
				end
				digest_size_in_bytes = math_min(2^53, digest_size_in_bytes)
				wide_output = digest_size_in_bytes > 32
				if chunk_by_chunk_output then
					local pos, cached_block_no, cached_block = 0.0

					local function get_next_part_of_digest(arg1, arg2)
						if arg1 == "seek" then
							-- Usage #1:  get_next_part_of_digest("seek", new_pos)
							pos = arg2 * 1.0
						else
							-- Usage #2:  hex_string = get_next_part_of_digest(size)
							local size, index = arg1 or 1, 32
							while size > 0 do
								local block_offset = pos % 64
								local block_no = (pos - block_offset) / 64
								local part_size = math_min(size, 64 - block_offset)
								if cached_block_no ~= block_no then
									cached_block_no = block_no
									cached_block = get_hash_block(block_no)
								end
								index = index + 1
								stack[index] = sub(cached_block, block_offset * 2 + 1, (block_offset + part_size) * 2)
								size = size - part_size
								pos = pos + part_size
							end
							return table_concat(stack, "", 33, index)
						end
					end

					result = get_next_part_of_digest
				elseif digest_size_in_bytes <= 64 then
					result = get_hash_block(0)
				else
					local last_block_no = ceil(digest_size_in_bytes / 64) - 1
					for block_no = 0.0, last_block_no do
						stack[33 + block_no] = get_hash_block(block_no)
					end
					result = table_concat(stack, "", 33, 33 + last_block_no)
				end
			end
			return result
		end
	end

	if message then
		-- Actually perform calculations and return the BLAKE3 digest of a message
		return partial(message)()
	else
		-- Return function for chunk-by-chunk loading
		-- User should feed every chunk of input data as single argument to this function and finally get BLAKE3 digest by invoking this function without an argument
		return partial
	end
end

local function blake3_derive_key(key_material, context_string, derived_key_size_in_bytes)
	-- key_material: (string) your source of entropy to derive a key from (for example, it can be a master password)
	--               set to nil for feeding the key material in "chunk-by-chunk" input mode
	-- context_string: (string) unique description of the derived key
	-- digest_size_in_bytes: (optional) by default 32
	--    0,1,2,3,4,...  = get finite derived key as single Lua string
	--    (-1)           = get infinite derived key in "chunk-by-chunk" output mode
	--    -2,-3,-4,...   = get finite derived key in "chunk-by-chunk" output mode
	if type(context_string) ~= "string" then
		error("'context_string' parameter must be a Lua string", 2)
	end
	local K = blake3(context_string, nil, nil, 32, nil, true)           -- flag:DERIVE_KEY_CONTEXT
	return blake3(key_material, nil, derived_key_size_in_bytes, 64, K)  -- flag:DERIVE_KEY_MATERIAL
end



local sha = {
	md5        = md5,                                                                                                                   -- MD5
	sha1       = sha1,                                                                                                                  -- SHA-1
	-- SHA-2 hash functions:
	sha224     = function (message)                       return sha256ext(224, message)                                           end, -- SHA-224
	sha256     = function (message)                       return sha256ext(256, message)                                           end, -- SHA-256
	sha512_224 = function (message)                       return sha512ext(224, message)                                           end, -- SHA-512/224
	sha512_256 = function (message)                       return sha512ext(256, message)                                           end, -- SHA-512/256
	sha384     = function (message)                       return sha512ext(384, message)                                           end, -- SHA-384
	sha512     = function (message)                       return sha512ext(512, message)                                           end, -- SHA-512
	-- SHA-3 hash functions:
	sha3_224   = function (message)                       return keccak((1600 - 2 * 224) / 8, 224 / 8, false, message)             end, -- SHA3-224
	sha3_256   = function (message)                       return keccak((1600 - 2 * 256) / 8, 256 / 8, false, message)             end, -- SHA3-256
	sha3_384   = function (message)                       return keccak((1600 - 2 * 384) / 8, 384 / 8, false, message)             end, -- SHA3-384
	sha3_512   = function (message)                       return keccak((1600 - 2 * 512) / 8, 512 / 8, false, message)             end, -- SHA3-512
	shake128   = function (digest_size_in_bytes, message) return keccak((1600 - 2 * 128) / 8, digest_size_in_bytes, true, message) end, -- SHAKE128
	shake256   = function (digest_size_in_bytes, message) return keccak((1600 - 2 * 256) / 8, digest_size_in_bytes, true, message) end, -- SHAKE256
	-- HMAC:
	hmac       = hmac,  -- HMAC(hash_func, key, message) is applicable to any hash function from this module except SHAKE* and BLAKE*
	-- misc utilities:
	hex_to_bin    = hex_to_bin,     -- converts hexadecimal representation to binary string
	bin_to_hex    = bin_to_hex,     -- converts binary string to hexadecimal representation
	base64_to_bin = base64_to_bin,  -- converts base64 representation to binary string
	bin_to_base64 = bin_to_base64,  -- converts binary string to base64 representation
	-- old style names for backward compatibility:
	hex2bin       = hex_to_bin,
	bin2hex       = bin_to_hex,
	base642bin    = base64_to_bin,
	bin2base64    = bin_to_base64,
	-- BLAKE2 hash functions:
	blake2b  = blake2b,   -- BLAKE2b (message, key, salt, digest_size_in_bytes)
	blake2s  = blake2s,   -- BLAKE2s (message, key, salt, digest_size_in_bytes)
	blake2bp = blake2bp,  -- BLAKE2bp(message, key, salt, digest_size_in_bytes)
	blake2sp = blake2sp,  -- BLAKE2sp(message, key, salt, digest_size_in_bytes)
	blake2xb = blake2xb,  -- BLAKE2Xb(digest_size_in_bytes, message, key, salt)
	blake2xs = blake2xs,  -- BLAKE2Xs(digest_size_in_bytes, message, key, salt)
	-- BLAKE2 aliases:
	blake2      = blake2b,
	blake2b_160 = function (message, key, salt) return blake2b(message, key, salt, 20) end, -- BLAKE2b-160
	blake2b_256 = function (message, key, salt) return blake2b(message, key, salt, 32) end, -- BLAKE2b-256
	blake2b_384 = function (message, key, salt) return blake2b(message, key, salt, 48) end, -- BLAKE2b-384
	blake2b_512 = blake2b,                                                      -- 64       -- BLAKE2b-512
	blake2s_128 = function (message, key, salt) return blake2s(message, key, salt, 16) end, -- BLAKE2s-128
	blake2s_160 = function (message, key, salt) return blake2s(message, key, salt, 20) end, -- BLAKE2s-160
	blake2s_224 = function (message, key, salt) return blake2s(message, key, salt, 28) end, -- BLAKE2s-224
	blake2s_256 = blake2s,                                                      -- 32       -- BLAKE2s-256
	-- BLAKE3 hash function
	blake3            = blake3,             -- BLAKE3    (message, key, digest_size_in_bytes)
	blake3_derive_key = blake3_derive_key,  -- BLAKE3_KDF(key_material, context_string, derived_key_size_in_bytes)
}


block_size_for_HMAC = {
	[sha.md5]        =  64,
	[sha.sha1]       =  64,
	[sha.sha224]     =  64,
	[sha.sha256]     =  64,
	[sha.sha512_224] = 128,
	[sha.sha512_256] = 128,
	[sha.sha384]     = 128,
	[sha.sha512]     = 128,
	[sha.sha3_224]   = 144,  -- (1600 - 2 * 224) / 8
	[sha.sha3_256]   = 136,  -- (1600 - 2 * 256) / 8
	[sha.sha3_384]   = 104,  -- (1600 - 2 * 384) / 8
	[sha.sha3_512]   =  72,  -- (1600 - 2 * 512) / 8
}


return sha]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBX6B521EE44D8F43559CA9606F6E4BE7FF">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Base64</string>
					<string name="ScriptGuid">{12600816-0C20-4A09-97E5-A8317B1C91D6}</string>
					<ProtectedString name="Source"><![CDATA[--!native
--!optimize 2

local lookupValueToCharacter = buffer.create(64)
local lookupCharacterToValue = buffer.create(256)

local alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
local padding = string.byte("=")

for index = 1, 64 do
	local value = index - 1
	local character = string.byte(alphabet, index)

	buffer.writeu8(lookupValueToCharacter, value, character)
	buffer.writeu8(lookupCharacterToValue, character, value)
end

local function encode(input: buffer): buffer
	local inputLength = buffer.len(input)
	local inputChunks = math.ceil(inputLength / 3)

	local outputLength = inputChunks * 4
	local output = buffer.create(outputLength)

	-- Since we use readu32 and chunks are 3 bytes large, we can't read the last chunk here
	for chunkIndex = 1, inputChunks - 1 do
		local inputIndex = (chunkIndex - 1) * 3
		local outputIndex = (chunkIndex - 1) * 4

		local chunk = bit32.byteswap(buffer.readu32(input, inputIndex))

		-- 8 + 24 - (6 * index)
		local value1 = bit32.rshift(chunk, 26)
		local value2 = bit32.band(bit32.rshift(chunk, 20), 0b111111)
		local value3 = bit32.band(bit32.rshift(chunk, 14), 0b111111)
		local value4 = bit32.band(bit32.rshift(chunk, 8), 0b111111)

		buffer.writeu8(output, outputIndex, buffer.readu8(lookupValueToCharacter, value1))
		buffer.writeu8(output, outputIndex + 1, buffer.readu8(lookupValueToCharacter, value2))
		buffer.writeu8(output, outputIndex + 2, buffer.readu8(lookupValueToCharacter, value3))
		buffer.writeu8(output, outputIndex + 3, buffer.readu8(lookupValueToCharacter, value4))
	end

	local inputRemainder = inputLength % 3

	if inputRemainder == 1 then
		local chunk = buffer.readu8(input, inputLength - 1)

		local value1 = bit32.rshift(chunk, 2)
		local value2 = bit32.band(bit32.lshift(chunk, 4), 0b111111)

		buffer.writeu8(output, outputLength - 4, buffer.readu8(lookupValueToCharacter, value1))
		buffer.writeu8(output, outputLength - 3, buffer.readu8(lookupValueToCharacter, value2))
		buffer.writeu8(output, outputLength - 2, padding)
		buffer.writeu8(output, outputLength - 1, padding)
	elseif inputRemainder == 2 then
		local chunk = bit32.bor(
			bit32.lshift(buffer.readu8(input, inputLength - 2), 8),
			buffer.readu8(input, inputLength - 1)
		)

		local value1 = bit32.rshift(chunk, 10)
		local value2 = bit32.band(bit32.rshift(chunk, 4), 0b111111)
		local value3 = bit32.band(bit32.lshift(chunk, 2), 0b111111)

		buffer.writeu8(output, outputLength - 4, buffer.readu8(lookupValueToCharacter, value1))
		buffer.writeu8(output, outputLength - 3, buffer.readu8(lookupValueToCharacter, value2))
		buffer.writeu8(output, outputLength - 2, buffer.readu8(lookupValueToCharacter, value3))
		buffer.writeu8(output, outputLength - 1, padding)
	elseif inputRemainder == 0 and inputLength ~= 0 then
		local chunk = bit32.bor(
			bit32.lshift(buffer.readu8(input, inputLength - 3), 16),
			bit32.lshift(buffer.readu8(input, inputLength - 2), 8),
			buffer.readu8(input, inputLength - 1)
		)

		local value1 = bit32.rshift(chunk, 18)
		local value2 = bit32.band(bit32.rshift(chunk, 12), 0b111111)
		local value3 = bit32.band(bit32.rshift(chunk, 6), 0b111111)
		local value4 = bit32.band(chunk, 0b111111)

		buffer.writeu8(output, outputLength - 4, buffer.readu8(lookupValueToCharacter, value1))
		buffer.writeu8(output, outputLength - 3, buffer.readu8(lookupValueToCharacter, value2))
		buffer.writeu8(output, outputLength - 2, buffer.readu8(lookupValueToCharacter, value3))
		buffer.writeu8(output, outputLength - 1, buffer.readu8(lookupValueToCharacter, value4))
	end

	return output
end

local function decode(input: buffer): buffer
	local inputLength = buffer.len(input)
	local inputChunks = math.ceil(inputLength / 4)

	-- TODO: Support input without padding
	local inputPadding = 0
	if inputLength ~= 0 then
		if buffer.readu8(input, inputLength - 1) == padding then inputPadding += 1 end
		if buffer.readu8(input, inputLength - 2) == padding then inputPadding += 1 end
	end

	local outputLength = inputChunks * 3 - inputPadding
	local output = buffer.create(outputLength)

	for chunkIndex = 1, inputChunks - 1 do
		local inputIndex = (chunkIndex - 1) * 4
		local outputIndex = (chunkIndex - 1) * 3

		local value1 = buffer.readu8(lookupCharacterToValue, buffer.readu8(input, inputIndex))
		local value2 = buffer.readu8(lookupCharacterToValue, buffer.readu8(input, inputIndex + 1))
		local value3 = buffer.readu8(lookupCharacterToValue, buffer.readu8(input, inputIndex + 2))
		local value4 = buffer.readu8(lookupCharacterToValue, buffer.readu8(input, inputIndex + 3))

		local chunk = bit32.bor(
			bit32.lshift(value1, 18),
			bit32.lshift(value2, 12),
			bit32.lshift(value3, 6),
			value4
		)

		local character1 = bit32.rshift(chunk, 16)
		local character2 = bit32.band(bit32.rshift(chunk, 8), 0b11111111)
		local character3 = bit32.band(chunk, 0b11111111)

		buffer.writeu8(output, outputIndex, character1)
		buffer.writeu8(output, outputIndex + 1, character2)
		buffer.writeu8(output, outputIndex + 2, character3)
	end

	if inputLength ~= 0 then
		local lastInputIndex = (inputChunks - 1) * 4
		local lastOutputIndex = (inputChunks - 1) * 3

		local lastValue1 = buffer.readu8(lookupCharacterToValue, buffer.readu8(input, lastInputIndex))
		local lastValue2 = buffer.readu8(lookupCharacterToValue, buffer.readu8(input, lastInputIndex + 1))
		local lastValue3 = buffer.readu8(lookupCharacterToValue, buffer.readu8(input, lastInputIndex + 2))
		local lastValue4 = buffer.readu8(lookupCharacterToValue, buffer.readu8(input, lastInputIndex + 3))

		local lastChunk = bit32.bor(
			bit32.lshift(lastValue1, 18),
			bit32.lshift(lastValue2, 12),
			bit32.lshift(lastValue3, 6),
			lastValue4
		)

		if inputPadding <= 2 then
			local lastCharacter1 = bit32.rshift(lastChunk, 16)
			buffer.writeu8(output, lastOutputIndex, lastCharacter1)

			if inputPadding <= 1 then
				local lastCharacter2 = bit32.band(bit32.rshift(lastChunk, 8), 0b11111111)
				buffer.writeu8(output, lastOutputIndex + 1, lastCharacter2)

				if inputPadding == 0 then
					local lastCharacter3 = bit32.band(lastChunk, 0b11111111)
					buffer.writeu8(output, lastOutputIndex + 2, lastCharacter3)
				end
			end
		end
	end

	return output
end

return {
	encode = encode,
	decode = decode,
}]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBX9265C4A1E4A9495CB4DE6444090FFC7B">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">XOR</string>
					<string name="ScriptGuid">{624D2DAB-2925-4BF6-BE8F-A50EEB8EB89D}</string>
					<ProtectedString name="Source">--[[ v1.0.0 https://wearedevs.net/obfuscator ]] return(function(...)local q={&quot;\052\072\052\089\101\106\055\043\113\069\083\108\087\116\101\112\101\080\061\061&quot;;&quot;\107\114\104\068\098\047\109\061&quot;;&quot;\052\116\104\072\052\073\055\083\113\085\101\061&quot;;&quot;\117\121\122\076\079\069\055\088\113\122\108\097\101\056\090\056\113\056\055\084&quot;;&quot;\047\086\108\065\087\116\122\068\079\047\102\048\099\080\061\061&quot;;&quot;\097\115\117\078\071\116\110\087&quot;;&quot;\043\101\105\047\106\103\109\098&quot;,&quot;\098\121\114\097\052\116\090\075&quot;,&quot;\120\069\122\085\098\085\122\048&quot;,&quot;\113\047\054\106\117\080\061\061&quot;;&quot;\107\114\104\069\120\112\061\061&quot;;&quot;\120\121\104\118\120\121\054\106&quot;;&quot;\079\072\108\111\105\073\055\069\101\085\052\048\098\106\076\100\047\107\049\061&quot;,&quot;\098\087\100\112\079\084\097\089\098\114\083\050\098\122\090\114\098\114\120\061&quot;;&quot;\101\121\122\106\113\047\122\106\120\107\079\097\120\085\043\100&quot;;&quot;\087\114\054\102\077\121\104\089\052\121\084\109\079\047\114\072\052\087\101\061&quot;,&quot;\101\085\122\070\113\056\098\100&quot;;&quot;\105\116\104\048\065\069\122\085\098\085\122\048\101\112\061\061&quot;,&quot;\120\121\097\097\101\110\061\061&quot;,&quot;\101\116\090\097\113\116\112\061&quot;;&quot;\098\107\054\043\052\087\052\106\122\086\055\068\090\122\108\056\098\080\061\061&quot;;&quot;\074\099\100\075\117\069\054\076\105\084\100\069\090\121\098\098\101\112\061\061&quot;,&quot;\052\116\054\111\113\116\087\061&quot;,&quot;\098\085\043\088\113\056\049\061&quot;;&quot;\107\114\104\083\113\085\079\100\105\080\061\061&quot;,&quot;\084\051\100\097&quot;,&quot;\080\102\081\101\067\115\087\043\081\110\061\061&quot;,&quot;\101\056\079\048\117\047\076\069&quot;,&quot;\120\069\100\106\098\065\061\061&quot;,&quot;\113\081\120\089\055\110\061\061&quot;,&quot;\113\073\052\102\079\084\122\087\078\107\055\075\078\065\061\061&quot;;&quot;\113\116\122\118&quot;;&quot;\113\086\102\061&quot;;&quot;&quot;,&quot;\047\116\109\114\077\056\100\088\077\069\054\079\090\099\084\121&quot;;&quot;\073\114\110\110\051\071\082\049\107\065\061\061&quot;,&quot;\065\071\055\070\101\056\090\043\065\121\114\043\090\069\100\073\117\112\061\061&quot;,&quot;\098\056\090\114\120\110\061\061&quot;,&quot;\107\114\104\070\098\107\079\097\052\116\054\111\113\116\087\061&quot;;&quot;\120\085\100\106\074\072\049\061&quot;,&quot;\090\056\055\102\101\087\104\087\105\084\122\106\105\102\110\076\078\102\087\061&quot;;&quot;\101\071\054\074\101\106\076\097\065\099\108\089\098\114\090\067\105\100\080\061&quot;;&quot;\078\086\101\112\078\087\104\116\122\056\055\102\122\116\043\108\113\121\084\061&quot;,&quot;\101\085\054\118\098\116\104\070&quot;,&quot;\071\066\105\119\065\073\053\118&quot;,&quot;\078\110\061\061&quot;,&quot;\078\111\110\100\098\051\075\083\078\110\061\061&quot;;&quot;\122\116\054\070\101\116\122\048\049\102\079\100\052\116\122\071\052\116\122\084\049\065\061\061&quot;,&quot;\087\106\049\089\067\087\054\090&quot;;&quot;\113\086\049\061&quot;;&quot;\052\086\100\116\099\086\079\068\099\107\108\118\113\099\098\043&quot;;&quot;\052\047\076\112\120\047\090\089&quot;,&quot;\101\088\114\077&quot;;&quot;\120\102\043\087\057\047\043\077&quot;;&quot;\122\087\100\070\065\069\083\116\074\084\083\076\077\106\097\109\078\065\061\061&quot;,&quot;\098\107\055\048\113\056\049\061&quot;,&quot;\087\069\085\056&quot;,&quot;\052\116\104\118\052\047\114\111\098\107\049\061&quot;;&quot;\105\054\090\065\090\054\055\069\078\116\112\106\090\106\083\069&quot;,&quot;\114\080\085\073&quot;,&quot;\065\107\074\114\113\084\054\107\079\056\090\100&quot;}for f,Y in ipairs({{-1027092+1027093,-885895+885956},{-827010-(-827011),19606+-19598};{-243273+243282;-209316-(-209377)}})do while Y[725161+-725160]&lt;Y[-798623-(-798625)]do q[Y[513676-513675]],q[Y[890053-890051]],Y[772742-772741],Y[-946058+946060]=q[Y[912855-912853]],q[Y[1020540-1020539]],Y[910337-910336]+(-977916+977917),Y[93292-93290]-(666291+-666290)end end local function f(f)return q[f-(171030-145942)]end do local f=q local Y={Q=4520-4458;s=-491327+491385;B=-364985-(-365027),H=17544-17493,w=-840686-(-840745);[&quot;\043&quot;]=672215-672166,[&quot;\048&quot;]=-547358-(-547408);J=-937368+937380;N=-211775+211789;O=-128475+128492,W=185399+-185379,[&quot;\049&quot;]=977555-977547,k=613296+-613273;[&quot;\047&quot;]=-463107+463129;P=199745-199745,[&quot;\054&quot;]=-636182-(-636187),t=-629213+629219;e=387176-387148,v=-866038-(-866084);[&quot;\050&quot;]=-325709-(-325719),o=329077-329043;V=-204710-(-204713),T=-245204+245240,E=274812-274773,U=-695920+695958;c=534692-534673,p=-217963+218011;x=842024+-842000,[&quot;\057&quot;]=140816+-140753;C=-575572+575587,F=649151-649106;d=334489-334452;[&quot;\056&quot;]=-932159-(-932214),u=-640224+640250,X=-712860+712907,g=162564+-162504,h=-1035840+1035901;j=-277695+277747,z=-98791+98812;Z=383416-383403,G=191494-191459;[&quot;\052&quot;]=735326-735297;m=161671+-161615;L=-379779+379836,M=-89024+89042;i=-445246+445276;f=531843-531839,S=780209+-780168;a=663473-663440,[&quot;\051&quot;]=-788382-(-788384);l=922945+-922944;[&quot;\055&quot;]=-351793+351802,A=-569762-(-569778),K=457423-457383;n=1015810-1015778;y=297972+-297918;q=-735342-(-735369),b=-443497+443522;r=382815-382762,D=-742858-(-742902),R=-1015493+1015524,[&quot;\053&quot;]=-704052+704063,Y=-320014-(-320057);I=1011157-1011150}local Q=table.concat local G=string.len local b=string.char local g=math.floor local l=type local n=table.insert local c=string.sub for q=559950-559949,#f,-856409+856410 do local d=f[q]if l(d)==&quot;\115\116\114\105\110\103&quot;then local l=G(d)local P={}local V=131557+-131556 local E=-160090-(-160090)local K=521174+-521174 while V&lt;=l do local q=c(d,V,V)local f=Y[q]if f then E=E+f*(175700+-175636)^((-448722-(-448725))-K)K=K+(342158+-342157)if K==1044813-1044809 then K=-209376+209376 local q=g(E/(245637+-180101))local f=g((E%(-396376+461912))/(-333038+333294))local Y=E%(-787159+787415)n(P,b(q,f,Y))E=-898957-(-898957)end elseif q==&quot;\061&quot;then n(P,b(g(E/(-381214-(-446750)))))if V&gt;=l or c(d,V+(-297680-(-297681)),V+(534404+-534403))~=&quot;\061&quot;then n(P,b(g((E%(325102-259566))/(149918+-149662))))end break end V=V+(-11189+11190)end f[q]=Q(P)end end end return(function(q,Q,G,b,g,l,n,V,Z,v,P,c,k,t,r,E,y,m,Y,K,d)E,r,P,y,d,V,t,Y,v,K,k,m,Z,c=function(q)for f=-582139+582140,#q,149108+-149107 do d[q[f]]=d[q[f]]+(-703547-(-703548))end if G then local Y=G(true)local Q=g(Y)Q[f(746963+-721842)],Q[f(515230-490123)],Q[f(-938687+963785)]=q,K,function()return 586194-(-867995)end return Y else return b({},{[f(667210-642103)]=K,[f(-414962+440083)]=q,[f(414985+-389887)]=function()return 1484908-30719 end})end end,function(q,f)local Q=E(f)local G=function(G,b,g)return Y(q,{G;b,g},f,Q)end return G end,function()V=(67305-67304)+V d[V]=-204518+204519 return V end,function(q,f)local Q=E(f)local G=function(G,b,g,l,n)return Y(q,{G;b;g,l,n},f,Q)end return G end,{},-393466-(-393466),function(q,f)local Q=E(f)local G=function(G,b,g,l)return Y(q,{G;b,g;l},f,Q)end return G end,function(Y,G,b,g)local n,i,E,w,H,I,e,X,W,U,o,S,A,J,u,R,T,L,N,x,K,j,d,p,a,V,s,z,h,O,D,B,C,v while Y do if Y&lt;139774+6987145 then if Y&lt;712536+3120914 then if Y&lt;-230763+2215405 then if Y&lt;-235412+1220126 then if Y&lt;363235+343634 then if Y&lt;799289+-116684 then if Y&lt;-947577+1346615 then J=J+R I=not L n=J&lt;=A n=I and n I=J&gt;=A I=L and I n=I or n I=2290155-(-929549)Y=n and I n=2096722-94315 Y=Y or n else E=932962+2442715 V=f(499929+-474828)d=V^E n=6201229-593647 Y=n-d d=Y n=f(-539354-(-564450))Y=n/d n={Y}Y=q[f(511874-486764)]end else O=C z=O e[O]=z Y=726582+2357995 O=nil end else if Y&lt;-973212+1875510 then V=G[818667+-818665]Y=c[b[-714609-(-714610)]]d=G[429103+-429102]E=Y Y=E[V]Y=Y and-605956+4579539 or 3591957-(-97611)else E=678893+-678892 V=c[b[-586954-(-586957)]]d=V~=E Y=d and-186289+11279406 or 1042531+13751485 end end else if Y&lt;-57184+1736998 then if Y&lt;-434850+1805210 then if Y&lt;1704114-627806 then K=f(-76010-(-101109))n=f(-491603+516696)Y=q[n]d=c[b[-1030609+1030613]]E=q[K]h=f(229275-204159)H=y(5672194-(-741921),{})u=q[h]h={u(H)}o={Q(h)}u=-986768-(-986770)v=o[u]K=E(v)E=f(140386+-115243)V=d(K,E)d={V()}n=Y(Q(d))d=n V=c[b[874143-874138]]Y=V and 2774722-(-575893)or 898874+2880550 n=V else Y=true c[b[-251495-(-251496)]]=Y Y=q[f(-586454+611587)]n={}end else Y=15962146-212688 end else if Y&lt;51924+1762370 then n={E}Y=q[f(-700314+725445)]else Y=-85540+15538861 end end end else if Y&lt;3226505-(-271407)then if Y&lt;2975997-(-237539)then if Y&lt;2847820-89957 then if Y&lt;-634505+2800626 then A=c[V]Y=A and 5346934-(-760897)or 11952795-1044941 J=A else Y=a Y=800917+3214741 n=X end else C=C+I O=C&lt;=L z=not W O=z and O z=C&gt;=L z=W and z O=z or O z=602044+96453 Y=O and z O=8650712-580257 Y=Y or O end else if Y&lt;2374018-(-958871)then W=f(76579+-51473)I=P()c[I]=J z=191676-191576 n=q[W]W=f(-5358+30498)Y=n[W]W=363673+-363672 n=Y(W,z)B=490542+-490287 W=P()z=207807-207807 c[W]=n Y=c[u]j=649410+-639410 n=Y(z,B)B=298281-298280 z=P()c[z]=n Y=c[u]s=c[W]n=Y(B,s)w=776688-776687 B=P()N=f(-347827-(-372926))T=-850786-(-850788)c[B]=n p=393842+-393842 n=c[u]s=n(w,T)T=f(-766716-(-791858))n=1043826+-1043825 Y=s==n s=P()c[s]=Y n=f(279907-254764)a=q[N]U=c[u]D={U(p,j)}N=a(Q(D))Y=f(-602184-(-627318))Y=O[Y]a=f(941433-916291)X=N..a w=T..X T=f(6953+18163)Y=Y(O,n,w)w=P()X=t(-644570+16415588,{u;I;x;E,V;C;s,w;W;B;z,H})c[w]=Y n=q[T]T={n(X)}Y={Q(T)}T=Y Y=c[s]Y=Y and 189355+3449375 or 599253+4328284 else E=c[b[846557+-846551]]V=E==d n=V Y=4189003-409579 end end else if Y&lt;638716+3111762 then if Y&lt;3126164-(-577315)then if Y&lt;967040+2671744 then X=c[V]Y=X and 534212+10444523 or 3314123-(-701535)n=X else u=380182+-379927 Y={}c[b[491521+-491519]]=Y x=-626322-(-626323)i=x n=c[b[-621083+621086]]v=35184371880706-(-208126)h=f(-115126-(-140250))K=n n=V%v c[b[-693599-(-693603)]]=n o=V%u u=-128786+128788 x=-80838-(-80838)v=o+u c[b[575420-575415]]=v u=q[h]h=f(849633-824505)o=u[h]u=o(d)Y=-787084+7873691 h=897067-897066 o=f(149928-124798)E[V]=o o=-354869-(-355076)S=i&lt;x H=u x=h-i end else O=f(-524603+549692)H=v x=f(829850-804745)n=q[x]i=c[b[687552-687551]]C=-876379+20655716418797 S=c[b[-439519+439521]]e=S(O,C)x=i[e]i=f(-681873-(-706978))Y=n[x]n=Y(d,H)R=f(-252576+277702)J=-197049+22945068739445 C=f(343205+-318064)x=n n=q[i]S=c[b[-366296+366297]]e=c[b[795581-795579]]O=e(C,J)i=S[O]Y=n[i]n=Y(V,H)S=f(394848-369743)i=n n=q[S]A=326298+13869014474400 e=c[b[847593+-847592]]O=c[b[519067+-519065]]J=f(1028699+-1003567)C=O(J,A)O=f(-364383-(-389519))S=e[C]Y=n[S]L=127247+9056942481258 e=q[O]C=c[b[-203199+203200]]J=c[b[623810+-623808]]A=J(R,L)O=C[A]S=e[O]e={S(x,i)}x=nil i=nil n=Y(K,H,Q(e))H=nil Y=4241160-(-483209)end else if Y&lt;367657+3442465 then Y=3476112-(-354512)d=nil c[b[-927797+927802]]=n else Y=c[b[-860636+860643]]Y=Y and-657101+5752950 or-27052+9211152 end end end end else if Y&lt;6750089-920934 then if Y&lt;4489320-(-178318)then if Y&lt;1037012+3074305 then if Y&lt;4469245-478108 then if Y&lt;982137+2896749 then u=f(-365846-(-390952))S=f(732110-706991)o=n n=q[u]u=f(785346-760206)Y=n[u]u=P()h=f(978180-953061)c[u]=Y n=q[h]h=f(-262572-(-287680))Y=n[h]x=Y i=q[S]h=Y H=i Y=i and 13517958-340933 or 909623+8983223 else Y=-411932+6800042 end else c[V]=n Y=-521184+7577201 end else if Y&lt;-894317+5295835 then Y=r(12491997-(-493286),{K})A={Y()}Y=q[f(-353930-(-379077))]n={Q(A)}else V=c[b[279834-279832]]E=c[b[824264-824261]]Y=-704497+13701792 d=V==E n=d end end else if Y&lt;583107+4400002 then if Y&lt;4717901-(-34837)then if Y&lt;5232207-522358 then Y=q[f(-603424+628533)]E=f(-985926-(-1011045))V=q[E]E=f(-793949-(-819062))d=V[E]E=c[b[-491129+491130]]V={d(E)}n={Q(V)}else v=v+u H=not h n=v&lt;=o n=H and n H=v&gt;=o H=h and H n=H or n H=3217121-(-495721)Y=n and H n=-182015+16406359 Y=Y or n end else a=c[V]X=a Y=a and 7056363-(-72067)or 342448+5926773 end else if Y&lt;794526+4682002 then d=f(609096+-584005)Y=q[d]V=c[b[-848884-(-848892)]]E=-308617+308617 d=Y(V,E)Y=9859942-675842 else h=75841+-75841 V=E Y=c[b[225701+-225700]]H=101554+-101299 u=Y(h,H)d[V]=u V=nil Y=7084677-(-599841)end end end else if Y&lt;-543678+6947579 then if Y&lt;6868830-530837 then if Y&lt;-545061+6774448 then if Y&lt;7017620-990112 then n=f(-881393+906484)d=f(-385979-(-411123))Y=q[n]n=Y(d)Y=q[f(-94130+119269)]n={}else A=i==S Y=-559881+11467735 J=A end else p=-519045-(-519046)c[V]=X D=c[B]U=D+p N=T[U]a=i+N N=618050-617794 Y=a%N U=c[z]i=Y N=S+U U=284805-284549 a=N%U S=a Y=279513+6776504 end else if Y&lt;516820+5874531 then n={V}Y=q[f(-821366+846460)]else Y=c[u]R=811048+-811047 L=-776051+776057 A=Y(R,L)L=f(-308527-(-333673))Y=f(50501+-25355)q[Y]=A R=q[L]L=-856065+856067 Y=R&gt;L Y=Y and 8804232-(-637350)or 16366848-811709 end end else if Y&lt;124358+6949520 then if Y&lt;6958768-(-38646)then if Y&lt;11872+6841123 then E=53243+10537998 n=-656386+5746472 V=f(-359406+384533)d=V^E Y=n-d n=f(-51001+76098)d=Y Y=n/d n={Y}Y=q[f(796182+-771064)]else Y=c[b[-255837-(-255847)]]V=c[b[457023-457012]]d[Y]=V Y=c[b[-822731+822743]]V={Y(d)}n={Q(V)}Y=q[f(525274-500184)]end else T=nil s=Z(s)z=Z(z)w=Z(w)B=Z(B)W=Z(W)Y=-360010+456830 I=Z(I)end else if Y&lt;7144057-40719 then e=not S x=x+i h=x&lt;=H h=e and h e=x&gt;=H e=S and e h=e or h e=219133+11540891 Y=h and e h=123406+12016841 Y=Y or h else H=P()e=f(7260-(-17856))x=-289036-(-289039)i=1033774-1033709 O=k(304755-(-299880),{})c[H]=n Y=c[u]n=Y(x,i)Y=-969359+969359 i=Y Y=-810998-(-810998)S=Y x=P()c[x]=n n=q[e]e={n(O)}Y={Q(e)}n=451936+-451934 e=Y Y=e[n]R=f(-44469+69568)n=f(-734042+759135)O=Y Y=q[n]C=c[E]A=q[R]R=A(O)A=f(-398489-(-423632))J=C(R,A)C={J()}n=Y(Q(C))C=P()c[C]=n n=-248882-(-248883)J=c[x]A=J J=-38697+38698 R=J J=-266580+266580 L=R&lt;J Y=212381+-115561 J=n-R end end end end end else if Y&lt;11737492-538918 then if Y&lt;-438903+10011428 then if Y&lt;247012+7994321 then if Y&lt;8789869-925869 then if Y&lt;-442180+7627239 then if Y&lt;7757655-608243 then N=59795-59794 Y=6313464-44243 a=T[N]X=a else D=932281+-932279 U=T[D]Y=-489252+3246468 D=c[w]N=U==D X=N end else u=not o E=E+v V=E&lt;=K V=u and V u=E&gt;=K u=o and u V=u or V u=494250+5050486 Y=V and u V=7249916-260267 Y=Y or V end else if Y&lt;8046576-(-89488)then L=627167+-627167 C=#e Y=-545979+8712642 O=C==L else z=537344-537343 L=#e C=604135+-604134 O=E(C,L)C=o(e,O)L=c[S]O=nil W=C-z Y=21887+10616374 I=u(W)L[C]=I C=nil end end else if Y&lt;517890+8920313 then if Y&lt;9502289-92421 then if Y&lt;9125383-544360 then Y=q[f(5734+19404)]n={}else E=c[b[-651853+651862]]Y={}K=E d=Y V=911381+-911380 E=-959609+959610 v=E E=-675325-(-675325)o=v&lt;E Y=8654667-970149 E=V-v end else V=c[b[-330556+330558]]E=-548389+548614 d=V*E V=13981408861500-607183 n=d+V V=-122276+122277 d=35184371885680-(-203152)Y=n%d c[b[-1021932+1021934]]=Y d=c[b[518490-518487]]Y=359247+14434769 n=d~=V end else if Y&lt;10519128-963880 then I=f(-204038+229167)R=f(-294510+319609)Y=q[R]L=q[I]R=Y(L)Y=f(165846+-140700)q[Y]=R Y=-679656+17273155 else Y=true Y=Y and 10202004-(-206166)or-537991+16909625 end end end else if Y&lt;9734454-(-830120)then if Y&lt;766637+9641424 then if Y&lt;-898199+10959806 then if Y&lt;-618275+10228765 then Y=true Y=Y and 898874-(-517239)or 3373307-(-847534)else Y=x Y=H and 7172486-46452 or-563764+13760205 n=H end else o=c[v]n=o Y=4809064-961771 end else if Y&lt;10441107-10344 then d=f(989880+-964751)n=f(-666557+691703)Y=q[n]n=q[d]d=f(888460+-863331)q[d]=Y d=f(-992815-(-1017961))q[d]=n d=c[b[-422166-(-422167)]]V=d()Y=-208325+9779375 else V=G[-679612+679614]d=G[-359299-(-359300)]h=62015+25557550742590 E=f(-731578-(-756683))n=q[E]u=f(37555-12453)K=c[b[-192288-(-192289)]]v=c[b[848418+-848416]]o=v(u,h)E=K[o]Y=n[E]h=f(-938256-(-963405))H=1029345776525-(-716370)K=f(169558-144453)n=Y(V)E=n n=q[K]v=c[b[-794759-(-794760)]]o=c[b[895261+-895259]]u=o(h,H)K=v[u]Y=n[K]n=Y(d)K=n n=-465986-(-465986)o=-117547-(-117548)v=V-o o=v v=-342868+342869 u=v v=-560172-(-560172)Y=623859+12560390 h=u&lt;v v=n-u end end else if Y&lt;592039+10373263 then if Y&lt;10026811-(-870808)then if Y&lt;-612173+11435670 then L=-62413+62413 C=#e O=C==L Y=O and 248932+14429186 or 977717+7188946 else u=f(-607304-(-632420))d=G v=P()Y=true V=P()E=f(539967-514843)c[V]=Y K=P()n=q[E]E=f(-547864+572968)Y=n[E]E=P()c[E]=Y h=t(137851-(-997876),{v})Y=r(-226171+6166011,{})c[K]=Y Y=false c[v]=Y o=q[u]u=o(h)Y=u and 10758167-564130 or-201816+4049109 n=u end else c[V]=J Y=c[V]Y=Y and 1889403-74248 or 10912095-(-291585)end else if Y&lt;11088224-814 then a=Y D=230606-230605 U=T[D]D=false N=U==D Y=N and 449896+6728944 or 3382482-625266 X=N else E=745475-745443 V=c[b[-282279+282282]]d=V%E i=439507+-439494 H=921804-921802 K=c[b[-216032-(-216036)]]u=c[b[472691+-472689]]O=c[b[-88265+88268]]e=O-d O=-330183+330215 S=e/O x=i-S h=H^x o=u/h v=K(o)h=-521297+521298 H=-789883+790139 K=4294281771-(-685525)E=v%K v=-378982+378984 K=v^d V=E/K K=c[b[799729+-799725]]u=V%h h=4294258750-(-708546)o=u*h v=K(o)K=c[b[301861-301857]]o=K(V)u=235360+-169824 V=nil E=v+o v=559871-494335 K=E%v o=E-K v=o/u u=-604034-(-604290)o=K%u d=nil E=nil h=K-o Y=-412656+5112456 K=nil u=h/H H=-278480+278736 h=v%H i=147000+-146744 x=v-h v=nil H=x/i x={o,u;h,H}h=nil u=nil c[b[-219710+219711]]=x H=nil o=nil end end end end else if Y&lt;14878200-200949 then if Y&lt;-491122+13595341 then if Y&lt;-893341+13421456 then if Y&lt;12158904-203819 then if Y&lt;951322+10446015 then Y=true Y=272933+3947908 else R=f(-799507+824631)h=x A=q[R]R=f(-371387+396512)J=A[R]Y=7016679-(-69928)A=J(d,h)J=c[b[669932+-669926]]R=J()C=A+R h=nil R=827263+-827262 O=C+o C=-1022055+1022311 e=O%C o=e C=E[V]A=o+R J=K[A]O=C..J E[V]=O end else K=nil o=nil u=nil Y=6395024-6914 end else if Y&lt;-165094+13162159 then Y=337530+9233520 else Y=n and 1986442-935044 or 2956224-(-874400)end end else if Y&lt;582469+12645939 then if Y&lt;13598868-403256 then if Y&lt;866608+12311124 then e=f(-545181-(-570300))Y=8872145-(-1020701)S=q[e]e=f(-22364-(-47512))i=S[e]H=i else v=v+u n=v&lt;=o H=not h n=H and n H=v&gt;=o H=h and H n=H or n H=-894096+14326601 Y=n and H n=-830427+2560291 Y=Y or n end else Y=248010+6878024 x=f(766147-740999)H=q[x]n=H end else if Y&lt;-465279+15004414 then x=f(744674+-719569)n=q[x]O=f(849684+-824581)J=941220+15289362644779 i=c[b[-460002-(-460003)]]S=c[b[-509108-(-509110)]]H=v C=-514995+12386487054906 e=S(O,C)x=i[e]Y=n[x]C=f(-580994-(-606117))i=f(1023988+-998883)x=H%K n=Y(d,x)x=n n=q[i]S=c[b[59405-59404]]e=c[b[-260761+260763]]O=e(C,J)i=S[O]Y=n[i]n=Y(E,H,x)Y=12442965-(-741284)H=nil x=nil else d=c[b[345881-345880]]n=#d d=780108-780108 Y=n==d Y=Y and 185801+9228331 or 4192885-(-506915)end end end else if Y&lt;14703090-(-921280)then if Y&lt;14476124-(-933711)then if Y&lt;-873013+16253440 then if Y&lt;-1024745+15792164 then N=nil i=nil Y=q[f(36435+-11298)]C=P()O={}L=r(13957610-(-707253),{C,H,x;v})W=f(-418930-(-444041))c[C]=O T=f(210392+-185257)I=P()u=nil v=Z(v)E=nil O=P()s=f(-128062-(-153183))c[O]=L E={}L={}z={}c[I]=L v=m(16246453-838987,{V;K})o=nil L=q[W]o=f(746932+-721818)e=nil w=c[I]B={[s]=w,[T]=N}W=L(z,B)h=nil L=m(882+888124,{I;C,S;H,x,O})H=Z(H)S=Z(S)O=Z(O)C=Z(C)x=Z(x)I=Z(I)c[V]=W c[K]=L E[o]=v n={E}o=f(826991-801891)v=m(192313+10270075,{V,K})E[o]=v else Y=79841-(-903997)V=c[b[169236+-169233]]E=290230+-289992 d=V*E V=-919824-(-920081)n=d%V c[b[260277-260274]]=n end else d=G[760159+-760158]V=G[486491+-486489]E=f(989505+-964399)u=f(902690-877568)n=q[E]K=c[b[848438-848437]]h=-641260+13878769918506 i=8733489657056-(-1022722)v=c[b[-775641+775643]]o=v(u,h)x=34002+18759062232397 v=f(-84604-(-109709))E=K[o]H=f(565954+-540862)Y=n[E]K=q[v]o=c[b[363098-363097]]u=c[b[-730313-(-730315)]]h=u(H,x)v=o[h]E=K[v]K=E(d)o=f(-796738-(-821843))v=q[o]u=c[b[-45343-(-45344)]]x=f(362837+-337742)h=c[b[626716-626714]]H=h(x,i)o=u[H]E=v[o]h=f(-204686+229831)v={E(V)}n=Y(K,Q(v))K=f(615944-590839)H=21516422060488-684709 E=n n=q[K]v=c[b[-547617+547618]]o=c[b[636352+-636350]]u=o(h,H)K=v[u]Y=n[K]o=-392199+392200 n=Y(E)K=n n=951488-951488 v=E-o o=v v=-952736-(-952737)Y=5092357-367988 u=v v=-58951+58951 h=u&lt;v v=n-u end else if Y&lt;-732404+16238335 then V=Z(V)i=nil e=nil C=Z(C)u=Z(u)x=Z(x)V=nil h=nil H=Z(H)O=nil H=f(808017-782893)o=nil E=Z(E)u=f(118522-93416)v=Z(v)E=nil K=Z(K)K=P()c[K]=V V=P()c[V]=E S=nil o=f(-310825+335931)Y=-182499+3267076 v=q[o]o=f(313462-288342)e={}h=f(854233-829114)E=v[o]v=P()c[v]=E o=q[u]u=f(461488-436348)E=o[u]u=q[h]h=f(781761-756648)o=u[h]S=P()h=q[H]H=f(-577426+602541)i={}u=h[H]H=P()C=360159-359903 h=-781751+781751 c[H]=h x=P()h=-702094-(-702096)O=-921536-(-921537)c[x]=h c[S]=i h={}L=C C=504204-504203 i=-835906+835906 I=C C=-471311+471311 W=I&lt;C C=O-I else L=f(-946391-(-971537))Y=q[L]L=f(-785751+810880)q[L]=Y Y=-920237+17513736 end end else if Y&lt;-624986+16991940 then if Y&lt;15089359-(-766306)then if Y&lt;353062+15400679 then Y=true Y=Y and 825441+5567875 or 8107726-(-239196)else K=-38714+38715 V=c[b[-763164+763165]]v=-319299-(-319301)E=V(K,v)V=-955874+955875 d=E==V n=d Y=d and 13754072-756777 or 4273646-(-324896)end else Y=q[f(-416135-(-441252))]n={K}end else if Y&lt;17544525-985390 then n={}Y=q[f(-379140-(-404252))]else Y=16787222-1037764 end end end end end end end Y=#g return Q(n)end,function(q,f)local Q=E(f)local G=function(...)return Y(q,{...},f,Q)end return G end,function(q)local f,Y=-76880-(-76881),q[280501+-280500]while Y do d[Y],f=d[Y]-(-788097+788098),(-410008-(-410009))+f if d[Y]==257952-257952 then d[Y],c[Y]=nil,nil end Y=q[f]end end,function(q,f)local Q=E(f)local G=function()return Y(q,{},f,Q)end return G end,function(q,f)local Q=E(f)local G=function(G,b,g,l,n,c,d)return Y(q,{G;b,g,l,n;c;d},f,Q)end return G end,function(q)d[q]=d[q]-(916344+-916343)if d[q]==489301-489301 then d[q],c[q]=nil,nil end end,{}return(v(9897999-(-988281),{}))(Q(n))end)(getfenv and getfenv()or _ENV,unpack or table[f(-720912-(-746060))],newproxy,setmetatable,getmetatable,select,{...})end)(...)</ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBX00D4C579D87645208DF8861615799629">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">OriginalSystemPromptWORKING</string>
					<string name="ScriptGuid">{BD5DAA0F-7061-4319-8CC1-421C130A29CA}</string>
					<ProtectedString name="Source">--[[ v1.0.0 https://wearedevs.net/obfuscator ]] return(function(...)local r={&quot;\067\110\113\102\067\110\053\079&quot;,&quot;\103\082\078\065\076\082\049\061&quot;;&quot;\076\098\088\102\043\079\099\104\052\111\088\079\119\097\101\047&quot;;&quot;\103\110\087\079\076\090\087\079\067\117\119\065\067\097\099\071&quot;;&quot;\076\082\087\102&quot;,&quot;\103\097\053\102\047\082\113\101&quot;,&quot;\050\080\120\071\047\108\104\051\050\120\061\061&quot;,&quot;\078\072\051\106\069\111\051\054&quot;,&quot;\043\082\053\080\076\082\111\061&quot;,&quot;\087\117\071\078\055\087\088\119\050\111\113\121\052\097\078\109\111\120\061\061&quot;,&quot;\117\066\113\101\047\117\119\065\043\082\053\080\076\082\111\061&quot;;&quot;\047\110\066\065\043\082\078\104&quot;,&quot;\050\120\061\061&quot;;&quot;\090\072\119\080\090\090\047\118\043\110\047\047\047\117\053\071\076\079\054\061&quot;;&quot;\117\066\113\116\047\090\084\061&quot;;&quot;\068\073\047\101\076\079\113\100\078\079\066\073\076\072\087\100&quot;,&quot;&quot;,&quot;\117\066\113\056\067\049\061\061&quot;;&quot;\087\082\053\101\103\082\087\100\057\072\119\071\043\082\087\075\043\082\087\122\057\069\061\061&quot;,&quot;\076\090\053\079\068\048\061\061&quot;;&quot;\103\109\119\100\068\090\112\056&quot;;&quot;\119\079\119\051\052\098\065\110\047\097\113\119\054\090\079\110\119\090\103\061&quot;,&quot;\047\109\078\066\067\120\061\061&quot;;&quot;\117\066\113\051\076\097\119\071\055\048\061\061&quot;;&quot;\067\110\065\065\103\120\061\061&quot;,&quot;\067\056\071\079\047\069\061\061&quot;,&quot;\069\056\043\108\052\117\071\067\069\097\113\114\068\090\119\097\103\083\120\061&quot;;&quot;\087\056\087\067\083\117\087\108\050\115\078\082\047\073\065\083&quot;;&quot;\083\071\065\121\076\111\087\069\043\066\120\061&quot;,&quot;\067\111\088\115\076\097\065\069\103\053\122\112\111\109\119\099&quot;;&quot;\103\097\087\101\076\109\047\071&quot;,&quot;\043\090\112\049\067\090\078\089&quot;,&quot;\076\115\057\061&quot;;&quot;\068\098\088\106\055\098\057\079\054\079\078\106\087\115\078\056\083\097\120\061&quot;;&quot;\076\115\072\061&quot;,&quotquot;;&quot;\047\117\088\100\076\109\057\061&quot;,&quot;\047\097\099\081\076\109\057\061&quot;,&quot;\087\087\043\098\055\097\066\088\078\079\043\111\083\110\078\068\068\069\061\061&quot;;&quot;\111\082\113\116\047\087\053\075\083\111\084\099\054\073\071\112&quot;,&quot;\043\082\113\073\043\098\088\051\076\097\103\061&quot;,&quot;\047\090\101\098\069\066\071\087\111\122\084\112\083\115\120\073\090\120\061\061&quot;;&quot;\076\073\119\109\069\066\043\088\047\056\111\100\119\072\047\108&quot;;&quot;\043\082\113\102\043\090\066\080\047\117\057\061&quot;}local function C(C)return r[C-(73499+-18087)]end for C,a in ipairs({{502825-502824;75886-75842},{-939430+939431,-546008+546031};{-905852+905876;-86602+86646}})do while a[-749842+749843]&lt;a[-135169+135171]do r[a[-557676+557677]],r[a[-992404-(-992406)]],a[-556351-(-556352)],a[-851161+851163]=r[a[591980+-591978]],r[a[462916+-462915]],a[588762-588761]+(-88001+88002),a[955155-955153]-(-206999+207000)end end do local C=string.len local a=r local e={k=965541+-965478,Q=995880+-995833;[&quot;\055&quot;]=174477-174447,f=-726434+726480,[&quot;\056&quot;]=-605833+605872;q=194435-194374;O=-56785+56837,[&quot;\050&quot;]=397201+-397187,U=-267100-(-267131);v=1015785+-1015774;D=410560-410534,n=-439253+439307;[&quot;\053&quot;]=170859-170854;J=-627094-(-627104);A=-910820+910853;C=1041088+-1041064;R=-898051-(-898057);y=-815487+815529,T=833351-833295,E=-982347-(-982363);[&quot;\049&quot;]=841093-841045,a=1047329+-1047291;[&quot;\052&quot;]=-401351-(-401369),N=202779-202766;e=849654+-849609,g=113176+-113148;F=648064+-648063,c=-687466+687515;I=-1349+1400,[&quot;\048&quot;]=-796149-(-796149),i=361292+-361232,h=901658-901618;r=584821-584763;t=64008-63964,M=-785040+785102;z=-222359+222395;m=216849+-216794,K=474310-474275,[&quot;\054&quot;]=-598531-(-598543),o=358093+-358073;[&quot;\051&quot;]=-71991-(-72032);w=-923493-(-923510),Z=-647050-(-647072);[&quot;\057&quot;]=-255079-(-255087);j=896010-895995,s=591568-591565,H=-838318+838322;B=1008933+-1008880;G=-647263-(-647300);[&quot;\043&quot;]=-392569-(-392598);d=211210-211160;V=-928615-(-928674);W=-414842-(-414863);L=-738273+738300;[&quot;\047&quot;]=-97835-(-97860);b=-901632+901639;p=105850+-105793,l=-78539+78541,u=-721177-(-721200),Y=706774-706731;S=1047087+-1047068,X=52259+-52250;P=204669-204635,x=-771934+771966}local p=string.char local F=table.insert local D=math.floor local S=table.concat local O=type local G=string.sub for r=-852166+852167,#a,98314+-98313 do local w=a[r]if O(w)==&quot;\115\116\114\105\110\103&quot;then local O=C(w)local t={}local m=-951625-(-951626)local M=-736692-(-736692)local I=251284-251284 while m&lt;=O do local r=G(w,m,m)local C=e[r]if C then M=M+C*(289019-288955)^((-796692-(-796695))-I)I=I+(53616-53615)if I==-313154+313158 then I=-959645+959645 local r=D(M/(544577+-479041))local C=D((M%(-1028863+1094399))/(174400+-174144))local a=M%(35933+-35677)F(t,p(r,C,a))M=-366104+366104 end elseif r==&quot;\061&quot;then F(t,p(D(M/(279926+-214390))))if m&gt;=O or G(w,m+(-363008+363009),m+(-551016-(-551017)))~=&quot;\061&quot;then F(t,p(D((M%(438717-373181))/(-468214-(-468470)))))end break end m=m+(899358-899357)end a[r]=S(t)end end end return(function(r,e,p,F,D,S,O,w,X,k,M,I,K,m,i,o,G,a,z,t,f)I,o,G,m,X,f,w,t,M,K,z,k,i,a=function(r)local C,a=-62205-(-62206),r[-658813-(-658814)]while a do w[a],C=w[a]-(-115160+115161),C+(239939-239938)if-117373-(-117373)==w[a]then w[a],G[a]=nil,nil end a=r[C]end end,function(r,C)local e=M(C)local p=function(p)return a(r,{p},C,e)end return p end,{},-508590-(-508590),function(r,C)local e=M(C)local p=function(p,F,D,S,O)return a(r,{p,F;D,S,O},C,e)end return p end,function(r)w[r]=w[r]-(259883-259882)if 588420+-588420==w[r]then w[r],G[r]=nil,nil end end,{},function()m=m+(715705+-715704)w[m]=778829-778828 return m end,function(r)for C=-22220+22221,#r,719937-719936 do w[r[C]]=w[r[C]]+(591395-591394)end if p then local a=p(true)local e=D(a)e[C(-411748-(-467163))],e[C(25136+30317)],e[C(156366-100916)]=r,I,function()return 1255582-368630 end return a else return F({},{[C(240299+-184846)]=I,[C(334858-279443)]=r,[C(-879361-(-934811))]=function()return-656094+1543046 end})end end,function(r,C)local e=M(C)local p=function(p,F,D,S,O,G)return a(r,{p;F,D;S,O;G},C,e)end return p end,function(r,C)local e=M(C)local p=function(p,F)return a(r,{p,F},C,e)end return p end,function(r,C)local e=M(C)local p=function(p,F,D,S)return a(r,{p;F,D,S},C,e)end return p end,function(r,C)local e=M(C)local p=function(...)return a(r,{...},C,e)end return p end,function(a,p,F,D)local j,i,m,s,R,T,n,V,U,N,I,P,x,Q,y,J,q,W,l,A,H,B,d,Z,c,u,g,L,w,h,O,M,b,Y while a do if a&lt;7792336-(-555282)then if a&lt;113681+4998982 then if a&lt;821898+1932807 then if a&lt;-721439+1993374 then if a&lt;228951-(-690813)then if a&lt;568867+268135 then if a&lt;-577949+1270448 then a=8269702-52208 N=h n=N H[N]=n N=nil else G[m]=l a=G[m]a=a and 8484423-215715 or 1042730+5468332 end else B=253821+-253820 a=712839+7175239 V=u[B]Y=V end else if a&lt;456028-(-564083)then a=k(-486893+11828672,{I})R={a()}a=r[C(-621867-(-677298))]O={e(R)}else m=C(207568-152125)O=10672080-390097 M=11529279-622130 w=m^M a=O-w w=a O=C(-206166-(-261611))a=O/w O={a}a=r[C(850221-794796)]end end else if a&lt;-910889+2709234 then if a&lt;1820546-151008 then V=G[m]a=V and 67622+848102 or-396896+8284974 Y=V else q=not b M=M+i m=M&lt;=I m=q and m q=M&gt;=I q=b and q m=q or m q=447942+7007812 a=m and q m=-589806+5072335 a=a or m end else if a&lt;-625059+2738820 then A=Q x=C(282611-227155)R=r[x]x=C(-958454+1013871)l=R[x]R=l(w,A)l=G[F[97086-97080]]x=l()h=R+x N=h+b h=-125652-(-125908)H=N%h b=H x=436609+-436608 h=M[m]R=b+x A=nil l=I[R]N=h..l a=-915584+8966231 M[m]=N else m=p[532550+-532548]w=p[490648-490647]a=G[F[916064+-916063]]M=a a=M[m]a=a and-432451+14947487 or-507921+11004088 end end end else if a&lt;5024570-535434 then if a&lt;3644796-(-110407)then if a&lt;238391+2734544 then if a&lt;-291687+3056827 then a=395339+13683256 else a=15867249-479360 d=290786-290786 h=#H N=h==d end else M=C(-4006-(-59450))m=r[M]M=C(783948-728526)w=m[M]M=G[F[-563646+563647]]m={w(M)}a=r[C(-949643-(-1005077))]O={e(m)}end else if a&lt;-8049+4097763 then a=true a=a and 716817+2040883 or 12279+909833 else a=G[F[-3714-(-3724)]]m=G[F[630584-630573]]w[a]=m a=G[F[751013-751001]]m={a(w)}O={e(m)}a=r[C(706711-651262)]end end else if a&lt;557916+4285247 then if a&lt;5128151-491048 then c=f(c)J=f(J)Z=f(Z)u=nil j=f(j)n=f(n)a=1019526+14911498 U=f(U)else R=y==W l=R a=157758+655196 end else if a&lt;897010+4041813 then a=69676+4528431 G[m]=O else M=-933755+933787 m=G[F[-518210-(-518213)]]y=307469+-307456 w=m%M I=G[F[944934+-944930]]P=-788839-(-788841)q=G[F[-824067-(-824069)]]N=G[F[838337+-838334]]H=N-w N=-261177+261209 W=H/N Q=y-W A=P^Q b=q/A i=I(b)I=4294965012-(-2284)M=i%I A=437565-437564 i=724692+-724690 I=i^w m=M/I I=G[F[165587+-165583]]y=466829+-466573 q=m%A A=4294533689-(-433607)b=q*A w=nil i=I(b)q=658178+-592642 I=G[F[378241-378237]]b=I(m)M=i+b a=570271+3159289 i=1107981-1042445 I=M%i b=M-I P=922137-921881 i=b/q q=-1033075-(-1033331)b=I%q A=I-b q=A/P P=1034407+-1034151 A=i%P I=nil m=nil Q=i-A M=nil P=Q/y i=nil Q={b,q;A;P}G[F[-212718-(-212719)]]=Q b=nil q=nil P=nil A=nil end end end end else if a&lt;7152523-(-166928)then if a&lt;6206133-(-39981)then if a&lt;972101+4518954 then if a&lt;5923182-597325 then if a&lt;4953681-(-253294)then R=G[m]l=R a=R and-932712+5773581 or 1291221-478267 else A=C(-714257+769694)P=k(8958241-368820,{})O=C(808280+-752845)I=C(-434612-(-490044))a=r[O]w=G[F[-602236-(-602240)]]M=r[I]q=r[A]A={q(P)}q=471726+-471724 b={e(A)}i=b[q]I=M(i)M=C(618393-562951)m=w(I,M)w={m()}O=a(e(w))m=G[F[-283459+283464]]a=m and-546448+8903593 or-110384+14430964 w=O O=m end else w=C(-656539+711967)M=117376-117376 a=r[w]m=G[F[1043016+-1043008]]w=a(m,M)a=16019416-(-655030)end else if a&lt;179+5947899 then I=87788-87787 i=63577-63575 m=G[F[-38974+38975]]M=m(I,i)m=782571-782570 w=M==m O=w a=w and 12101872-(-735229)or 9651767-(-562191)else a=r[C(-959834-(-1015267))]O={m}end end else if a&lt;796734+5829894 then if a&lt;-472936+6929488 then N={}h=t()Z=C(771136+-715697)d=o(534078+11758052,{h;P;Q,i})G[h]=N A=nil j=C(88287+-32872)B=nil y=nil b=nil n={}N=t()G[N]=d c=t()d={}I=nil G[c]=d d=r[Z]H=nil u=C(838944+-783498)J=G[c]q=nil U={[j]=J;[u]=B}Z=d(n,U)m=Z d=K(1126044-(-1042655),{c;h;W,P,Q,N})h=f(h)b=C(-360001+415428)M=d Q=f(Q)a=r[C(-81421-(-136872))]O={}P=f(P)c=f(c)W=f(W)i=f(i)q=24771448765865-839834 i=M(b,q)I=m[i]M=nil N=f(N)m=nil I=nil else a=true a=61893-(-860219)end else if a&lt;-517730+7429399 then b=O q=C(1013230-957775)O=r[q]q=C(-624102+679543)A=C(-283923+339367)a=O[q]q=t()G[q]=a O=r[A]W=C(430673+-375229)A=C(29892+25544)a=O[A]A=a Q=a y=r[W]a=y and 664506+7613349 or-834661+9321392 P=y else O=Y a=V a=5856750-1008621 end end end else if a&lt;8514739-625022 then if a&lt;7177114-(-450787)then if a&lt;-12583+7502974 then if a&lt;7011872-(-473954)then P=343798-343543 a=G[F[822362-822361]]A=-466706-(-466706)q=a(A,P)m=M a=-493280+2163473 w[m]=q m=nil else M=122724+-122723 m=G[F[12364-12361]]w=m~=M a=w and 702492+4409663 or-380733+12334804 end else a=13038805-(-1039790)end else if a&lt;-726647+8595347 then g=808765-808764 T=u[g]g=false V=a B=T==g a=B and-335088+16643238 or-595273+7892779 Y=B else G[m]=Y L=497057-497056 g=G[U]T=g+L B=u[T]V=y+B B=-410606-(-410862)a=V%B y=a T=G[n]B=W+T a=4871649-273542 T=1011579+-1011323 V=B%T W=V end end else if a&lt;9170253-952189 then if a&lt;8871727-715709 then H=not W Q=Q+y A=Q&lt;=P A=H and A H=Q&gt;=P H=W and H A=H or A H=660643+1275801 a=A and H A=690940+14407563 a=a or A else h=h+c n=not Z N=h&lt;=d N=n and N n=h&gt;=d n=Z and n N=n or N n=863848+-280382 a=N and n N=646653+2160728 a=a or N end else if a&lt;889480+7379424 then a=12884725-(-332075)else H=C(603438-547994)W=r[H]H=C(677315-621892)y=W[H]a=493276+7993455 P=y end end end end end else if a&lt;-323263+13053848 then if a&lt;549254+9689002 then if a&lt;673494+8542955 then if a&lt;706189+8094488 then if a&lt;-131274+8628778 then if a&lt;-938575+9312579 then a=14622153-301573 M=G[F[448209+-448203]]m=M==w O=m else a=Q O=P a=P and 13274063-856293 or 1041382+12445696 end else M=932033+6933593 m=C(-827708-(-883128))O=2730237-(-1020985)w=m^M a=O-w w=a O=C(674489+-619051)a=O/w O={a}a=r[C(-54394-(-109812))]end else if a&lt;9989377-846525 then a=r[C(-453231+508661)]O={}else a=true G[F[884138+-884137]]=a O={}a=r[C(38779+16634)]end end else if a&lt;796305+8719460 then if a&lt;21022+9262599 then w=C(-973364-(-1028790))O=C(871915+-816491)a=r[O]O=r[w]w=C(222988-167562)r[w]=a w=C(548727-493303)r[w]=O w=G[F[-214246+214247]]a=14270186-(-619504)m=w()else x=447964-447963 a=G[q]d=-571394-(-571400)R=a(x,d)a=C(-12256-(-67680))r[a]=R d=C(339740-284316)x=r[d]d=-911534-(-911536)a=x&gt;d a=a and-410422+10852200 or 1040266+11965476 end else if a&lt;11183765-990371 then a=G[F[814817+-814810]]a=a and 4459798-(-868923)or 16948777-274331 else m=G[F[564798+-564796]]M=G[F[-327793-(-327796)]]w=m==M O=w a=13291947-454846 end end end else if a&lt;12731822-695432 then if a&lt;256801+11092411 then if a&lt;10262270-(-313360)then if a&lt;10281366-(-192339)then x=C(570545-515113)a=r[x]c=C(-823277-(-878703))d=r[c]x=a(d)a=C(-423002-(-478426))r[a]=x a=407526+7134226 else A=C(-603344-(-658800))i=35184371916641-(-172191)a={}G[F[637164-637162]]=a q=954874-954619 O=G[F[306635+-306632]]I=O O=m%i G[F[936952-936948]]=O b=m%q q=-708778+708780 i=b+q G[F[-485360+485365]]=i q=r[A]A=C(-792518+847958)b=q[A]q=b(w)A=405220-405219 b=C(881266+-825814)M[m]=b P=q b=472347-472193 Q=-982545+982546 y=Q Q=311894+-311894 a=8950456-899809 W=y&lt;Q Q=A-y end else a=14657846-(-231844)end else if a&lt;10779574-(-1032960)then Z=C(86468-31013)J=650269+-650268 c=t()G[c]=l n=-892978+893078 B=C(596322+-540890)O=r[Z]Z=C(-1032073+1087514)L=844126+-844126 U=-704017+704272 a=O[Z]Z=-433375+433376 s=1015988+-1005988 O=a(Z,n)Z=t()G[Z]=O a=G[q]n=768730-768730 O=a(n,U)U=-932685-(-932686)n=t()G[n]=O a=G[q]j=G[Z]O=a(U,j)u=911097+-911095 U=t()G[U]=O O=G[q]j=O(J,u)O=-597669-(-597670)u=C(760255-704807)a=j==O j=t()O=C(1032133+-976691)G[j]=a V=r[B]T=G[q]g={T(L,s)}B=V(e(g))V=C(-61592+117040)a=C(21743-(-33671))Y=B..V a=N[a]J=u..Y a=a(N,O,J)u=C(-378539+433976)J=t()G[J]=a O=r[u]Y=X(850818+5086318,{q,c;Q,M,m;h;j;J;Z,U,n;P})u={O(Y)}a={e(u)}u=a a=G[j]a=a and 17108297-890099 or 295252-(-999661)else m=G[F[-467753-(-467756)]]M=-335294+335420 w=m*M a=-322952+7812497 m=-441986-(-442243)O=w%m G[F[498737+-498734]]=O end end else if a&lt;11630970-(-867406)then if a&lt;12443027-43623 then w=G[F[-761989-(-761990)]]O=#w w=-460657+460657 a=O==w a=a and 15521866-684383 or 4589339-859779 else x=C(-661406-(-716838))y=432578-432513 P=t()G[P]=O a=G[q]Q=23174+-23171 O=a(Q,y)Q=t()G[Q]=O a=-61536+61536 N=z(203637-(-1002341),{})y=a H=C(102972-47535)O=r[H]a=177807+-177807 H={O(N)}O=1024088-1024086 W=a a={e(H)}H=a a=H[O]N=a O=C(595917+-540482)a=r[O]h=G[M]R=r[x]x=R(N)R=C(743461+-688019)l=h(x,R)h={l()}O=a(e(h))h=t()G[h]=O O=796341+-796340 l=G[Q]R=l l=-33246+33247 x=l l=-313121-(-313121)a=15461556-(-469468)d=x&lt;l l=O-x end else if a&lt;12463243-(-188969)then b=G[i]O=b a=-353374+7205465 else a=r[C(830739-775320)]O={}end end end end else if a&lt;15112938-416023 then if a&lt;-486779+14067197 then if a&lt;-550110+13571856 then if a&lt;13285783-357367 then if a&lt;858748+12007970 then a=O and 850820+4373012 or 8889690-(-1015772)else w=C(-175024+230478)O=C(-550652+606080)a=r[O]O=a(w)O={}a=r[C(-510499+565920)]end else d=C(610471+-555047)a=r[d]d=C(57230+-1804)r[d]=a a=8545942-1004190 end else if a&lt;13704446-464427 then q=f(q)N=nil W=nil H=nil W=t()A=nil h=f(h)P=f(P)I=f(I)Q=f(Q)y=nil M=f(M)b=nil i=f(i)m=f(m)M=nil m=nil q=C(-832327+887782)b=C(1012213-956758)i=r[b]b=C(625180-569751)I=i[b]h=-200941-(-201197)i=t()G[i]=I b=r[q]N=-79166-(-79167)A=C(-974253-(-1029697))q=C(1032150-976709)I=b[q]q=r[A]A=C(-534784+590206)P=C(247579-192123)y={}b=q[A]d=h A=r[P]H={}P=C(174540-119124)h=250730+-250729 Q=t()q=A[P]c=h A=1028112-1028112 P=t()G[P]=A A=683725+-683723 G[Q]=A A={}h=-91667+91667 Z=c&lt;h G[W]=y y=-1027866-(-1027866)a=-543391+8760885 h=N-c else a=12007477-(-410293)Q=C(691940-636517)P=r[Q]O=P end end else if a&lt;317882+13831950 then if a&lt;-373490+14376019 then m=t()a=true i=t()M=C(690012+-634556)G[m]=a w=p O=r[M]M=C(685784-630337)a=O[M]M=t()G[M]=a q=C(-920651+976088)I=t()a=z(-740486+13667279,{})G[I]=a a=false G[i]=a b=r[q]A=k(398679+8816700,{i})q=b(A)O=q a=q and-112975+12642511 or 928666+5923425 else a=true a=a and-754748+10184026 or 8509022-(-371214)end else if a&lt;14397686-(-112649)then w=nil a=9243051-(-662411)G[F[-170834+170839]]=O else a=5890546-(-78523)end end end else if a&lt;-353205+16480508 then if a&lt;82950+15119014 then if a&lt;15919024-902508 then if a&lt;15272917-398633 then m=G[F[-655921+655923]]M=-363478+363563 w=m*M m=-862968+28402465660577 O=w+m w=35184372628565-539733 a=O%w G[F[-589111-(-589113)]]=a m=-1031929+1031930 w=G[F[-721787+721790]]O=w~=m a=11363707-(-590364)else a=true a=a and 8729165-(-489130)or 13090292-394293 end else a=342137+5626932 I=nil b=nil q=nil end else if a&lt;15733755-18558 then h=808349+-808348 d=#H N=I(h,d)h=b(H,N)n=966590-966589 d=G[W]N=nil Z=h-n a=17275114-525130 c=q(Z)d[h]=c h=nil else l=l+x c=not d O=l&lt;=R O=c and O c=l&gt;=R c=d and c O=c or O c=10768570-(-585090)a=O and c O=4366935-(-749622)a=a or O end end else if a&lt;-140881+16710573 then if a&lt;15734997-(-489637)then Y=G[m]a=Y and 864141+6992216 or 5677260-829131 O=Y else g=94337-94335 T=u[g]a=-152841+7450347 g=G[J]B=T==g Y=B end else if a&lt;17249598-550295 then a={}M=G[F[1019493-1019484]]I=M m=-132064-(-132065)w=a M=-289195-(-289196)i=M M=272600+-272600 b=i&lt;M M=m-i a=1792706-122513 else h=#H d=482603+-482603 N=h==d a=N and 6661968-251201 or 818461+14569428 end end end end end end end a=#D return e(O)end return(i(100060+13862153,{}))(e(O))end)(getfenv and getfenv()or _ENV,unpack or table[C(-272167+327590)],newproxy,setmetatable,getmetatable,select,{...})end)(...)</ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
		</Item>
		<Item class="StringValue" referent="RBX21B98638AB9C4C129BD429C652F90A12">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<string name="Name">VersionTitle</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<string name="Value">Vibe Coder BETA v0.4</string>
			</Properties>
		</Item>
		<Item class="Folder" referent="RBX72387924FFD849E3AA184C0C83850C3C">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<string name="Name">Imgs</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="ImageLabel" referent="RBX1A8FDD6DB3414848A5BFF9AD923B5B30">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<float name="BackgroundTransparency">0</float>
					<Color3 name="BorderColor3">
						<R>0</R>
						<G>0</G>
						<B>0</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="ClipsDescendants">false</bool>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Draggable">false</bool>
					<Content name="Image"><url>rbxassetid://129168231652243</url></Content>
					<Color3 name="ImageColor3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<Vector2 name="ImageRectOffset">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<Vector2 name="ImageRectSize">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<float name="ImageTransparency">0</float>
					<bool name="Interactable">true</bool>
					<int name="LayoutOrder">0</int>
					<string name="Name">ImageLabel</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>0</YO>
					</UDim2>
					<token name="ResampleMode">0</token>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<token name="ScaleType">0</token>
					<bool name="Selectable">false</bool>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<int name="SelectionOrder">0</int>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>100</XO>
						<YS>0</YS>
						<YO>100</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<Rect2D name="SliceCenter">
						<min>
							<X>0</X>
							<Y>0</Y>
						</min>
						<max>
							<X>0</X>
							<Y>0</Y>
						</max>
					</Rect2D>
					<float name="SliceScale">1</float>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UDim2 name="TileSize">
						<XS>1</XS>
						<XO>0</XO>
						<YS>1</YS>
						<YO>0</YO>
					</UDim2>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
			</Item>
		</Item>
	</Item>
</roblox>