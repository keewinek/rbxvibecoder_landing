<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Folder" referent="RBX2F28332C37F94E0EA0FF3F16C7C1EE83">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<string name="Name">Vibe Coder_obfutucated</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
		<Item class="ModuleScript" referent="RBX29AE5BBFA9E54F66A6C5EA0D5AE17182">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">WidgetWindow</string>
				<string name="ScriptGuid">{B39764B6-0885-47E5-A82E-65AAFD2B996A}</string>
				<ProtectedString name="Source">--[[ v1.0.0 https://wearedevs.net/obfuscator ]] return(function(...)local w={&quot;\088\057\107\074\115\078\099\065\070\102\061\061&quot;;&quot;\049\043\067\110\105\082\049\053&quot;;&quot;\102\089\099\121\072\108\079\116\099\078\105\102\043\100\118\090\099\089\097\083\097\085\061\061&quot;;&quot;\089\054\048\085\099\054\087\043&quot;,&quot;\084\052\110\110\077\070\043\069&quot;;&quot;\080\065\116\050\122\067\108\082\106\066\061\061&quot;;&quot;\069\072\087\048\102\078\121\104&quot;;&quot;\083\069\097\086\067\065\053\122\069\066\061\061&quot;;&quot;\119\112\119\088\102\080\048\073\065\053\065\072\070\067\069\053\082\075\074\061&quot;,&quot;\055\056\043\081\067\116\082\086&quot;;&quot;\113\113\079\112\088\118\099\067\053\075\084\101\043\048\103\117\101\111\089\118\065\121\090\098\055\079\118\061&quot;,&quot;\110\077\105\087\113\111\089\056\077\069\117\087\043\088\061\061&quot;;&quot;\076\116\073\112\107\119\117\066&quot;,&quot;\101\100\065\106\051\084\048\067\097\102\061\061&quot;,&quot;\089\097\052\122\099\097\113\115\097\069\076\085\116\065\072\043\081\097\115\100\089\070\115\082\116\054\079\119\117\098\115\108\055\088\061\061&quot;,&quot;\088\106\070\067\108\077\051\079\097\102\061\061&quot;;&quot;\097\050\072\049\081\054\086\061&quot;,&quot;\073\043\074\105\086\069\119\068\070\075\090\112\073\097\106\075\101\109\054\111&quot;,&quot;\068\108\072\099\087\068\115\108\068\068\050\050\074\109\107\048\068\102\061\061&quot;,&quot;\082\054\099\087\099\076\085\085\055\052\086\114\106\097\114\050\113\069\069\066\067\113\055\111\098\053\056\101\085\081\101\109\114\098\116\043\067\066\061\061&quot;,&quot;\086\108\108\083\122\057\066\079&quot;;&quot;\108\086\080\087\050\111\088\066\078\088\061\061&quot;;&quot;\087\089\086\108\086\047\080\079\081\104\072\112\110\068\105\087\057\102\061\061&quot;,&quot;\117\054\076\108\116\102\061\061&quot;,&quot;\103\076\120\053\070\050\120\050\043\108\043\121\073\048\085\061&quot;,&quot;\111\076\114\082\080\056\054\099\098\106\104\070\102\080\104\110\090\043\111\122\097\076\049\061&quot;;&quot;\065\051\052\112\078\076\107\111\087\054\072\099\089\076\089\109\065\050\090\061&quot;;&quot;\100\109\080\099\053\112\078\098\072\055\065\101\066\082\069\105\109\086\068\111\076\069\077\061&quot;;&quot;\102\053\066\083\106\099\086\118&quot;,&quot;\108\070\119\079\087\100\066\116&quot;,&quot;\074\052\072\047\087\047\100\056\050\066\061\061&quot;,&quot;\117\054\076\108\099\069\066\061&quot;,&quot;\100\073\056\100\113\109\112\113\076\079\047\043\107\052\055\073&quot;,&quot;\081\051\087\050\099\066\061\061&quot;;&quot;\087\070\119\099\065\080\066\061&quot;,&quot;\054\111\053\055\110\113\070\119&quot;,&quot;\076\111\097\087\098\066\061\061&quot;;&quot;\099\069\107\107\121\066\061\061&quot;,&quot;\099\109\065\119\117\098\113\100\089\069\115\122\081\069\065\108&quot;,&quot;\087\115\089\109\078\068\088\051\117\068\087\122\088\069\089\087\088\070\068\061&quot;,&quot;\070\090\114\053\115\051\111\054&quot;;&quot;\076\088\069\117\067\051\066\069&quot;,&quot;\103\111\074\043\065\084\118\061&quot;;&quot;\116\086\049\107\076\120\099\112\089\100\069\117\102\114\102\075\049\117\086\079\076\087\122\087\049\056\047\057&quot;;&quot;\054\106\089\069\087\050\079\105\104\080\113\069\081\068\089\043\121\054\088\061&quot;,&quot;\069\043\075\071\087\108\084\099\100\076\119\106\054\066\061\061&quot;;&quot;\112\068\086\088\112\109\104\043\073\119\111\116\085\068\110\057\065\084\057\043\057\103\106\061&quot;;&quot;\112\120\066\115\081\071\090\119\112\066\061\061&quot;;&quot;\068\080\065\113\113\097\089\074\065\098\105\105\088\054\050\051\078\066\061\061&quot;,&quot;\120\122\117\119&quot;;&quot;\086\111\049\109\073\108\090\108\071\103\113\047\119\054\102\105&quot;;&quot;\121\089\116\065\071\085\061\061&quot;;&quot;\115\115\098\076\085\068\112\052&quot;,&quot;\048\056\075\053\054\083\121\061&quot;;&quot;\078\067\103\103\077\066\061\061&quot;,&quot;\081\108\050\050\112\106\113\078\068\051\079\116\104\098\115\114\087\097\099\061&quot;;&quot;\070\112\097\117\049\067\068\061&quot;;&quot;\113\069\065\108\068\080\079\053\121\098\065\057\089\080\115\114\116\098\076\073\081\069\065\122\068\069\115\109\117\070\076\049&quot;;&quot;\088\068\113\050\055\065\052\051\078\054\118\061&quot;;&quot;\122\078\085\068&quot;;&quot;\074\099\080\110&quot;;&quot;\082\052\112\097&quot;;&quot;\118\105\112\108\112\057\079\088&quot;;&quot;\074\081\105\075\085\120\084\057&quot;,&quot;\113\098\072\103\116\050\089\119\081\098\089\115\089\076\052\049\089\054\089\119\117\122\089\050\116\068\115\073\081\070\118\061&quot;,&quot;\105\097\049\071\054\054\102\110\081\118\043\079\068\104\120\118\117\114\111\057\103\102\065\055&quot;,&quot;\120\086\078\106\071\069\052\112\071\111\071\113\098\111\099\070\048\085\061\061&quot;,&quot;\122\083\112\114\066\109\079\102\082\082\047\073\080\055\069\122&quot;;&quot;\081\067\078\115\070\072\066\084&quot;;&quot;\089\069\053\088\070\067\073\121\113\085\106\065\114\116\086\068\115\089\117\116\079\088\061\061&quot;,&quot;\110\050\075\097\106\098\084\052\081\080\077\072\101\112\071\087\082\111\118\054\088\073\049\048&quot;;&quot;\073\100\101\079\047\067\102\075\052\072\074\098\107\079\054\073&quot;,&quot;\087\050\119\078\077\118\111\076\068\102\061\061&quot;;&quot;\089\047\113\049&quot;;&quot;\067\052\117\072\054\087\047\098\119\053\073\085\103\077\053\072\117\121\049\108\103\081\087\084\055\071\069\077&quot;,&quot;\065\052\087\057\079\075\105\081\120\104\067\067\098\105\098\087\104\066\061\061&quot;,&quot;\080\117\073\119\086\110\088\085\081\118\067\055\073\105\077\061&quot;,&quot;\070\047\111\076\121\106\112\101\110\056\090\077\069\057\108\061&quot;,&quot;\070\066\100\082\115\049\122\090&quot;;&quot;\070\074\110\069\101\104\107\122\109\117\119\097\052\103\049\080\047\098\066\061&quot;;&quot;\108\087\119\077\101\070\098\048\074\048\066\085\072\121\119\081&quot;;&quot;\122\118\119\086\073\122\075\102\115\089\111\066\121\050\085\056\099\099\076\114\089\088\061\061&quot;;&quot;\089\098\072\073\089\054\050\120\081\097\077\061&quot;;&quot;\089\118\077\070\103\084\050\072\080\067\077\086\052\066\061\061&quot;,&quot;\121\117\073\083\119\082\068\061&quot;;&quot;\079\075\120\116\104\047\121\079&quot;;&quot;\076\098\102\108\097\084\111\083\070\057\117\086\116\104\108\101\089\084\066\071\055\079\113\070\099\117\088\052\043\090\048\106\057\102\061\061&quot;;&quot;\121\069\065\108\117\054\065\108\099\097\113\107\099\070\105\115&quot;,&quot;\068\069\065\108\068\069\065\108\089\098\115\073\081\085\061\061&quot;,&quot;\121\098\087\107\117\098\085\061&quot;;&quot;\066\080\086\067\071\109\104\106\103\052\068\083\120\075\099\061&quot;,&quot;\055\088\066\088\053\102\049\061&quot;,&quot;\089\097\052\122\099\097\113\115\097\051\065\119&quot;,&quot;\083\104\053\079\108\075\098\047&quot;,&quot;\083\051\111\052&quot;,&quot;\075\122\076\122\048\098\099\055\049\073\077\069\050\071\116\101\120\088\061\061&quot;;&quot;\087\080\115\119\116\051\065\107\068\068\107\108\099\082\113\103\081\102\061\061&quot;;&quot;\081\114\065\107\099\109\087\043\088\103\115\109\054\098\072\088&quot;;&quot;\090\086\087\107\097\106\122\087\106\085\061\061&quot;;&quot;\084\098\109\081\074\113\117\056&quot;,&quot;\066\097\049\107\072\077\084\047\104\107\107\055\053\112\121\079\113\118\053\113\049\077\079\087\119\097\085\061&quot;;&quot;\047\054\117\067\102\111\078\101\048\057\118\113\120\103\121\056\109\053\065\087&quot;;&quot;\077\069\052\110\088\085\120\074\052\073\053\110\085\120\084\100\075\048\104\097\066\088\061\061&quot;;&quot;\121\051\065\120&quot;;&quot;\089\098\076\120\117\098\068\061&quot;,&quot;\117\108\079\100&quot;,&quot;\087\117\109\043\077\108\088\090\043\049\108\110\043\084\108\102\110\047\073\066\103\104\121\061&quot;,&quot;\081\105\104\081\043\088\057\071\083\088\120\121\055\085\077\105\087\066\061\061&quot;;&quot;\102\050\052\073\072\085\061\061&quot;,&quot;\112\066\061\061&quot;,&quot;\104\070\106\085\113\068\065\110\117\122\065\078\089\108\086\069\087\066\061\061&quot;,&quot;\097\051\085\120\081\084\086\086\052\054\057\069\099\107\098\081\097\086\078\118\088\066\061\061&quot;,&quot;\078\109\057\087\072\053\122\075\080\068\103\066\102\114\088\121&quot;;&quot;\097\057\074\048&quot;;&quot;\076\120\067\120\084\076\077\061&quot;,&quot;\113\069\065\108\068\069\065\108\089\098\115\073\081\085\061\061&quot;;&quot;\080\090\111\078\068\067\109\106\053\082\066\117\075\068\105\105\074\043\106\061&quot;,&quot;\104\068\121\112\099\102\104\050&quot;,&quot;\111\067\075\082\109\102\068\109&quot;;&quot;\114\048\051\082\078\087\065\050&quot;;&quot;\071\122\069\083\102\088\067\069\078\122\055\117\082\050\050\057\068\090\119\122&quot;,&quot;\121\051\113\057\116\054\048\109&quot;,&quot;\110\051\090\048\049\047\070\047\115\065\087\056\112\080\119\050\098\053\088\048\087\114\104\087\048\048\089\071\087\055\088\087\102\066\061\061&quot;;&quot;\104\084\076\057\119\086\088\049\097\065\080\109\109\050\086\057&quot;,&quot;\121\080\053\102\089\088\105\087\050\066\061\061&quot;,&quot;\084\076\050\051\051\071\080\070&quot;;&quot;\074\103\089\110\099\104\106\105\087\104\081\043\117\051\081\105\089\106\108\061&quot;,&quot;\086\054\106\061&quot;;&quot;\067\110\119\072\110\106\103\084&quot;,&quot;\056\068\107\089\078\067\086\061&quot;;&quot;\116\108\103\101\050\084\065\090\066\051\107\110&quot;,&quot;\112\106\072\068\055\080\081\077\055\122\048\053\089\069\081\052&quot;,&quot;\121\069\087\057\116\097\052\108&quot;,&quot;\116\112\087\055\113\047\077\101\090\088\061\061&quot;;&quot;\111\115\118\090\052\056\079\049\077\078\076\122\119\067\053\075\109\043\108\061&quot;,&quot;\088\049\074\057\104\115\079\053\043\056\118\100\079\055\066\061&quot;,&quot;\080\068\114\079\047\090\066\061&quot;;&quot;\108\074\110\097\077\068\112\115\080\068\075\049\065\105\108\061&quot;,&quot;\099\055\079\107\089\099\121\066\082\087\117\105\055\083\108\113\050\085\061\061&quot;;&quot;\049\047\070\080\097\121\072\097\102\113\105\085\050\066\061\061&quot;,&quot;\119\082\090\105\054\050\072\051\121\085\077\116&quot;,&quot;\107\114\077\081\089\057\070\048\111\075\050\103\097\103\098\065&quot;,&quot;\074\109\113\043\121\068\081\070\116\108\101\069\065\080\089\090\121\108\066\061&quot;,&quot;\099\069\072\073\099\069\076\108&quot;,&quot;\107\070\118\119\055\121\121\114\057\049\113\118\083\070\102\061&quot;;&quot;\097\050\072\101\081\097\113\107\089\098\076\120\117\098\068\061&quot;;&quot;\108\112\080\069\086\089\085\068\120\101\067\117\080\082\104\115\056\117\077\061&quot;;&quot;\121\055\088\104\087\109\055\043\089\065\052\076\119\086\069\115\083\051\117\110\116\102\061\061&quot;,&quot;\105\086\111\100\108\107\075\102\076\065\121\066\082\117\048\112\089\086\088\074\106\077\120\048\112\122\106\061&quot;,&quot;\086\043\098\047\053\107\117\119\047\056\082\114\089\066\061\061&quot;;&quot;\052\047\109\119\069\105\073\119\047\067\070\103\081\085\074\061&quot;;&quot;\070\074\070\109\118\085\050\049&quot;,&quot;\053\099\113\107\121\049\097\106&quot;;&quot;\076\121\087\099\056\102\061\061&quot;;&quot;\117\109\106\049\085\084\108\061&quot;;&quot;\084\043\071\073\099\108\072\055\111\076\111\116\070\084\098\121&quot;;&quot;\099\054\072\083\081\082\079\043\099\108\113\122\078\050\076\065\087\097\066\061&quot;,&quot;\081\070\105\053\117\051\077\061&quot;;&quot;\076\055\054\087\090\100\083\071&quot;;&quot;\069\118\072\090&quot;;&quot;\115\055\049\118\112\057\081\084\104\049\049\067\113\112\090\061&quot;;&quot;\089\076\050\111&quot;;&quot;\074\081\104\054\102\057\106\048&quot;,&quot;\104\102\078\116\052\054\071\048&quot;,&quot;\048\115\087\048\121\056\098\116\102\075\107\049\072\054\087\116\121\117\074\077\071\051\074\052&quot;,&quot;\112\085\065\051\085\057\113\074&quot;,&quot;\099\109\115\108\081\088\061\061&quot;;&quot;\065\122\081\104\065\082\065\104\113\070\105\074\087\082\052\054\113\066\061\061&quot;,&quot;\078\087\086\106\112\107\081\055\084\108\121\115\106\121\075\109\118\085\061\061&quot;;&quot;\112\100\049\112\085\082\072\111\102\083\120\074\109\103\112\051\088\104\115\114\072\080\055\051\048\081\085\061&quot;,&quot;\056\047\104\082\090\078\107\078&quot;;&quot;\121\104\074\050\116\051\089\043\117\080\065\050\121\097\115\120\087\108\099\061&quot;,&quot;\114\084\102\067\090\084\103\089&quot;;&quot;\065\054\079\073\089\098\050\098\081\070\107\119\104\076\081\120\113\050\121\061&quot;,&quot;\078\110\115\069\054\066\117\073\105\056\052\104\075\069\111\069\103\088\061\061&quot;,&quot;\090\068\114\108\056\089\065\118\105\103\106\072\108\112\100\121\097\065\052\103\104\113\083\043\120\115\049\061&quot;,&quot;\054\101\079\109\114\087\054\072\073\098\079\055\054\079\081\052\089\065\084\076\099\102\061\061&quot;,&quot;\087\054\079\049\112\097\107\081\117\098\065\113\065\114\052\074\112\076\106\061&quot;,&quot;\121\066\061\061&quot;,&quot;\108\104\120\072\077\116\068\108&quot;,&quot;\057\069\084\070&quot;,&quot;\087\072\098\053\074\118\088\114\068\055\073\109\105\076\086\070\099\122\110\089\079\087\086\082\117\066\106\061&quot;,&quot;\119\071\086\081\105\047\089\088&quot;;&quot;\111\072\111\077\043\108\110\118&quot;;&quot;\043\051\072\067\082\114\100\088\074\099\086\106\089\079\107\122\073\069\082\055\052\085\061\061&quot;;&quot;\097\050\072\119\117\070\113\115\055\102\061\061&quot;,&quot;\052\075\043\097&quot;;&quot;\047\043\090\078\107\066\108\080&quot;,&quot;\089\083\102\108\077\100\103\114\069\108\082\073\066\088\114\047\109\085\061\061&quot;,&quot;\057\066\098\078\084\068\098\049\121\067\088\068\083\050\115\055\051\108\116\114\043\116\056\090&quot;,&quot;\078\107\102\072&quot;,&quot;\115\066\065\084\086\053\098\108\087\102\106\114\111\109\113\110\111\117\088\083\079\066\061\061&quot;,&quot;\113\069\065\108\068\069\065\057\089\070\115\103\081\088\061\061&quot;,&quot;\048\107\109\050\088\086\121\075&quot;;&quot;\068\104\087\101&quot;,&quot;\111\081\098\043\107\050\071\104\081\072\078\088\108\112\109\109\068\088\061\061&quot;;&quot;\121\106\069\081\067\113\080\119\097\053\112\122\048\068\074\086\112\081\071\078\088\101\082\116\079\113\119\090\047\121\099\069\118\074\082\077\056\083\068\111\055\085\097\065\078\049\101\069\053\106\065\066\088\122\108\104\084\121\086\109\099\102\061\061&quot;;&quot;\120\070\055\097\084\051\104\073\081\119\102\103\102\099\106\110\088\097\109\081\075\115\101\097\048\066\082\076&quot;;&quot;\104\118\083\105&quot;,&quot;\054\075\104\103\051\080\121\051\100\078\089\056\076\102\120\107\043\066\061\061&quot;;&quot;\102\107\121\115\083\097\051\081\107\099\087\105\073\100\075\081\071\049\107\110&quot;,&quot;\080\090\111\081\089\070\048\106\069\070\051\065\050\107\086\089\043\076\090\088\078\112\106\061&quot;;&quot;\116\097\052\107\116\097\079\082&quot;;&quot;\071\083\043\114\116\066\061\061&quot;;&quot;\116\054\076\076\104\066\061\061&quot;,&quot;\053\100\073\054\097\083\102\080&quot;,&quot;\056\066\087\105\069\070\107\082\055\073\043\050\067\048\086\047\070\072\066\103\103\051\050\053\116\109\118\073\054\107\101\068\116\102\061\061&quot;,&quot;\054\122\119\120\121\054\065\085\068\114\068\050\081\070\090\057&quot;,&quot;\054\085\065\054\117\056\067\074\089\066\061\061&quot;;&quot;\113\084\071\087\082\075\104\066&quot;;&quot;\070\122\057\055\101\068\114\048\086\081\054\104\099\100\056\085\071\050\116\099\057\102\061\061&quot;,&quot;\112\120\116\110\072\105\071\070\085\111\066\077\116\087\088\054\083\108\070\119\043\066\061\061&quot;;&quot;\079\087\088\117\113\115\107\080&quot;;&quot;\054\097\053\081\055\102\078\073\108\065\100\074\052\105\101\088\101\101\074\118\111\066\061\061&quot;,&quot;\106\066\078\112\115\069\115\080\082\109\097\122\090\102\061\061&quot;;&quot;\057\122\078\057\102\085\061\061&quot;;&quot;\076\090\085\112\065\120\051\086&quot;;&quot;\117\114\077\061&quot;,&quot;\067\118\111\104\117\103\076\121\049\104\120\106\048\071\048\110&quot;,&quot;\065\076\115\079\116\114\081\080\074\122\065\106\088\109\113\107\121\054\099\061&quot;;&quot;\055\109\079\054\087\114\052\077\099\104\076\078\112\106\089\076\081\070\066\061&quot;;&quot;\088\069\105\053\117\070\068\061&quot;;&quot;\106\054\065\043\052\076\070\112\088\085\061\061&quot;;&quot;\069\082\085\117\048\074\079\072\084\099\072\102\121\084\073\052\070\099\102\061&quot;,&quot;\070\102\078\065\113\085\061\061&quot;,&quot;\101\083\102\111\068\083\116\097\120\079\076\083\070\049\065\052\103\100\048\117\053\122\085\079\065\072\110\108\084\071\085\114\101\074\065\072\081\085\061\061&quot;,&quot;\065\104\122\069\113\106\072\070\117\050\076\108\081\122\105\108\074\088\061\061&quot;;&quot;\068\054\101\117\079\065\051\117&quot;,&quot;\073\053\076\121\110\054\120\076&quot;,&quot;\070\109\117\107\109\050\050\049&quot;,&quot;\065\098\076\101\121\098\065\057\077\106\113\115\089\098\065\103\089\098\065\122\077\088\061\061&quot;;&quot;\110\043\057\105\069\115\051\105&quot;,&quot;\050\084\085\070\106\079\106\115&quot;;&quot;\055\076\097\054\069\111\051\082\077\055\099\072\105\111\116\106&quot;;&quot;\067\107\114\069\070\084\067\097\100\066\061\061&quot;,&quot;\113\054\048\050\117\088\061\061&quot;;&quot;\043\105\097\047\049\088\061\061&quot;,&quot;\048\109\051\107\103\076\106\074\065\087\108\080\072\048\117\069&quot;,&quot;\084\052\115\114\066\080\057\083\069\081\056\055\110\066\061\061&quot;,&quot;\112\114\102\085\078\068\113\082\078\082\079\053\116\109\081\078&quot;,&quot;\076\109\088\097&quot;;&quot;\083\083\065\054\086\108\056\121&quot;;&quot;\083\073\115\108\105\054\077\081&quot;;&quot;\082\108\079\068\107\068\088\061&quot;;&quot;\120\077\072\100\109\090\088\118\087\087\065\054\109\090\104\084\087\101\098\057\079\122\047\097\089\065\106\054\116\052\055\074&quot;;&quot;\117\090\048\089\055\078\106\105\122\076\099\057\056\074\115\103\118\112\071\109&quot;;&quot;\103\073\077\110\076\088\061\061&quot;;&quot;\118\053\113\068\078\088\061\061&quot;,&quot;\106\072\084\109\122\104\090\075\106\050\102\098\112\112\090\073&quot;,&quot;\055\078\051\050\049\070\080\076&quot;;&quot;\057\075\097\120\122\121\081\118\102\099\075\114\071\043\116\074\069\072\084\048\087\066\053\056\075\080\056\115\077\087\106\061&quot;,&quot;\098\072\112\052\097\118\073\065\057\121\052\067\087\069\047\068\043\066\061\061&quot;,&quot;\122\085\117\118\065\103\098\111\051\074\110\115\078\067\110\087\119\111\118\113\089\054\114\097\117\099\122\051&quot;,&quot;\113\070\115\073\081\106\081\119\121\109\087\108\088\069\107\119\117\098\088\061&quot;,&quot;\111\072\100\117\099\115\109\067\106\116\057\089\113\089\121\061&quot;,&quot;\088\069\072\073\117\070\065\103\089\102\061\061&quot;,&quot;\097\097\067\075\088\098\114\108\115\047\113\057\087\118\102\110\104\072\103\068\089\089\074\049\054\043\100\107\114\105\048\070\055\088\106\099&quot;,&quot;\117\098\065\073&quot;,&quot;\118\109\083\121&quot;;&quot;&quot;,&quot;\099\077\106\072\098\071\108\109\071\113\107\084\086\114\119\065&quot;,&quot;\050\114\103\117\055\085\118\119\053\118\104\099\108\079\106\061&quot;,&quot;\099\088\061\061&quot;;&quot;\078\097\087\110\081\097\115\106\117\051\089\073&quot;;&quot;\087\114\074\051\078\080\113\110\087\104\065\081\087\051\087\076\088\066\061\061&quot;,&quot;\048\078\081\103\088\104\109\099\114\082\072\106\109\047\081\066&quot;;&quot;\051\083\074\106\115\097\114\055\115\090\103\065\115\111\099\116\077\054\117\051&quot;;&quot;\075\111\108\043\082\105\079\076\088\089\052\080\077\085\080\082&quot;,&quot;\073\056\055\050\065\072\076\054\054\120\100\101\077\090\110\121&quot;,&quot;\107\086\065\067\121\102\061\061&quot;;&quot;\088\051\079\115\099\097\113\115\113\098\072\103\116\050\089\119\081\098\089\115\089\076\052\049\089\054\089\119\117\122\089\050\116\088\061\061&quot;,&quot;\117\103\077\074\089\085\061\061&quot;,&quot;\043\098\085\111\071\047\082\101\119\090\109\099\105\056\119\084\116\050\068\048\119\116\078\111\067\088\061\061&quot;,&quot;\080\054\089\075\117\076\088\079\106\089\054\055\068\116\088\102\100\114\097\089&quot;,&quot;\100\051\104\106&quot;;&quot;\071\119\054\118\082\057\068\106&quot;,&quot;\106\068\074\053\077\117\102\073\071\072\081\108\049\115\072\073&quot;,&quot;\088\118\082\107\055\068\085\047\105\084\050\055\085\066\061\061&quot;;&quot;\104\073\051\069\102\057\089\110&quot;,&quot;\077\056\082\114\081\055\117\068\118\076\070\053\086\085\074\061&quot;,&quot;\106\111\117\074\099\121\048\075\104\104\113\073\090\067\055\111\105\073\118\083\117\069\079\070\080\108\070\097\067\066\061\061&quot;,&quot;\082\071\082\069&quot;,&quot;\050\107\097\118\109\066\061\061&quot;,&quot;\070\100\079\102\079\066\061\061&quot;;&quot;\051\088\078\072&quot;,&quot;\080\115\100\083\105\109\048\086\119\082\111\075\049\047\112\056\101\086\084\104\075\088\115\098&quot;,&quot;\100\118\080\111\057\088\061\061&quot;,&quot;\043\066\097\119\116\117\102\078\056\106\102\106\054\075\090\089\114\081\117\109\078\107\071\105&quot;;&quot;\082\050\101\114\073\057\121\087&quot;,&quot;\110\105\054\057&quot;;&quot;\089\098\115\103\116\085\061\061&quot;,&quot;\047\109\086\088\086\088\072\099\119\066\061\061&quot;;&quot;\075\111\057\056\120\079\047\114\052\073\050\100\088\086\109\118\075\085\081\117\104\048\074\061&quot;,&quot;\085\051\049\074\082\072\078\087\047\088\061\061&quot;;&quot;\121\070\076\073\081\098\072\101&quot;;&quot;\081\069\050\107\089\098\087\090&quot;,&quot;\056\050\081\043&quot;;&quot;\069\072\080\098\098\066\061\061&quot;,&quot;\089\098\072\082\089\080\079\119\117\070\121\061&quot;;&quot;\113\069\065\108\088\069\107\119\117\098\113\057\081\054\086\061&quot;;&quot;\086\086\068\051\049\116\098\054\100\121\100\106\043\047\076\108\116\087\118\108\055\115\099\112\068\119\068\061&quot;,&quot;\107\050\082\105\107\121\106\049&quot;,&quot;\097\067\080\049\108\108\069\068\065\068\079\071&quot;;&quot;\118\082\122\054\120\100\088\080\089\069\116\090\090\112\121\106\049\110\082\051\070\085\061\061&quot;;&quot;\097\050\072\109\099\085\061\061&quot;,&quot;\102\105\077\055\090\080\050\116\108\056\120\103\115\071\114\074\078\079\087\070\122\112\050\108\069\073\074\048\098\047\069\057\075\066\061\061&quot;;&quot;\108\080\122\075\116\107\081\112\051\083\090\110\083\101\083\065\099\075\122\118\050\104\111\113&quot;,&quot;\081\065\085\074&quot;,&quot;\106\053\049\078\043\088\061\061&quot;,&quot;\048\122\116\076\118\065\090\070\099\072\088\080\087\110\117\056\049\097\101\048\050\085\061\061&quot;,&quot;\105\119\105\050\053\101\086\081&quot;;&quot;\065\049\118\118\102\110\117\079\048\111\070\073\075\111\103\084\071\068\102\061&quot;;&quot;\071\057\080\081&quot;;&quot;\082\111\089\109\047\065\107\100\100\112\103\098\088\052\050\050\065\053\109\108\102\102\061\061&quot;;&quot;\104\068\047\102\085\116\103\084&quot;;&quot;\070\066\050\121\076\066\061\061&quot;,&quot;\104\048\108\110\076\073\114\081\079\103\072\074\065\067\109\055\075\076\122\061&quot;,&quot;\121\070\065\105\089\054\115\057\081\088\061\061&quot;;&quot;\082\075\111\068\097\104\084\088\083\072\051\054\104\053\111\043&quot;,&quot;\108\071\078\111\072\122\102\068&quot;,&quot;\099\109\065\119\117\098\113\100\117\054\072\122\081\054\105\100\121\069\065\049\081\054\087\108\116\054\072\073&quot;;&quot;\117\065\071\047\051\048\043\066\117\043\071\087\078\079\084\112\072\066\061\061&quot;,&quot;\050\054\083\085\078\106\076\089\054\109\073\117\069\106\043\080\047\049\079\089\056\081\104\122\077\087\066\061&quot;;&quot;\056\072\075\101\071\069\043\082&quot;;&quot;\076\122\118\105\065\086\083\102\120\075\075\119\068\122\103\082\111\065\119\071\048\051\098\106&quot;,&quot;\076\065\083\050\087\067\111\097\106\119\068\089\065\050\110\071&quot;;&quot;\066\107\066\112\118\050\102\122&quot;;&quot;\112\070\052\081\065\088\061\061&quot;;&quot;\070\113\056\074\051\089\108\087\114\082\122\086\073\070\089\077\110\068\115\065\065\066\061\061&quot;;&quot;\121\070\065\101\117\051\081\115&quot;;&quot;\117\081\082\103&quot;;&quot;\081\097\079\057\117\051\077\061&quot;,&quot;\069\101\072\072\088\069\119\107\079\120\109\043\057\100\119\117\112\065\077\055\082\102\061\061&quot;;&quot;\087\114\087\047\069\085\061\061&quot;;&quot;\081\069\076\101\081\088\061\061&quot;,&quot;\117\114\106\061&quot;,&quot;\088\104\068\048\078\097\115\050\089\097\066\086\099\122\107\052&quot;,&quot;\071\090\097\052\117\122\080\089\086\112\114\049\100\086\076\052\089\043\108\075\088\086\102\061&quot;,&quot;\080\084\081\109\077\101\070\098\055\103\097\088\083\111\099\102\055\071\078\083\055\052\079\080\111\090\057\084\088\085\061\061&quot;;&quot;\078\054\048\053\068\114\081\043\121\109\052\122\055\066\061\061&quot;}for U,J in ipairs({{317028+-317027,17513+-17173},{896876-896875;-509912+509993};{9445+-9363;-79555-(-79895)}})do while J[477918+-477917]&lt;J[-200328-(-200330)]do w[J[509839+-509838]],w[J[274273+-274271]],J[-914131-(-914132)],J[599493-599491]=w[J[355381-355379]],w[J[865310-865309]],J[186841-186840]+(1008832+-1008831),J[-700795+700797]-(107845-107844)end end local function U(U)return w[U-(-990620-(-1012507))]end do local U=w local J=string.char local p=table.concat local y=string.len local R=type local N={[&quot;\049&quot;]=53740+-53696;N=-139854-(-139872),s=868936-868899,[&quot;\048&quot;]=459591+-459534,A=-116435+116456,B=-440402-(-440434);c=-772777+772801,[&quot;\053&quot;]=-166872-(-166919);u=1447+-1420;k=-244594+244627;H=-644653+644714;G=-23238-(-23240),[&quot;\055&quot;]=-329396+329426;S=585123+-585108,b=-543877+543883;U=-475139+475187,[&quot;\054&quot;]=-245973+245995,q=716830-716813,p=-179757-(-179771);[&quot;\052&quot;]=816496-816495,w=-206345+206386;g=-118342-(-118377);C=-894252-(-894262),X=37084-37068;[&quot;\051&quot;]=-60487+60542,W=859554+-859541,v=-895003-(-895063);n=-834297+834308,[&quot;\043&quot;]=-102889-(-102932),j=536767-536763;a=411701-411678;E=285922-285868;f=1031202+-1031202,J=-696246-(-696258),o=921202-921144;P=-387992+387999,Z=-417394-(-417434),[&quot;\047&quot;]=-615940-(-615982),z=558403-558367,T=-316230+316289;I=-924627+924673,r=-936500-(-936503),d=-389972+390003,V=-87019+87075;x=39370+-39336,[&quot;\056&quot;]=93672+-93610,[&quot;\057&quot;]=-203033+203083,y=-327734-(-327762);m=-509730+509769,D=187546+-187526;Y=701842+-701813,t=592120-592094;[&quot;\050&quot;]=-266499-(-266552);K=895686+-895623,h=174364+-174345;l=-769981+770033;e=-179879-(-179924);O=-634695+634704,F=-772403-(-772441);L=613877-613872;M=76238-76230,Q=520442+-520417;i=-436392-(-436441);R=-281790-(-281841)}local o=table.insert local D=math.floor local X=string.sub for w=836456+-836455,#U,-875801-(-875802)do local S=U[w]if R(S)==&quot;\115\116\114\105\110\103&quot;then local R=y(S)local A={}local O=994970-994969 local Q=-882681-(-882681)local t=282341-282341 while O&lt;=R do local w=X(S,O,O)local U=N[w]if U then Q=Q+U*(110196+-110132)^((785446+-785443)-t)t=t+(-670811-(-670812))if t==-914702+914706 then t=-456660-(-456660)local w=D(Q/(-520813+586349))local U=D((Q%(-65366-(-130902)))/(688345-688089))local p=Q%(863941-863685)o(A,J(w,U,p))Q=138132-138132 end elseif w==&quot;\061&quot;then o(A,J(D(Q/(816103-750567))))if O&gt;=R or X(S,O+(-595644-(-595645)),O+(1016959-1016958))~=&quot;\061&quot;then o(A,J(D((Q%(338154+-272618))/(-735208+735464))))end break end O=O+(950455-950454)end U[w]=p(A)end end end return(function(w,p,y,R,N,o,D,F,J,s,m,P,X,W,O,n,c,Q,V,A,S,t)n,Q,A,S,s,V,W,c,P,X,J,F,t,O,m=function(w,U)local p=Q(U)local y=function(y,R,N,o,D,X)return J(w,{y;R;N;o;D;X},U,p)end return y end,function(w)for U=-791141-(-791142),#w,47902-47901 do S[w[U]]=S[w[U]]+(870724-870723)end if y then local J=y(true)local p=N(J)p[U(206463-184309)],p[U(482597-460664)],p[U(153757+-131772)]=w,t,function()return 3712077-420887 end return J else return R({},{[U(70954-49021)]=t;[U(145574-123420)]=w;[U(242446-220461)]=function()return-410170+3701360 end})end end,function()O=(-361148+361149)+O S[O]=930985+-930984 return O end,{},function(w,U)local p=Q(U)local y=function(y,R)return J(w,{y;R},U,p)end return y end,function(w)S[w]=S[w]-(763113-763112)if-880596+880596==S[w]then S[w],X[w]=nil,nil end end,function(w,U)local p=Q(U)local y=function(y,R,N,o)return J(w,{y;R,N;o},U,p)end return y end,function(w,U)local p=Q(U)local y=function(y,R,N,o,D)return J(w,{y,R;N,o;D},U,p)end return y end,function(w,U)local p=Q(U)local y=function(y,R,N)return J(w,{y;R;N},U,p)end return y end,{},function(J,y,R,N)local b,L,Q,d,h,e,Z,D,r,T,M,O,i,K,l,t,H,B,g,a,S,f,C,G,u,v,F,k,q,Y,j,z,x,I while J do if J&lt;7482134-397021 then if J&lt;-58527+4082162 then if J&lt;805642+1208104 then if J&lt;382691-(-751166)then if J&lt;1450238-832084 then if J&lt;-58022+443047 then if J&lt;669667-404860 then D={O}J=w[U(-709910-(-731923))]else J=w[U(-308659+330683)]D={}end else if J&lt;51320-(-506805)then Y=U(-713361-(-735409))J=X[R[204000-203999]]t=U(-780982+802927)S=X[R[249164+-249162]]F=151883+17531049365144 h=26778595894917-(-510512)O=X[R[-598223+598226]]Q=O(t,F)D=S[Q]Q=X[R[777606-777605]]F=X[R[-461212+461214]]i=X[R[-515343-(-515346)]]v=i(Y,h)t=F[v]Y=U(1035969-1013777)O=Q[t]S=not O J[D]=S i=15565825335628-443644 D=X[R[-820491-(-820492)]]h=76075+34393685710180 F=U(-333281-(-355479))O=X[R[431661-431659]]Q=X[R[-345759-(-345762)]]t=Q(F,i)S=O[t]J=D[S]F=U(611785+-589610)O=X[R[733241-733239]]Q=X[R[693029+-693026]]i=565330+11765906765076 t=Q(F,i)S=O[t]Q=X[R[253149+-253148]]F=X[R[-573895+573897]]i=X[R[-839033-(-839036)]]v=i(Y,h)i=1039965+9134562783808 t=F[v]D=U(263230+-241173)D=J[D]O=Q[t]D=D(J,S,O)F=U(25873-3782)D=X[R[-13153+13157]]O=X[R[-726628-(-726630)]]Q=X[R[280632+-280629]]t=Q(F,i)S=O[t]J=D[S]S=X[R[718067+-718066]]D=J(S)D={}J=w[U(-920455-(-942450))]else C=X[O]D=C J=C and 2899505-(-287587)or 4972720-934154 end end else if J&lt;347100-(-457208)then if J&lt;731278-74783 then L=-64656+64658 b=H[L]L=X[K]g=b==L C=g J=7197620-304670 else J=X[R[515999-515992]]J=J and 2632350-23675 or 4737601-(-665802)end else if J&lt;481576-(-578342)then S=A()h=24712986875303-633012 i=8870252535717-(-667773)F=U(-294913+317054)X[S]=y[-685626-(-685627)]J=X[S]O=X[R[-325417+325418]]Q=X[R[337389-337387]]t=Q(F,i)D=O[t]Q=X[S]Y=U(116790+-94572)u=U(360531-338561)F=X[R[475946-475945]]i=X[R[971794+-971792]]v=i(Y,h)t=F[v]O=Q[t]Q=U(284094+-262195)F=X[R[484938+-484937]]Y=U(879012-856843)a=933171+2927862990880 h=-958168+26557767257894 Q=O[Q]i=X[R[30291-30289]]v=i(Y,h)t=F[v]v=920183+22187635088868 F=X[R[498513-498510]]i=U(272596+-250586)Q=Q(O,t,F)J[D]=Q D=X[S]Q=X[R[-595991-(-595992)]]t=X[R[290204-290202]]F=t(i,v)O=Q[F]F=U(-309447+331507)i=2603510560722-(-642282)J=D[O]O=X[R[356335+-356334]]Q=X[R[-549097+549099]]Y=U(826947+-804846)t=Q(F,i)Q=J D=O[t]v=w[Y]h=X[R[-650196+650197]]Z=X[R[-463868+463870]]l=Z(u,a)Y=h[l]i=v[Y]Y=X[R[-692653+692654]]u=7578611749272-689103 h=X[R[-712494+712496]]l=U(-60715+82734)Z=h(l,u)v=Y[Z]Z=U(-461231+483443)F=i[v]v=X[R[-664547+664548]]Y=X[R[-301675+301677]]l=1022634+25346655785840 h=Y(Z,l)i=v[h]t=F[i]J=t and-960174+17713864 or 2894379-(-533429)O=t else x=X[O]J=x and 884882+13378694 or 1020224-(-893055)C=x end end end else if J&lt;666779-(-1041403)then if J&lt;997611-(-374139)then if J&lt;480448+741093 then S=V(S)J=w[U(339628-317563)]D={}else Q=X[R[697473-697467]]O=Q==S D=O J=-208135+7436457 end else if J&lt;400953+1212931 then r={}z=U(908939-886883)I={}g=nil l=nil k=A()M=P(2453693-(-852044),{k,h;Z;F})G=U(-755135+777289)X[k]=r H=U(-1022586+1044700)r=A()Q=nil Y=nil Q={}q=A()X[r]=M M={}X[q]=M M=w[z]K=X[q]e={[G]=K;[H]=g}z=M(I,e)i=nil X[t]=z F=V(F)i=U(229446-207500)M=W(5186045-(-993948),{q,k;u;h;Z;r})r=V(r)v=nil Z=V(Z)F=A()q=V(q)u=V(u)Z=U(-572521+594622)G=31747516194795-(-350676)h=V(h)X[O]=M k=V(k)a=nil X[F]=Q r=U(50730+-28699)Q=w[i]h=w[Z]l=X[t]k=727747+15857228825109 u=X[O]a=u(r,k)q=-240638+31235968525519 Z=l[a]Y=h[Z]a=U(795485-773291)Z=X[t]l=X[O]r=11633429498386-(-68375)u=l(a,r)k=U(983665-961717)h=Z[u]v=Y[h]l=U(300104-278003)i=Q(v)v=U(-415265+437211)Q=A()X[Q]=i M=884087+25478557004001 i=w[v]Z=w[l]u=X[t]a=X[O]r=a(k,M)l=u[r]k=-953195+31674364839176 h=Z[l]r=U(472387-450167)l=X[t]u=X[O]a=u(r,k)Z=l[a]I=-235162+25022506763294 Y=h[Z]M=U(-840840-(-862894))v=i(Y)i=A()X[i]=v Y=U(-241963-(-263909))v=w[Y]u=U(457684-435583)l=w[u]a=X[t]r=X[O]k=r(M,q)u=a[k]M=207418+12687424761050 Z=l[u]k=U(-336296-(-358460))u=X[t]a=X[O]r=a(k,M)l=u[r]h=Z[l]Y=v(h)v=A()a=U(218578-196477)h=U(407253+-385307)X[v]=Y Y=w[h]q=U(-853175-(-875272))e=U(-231804-(-253967))J=w[U(176467-154278)]u=w[a]r=X[t]k=X[O]M=k(q,I)a=r[M]M=U(105564-83350)q=775113+25474674662029 l=u[a]a=X[t]r=X[O]g=27574457598546-(-520150)k=r(M,q)u=a[k]Z=l[u]h=Y(Z)k=U(-835959-(-858138))Y=A()X[Y]=h Z=U(-579329+601292)h=w[Z]u=X[t]a=X[O]M=634635+20359482897917 r=a(k,M)Z=U(-1014091-(-1036252))Z=h[Z]k=972969+34974425982709 l=u[r]Z=Z(h,l)h=A()X[h]=Z M=634519+1584220476490 r=U(-316575+338463)l=X[t]q=-33512+27972355126729 u=X[O]a=u(r,k)Z=l[a]l=A()X[l]=Z u=X[t]k=U(98466-76241)a=X[O]r=a(k,M)H=U(-619960+641898)Z=u[r]u=A()X[u]=Z a=X[t]M=U(364299-342311)r=X[O]k=r(M,q)Z=a[k]k=U(780841+-758808)a=A()X[a]=Z r=w[k]M=X[t]q=X[O]I=q(e,G)k=M[I]I=U(873563+-851359)Z=r[k]q=w[I]e=X[t]G=X[O]K=G(H,g)I=e[K]M=q[I]I=X[t]K=U(-142471+164482)e=X[O]H=331138+28855009896186 G=e(K,H)q=I[G]K=-219444-(-219744)I=750995-750525 e=813245-812445 k=M[q]G=655783+-655403 M=false q=false r=Z(k,M,q,I,e,G,K)M=U(-337785+359734)Z=A()X[Z]=r k=X[F]r=W(205401+1565257,{i;t,O,Y})k[M]=r r=n(-516523+10858956,{t,O;a;u})k=X[F]M=U(1027358-1005375)k[M]=r M=U(-11855-(-33862))k=X[F]r=c(1172105-207522,{t,O;Z;Q;F,v;l;h})k[M]=r k=X[F]r=c(-877047+17583321,{t,O;v})M=U(-844934-(-866995))k[M]=r r=X[F]D={r}else Y=U(-720012+742102)J={}X[R[183169-183167]]=J D=X[R[29551+-29548]]v=508905+-508650 F=-711093+35184372799925 t=D J=-152516+6074981 D=O%F X[R[931040+-931036]]=D i=O%v v=772253+-772251 F=i+v X[R[-898460+898465]]=F v=w[Y]Y=U(-811418-(-833644))i=v[Y]v=i(S)i=U(592469+-570581)Z=373046-373045 l=Z h=v Z=789341-789341 u=l&lt;Z Q[O]=i i=852906-852752 Y=1043512-1043511 Z=Y-l end end else if J&lt;336320+1537248 then if J&lt;827112+947965 then D=U(517387+-495216)S=A()X[S]=y[-278505-(-278506)]J=w[D]t=X[R[-212239+212240]]F={J(t)}Q=F[-361309+361312]O=F[-743181+743183]D=F[444301+-444300]J=5882105-799122 t=D else J=220125+5912230 q=V(q)z=V(z)I=V(I)G=V(G)K=V(K)e=V(e)H=nil end else if J&lt;-878617+2834973 then X[O]=C L=X[e]B=-567154+567155 b=L+B g=H[b]x=l+g g=-900260+900516 J=x%g b=X[I]g=u+b l=J b=252796-252540 J=24034+1848038 x=g%b u=x else D=-104542+7930790 Q=7247606-(-1010118)O=U(-801945+823972)S=O^Q J=D-S S=J D=U(-1009731-(-1031734))J=D/S D={J}J=w[U(287147+-264952)]end end end end else if J&lt;-647101+3522849 then if J&lt;3481115-928332 then if J&lt;1457604-(-706745)then if J&lt;2519500-452241 then J=true J=12746528-(-516457)else Z=18461487678022-(-614222)i=X[R[294469+-294468]]h=U(363917+-341965)v=X[R[-437368+437370]]Y=v(h,Z)F=i[Y]t=S[F]Z=19963802036290-(-310286)i=X[R[-893135-(-893136)]]v=X[R[147215+-147213]]l=U(440791-418854)h=U(679698-657670)Y=v(h,Z)h=2590897753775-739833 F=i[Y]Q=t[F]F=X[R[-458948-(-458949)]]Y=U(-677850+699746)i=X[R[-991330-(-991332)]]v=i(Y,h)Y=-211404+25500816205870 t=F[v]v=U(-816039+838016)D=Q[t]t=X[R[-3081-(-3082)]]F=X[R[-1037085+1037087]]i=F(v,Y)h=-284036+20306006686323 Q=t[i]i=U(-323732+345937)J=D[Q]v=-291990+14933856980928 Q=X[R[23338-23337]]u=754480+32187023357788 t=X[R[-634565+634567]]Y=U(56968+-35034)F=t(i,v)D=Q[F]F=X[R[585264-585263]]i=X[R[615779-615777]]v=i(Y,h)t=F[v]Y=X[R[-120082-(-120083)]]h=X[R[-880821+880823]]Z=h(l,u)l=U(-1016229-(-1038268))u=-32289+13519113492152 v=Y[Z]i=O[v]Y=X[R[-747400+747401]]h=X[R[159420+-159418]]Z=h(l,u)v=Y[Z]F=i..v Q=t..F J[D]=Q F=X[R[679970-679969]]h=2092360248451-(-333643)i=X[R[-251690-(-251692)]]Y=U(154729-132790)v=i(Y,h)t=F[v]Q=S[t]F=X[R[-890397-(-890398)]]i=X[R[-485336+485338]]h=942105+33175973649471 Y=U(1034684-1012535)v=i(Y,h)t=F[v]v=U(320813-298812)D=Q[t]t=X[R[963635+-963634]]Y=-36644+7519158951121 F=X[R[-619837-(-619839)]]i=F(v,Y)v=11534830684796-243073 Q=t[i]J=D[Q]Q=X[R[-928097-(-928098)]]t=X[R[-726342-(-726344)]]i=U(-135526+157448)F=t(i,v)D=Q[F]Q=true J[D]=Q J=4093974-(-102701)end else if J&lt;2868961-364687 then h=U(108312+-86265)i=X[R[483386+-483385]]v=X[R[57178-57176]]Z=-526952+32149576549602 Y=v(h,Z)F=i[Y]Z=678232+3033432468524 t=S[F]i=X[R[830166-830165]]h=U(-378146+400373)v=X[R[451225-451223]]Y=v(h,Z)h=27316749819998-(-1003858)F=i[Y]Q=t[F]F=X[R[514526+-514525]]i=X[R[-1021395+1021397]]Y=U(365409-343360)v=i(Y,h)t=F[v]O=Q[t]Y=645659+29167642090227 v=U(-870026-(-891927))t=X[R[-512659-(-512660)]]F=X[R[-209767-(-209769)]]i=F(v,Y)Y=U(1045986-1024000)Q=t[i]v=-682150+10709511617569 i=U(-580790-(-602680))D=O[Q]h=743597+20761866292502 Q=X[R[571915+-571914]]t=X[R[-345604-(-345606)]]F=t(i,v)O=Q[F]J=D[O]O=X[R[667988+-667987]]F=U(-377666+399743)Q=X[R[628474-628472]]i=-319968+9663428572019 t=Q(F,i)D=O[t]F=X[R[658388-658387]]i=X[R[8238-8236]]v=i(Y,h)h=306657+26275335520746 t=F[v]Y=U(824119-801926)Q=S[t]F=X[R[-746459-(-746460)]]i=X[R[756119+-756117]]v=i(Y,h)h=U(805618+-783444)Z=21429335104329-(-478129)t=F[v]O=Q[t]J[D]=O i=X[R[744495-744494]]v=X[R[-377906-(-377908)]]Y=v(h,Z)F=i[Y]t=S[F]h=U(1067473-1045563)Z=178300+19971180538839 i=X[R[-15946+15947]]v=X[R[-225800-(-225802)]]Y=v(h,Z)h=225527065178-(-480783)F=i[Y]Q=t[F]F=X[R[-846125-(-846126)]]Y=U(509624+-487730)i=X[R[-214085+214087]]v=i(Y,h)t=F[v]v=U(-69680+91633)O=Q[t]t=X[R[-326324-(-326325)]]Y=251501+12606347903105 F=X[R[402051+-402049]]i=F(v,Y)Q=t[i]D=O[Q]Q=X[R[-59048+59049]]t=X[R[-402569-(-402571)]]v=-657612+2646182038940 i=U(433270-411290)F=t(i,v)O=Q[F]J=D[O]O=X[R[920142+-920141]]v=U(-857399-(-879434))i=206228+6925616850692 Q=X[R[864109+-864107]]Y=34831253101457-580662 F=U(-448061+469961)t=Q(F,i)D=O[t]t=X[R[-901611+901612]]F=X[R[-1041605+1041607]]i=F(v,Y)F=U(-375202+397346)Q=t[i]i=999553+3615201445394 O=S[Q]J[D]=O O=X[R[-218620-(-218621)]]Q=X[R[414330-414328]]t=Q(F,i)D=O[t]J=S[D]J=J and 13948008-238304 or 4365321-(-259447)else D=8415137-568383 O=U(274858-252712)Q=-782338+5997259 S=O^Q J=D-S D=U(-961708-(-983676))S=J J=D/S D={J}J=w[U(-160770+182958)]end end else if J&lt;-553805+3343086 then if J&lt;2091354-(-603428)then S=U(321340+-299380)J=w[S]O=X[R[-268238-(-268246)]]Q=545920+-545920 S=J(O,Q)J=4606945-(-796458)else Q=X[R[-597877+597878]]t=X[R[-104535-(-104537)]]v=265963+16839801966518 i=U(413730-391698)F=t(i,v)O=Q[F]D=S[O]v=78590+31514874824277 Q=X[R[-339475+339476]]i=U(91861+-69811)t=X[R[-212118-(-212120)]]F=t(i,v)O=Q[F]J=D[O]O=X[R[-896889-(-896890)]]F=U(1013403-991404)Q=X[R[-691448-(-691450)]]i=8118592311779-197407 t=Q(F,i)D=O[t]O=false J[D]=O J=-353815+2614049 end else if J&lt;920221+1886637 then D={}J=S X[R[807403-807399]]=J S=nil J=w[U(-133626+155834)]else J=9026566-(-775787)end end end else if J&lt;2478128-(-768339)then if J&lt;3227918-192938 then if J&lt;2252954-(-637472)then X[O]=f J=X[O]J=J and 116096+6898366 or-486271+2500389 else D=X[R[234171-234170]]O=X[R[249929-249927]]F=U(-371262-(-393213))Q=X[R[-687522+687525]]i=-30584+7889747117521 t=Q(F,i)S=O[t]J=D[S]S=X[R[-270816+270820]]D=J(S)J=w[U(27263-5163)]D={}end else if J&lt;-552073+3729771 then i[v]=Y l=X[S]T=21656282275167-(-592389)J=h a=X[R[573039-573038]]f=U(-567152+589273)r=X[R[-37823+37825]]k=r(f,T)u=a[k]k=U(-570965+593007)Z=l[u]f=16892665405066-376784 u=X[R[-150424+150425]]a=X[R[37353-37351]]r=a(k,f)l=u[r]h=Z[l]l=X[R[-992007+992008]]r=U(638457-616376)u=X[R[-15353+15355]]k=-798183+973148237740 a=u(r,k)Z=l[a]Y=h[Z]k=U(463395-441478)Z=X[R[-398617+398618]]r=33517262002135-(-910624)a=U(-329497-(-351549))l=X[R[-438513+438515]]u=l(a,r)a=-410779+29760530102973 h=Z[u]v=Y[h]h=X[R[-361308-(-361309)]]u=U(276194-254273)Z=X[R[297319+-297317]]T=141702+15309773632083 l=Z(u,a)Y=h[l]i=v[Y]Y=s(2245039-(-654662),{R[-254442+254448],R[-548963-(-548964)],R[154200-154198];S})v=U(501290+-479066)f=-715575+29419230634170 v=i[v]v=v(i,Y)Z=X[S]J=w[U(660810+-638715)]u=X[R[70977+-70976]]a=X[R[745186-745184]]r=a(k,f)l=u[r]h=Z[l]l=X[R[135398-135397]]r=U(219133+-197104)u=X[R[-710113+710115]]k=166803+7615089214023 a=u(r,k)r=137019+28753110899986 Z=l[a]a=U(649934+-627728)Y=h[Z]Z=X[R[772173-772172]]l=X[R[-571598-(-571600)]]u=l(a,r)a=14595477026203-(-304369)h=Z[u]v=Y[h]h=X[R[-45085+45086]]Z=X[R[215108-215106]]f=U(-940016-(-962226))u=U(-435470+457441)l=Z(u,a)a=18650059669393-597413 Y=h[l]i=v[Y]u=U(-62052+84072)h=X[R[144453-144452]]Z=X[R[519648+-519646]]l=Z(u,a)u=U(1057475-1035420)Y=h[l]a=962612+32726246984531 v=U(872230+-850204)v=i[v]v=v(i,Y)i=U(-556879+579103)i=v[i]Y=P(3445736-(-576194),{S,R[730462+-730461],R[-62106-(-62108)],R[-192320+192327];R[738684+-738676],R[899274+-899268]})i=i(v,Y)v=X[R[-2735+2740]]h=X[R[385934+-385933]]Z=X[R[-361056-(-361058)]]l=Z(u,a)Y=h[l]i=v[Y]Y=X[S]v=i(Y)l=X[S]a=X[R[134673-134672]]r=X[R[-219027-(-219029)]]k=r(f,T)f=111896+6702930237209 u=a[k]Z=l[u]u=X[R[-714991-(-714992)]]k=U(514596+-492678)a=X[R[741820-741818]]r=a(k,f)l=u[r]h=Z[l]l=X[R[505499+-505498]]u=X[R[-431543+431545]]r=U(-683986-(-705883))k=19198159166109-456626 a=u(r,k)Z=l[a]a=U(-957460-(-979402))Y=h[Z]Z=X[R[1009667-1009666]]l=X[R[-786486-(-786488)]]r=-178151+32202438996602 u=l(a,r)h=Z[u]v=Y[h]h=X[R[-106297+106298]]a=698953+7676077089709 Z=X[R[201963+-201961]]u=U(48544-26578)l=Z(u,a)Y=h[l]i=v[Y]Y=c(-10912-(-502124),{S;R[-696787-(-696788)],R[51535+-51533];R[-236291+236296]})v=U(-547688-(-569912))f=26361385089306-428327 v=i[v]k=U(516862+-494858)D={}v=v(i,Y)Z=X[S]u=X[R[681100+-681099]]a=X[R[911365+-911363]]r=a(k,f)k=17859373315845-546441 l=u[r]h=Z[l]l=X[R[-812076-(-812077)]]r=U(99194-77081)u=X[R[614438+-614436]]a=u(r,k)Z=l[a]Y=h[Z]Z=X[R[2185-2184]]l=X[R[6999+-6997]]r=6700088657586-(-853373)a=U(-461175-(-483168))u=l(a,r)h=Z[u]v=Y[h]h=X[R[-644339+644340]]u=U(-959714-(-981729))a=22224904212504-(-153685)Z=X[R[158923+-158921]]l=Z(u,a)Y=h[l]i=v[Y]v=U(-265599+287823)v=i[v]Y=m(-75586+7703039,{S,R[289459+-289458],R[-237792-(-237794)]})S=V(S)v=v(i,Y)else x=J L=36995+-36994 b=H[L]L=false g=b==L J=g and 1086497-456467 or 6864009-(-28941)C=g end end else if J&lt;409429+3240061 then if J&lt;3469033-60323 then S=X[R[-456262+456263]]D=#S S=-408312+408312 J=D==S J=J and 11199837-551873 or-473711+14412701 else Y=U(-716935-(-738841))F=X[R[507903+-507902]]i=X[R[303330-303328]]J=-60753+16814443 h=141244+32735183082447 v=i(Y,h)t=F[v]O=t end else if J&lt;4219713-406890 then v=U(-23207-(-45378))i=w[v]r=U(78435-56334)a=w[r]d=U(259020-237113)k=X[R[-221312-(-221313)]]f=X[R[582178-582176]]M=-446016+16452414909485 T=f(d,M)r=k[T]u=a[r]r=X[R[408710-408709]]d=-512170+34828333928452 k=X[R[173694-173692]]T=U(176717+-154526)f=k(T,d)a=r[f]l=u[a]f=U(-832634+854565)a=X[R[980845+-980844]]r=X[R[-386433+386435]]T=23248756527364-(-219462)J=449794+4360272 k=r(f,T)u=a[k]Z=l[u]u=U(-929010-(-950938))u=Z[u]l={u(Z)}Z={i(p(l))}v=Z[628003-628002]h=Z[-542152-(-542155)]Y=Z[-33092-(-33094)]else Z=32749898437571-645169 t=X[R[268037-268036]]i=X[R[330368+-330366]]h=U(223685+-201533)v=X[R[-757911-(-757914)]]Y=v(h,Z)F=i[Y]Y=U(560860+-538778)Q=t[F]F=X[R[84787+-84785]]i=X[R[-464215-(-464218)]]h=-1001029+31047892795070 v=i(Y,h)t=F[v]O=Q[t]t=X[R[-244745+244747]]F=X[R[-774004-(-774007)]]v=U(981352-959242)Y=997720+18294019385326 i=F(v,Y)Q=t[i]S=O[Q]v=20814282503604-69592 Q=X[R[-185258+185260]]i=U(-919489-(-941421))t=X[R[-89222+89225]]F=t(i,v)O=Q[F]D=S[O]i=7615329283268-(-401686)F=U(-527957-(-549869))O=X[R[-624126+624128]]Q=X[R[-706212+706215]]t=Q(F,i)S=O[t]Q=U(234617-212545)J=D[S]h=-461048+26014937741386 S=J Y=U(-940582-(-962473))Q=S[Q]t=1030485-1030486 Q=Q(S,t)F=X[R[-846067-(-846069)]]i=X[R[231668+-231665]]v=i(Y,h)t=F[v]O=Q==t D=O J=O and-821645+7453933 or 980952+6196822 end end end end end else if J&lt;4129754-(-742447)then if J&lt;4654260-74472 then if J&lt;-692705+4828900 then if J&lt;4550245-508813 then if J&lt;-16535+4041825 then v=U(725461-703469)Y=U(699542-677469)u=U(-389785-(-411858))i=D D=w[v]v=U(-895353-(-917276))J=D[v]v=A()X[v]=J D=w[Y]Y=U(-499008+521120)J=D[Y]l=w[u]h=l Z=J Y=J J=l and 5392427-(-572343)or 12165515-419550 else X[O]=D J=2275411-403339 end else if J&lt;-856567+4979047 then h=P(2455215-(-65908),{})t=U(214927-193000)D=U(61589+-39538)J=w[D]Y=U(-439316+461374)S=X[R[-289172+289176]]Q=w[t]v=w[Y]Y={v(h)}v=-97883-(-97885)i={p(Y)}F=i[v]t=Q(F)Q=U(16798+5218)O=S(t,Q)S={O()}D=J(p(S))S=D O=X[R[-345324+345329]]D=O J=O and 800300-(-482948)or-618795+7847117 else Y=550743+-550743 J=X[R[-576728-(-576729)]]O=Q h=-74119+74374 v=J(Y,h)S[O]=v O=nil J=4604346-(-65716)end end else if J&lt;4040796-(-344644)then if J&lt;831288+3398936 then O=nil D={}J=w[U(-528336-(-550353))]S=nil else F=X[R[-384037-(-384038)]]i=X[R[24317+-24315]]h=-896982+30483768518473 Y=U(-923868+945843)v=i(Y,h)t=F[v]Q=S[t]F=X[R[410194-410193]]Y=U(254114-232178)i=X[R[-676280+676282]]h=8076955175649-(-394192)v=i(Y,h)t=F[v]O=Q[t]v=U(169843+-147626)t=X[R[-333708+333709]]F=X[R[165373+-165371]]Y=27191830945684-(-922082)i=F(v,Y)Q=t[i]D=O[Q]Q=X[R[417410-417409]]t=X[R[-401917-(-401919)]]v=995075+17760113193291 i=U(-602576+624736)F=t(i,v)i=10002902620604-(-964725)O=Q[F]F=U(-110391+132514)J=D[O]O=X[R[47431-47430]]Q=X[R[382771-382769]]t=Q(F,i)D=O[t]O=X[R[-1026083+1026086]]J[D]=O J=12572839-(-409698)end else if J&lt;4617927-60928 then F=V(F)r=nil h=V(h)Q=V(Q)k=V(k)Q=nil Z=V(Z)l=nil a=nil i=nil l={}O=V(O)Y=nil i=U(-685164+707156)Z=A()u=nil t=V(t)v=V(v)J=11597992-144201 O=nil h=U(-29289+51379)t=A()X[t]=O O=A()X[O]=Q Y=U(636073-614000)F=w[i]i=U(-372332+394458)v=U(941953-919961)Q=F[i]F=A()X[F]=Q i=w[v]v=U(-183944+205867)Q=i[v]v=w[Y]k=-121424+121680 Y=U(514940-492982)i=v[Y]Y=w[h]h=U(-648502-(-670508))v=Y[h]M=k h=A()Y=1044769+-1044769 u=A()k=-457953-(-457954)X[h]=Y Y=-768760+768762 X[Z]=Y q=k Y={}r=-694798-(-694799)a={}X[u]=l l=-284372-(-284372)k=-867938-(-867938)z=q&lt;k k=r-q else Q=X[R[-232929+232930]]i=U(-589398+611468)t=X[R[-316107+316109]]v=878383+31783114953377 F=t(i,v)O=Q[F]D=S[O]J=not D J=J and 619974+15705909 or-678536+3428069 end end end else if J&lt;4976796-244788 then if J&lt;-147026+4775934 then if J&lt;4768902-145210 then J=O i=683644+11554469045896 J[D]=S D=X[R[88755+-88751]]F=U(352307+-330173)h=22743145071788-(-533682)O=X[R[364617-364615]]Q=X[R[-261233-(-261236)]]t=Q(F,i)i=-388784+20575347545117 S=O[t]J=D[S]O=X[R[383902-383900]]Y=U(984685+-962578)Q=X[R[422042-422039]]D=U(-126627-(-148684))F=U(-450320+472332)t=Q(F,i)S=O[t]Q=X[R[-358506-(-358510)]]F=X[R[793356+-793354]]i=X[R[-408906+408909]]v=i(Y,h)D=J[D]t=F[v]O=Q[t]D=D(J,S,O)J=w[U(-471574-(-493710))]D={}else i=U(947407+-925304)D=X[R[-79317-(-79320)]]Q=X[R[-166340-(-166341)]]t=X[R[-797181-(-797183)]]v=17715110183798-811837 F=t(i,v)O=Q[F]J=D[O]t=X[R[515889-515888]]v=U(84128+-61985)F=X[R[156196+-156194]]Y=-460516+6686208578317 i=F(v,Y)Q=t[i]O=S[Q]v=33769628698080-(-178061)D=J(O)Q=X[R[765514-765513]]O=D i=U(170538+-148524)t=X[R[608782+-608780]]F=t(i,v)D=Q[F]J=O[D]J=J and 17217444-594926 or 12693177-(-708790)end else if J&lt;193122+4457118 then J=-99682-(-361931)else Q=Q+F v=not i O=Q&lt;=t O=v and O v=Q&gt;=t v=i and v O=v or O v=3791365-(-333334)J=O and v O=9564591-823561 J=J or O end end else if J&lt;227435+4556388 then if J&lt;84592+4688755 then T=X[O]f=T J=T and 14179522-58249 or 2212573-(-677189)else F=X[R[619572-619571]]Y=U(594047-571897)i=X[R[-497205-(-497207)]]h=-78349+21959569463806 v=i(Y,h)t=F[v]Q=S[t]F=X[R[952344-952343]]Y=U(636144+-614050)h=19473000073415-(-957092)i=X[R[648902-648900]]v=i(Y,h)t=F[v]v=U(-616024-(-637974))D=Q[t]t=X[R[-185479-(-185480)]]F=X[R[-531942+531944]]Y=-487080+8188016541068 i=F(v,Y)Q=t[i]J=D[Q]Q=X[R[953549+-953548]]t=X[R[1019643-1019641]]i=U(838828-816805)v=7537065135970-819629 F=t(i,v)D=Q[F]v=U(145235-123241)t=X[R[-769825-(-769826)]]F=X[R[-1039576-(-1039578)]]Y=10563965165651-412956 i=F(v,Y)Q=t[i]J[D]=Q J=15522663-511163 end else if J&lt;415105+4406593 then h,Z=v(Y,h)J=h and 16217604-(-284940)or 8571081-(-1003011)else r=k I=r a[r]=I r=nil J=-717444+12171235 end end end end else if J&lt;-748234+6794201 then if J&lt;6247344-769440 then if J&lt;415915+4538726 then if J&lt;5678968-747433 then J=373689+2427907 else O=J Q=X[R[-292217+292222]]u=U(613229-591247)Y=U(471725+-449521)a=-926206+1942882706822 v=w[Y]h=X[R[-904415+904417]]Z=X[R[1030369+-1030366]]t=U(-519376+541268)l=Z(u,a)Y=h[l]i=v[Y]Y=X[R[-434550-(-434552)]]l=U(-355162-(-377261))h=X[R[403199+-403196]]u=672438+8554384985305 Z=h(l,u)v=Y[Z]t=Q[t]F=i[v]t=t(Q,F)D=t J=t and-754492+6983896 or 408220+7734138 end else if J&lt;73862+5066551 then Q,i=t(O,Q)J=Q and-424074+12135254 or 362312+856505 else Q=X[R[-380954-(-380963)]]O=338818-338817 t=Q J={}S=J J=5436548-766486 Q=-449845-(-449846)F=Q Q=-428464+428464 i=F&lt;Q Q=O-F end end else if J&lt;809231+5150167 then if J&lt;6682542-909461 then D=U(-760347-(-782533))S=U(-606211-(-628175))J=w[D]D=w[S]S=U(781473+-759509)w[S]=J S=U(-474757+496943)w[S]=D S=X[R[1014547-1014546]]J=9620409-(-181944)O=S()else a=not u Z=Z+l Y=Z&lt;=h Y=a and Y a=Z&gt;=h a=u and a Y=a or Y a=12422064-(-731712)J=Y and a Y=289591+9178244 J=J or Y end else if J&lt;494179+5471184 then a=U(-265617-(-287690))u=w[a]a=U(-619368+641340)J=11937734-191769 l=u[a]h=l else O=X[R[-1009256+1009259]]Q=831495+-831494 S=O~=Q J=S and 10152036-212994 or 765783+12108778 end end end else if J&lt;5780417-(-497230)then if J&lt;5186030-(-992406)then if J&lt;577388+5549598 then l=8389918180343-(-805707)t=U(-1036778+1058854)J=X[R[-60414+60418]]S=X[R[-554679-(-554681)]]F=-990967+25797326818787 Z=-920104+20004307922571 O=X[R[-786981+786984]]Q=O(t,F)v=U(-520101+542106)Y=934175973866-909367 D=S[Q]r=24635990651936-575312 O=X[R[646649-646644]]t=X[R[-673720-(-673722)]]F=X[R[870615+-870612]]i=F(v,Y)Y=826599+34391971848616 Q=t[i]v=U(448230-426144)S=O[Q]J[D]=S h=1925948654504-639016 O=X[R[468849-468845]]t=X[R[-785492-(-785494)]]F=X[R[-411420-(-411423)]]i=F(v,Y)Q=t[i]S=O[Q]i=U(794956+-772938)Q=X[R[412679+-412677]]v=19467964590609-640680 t=X[R[-60008-(-60011)]]Y=U(-285153-(-307292))F=t(i,v)O=Q[F]D=S[O]O=X[R[-344383+344385]]Q=X[R[148513+-148510]]F=U(933008+-910970)i=-813132+7939862689469 t=Q(F,i)S=O[t]t=U(-333125+355166)J=D[S]S=X[R[245344+-245342]]O=X[R[779615+-779612]]F=510479+22460718161612 Q=O(t,F)D=S[Q]S=false J[D]=S Q=X[R[412860-412856]]F=X[R[379434+-379432]]i=X[R[484202+-484199]]v=i(Y,h)t=F[v]v=U(299061+-276933)O=Q[t]t=X[R[-597022+597024]]Y=250601+27257582296747 F=X[R[-823281+823284]]i=F(v,Y)Q=t[i]i=U(189742+-167837)S=O[Q]v=14818867325773-(-126887)Q=X[R[-993668+993670]]h=U(18021+3976)t=X[R[894229+-894226]]F=t(i,v)O=Q[F]F=U(448793+-426885)i=615723+25661802105218 D=S[O]O=X[R[362586+-362584]]Q=X[R[-955524+955527]]t=Q(F,i)F=-357474+15996326302074 S=O[t]J=D[S]S=X[R[-662249+662251]]O=X[R[133970-133967]]t=U(-616715-(-638630))Q=O(t,F)O=J D=S[Q]t=X[R[25377+-25373]]i=X[R[-627587-(-627589)]]v=X[R[-955602+955605]]Y=v(h,Z)F=i[Y]Q=t[F]t=U(236362+-214278)Z=U(-918895-(-941028))k=-41298+13317382846859 v=X[R[25956-25954]]a=U(513492-491355)Y=X[R[796195+-796192]]h=Y(Z,l)i=v[h]Y=X[R[-974015+974019]]t=Q[t]Z=X[R[252616+-252614]]l=X[R[-85030-(-85033)]]u=l(a,r)h=Z[u]v=Y[h]r=9158850672998-944318 Z=X[R[-391361+391363]]Y=U(373587-351585)l=X[R[-925357-(-925360)]]Y=v[Y]a=U(-198836-(-220858))u=l(a,r)h=Z[u]r=U(-609720+631608)l=X[R[-727601-(-727603)]]u=X[R[405444-405441]]a=u(r,k)Z=l[a]Y=Y(v,h,Z)F=i..Y t=t(Q,F)J=t and 332099+4285998 or 266012+11548089 S=t else f=f+d q=not M D=f&lt;=T D=q and D q=f&gt;=T q=M and q D=q or D q=8419698-(-763903)J=D and q D=562902+4208052 J=J or D end else if J&lt;6593816-400859 then O=y[223098+-223096]S=y[-744561+744562]J=X[R[682785+-682784]]Q=J J=Q[O]J=J and 4382097-(-259725)or 663753+1036232 else J=O J=not D J=J and 516077+11299646 or-9277+4924601 end end else if J&lt;921935+5937147 then if J&lt;5800735-(-809269)then Y=U(1002158-980071)F=X[R[623897-623896]]h=19265041926640-(-383258)i=X[R[-1010952+1010954]]v=i(Y,h)t=F[v]h=32578981225653-(-431757)Q=S[t]Y=U(-210520+232445)F=X[R[795751+-795750]]i=X[R[-281227+281229]]v=i(Y,h)Y=583530+480333617525 t=F[v]O=Q[t]t=X[R[99896-99895]]F=X[R[510469-510467]]v=U(-536506-(-558546))i=F(v,Y)Q=t[i]D=O[Q]v=76996458727-309444 Q=X[R[991634+-991633]]t=X[R[687087-687085]]i=U(-572701-(-594854))F=t(i,v)O=Q[F]J=D[O]i=17398916863205-308543 F=U(430551-408453)O=X[R[122315-122314]]Q=X[R[-317910-(-317912)]]t=Q(F,i)D=O[t]O=X[R[63869-63865]]J[D]=O J=-1038197+14020734 else Q=X[R[694359+-694355]]Z=886126784114-(-54058)h=U(-556854+578950)i=X[R[878390-878388]]t=U(936549+-914549)v=X[R[756514+-756511]]t=Q[t]Y=v(h,Z)F=i[Y]t=t(Q,F)O=not t D=O J=6440517-(-737257)end else if J&lt;-741211+7714656 then J=x D=C J=218424+3820142 else J=-464483+4986437 end end end end end end else if J&lt;751741+10972909 then if J&lt;8892092-(-696448)then if J&lt;7830716-(-935097)then if J&lt;8084957-234316 then if J&lt;379340+6807821 then if J&lt;710368+6447889 then h=A()Z=194271-194268 d=U(177472+-155545)l=1011505+-1011440 X[h]=D J=X[v]D=J(Z,l)J=876244+-876244 Z=A()X[Z]=D a=U(674573+-652515)r=c(2452072-438920,{})l=J J=393587+-393587 D=w[a]a={D(r)}D=-764982-(-764984)u=J J={p(a)}a=J J=a[D]D=U(478895+-456844)r=J J=w[D]k=X[Q]T=w[d]d=T(r)T=U(81747-59731)f=k(d,T)k={f()}D=J(p(k))k=A()X[k]=D J=6762047-629692 D=-460904+460905 f=X[Z]T=f f=-673510-(-673511)d=f f=713770-713770 M=d&lt;f f=D-d else J=D and 5246466-307615 or 204877+2596719 end else if J&lt;95376+7504719 then X[R[276556-276551]]=D S=nil J=-913708+1585942 else v=-353237+969021400472 i=U(-916524+938612)S=X[R[-930520+930521]]Q=X[R[-306295-(-306297)]]t=X[R[329020-329017]]F=t(i,v)O=Q[F]D=S[O]i=27514371868062-(-76910)O=X[R[-490774-(-490776)]]F=U(-318543+340672)Q=X[R[-191539-(-191542)]]t=Q(F,i)F=-668965+29840234720108 S=O[t]t=U(-969190+991292)J=D[S]S=X[R[-678478+678480]]O=X[R[-252418+252421]]Q=O(t,F)D=S[Q]S=false J[D]=S D={}J=w[U(203275+-181267)]end end else if J&lt;636562+8010641 then if J&lt;-378605+8595994 then Y=U(-562769+584973)Q=X[R[424329-424324]]u=U(49426-27359)a=223013718245-166014 J=-903012+7132416 v=w[Y]h=X[R[-902819+902821]]Z=X[R[-414882+414885]]l=Z(u,a)Y=h[l]i=v[Y]Y=X[R[-762859+762861]]t=U(-442528+464420)h=X[R[109838+-109835]]t=Q[t]l=U(-350648+372831)u=28849416146805-629499 Z=h(l,u)v=Y[Z]F=i[v]t=t(Q,F)D=t else k=#a M=-959991-(-959991)r=k==M J=r and 1365443-(-62001)or 811575+15411515 end else if J&lt;8988010-252158 then k=#a M=784632+-784632 J=15284002-(-939088)r=k==M else J=X[R[1018573-1018563]]O=X[R[-958987-(-958998)]]S[J]=O J=X[R[-193059+193071]]O={J(S)}D={p(O)}J=w[U(-924139-(-946281))]end end end else if J&lt;9412536-183795 then if J&lt;171527+8904669 then if J&lt;212523+8763799 then D={}J=true X[R[-843601-(-843602)]]=J J=w[U(-967021+989132)]else J=D and 271568+3828972 or 703745+-31511 end else if J&lt;9105548-(-90131)then q=A()z=U(-715782-(-737774))I=848645-848545 e=-252454+252709 X[q]=f D=w[z]z=U(-628915-(-650838))J=D[z]z=885236-885235 D=J(z,I)z=A()X[z]=D I=72770-72770 J=X[v]B=-323025+323025 K=33737-33736 H=840219-840217 D=J(I,e)I=A()X[I]=D e=-309356+309357 J=X[v]G=X[z]D=J(e,G)e=A()X[e]=D D=X[v]G=D(K,H)D=-809432+809433 J=G==D g=U(-294471+316398)G=A()X[G]=J j=-937219-(-947219)x=w[g]J=U(148437+-126435)J=r[J]b=X[v]H=U(-852521-(-874599))L={b(B,j)}D=U(-158640-(-180656))g=x(p(L))x=U(320991-298913)C=g..x K=H..C J=J(r,D,K)K=A()X[K]=J H=U(-356304+378362)C=m(439828+13918533,{v,q;Z,Q,O,k;G,K;z,e,I;h})D=w[H]H={D(C)}J={p(H)}H=J J=X[G]J=J and-721428+1302048 or 432073-(-639837)else J=true J=J and-52844+12830112 or-247452+12412940 end end else if J&lt;9322578-(-163599)then if J&lt;8522833-(-907686)then M=U(787490+-765304)J=w[M]M=U(885549+-863585)w[M]=J J=16279280-(-417655)else i=nil v=nil t=nil J=364573-102324 end else if J&lt;-326093+9882318 then O=X[R[-380836+380838]]Q=X[R[-302877-(-302880)]]S=O==Q J=-283085+9297469 D=S else u=U(-943598+965811)T=27074407951244-64077 v=X[R[422349-422345]]h=X[R[-128626+128627]]a=15256217421565-912189 Z=X[R[-656373-(-656375)]]l=Z(u,a)Y=h[l]i=v[Y]u=U(501352-479207)Y=X[S]v=i(Y)d=244863+24126868877155 v=X[R[-429289-(-429293)]]h=X[R[-76770+76771]]a=29511924738262-553768 Z=X[R[707345+-707343]]l=Z(u,a)Y=h[l]a=17723819531042-(-951579)f=-286713+34521259105988 I=576948+26730379748075 u=U(979582+-957361)k=U(531219-509246)i=v[Y]Y=X[S]v=i(Y)v=X[R[886888-886883]]h=X[R[875289-875288]]Z=X[R[-950872-(-950874)]]l=Z(u,a)Y=h[l]i=v[Y]Y=X[S]v=i(Y)Z=X[S]u=X[R[251583-251582]]a=X[R[277387-277385]]r=a(k,f)l=u[r]k=26906533330441-(-406248)r=U(-709452-(-731365))h=Z[l]l=X[R[-94146-(-94147)]]u=X[R[-98804-(-98806)]]a=u(r,k)Z=l[a]r=18204153851780-(-831896)Y=h[Z]Z=X[R[855857+-855856]]a=U(433299+-411352)f=U(-347349+369527)l=X[R[-169781-(-169783)]]u=l(a,r)h=Z[u]v=Y[h]a=34598254145683-(-839260)h=X[R[-265496-(-265497)]]Z=X[R[-32131-(-32133)]]u=U(-594714+616833)l=Z(u,a)Y=h[l]l=U(-250994+273166)i=v[Y]u=966888+9121077235631 Y=X[R[822745-822744]]h=X[R[-300499-(-300501)]]Z=h(l,u)h=J v=Y[Z]l=X[S]a=X[R[-478152-(-478153)]]r=X[R[552046+-552044]]k=r(f,T)u=a[k]T=U(-886635+908669)Z=l[u]r=X[R[761760-761759]]k=X[R[642310+-642308]]z=494472910399-513369 f=k(T,d)a=r[f]k=X[S]q=U(979214+-957150)l=U(1029380-1007296)T=X[R[901159+-901158]]d=X[R[225628+-225626]]M=d(q,z)f=T[M]z=-861878+14077672669265 q=U(532764+-510681)r=k[f]T=X[R[-959478-(-959479)]]d=X[R[640162-640160]]l=Z[l]M=d(q,z)z=U(442778+-420890)f=T[M]k=U(-16961-(-38963))k=r[k]d=X[R[-576584+576585]]M=X[R[-559223+559225]]q=M(z,I)T=d[q]k=k(r,f,T)u=a..k l=l(Z,u)Y=l J=l and 532324+2570201 or 11033526-499123 end end end end else if J&lt;9895588-(-935416)then if J&lt;10816554-551536 then if J&lt;10346200-525641 then if J&lt;-1036001+10789049 then D=-981637+981652 J=O&gt;D J=J and 5013701-240035 or-1011177+16022677 else J=true J=J and 331145+5377814 or-253526-(-519247)end else if J&lt;734905+9292797 then Q=911312+-911280 h=-370052-(-370054)O=X[R[-77041-(-77044)]]l=-306490-(-306503)S=O%Q t=X[R[-857921-(-857925)]]v=X[R[-393683-(-393685)]]r=X[R[-229337+229340]]a=r-S r=-63796+63828 u=a/r Z=l-u Y=h^Z i=v/Y h=-969692+969948 F=t(i)t=4293975841-(-991455)Q=F%t F=383761-383759 t=F^S O=Q/t Y=-717438+717439 t=X[R[-25214+25218]]v=O%Y l=964093-963837 Y=4295038790-71494 i=v*Y F=t(i)t=X[R[761942-761938]]i=t(O)J=-213219+14152209 Q=F+i F=-249264-(-314800)O=nil t=Q%F v=-829956-(-895492)i=Q-t F=i/v v=828113+-827857 i=t%v Y=t-i v=Y/h h=788106-787850 Y=F%h t=nil S=nil Z=F-Y h=Z/l Q=nil Z={i;v;Y,h}X[R[-811605+811606]]=Z Y=nil v=nil h=nil i=nil F=nil else F=X[R[-74424+74425]]h=25066410893646-(-298058)Y=U(861298-839147)i=X[R[389601+-389599]]v=i(Y,h)Y=U(-742742-(-764872))t=F[v]Q=S[t]h=-916879+32472337954976 F=X[R[-967500-(-967501)]]i=X[R[931800-931798]]v=i(Y,h)Y=1017638+6888183121249 t=F[v]D=Q[t]t=X[R[-781056+781057]]v=U(-539146+561238)F=X[R[-512184-(-512186)]]i=F(v,Y)v=467247+33306492672870 Q=t[i]J=D[Q]Q=X[R[986453-986452]]t=X[R[106371-106369]]i=U(-322565-(-344555))F=t(i,v)D=Q[F]Q=false J[D]=Q J=4815491-618816 end end else if J&lt;11427862-844228 then if J&lt;821058+9651690 then S=y[944178+-944177]h=29807319065234-(-218022)F=X[R[-718044-(-718045)]]i=X[R[-416840+416842]]Y=U(677852+-655843)v=i(Y,h)h=4282368497118-(-471532)t=F[v]Q=S[t]F=X[R[684433+-684432]]i=X[R[-36583-(-36585)]]Y=U(762141-739986)v=i(Y,h)t=F[v]O=Q[t]t=X[R[-251759-(-251760)]]v=U(-771568-(-793457))F=X[R[1016745+-1016743]]Y=22705579772601-(-171668)i=F(v,Y)Q=t[i]D=O[Q]i=U(245137-223141)Q=X[R[1042221-1042220]]v=9365788119415-(-409490)t=X[R[25421+-25419]]F=t(i,v)O=Q[F]F=U(-867721-(-889924))J=D[O]O=X[R[-361901+361902]]Q=X[R[25922+-25920]]i=19225359200872-135024 Y=526946+171066619373 t=Q(F,i)v=U(315291-293351)D=O[t]t=X[R[948139-948138]]F=X[R[962141+-962139]]i=F(v,Y)Q=t[i]O=S[Q]J[D]=O F=X[R[-882427+882428]]h=13946763598430-(-687872)Y=U(737436-715415)i=X[R[-587366+587368]]v=i(Y,h)t=F[v]h=24458652283819-(-227538)Q=S[t]F=X[R[-397816+397817]]i=X[R[142268-142266]]Y=U(-748127+770068)v=i(Y,h)t=F[v]v=U(412127-390003)O=Q[t]t=X[R[-30630+30631]]Y=-269328+33180410255466 F=X[R[673754-673752]]i=F(v,Y)Q=t[i]D=O[Q]Q=X[R[-916063+916064]]t=X[R[632905+-632903]]i=U(-265717+287763)v=-282804+18317795193349 F=t(i,v)h=23793363626335-(-98792)O=Q[F]J=D[O]O=X[R[508762+-508761]]F=U(-622489-(-644465))i=-1038444+31276168089936 Y=U(592185-570070)Q=X[R[914854+-914852]]t=Q(F,i)D=O[t]F=X[R[650970-650969]]i=X[R[65216-65214]]v=i(Y,h)t=F[v]Q=S[t]O=not Q J[D]=O i=282026+19251969709402 O=X[R[-311039+311040]]F=U(-884054-(-906139))Q=X[R[-468952+468954]]t=Q(F,i)D=O[t]J=S[D]J=J and 370062+3879951 or 976583+5382006 else l=X[R[-1048193-(-1048194)]]u=X[R[-262887-(-262889)]]r=U(-325762-(-347650))k=-86204+3422336407285 J=241900+2860625 a=u(r,k)Z=l[a]Y=Z end else if J&lt;10008587-(-713679)then O=X[R[643782+-643780]]Q=-662825+662934 S=O*Q O=2330499596941-(-917936)D=S+O S=431528+35184371657304 J=D%S X[R[466420-466418]]=J S=X[R[-816550-(-816553)]]J=12732221-(-142340)O=178178+-178177 D=S~=O else t=X[S]i=X[R[672238+-672237]]J=3455813-(-217552)v=X[R[117557-117555]]h=U(794858+-772790)Z=20360619620671-103478 Y=v(h,Z)F=i[Y]Q=t[F]h=11034969348965-(-342189)Z=3996787728866-973469 Y=U(120487+-98462)F=X[R[848616-848615]]i=X[R[-276964+276966]]v=i(Y,h)h=U(-163558+185765)t=F[v]i=X[R[-849653-(-849654)]]v=X[R[-228299-(-228301)]]Y=v(h,Z)F=i[Y]Q[t]..=F end end end else if J&lt;-468029+11820903 then if J&lt;10419416-(-684752)then if J&lt;11228696-283394 then d=U(-689343-(-711270))q=U(567319-545355)J=w[d]M=w[q]d=J(M)J=U(659685-637499)w[J]=d J=17305665-608730 else D=U(990618-968658)S=U(-341201-(-363400))J=w[D]D=J(S)D={}J=w[U(351340-329353)]end else if J&lt;-934109+12117522 then O=X[R[606345+-606341]]t=X[R[-51884-(-51886)]]Y=9668247835734-(-703808)v=U(-355924+378044)F=X[R[148942-148939]]i=F(v,Y)Q=t[i]v=18252848577100-(-976615)S=O[Q]Q=X[R[-1047086+1047088]]i=U(408662-386703)t=X[R[-361671+361674]]F=t(i,v)O=Q[F]D=S[O]O=X[R[508599-508597]]v=14742840325733-(-1008748)i=657531+18891393260001 Q=X[R[-613709-(-613712)]]Y=4580974919348-(-838049)F=U(526038+-503856)t=Q(F,i)F=-302044+35146806729674 i=U(562050-539894)S=O[t]J=D[S]S=X[R[504429-504427]]O=X[R[455835-455832]]t=U(-587607+609591)Q=O(t,F)D=S[Q]S=false J[D]=S S=X[R[-50072+50076]]Q=X[R[-984639+984641]]t=X[R[-373921-(-373924)]]F=t(i,v)O=Q[F]D=S[O]F=U(24737+-2692)O=X[R[304957+-304955]]Q=X[R[765728-765725]]i=14942989868159-(-229039)t=Q(F,i)v=U(-82807+104785)F=12649858997592-(-309674)S=O[t]J=D[S]S=X[R[1022318+-1022316]]t=U(706269-684176)O=X[R[-446212+446215]]Q=O(t,F)D=S[Q]S=true J[D]=S O=X[R[605761+-605757]]t=X[R[412908+-412906]]F=X[R[469509+-469506]]i=F(v,Y)Q=t[i]S=O[Q]i=U(-480378+502437)Q=X[R[-939815+939817]]t=X[R[815919+-815916]]v=5233293244922-(-184202)F=t(i,v)O=Q[F]D=S[O]i=33009343404959-565140 F=U(793558+-771410)O=X[R[371799-371797]]Q=X[R[-755380+755383]]t=Q(F,i)S=O[t]J=D[S]t=U(150262+-128078)F=-56352+4371030680595 S=X[R[-460975+460977]]O=X[R[-56823-(-56826)]]Q=O(t,F)D=S[Q]F=U(413904+-391739)O=X[R[560777+-560775]]Q=X[R[704648-704645]]i=6817513620548-(-919586)t=Q(F,i)S=O[t]J[D]=S J=w[U(-707571+729747)]D={}else D=X[S]i=U(-859802-(-881783))v=-679172+31086339790223 Q=X[R[-156555-(-156556)]]t=X[R[861524-861522]]F=t(i,v)O=Q[F]F=U(518121-496016)J=D[O]O=X[R[-289860+289861]]i=13038930912639-(-881208)Q=X[R[-489915+489917]]t=Q(F,i)i=U(-536404-(-558360))D=O[t]Q=X[R[259569-259568]]v=755741+20863363177942 t=X[R[805657+-805655]]F=t(i,v)O=Q[F]J[D]..=O J=663277+3010088 end end else if J&lt;609917+11010041 then if J&lt;-136587+11693070 then k=k+q I=not z r=k&lt;=M r=I and r I=k&gt;=M I=z and I r=I or r I=-363163+5189176 J=r and I r=8525549-(-204088)J=J or r else v=7257964645788-311401 i=U(-614349+636316)S=X[R[-836862+836863]]Q=X[R[501433+-501431]]t=X[R[-63366-(-63369)]]F=t(i,v)O=Q[F]D=S[O]S=D()J=not S J=J and 12122419-976883 or 5388790-(-737760)end else if J&lt;11025404-(-662226)then J=true Q=U(550565+-528475)O=A()S=y X[O]=J D=w[Q]Q=U(724485-702561)J=D[Q]Q=A()F=A()t=A()X[Q]=J v=U(274190+-252132)Y=P(897982+7873191,{F})J=m(10471735-(-505729),{})X[t]=J J=false X[F]=J i=w[v]v=i(Y)J=v and 14065572-765156 or 595687+3429577 D=v else F=Q J=A()X[J]=i T=756849+7005686038605 l=X[S]i=J f=U(647768-625706)a=X[R[-589712+589714]]r=X[R[168194-168191]]k=r(f,T)u=a[k]k=U(88378+-66348)Z=l[u]f=23253118131433-29341 u=X[R[1014000-1013998]]a=X[R[778376+-778373]]r=a(k,f)T=U(201221+-179184)l=u[r]h=Z[l]r=U(-49009+70970)k=-747443+17642356901834 l=X[R[288349+-288347]]u=X[R[835510-835507]]a=u(r,k)Z=l[a]Y=h[Z]a=U(-76689-(-98807))r=783674+19317719887337 Z=X[R[526165+-526163]]l=X[R[1011082-1011079]]u=l(a,r)h=Z[u]u=U(-660235-(-682405))r=U(-755474+777385)v=Y[h]h=X[R[684212+-684210]]Z=X[R[-16391-(-16394)]]a=-315096+27542521200881 l=Z(u,a)Y=h[l]J=v[Y]v=U(496236-474046)v=J[v]v=v(J)Y=X[R[-736429+736431]]h=X[R[-607424-(-607427)]]k=893539+5185438656267 u=509240+23735854196212 l=U(289946+-268026)Z=h(l,u)J=Y[Z]Y=true v[J]=Y Y=X[R[-209061-(-209063)]]u=23923114997514-(-488570)h=X[R[892416-892413]]l=U(428308+-406382)Z=h(l,u)J=Y[Z]h=X[i]l=X[R[-527516-(-527518)]]u=X[R[-554456+554459]]a=u(r,k)Z=l[a]Y=h[Z]u=518645+17912487851680 v[J]=Y Y=X[R[235087+-235085]]h=X[R[-9687-(-9690)]]l=U(-779435-(-801616))Z=h(l,u)J=Y[Z]d=506035+8639663625988 u=X[S]r=X[R[-363609+363611]]k=X[R[-989909+989912]]f=k(T,d)T=-913273+24338915744702 a=r[f]l=u[a]f=U(-951257-(-973466))a=X[R[240219-240217]]r=X[R[32439-32436]]k=r(f,T)f=4927464324087-504577 u=a[k]Z=l[u]k=U(-502220-(-524300))u=X[R[770116+-770114]]a=X[R[-806207+806210]]r=a(k,f)l=u[r]h=Z[l]l=X[R[-651705+651707]]u=X[R[-81039-(-81042)]]k=-237070+23623279315206 r=U(545171-523063)a=u(r,k)F=nil Z=l[a]Y=h[Z]u=U(-985081+1007156)v[J]=Y h=X[R[-821324-(-821326)]]a=2395619948325-(-52534)Z=X[R[224239-224236]]l=Z(u,a)Y=h[l]h=s(-262703+11836790,{R[-790641-(-790645)];R[-645945-(-645947)];R[471742-471739],S;i})J=v[Y]v=nil Y=U(604743-582519)i=V(i)Y=J[Y]Y=Y(J,h)J=-242761+5325744 end end end end end else if J&lt;324918+13770151 then if J&lt;14110734-1012469 then if J&lt;12750603-529106 then if J&lt;10835581-(-978589)then if J&lt;12780082-1006447 then D=h J=Z J=h and 7880354-774941 or 415491+12563366 else t=X[R[-835904+835906]]v=U(602125+-580237)F=X[R[286251+-286248]]Y=49125+13074897016803 i=F(v,Y)Q=t[i]J=-89432+4707529 S=Q end else if J&lt;12815159-991389 then h=U(810112+-788208)t=X[R[-813966+813967]]i=X[R[-821066+821068]]Z=-829834+26758541171254 v=X[R[-245059-(-245062)]]Y=v(h,Z)h=34821268609665-72491 F=i[Y]Y=U(-485183+507342)Q=t[F]F=X[R[6848+-6846]]i=X[R[905719-905716]]v=i(Y,h)t=F[v]O=Q[t]t=X[R[-799352+799354]]F=X[R[-759657-(-759660)]]v=U(-320647+342834)Y=2786121138458-(-476151)i=F(v,Y)Q=t[i]i=U(-283017+304974)v=18648576017455-(-122300)D=O[Q]Q=X[R[-929773+929775]]t=X[R[-369661-(-369664)]]F=t(i,v)i=23763765209724-(-344253)O=Q[F]J=D[O]v=-894966+3280594906605 O=X[R[-240613-(-240615)]]Q=X[R[984067-984064]]F=U(213488-191366)t=Q(F,i)D=O[t]O=X[R[-696703+696707]]J[D]=O D=X[R[651884-651878]]i=U(301032+-279103)Q=X[R[-391744-(-391746)]]t=X[R[606973-606970]]F=t(i,v)O=Q[F]J=D[O]O=X[R[-178716-(-178717)]]D=J(O)J=977413+3937911 else D={}J=w[U(696753-674628)]end end else if J&lt;13814680-850777 then if J&lt;-476492+13344509 then J=X[v]M=-885823-(-885829)d=-154426-(-154427)T=J(d,M)J=U(-438189-(-460375))w[J]=T M=U(-242918-(-265104))d=w[M]M=724487+-724485 J=d&gt;M J=J and 11724710-787012 or 988321+8392148 else J=5173099-(-863137)O=X[R[-92181-(-92184)]]Q=-899288+899300 S=O*Q O=936314-936057 D=S%O X[R[-785698-(-785701)]]=D end else if J&lt;11990043-(-990906)then Z=U(-706932-(-728904))h=w[Z]J=-691734+7797147 D=h else D={}S=nil J=w[U(-616011-(-638090))]end end end else if J&lt;286133+13107103 then if J&lt;13931710-685024 then if J&lt;13585805-396606 then d=U(-840345-(-862435))T=w[d]Y=Z d=U(1065502-1043367)f=T[d]T=f(S,Y)f=X[R[837353-837347]]d=f()k=T+d r=k+i k=-825376-(-825632)J=5610971-(-311494)a=r%k Y=nil d=-1003661+1003662 k=Q[O]i=a T=i+d f=t[T]r=k..f Q[O]=r else Y=U(-677582-(-699496))u=33327668782988-994029 Q=X[R[-457057+457058]]h=952939+23369692078103 t=X[R[122176-122174]]i=U(-588015+610142)v=5351368478264-(-555907)F=t(i,v)l=74456+17315904797863 D=Q[F]J=S[D]r=-377614+15840493051870 F=X[R[995839-995838]]i=X[R[-371619+371621]]v=i(Y,h)t=F[v]v=X[R[470893-470892]]Y=X[R[722456-722454]]Z=U(-310235-(-332279))h=Y(Z,l)i=v[h]l=U(-576408+598461)F=S[i]Y=X[R[-1041262+1041263]]h=X[R[334670+-334668]]Z=h(l,u)u=U(-993041-(-1014929))i=U(531696-509694)v=Y[Z]a=229270+32133182896861 i=F[i]h=X[R[-867841-(-867842)]]Z=X[R[-532131+532133]]l=Z(u,a)Y=h[l]i=i(F,v,Y)Q=t..i Z=X[R[-533177+533178]]l=X[R[92812-92810]]a=U(746558+-724426)u=l(a,r)r=20102865373330-287745 a=U(974678+-952511)h=Z[u]Y=S[h]Z=X[R[896790+-896789]]l=X[R[-646218+646220]]u=l(a,r)h=Z[u]v=Y[h]h=X[R[724456+-724455]]Z=X[R[-507365+507367]]u=U(618230+-596194)a=16421811309012-(-742411)l=Z(u,a)Y=h[l]u=-719177+24028509463806 l=U(660394-638171)i=v[Y]Y=X[R[149253-149252]]h=X[R[-928505+928507]]Z=h(l,u)v=Y[Z]F=i[v]Z=U(97300+-75127)l=27639929576108-174182 D=U(-659560-(-681617))v=X[R[816455+-816454]]Y=X[R[315622-315620]]D=J[D]h=Y(Z,l)i=v[h]t=F[i]v=-737622+26985777541740 i=U(796919+-774830)D=D(J,Q,t)Q=X[R[-519459+519460]]t=X[R[703297+-703295]]F=t(i,v)D=Q[F]J=O[D]J=J and 2281946-176410 or 10745225-646558 end else if J&lt;12546381-(-725979)then J=W(767410+2040533,{t})T={J()}D={p(T)}J=w[U(819951+-797885)]else i=X[F]D=i J=4141218-115954 end end else if J&lt;-527220+14125053 then if J&lt;14008125-545501 then h=U(-476814+499015)i=X[R[812598+-812597]]Z=30537725925365-139369 v=X[R[689043+-689041]]Y=v(h,Z)F=i[Y]t=S[F]h=U(-89496-(-111559))i=X[R[-93605+93606]]Z=8240082910026-961613 v=X[R[-472739-(-472741)]]Y=v(h,Z)h=12650079749127-929029 F=i[Y]Y=U(1041909+-1019707)Q=t[F]F=X[R[-963876-(-963877)]]i=X[R[-769414-(-769416)]]v=i(Y,h)t=F[v]D=Q[t]Y=9524646500791-215140 t=X[R[498407-498406]]v=U(858901+-836795)F=X[R[-228963+228965]]i=F(v,Y)Q=t[i]J=D[Q]Y=10923696356135-567113 v=-1012927+17639637112021 Q=X[R[42132+-42131]]i=U(-236200-(-258102))t=X[R[-455434-(-455436)]]F=t(i,v)D=Q[F]v=U(-658270-(-680186))t=X[R[512058-512057]]F=X[R[-1000342+1000344]]i=F(v,Y)Q=t[i]J[D]=Q J=3434+13236332 else Y=U(1062004-1040025)F=X[R[-675971+675972]]h=681650+29617350971181 i=X[R[879716-879714]]v=i(Y,h)t=F[v]Q=S[t]Y=U(-697784-(-719980))h=-228625+27508245278490 F=X[R[854728+-854727]]i=X[R[-132143+132145]]v=i(Y,h)t=F[v]D=Q[t]Y=-312040+10789492627080 t=X[R[5867-5866]]F=X[R[481952-481950]]v=U(61781-39790)i=F(v,Y)Q=t[i]J=D[Q]i=U(530480+-508264)Q=X[R[920481-920480]]t=X[R[814027+-814025]]v=7039326779263-(-922958)F=t(i,v)v=U(-350758+372977)D=Q[F]t=X[R[-380231+380232]]Y=-489770+30154426920963 F=X[R[-622641-(-622643)]]i=F(v,Y)Q=t[i]J[D]=Q J=13601306-(-675376)end else if J&lt;-822263+14691232 then O=U(920123-898204)D=w[O]O=D()t=X[R[-747613-(-747614)]]F=X[R[810760-810758]]v=U(364680-342771)Y=-98077+34439989099970 h=29487114505637-38914 i=F(v,Y)Q=t[i]D=S[Q]J=O-D F=X[R[203192+-203191]]O=J i=X[R[376511+-376509]]Y=U(-513514+535583)v=i(Y,h)Y=U(299177+-276980)h=30599160365058-(-407462)t=F[v]Q=S[t]F=X[R[-446311-(-446312)]]l=-277082+30953132946087 i=X[R[412422-412420]]v=i(Y,h)Y=-251320+27656115931142 t=F[v]D=Q[t]Z=U(-804044-(-826042))v=U(475139+-453030)t=X[R[-606437-(-606438)]]F=X[R[482816+-482814]]i=F(v,Y)Q=t[i]i=U(790066+-767851)J=D[Q]v=26085859188727-979076 Q=X[R[-540754+540755]]t=X[R[901257-901255]]F=t(i,v)D=Q[F]i=U(868467+-846377)F=w[i]v=X[R[-271000-(-271001)]]Y=X[R[-721373+721375]]h=Y(Z,l)i=v[h]t=F[i]v=X[R[-278468-(-278469)]]Y=X[R[884382+-884380]]l=21095256396098-469731 Z=U(-211384-(-233346))h=Y(Z,l)i=v[h]F=t(i,O)i=X[R[487624-487623]]Z=784313+16349644580356 h=U(587932-565785)v=X[R[-558835+558837]]Y=v(h,Z)t=i[Y]h=22881272978390-176696 Q=F..t J[D]=Q F=X[R[-41295-(-41296)]]Y=U(928189+-906051)i=X[R[1003882+-1003880]]v=i(Y,h)h=14171292819912-215041 t=F[v]Y=U(-179652-(-201837))Q=S[t]F=X[R[-883292+883293]]i=X[R[410639+-410637]]v=i(Y,h)t=F[v]Y=117179+9399554017118 D=Q[t]t=X[R[22686-22685]]v=U(-29454-(-51622))F=X[R[374163-374161]]i=F(v,Y)Q=t[i]J=D[Q]Y=31011095460754-623402 i=U(-728823-(-750767))v=33457989461803-387663 Q=X[R[460320-460319]]t=X[R[401724-401722]]F=t(i,v)D=Q[F]v=U(-590364+612530)t=X[R[-299158+299159]]F=X[R[-194100+194102]]i=F(v,Y)Q=t[i]J[D]=Q D=205423+-205416 J=O&gt;D J=J and 15218833-(-592370)or 87691+9565006 else Q=U(943932-921859)O=w[Q]Q=U(1025699+-1003741)J=w[U(-304000-(-325965))]S=O[Q]Q=X[R[681771-681770]]O={S(Q)}D={p(O)}end end end end else if J&lt;15204752-(-664589)then if J&lt;15435483-641327 then if J&lt;13520163-(-754263)then if J&lt;13630871-(-591061)then J=785796+2103966 T=l==u f=T else g=216707+-216706 J=782995+1130284 x=H[g]C=x end else if J&lt;-909053+15203922 then J=692984+3931784 O=nil else t=-1040100-(-1040101)F=613415-613413 O=X[R[-335780+335781]]Q=O(t,F)O=-925126+925127 S=Q==O D=S J=S and-554737+9569121 or 8936120-(-605827)end end else if J&lt;16302559-569646 then if J&lt;-470301+15749699 then D=517612+-517587 J=O&gt;D J=J and-134974+13598533 or-919638+15196320 else J=w[U(-911524+933417)]D={}end else if J&lt;1014473+14805303 then h=-11249+5730056943197 F=X[R[-433214+433215]]i=X[R[335222+-335220]]Y=U(526657-504540)v=i(Y,h)h=-648347+6392209731643 Y=U(969789+-947658)t=F[v]Q=S[t]F=X[R[869423+-869422]]i=X[R[697975+-697973]]v=i(Y,h)t=F[v]Y=1037646+27976297717141 v=U(531780-509623)D=Q[t]t=X[R[-534202+534203]]F=X[R[-702960-(-702962)]]i=F(v,Y)Q=t[i]Y=33708960607770-700618 J=D[Q]i=U(-176688-(-198586))Q=X[R[646215-646214]]v=-690437+8763490769141 t=X[R[-736742+736744]]F=t(i,v)v=U(-402998+425041)D=Q[F]t=X[R[-601179+601180]]F=X[R[-339601+339603]]i=F(v,Y)Q=t[i]J[D]=Q J=1011306+8641391 else J=8742766-(-476734)end end end else if J&lt;-358037+16940019 then if J&lt;15762654-(-474832)then if J&lt;16251808-234426 then J=true J=J and 15478971-(-388811)or 12452670-(-810315)else M=#a k=583938+-583937 r=Q(k,M)I=-752679+752680 k=i(a,r)M=X[u]J=-449183+8734012 z=k-I q=v(z)r=nil M[k]=q k=nil end else if J&lt;17429676-938968 then Q=X[R[-901096-(-901097)]]i=U(-359694+381894)t=X[R[-856214-(-856216)]]v=508237+353971371863 F=t(i,v)O=Q[F]v=-927111+28623513262487 i=U(-758917-(-781097))D=S[O]Q=X[R[-744699-(-744700)]]t=X[R[-624077-(-624079)]]F=t(i,v)i=25448158299760-(-960474)O=Q[F]v=U(-140445-(-162434))J=D[O]Y=234433+27112512003472 F=U(-297621-(-319590))O=X[R[-451105-(-451106)]]Q=X[R[-1035088+1035090]]t=Q(F,i)D=O[t]O=true J[D]=O t=X[R[47535+-47534]]F=X[R[894174-894172]]i=F(v,Y)Q=t[i]O=S[Q]v=U(-865211-(-887285))t=X[R[-560302+560303]]F=X[R[705404+-705402]]Y=791701+28260407992018 i=F(v,Y)v=28234281192807-317964 Q=t[i]D=O[Q]Q=X[R[-311950+311951]]i=U(929864-907748)t=X[R[243275+-243273]]F=t(i,v)O=Q[F]J=D[O]i=10576715403429-(-869016)O=X[R[704782-704781]]Q=X[R[930271-930269]]F=U(765374+-743197)t=Q(F,i)D=O[t]O=false J[D]=O J=w[U(792038-769898)]D={}else T=11751809723922-(-272206)J=5105907-295841 M=U(-608525-(-630687))i=h l=U(52291-30101)l=Z[l]l=l(Z)a=X[R[-689532+689533]]Z=nil r=X[R[-176584+176586]]q=7720917009468-128561 f=U(471450-449507)k=r(f,T)u=a[k]r=X[S]i=nil f=X[R[712642-712641]]T=X[R[-735291+735293]]d=T(M,q)k=f[d]a=r[k]l[u]=a l=nil end end else if J&lt;16642889-(-61634)then if J&lt;-715303+17352436 then h=U(971505-949550)Z=520557+16970725764465 i=X[R[-92976+92977]]v=X[R[57141-57139]]Y=v(h,Z)F=i[Y]t=S[F]i=X[R[-961079-(-961080)]]h=U(1039018-1017115)Z=988949506647-(-972661)v=X[R[787795-787793]]Y=v(h,Z)F=i[Y]Q=t[F]Y=U(-697430-(-719384))F=X[R[742151+-742150]]h=110149+29184417449681 i=X[R[-5233-(-5235)]]v=i(Y,h)t=F[v]v=U(630123-608019)Y=749560+9442469110068 D=Q[t]t=X[R[10962+-10961]]F=X[R[-455996-(-455998)]]i=F(v,Y)Q=t[i]v=-582821+27074809271780 J=D[Q]Q=X[R[730264+-730263]]t=X[R[707338-707336]]i=U(-479728-(-501623))F=t(i,v)Y=665130+24953177458489 D=Q[F]t=X[R[-821048-(-821049)]]v=U(170247-148312)F=X[R[-705069-(-705071)]]i=F(v,Y)Q=t[i]J[D]=Q J=-792183+14031949 else J=8847755-(-371745)end else if J&lt;16423181-(-311121)then i=U(634812-612882)v=26983959314776-987203 Y=28400498731078-(-52067)S=y[-952419-(-952420)]Q=X[R[899501-899500]]t=X[R[-757657+757659]]F=t(i,v)O=Q[F]D=S[O]t=X[R[-627043-(-627044)]]v=U(560743-538672)F=X[R[1038662-1038660]]i=F(v,Y)O=U(752154+-729932)Q=t[i]O=D[O]O=O(D,Q)J=not O J=J and 587647+15117570 or 5014470-448510 else J=Q J[D]=O i=U(-148852-(-171063))D=X[S]Q=X[R[-442650+442651]]t=X[R[-786275+786277]]v=11860979139818-(-889001)F=t(i,v)i=12867864195519-(-452009)O=Q[F]F=U(903497-881523)v=-679509+6916600326889 J=D[O]O=X[R[-752097+752098]]Q=X[R[-1008977-(-1008979)]]t=Q(F,i)D=O[t]O=false J[D]=O D=X[S]Q=X[R[-114923+114924]]t=X[R[833212+-833210]]i=U(128359+-106201)F=t(i,v)O=Q[F]J=D[O]J=J and-515861+11801228 or 418736+10309220 end end end end end end end end J=#N return p(D)end,function(w,U)local p=Q(U)local y=function(...)return J(w,{...},U,p)end return y end,function(w)local U,J=-91239+91240,w[524398-524397]while J do S[J],U=S[J]-(-426157-(-426158)),(-151914+151915)+U if-650236+650236==S[J]then S[J],X[J]=nil,nil end J=w[U]end end,576707+-576707,function(w,U)local p=Q(U)local y=function(y)return J(w,{y},U,p)end return y end return(F(11380679-(-261622),{}))(p(D))end)(getfenv and getfenv()or _ENV,unpack or table[U(-507790+529762)],newproxy,setmetatable,getmetatable,select,{...})end)(...)</ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="Folder" referent="RBX706EC8B2C3694AB89B6259ABCF319212">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<string name="Name">Prefabs</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="Frame" referent="RBX9AE17CDB07D34F6FBACD4D7197A2AEBA">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0.5</X>
						<Y>1</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>0.345098048</R>
						<G>0.427451015</G>
						<B>0.490196109</B>
					</Color3>
					<float name="BackgroundTransparency">0</float>
					<Color3 name="BorderColor3">
						<R>0</R>
						<G>0</G>
						<B>0</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="ClipsDescendants">false</bool>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Draggable">false</bool>
					<bool name="Interactable">true</bool>
					<int name="LayoutOrder">0</int>
					<string name="Name">UserBubble</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0.5</XS>
						<XO>0</XO>
						<YS>0.0624782071</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<int name="SelectionOrder">0</int>
					<UDim2 name="Size">
						<XS>0.850000024</XS>
						<XO>0</XO>
						<YS>0.0624782741</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="UICorner" referent="RBX89E9C5136AB341A4984CB2DED5D5DA94">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<UDim name="CornerRadius">
							<S>0</S>
							<O>8</O>
						</UDim>
						<bool name="DefinesCapabilities">false</bool>
						<string name="Name">UICorner</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="TextLabel" referent="RBX99BB42D9F7FC4537A9BA5BE057CDD0A4">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0.5</X>
							<Y>0.5</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
						</Font>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<string name="LocalizationMatchIdentifier"></string>
						<string name="LocalizationMatchedSourceText"></string>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">ContentLabel</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<string name="OpenTypeFeatures"></string>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>0</XO>
							<YS>0.5</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0.899999976</XS>
							<XO>0</XO>
							<YS>0.75</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">User Content</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<token name="TextDirection">0</token>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">true</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX5E187A3D787643FF84911D337F145D85">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0.5</X>
						<Y>1</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>0.345098048</R>
						<G>0.427451015</G>
						<B>0.490196109</B>
					</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">
						<R>0</R>
						<G>0</G>
						<B>0</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="ClipsDescendants">false</bool>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Draggable">false</bool>
					<bool name="Interactable">true</bool>
					<int name="LayoutOrder">0</int>
					<string name="Name">ModelBubble</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0.5</XS>
						<XO>0</XO>
						<YS>0.0624782071</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<int name="SelectionOrder">0</int>
					<UDim2 name="Size">
						<XS>0.850000024</XS>
						<XO>0</XO>
						<YS>0.25</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="TextLabel" referent="RBX49CB2C82AF3243B8A2BB131727D929FB">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0.5</X>
							<Y>0.5</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
						</Font>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<string name="LocalizationMatchIdentifier"></string>
						<string name="LocalizationMatchedSourceText"></string>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">ContentLabel</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<string name="OpenTypeFeatures"></string>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>0</XO>
							<YS>0.5</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0.899999976</XS>
							<XO>0</XO>
							<YS>0.949999988</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">Model Response</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<token name="TextDirection">0</token>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">true</bool>
						<token name="TextXAlignment">0</token>
						<token name="TextYAlignment">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX35F5DFFCD6564E9F8141AE34C52656BC">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0.5</X>
						<Y>1</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>0.345098048</R>
						<G>0.427451015</G>
						<B>0.490196109</B>
					</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">
						<R>0</R>
						<G>0</G>
						<B>0</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="ClipsDescendants">false</bool>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Draggable">false</bool>
					<bool name="Interactable">true</bool>
					<int name="LayoutOrder">0</int>
					<string name="Name">ModelThinkingFrame</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0.5</XS>
						<XO>0</XO>
						<YS>0.221606731</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<int name="SelectionOrder">0</int>
					<UDim2 name="Size">
						<XS>0.850000083</XS>
						<XO>0</XO>
						<YS>0.141555712</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBX85CCA978A3224F9789E03B861FB6997F">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.156862751</R>
							<G>0.156862751</G>
							<B>0.156862751</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">Bubble</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0.649999976</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="UICorner" referent="RBX1A4E483EA536401099E0962E5762F660">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<UDim name="CornerRadius">
								<S>0</S>
								<O>8</O>
							</UDim>
							<bool name="DefinesCapabilities">false</bool>
							<string name="Name">UICorner</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX82FB63D8C94D4B8B8E2D1CEAE1EEE8C3">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>0.5</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">TaskNameLabel</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.635996699</XS>
								<XO>0</XO>
								<YS>0.244562343</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.639432073</XS>
								<XO>0</XO>
								<YS>0.239124462</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">Model is thinking for</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0.25</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBXF519FF508AD844928878D6FEEE6AE4E3">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>0.5</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">TimeLabel</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.635996699</XS>
								<XO>0</XO>
								<YS>0.619992435</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.639432073</XS>
								<XO>0</XO>
								<YS>0.51173532</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">3 seconds</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0.25</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="ImageLabel" referent="RBX63746C50C12E498C8D45C40B2A659625">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0.5</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>rbxassetid://126455106069276</url></Content>
							<Color3 name="ImageColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0.25</float>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">ImageLabel</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>1.83940596e-08</XS>
								<XO>0</XO>
								<YS>0.5</YS>
								<YO>0</YO>
							</UDim2>
							<token name="ResampleMode">0</token>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<token name="ScaleType">3</token>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.316280693</XS>
								<XO>0</XO>
								<YS>0.5</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<Rect2D name="SliceCenter">
								<min>
									<X>0</X>
									<Y>0</Y>
								</min>
								<max>
									<X>0</X>
									<Y>0</Y>
								</max>
							</Rect2D>
							<float name="SliceScale">1</float>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UDim2 name="TileSize">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX18783B9275194D01AF2D805B621C924B">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0.5</X>
						<Y>1</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>0.345098048</R>
						<G>0.427451015</G>
						<B>0.490196109</B>
					</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">
						<R>0</R>
						<G>0</G>
						<B>0</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="ClipsDescendants">false</bool>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Draggable">false</bool>
					<bool name="Interactable">true</bool>
					<int name="LayoutOrder">0</int>
					<string name="Name">ModelEditedFrame</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0.5</XS>
						<XO>0</XO>
						<YS>0.221606731</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<int name="SelectionOrder">0</int>
					<UDim2 name="Size">
						<XS>0.850000083</XS>
						<XO>0</XO>
						<YS>0.141555712</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBXD86F74A3FEEB42FA894A5CB642554658">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.156862751</R>
							<G>0.156862751</G>
							<B>0.156862751</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">Bubble</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0.649999976</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="UICorner" referent="RBX4CD577E082944F69B229CA36D3FB8E66">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<UDim name="CornerRadius">
								<S>0</S>
								<O>8</O>
							</UDim>
							<bool name="DefinesCapabilities">false</bool>
							<string name="Name">UICorner</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBXA254D39E450842929939A10CF245F4C6">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>0.5</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">TaskNameLabel</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.635996699</XS>
								<XO>0</XO>
								<YS>0.244562343</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.639432073</XS>
								<XO>0</XO>
								<YS>0.239124462</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">Model edited your scripts.</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0.25</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="ImageLabel" referent="RBX34A3BD0145904463927950075BD761CD">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0.5</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>rbxassetid://80289912970625</url></Content>
							<Color3 name="ImageColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0.25</float>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">ImageLabel</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>1.83940596e-08</XS>
								<XO>0</XO>
								<YS>0.5</YS>
								<YO>0</YO>
							</UDim2>
							<token name="ResampleMode">0</token>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<token name="ScaleType">3</token>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.316280693</XS>
								<XO>0</XO>
								<YS>0.5</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<Rect2D name="SliceCenter">
								<min>
									<X>0</X>
									<Y>0</Y>
								</min>
								<max>
									<X>0</X>
									<Y>0</Y>
								</max>
							</Rect2D>
							<float name="SliceScale">1</float>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UDim2 name="TileSize">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX85A308DBE55149AF9218E867E670A5C4">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoButtonColor">true</bool>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.435294151</R>
								<G>0.239215702</G>
								<B>0.239215702</B>
							</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<Ref name="HoverHapticEffect">null</Ref>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<bool name="Modal">false</bool>
							<string name="Name">RevertButton</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.316280752</XS>
								<XO>0</XO>
								<YS>0.465525955</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="PressHapticEffect">null</Ref>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<bool name="Selected">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.649999976</XS>
								<XO>0</XO>
								<YS>0.349999994</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">Revert Changes</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="UICorner" referent="RBX5DDC592F17074C1E9B50BAF2B9FDB40B">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<UDim name="CornerRadius">
									<S>0</S>
									<O>8</O>
								</UDim>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">UICorner</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="TextButton" referent="RBX2E263A05D6DF4313B7B7C6053C57067E">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoButtonColor">true</bool>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.321568638</R>
								<G>0.435294151</G>
								<B>0.235294133</B>
							</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<Ref name="HoverHapticEffect">null</Ref>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<bool name="Modal">false</bool>
							<string name="Name">AcceptButton</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.316280752</XS>
								<XO>0</XO>
								<YS>0.465525955</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="PressHapticEffect">null</Ref>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<bool name="Selected">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.649999976</XS>
								<XO>0</XO>
								<YS>0.349999994</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">Accept AI Changes</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">false</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="UICorner" referent="RBX68E4177688C34A8E996BCA23DF0E63FF">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<UDim name="CornerRadius">
									<S>0</S>
									<O>8</O>
								</UDim>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">UICorner</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
				</Item>
			</Item>
			<Item class="ScreenGui" referent="RBX0CF021A3CB2947D1B78045057EE55F20">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="ClipToDeviceSafeArea">true</bool>
					<bool name="DefinesCapabilities">false</bool>
					<int name="DisplayOrder">0</int>
					<bool name="Enabled">true</bool>
					<string name="Name">FeedbackGUI</string>
					<bool name="ResetOnSpawn">true</bool>
					<Ref name="RootLocalizationTable">null</Ref>
					<token name="SafeAreaCompatibility">1</token>
					<token name="ScreenInsets">2</token>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<token name="ZIndexBehavior">1</token>
				</Properties>
				<Item class="Frame" referent="RBXB1E28E56E43E4C55ABD10084DA52295B">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.117647059</R>
							<G>0.117647059</G>
							<B>0.117647059</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">App</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">true</bool>
						<int name="ZIndex">0</int>
					</Properties>
					<Item class="TextBox" referent="RBX02A8CAD7443B498FB521437D8E3929E7">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClearTextOnFocus">false</bool>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<bool name="MultiLine">true</bool>
							<string name="Name">FeedbackInput</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<Color3 name="PlaceholderColor3">
								<R>0.529411793</R>
								<G>0.529411793</G>
								<B>0.529411793</B>
							</Color3>
							<string name="PlaceholderText">Tell me bout your Vibe Coder expirience!</string>
							<UDim2 name="Position">
								<XS>0.49955985</XS>
								<XO>0</XO>
								<YS>0.0386468396</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<bool name="ShowNativeInput">true</bool>
							<UDim2 name="Size">
								<XS>0.826584518</XS>
								<XO>0</XO>
								<YS>0.60202527</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text"></string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextEditable">true</bool>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">20</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0.150000006</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX1A5B0A2C297B408482BECAE663BEFE68">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoButtonColor">true</bool>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.258823544</R>
								<G>0.258823544</G>
								<B>0.258823544</B>
							</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<Ref name="HoverHapticEffect">null</Ref>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<bool name="Modal">false</bool>
							<string name="Name">SendButton</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.0862676054</XS>
								<XO>0</XO>
								<YS>0.832203388</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="PressHapticEffect">null</Ref>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<bool name="Selected">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.826584518</XS>
								<XO>0</XO>
								<YS>0.141525418</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">Send</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="UICorner" referent="RBX9D3FDC8F61C0495A889ADF8A0FB7F2E7">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<UDim name="CornerRadius">
									<S>0</S>
									<O>8</O>
								</UDim>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">UICorner</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="TextLabel" referent="RBX0C081BD6973B464F99347A164CDC1A70">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">TextLabel</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.0860000029</XS>
								<XO>0</XO>
								<YS>0.677053869</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.824852169</XS>
								<XO>1</XO>
								<YS>0.117847033</YS>
								<YO>1</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">If you want me to contact you back, please leave your email in the feedback.</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">20</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0.25</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="ScreenGui" referent="RBXAEB7F1A67AEE4D8F8E92D69510761E97">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="ClipToDeviceSafeArea">true</bool>
					<bool name="DefinesCapabilities">false</bool>
					<int name="DisplayOrder">0</int>
					<bool name="Enabled">true</bool>
					<string name="Name">WidgetGUI</string>
					<bool name="ResetOnSpawn">true</bool>
					<Ref name="RootLocalizationTable">null</Ref>
					<token name="SafeAreaCompatibility">1</token>
					<token name="ScreenInsets">2</token>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<token name="ZIndexBehavior">1</token>
				</Properties>
				<Item class="Frame" referent="RBX789CDFFE49C341F79C5039EAA5872A78">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.117647059</R>
							<G>0.117647059</G>
							<B>0.117647059</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">NoSelectionFrame</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
						<int name="ZIndex">10</int>
					</Properties>
					<Item class="Frame" referent="RBX3CB9AA420E85463F8F993159B84D2E44">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>0.5</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">Frame</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.5</XS>
								<XO>0</XO>
								<YS>0.5</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.5</XS>
								<XO>0</XO>
								<YS>0.150000006</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<bool name="Visible">true</bool>
							<int name="ZIndex">11</int>
						</Properties>
						<Item class="UIListLayout" referent="RBX67E5DDF12E7C41A48785B36FD2DAF73C">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<token name="FillDirection">1</token>
								<token name="HorizontalAlignment">1</token>
								<token name="HorizontalFlex">0</token>
								<token name="ItemLineAlignment">0</token>
								<string name="Name">UIListLayout</string>
								<UDim name="Padding">
									<S>0</S>
									<O>0</O>
								</UDim>
								<token name="SortOrder">2</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<token name="VerticalAlignment">1</token>
								<token name="VerticalFlex">0</token>
								<bool name="Wraps">false</bool>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBXF746212C99FD42E78FF4C74F120DCEB1">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>rbxassetid://79115352535620</url></Content>
								<Color3 name="ImageColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0.25</float>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<string name="Name">ImageLabel</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<token name="ResampleMode">0</token>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<token name="ScaleType">3</token>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0.569999993</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<Rect2D name="SliceCenter">
									<min>
										<X>0</X>
										<Y>0</Y>
									</min>
									<max>
										<X>0</X>
										<Y>0</Y>
									</max>
								</Rect2D>
								<float name="SliceScale">1</float>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UDim2 name="TileSize">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="Visible">true</bool>
								<int name="ZIndex">11</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX05109FBFC20D4FA5A3829BCB990D0ED6">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
									<Weight>400</Weight>
									<Style>Normal</Style>
								</Font>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<string name="LocalizationMatchIdentifier"></string>
								<string name="LocalizationMatchedSourceText"></string>
								<int name="MaxVisibleGraphemes">-1</int>
								<string name="Name">TextLabel</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<string name="OpenTypeFeatures"></string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0.5</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text">Select an script in Explorer first.</string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<token name="TextDirection">0</token>
								<bool name="TextScaled">true</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0.25</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">11</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBXC6442878D4704C0AB8F31CF14BA54470">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.117647059</R>
							<G>0.117647059</G>
							<B>0.117647059</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">App</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">true</bool>
						<int name="ZIndex">0</int>
					</Properties>
					<Item class="Frame" referent="RBXCCF57A8C87F841E09A5670291FF7C0C2">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>1</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.156862751</R>
								<G>0.156862751</G>
								<B>0.156862751</B>
							</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">BottomThread</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.5</XS>
								<XO>0</XO>
								<YS>0.98999995</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.949999988</XS>
								<XO>0</XO>
								<YS>0.167168677</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="UICorner" referent="RBXDCE26115E050458CB05F2CF004881FB6">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<UDim name="CornerRadius">
									<S>0</S>
									<O>8</O>
								</UDim>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">UICorner</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBXBC0FB130542044ACB8CDE9E17DE51E03">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0.5</X>
									<Y>1</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>0.482352942</R>
									<G>0.541176498</G>
									<B>0.78039217</B>
								</Color3>
								<float name="BackgroundTransparency">0.899999976</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<string name="Name">SelectedScriptFrame</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.256017506</XS>
									<XO>0</XO>
									<YS>0.220721155</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.480832011</XS>
									<XO>0</XO>
									<YS>0.154647633</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="UICorner" referent="RBX19CD035B089944B39F0DF030598A69C9">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<UDim name="CornerRadius">
										<S>0</S>
										<O>8</O>
									</UDim>
									<bool name="DefinesCapabilities">false</bool>
									<string name="Name">UICorner</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX2F43E5EBE26A451D9D861378FA5B5CAF">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0.5</X>
										<Y>0.5</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="Name">ScriptTitle</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<string name="OpenTypeFeatures"></string>
									<UDim2 name="Position">
										<XS>0.520498514</XS>
										<XO>0</XO>
										<YS>0.499998957</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="RichText">false</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.685664654</XS>
										<XO>0</XO>
										<YS>0.899999976</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<string name="Text">Script</string>
									<Color3 name="TextColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">18</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0.25</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="ImageLabel" referent="RBXE9738CB5F2F14EAE8EEA9F4547336C50">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>rbxassetid://113661567766482</url></Content>
									<Color3 name="ImageColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0.25</float>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">ScriptIcon</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>3</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<token name="ResampleMode">0</token>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<token name="ScaleType">3</token>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.200000003</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<Rect2D name="SliceCenter">
										<min>
											<X>0</X>
											<Y>0</Y>
										</min>
										<max>
											<X>0</X>
											<Y>0</Y>
										</max>
									</Rect2D>
									<float name="SliceScale">1</float>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UDim2 name="TileSize">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
						<Item class="TextBox" referent="RBX39AA669CA1544500AFFAFD9BC0B6DB77">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0.5</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClearTextOnFocus">false</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
									<Weight>400</Weight>
									<Style>Normal</Style>
								</Font>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<string name="LocalizationMatchIdentifier"></string>
								<string name="LocalizationMatchedSourceText"></string>
								<int name="MaxVisibleGraphemes">-1</int>
								<bool name="MultiLine">true</bool>
								<string name="Name">ChatInputTextBox</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<string name="OpenTypeFeatures"></string>
								<Color3 name="PlaceholderColor3">
									<R>0.529411793</R>
									<G>0.529411793</G>
									<B>0.529411793</B>
								</Color3>
								<string name="PlaceholderText">Let Vibe Coder AI do your scripting! &#226;&#156;&#168;</string>
								<UDim2 name="Position">
									<XS>0.497061342</XS>
									<XO>0</XO>
									<YS>0.299999893</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<bool name="ShowNativeInput">true</bool>
								<UDim2 name="Size">
									<XS>0.944122851</XS>
									<XO>0</XO>
									<YS>0.41400972</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text"></string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<token name="TextDirection">0</token>
								<bool name="TextEditable">true</bool>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0.150000006</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="ImageButton" referent="RBX584A6CD7120C4509AEAD98E9099F337B">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoButtonColor">true</bool>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Ref name="HoverHapticEffect">null</Ref>
								<Content name="HoverImage"><null></null></Content>
								<Content name="Image"><url>rbxassetid://123181546754641</url></Content>
								<Color3 name="ImageColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0.25</float>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<bool name="Modal">false</bool>
								<string name="Name">SendButton</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.892009795</XS>
									<XO>0</XO>
									<YS>0.733529866</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="PressHapticEffect">null</Ref>
								<Content name="PressedImage"><null></null></Content>
								<token name="ResampleMode">0</token>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<token name="ScaleType">3</token>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.0900033265</XS>
									<XO>0</XO>
									<YS>0.160360187</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<Rect2D name="SliceCenter">
									<min>
										<X>0</X>
										<Y>0</Y>
									</min>
									<max>
										<X>0</X>
										<Y>0</Y>
									</max>
								</Rect2D>
								<float name="SliceScale">1</float>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<UDim2 name="TileSize">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBXB1D846EF2D4A46D6B08A1C4B07BD7AC2">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoButtonColor">true</bool>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>0.137254909</R>
									<G>0.137254909</G>
									<B>0.137254909</B>
								</Color3>
								<float name="BackgroundTransparency">0.899999976</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/SourceSansPro.json</url></Family>
									<Weight>400</Weight>
									<Style>Normal</Style>
									<CachedFaceId><url>rbxasset://fonts/SourceSansPro-Regular.ttf</url></CachedFaceId>
								</Font>
								<Ref name="HoverHapticEffect">null</Ref>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">1</int>
								<float name="LineHeight">1</float>
								<string name="LocalizationMatchIdentifier"></string>
								<string name="LocalizationMatchedSourceText"></string>
								<int name="MaxVisibleGraphemes">-1</int>
								<bool name="Modal">false</bool>
								<string name="Name">CurrentModelButton</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<string name="OpenTypeFeatures"></string>
								<UDim2 name="Position">
									<XS>0.0299999993</XS>
									<XO>0</XO>
									<YS>0.706502259</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="PressHapticEffect">null</Ref>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.271118104</XS>
									<XO>0</XO>
									<YS>0.216216221</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text"></string>
								<Color3 name="TextColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="TextDirection">0</token>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">1</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
							<Item class="UICorner" referent="RBXD3BECAE81DC348A18620367F6B65652B">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<UDim name="CornerRadius">
										<S>0</S>
										<O>8</O>
									</UDim>
									<bool name="DefinesCapabilities">false</bool>
									<string name="Name">UICorner</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
								</Properties>
							</Item>
							<Item class="ImageLabel" referent="RBX8D5BD7D8ED31409CAB1274BA880C78DA">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>rbxassetid://79274818810097</url></Content>
									<Color3 name="ImageColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0.25</float>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">DropdownIcon</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0.800000131</XS>
										<XO>0</XO>
										<YS>0.125</YS>
										<YO>0</YO>
									</UDim2>
									<token name="ResampleMode">0</token>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<token name="ScaleType">3</token>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.179667592</XS>
										<XO>0</XO>
										<YS>0.741667807</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<Rect2D name="SliceCenter">
										<min>
											<X>0</X>
											<Y>0</Y>
										</min>
										<max>
											<X>0</X>
											<Y>0</Y>
										</max>
									</Rect2D>
									<float name="SliceScale">1</float>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UDim2 name="TileSize">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX625113610D8B4F3B8EF9CFF362729553">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0.5</X>
										<Y>0.5</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="Name">ModelTitle</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<string name="OpenTypeFeatures"></string>
									<UDim2 name="Position">
										<XS>0.414509743</XS>
										<XO>0</XO>
										<YS>0.499999851</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="RichText">false</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.779018283</XS>
										<XO>0</XO>
										<YS>0.899999917</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<string name="Text">no model selected.</string>
									<Color3 name="TextColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">18</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0.25</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
						<Item class="TextBox" referent="RBX13E2AAD28C9D488490828BCBDEA62551">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0.5</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClearTextOnFocus">false</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
									<Weight>400</Weight>
									<Style>Normal</Style>
								</Font>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<string name="LocalizationMatchIdentifier"></string>
								<string name="LocalizationMatchedSourceText"></string>
								<int name="MaxVisibleGraphemes">-1</int>
								<bool name="MultiLine">true</bool>
								<string name="Name">ApiKeyInput</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<string name="OpenTypeFeatures"></string>
								<Color3 name="PlaceholderColor3">
									<R>0.529411793</R>
									<G>0.529411793</G>
									<B>0.529411793</B>
								</Color3>
								<string name="PlaceholderText">API key</string>
								<UDim2 name="Position">
									<XS>0.678268731</XS>
									<XO>0</XO>
									<YS>0.733529329</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<bool name="ShowNativeInput">true</bool>
								<UDim2 name="Size">
									<XS>0.287856996</XS>
									<XO>0</XO>
									<YS>0.151351243</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text"></string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<token name="TextDirection">0</token>
								<bool name="TextEditable">true</bool>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0.150000006</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="ImageButton" referent="RBX4481B499AB564EAC8BD8CE8F1AA55190">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoButtonColor">true</bool>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Ref name="HoverHapticEffect">null</Ref>
								<Content name="HoverImage"><null></null></Content>
								<Content name="Image"><url>rbxassetid://73515595170574</url></Content>
								<Color3 name="ImageColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0.25</float>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<bool name="Modal">false</bool>
								<string name="Name">ShowApiKeyButton</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.819884002</XS>
									<XO>0</XO>
									<YS>0.733529747</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="PressHapticEffect">null</Ref>
								<Content name="PressedImage"><null></null></Content>
								<token name="ResampleMode">0</token>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<token name="ScaleType">3</token>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.0900033265</XS>
									<XO>0</XO>
									<YS>0.160360187</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<Rect2D name="SliceCenter">
									<min>
										<X>0</X>
										<Y>0</Y>
									</min>
									<max>
										<X>0</X>
										<Y>0</Y>
									</max>
								</Rect2D>
								<float name="SliceScale">1</float>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<UDim2 name="TileSize">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBXE2B1BF5C82614EEFBD3840FC1326C32A">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0.5</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
									<Weight>400</Weight>
									<Style>Normal</Style>
								</Font>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<string name="LocalizationMatchIdentifier"></string>
								<string name="LocalizationMatchedSourceText"></string>
								<int name="MaxVisibleGraphemes">-1</int>
								<string name="Name">ApiKeyHiddenLabel</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<string name="OpenTypeFeatures"></string>
								<UDim2 name="Position">
									<XS>0.677999973</XS>
									<XO>0</XO>
									<YS>0.734000027</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.287999988</XS>
									<XO>0</XO>
									<YS>0.150999993</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text">API KEY HIDDEN</string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<token name="TextDirection">0</token>
								<bool name="TextScaled">true</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0.25</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">false</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="ImageButton" referent="RBXBB85432324654FBAB8BDA48603C82038">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoButtonColor">true</bool>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Ref name="HoverHapticEffect">null</Ref>
								<Content name="HoverImage"><null></null></Content>
								<Content name="Image"><url>rbxassetid://130372484515289</url></Content>
								<Color3 name="ImageColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0.25</float>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<bool name="Modal">false</bool>
								<string name="Name">OpenMenuButton</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.928200066</XS>
									<XO>0</XO>
									<YS>0.0738055855</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="PressHapticEffect">null</Ref>
								<Content name="PressedImage"><null></null></Content>
								<token name="ResampleMode">0</token>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<token name="ScaleType">3</token>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.0531407259</XS>
									<XO>0</XO>
									<YS>0.146914348</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<Rect2D name="SliceCenter">
									<min>
										<X>0</X>
										<Y>0</Y>
									</min>
									<max>
										<X>0</X>
										<Y>0</Y>
									</max>
								</Rect2D>
								<float name="SliceScale">1</float>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<UDim2 name="TileSize">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX267DD32A960F41F9A137645F48C58CA5">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>1</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.0980392173</R>
								<G>0.0980392173</G>
								<B>0.0980392173</B>
							</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">ModelSelectFrame</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.274051219</XS>
								<XO>0</XO>
								<YS>0.940936327</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.440239549</XS>
								<XO>0</XO>
								<YS>0.220514685</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<bool name="Visible">false</bool>
							<int name="ZIndex">2</int>
						</Properties>
						<Item class="UICorner" referent="RBX2CC80E7D421C4C0DB5225FB7B7E09368">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<UDim name="CornerRadius">
									<S>0</S>
									<O>8</O>
								</UDim>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">UICorner</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX43BB1375500E48AB84012BCF1E70C9D3">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0.5</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
									<Weight>400</Weight>
									<Style>Normal</Style>
								</Font>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<string name="LocalizationMatchIdentifier"></string>
								<string name="LocalizationMatchedSourceText"></string>
								<int name="MaxVisibleGraphemes">-1</int>
								<string name="Name">Header</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<string name="OpenTypeFeatures"></string>
								<UDim2 name="Position">
									<XS>0.363621145</XS>
									<XO>0</XO>
									<YS>0.014999954</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.677242219</XS>
									<XO>0</XO>
									<YS>0.129761562</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text">Select AI Model</string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<token name="TextDirection">0</token>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0.75</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="ScrollingFrame" referent="RBX82E33B239CCD4D20910926A30625BDED">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0.5</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticCanvasSize">2</token>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<Content name="BottomImage"><url>rbxasset://textures/ui/Scroll/scroll-bottom.png</url></Content>
								<Vector2 name="CanvasPosition">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<UDim2 name="CanvasSize">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>200</YO>
								</UDim2>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">true</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<token name="ElasticBehavior">0</token>
								<token name="HorizontalScrollBarInset">0</token>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<Content name="MidImage"><url>rbxasset://textures/ui/Scroll/scroll-middle.png</url></Content>
								<string name="Name">ModelsList</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.5</XS>
									<XO>0</XO>
									<YS>0.185738772</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<Color3 name="ScrollBarImageColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="ScrollBarImageTransparency">0</float>
								<int name="ScrollBarThickness">12</int>
								<token name="ScrollingDirection">2</token>
								<bool name="ScrollingEnabled">true</bool>
								<bool name="Selectable">true</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">true</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.949999928</XS>
									<XO>0</XO>
									<YS>0.814261019</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<Content name="TopImage"><url>rbxasset://textures/ui/Scroll/scroll-top.png</url></Content>
								<token name="VerticalScrollBarInset">0</token>
								<token name="VerticalScrollBarPosition">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
							<Item class="UIListLayout" referent="RBXFAEEE14B52184E17852E3E7136E476AD">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<token name="FillDirection">1</token>
									<token name="HorizontalAlignment">0</token>
									<token name="HorizontalFlex">1</token>
									<token name="ItemLineAlignment">0</token>
									<string name="Name">UIListLayout</string>
									<UDim name="Padding">
										<S>0</S>
										<O>8</O>
									</UDim>
									<token name="SortOrder">2</token>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<token name="VerticalAlignment">1</token>
									<token name="VerticalFlex">0</token>
									<bool name="Wraps">false</bool>
								</Properties>
							</Item>
							<Item class="TextButton" referent="RBXB819E4793C6F4D769273E4D6AE5C052F">
								<Properties>
									<bool name="Active">true</bool>
									<Vector2 name="AnchorPoint">
										<X>0.5</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoButtonColor">true</bool>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>0.0980392173</R>
										<G>0.0980392173</G>
										<B>0.0980392173</B>
									</Color3>
									<float name="BackgroundTransparency">0.899999976</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<Ref name="HoverHapticEffect">null</Ref>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<bool name="Modal">false</bool>
									<string name="Name">ModelSelectButton</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<string name="OpenTypeFeatures"></string>
									<UDim2 name="Position">
										<XS>0.0243607201</XS>
										<XO>0</XO>
										<YS>0.0309071168</YS>
										<YO>0</YO>
									</UDim2>
									<Ref name="PressHapticEffect">null</Ref>
									<bool name="RichText">false</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">true</bool>
									<bool name="Selected">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.75</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<token name="Style">0</token>
									<BinaryString name="Tags"></BinaryString>
									<string name="Text">ModelName</string>
									<Color3 name="TextColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0.25</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">false</bool>
									<int name="ZIndex">2</int>
								</Properties>
								<Item class="UICorner" referent="RBXC64A00B87FD54C80B57526296184B767">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<UDim name="CornerRadius">
											<S>0</S>
											<O>8</O>
										</UDim>
										<bool name="DefinesCapabilities">false</bool>
										<string name="Name">UICorner</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Frame" referent="RBXC5EF6B524B0A4F94BE5558389E363CC9">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0.5</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>0.678431392</R>
									<G>0.494117647</G>
									<B>0.956862748</B>
								</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<string name="Name">ProLabel</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.842000008</XS>
									<XO>0</XO>
									<YS>0.0149999997</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.211999997</XS>
									<XO>0</XO>
									<YS>0.129999995</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
							<Item class="TextLabel" referent="RBXB8544FCB757B481AA7FB5AC7C1F0F887">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0.5</X>
										<Y>0.5</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>0.678431392</R>
										<G>0.494117647</G>
										<B>0.956862748</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="Name">Text</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<string name="OpenTypeFeatures"></string>
									<UDim2 name="Position">
										<XS>0.5</XS>
										<XO>0</XO>
										<YS>0.5</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="RichText">false</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0.75</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<string name="Text">PRO</string>
									<Color3 name="TextColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
							</Item>
							<Item class="UICorner" referent="RBX36702D2A00A2405580D125B64E7691A8">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<UDim name="CornerRadius">
										<S>0</S>
										<O>8</O>
									</UDim>
									<bool name="DefinesCapabilities">false</bool>
									<string name="Name">UICorner</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="ScrollingFrame" referent="RBX4D08EDFEB380424BAA11BC2176A0417F">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticCanvasSize">2</token>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<Content name="BottomImage"><url>rbxasset://textures/ui/Scroll/scroll-bottom.png</url></Content>
							<Vector2 name="CanvasPosition">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<UDim2 name="CanvasSize">
								<XS>0</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">true</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<token name="ElasticBehavior">0</token>
							<token name="HorizontalScrollBarInset">0</token>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<Content name="MidImage"><url>rbxasset://textures/ui/Scroll/scroll-middle.png</url></Content>
							<string name="Name">ChatHistory</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.5</XS>
								<XO>0</XO>
								<YS>0.0546247326</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<Color3 name="ScrollBarImageColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="ScrollBarImageTransparency">1</float>
							<int name="ScrollBarThickness">12</int>
							<token name="ScrollingDirection">2</token>
							<bool name="ScrollingEnabled">true</bool>
							<bool name="Selectable">true</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">true</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.949999928</XS>
								<XO>0</XO>
								<YS>0.756085217</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Content name="TopImage"><url>rbxasset://textures/ui/Scroll/scroll-top.png</url></Content>
							<token name="VerticalScrollBarInset">0</token>
							<token name="VerticalScrollBarPosition">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="UIListLayout" referent="RBX11ACD26389C94904A63393E0CD61AEFA">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<token name="FillDirection">1</token>
								<token name="HorizontalAlignment">0</token>
								<token name="HorizontalFlex">0</token>
								<token name="ItemLineAlignment">0</token>
								<string name="Name">UIListLayout</string>
								<UDim name="Padding">
									<S>0</S>
									<O>8</O>
								</UDim>
								<token name="SortOrder">2</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<token name="VerticalAlignment">1</token>
								<token name="VerticalFlex">0</token>
								<bool name="Wraps">false</bool>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX6CC665053DAB453EAF9A1D50FDD12686">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>1</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.0980392173</R>
								<G>0.0980392173</G>
								<B>0.0980392173</B>
							</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">MenuFrame</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.753058791</XS>
								<XO>0</XO>
								<YS>0.81245333</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.440239578</XS>
								<XO>0</XO>
								<YS>0.155998558</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<bool name="Visible">false</bool>
							<int name="ZIndex">2</int>
						</Properties>
						<Item class="UICorner" referent="RBX8430C541DF6B4491996899348D12A89D">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<UDim name="CornerRadius">
									<S>0</S>
									<O>8</O>
								</UDim>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">UICorner</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="UIListLayout" referent="RBX31272FB3F4E14CB996C1D9CFC32B3087">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<token name="FillDirection">1</token>
								<token name="HorizontalAlignment">0</token>
								<token name="HorizontalFlex">0</token>
								<token name="ItemLineAlignment">0</token>
								<string name="Name">UIListLayout</string>
								<UDim name="Padding">
									<S>0</S>
									<O>0</O>
								</UDim>
								<token name="SortOrder">2</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<token name="VerticalAlignment">1</token>
								<token name="VerticalFlex">0</token>
								<bool name="Wraps">false</bool>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBX248A951484F048728BD871DE964A1BCF">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoButtonColor">true</bool>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
									<Weight>400</Weight>
									<Style>Normal</Style>
								</Font>
								<Ref name="HoverHapticEffect">null</Ref>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<string name="LocalizationMatchIdentifier"></string>
								<string name="LocalizationMatchedSourceText"></string>
								<int name="MaxVisibleGraphemes">-1</int>
								<bool name="Modal">false</bool>
								<string name="Name">ClearButton</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<string name="OpenTypeFeatures"></string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="PressHapticEffect">null</Ref>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.899999976</XS>
									<XO>0</XO>
									<YS>0.330000013</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text"></string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<token name="TextDirection">0</token>
								<bool name="TextScaled">true</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">3</int>
							</Properties>
							<Item class="TextLabel" referent="RBX783BA39DCC5846E986430C66F047EB86">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0.5</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="Name">TextLabel</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<string name="OpenTypeFeatures"></string>
									<UDim2 name="Position">
										<XS>0.184383377</XS>
										<XO>0</XO>
										<YS>0.499999672</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="RichText">false</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.815616727</XS>
										<XO>0</XO>
										<YS>0.75</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<string name="Text">Clear Conversation</string>
									<Color3 name="TextColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<token name="TextDirection">1</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0.25</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">3</int>
								</Properties>
							</Item>
							<Item class="ImageLabel" referent="RBX1197455219F04E188CD4BD547A0A3253">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0.5</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>rbxassetid://72456202240333</url></Content>
									<Color3 name="ImageColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0.25</float>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">ImageLabel</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0.5</YS>
										<YO>0</YO>
									</UDim2>
									<token name="ResampleMode">0</token>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<token name="ScaleType">3</token>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.200000003</XS>
										<XO>0</XO>
										<YS>0.5</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<Rect2D name="SliceCenter">
										<min>
											<X>0</X>
											<Y>0</Y>
										</min>
										<max>
											<X>0</X>
											<Y>0</Y>
										</max>
									</Rect2D>
									<float name="SliceScale">1</float>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UDim2 name="TileSize">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="Visible">true</bool>
									<int name="ZIndex">3</int>
								</Properties>
							</Item>
						</Item>
						<Item class="TextButton" referent="RBX6CE8038678584990A329E1094D980A53">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoButtonColor">true</bool>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
									<Weight>400</Weight>
									<Style>Normal</Style>
								</Font>
								<Ref name="HoverHapticEffect">null</Ref>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<string name="LocalizationMatchIdentifier"></string>
								<string name="LocalizationMatchedSourceText"></string>
								<int name="MaxVisibleGraphemes">-1</int>
								<bool name="Modal">false</bool>
								<string name="Name">FeedbackButton</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<string name="OpenTypeFeatures"></string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="PressHapticEffect">null</Ref>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.899999976</XS>
									<XO>0</XO>
									<YS>0.330000013</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text"></string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<token name="TextDirection">0</token>
								<bool name="TextScaled">true</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">3</int>
							</Properties>
							<Item class="TextLabel" referent="RBXFBCDFE49762C4E5EB467F55B2AF4F662">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0.5</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="Name">TextLabel</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<string name="OpenTypeFeatures"></string>
									<UDim2 name="Position">
										<XS>0.184383377</XS>
										<XO>0</XO>
										<YS>0.499999672</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="RichText">false</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.815616727</XS>
										<XO>0</XO>
										<YS>0.75</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<string name="Text">Send Feedback</string>
									<Color3 name="TextColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<token name="TextDirection">1</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0.25</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">3</int>
								</Properties>
							</Item>
							<Item class="ImageLabel" referent="RBX8242A4AD48964CD2A94180C679F55A65">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0.5</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>rbxassetid://90206302915644</url></Content>
									<Color3 name="ImageColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0.25</float>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">ImageLabel</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0.5</YS>
										<YO>0</YO>
									</UDim2>
									<token name="ResampleMode">0</token>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<token name="ScaleType">3</token>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.200000003</XS>
										<XO>0</XO>
										<YS>0.5</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<Rect2D name="SliceCenter">
										<min>
											<X>0</X>
											<Y>0</Y>
										</min>
										<max>
											<X>0</X>
											<Y>0</Y>
										</max>
									</Rect2D>
									<float name="SliceScale">1</float>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UDim2 name="TileSize">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="Visible">true</bool>
									<int name="ZIndex">3</int>
								</Properties>
							</Item>
						</Item>
						<Item class="TextButton" referent="RBX3B15D2F5E2634E3483710BC63DABB3BF">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoButtonColor">true</bool>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
									<Weight>400</Weight>
									<Style>Normal</Style>
								</Font>
								<Ref name="HoverHapticEffect">null</Ref>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<string name="LocalizationMatchIdentifier"></string>
								<string name="LocalizationMatchedSourceText"></string>
								<int name="MaxVisibleGraphemes">-1</int>
								<bool name="Modal">false</bool>
								<string name="Name">JoinSupportServerButton</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<string name="OpenTypeFeatures"></string>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="PressHapticEffect">null</Ref>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.899999976</XS>
									<XO>0</XO>
									<YS>0.330000013</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text"></string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<token name="TextDirection">0</token>
								<bool name="TextScaled">true</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">3</int>
							</Properties>
							<Item class="TextLabel" referent="RBXBCEAE07C8CB14AFE9EDD5AC0C51503A8">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0.5</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="Name">TextLabel</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<string name="OpenTypeFeatures"></string>
									<UDim2 name="Position">
										<XS>0.184383377</XS>
										<XO>0</XO>
										<YS>0.499999672</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="RichText">false</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.815616727</XS>
										<XO>0</XO>
										<YS>0.75</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<string name="Text">Join Community Server</string>
									<Color3 name="TextColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<token name="TextDirection">1</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0.25</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">3</int>
								</Properties>
							</Item>
							<Item class="ImageLabel" referent="RBX6DD3912D91E44FC68B9D93743A1BD9AF">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0.5</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="ClipsDescendants">false</bool>
									<bool name="DefinesCapabilities">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>rbxassetid://97572524929990</url></Content>
									<Color3 name="ImageColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0.25</float>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">ImageLabel</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0.5</YS>
										<YO>0</YO>
									</UDim2>
									<token name="ResampleMode">0</token>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<token name="ScaleType">3</token>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.200000003</XS>
										<XO>0</XO>
										<YS>0.5</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<Rect2D name="SliceCenter">
										<min>
											<X>0</X>
											<Y>0</Y>
										</min>
										<max>
											<X>0</X>
											<Y>0</Y>
										</max>
									</Rect2D>
									<float name="SliceScale">1</float>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UDim2 name="TileSize">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="Visible">true</bool>
									<int name="ZIndex">3</int>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX060825A7482E4D559187906E62219811">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>1</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.403921574</R>
								<G>0.223529413</G>
								<B>0.223529413</B>
							</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">WarningFrame</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.5</XS>
								<XO>0</XO>
								<YS>0.80445838</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.949999988</XS>
								<XO>0</XO>
								<YS>0.0321747102</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<bool name="Visible">false</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="UICorner" referent="RBX15F2468612224E5185815C83B97E7904">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<UDim name="CornerRadius">
									<S>0</S>
									<O>8</O>
								</UDim>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">UICorner</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX09C3B68F1B4049D385F26FA39658E1D8">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0.5</X>
									<Y>0.5</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>0.913725555</G>
									<B>0.913725555</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Font name="FontFace">
									<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
									<Weight>400</Weight>
									<Style>Normal</Style>
								</Font>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<float name="LineHeight">1</float>
								<string name="LocalizationMatchIdentifier"></string>
								<string name="LocalizationMatchedSourceText"></string>
								<int name="MaxVisibleGraphemes">-1</int>
								<string name="Name">WarningContent</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<string name="OpenTypeFeatures"></string>
								<UDim2 name="Position">
									<XS>0.5</XS>
									<XO>0</XO>
									<YS>0.5</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="RichText">false</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.75</XS>
									<XO>0</XO>
									<YS>0.800000012</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<string name="Text">Warning</string>
								<Color3 name="TextColor3">
									<R>1</R>
									<G>0.956862807</G>
									<B>0.956862807</B>
								</Color3>
								<token name="TextDirection">0</token>
								<bool name="TextScaled">true</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<token name="TextTruncate">0</token>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX47E7F2316BCE4B5CA5E83A1271AAA736">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0.5</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>rbxassetid://106040231377035</url></Content>
								<Color3 name="ImageColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<string name="Name">ImageLabel</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0.5</YS>
									<YO>0</YO>
								</UDim2>
								<token name="ResampleMode">0</token>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<token name="ScaleType">3</token>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>0.100000001</XS>
									<XO>0</XO>
									<YS>0.75</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<Rect2D name="SliceCenter">
									<min>
										<X>0</X>
										<Y>0</Y>
									</min>
									<max>
										<X>0</X>
										<Y>0</Y>
									</max>
								</Rect2D>
								<float name="SliceScale">1</float>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UDim2 name="TileSize">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="TextLabel" referent="RBX5B29E1E347F34B21B4A5BDEAC64F404F">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0.5</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
						</Font>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<string name="LocalizationMatchIdentifier"></string>
						<string name="LocalizationMatchedSourceText"></string>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">BetaInfo</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<string name="OpenTypeFeatures"></string>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>0</XO>
							<YS>0.00903614424</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0.899999976</XS>
							<XO>0</XO>
							<YS>0.0355421677</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">Thank you for BETA testing Vibe Coder. Please report any issues/feedback to keewinek@gmail.com.</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<token name="TextDirection">0</token>
						<bool name="TextScaled">true</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0.5</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">true</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
				<Item class="Frame" referent="RBXEFC3F14541924EADACBC72318C99642E">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.117647059</R>
							<G>0.117647059</G>
							<B>0.117647059</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">BuyProFrame</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Visible">false</bool>
						<int name="ZIndex">8</int>
					</Properties>
					<Item class="ImageLabel" referent="RBX83F638D27F0F4545B6F8BC2149FB23A1">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>rbxassetid://115853486982676</url></Content>
							<Color3 name="ImageColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">ImageLabel</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.222636372</XS>
								<XO>0</XO>
								<YS>0.0271084346</YS>
								<YO>0</YO>
							</UDim2>
							<token name="ResampleMode">0</token>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<token name="ScaleType">3</token>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.596456707</XS>
								<XO>0</XO>
								<YS>0.191987902</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<Rect2D name="SliceCenter">
								<min>
									<X>0</X>
									<Y>0</Y>
								</min>
								<max>
									<X>0</X>
									<Y>0</Y>
								</max>
							</Rect2D>
							<float name="SliceScale">1</float>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UDim2 name="TileSize">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="Visible">true</bool>
							<int name="ZIndex">8</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBXF763AC0359EE420D80632E563A68542D">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">Header</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.0811600089</XS>
								<XO>0</XO>
								<YS>0.218373492</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.834194362</XS>
								<XO>0</XO>
								<YS>0.176204816</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">You have discovered an Vibe Coder PRO feature.</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">8</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBXB3BF47F7522B40D7876CF1605509EB66">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">Paragraph</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.0850794911</XS>
								<XO>0</XO>
								<YS>0.409638554</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.868840098</XS>
								<XO>0</XO>
								<YS>0.213855416</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text"><![CDATA[With Vibe Coder PRO you can:

• Send unlimited messages.
• Use all available language models such as GPT-4o and Claude 4 Sonnet.
• Use 100% of AI's thinking power.]]></string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0.25</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">8</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBXB33B78AD01894AA184E050531DBFDAC1">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">Paragraph</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.0868525654</XS>
								<XO>0</XO>
								<YS>0.701807201</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.868840098</XS>
								<XO>0</XO>
								<YS>0.0542168692</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">In order to unlock Vibe Coder PRO, buy gamepass that is available at the following link:</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0.25</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">8</int>
						</Properties>
					</Item>
					<Item class="TextBox" referent="RBXF92429F826794CD79476A744EA91110D">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.156862751</R>
								<G>0.156862751</G>
								<B>0.156862751</B>
							</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClearTextOnFocus">false</bool>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<bool name="MultiLine">false</bool>
							<string name="Name">GamepassLinkInput</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<Color3 name="PlaceholderColor3">
								<R>0.699999988</R>
								<G>0.699999988</G>
								<B>0.699999988</B>
							</Color3>
							<string name="PlaceholderText">NO LINK</string>
							<UDim2 name="Position">
								<XS>0.0811600238</XS>
								<XO>0</XO>
								<YS>0.766566277</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<bool name="ShowNativeInput">true</bool>
							<UDim2 name="Size">
								<XS>0.834194362</XS>
								<XO>0</XO>
								<YS>0.0798192769</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">https://www.roblox.com/game-pass/1298233970</string>
							<Color3 name="TextColor3">
								<R>0.678431392</R>
								<G>0.494117677</G>
								<B>0.956862807</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextEditable">false</bool>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">8</int>
						</Properties>
						<Item class="UICorner" referent="RBXFB0B5A6B44B146DC836D5B021A7CD04F">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<UDim name="CornerRadius">
									<S>0</S>
									<O>8</O>
								</UDim>
								<bool name="DefinesCapabilities">false</bool>
								<string name="Name">UICorner</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="TextLabel" referent="RBX36349E866C6D4E339A9F34097300E0FC">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">Paragraph</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.0868525133</XS>
								<XO>0</XO>
								<YS>0.858433723</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.828041196</XS>
								<XO>0</XO>
								<YS>0.0180722885</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">Copy this link and paste it in your browser.</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0.75</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">8</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX6C2BAAD018F54F8190DA600FD417BEC5">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">Paragraph</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.0868524835</XS>
								<XO>0</XO>
								<YS>0.885542154</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.82850194</XS>
								<XO>0</XO>
								<YS>0.0223202705</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">IMPORTANT: Restart Roblox Studio after purchase.</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>0.674509823</G>
								<B>0.674509823</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>1</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0.25</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">8</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX14E6A9E34536493084A23E43F3B3DB8A">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoButtonColor">true</bool>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
								<Weight>400</Weight>
								<Style>Normal</Style>
							</Font>
							<Ref name="HoverHapticEffect">null</Ref>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<bool name="Modal">false</bool>
							<string name="Name">CloseButton</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.549645364</XS>
								<XO>0</XO>
								<YS>0.959337354</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="PressHapticEffect">null</Ref>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<bool name="Selected">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.365248233</XS>
								<XO>0</XO>
								<YS>0.0256024096</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">I am not interested.</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0.75</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">1</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">8</int>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Frame" referent="RBX23EFB254E60147C7B2C37F27AF41D9AC">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0.5</X>
						<Y>1</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>0.345098048</R>
						<G>0.427451015</G>
						<B>0.490196109</B>
					</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">
						<R>0</R>
						<G>0</G>
						<B>0</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="ClipsDescendants">false</bool>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Draggable">false</bool>
					<bool name="Interactable">true</bool>
					<int name="LayoutOrder">0</int>
					<string name="Name">SystemBubble</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0.5</XS>
						<XO>0</XO>
						<YS>0.0624782071</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<int name="SelectionOrder">0</int>
					<UDim2 name="Size">
						<XS>0.850000024</XS>
						<XO>0</XO>
						<YS>0.25</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="TextLabel" referent="RBX2733A68E2FA248BC909129398ADA5946">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0.5</X>
							<Y>0.5</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/FredokaOne.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
						</Font>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<float name="LineHeight">1</float>
						<string name="LocalizationMatchIdentifier"></string>
						<string name="LocalizationMatchedSourceText"></string>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="Name">ContentLabel</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<string name="OpenTypeFeatures"></string>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>0</XO>
							<YS>0.5</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="RichText">false</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0.899999976</XS>
							<XO>0</XO>
							<YS>0.949999988</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<string name="Text">System</string>
						<Color3 name="TextColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<token name="TextDirection">0</token>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0.5</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">true</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="ModuleScript" referent="RBXFDF30E1EE0D04369BE9FE92436112A4A">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">WidgetModelSelectFrameOpener</string>
				<string name="ScriptGuid">{A44C0215-2ECD-41A7-9010-27F2AE318FF9}</string>
				<ProtectedString name="Source">--[[ v1.0.0 https://wearedevs.net/obfuscator ]] return(function(...)local D={&quot;\110\056\112\113\057\056\110\078\075\070\077\109\054\056\110\117\054\056\110\102\075\088\061\061&quot;,&quot;\089\076\068\052\087\122\061\061&quot;,&quot;\077\079\115\106\082\109\065\081\106\102\119\050\082\105\109\112&quot;,&quot;\090\113\082\118\114\055\061\061&quot;;&quot;\087\050\086\078\082\116\069\117\068\087\102\055\079\068\114\050\073\053\112\054\102\078\053\107\047\078\054\069\087\079\049\061&quot;,&quot;\057\083\110\079\054\120\085\101\108\081\110\098\054\110\052\071\057\071\112\113\065\088\061\061&quot;;&quot;\108\081\112\079\104\122\061\061&quot;,&quot;\057\099\043\100\055\097\118\113\043\048\057\116\101\043\089\114&quot;;&quot;\083\099\075\116\085\087\081\105\057\088\119\120\100\073\061\061&quot;,&quot;\055\073\088\054\071\103\086\078\079\086\085\105\114\118\075\098\111\055\061\061&quot;,&quot;\077\056\110\111\054\067\076\069\121\088\061\061&quot;;&quot;\097\073\061\061&quot;;&quot;\089\122\089\074&quot;,&quot;\089\083\076\067\065\053\052\047\082\089\086\066&quot;,&quot;\065\107\110\116\077\111\119\075\054\099\065\099\074\070\051\115&quot;;&quot;\120\107\052\115\108\071\077\109\121\122\061\061&quot;;&quot;\088\109\110\075\054\090\072\050\097\067\085\097\057\081\113\112\074\055\061\061&quot;;&quot;\054\081\047\055\082\081\072\050&quot;,&quot;\065\077\082\114\089\113\111\070\101\114\112\052\057\053\115\075\076\098\069\047\088\055\061\061&quot;;&quot;\072\067\054\088\077\056\047\053\121\105\072\090\104\083\072\065\108\073\061\061&quot;;&quot;\074\050\048\121\076\122\110\099\101\048\110\076\080\116\071\102\097\112\077\075\100\118\116\083\049\113\099\078\109\069\049\061&quot;,&quot;\069\116\043\081\110\052\111\102\106\102\105\107\117\049\067\103&quot;,&quot;\113\057\118\052\075\105\057\099&quot;;&quot;\104\081\112\107\077\102\112\104\121\120\076\089\072\112\077\065\089\120\106\061&quot;;&quot;\120\107\052\105\082\055\061\061&quot;,&quot;\100\119\079\057\088\081\102\100\056\055\106\077&quot;;&quot;\077\101\084\048\078\102\115\075&quot;,&quot;\108\056\110\098&quot;;&quot;\088\083\052\098\108\071\110\117\054\122\061\061&quot;;&quot;\114\076\080\122\116\078\109\065\056\047\087\068\047\079\106\074\087\074\070\061&quot;;&quot;\105\049\112\114\106\109\081\055\049\119\090\089\050\120\071\074\087\056\054\112\050\047\087\061&quot;;&quot;\122\068\105\079\109\118\077\121\051\055\061\061&quot;,&quot;\116\084\070\054\113\082\111\048\087\111\081\082\117\049\085\113\051\116\103\080\068\115\075\071\071\043\050\047\080\068\109\108\067\048\073\073\099\076\049\061&quot;,&quot;\049\110\051\087\121\079\067\090&quot;;&quot;\073\109\104\099\118\121\048\085\109\068\101\114\105\112\056\085\097\105\108\111\051\087\048\061&quot;;&quot;\067\108\111\090\078\053\052\048&quot;,&quot;\057\090\077\078\104\081\047\105&quot;,&quot;\072\070\088\107\081\117\109\104\088\105\110\118\104\083\107\117\057\088\061\061&quot;,&quot;\067\071\069\055\072\079\116\116\117\073\061\061&quot;,&quot;\057\105\112\117\108\102\072\079\081\105\065\105\074\102\076\071\097\081\112\074&quot;;&quot;\065\090\072\107\082\073\061\061&quot;,&quot;\052\078\078\098\097\073\068\118\102\110\069\082\072\090\069\050\089\088\061\061&quot;;&quot;\085\085\083\100&quot;,&quot;\065\083\112\113\065\088\061\061&quot;;&quot;\108\116\075\061&quot;;&quot;\043\056\057\076\099\076\085\108\090\069\056\049\109\090\051\120\106\097\111\085\066\055\061\061&quot;,&quot;\074\100\119\043\097\116\052\071\073\117\049\103\117\111\057\078\070\106\100\050\121\102\102\061&quot;,&quot;\057\083\110\079\108\081\110\079\082\120\077\119\082\071\051\109&quot;;&quot;\069\104\072\054\113\053\099\089&quot;,&quot;\073\052\090\111\081\122\061\061&quot;,&quot;\090\122\086\109\118\052\066\065\104\101\110\078\118\069\087\072\067\053\055\108\076\085\053\087\088\055\110\107\073\121\106\061&quot;,&quot;\085\106\071\083\097\106\055\054\109\086\065\057\106\082\066\057&quot;;&quot;\087\071\065\110\072\048\111\052\101\099\087\068\086\057\118\099\099\052\116\090\089\076\122\111\074\047\053\110&quot;,&quot;\057\083\072\078\104\120\085\079&quot;;&quot;\083\069\067\116\088\083\112\085&quot;;&quot;\084\114\099\110\048\111\076\087\111\103\056\078\081\070\097\071\117\102\072\097\050\117\122\066\100\053\057\075&quot;,&quot;\054\056\052\111\054\067\076\115\108\071\057\061&quot;,&quot;\080\118\070\114\107\103\080\115\111\087\120\111\101\114\048\061&quot;,&quot;\110\109\065\116\110\083\065\081\088\107\112\119\110\083\054\055&quot;;&quot;\047\085\108\065\079\106\078\108\056\077\121\080\078\119\121\111\072\110\100\055\113\054\073\069\056\052\116\069\066\122\088\061&quot;;&quot;\105\075\117\113\103\077\049\084&quot;,&quot;\043\067\066\100\071\117\048\070&quot;;&quot;\082\119\080\054&quot;,&quot;&quot;,&quot;\074\117\076\089\121\089\052\112\108\105\112\113\089\081\054\112&quot;,&quot;\115\084\101\069\106\051\084\100\117\072\116\121\115\056\087\061&quot;;&quot;\072\109\077\100\104\056\110\081\108\117\072\100\106\120\054\069\072\117\070\061&quot;;&quot;\088\110\077\087\054\107\115\112\110\099\102\090\108\099\085\065&quot;;&quot;\108\116\070\061&quot;;&quot;\065\071\051\069\108\090\075\061&quot;;&quot;\088\081\076\071\054\105\119\082\081\071\072\099\057\122\061\061&quot;,&quot;\118\068\056\107&quot;,&quot;\120\107\052\113\065\120\077\119\054\056\112\043\108\056\089\061&quot;,&quot;\113\047\109\116\101\089\087\083&quot;;&quot;\100\066\098\090\076\065\106\109\117\088\061\061&quot;;&quot;\071\098\056\049\071\107\105\056&quot;,&quot;\110\076\098\116\080\122\061\061&quot;,&quot;\077\083\110\079\088\083\119\115\108\056\077\078\065\081\084\061&quot;;&quot;\108\117\110\107\108\105\119\076\077\109\065\118\108\102\051\053\077\111\073\061&quot;;&quot;\099\083\051\049\108\071\079\051\057\107\110\077\077\070\110\074\088\055\061\061&quot;,&quot;\082\075\119\074\052\101\084\104\121\080\076\118&quot;,&quot;\104\081\055\107\054\116\119\051\057\110\085\080\099\070\115\090&quot;,&quot;\074\067\047\121\057\068\076\072\115\069\047\075\111\122\043\114\115\103\088\061&quot;,&quot;\113\110\080\097\071\048\106\099\114\071\067\103\085\072\054\104\050\088\069\089\113\119\101\050\120\107\097\103\050\067\074\073\050\114\120\070\067\066\111\105\048\113\110\103\107\121\085\048\047\082\097\084\076\086\116\120\082\076\081\071\101\073\052\088\104\078\047\083\070\102\108\111\117\109\099\116\068\075\119\050\052\067\122\048\081\068\067\109\076\109\089\083\104\085\104\070\065\075\070\088\119\107\087\085&quot;,&quot;\077\070\113\112\089\089\051\104\072\056\107\104\081\117\072\110&quot;;&quot;\080\117\072\075&quot;;&quot;\087\043\087\120\070\053\113\106\075\073\061\061&quot;;&quot;\057\071\112\098\065\056\052\113&quot;,&quot;\110\103\073\050&quot;;&quot;\054\056\112\111\104\055\061\061&quot;;&quot;\101\072\078\065\075\066\116\055&quot;,&quot;\068\118\080\054\120\084\051\052\097\114\057\078\069\112\122\048\104\088\061\061&quot;,&quot;\076\113\072\051\107\070\074\108\104\122\061\061&quot;,&quot;\057\071\110\051\054\081\109\078\065\088\061\061&quot;,&quot;\077\083\110\079\089\083\110\078\054\071\109\117\065\088\061\061&quot;,&quot;\082\108\113\102&quot;;&quot;\080\074\113\112\107\067\068\071&quot;,&quot;\120\072\083\050\090\069\112\054&quot;;&quot;\077\056\118\108\070\056\112\101&quot;,&quot;\057\108\118\119&quot;,&quot;\057\071\110\113\108\090\065\109&quot;;&quot;\077\102\073\090\097\067\049\078\088\105\065\098\074\111\109\087\110\055\061\061&quot;;&quot;\070\050\067\065\048\109\102\055\048\099\043\049\070\111\100\087\053\052\054\049\114\106\088\061&quot;,&quot;\069\047\050\118&quot;,&quot;\115\067\053\119\116\078\111\081\114\102\114\080\109\071\077\080\117\073\065\118\111\055\061\061&quot;,&quot;\066\074\077\053\069\055\061\061&quot;,&quot;\085\068\057\051\106\085\121\054\074\057\077\049&quot;;&quot;\112\076\107\066\111\113\049\121\051\088\061\061&quot;,&quot;\106\056\113\083\104\056\052\047\054\122\061\061&quot;;&quot;\097\077\043\073\054\113\050\083\090\119\047\109&quot;;&quot;\076\111\110\047&quot;;&quot;\054\083\047\119\077\079\052\070\099\056\107\097\074\070\115\104&quot;;&quot;\082\083\052\098\082\083\112\079&quot;;&quot;\110\077\111\114\071\102\076\120\054\084\081\107&quot;,&quot;\057\083\110\079\054\120\085\101\108\081\052\102\065\081\051\101\057\083\110\087\065\081\072\079\120\083\065\078\082\081\107\109&quot;,&quot;\111\054\074\072\103\122\061\061&quot;;&quot;\065\083\107\119\054\056\072\049&quot;;&quot;\072\066\069\083\047\104\110\079\122\073\103\065&quot;;&quot;\065\120\076\078\108\090\075\061&quot;;&quot;\097\056\065\090\110\120\054\115\099\110\072\047\065\079\054\070\072\073\061\061&quot;;&quot;\077\081\047\107\108\088\061\061&quot;,&quot;\099\111\076\102\119\114\097\113\121\107\101\119\055\105\053\075\109\100\067\055\075\116\056\100\085\102\082\061&quot;;&quot;\097\102\079\082&quot;;&quot;\056\099\101\057&quot;;&quot;\065\102\112\067\110\090\054\118\065\071\076\080&quot;,&quot;\057\067\076\115\108\105\088\061&quot;,&quot;\078\067\055\065&quot;,&quot;\048\114\089\122\117\080\081\108&quot;,&quot;\054\056\112\043\108\056\089\061&quot;,&quot;\089\099\054\109\057\067\073\084\104\112\115\050\110\071\076\079\054\088\061\061&quot;;&quot;\047\082\087\073&quot;,&quot;\117\098\120\117\115\116\086\113\100\070\107\073\085\043\102\121\076\055\061\061&quot;;&quot;\115\101\099\087\111\057\087\101&quot;,&quot;\082\083\119\119\057\073\061\061&quot;;&quot;\057\071\114\066&quot;,&quot;\057\089\065\055\077\120\075\078\057\111\119\100\072\102\115\055\110\055\061\061&quot;;&quot;\112\072\081\057\073\117\101\105\057\114\080\047\101\076\118\114\072\055\049\084\085\112\102\061&quot;;&quot;\081\121\043\055\073\055\061\061&quot;;&quot;\120\107\052\087\065\081\084\061&quot;,&quot;\090\074\116\100\113\103\108\056&quot;;&quot;\110\111\109\080\083\073\119\116\083\084\090\097\111\088\104\097&quot;,&quot;\119\105\054\051\056\105\109\076\097\052\109\104\078\117\067\054\120\066\081\103\122\121\056\078&quot;,&quot;\056\052\071\117\050\082\109\089&quot;,&quot;\104\120\085\119\104\120\076\111&quot;,&quot;\074\079\075\107\110\117\110\080\099\079\047\107\108\112\122\084\108\088\061\061&quot;,&quot;\075\122\106\121\122\104\119\051\098\087\047\103&quot;;&quot;\107\069\108\100&quot;;&quot;\054\056\052\098\054\081\107\043\065\120\075\061&quot;,&quot;\072\066\047\113\074\108\048\120\082\055\061\061&quot;;&quot;\053\057\109\101\073\050\100\053\073\056\069\081\052\098\048\098\101\113\043\074\113\055\061\061&quot;;&quot;\051\115\090\102\117\088\072\069\102\097\068\118&quot;;&quot;\098\089\052\082\110\120\082\078\051\052\048\076&quot;,&quot;\108\049\066\106\073\080\107\121\116\097\087\110\066\115\043\107&quot;;&quot;\054\079\054\113\108\111\054\084\065\117\110\084\065\109\076\051&quot;;&quot;\067\121\106\069&quot;;&quot;\052\085\054\056\067\088\085\083\108\055\080\073&quot;;&quot;\082\105\109\079\065\088\061\061&quot;,&quot;\077\076\050\110\086\067\106\098\073\120\089\118&quot;,&quot;\117\068\097\087\089\090\102\079\108\120\115\084\081\122\061\061&quot;,&quot;\057\056\072\119\108\056\055\061&quot;;&quot;\097\043\073\109\065\053\049\115\097\073\061\061&quot;}for p,K in ipairs({{277136-277135;743994-743833};{429736+-429735;844115-844075};{-1046631+1046672;838758+-838597}})do while K[469364+-469363]&lt;K[-786159+786161]do D[K[-135663-(-135664)]],D[K[860010-860008]],K[510702-510701],K[-212350-(-212352)]=D[K[723719-723717]],D[K[752668-752667]],K[-804210-(-804211)]+(747225-747224),K[-935463+935465]-(359018-359017)end end local function p(p)return D[p+(257708+-222792)]end do local p=string.sub local K=type local Y=string.len local i=table.concat local a={E=286469+-286422,f=-972135+972171;L=979783-979774;d=-196862+196904;j=644819+-644807,k=-375978+376031;[&quot;\047&quot;]=-834635-(-834692),T=672476+-672420,m=-283367-(-283404);b=-93450+93496,M=-805445+805462;x=-1030570+1030593;A=-546564+546589,[&quot;\050&quot;]=539465-539422;S=-197783+197837;Q=-878405-(-878427),O=237246-237194,I=252123-252091,[&quot;\055&quot;]=1023906-1023858,z=-438087+438087;W=-302593+302637;R=18228+-18204;y=-334972+335002;a=502897-502883,H=-79192-(-79205);X=-6080-(-6096);r=175096-175037;[&quot;\052&quot;]=634462-634401,c=493372+-493353,e=762617-762586;n=-570872+570893;[&quot;\053&quot;]=-1023643+1023645;K=349721+-349713,N=-85919-(-85969);q=794445-794400,G=-654003-(-654041);[&quot;\057&quot;]=-723530-(-723558);w=230883+-230850,t=279323+-279320;[&quot;\054&quot;]=-7077-(-7106);v=-184840+184898,o=462366-462315,[&quot;\056&quot;]=-592782+592788;Y=484085-484065;i=-394232+394271;P=-1033266-(-1033276),s=-476171+476212;g=633699+-633636,[&quot;\048&quot;]=267351-267291;J=290049+-290031;p=-565302-(-565307);h=635931-635905,F=-649836+649840;B=349192-349177;l=20957-20930;C=524126-524119,Z=954129+-954074;U=723633-723632;[&quot;\049&quot;]=505641+-505601,u=-899526-(-899561),V=357015-356953,[&quot;\043&quot;]=-128619+128653,[&quot;\051&quot;]=680267+-680218;D=-547840+547851}local O=table.insert local G=math.floor local J=D local x=string.char for D=395547+-395546,#J,795069+-795068 do local t=J[D]if K(t)==&quot;\115\116\114\105\110\103&quot;then local K=Y(t)local A={}local Q=-73518-(-73519)local b=521715+-521715 local q=188432-188432 while Q&lt;=K do local D=p(t,Q,Q)local Y=a[D]if Y then b=b+Y*(-909524+909588)^((194074-194071)-q)q=q+(841173+-841172)if q==178452+-178448 then q=118521+-118521 local D=G(b/(-668490-(-734026)))local p=G((b%(551250+-485714))/(433932+-433676))local K=b%(-634352+634608)O(A,x(D,p,K))b=887767+-887767 end elseif D==&quot;\061&quot;then O(A,x(G(b/(-703390+768926))))if Q&gt;=K or p(t,Q+(10801+-10800),Q+(808647+-808646))~=&quot;\061&quot;then O(A,x(G((b%(-879665-(-945201)))/(-58161+58417))))end break end Q=Q+(193314-193313)end J[D]=i(A)end end end return(function(D,Y,i,a,O,G,J,M,t,m,x,b,q,I,s,A,u,c,U,Q,K,F,j)F,u,K,c,M,m,x,U,Q,b,q,I,j,A,t,s=function(D,p)local Y=b(p)local i=function(...)return K(D,{...},p,Y)end return i end,function(D,p)local Y=b(p)local i=function()return K(D,{},p,Y)end return i end,function(K,i,a,O)local J,g,q,y,r,k,E,W,e,N,n,f,V,d,b,Z,Q,z,t,H,h,R,X,C,w,B,o,S,L,P,T,v,F,l while K do if K&lt;8649417-(-58044)then if K&lt;5487685-254511 then if K&lt;-796755+2494197 then if K&lt;1197021-330114 then if K&lt;328359-(-366985)then if K&lt;409218-(-156895)then if K&lt;-407788+709676 then Q=x[a[99744-99743]]V=9041531728424-(-761418)R=p(-882718+847933)q=x[a[-874455-(-874457)]]F=x[a[344840+-344837]]r=F(R,V)b=q[r]r=p(-776020+741107)t=Q[b]T=p(-378861+344084)b=x[a[815463+-815461]]z=4181824840175-72276 R=21866011553289-804419 q=x[a[651001+-650998]]F=q(r,R)Q=b[F]J=t[Q]Q=x[a[336853-336851]]b=x[a[-440380+440383]]r=-318682+3132509643404 F=p(429587+-464358)q=b(F,r)t=Q[q]F=2191516600632-705852 K=J[t]t=x[a[278948-278946]]q=p(-276388+241599)Q=x[a[425946-425943]]b=Q(q,F)J=t[b]r=x[a[-968879+968880]]V=x[a[-738055+738057]]n=x[a[-702705-(-702708)]]P=n(T,z)R=V[P]T=14657488606327-(-99890)P=p(996640+-1031430)F=r[R]R=x[a[-827495-(-827497)]]V=x[a[-283488+283491]]n=V(P,T)P=-312385+15786338148600 r=R[n]q=F[r]r=x[a[-48109+48111]]R=x[a[237090-237087]]n=p(557640+-592470)V=R(n,P)F=r[V]b=q[F]F=x[a[808441+-808439]]r=x[a[109713-109710]]V=p(251531+-286368)n=19402265694499-60889 R=r(V,n)q=F[R]Q=b[q]t=not Q K[J]=t K=D[p(-632222-(-597330))]J={}else K=x[a[904954-904953]]K=K and 210624+8574227 or 820252+8976485 end else f=c(f)E=c(E)d=c(d)X=c(X)N=nil K=-897701+7380848 k=c(k)L=c(L)end else if K&lt;318103+523648 then if K&lt;245014-(-503945)then Q=p(159691-194603)b=-592074+14073765 J=1523062-282610 t=Q^b K=J-t t=K J=p(394183-429019)K=J/t J={K}K=D[p(-46453+11615)]else Q=x[a[-49872+49873]]q=x[a[360403+-360401]]F=x[a[633621+-633618]]R=p(-778361-(-743519))V=17694980603882-(-516165)r=F(R,V)b=q[r]t=Q[b]b=x[a[-34161+34163]]R=-856351+969311605474 r=p(-257208-(-222318))q=x[a[637564-637561]]F=q(r,R)Q=b[F]F=p(268676-303526)J=t[Q]Q=x[a[929620+-929618]]r=-198750+6232327050164 b=x[a[588057+-588054]]T=p(-336932-(-302035))q=b(F,r)t=Q[q]K=J[t]q=p(990113-1024881)t=x[a[307286+-307284]]F=326460+8498087269433 z=-835358+10035616289119 Q=x[a[-397411-(-397414)]]b=Q(q,F)J=t[b]r=x[a[-303492-(-303493)]]V=x[a[849714+-849712]]n=x[a[442264+-442261]]P=n(T,z)R=V[P]F=r[R]P=p(-216008-(-181243))R=x[a[893662-893660]]T=350340+11032062835597 V=x[a[-873113-(-873116)]]n=V(P,T)r=R[n]q=F[r]r=x[a[736754-736752]]R=x[a[219477+-219474]]P=-48389+28839975154042 n=p(-233493+198612)V=R(n,P)F=r[V]b=q[F]n=19077148276505-332902 V=p(-797558-(-762757))F=x[a[-687427+687429]]r=x[a[-199063+199066]]R=r(V,n)q=F[R]Q=b[q]t=not Q K[J]=t K=D[p(-888953-(-854080))]J={}end else K=true K=K and 36155+13646476 or 14505991-847403 end end else if K&lt;958476-(-77616)then if K&lt;1219739-258498 then if K&lt;306360+577467 then S=x[Q]J=S K=S and 7042298-1031891 or 999436+7589456 else J=-87370+6155731 b=16334074-319505 Q=p(72052+-106857)t=Q^b K=J-t t=K J=p(258027+-292794)K=J/t J={K}K=D[p(-124611+89803)]end else r=x[F]J=r K=10516620-805643 end else if K&lt;965855-(-479981)then if K&lt;-725021+2012495 then K=p(725799+-760664)K=F[K]K=K(F)K=114016+2240605 else K=560727+288202 end else K=-345887+15573963 R=nil r=nil q=nil end end end else if K&lt;138920+3529130 then if K&lt;1593171-(-740449)then if K&lt;1179110-(-972807)then if K&lt;2716086-756554 then b=-844723-(-844724)Q=x[a[-25589-(-25592)]]t=Q~=b K=t and 13292472-14878 or 601719+9550802 else b=-572892-(-573125)Q=x[a[302777+-302775]]t=Q*b Q=-745569+33071761988744 J=t+Q t=35184372005151-(-83681)K=J%t x[a[-371240-(-371242)]]=K Q=-380102+380103 t=x[a[-643420-(-643423)]]K=9232911-(-919610)J=t~=Q end else Q=c(Q)R=c(R)b=c(b)q=c(q)Q=nil P=c(P)V=nil n=c(n)V=p(-240078-(-205170))z=nil P=A()b=nil B=nil H=c(H)r=nil q=A()R=p(824463+-859332)F=c(F)v=nil x[q]=Q r=p(-665119-(-630250))v={}Q=A()x[Q]=b F=D[r]n=p(377178-412017)r=p(-849377+814571)T=nil b=F[r]F=A()T={}x[F]=b r=D[R]R=p(-116238-(-81450))b=r[R]R=D[V]V=p(-19382-15393)B=137305-137304 H=328510+-328254 r=R[V]o=H V=D[n]n=p(752941+-787844)R=V[n]V=-396594+396594 n=A()x[n]=V K=15205668-945857 V=-637943+637945 x[P]=V V={}z=A()x[z]=T T=-220395+220395 H=-443630-(-443631)d=H H=181977-181977 E=d&lt;H H=B-d end else if K&lt;-403939+3086528 then if K&lt;1624446-(-850042)then K=7540003-(-403115)q=nil F=nil else K=411858+15915448 end else o=-233101+233101 H=#v B=H==o K=B and-896241+12665838 or 11683252-(-585599)end end else if K&lt;-830735+5236320 then if K&lt;-1029605+5254359 then if K&lt;4756935-666094 then Z=x[Q]S=Z K=Z and 7817900-(-886240)or-511134+6004094 else b=p(-1018203+983364)K=true t=i Q=A()R=p(-690529+655652)x[Q]=K J=D[b]b=p(793480-828239)K=J[b]b=A()x[b]=K q=A()K=U(-52587+9338759,{})x[q]=K K=false F=A()x[F]=K r=D[R]V=I(190927+4073587,{F})R=r(V)J=R K=R and 200737-(-782775)or 10595191-884214 end else K=true x[a[-899235+899236]]=K J={}K=D[p(-706579-(-671723))]end else if K&lt;-361030+5550036 then if K&lt;-630303+5442400 then t=p(205536+-240293)b=-160547+160547 K=D[t]Q=x[a[-594591-(-594599)]]t=K(Q,b)K=-1025914+14601056 else b=p(-139681-(-104895))J=D[b]q=x[a[806337+-806336]]F=x[a[825671+-825669]]R=p(351725+-386495)V=22931273150909-608263 P=3753875131586-(-80402)r=F(R,V)b=q[r]K=J[b]b=.1 J=K(b)q=x[a[-88240-(-88243)]]r=x[a[56033-56032]]R=x[a[-327151-(-327153)]]n=p(-1048372-(-1013519))V=R(n,P)F=r[V]n=-444261+20103981149174 b=q[F]F=x[a[-360564-(-360565)]]V=p(-475409+440507)r=x[a[1110+-1108]]R=r(V,n)q=F[R]R=p(-540338-(-505451))J=b[q]V=-999117+33888168639601 q=x[a[382782+-382781]]F=x[a[-533781+533783]]r=F(R,V)b=q[r]K=J[b]b=x[a[-346845-(-346846)]]r=p(-251494+216650)R=-408016+27697515899953 q=x[a[553619+-553617]]F=q(r,R)J=b[F]b=false K[J]=b K=11829481-112815 end else k=-424349-(-424604)d=A()h=214943-214943 f=564170-564070 x[d]=g E=p(-614909+580040)w=p(-447673-(-412854))J=D[E]E=p(-3350-31438)N=-740415+740417 K=J[E]E=589123+-589122 J=K(E,f)f=-358176-(-358176)E=A()x[E]=J K=x[R]J=K(f,k)k=247994+-247993 f=A()x[f]=J K=x[R]L=x[E]J=K(k,L)k=A()x[k]=J X=-949850-(-949851)J=x[R]L=J(X,N)J=-437373+437374 K=L==J L=A()x[L]=K e=-622375+632375 N=p(834702+-869566)Z=D[w]K=p(-42085-(-7250))J=p(-43259+8383)C=x[R]K=B[K]l={C(h,e)}w=Z(Y(l))Z=p(885007+-919871)S=w..Z X=N..S K=K(B,J,X)X=A()N=p(-796493+761616)S=m(9763516-163297,{R;d,P;b;Q;H,L;X,E,k,f;n})x[X]=K J=D[N]N={J(S)}K={Y(N)}N=K K=x[L]K=K and-121615+1000756 or 3511327-(-389581)end end end end else if K&lt;6547998-(-598689)then if K&lt;-471922+6420930 then if K&lt;985785+4541449 then if K&lt;973685+4416804 then if K&lt;-760007+6055960 then K=x[a[386054+-386044]]Q=x[a[-970700-(-970711)]]t[K]=Q K=x[a[-186482-(-186494)]]Q={K(t)}K=D[p(-809243-(-774469))]J={Y(Q)}else n=140319-140064 K=x[a[-108569-(-108570)]]Q=b V=555093-555093 R=K(V,n)K=199076+16364182 t[Q]=R Q=nil end else x[Q]=S h=-738076+738077 l=x[k]C=l+h w=N[C]Z=T+w w=269370-269114 K=Z%w T=K C=x[f]w=z+C C=-1015915+1016171 K=1236068-566166 Z=w%C z=Z end else if K&lt;904254+4975293 then if K&lt;4667583-(-1035246)then Q=x[a[-215349+215351]]b=x[a[-1031262-(-1031265)]]K=11226647-401842 t=Q==b J=t else P=p(124732-159590)K=-576106+14415698 n=D[P]J=n end else o=758006-758006 H=#v B=H==o K=12658950-390099 end end else if K&lt;879477+5547177 then if K&lt;5283808-(-818242)then if K&lt;-245317+6251473 then W=x[Q]K=W and 9770103-355020 or 965669+7545498 g=W else Z=K l=536421+-536420 C=N[l]l=false w=C==l K=w and-549347+8311559 or 11527548-(-205801)S=w end else v=p(576667+-611575)z=D[v]v=p(640269+-675127)T=z[v]K=-781133+14823140 n=T end else if K&lt;7046418-(-71793)then if K&lt;6943009-(-107423)then g=g+y J=g&lt;=W d=not o J=d and J d=g&gt;=W d=o and d J=d or J d=281005+4934443 K=J and d J=6526892-570359 K=K or J else t=A()P=p(674148+-708926)x[t]=i[251655-251654]F=x[t]R=x[a[-638065+638066]]T=-238915+11537429199423 V=x[a[560794+-560792]]n=V(P,T)r=R[n]q=F[r]P=25987478506691-(-74370)r=x[a[-627270-(-627271)]]n=p(178153+-213059)R=x[a[-595967-(-595969)]]V=R(n,P)n=-991897+9066305696534 F=r[V]b=q[F]F=x[a[662330-662329]]r=x[a[-1032254+1032256]]V=p(-454275-(-419421))R=r(V,n)q=F[R]V=-60619+4799736395142 Q=b[q]q=x[a[993393+-993392]]R=p(781950-816845)F=x[a[-209828-(-209830)]]r=F(R,V)b=q[r]J=Q[b]b=x[a[-931784-(-931785)]]r=p(365593+-400422)q=x[a[-812398-(-812400)]]R=-123881+20341887617257 F=q(r,R)Q=b[F]K=J[Q]n=764804+22315409194259 V=p(-340529-(-305689))Q=u(-273847+541585,{t;a[373937-373936],a[918586+-918584]})J=p(-578686+543839)J=K[J]J=J(K,Q)b=x[t]F=x[a[158532+-158531]]r=x[a[-966898-(-966900)]]R=r(V,n)q=F[R]Q=b[q]R=p(-668542+633628)V=12267884497959-(-215593)q=x[a[-882596+882597]]F=x[a[536522+-536520]]r=F(R,V)b=q[r]J=Q[b]b=x[a[-25865+25866]]q=x[a[857651+-857649]]R=3919581039454-(-687043)r=p(1036064+-1070931)F=q(r,R)Q=b[F]K=J[Q]J=p(-194076+159229)J=K[J]Q=I(-139658+8922031,{a[473718-473717],a[-856434+856436];t})J=J(K,Q)K=D[p(801727+-836483)]J={}t=c(t)end else R=-661315-(-661570)K={}F=-546155+35184372634987 x[a[459874-459872]]=K J=x[a[995473+-995470]]q=J K=491652+12219019 J=Q%F x[a[-433148-(-433152)]]=J r=Q%R P=-313663+313664 R=609013+-609011 V=p(-315740-(-280901))F=r+R x[a[-720880+720885]]=F R=D[V]V=p(764031-798879)r=R[V]R=r(t)T=P r=p(-974785-(-939973))b[Q]=r r=229502-229283 P=942086-942086 n=R V=922405-922404 z=T&lt;P P=V-T end end end else if K&lt;7482460-(-247862)then if K&lt;-569407+7877035 then if K&lt;7110383-(-142062)then if K&lt;7041810-(-136347)then T=286857+11445600744520 t=i[21091+-21090]Q=i[560371-560369]V=1895526833907-220033 q=x[a[488097-488096]]R=p(-368441-(-333536))F=x[a[643624+-643622]]P=p(-954952-(-920168))r=F(R,V)b=q[r]J=t[b]r=p(330225+-364980)F=D[r]R=x[a[1032064-1032063]]V=x[a[-773212-(-773214)]]n=V(P,T)P=1870630058995-473228 r=R[n]q=F[r]r=x[a[-1016493+1016494]]R=x[a[-504192+504194]]n=p(-1021090-(-986206))V=R(n,P)F=r[V]b=q[F]K=J==b K=K and-771440+15888758 or-406983+7686487 else B=H f=B v[B]=f K=938554+13321257 B=nil end else J={}t=nil Q=nil K=D[p(686320-721179)]end else if K&lt;543409+7124768 then if K&lt;7945108-411534 then K=7458544-179040 else K=M(1951963-522997,{q})W={K()}K=D[p(-946482-(-911673))]J={Y(W)}end else y=p(-309027+274208)K=D[y]d=p(-7995-26812)o=D[d]y=K(o)K=p(12259-47090)D[K]=y K=11056905-374860 end end else if K&lt;9179235-803607 then if K&lt;7922897-(-186109)then if K&lt;206234+7556545 then K=10822766-(-910583)l=-41681+41683 C=N[l]l=x[X]w=C==l S=w else Q,F=b(t,Q)K=Q and 13036611-(-187399)or 11258495-(-608478)end else K=1983705-(-307181)end else if K&lt;-12688+8605846 then if K&lt;9281416-705198 then x[Q]=g K=x[Q]K=K and 986454+7310754 or 13157092-(-854203)else x[Q]=J K=257427+412475 end else w=148553-148552 Z=N[w]S=Z K=6381936-888976 end end end end end else if K&lt;13417219-(-215223)then if K&lt;270883+11450670 then if K&lt;74629+9613343 then if K&lt;-137113+9170886 then if K&lt;8855244-(-109468)then if K&lt;8499391-(-284161)then t=i[214804+-214803]R=p(-1067212-(-1032378))q=x[a[837801-837800]]V=5683175787476-622974 F=x[a[102325-102323]]Q=i[1031894+-1031892]r=F(R,V)T=1383947322781-(-1031399)P=p(743078-777944)b=q[r]J=t[b]r=p(361692+-396447)F=D[r]R=x[a[-202401-(-202402)]]V=x[a[-157898-(-157900)]]n=V(P,T)P=28253098626731-(-402617)r=R[n]n=p(108323-143219)q=F[r]r=x[a[-77872+77873]]R=x[a[771161+-771159]]V=R(n,P)F=r[V]b=q[F]K=J==b K=K and 5870626-694503 or 10710765-(-1005901)else K=D[p(977367-1012161)]J={}end else t=A()P=p(-225907-(-191093))x[t]=i[-130744+130745]F=x[t]R=x[a[-735607+735608]]T=-674771+16996130663101 V=x[a[-175248-(-175250)]]n=V(P,T)r=R[n]P=1047387+33171762397435 q=F[r]r=x[a[511655-511654]]n=p(108771-143543)R=x[a[1022024+-1022022]]V=R(n,P)F=r[V]n=642640+25584903987257 V=p(814622-849490)b=q[F]F=x[a[-150766+150767]]r=x[a[-699846+699848]]R=r(V,n)q=F[R]Q=b[q]T=102883+15522462550617 V=-327169+11923369186225 R=p(323367+-358160)q=x[a[-683607-(-683608)]]F=x[a[-1033623+1033625]]r=F(R,V)b=q[r]R=29879269301426-(-694695)J=Q[b]b=x[a[-959139-(-959140)]]q=x[a[108538+-108536]]n=48647+32898073902544 r=p(-667602-(-632761))F=q(r,R)Q=b[F]K=J[Q]J=p(572038+-606885)Q=M(1550134-717046,{t;a[280304+-280303],a[680837+-680835]})J=K[J]J=J(K,Q)b=x[t]F=x[a[299546-299545]]V=p(-11397+-23452)r=x[a[-354138+354140]]R=r(V,n)q=F[R]V=31972484750199-319823 Q=b[q]q=x[a[232806-232805]]F=x[a[-646774-(-646776)]]R=p(479854+-514687)r=F(R,V)b=q[r]J=Q[b]P=p(24815-59724)b=x[a[657623-657622]]R=21268662942333-(-912434)q=x[a[-759809+759811]]r=p(656072+-690950)F=q(r,R)Q=b[F]K=J[Q]Q=s(-565083+7715335,{a[-804750+804751];a[702120+-702118];a[957815-957812];t})J=p(202052-236899)J=K[J]J=J(K,Q)F=x[t]R=x[a[552590-552589]]V=x[a[937753-937751]]n=V(P,T)r=R[n]n=p(962235-997015)q=F[r]r=x[a[487916-487915]]P=217066+18286100697433 R=x[a[299333-299331]]V=R(n,P)n=27191086078967-(-529790)F=r[V]b=q[F]F=x[a[-452423-(-452424)]]T=-763068+18577172137606 V=p(551030+-585909)r=x[a[-821898+821900]]R=r(V,n)q=F[R]Q=b[q]q=x[a[-157422-(-157423)]]V=19276337837300-(-44572)F=x[a[972811+-972809]]P=p(-998582-(-963803))R=p(-513562-(-478744))r=F(R,V)b=q[r]J=Q[b]b=x[a[291486+-291485]]r=p(15998-50771)R=286957+3205709243623 q=x[a[-645624+645626]]F=q(r,R)Q=b[F]K=J[Q]J=p(-905779+870932)J=K[J]Q=U(14418995-346819,{t,a[-1003286-(-1003287)],a[-981386-(-981388)]})J=J(K,Q)F=x[t]R=x[a[-791252+791253]]V=x[a[732359-732357]]n=V(P,T)P=-490512+19884995420219 r=R[n]q=F[r]n=p(-240748-(-205944))r=x[a[-245256-(-245257)]]R=x[a[513096-513094]]V=R(n,P)F=r[V]b=q[F]n=511258+33094518632216 V=p(-19095+-15667)F=x[a[-490650-(-490651)]]r=x[a[-407413-(-407415)]]R=r(V,n)q=F[R]Q=b[q]q=x[a[798934+-798933]]T=657190343352-1020294 R=p(-1033276-(-998430))F=x[a[-73067-(-73069)]]V=-554092+24809498796428 r=F(R,V)b=q[r]R=933348+28383081592252 J=Q[b]r=p(140712+-175557)P=p(603528+-638422)b=x[a[-3969-(-3970)]]q=x[a[413864+-413862]]F=q(r,R)Q=b[F]K=J[Q]Q=U(12053758-(-365559),{a[-640640-(-640644)];a[370463+-370462];a[-849852+849854];t})J=p(-62576-(-27729))J=K[J]J=J(K,Q)F=x[t]R=x[a[-268514+268515]]V=x[a[-832090-(-832092)]]n=V(P,T)r=R[n]q=F[r]n=p(-620938-(-586075))r=x[a[-228475+228476]]R=x[a[907843-907841]]P=156764+22038685369274 V=R(n,P)F=r[V]b=q[F]F=x[a[-45952-(-45953)]]r=x[a[425141+-425139]]V=p(-358379+323584)n=-275541+27022910727548 R=r(V,n)q=F[R]Q=b[q]R=p(150400+-185255)V=33555263280210-5961 q=x[a[-606603+606604]]F=x[a[621133+-621131]]r=F(R,V)b=q[r]J=Q[b]R=18826798235549-367967 b=x[a[-770111+770112]]r=p(-500529-(-465629))q=x[a[-693117-(-693119)]]F=q(r,R)Q=b[F]K=J[Q]Q=u(1130865-815856,{a[309920-309917];t,a[991209+-991208],a[-82754+82756]})J=p(-170663-(-135816))J=K[J]J=J(K,Q)K=D[p(-455239+420356)]t=c(t)J={}end else if K&lt;10257124-760665 then if K&lt;-977680+10289731 then J=p(-1010644-(-975887))t=p(363711+-398586)K=D[J]J=K(t)K=D[p(-550303+515486)]J={}else W=T==z K=9186397-675230 g=W end else q=-662959-(-662960)Q=x[a[-64311+64312]]F=-46836+46838 b=Q(q,F)Q=-132816+132817 t=b==Q K=t and 10481700-(-343105)or 6583715-951908 J=t end end else if K&lt;10521951-239117 then if K&lt;-549617+10454390 then if K&lt;513883+9235480 then R=p(-77365+42496)r=J J=D[R]R=p(-324147-(-289359))K=J[R]R=A()z=p(394417+-429325)x[R]=K V=p(540645+-575553)J=D[V]V=p(-534562-(-499799))K=J[V]V=K P=K T=D[z]K=T and 841004+5582004 or 13016929-(-1025078)n=T else K=true z=13107201788408-(-413151)x[a[-678401-(-678402)]]=K r=x[a[545976-545974]]V=x[a[424643+-424640]]n=x[a[635230+-635226]]T=p(524196-559023)P=n(T,z)R=V[P]P=p(979470-1014352)T=-829885+266418629177 F=r[R]R=x[a[-1038464+1038467]]V=x[a[37660-37656]]n=V(P,T)r=R[n]q=F[r]r=x[a[-528115-(-528118)]]n=p(-963886-(-929000))P=30272398399665-(-499295)R=x[a[699519-699515]]V=R(n,P)F=r[V]b=q[F]V=p(342588-377404)n=14977832367629-563919 F=x[a[711828+-711825]]z=29116346652298-549268 r=x[a[-462943-(-462947)]]R=r(V,n)V=21564209793684-(-253093)q=F[R]Q=b[q]q=x[a[98165-98162]]R=p(-870000+835138)F=x[a[224017-224013]]r=F(R,V)b=q[r]T=p(-292347-(-257526))t=Q[b]r=p(-984648+949774)b=x[a[-864051-(-864054)]]R=271155+28849037529414 q=x[a[-871024+871028]]F=q(r,R)Q=b[F]J=t[Q]t=J r=x[a[897976-897974]]V=x[a[-727274-(-727277)]]n=x[a[921730+-921726]]P=n(T,z)R=V[P]T=28188+11597211903740 P=p(-289137-(-254350))F=r[R]R=x[a[783978-783975]]V=x[a[604340+-604336]]n=V(P,T)r=R[n]q=F[r]r=x[a[291560-291557]]P=-697645+33108852580710 R=x[a[399102+-399098]]n=p(763863-798629)V=R(n,P)F=r[V]b=q[F]V=p(774314-809185)n=9454436720468-52770 F=x[a[-756931+756934]]r=x[a[314080-314076]]R=r(V,n)V=29883313239835-377024 q=F[R]R=p(-293857-(-258972))Q=b[q]q=x[a[366665-366662]]F=x[a[-583220-(-583224)]]r=F(R,V)b=q[r]R=25115566567049-180442 r=p(-508168+473408)J=Q[b]V=28730773570552-(-979018)b=x[a[347509-347506]]q=x[a[225379+-225375]]F=q(r,R)Q=b[F]q=x[a[-146526-(-146529)]]R=p(-477054+442231)F=x[a[607113-607109]]r=F(R,V)b=q[r]J[Q]=b R=p(292835+-327627)Q=p(-948251+913340)J=D[Q]V=33089022324589-(-68803)q=x[a[-153083+153086]]F=x[a[-790927+790931]]r=F(R,V)b=q[r]V=15826076863861-422060 R=p(-1046580-(-1011737))Q=J(b)Q=p(523443+-558354)J=D[Q]q=x[a[223684-223681]]F=x[a[-696390-(-696394)]]r=F(R,V)b=q[r]Q=J(b)b=p(-997455+962669)Q=D[b]R=p(510279+-545105)q=x[a[832601-832598]]V=-169609+5335883882557 F=x[a[946155+-946151]]r=F(R,V)b=q[r]J=Q[b]b=769257-769256 z=18106488994661-(-812426)Q=J(b)r=x[a[92655+-92653]]V=x[a[-745065+745068]]T=p(203040+-237842)n=x[a[-726142-(-726146)]]P=n(T,z)R=V[P]F=r[R]P=p(940534+-975310)R=x[a[-179952+179955]]V=x[a[-638117-(-638121)]]T=-29790+4523977850008 n=V(P,T)r=R[n]q=F[r]r=x[a[321568-321565]]R=x[a[378899-378895]]P=698682+7525896823926 n=p(-657993+623235)V=R(n,P)n=-506196+15047326602418 F=r[V]b=q[F]F=x[a[-179269-(-179272)]]r=x[a[58946+-58942]]V=p(460378+-495203)R=r(V,n)q=F[R]R=p(839855-874746)Q=b[q]q=x[a[-837030+837033]]V=23101148328510-(-882631)F=x[a[59121-59117]]r=F(R,V)b=q[r]J=Q[b]R=27410893166502-714186 r=p(-731172-(-696300))K=D[p(-708628-(-673727))]b=x[a[570210+-570207]]q=x[a[438584+-438580]]F=q(r,R)Q=b[F]b=t t=nil J[Q]=b J=false x[a[460458+-460457]]=J J={}end else K=-760976+2480079 Q=x[a[-189285-(-189288)]]b=-60602+60657 t=Q*b Q=-147813-(-148070)J=t%Q x[a[881691-881688]]=J end else if K&lt;-481474+11778690 then if K&lt;546796+10247212 then K=-382090+16709396 else K=J and 943188+13163176 or 15831780-317982 end else J={}Q=nil t=nil K=D[p(937421+-972273)]end end end else if K&lt;709064+11830648 then if K&lt;-341112+12551985 then if K&lt;289620+11562250 then if K&lt;-270229+12012652 then J=S K=Z K=-807314+9396206 else H=A()w=nil d=A()B={}E=p(426659-461487)V=nil x[H]=B B=A()o=M(12737023-(-20956),{H;n,P;F})x[B]=o T=nil L=p(244574+-279434)R=nil N=p(-575103-(-540300))F=c(F)o={}x[d]=o f={}o=D[E]X=x[d]v=nil r=nil k={[L]=X;[N]=w}b=nil E=o(f,k)x[q]=E T=p(-65713-(-30856))o=j(13083690-(-56679),{d;H;z;n,P;B})P=c(P)d=c(d)z=c(z)b={}H=c(H)r=p(-89990+55158)n=c(n)B=c(B)x[Q]=o F=D[r]r=p(750844-785625)o=612314+27294447966667 V=x[q]z=-137567+31891878794081 n=x[Q]J={b}K=D[p(-385436+350672)]P=n(T,z)H=p(-968332+933532)R=V[P]T=p(-612478+577656)r=F[r]r=r(F,R)R=p(993834-1028616)F=D[R]P=D[T]z=x[q]v=x[Q]B=v(H,o)T=z[B]H=-14027+24230314009310 B=p(596896-631811)n=P[T]T=x[q]z=x[Q]v=z(B,H)P=T[v]V=n[P]R=F(V)F=A()V=A()x[F]=R R=false n=p(150820+-185581)x[V]=R R=j(131831+6961526,{q,Q})b[n]=R R=j(8323694-(-678255),{q;Q;V,F})n=p(983783+-1018653)b[n]=R end else J={}K=D[p(-567347-(-532486))]end else if K&lt;733155+11775832 then if K&lt;892299+11443638 then o=#v K=594002+2677512 H=109310+-109309 B=b(H,o)H=r(v,B)f=475061-475060 o=x[z]E=H-f B=nil d=R(E)o[H]=d H=nil else J=x[a[-90858-(-90859)]]Q=x[a[-625907+625909]]F=p(212728+-247548)b=x[a[913059+-913056]]r=541701+7945761966703 q=b(F,r)t=Q[q]K=J[t]t=x[a[-795622-(-795626)]]J=K(t)J={}K=D[p(-982468+947677)]end else K=14678643-(-549433)end end else if K&lt;826979+12328444 then if K&lt;12188772-(-729937)then if K&lt;13020564-281807 then v=not z P=P+T V=P&lt;=n V=v and V v=P&gt;=n v=z and v V=v or V v=14986132-605954 K=V and v V=1555292-(-103391)K=K or V else t=x[a[-392570-(-392571)]]J=#t t=-233452-(-233452)K=J==t K=K and 3044220-973376 or-748+14083658 end else t=i[-738533-(-738534)]K=x[a[481478-481477]]b=K Q=i[-848769-(-848771)]K=b[Q]K=K and-225115+12759864 or-341396+7476109 end else if K&lt;-291004+13683156 then if K&lt;129665+13132573 then q=Q z=2190014332346-522687 V=x[a[209767+-209765]]n=x[a[258772-258769]]T=p(-885300-(-850401))P=n(T,z)R=V[P]T=p(-697808+662984)z=32125208100285-(-294066)r=F[R]V=x[a[-280146-(-280148)]]n=x[a[-878687-(-878690)]]P=n(T,z)R=V[P]K=r~=R K=K and 1659792-595335 or 3259037-904416 else b=669807+-669775 Q=x[a[672898-672895]]t=Q%b T=413817-413804 q=x[a[-218131-(-218135)]]n=820135-820133 R=x[a[-810247+810249]]B=x[a[922329+-922326]]v=B-t B=-1010750+1010782 z=v/B P=T-z V=n^P r=R/V T=625836+-625580 V=-363055-(-363056)F=q(r)q=-582023+4295549319 K=13215568-(-867342)b=F%q F=-204126+204128 q=F^t Q=b/q q=x[a[-236394+236398]]R=Q%V V=-969794+4295937090 r=R*V F=q(r)q=x[a[438353-438349]]r=q(Q)b=F+r F=-29699-(-95235)q=b%F n=42153-41897 r=b-q R=541173-475637 F=r/R R=937525-937269 r=q%R V=q-r R=V/n n=-659937+660193 Q=nil V=F%n P=F-V n=P/T q=nil t=nil b=nil F=nil P={r;R,V,n}r=nil x[a[-200195+200196]]=P V=nil R=nil n=nil end else Q=-274330-(-274331)b=x[a[-70954-(-70963)]]q=b K={}b=-620600-(-620601)F=b t=K b=-734709+734709 K=-217388+16780646 r=F&lt;b b=Q-F end end end end else if K&lt;-14795+14522133 then if K&lt;424388+13640491 then if K&lt;13802689-(-50627)then if K&lt;14602878-776027 then if K&lt;13648728-(-28163)then J={}K=D[p(-940121+905310)]else J=p(-575349-(-540518))t=p(776709-811516)K=D[J]J=D[t]t=p(-551849-(-517042))D[t]=K t=p(-667048-(-632217))K=-573718+1422647 D[t]=J t=x[a[-272625+272626]]Q=t()end else n=A()P=-185562+185565 x[n]=J K=x[R]T=-468469+468534 J=K(P,T)P=A()K=-386723-(-386723)v=p(-429066-(-394189))x[P]=J J=D[v]T=K y=p(-461066-(-426247))K=-779288-(-779288)z=K B=u(1411032-504013,{})v={J(B)}K={Y(v)}v=K J=-907882-(-907884)K=v[J]B=K J=p(-925373-(-890484))K=D[J]H=x[b]W=D[y]y=W(B)W=p(861235+-896111)g=H(y,W)H={g()}J=K(Y(H))H=A()x[H]=J g=x[P]J=-284063+284064 W=g g=450134+-450133 y=g g=-147333-(-147333)o=y&lt;g K=6417523-(-65624)g=J-y end else if K&lt;-695057+14720735 then if K&lt;14669236-648705 then K=true K=230445+7410365 else o=p(-338233-(-303402))K=D[o]o=p(322637-357444)D[o]=K K=-256498+10938543 end else J=n K=P K=n and 13927373-87781 or 6618794-769157 end end else if K&lt;14476939-301845 then if K&lt;14926770-834248 then if K&lt;14164261-86202 then T=p(653379+-688194)K=x[a[-40867+40868]]t=x[a[54266+-54264]]q=p(557860+-592748)Q=x[a[-859453-(-859456)]]F=822433+25894881321593 b=Q(q,F)J=t[b]t={}K[J]=t J=p(-1044170-(-1009277))K=D[J]r=x[a[966325-966324]]V=x[a[995781+-995779]]n=x[a[-907741-(-907744)]]z=-825097+11789482093690 P=n(T,z)R=V[P]F=r[R]P=p(-197911-(-163001))T=972884+20201838546027 R=x[a[403197+-403195]]V=x[a[1035834-1035831]]n=V(P,T)r=R[n]q=F[r]P=23882273080670-(-402963)n=p(512493-547303)r=x[a[-9997-(-9999)]]R=x[a[484960+-484957]]V=R(n,P)F=r[V]b=q[F]F=p(-171625-(-136827))F=b[F]q={F(b)}b={K(Y(q))}t=b[-446204+446206]Q=b[788522-788519]J=b[-314524+314525]b=J K=450132+7492986 else b=p(-78259+43351)K=D[p(-999480+964573)]Q=D[b]b=p(-298957-(-264182))t=Q[b]b=x[a[-56964+56965]]Q={t(b)}J={Y(Q)}end else q=p(264595-299414)J=p(-125750-(-90861))n=m(-544801+1261788,{})V=p(385376+-420253)K=D[J]t=x[a[-158576-(-158580)]]b=D[q]R=D[V]V={R(n)}R=-378918+378920 r={Y(V)}F=r[R]q=b(F)b=p(384317-419193)Q=t(q,b)t={Q()}J=K(Y(t))t=J Q=x[a[270257-270252]]J=Q K=Q and 15504469-1045519 or-387103+16971346 end else if K&lt;855204+13569076 then if K&lt;13790034-(-498460)then f=not E H=H+d B=H&lt;=o B=f and B f=H&gt;=o f=E and f B=f or B f=8018625-773160 K=B and f B=6582314-681164 K=K or B else y=p(-68373+33534)W=D[y]K=12035391-(-675280)y=p(898801+-933681)V=P g=W[y]W=g(t,V)V=nil g=x[a[-712376-(-712382)]]y=g()H=W+y B=H+r H=254609+-254353 y=1195+-1194 v=B%H H=b[Q]r=v W=r+y g=q[W]B=H..g b[Q]=B end else K=15836038-(-748205)b=x[a[-64195-(-64201)]]Q=b==t J=Q end end end else if K&lt;732719+15242100 then if K&lt;753787+14759844 then if K&lt;14746240-(-419705)then if K&lt;-326491+15041458 then K=true K=K and 639901+1840187 or 7855534-214724 else b=p(993791+-1028577)V=-694162+21297792941647 J=D[b]q=x[a[-789131-(-789132)]]F=x[a[-1004855+1004857]]R=p(268157+-302956)r=F(R,V)b=q[r]K=J[b]b=.1 J=K(b)K=x[a[893752-893749]]K=K and 15550133-(-24013)or 15783700-(-311917)end else K=D[p(-753079-(-718283))]J={Q}end else if K&lt;-511150+16205843 then if K&lt;-465495+16032800 then K=x[a[144964+-144957]]K=K and-1038838+5635050 or-454203+14029345 else K=false x[a[353237-353234]]=K K=7151785-(-317966)end else o=-809949-(-809955)K=x[R]y=-626022+626023 W=K(y,o)K=p(-463653+428822)D[K]=W o=p(499606-534437)y=D[o]o=318584-318582 K=y&gt;o K=K and 1015204+6657552 or 13930413-(-93102)end end else if K&lt;15975143-(-560472)then if K&lt;15581127-(-754753)then if K&lt;15989190-(-318385)then F=x[a[-182667+182671]]R=x[a[-884706-(-884707)]]T=-565683+33761011572508 V=x[a[-522960+522962]]P=p(-390981+356077)n=V(P,T)P=591079+14138513708240 r=R[n]q=F[r]n=p(-696937-(-662124))r=x[a[1019867+-1019866]]R=x[a[162881+-162879]]V=R(n,P)F=r[V]n=-86312+25217374076678 b=q[F]F=x[a[-571426+571427]]r=x[a[-1006811-(-1006813)]]V=p(-834101-(-799332))R=r(V,n)K=7173528-(-296223)V=185072+4259813881039 q=F[R]R=p(-42480+7697)J=b[q]q=x[a[-903072-(-903073)]]F=x[a[-94502-(-94504)]]r=F(R,V)b=q[r]q=false J[b]=q else K=true K=K and 650162+15321739 or 16968138-542662 end else J={}K=D[p(-393168-(-358371))]end else if K&lt;16799080-222074 then R=not r b=b+F Q=b&lt;=q Q=R and Q R=b&gt;=q R=r and R Q=R or Q R=-638139+5988063 K=Q and R Q=-745820+5991829 K=K or Q else x[a[644271-644266]]=J K=454142+15059656 t=nil end end end end end end end K=#O return Y(J)end,function(D)t[D]=t[D]-(990500+-990499)if t[D]==1044105+-1044105 then t[D],x[D]=nil,nil end end,function(D,p)local Y=b(p)local i=function(i,a,O,G)return K(D,{i,a,O,G},p,Y)end return i end,function(D,p)local Y=b(p)local i=function(i,a,O,G,J)return K(D,{i,a;O,G;J},p,Y)end return i end,{},function(D,p)local Y=b(p)local i=function(i,a)return K(D,{i;a},p,Y)end return i end,1035148+-1035148,function(D)for p=-23522+23523,#D,208230+-208229 do t[D[p]]=t[D[p]]+(-674388+674389)end if i then local K=i(true)local Y=O(K)Y[p(-251329-(-216469))],Y[p(-927174+892323)],Y[p(-412260-(-377362))]=D,q,function()return-2919940-373801 end return K else return a({},{[p(27117-61968)]=q;[p(1015658+-1050518)]=D;[p(-537356+502458)]=function()return-2536908-756833 end})end end,function(D)local p,K=-175356+175357,D[479667-479666]while K do t[K],p=t[K]-(891331-891330),(886887+-886886)+p if t[K]==267072-267072 then t[K],x[K]=nil,nil end K=D[p]end end,function(D,p)local Y=b(p)local i=function(i,a,O)return K(D,{i,a;O},p,Y)end return i end,function(D,p)local Y=b(p)local i=function(i,a,O,G,J,x)return K(D,{i;a,O;G,J,x},p,Y)end return i end,function()Q=Q+(-170534-(-170535))t[Q]=861792+-861791 return Q end,{},function(D,p)local Y=b(p)local i=function(i,a,O,G,J,x,t)return K(D,{i;a,O;G,J;x;t},p,Y)end return i end return(F(212777+3966120,{}))(Y(J))end)(getfenv and getfenv()or _ENV,unpack or table[p(-356252-(-321394))],newproxy,setmetatable,getmetatable,select,{...})end)(...)</ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="ModuleScript" referent="RBXB12E330000B5441895A6CF80D978A770">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">GgHandler</string>
				<string name="ScriptGuid">{926305C6-3E23-430A-A3F1-62BCEB6AC5DA}</string>
				<ProtectedString name="Source">--[[ v1.0.0 https://wearedevs.net/obfuscator ]] return(function(...)local z={&quot;\065\076\119\115\057\068\061\061&quot;;&quot;\122\073\118\065\069\109\071\075\052\054\122\088\122\066\068\074&quot;;&quot;\052\055\067\075\103\070\047\102&quot;,&quot;\116\065\086\082\122\106\066\043\067\073\101\107\122\065\043\070\105\074\061\061&quot;;&quot;\105\108\052\061&quot;,&quot;\077\097\122\054\111\054\122\102&quot;,&quot;\083\043\118\110\111\117\113\061&quot;,&quot;\117\115\071\079\057\074\119\055\105\071\052\117\056\072\061\061&quot;;&quot;\101\065\109\075\116\065\108\061&quot;;&quot;\099\082\054\050\048\082\103\076&quot;,&quot;\052\054\109\120\111\065\118\050&quot;;&quot;\067\088\101\086\069\081\067\086\111\043\071\078\069\065\073\073&quot;;&quot;\106\084\118\066\050\051\043\089&quot;,&quot;\052\065\084\071\116\065\074\061&quot;;&quot;\067\055\051\069\105\081\051\055\116\119\069\099\108\088\118\117\105\112\103\061&quot;,&quot;\085\108\072\079\111\119\053\067\067\119\084\111\105\112\069\119&quot;,&quot;\052\122\101\071\101\083\051\102\101\065\053\076\108\105\122\054\100\078\072\061&quot;;&quot;\087\108\066\097\101\088\109\106\100\055\043\121\067\081\084\097\117\108\067\061&quot;,&quot;\100\105\085\108\076\074\061\061&quot;;&quot;\111\083\051\102\116\106\090\061&quot;;&quot;\078\057\088\054\073\087\122\114&quot;,&quot;\100\122\067\122\097\114\103\098\112\067\097\074\084\057\114\109\071\099\114\053\098\120\120\075\055\104\056\043\090\122\102\122\087\075\056\047\101\118\112\070\051\104\116\057\071\085\122\078\113\084\053\073\085\070\118\122\086\085\089\082\122\101\089\082\071\073\050\056\053\079\076\072\079\079\104\122\076\074\055\102\118\113\075\084\085\116\109\049\119\072\122\111\048\074\085\069\103\069\121\110\120\078\079\116\048\065\047\078\117\081\112\120\109\098\055\049\114\086\102\120\050\108\053\089\070\066\108\114\109\047\050\043\065\087\054\065\043\043\079\053\057\119\053\083\089\066\084\104\056\069\068\057\056\049\089\122\056\070\066\102\111\097\056\074\081\065\068\097\056\049\088\051\053\089\113\050\106\111\089\069\043\098\100\087\088\120\079\110\050\078\065\100\107\074\061\061&quot;,&quot;\089\086\121\111\077\088\122\104&quot;,&quot;\083\043\118\070\116\054\069\066\100\068\061\061&quot;,&quot;\117\119\050\066\067\055\111\074\101\119\071\080\077\066\109\055\087\072\061\061&quot;,&quot;\104\122\052\117\086\067\054\109&quot;;&quot;\111\088\109\050\111\087\061\061&quot;,&quot;\105\108\101\112\122\073\084\073\108\055\051\079\067\112\052\074\076\122\103\061&quot;;&quot;\116\117\109\073\107\068\061\061&quot;;&quot;\115\072\122\111\053\056\100\050&quot;;&quot;\116\065\122\120&quot;;&quot;\074\079\078\072&quot;;&quot;\108\112\069\086\077\119\043\098\108\065\084\053\105\078\055\088&quot;;&quot;\084\073\119\043\076\081\084\077\069\079\084\055\067\088\051\075\069\073\119\061&quot;,&quot;\111\097\071\099\116\078\122\110\111\055\086\054\100\081\084\099\108\078\090\061&quot;,&quot;\052\106\122\075&quot;;&quot;\069\097\071\051\067\083\109\106\084\073\050\120\105\055\069\086\087\074\061\061&quot;,&quot;\052\054\122\053\101\117\066\102\111\087\061\061&quot;,&quot;\116\081\090\061&quot;;&quot;\122\065\109\050\052\065\122\102\090\055\069\066\101\065\122\078\101\065\122\119\090\087\061\061&quot;,&quot;\084\054\066\073\052\097\068\086\052\078\101\120\087\073\051\106\052\109\055\061&quot;;&quot;\065\083\049\118\052\072\061\061&quot;,&quot;\052\088\084\102\107\083\089\073&quot;,&quot;\078\070\102\085\084\098\066\114&quot;;&quot;\098\119\054\071\101\106\090\072&quot;,&quot;\111\106\084\043\077\072\061\061&quot;;&quot;\101\117\086\074\077\117\084\099&quot;;&quot;\111\109\122\108\107\117\109\074\085\043\051\056\101\073\073\113\052\068\061\061&quot;;&quot;\077\088\071\071\052\072\061\061&quot;;&quot;\122\082\117\055\097\105\082\098\115\074\061\061&quot;,&quot;&quot;;&quot;\054\087\077\061&quot;,&quot;\111\098\100\115&quot;;&quot;\111\078\101\081\116\119\074\086\116\054\084\070\108\073\070\117\108\068\061\061&quot;,&quot;\077\088\118\120\077\088\109\073&quot;;&quot;\052\076\113\054\106\053\079\080\047\072\061\061&quot;;&quot;\101\088\109\102\116\072\061\061&quot;;&quot;\071\088\118\089\052\074\073\074\086\101\054\054\070\113\109\055\043\108\122\074\048\077\072\101\069\119\115\107\082\118\077\099\075\047\073\061&quot;;&quot;\101\065\118\120\101\117\043\075\111\083\090\061&quot;,&quot;\069\088\122\073\108\088\122\102\101\054\066\078\111\087\061\061&quot;;&quot;\108\105\084\066\067\097\111\075\067\073\043\084\052\083\089\120\107\068\061\061&quot;;&quot;\122\122\109\087\067\083\103\102\100\065\109\079\117\109\101\099\076\087\061\061&quot;,&quot;\111\088\043\071\101\065\084\103&quot;,&quot;\117\105\084\051\069\088\050\082\084\083\051\076\087\043\084\079\117\087\061\061&quot;,&quot;\104\087\117\074\080\050\116\067&quot;;&quot;\069\088\122\073\087\083\084\086\116\054\067\061&quot;;&quot;\052\106\069\102\107\117\086\097&quot;,&quot;\102\076\075\071\048\056\111\075&quot;,&quot;\052\054\122\050\116\106\111\066&quot;,&quot;\107\112\122\088\087\043\084\117\101\078\084\080\085\065\103\088\101\087\061\061&quot;;&quot;\097\098\071\070\071\068\100\047\056\077\104\104\076\050\074\061&quot;,&quot;\079\047\107\079&quot;;&quot;\076\075\072\066\111\082\103\070\076\072\061\061&quot;,&quot;\076\072\061\061&quot;,&quot;\086\084\074\047\119\107\083\077\088\048\048\111\099\048\100\074\113\054\117\120&quot;,&quot;\081\043\117\072\067\068\061\061&quot;,&quot;\085\066\084\047\105\119\069\066\077\088\118\119\111\087\061\061&quot;;&quot;\109\055\083\048\097\072\061\061&quot;,&quot;\101\065\118\079\101\112\051\070\116\054\052\061&quot;,&quot;\118\088\107\090\051\066\104\109&quot;;&quot;\108\107\079\056\043\071\109\085&quot;;&quot;\108\119\069\103\085\108\071\113\105\122\051\077\117\055\050\073&quot;;&quot;\116\068\070\098\111\114\103\088\113\077\081\105\115\115\121\122\098\087\068\054\067\074\109\070\087\043\117\082\043\068\061\061&quot;,&quot;\116\081\055\061&quot;,&quot;\107\052\110\072\084\099\102\054\116\052\110\061&quot;;&quot;\052\088\122\073\116\117\122\073\077\083\069\071\077\054\053\066&quot;,&quot;\102\048\072\111\074\121\075\066&quot;,&quot;\108\043\101\054\052\043\111\054\067\055\069\080\111\112\071\090\076\068\061\061&quot;;&quot;\067\054\053\121\076\055\050\109\122\108\084\084\084\108\101\090\108\068\061\061&quot;,&quot;\111\054\053\080\116\106\090\061&quot;;&quot;\083\043\118\050\111\083\069\071\101\065\109\075\116\065\108\061&quot;;&quot;\083\043\118\097\077\074\061\061&quot;;&quot;\100\112\111\121&quot;,&quot;\052\066\071\056\069\108\122\103\067\119\086\088\108\066\069\074\111\087\061\061&quot;,&quot;\077\097\066\073\111\087\061\061&quot;,&quot;\071\101\103\119\117\106\081\101\082\066\115\101\115\086\056\077\100\067\114\048\071\103\066\100\043\086\115\090\071\116\082\080\067\073\080\049\067\103\057\073\053\100\083\108\100\107\104\088\100\120\115\103\077\115\067\061&quot;}local function A(A)return z[A+(127508-97879)]end for A,Z in ipairs({{381609-381608;135624-135528};{202468-202467,-987498-(-987531)};{1041560-1041526;948409-948313}})do while Z[-966596-(-966597)]&lt;Z[-543854+543856]do z[Z[755929+-755928]],z[Z[950419+-950417]],Z[-376003+376004],Z[-198826-(-198828)]=z[Z[-126299-(-126301)]],z[Z[-812548-(-812549)]],Z[-255413+255414]+(400977+-400976),Z[-259121+259123]-(884318+-884317)end end do local A=string.sub local Z=type local g=z local Y=string.char local m=math.floor local v=table.concat local L=table.insert local l=string.len local f={G=-808981-(-809014);A=-326231+326237;[&quot;\048&quot;]=-344611+344674,L=-450089+450103,U=133588+-133570;[&quot;\052&quot;]=525894+-525866,W=-459373-(-459389),I=-83853-(-83905);x=986439+-986393,o=-895457-(-895482);y=606550+-606540,[&quot;\043&quot;]=730941+-730888,d=-950951+950981,[&quot;\057&quot;]=621136+-621076,B=84136-84099,i=254668+-254649;z=-830378+830399;V=461944-461887,T=-474834+474847;s=609389-609358,j=-13309-(-13364),u=978933+-978911,Y=648592-648591;g=771032-770992,S=-765633-(-765656),[&quot;\055&quot;]=-874451-(-874455);O=-358573-(-358624),m=-699513+699518,[&quot;\049&quot;]=-315474-(-315532),X=-923544+923598;p=494316-494309,b=-692334+692345,r=-982629-(-982688);[&quot;\047&quot;]=953502-953487,t=910545+-910518;v=-55135+55196,l=610951+-610931;e=-654781-(-654810);R=-991191+991193;h=-511610-(-511672);c=-524065-(-524108);C=-340597+340609,K=-894266-(-894300),N=-327728-(-327763);f=922199+-922149;a=439538-439499;D=786960-786960;M=1037635-1037611,n=-946253+946297;H=615318+-615286;k=-855696+855722;[&quot;\054&quot;]=-214354+214392,Z=501156+-501148,J=418427+-418379,[&quot;\056&quot;]=-357236-(-357278),F=-596524+596565,Q=513928+-513925,[&quot;\051&quot;]=-368344-(-368353);q=-231236-(-231292),[&quot;\050&quot;]=-84306+84351,E=-938100+938117;[&quot;\053&quot;]=769669-769620,w=-534982-(-535018);P=255345-255298}for z=75244+-75243,#g,-9033-(-9034)do local F=g[z]if Z(F)==&quot;\115\116\114\105\110\103&quot;then local Z=l(F)local N={}local c=87263+-87262 local n=-473147+473147 local R=-996930+996930 while c&lt;=Z do local z=A(F,c,c)local g=f[z]if g then n=n+g*(270926+-270862)^((-258789-(-258792))-R)R=R+(-352431-(-352432))if R==933600-933596 then R=-645882-(-645882)local z=m(n/(524023-458487))local A=m((n%(26234-(-39302)))/(-768811+769067))local Z=n%(-169432+169688)L(N,Y(z,A,Z))n=707752-707752 end elseif z==&quot;\061&quot;then L(N,Y(m(n/(104819+-39283))))if c&gt;=Z or A(F,c+(-397597-(-397598)),c+(-1021966-(-1021967)))~=&quot;\061&quot;then L(N,Y(m((n%(391799+-326263))/(-338081-(-338337)))))end break end c=c+(-966872+966873)end g[z]=v(N)end end end return(function(z,g,Y,m,v,L,l,E,n,Z,W,F,e,c,O,G,B,J,f,R,N)O,J,f,F,E,c,n,N,W,B,e,Z,R,G=function(z,A)local g=n(A)local Y=function(Y,m)return Z(z,{Y;m},A,g)end return Y end,function(z,A)local g=n(A)local Y=function(Y)return Z(z,{Y},A,g)end return Y end,{},{},function(z,A)local g=n(A)local Y=function()return Z(z,{},A,g)end return Y end,709614-709614,function(z)for A=423065-423064,#z,-782144-(-782145)do F[z[A]]=(-794663+794664)+F[z[A]]end if Y then local Z=Y(true)local g=v(Z)g[A(675070+-704642)],g[A(-803192+773592)],g[A(-934268+904679)]=z,R,function()return-2877512-280153 end return Z else return m({},{[A(-826706+797106)]=R;[A(-527755+498183)]=z,[A(-577345-(-547756))]=function()return-2318369-839296 end})end end,function()c=(-850925-(-850926))+c F[c]=-440211-(-440212)return c end,function(z,A)local g=n(A)local Y=function(Y,m,v,L,l)return Z(z,{Y,m,v,L;l},A,g)end return Y end,function(z,A)local g=n(A)local Y=function(Y,m,v,L)return Z(z,{Y;m,v;L},A,g)end return Y end,function(z)F[z]=F[z]-(432077-432076)if 55769-55769==F[z]then F[z],f[z]=nil,nil end end,function(Z,Y,m,v)local R,c,a,o,h,s,j,n,M,S,i,U,K,G,P,y,x,X,F,d,w,C,q,t,u,T,k,r,D,b,Q,H,l,V while Z do if Z&lt;631342+7394060 then if Z&lt;-232355+3759687 then if Z&lt;1227124-(-522491)then if Z&lt;1116119-559177 then if Z&lt;787952-517995 then if Z&lt;443654+-217700 then if Z&lt;467366-360548 then V=1034359+-1034358 f[c]=S b=f[h]k=b+V P=r[k]s=y+P P=-932338-(-932594)Z=s%P k=f[K]y=Z P=X+k k=292102-291846 s=P%k X=s Z=-1031025+8140548 else l=A(-173562-(-144025))Z=z[l]R=A(406738+-436351)F=f[m[859892-859888]]n=z[R]M=A(549066-578648)j=J(529965+13122559,{})Q=z[M]M={Q(j)}Q=464445+-464443 i={g(M)}G=i[Q]R=n(G)n=A(670360-699979)c=F(R,n)F={c()}l=Z(g(F))F=l c=f[m[-55823+55828]]Z=c and 11742192-(-923599)or-237763+9759084 l=c end else if Z&lt;-63500-(-305042)then M=A(533702-563292)l=z[M]j=f[m[-424036+424037]]a=1224354103120-(-279274)X=A(306238+-335778)Q=n q=f[m[-807297+807299]]T=3866483160795-290771 y=q(X,a)M=j[y]j=278462-278461 Z=l[M]y=A(-626780+597155)M=Q-j H=A(-677141+647525)q=z[y]X=f[m[-440914+440915]]a=f[m[466534-466532]]t=a(H,T)y=X[t]j=q[y]q={j(F,Q)}l=Z(c,M,g(q))Z=16754080-191320 Q=nil else G=35184371888283-(-200549)Z={}f[m[11964-11962]]=Z l=f[m[955678-955675]]R=l Q=872863-872608 l=c%G f[m[240386-240382]]=l M=A(-1004717-(-975092))i=c%Q Q=-291909-(-291911)G=i+Q f[m[509689-509684]]=G Q=z[M]M=A(-12883+-16682)Z=7536702-(-65335)i=Q[M]Q=i(F)i=A(797648+-827193)n[c]=i i=-78348-(-78571)M=-522588+522589 q=626770-626769 y=q j=Q q=270239-270239 X=y&lt;q q=M-y end end else if Z&lt;-591651+994469 then if Z&lt;1161620-856063 then n=n+G l=n&lt;=R Q=not i l=Q and l Q=n&gt;=R Q=i and Q l=Q or l Q=-140861+14557552 Z=l and Q l=-735338+10085999 Z=Z or l else Z=f[m[615519+-615518]]c=n M=419158+-419158 j=1006495-1006240 Q=Z(M,j)Z=897704+13905729 F[c]=Q c=nil end else n=10939307-(-406733)l=-58412+6606633 c=A(975077-1004645)F=c^n Z=l-F l=A(-527783+498192)F=Z Z=l/F l={Z}Z=z[A(547513+-577094)]end end else if Z&lt;749844+551556 then if Z&lt;716776-(-186924)then if Z&lt;-719837+1471368 then F=Y[81820+-81819]c=A(-535152+505562)l=z[c]Q=4872524841664-14820 n=f[m[200985+-200984]]R=f[m[-408722+408724]]i=A(-322869-(-293296))G=R(i,Q)c=n[G]Z=l[c]c=#F l=Z(c)Z=16293734-(-269026)c=l l=476426-476425 n=#F R=n n=609736-609735 G=n n=776020-776020 i=G&lt;n n=l-G else l={n}Z=z[A(-145493+115865)]end else l=A(-476662-(-447105))Z=z[l]F=A(-176091-(-146483))l=z[F]F=A(442861-472469)z[F]=Z F=A(1045129+-1074686)Z=669514+9702451 z[F]=l F=f[m[139249+-139248]]c=F()end else if Z&lt;1193746-(-404974)then if Z&lt;885958+511509 then c=319846-319845 Z={}n=f[m[615318+-615309]]F=Z Z=14766616-(-36817)R=n n=886105-886104 G=n n=-317041-(-317041)i=G&lt;n n=c-G else S=f[c]l=S Z=S and-585929+4380340 or 5027129-182041 end else Z=true Z=704433+5506462 end end end else if Z&lt;-553582+2761485 then if Z&lt;1948937-16009 then if Z&lt;1843316-(-18903)then if Z&lt;1907807-83654 then t=H K=t a[t]=K Z=1658900-(-203312)t=nil else H=H+u t=H&lt;=D K=not U t=K and t K=H&gt;=D K=U and K t=K or t K=984854-(-835898)Z=t and K t=15054677-939543 Z=Z or t end else K=190024+-190023 Z=12579556-(-630589)D=#a H=189667+-189666 t=n(H,D)H=i(a,t)D=f[X]U=H-K u=Q(U)t=nil D[H]=u H=nil end else if Z&lt;42567+2057691 then if Z&lt;125735+1946013 then Z=true Z=Z and 15734513-159275 or-885931+12727232 else M=q C=A(-514504-(-484879))w=z[C]C=A(-510401-(-480804))T=w[C]w=T(F,M)T=f[m[-621360+621366]]C=T()Z=967940+6634097 H=w+C t=H+i H=-256600+256856 a=t%H C=131660+-131659 H=n[c]i=a w=i+C M=nil T=R[w]t=H..T n[c]=t end else K={}t={}H=N()i=nil f[H]=t u=N()U=A(-292045+262439)D=O(-904135+14414611,{H,j;q,G})t=N()f[t]=D P=nil r=A(560533-590134)G=e(G)D={}f[u]=D o=A(952771-982343)D=z[U]Q=nil d=f[u]M=nil h={[o]=d;[r]=P}U=D(K,h)D=B(8438123-378786,{u;H,X;j;q,t})a=nil f[R]=U f[c]=D n=nil G=A(916941-946510)H=e(H)n=z[G]y=nil Z=z[A(-698476+668866)]Q=f[R]D=23381275896042-(-655773)t=e(t)q=e(q)X=e(X)M=f[c]q=A(-357937+328316)j=e(j)y=-803875+16844366799558 j=M(q,y)G=A(469455-498991)d=A(-428534+398951)G=n[G]H=A(686201-715787)u=e(u)i=Q[j]G=G(n,i)i=A(606680+-636238)n=N()y=A(-1017903+988350)f[n]=G G=z[i]q=z[y]X=f[R]a=f[c]t=a(H,D)y=X[t]H=-864299+21467878020919 j=q[y]y=f[R]X=f[c]t=A(-282472-(-252918))a=X(t,H)t=28898781205492-941923 q=y[a]M=j[q]D=A(-816375-(-786805))a=A(791863-821475)q=f[R]y=f[c]X=y(a,t)j=q[X]Q=M[j]i=G(Q)G=N()Q=A(353527-383085)X=A(-549101+519548)f[G]=i i=z[Q]y=z[X]u=-821649+29034262232673 a=f[R]t=f[c]H=t(D,u)X=a[H]H=A(-235602+206025)q=y[X]D=16080756603405-400589 r=2181558553982-(-358009)X=f[R]a=f[c]t=a(H,D)y=X[t]j=q[y]y=f[R]K=-568457+26903742668153 X=f[c]t=A(-183879-(-154336))H=9375341635809-(-747564)a=X(t,H)q=y[a]a=A(407732+-437285)M=j[q]Q=i(M)i=N()M=A(-499437-(-469879))f[i]=Q Q=z[M]u=A(-908762+879196)X=z[a]t=f[R]H=f[c]D=H(u,K)a=t[D]y=X[a]a=f[R]t=f[c]u=371035+21381603704201 D=A(-802942+773347)H=t(D,u)X=a[H]H=A(-271323+241696)q=y[X]X=f[R]D=-984373+3566249986993 a=f[c]t=a(H,D)y=X[t]j=q[y]M=Q(j)Q=N()X=A(441046-470620)f[Q]=M a=-73923+14657394801516 j=f[R]q=f[c]y=q(X,a)M=j[y]X=O(10636633-(-536699),{R;c})j=N()f[j]=M q=O(641600-66626,{R,c})M=N()f[M]=q q=N()y=O(-842881+13734204,{R,c})f[q]=y y=N()a=W(3589800-(-450204),{R;c})f[y]=X X=N()t=O(1914335-(-728442),{M,G,R;c,Q;j;y;i,q;X})f[X]=a a=N()f[a]=t t=N()H=W(11735921-(-58314),{R;c,n})f[t]=H K=f[R]h=f[c]o=h(d,r)H=O(12560133-(-985656),{t;a})u=K[o]D={[u]=H}l={D}end end else if Z&lt;3459588-787789 then if Z&lt;-280785+2707321 then if Z&lt;883669+1331093 then D=A(-66521+36964)Z=z[D]D=A(53459-83067)z[D]=Z Z=839048+6715682 else j=N()q=487227+-487224 y=181766-181701 f[j]=l Z=f[Q]l=Z(q,y)Z=790517-790517 q=N()f[q]=l a=A(-287171-(-257589))y=Z Z=309847+-309847 l=z[a]X=Z t=W(856912+-355999,{})a={l(t)}Z={g(a)}a=Z C=A(-96107+66494)l=949663-949661 Z=a[l]t=Z l=A(63448-92985)Z=z[l]H=f[n]w=z[C]C=w(t)w=A(365969-395588)T=H(C,w)H={T()}l=Z(g(H))H=N()f[H]=l l=954034-954033 T=f[q]Z=6320192-(-639811)w=T T=-828937+828938 C=T T=-468249+468249 D=C&lt;T T=l-C end else F=Y[565413-565412]Z=f[m[-452456+452457]]l=Z(F)Q=A(227926+-257477)y=872938+7775754796090 c=l l=f[m[725535-725533]]R=f[m[-239304-(-239307)]]M=34481198639619-(-414901)X=A(-552417+522797)G=f[m[691525-691521]]i=G(Q,M)n=R[i]Z=l[n]M=A(956501-986094)l=Z(c)j=-451768+33736691671573 q=A(650736+-680353)n=l l=f[m[943157-943152]]G=f[m[1013845+-1013842]]i=f[m[-606834-(-606838)]]Q=i(M,j)R=G[Q]Z=l[R]R=f[m[452346-452340]]l=Z(R)R=l Z=f[m[238006-237999]]l=Z(R)a=-998665+9143466823082 G=l l=f[m[324393+-324385]]Q=f[m[-938036+938039]]M=f[m[-351158+351162]]j=M(q,y)M=A(-305705-(-276115))i=Q[j]Z=l[i]Q=z[M]j=f[m[766577+-766574]]q=f[m[604170+-604166]]y=q(X,a)X=-125660+31471039292442 M=j[y]i=Q[M]Q={i(n)}l=Z(G,g(Q))i=l l=f[m[-466572-(-466580)]]M=f[m[350916-350913]]j=f[m[444039-444035]]y=A(418504-448092)q=j(y,X)Q=M[q]Z=l[Q]l=Z(n,i)Q=l Z=f[m[379981-379972]]l=Z(Q)M=l Z=f[m[-136067-(-136077)]]l=Z(M)j=l l=413435-413434 Z=j[l]l={Z}Z=z[A(-148084+118521)]end else if Z&lt;2302030-(-851111)then if Z&lt;611784+2250903 then Z=l and-594187-(-709528)or 1025162+8835538 else q=A(390319-419868)j=z[q]l=j Z=967656+1249172 end else w=f[c]Z=w and 295538+3345989 or-260013+11602546 T=w end end end end else if Z&lt;-450628+5747696 then if Z&lt;5119182-662175 then if Z&lt;3431797-(-399155)then if Z&lt;416163+3368823 then if Z&lt;4008028-365680 then Z=-412665+11755198 w=y==X T=w else i=E(-52107+4515339,{m[-237805+237808],R})l=A(-361333+331751)Z=nil c=Z Z=z[l]Q={Z(i)}l=Q[-822810-(-822811)]G=Q[-892186+892188]n=l Z=not n c=G Z=Z and-224672+8522457 or-576476+11026126 end else s=Z b=638403-638402 k=r[b]b=false P=k==b S=P Z=P and-445722+4620667 or 1015027+9882395 end else if Z&lt;214889+4191279 then if Z&lt;858383+3212010 then n=A(181748+-211373)Q=A(259543+-289118)M=-203369+2940859441090 q=3749268815680-931951 l=z[n]R=f[m[-988326+988327]]F=Y[608303-608302]Z={}G=f[m[446249-446247]]i=G(Q,M)j=A(730653-760260)n=R[i]c=Z Z=l[n]i=f[m[491331-491330]]Q=f[m[983796-983794]]M=Q(j,q)G=i[M]i={Z(F,G)}Z=543324+7874399 R=i[-818965+818968]n=i[-974505-(-974507)]l=i[897216+-897215]G=l else b=226429+-226427 k=r[b]Z=362215+10535207 b=f[d]P=k==b S=P end else s=f[c]Z=s and 8967818-(-1007405)or-415606-(-479125)S=s end end else if Z&lt;464799+4531133 then if Z&lt;222628+4488499 then if Z&lt;3733663-(-739590)then c=A(-323456-(-293841))Z=f[m[208054-208053]]F=f[m[-249809+249811]]c=Z[c]l={c(Z,F)}Z=z[A(-213176+183592)]l={g(l)}else n=-296546+296547 c=f[m[-141370+141373]]F=c~=n Z=F and 537811+9535109 or 6919221-(-119814)end else f[c]=l Z=907325+6202198 end else if Z&lt;4211632-(-1007742)then if Z&lt;88307+5017843 then Q=A(165549+-195116)i=l l=z[Q]Q=A(918659-948244)M=A(-136805-(-107218))Z=l[Q]Q=N()f[Q]=Z l=z[M]M=A(-239189+209648)Z=l[M]X=A(727421-757008)y=z[X]j=y M=Z q=Z Z=y and 16098398-664043 or-757489+5910153 else Z=q Z=j and 2151274-(-65554)or 3039274-(-78244)l=j end else Z=z[A(782256+-811790)]l={}end end end else if Z&lt;7036633-(-29716)then if Z&lt;6292499-52630 then if Z&lt;663161+5272238 then if Z&lt;4508496-(-898206)then i=nil R=nil Q=nil Z=320046+5419779 else Z=z[A(-159528+129906)]l={c}end else Z=B(11930922-181234,{R})w={Z()}Z=z[A(-956024+926465)]l={g(w)}end else if Z&lt;7108168-89009 then if Z&lt;-936920+7634371 then Z=z[A(689592+-719170)]l={c}else u=not D T=T+C l=T&lt;=w l=u and l u=T&gt;=w u=D and u l=u or l u=657692+12510969 Z=l and u l=-918100+4398891 Z=Z or l end else c=f[m[578780-578777]]n=482061-481891 F=c*n c=622199-621942 l=F%c Z=216331+4306778 f[m[423437-423434]]=l end end else if Z&lt;8615010-1033860 then if Z&lt;7794340-257489 then if Z&lt;578308+6567400 then d=e(d)h=e(h)U=e(U)r=nil K=e(K)Z=-704545+7664548 o=e(o)u=e(u)else R=-20838-(-20839)G=-311274+311276 c=f[m[280651-280650]]n=c(R,G)c=-688586+688587 F=n==c l=F Z=F and-1021234+3846673 or 10523397-74329 end else Z=4228+2062527 end else if Z&lt;-394820+8375935 then if Z&lt;-276171+8052223 then a=not X q=q+y M=q&lt;=j M=a and M a=q&gt;=j a=X and a M=a or M a=441714+1636078 Z=M and a M=4510679-(-797226)Z=Z or M else Z=884176+4855649 end else F=A(322227-351803)n=838846-838846 Z=z[F]c=f[m[237992+-237984]]F=Z(c,n)Z=2378068-1010759 end end end end end else if Z&lt;301918+11216829 then if Z&lt;10616860-575131 then if Z&lt;8404706-(-394919)then if Z&lt;8523490-190648 then if Z&lt;8069760-(-30843)then if Z&lt;451777+7595275 then n=e(n)c=e(c)M=nil a=nil y=nil G=e(G)q=e(q)j=e(j)n=nil X=nil M=A(1022224+-1051811)Q=e(Q)y={}q=N()H=e(H)c=nil t=nil X=N()i=nil R=e(R)Z=2332346-470134 i=A(-365409-(-335842))R=N()f[R]=c c=N()f[c]=n G=z[i]i=A(600739-630341)n=G[i]Q=A(-62094-(-32527))G=N()j=A(-334136-(-304511))f[G]=n i=z[Q]H=544528+-544272 Q=A(-928623+899038)a={}n=i[Q]Q=z[M]M=A(-391938-(-362315))i=Q[M]M=z[j]j=A(-148809+119262)Q=M[j]j=N()M=-917292-(-917292)f[j]=M M=-229903-(-229905)f[q]=M M={}f[X]=y D=H H=210278+-210277 y=601466-601466 t=-325145+325146 u=H H=-864938-(-864938)U=u&lt;H H=t-u else c=Y[498199+-498197]F=Y[-459423+459424]Z=f[m[807798-807797]]n=Z Z=n[c]Z=Z and 8195499-225511 or-21240+278279 end else y=A(-790373+760764)i=A(-286377-(-256838))Z=z[i]M=f[m[742790-742789]]j=f[m[513276+-513274]]X=26988678438675-(-152068)q=j(y,X)Q=M[q]i=Z(Q,c)Z=nil l={Z}Z=z[A(994657-1024199)]end else if Z&lt;668766+7837415 then if Z&lt;850571+7548154 then c=f[m[581061-581059]]n=685205-684968 F=c*n c=4841188813128-188537 l=F+c c=-497753+497754 F=531161+35184371557671 Z=l%F f[m[939430+-939428]]=Z F=f[m[480783+-480780]]l=F~=c Z=7892454-853419 else R=G(n,R)Z=R and-384404+16001216 or-929066+7562158 end else n=A(-814839-(-785252))c=z[n]n=A(-756348-(-726725))F=c[n]n=f[m[-180579+180580]]c={F(n)}l={g(c)}Z=z[A(-782341-(-752749))]end end else if Z&lt;9558256-69428 then if Z&lt;387782+8920036 then if Z&lt;8725876-(-245795)then Z=f[m[360694-360693]]F=f[m[608293+-608291]]c=A(-886352+856726)c=Z[c]l={c(Z,F)}l={g(l)}Z=z[A(-739754-(-710192))]else Z=true c=N()n=A(361300-390925)F=Y f[c]=Z R=N()l=z[n]Q=A(37097+-66679)n=A(-371718-(-342185))G=N()Z=l[n]n=N()f[n]=Z M=O(514370+12284284,{G})Z=B(631882+10850555,{})f[R]=Z Z=false f[G]=Z i=z[Q]Q=i(M)Z=Q and 497389+10329696 or 4495948-(-576591)l=Q end else M=34591702149868-(-1004544)n=A(843232+-872819)l=z[n]R=f[m[-882800-(-882801)]]G=f[m[-141518-(-141520)]]Q=A(687260-716865)i=G(Q,M)n=R[i]Z=l[n]l={Z(c)}Z=z[A(-66808-(-37237))]l={g(l)}end else if Z&lt;656571+9289478 then if Z&lt;-400871+10227536 then f[m[-588563-(-588568)]]=l Z=10446028-585328 F=nil else Z=f[m[246539-246532]]Z=Z and-242202+8224496 or-690946+2058255 end else Z=-441221-(-504740)P=-809949+809950 s=r[P]S=s end end end else if Z&lt;10896706-50152 then if Z&lt;10781746-334956 then if Z&lt;10805145-527563 then if Z&lt;10580294-435836 then n=-984691-(-984723)y=672055+-672042 c=f[m[820478-820475]]j=151550-151548 F=c%n R=f[m[396706+-396702]]Q=f[m[626594+-626592]]t=f[m[420313-420310]]a=t-F t=758611-758579 X=a/t q=y-X M=j^q i=Q/M G=R(i)R=-492364+4295459660 n=G%R G=-579658+579660 M=-306916+306917 R=G^F c=n/R R=f[m[-819126+819130]]j=-567223+567479 Q=c%M M=4294761542-(-205754)i=Q*M G=R(i)R=f[m[614173-614169]]i=R(c)n=G+i G=-87975-(-153511)R=n%G c=nil y=-144391+144647 i=n-R Q=710747+-645211 F=nil G=i/Q Q=-1044023-(-1044279)i=R%Q M=R-i Q=M/j j=606646-606390 n=nil M=G%j q=G-M j=q/y R=nil G=nil q={i,Q,M;j}f[m[30380+-30379]]=q j=nil M=nil Q=nil i=nil Z=-803811+9407396 else l=A(-23101+-6438)Z=z[l]j=631773+13984653833619 G=f[m[1027693-1027692]]M=A(-888338-(-858800))i=f[m[911697-911695]]Q=i(M,j)c=G[Q]G=f[R]l=Z(c,G)Z=nil l={Z}Z=z[A(-159400+129796)]end else Z=true Z=Z and 861210-(-90924)or 5113438-(-156024)end else if Z&lt;568935+9932729 then if Z&lt;7551+10441596 then c=f[m[-750747-(-750749)]]n=f[m[393042-393039]]F=c==n Z=-350055+3175494 l=F else y=20018204905719-(-217970)q=A(548602-578146)Q=f[m[-814287+814288]]M=f[m[139858+-139856]]j=M(q,y)i=Q[j]Z=c[i]l={Z}Z=z[A(-590449-(-560870))]end else i=f[G]Z=4370732-(-701807)l=i end end else if Z&lt;11478899-294940 then if Z&lt;-764664+11884669 then if Z&lt;10367791-(-562784)then l=S Z=s Z=-128059+4973147 else M=not Q G=G+i l=G&lt;=R l=M and l M=G&gt;=R M=Q and M l=M or l M=-635640+11846896 Z=l and M l=899613+-98776 Z=Z or l end else F=Y[415804-415803]Q=A(689479-719103)M=24587789177876-(-1022117)Z=#F c=Z n=A(437883-467473)l=z[n]R=f[m[-316568+316569]]G=f[m[-27694+27696]]i=G(Q,M)n=R[i]R=-999978+999980 G=1045087+-1045085 Z=l[n]n=c/R i=G l=Z(n)n=l R=c l=304268-304267 G=-28603-(-28603)Z=10412624-(-648369)Q=i&lt;G G=l-i end else if Z&lt;352612+11087208 then if Z&lt;10960210-(-350034)then l=A(58035-87572)y=565751+-565750 j=A(791385-820945)M=G Z=z[l]j=F[j]q=M+y j=j(F,M,q)t=A(49795+-79341)q=281527-281511 l=Z(j,q)q=A(236304+-265894)j=l l=z[q]H=24155534472999-(-259273)y=f[m[-907959+907960]]X=f[m[332640-332638]]a=X(t,H)q=y[a]X=-579403+579404 Z=l[q]y=M-X M=nil X=442631-442629 q=y/X l=Z(n,q,j)Z=594292+10466701 j=nil else f[c]=T Z=f[c]Z=Z and 12069739-421498 or 248772+1418971 end else l=A(515323+-544899)Z=z[l]F=A(906944+-936500)l=Z(F)Z=z[A(476721+-506301)]l={}end end end end else if Z&lt;14469866-974053 then if Z&lt;12258871-(-525468)then if Z&lt;11492803-(-274810)then if Z&lt;665360+11089293 then if Z&lt;-296676+11947881 then Z=8182616-136802 else Z=45495+10326470 end else C=A(912682+-942295)Z=z[C]u=A(790001-819609)D=z[u]C=Z(D)Z=A(14860+-44417)z[Z]=C Z=1038072+6516658 end else if Z&lt;12712655-692725 then if Z&lt;219122+11590426 then R=3173840127433-999428 n=A(-600585-(-570989))l=f[m[828506+-828505]]F=f[m[-191968-(-191970)]]c=F(n,R)F=N()Z=l[c]l=A(-881695+852113)f[F]=Z n=O(-355651+9171112,{m[589707+-589704],F})Z=z[l]R={Z(n)}l=R[-724830-(-724831)]n=l c=R[491542-491540]Z=not n R=N()Z=Z and 9346306-(-809726)or 688618+2959311 f[R]=c else l={}Z=z[A(262622-292216)]end else n=f[m[-382564-(-382570)]]Z=-913876+10435197 c=n==F l=c end end else if Z&lt;-414003+13283748 then if Z&lt;12461542-(-397449)then if Z&lt;442344+12363474 then Z=true l={}f[m[1042803+-1042802]]=Z Z=z[A(-933835-(-904287))]else Z=z[A(-916393+886858)]l={c}end else Z=473869+1592886 end else if Z&lt;13989758-795124 then if Z&lt;8323+12902537 then Z={}y=1017939+14558178365992 c=Z l=-729462-(-729462)i=A(-1020713+991123)F=Y[86766+-86765]G=z[i]q=A(-26548+-3016)Q=f[m[-649120+649121]]M=f[m[-373202+373204]]j=M(q,y)i=Q[j]Z=205322+65427 R=G[i]G=R(F)R=-130009+130010 n=G-R R=n n=263720+-263719 G=n n=-651815+651815 i=G&lt;n n=l-G else u=N()U=A(912177-941744)f[u]=T l=z[U]U=A(309895-339480)d=-211946+211947 Z=l[U]P=A(-865752-(-836139))U=780575+-780574 K=-985095-(-985195)l=Z(U,K)U=N()h=588829-588574 r=207404-207402 K=-995996-(-995996)f[U]=l Z=f[Q]l=Z(K,h)K=N()f[K]=l h=-215720+215721 Z=f[Q]o=f[U]l=Z(h,o)h=N()f[h]=l l=f[Q]o=l(d,r)x=729483+-719483 l=970789+-970788 Z=o==l r=A(-1047563-(-1017945))V=-94003+94003 l=A(-715797-(-686178))o=N()f[o]=Z s=z[P]Z=A(-896372+866822)k=f[Q]b={k(V,x)}Z=t[Z]P=s(g(b))s=A(-763501-(-733883))S=P..s d=r..S r=A(-563345-(-533763))Z=Z(t,l,d)d=N()S=J(7042481-(-331231),{Q,u;q;n;c,H;o,d;U;h,K,j})f[d]=Z l=z[r]r={l(S)}Z={g(r)}r=Z Z=f[o]Z=Z and 1295981-(-268783)or 4031585-(-422808)end else H=#a D=829347+-829347 t=H==D Z=t and 1550621-(-556100)or 1740315-(-121908)end end end else if Z&lt;938753+13912185 then if Z&lt;14173141-473429 then if Z&lt;14109839-524448 then if Z&lt;13030835-(-484998)then F=f[m[-1009596+1009597]]l=#F F=216915-216915 Z=l==F Z=Z and 9144467-753907 or 812180+7791405 else Z=f[m[760518-760517]]l=Z()Z=f[m[-253510+253512]]F=l l=Z(F)Z=z[A(-624614-(-595016))]F=l l={F}end else n=-518672+5541421 l=443811+243560 c=A(529016+-558619)F=c^n Z=l-F F=Z l=A(552929-582528)Z=l/F l={Z}Z=z[A(888075+-917630)]end else if Z&lt;642313+14112237 then if Z&lt;14601894-239365 then D=1016936-1016936 H=#a Z=-248036+2110259 t=H==D else M=-914717-(-914718)j=A(-561614+531989)l=#c t=8360124609276-(-547896)H=A(835721-865273)Z=l+M Q=n M=z[j]q=f[m[571402+-571401]]T=28548511197468-(-608977)y=f[m[986213+-986211]]a=A(742863-772477)X=y(a,t)y=A(-991009-(-961419))j=q[X]l=M[j]q=z[y]X=f[m[-214968+214969]]a=f[m[156492-156490]]t=a(H,T)y=X[t]j=q[y]q={j(F,Q)}Q=nil M=l(g(q))c[Z]=M Z=221941-(-48808)end else Q=not i n=n+G c=n&lt;=R c=Q and c Q=n&gt;=R Q=i and Q c=Q or c Q=1132421-826714 Z=c and Q c=402500+14539798 Z=Z or c end end else if Z&lt;540615+15020144 then if Z&lt;15326100-(-108553)then if Z&lt;-909891+15900011 then Z=f[m[-69040+69050]]c=f[m[-510217-(-510228)]]F[Z]=c Z=f[m[-705221-(-705233)]]c={Z(F)}Z=z[A(333372+-362933)]l={g(c)}else a=A(-783696-(-754109))X=z[a]a=A(-644249+614700)Z=-31707+5184371 y=X[a]j=y end else Z=true Z=Z and 13086912-224291 or 6791815-580920 end else if Z&lt;-730847+17168167 then if Z&lt;14584151-(-1005065)then C=895806-895805 Z=f[Q]D=-693872-(-693878)w=Z(C,D)Z=A(423338+-452895)D=A(387585-417142)z[Z]=w C=z[D]D=-514471+514473 Z=C&gt;D Z=Z and-795978+12551490 or-899485+3113835 else i=R M=A(-849600+820013)a=34094338783953-(-230195)Q=z[M]j=f[m[884525-884524]]X=A(-298711+269100)q=f[m[385588+-385586]]y=q(X,a)M=j[y]Z=Q[M]Q=Z(c,i)Z=8829636-411913 i=nil end else n=n+G l=n&lt;=R Q=not i l=Q and l Q=n&gt;=R Q=i and Q l=Q or l Q=-454500-(-691667)Z=l and Q l=12537238-(-290002)Z=Z or l end end end end end end end Z=#v return g(l)end,function(z)local A,Z=155896-155895,z[-403009-(-403010)]while Z do F[Z],A=F[Z]-(-1044853+1044854),A+(-183224+183225)if F[Z]==-736657+736657 then F[Z],f[Z]=nil,nil end Z=z[A]end end,function(z,A)local g=n(A)local Y=function(...)return Z(z,{...},A,g)end return Y end return(G(9006483-(-156599),{}))(g(l))end)(getfenv and getfenv()or _ENV,unpack or table[A(-89429-(-59880))],newproxy,setmetatable,getmetatable,select,{...})end)(...)</ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="Folder" referent="RBX8295118322BE47EF86E4A793608FE919">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<string name="Name">Libs</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="ModuleScript" referent="RBX280F0C96905F4E00A87C429777B3A068">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">SHA256</string>
					<string name="ScriptGuid">{501D9006-904A-4430-9F8D-5286AA169ABD}</string>
					<ProtectedString name="Source"><![CDATA[--------------------------------------------------------------------------------------------------------------------------
-- sha2.lua
--------------------------------------------------------------------------------------------------------------------------
-- VERSION: 12 (2022-02-23)
-- AUTHOR:  Egor Skriptunoff
-- LICENSE: MIT (the same license as Lua itself)
-- URL:     https://github.com/Egor-Skriptunoff/pure_lua_SHA
--
-- DESCRIPTION:
--    This module contains functions to calculate SHA digest:
--       MD5, SHA-1,
--       SHA-224, SHA-256, SHA-512/224, SHA-512/256, SHA-384, SHA-512,
--       SHA3-224, SHA3-256, SHA3-384, SHA3-512, SHAKE128, SHAKE256,
--       HMAC,
--       BLAKE2b, BLAKE2s, BLAKE2bp, BLAKE2sp, BLAKE2Xb, BLAKE2Xs,
--       BLAKE3, BLAKE3_KDF
--    Written in pure Lua.
--    Compatible with:
--       Lua 5.1, Lua 5.2, Lua 5.3, Lua 5.4, Fengari, LuaJIT 2.0/2.1 (any CPU endianness).
--    Main feature of this module: it was heavily optimized for speed.
--    For every Lua version the module contains particular implementation branch to get benefits from version-specific features.
--       - branch for Lua 5.1 (emulating bitwise operators using look-up table)
--       - branch for Lua 5.2 (using bit32/bit library), suitable for both Lua 5.2 with native "bit32" and Lua 5.1 with external library "bit"
--       - branch for Lua 5.3/5.4 (using native 64-bit bitwise operators)
--       - branch for Lua 5.3/5.4 (using native 32-bit bitwise operators) for Lua built with LUA_INT_TYPE=LUA_INT_INT
--       - branch for LuaJIT without FFI library (useful in a sandboxed environment)
--       - branch for LuaJIT x86 without FFI library (LuaJIT x86 has oddity because of lack of CPU registers)
--       - branch for LuaJIT 2.0 with FFI library (bit.* functions work only with Lua numbers)
--       - branch for LuaJIT 2.1 with FFI library (bit.* functions can work with "int64_t" arguments)
--
--
-- USAGE:
--    Input data should be provided as a binary string: either as a whole string or as a sequence of substrings (chunk-by-chunk loading, total length < 9*10^15 bytes).
--    Result (SHA digest) is returned in hexadecimal representation as a string of lowercase hex digits.
--    Simplest usage example:
--       local sha = require("sha2")
--       local your_hash = sha.sha256("your string")
--    See file "sha2_test.lua" for more examples.
--
--
-- CHANGELOG:
--  version     date      description
--  -------  ----------   -----------
--    12     2022-02-23   Now works in Luau (but NOT optimized for speed)
--    11     2022-01-09   BLAKE3 added
--    10     2022-01-02   BLAKE2 functions added
--     9     2020-05-10   Now works in OpenWrt's Lua (dialect of Lua 5.1 with "double" + "invisible int32")
--     8     2019-09-03   SHA-3 functions added
--     7     2019-03-17   Added functions to convert to/from base64
--     6     2018-11-12   HMAC added
--     5     2018-11-10   SHA-1 added
--     4     2018-11-03   MD5 added
--     3     2018-11-02   Bug fixed: incorrect hashing of long (2 GByte) data streams on Lua 5.3/5.4 built with "int32" integers
--     2     2018-10-07   Decreased module loading time in Lua 5.1 implementation branch (thanks to Peter Melnichenko for giving a hint)
--     1     2018-10-06   First release (only SHA-2 functions)
-----------------------------------------------------------------------------


local print_debug_messages = false  -- set to true to view some messages about your system's abilities and implementation branch chosen for your system

local unpack, table_concat, byte, char, string_rep, sub, gsub, gmatch, string_format, floor, ceil, math_min, math_max, tonumber, type, math_huge =
	table.unpack or unpack, table.concat, string.byte, string.char, string.rep, string.sub, string.gsub, string.gmatch, string.format, math.floor, math.ceil, math.min, math.max, tonumber, type, math.huge


--------------------------------------------------------------------------------
-- EXAMINING YOUR SYSTEM
--------------------------------------------------------------------------------

local function get_precision(one)
	-- "one" must be either float 1.0 or integer 1
	-- returns bits_precision, is_integer
	-- This function works correctly with all floating point datatypes (including non-IEEE-754)
	local k, n, m, prev_n = 0, one, one
	while true do
		k, prev_n, n, m = k + 1, n, n + n + 1, m + m + k % 2
		if k > 256 or n - (n - 1) ~= 1 or m - (m - 1) ~= 1 or n == m then
			return k, false   -- floating point datatype
		elseif n == prev_n then
			return k, true    -- integer datatype
		end
	end
end

-- Make sure Lua has "double" numbers
local x = 2/3
local Lua_has_double = x * 5 > 3 and x * 4 < 3 and get_precision(1.0) >= 53
assert(Lua_has_double, "at least 53-bit floating point numbers are required")

-- Q:
--    SHA2 was designed for FPU-less machines.
--    So, why floating point numbers are needed for this module?
-- A:
--    53-bit "double" numbers are useful to calculate "magic numbers" used in SHA.
--    I prefer to write 50 LOC "magic numbers calculator" instead of storing more than 200 constants explicitly in this source file.

local int_prec, Lua_has_integers = get_precision(1)
local Lua_has_int64 = Lua_has_integers and int_prec == 64
local Lua_has_int32 = Lua_has_integers and int_prec == 32
assert(Lua_has_int64 or Lua_has_int32 or not Lua_has_integers, "Lua integers must be either 32-bit or 64-bit")

-- Q:
--    Does it mean that almost all non-standard configurations are not supported?
-- A:
--    Yes.  Sorry, too many problems to support all possible Lua numbers configurations.
--       Lua 5.1/5.2    with "int32"               will not work.
--       Lua 5.1/5.2    with "int64"               will not work.
--       Lua 5.1/5.2    with "int128"              will not work.
--       Lua 5.1/5.2    with "float"               will not work.
--       Lua 5.1/5.2    with "double"              is OK.          (default config for Lua 5.1, Lua 5.2, LuaJIT)
--       Lua 5.3/5.4    with "int32"  + "float"    will not work.
--       Lua 5.3/5.4    with "int64"  + "float"    will not work.
--       Lua 5.3/5.4    with "int128" + "float"    will not work.
--       Lua 5.3/5.4    with "int32"  + "double"   is OK.          (config used by Fengari)
--       Lua 5.3/5.4    with "int64"  + "double"   is OK.          (default config for Lua 5.3, Lua 5.4)
--       Lua 5.3/5.4    with "int128" + "double"   will not work.
--   Using floating point numbers better than "double" instead of "double" is OK (non-IEEE-754 floating point implementation are allowed).
--   Using "int128" instead of "int64" is not OK: "int128" would require different branch of implementation for optimized SHA512.

-- Check for LuaJIT and 32-bit bitwise libraries
local is_LuaJIT = ({false, [1] = true})[1] and _VERSION ~= "Luau" and (type(jit) ~= "table" or jit.version_num >= 20000)  -- LuaJIT 1.x.x and Luau are treated as vanilla Lua 5.1/5.2
local is_LuaJIT_21  -- LuaJIT 2.1+
local LuaJIT_arch
local ffi           -- LuaJIT FFI library (as a table)
local b             -- 32-bit bitwise library (as a table)
local library_name

if is_LuaJIT then
	-- Assuming "bit" library is always available on LuaJIT
	b = require"bit"
	library_name = "bit"
	-- "ffi" is intentionally disabled on some systems for safety reason
	local LuaJIT_has_FFI, result = pcall(require, "ffi")
	if LuaJIT_has_FFI then
		ffi = result
	end
	is_LuaJIT_21 = not not loadstring"b=0b0"
	LuaJIT_arch = type(jit) == "table" and jit.arch or ffi and ffi.arch or nil
else
	-- For vanilla Lua, "bit"/"bit32" libraries are searched in global namespace only.  No attempt is made to load a library if it's not loaded yet.
	for _, libname in ipairs(_VERSION == "Lua 5.2" and {"bit32", "bit"} or {"bit", "bit32"}) do
		if type(_G[libname]) == "table" and _G[libname].bxor then
			b = _G[libname]
			library_name = libname
			break
		end
	end
end

--------------------------------------------------------------------------------
-- You can disable here some of your system's abilities (for testing purposes)
--------------------------------------------------------------------------------
-- is_LuaJIT = nil
-- is_LuaJIT_21 = nil
-- ffi = nil
-- Lua_has_int32 = nil
-- Lua_has_int64 = nil
-- b, library_name = nil
--------------------------------------------------------------------------------

if print_debug_messages then
	-- Printing list of abilities of your system
	print("Abilities:")
	print("   Lua version:               "..(is_LuaJIT and "LuaJIT "..(is_LuaJIT_21 and "2.1 " or "2.0 ")..(LuaJIT_arch or "")..(ffi and " with FFI" or " without FFI") or _VERSION))
	print("   Integer bitwise operators: "..(Lua_has_int64 and "int64" or Lua_has_int32 and "int32" or "no"))
	print("   32-bit bitwise library:    "..(library_name or "not found"))
end

-- Selecting the most suitable implementation for given set of abilities
local method, branch
if is_LuaJIT and ffi then
	method = "Using 'ffi' library of LuaJIT"
	branch = "FFI"
elseif is_LuaJIT then
	method = "Using special code for sandboxed LuaJIT (no FFI)"
	branch = "LJ"
elseif Lua_has_int64 then
	method = "Using native int64 bitwise operators"
	branch = "INT64"
elseif Lua_has_int32 then
	method = "Using native int32 bitwise operators"
	branch = "INT32"
elseif library_name then   -- when bitwise library is available (Lua 5.2 with native library "bit32" or Lua 5.1 with external library "bit")
	method = "Using '"..library_name.."' library"
	branch = "LIB32"
else
	method = "Emulating bitwise operators using look-up table"
	branch = "EMUL"
end

if print_debug_messages then
	-- Printing the implementation selected to be used on your system
	print("Implementation selected:")
	print("   "..method)
end


--------------------------------------------------------------------------------
-- BASIC 32-BIT BITWISE FUNCTIONS
--------------------------------------------------------------------------------

local AND, OR, XOR, SHL, SHR, ROL, ROR, NOT, NORM, HEX, XOR_BYTE
-- Only low 32 bits of function arguments matter, high bits are ignored
-- The result of all functions (except HEX) is an integer inside "correct range":
--    for "bit" library:    (-2^31)..(2^31-1)
--    for "bit32" library:        0..(2^32-1)

if branch == "FFI" or branch == "LJ" or branch == "LIB32" then

	-- Your system has 32-bit bitwise library (either "bit" or "bit32")

	AND  = b.band                -- 2 arguments
	OR   = b.bor                 -- 2 arguments
	XOR  = b.bxor                -- 2..5 arguments
	SHL  = b.lshift              -- second argument is integer 0..31
	SHR  = b.rshift              -- second argument is integer 0..31
	ROL  = b.rol or b.lrotate    -- second argument is integer 0..31
	ROR  = b.ror or b.rrotate    -- second argument is integer 0..31
	NOT  = b.bnot                -- only for LuaJIT
	NORM = b.tobit               -- only for LuaJIT
	HEX  = b.tohex               -- returns string of 8 lowercase hexadecimal digits
	assert(AND and OR and XOR and SHL and SHR and ROL and ROR and NOT, "Library '"..library_name.."' is incomplete")
	XOR_BYTE = XOR               -- XOR of two bytes (0..255)

elseif branch == "EMUL" then

	-- Emulating 32-bit bitwise operations using 53-bit floating point arithmetic

	function SHL(x, n)
		return (x * 2^n) % 2^32
	end

	function SHR(x, n)
		x = x % 2^32 / 2^n
		return x - x % 1
	end

	function ROL(x, n)
		x = x % 2^32 * 2^n
		local r = x % 2^32
		return r + (x - r) / 2^32
	end

	function ROR(x, n)
		x = x % 2^32 / 2^n
		local r = x % 1
		return r * 2^32 + (x - r)
	end

	local AND_of_two_bytes = {[0] = 0}  -- look-up table (256*256 entries)
	local idx = 0
	for y = 0, 127 * 256, 256 do
		for x = y, y + 127 do
			x = AND_of_two_bytes[x] * 2
			AND_of_two_bytes[idx] = x
			AND_of_two_bytes[idx + 1] = x
			AND_of_two_bytes[idx + 256] = x
			AND_of_two_bytes[idx + 257] = x + 1
			idx = idx + 2
		end
		idx = idx + 256
	end

	local function and_or_xor(x, y, operation)
		-- operation: nil = AND, 1 = OR, 2 = XOR
		local x0 = x % 2^32
		local y0 = y % 2^32
		local rx = x0 % 256
		local ry = y0 % 256
		local res = AND_of_two_bytes[rx + ry * 256]
		x = x0 - rx
		y = (y0 - ry) / 256
		rx = x % 65536
		ry = y % 256
		res = res + AND_of_two_bytes[rx + ry] * 256
		x = (x - rx) / 256
		y = (y - ry) / 256
		rx = x % 65536 + y % 256
		res = res + AND_of_two_bytes[rx] * 65536
		res = res + AND_of_two_bytes[(x + y - rx) / 256] * 16777216
		if operation then
			res = x0 + y0 - operation * res
		end
		return res
	end

	function AND(x, y)
		return and_or_xor(x, y)
	end

	function OR(x, y)
		return and_or_xor(x, y, 1)
	end

	function XOR(x, y, z, t, u)          -- 2..5 arguments
		if z then
			if t then
				if u then
					t = and_or_xor(t, u, 2)
				end
				z = and_or_xor(z, t, 2)
			end
			y = and_or_xor(y, z, 2)
		end
		return and_or_xor(x, y, 2)
	end

	function XOR_BYTE(x, y)
		return x + y - 2 * AND_of_two_bytes[x + y * 256]
	end

end

HEX = HEX
	or
	pcall(string_format, "%x", 2^31) and
	function (x)  -- returns string of 8 lowercase hexadecimal digits
		return string_format("%08x", x % 4294967296)
	end
	or
	function (x)  -- for OpenWrt's dialect of Lua
		return string_format("%08x", (x + 2^31) % 2^32 - 2^31)
	end

local function XORA5(x, y)
	return XOR(x, y or 0xA5A5A5A5) % 4294967296
end

local function create_array_of_lanes()
	return {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
end


--------------------------------------------------------------------------------
-- CREATING OPTIMIZED INNER LOOP
--------------------------------------------------------------------------------

-- Inner loop functions
local sha256_feed_64, sha512_feed_128, md5_feed_64, sha1_feed_64, keccak_feed, blake2s_feed_64, blake2b_feed_128, blake3_feed_64

-- Arrays of SHA-2 "magic numbers" (in "INT64" and "FFI" branches "*_lo" arrays contain 64-bit values)
local sha2_K_lo, sha2_K_hi, sha2_H_lo, sha2_H_hi, sha3_RC_lo, sha3_RC_hi = {}, {}, {}, {}, {}, {}
local sha2_H_ext256 = {[224] = {}, [256] = sha2_H_hi}
local sha2_H_ext512_lo, sha2_H_ext512_hi = {[384] = {}, [512] = sha2_H_lo}, {[384] = {}, [512] = sha2_H_hi}
local md5_K, md5_sha1_H = {}, {0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0}
local md5_next_shift = {0, 0, 0, 0, 0, 0, 0, 0, 28, 25, 26, 27, 0, 0, 10, 9, 11, 12, 0, 15, 16, 17, 18, 0, 20, 22, 23, 21}
local HEX64, lanes_index_base  -- defined only for branches that internally use 64-bit integers: "INT64" and "FFI"
local common_W = {}    -- temporary table shared between all calculations (to avoid creating new temporary table every time)
local common_W_blake2b, common_W_blake2s, v_for_blake2s_feed_64 = common_W, common_W, {}
local K_lo_modulo, hi_factor, hi_factor_keccak = 4294967296, 0, 0
local sigma = {
	{  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16 },
	{ 15, 11,  5,  9, 10, 16, 14,  7,  2, 13,  1,  3, 12,  8,  6,  4 },
	{ 12,  9, 13,  1,  6,  3, 16, 14, 11, 15,  4,  7,  8,  2, 10,  5 },
	{  8, 10,  4,  2, 14, 13, 12, 15,  3,  7,  6, 11,  5,  1, 16,  9 },
	{ 10,  1,  6,  8,  3,  5, 11, 16, 15,  2, 12, 13,  7,  9,  4, 14 },
	{  3, 13,  7, 11,  1, 12,  9,  4,  5, 14,  8,  6, 16, 15,  2, 10 },
	{ 13,  6,  2, 16, 15, 14,  5, 11,  1,  8,  7,  4, 10,  3,  9, 12 },
	{ 14, 12,  8, 15, 13,  2,  4, 10,  6,  1, 16,  5,  9,  7,  3, 11 },
	{  7, 16, 15, 10, 12,  4,  1,  9, 13,  3, 14,  8,  2,  5, 11,  6 },
	{ 11,  3,  9,  5,  8,  7,  2,  6, 16, 12, 10, 15,  4, 13, 14,  1 },
};  sigma[11], sigma[12] = sigma[1], sigma[2]
local perm_blake3 = {
	1, 3, 4, 11, 13, 10, 12, 6,
	1, 3, 4, 11, 13, 10,
	2, 7, 5, 8, 14, 15, 16, 9,
	2, 7, 5, 8, 14, 15,
}

local function build_keccak_format(elem)
	local keccak_format = {}
	for _, size in ipairs{1, 9, 13, 17, 18, 21} do
		keccak_format[size] = "<"..string_rep(elem, size)
	end
	return keccak_format
end


if branch == "FFI" then

	local common_W_FFI_int32 = ffi.new("int32_t[?]", 80)   -- 64 is enough for SHA256, but 80 is needed for SHA-1
	common_W_blake2s = common_W_FFI_int32
	v_for_blake2s_feed_64 = ffi.new("int32_t[?]", 16)
	perm_blake3 = ffi.new("uint8_t[?]", #perm_blake3 + 1, 0, unpack(perm_blake3))
	for j = 1, 10 do
		sigma[j] = ffi.new("uint8_t[?]", #sigma[j] + 1, 0, unpack(sigma[j]))
	end;  sigma[11], sigma[12] = sigma[1], sigma[2]


	-- SHA256 implementation for "LuaJIT with FFI" branch

	function sha256_feed_64(H, str, offs, size)
		-- offs >= 0, size >= 0, size is multiple of 64
		local W, K = common_W_FFI_int32, sha2_K_hi
		for pos = offs, offs + size - 1, 64 do
			for j = 0, 15 do
				pos = pos + 4
				local a, b, c, d = byte(str, pos - 3, pos)   -- slow, but doesn't depend on endianness
				W[j] = OR(SHL(a, 24), SHL(b, 16), SHL(c, 8), d)
			end
			for j = 16, 63 do
				local a, b = W[j-15], W[j-2]
				W[j] = NORM( XOR(ROR(a, 7), ROL(a, 14), SHR(a, 3)) + XOR(ROL(b, 15), ROL(b, 13), SHR(b, 10)) + W[j-7] + W[j-16] )
			end
			local a, b, c, d, e, f, g, h = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
			for j = 0, 63, 8 do  -- Thanks to Peter Cawley for this workaround (unroll the loop to avoid "PHI shuffling too complex" due to PHIs overlap)
				local z = NORM( XOR(g, AND(e, XOR(f, g))) + XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + (W[j] + K[j+1] + h) )
				h, g, f, e = g, f, e, NORM( d + z )
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(g, AND(e, XOR(f, g))) + XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + (W[j+1] + K[j+2] + h) )
				h, g, f, e = g, f, e, NORM( d + z )
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(g, AND(e, XOR(f, g))) + XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + (W[j+2] + K[j+3] + h) )
				h, g, f, e = g, f, e, NORM( d + z )
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(g, AND(e, XOR(f, g))) + XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + (W[j+3] + K[j+4] + h) )
				h, g, f, e = g, f, e, NORM( d + z )
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(g, AND(e, XOR(f, g))) + XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + (W[j+4] + K[j+5] + h) )
				h, g, f, e = g, f, e, NORM( d + z )
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(g, AND(e, XOR(f, g))) + XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + (W[j+5] + K[j+6] + h) )
				h, g, f, e = g, f, e, NORM( d + z )
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(g, AND(e, XOR(f, g))) + XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + (W[j+6] + K[j+7] + h) )
				h, g, f, e = g, f, e, NORM( d + z )
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(g, AND(e, XOR(f, g))) + XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + (W[j+7] + K[j+8] + h) )
				h, g, f, e = g, f, e, NORM( d + z )
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
			end
			H[1], H[2], H[3], H[4] = NORM(a + H[1]), NORM(b + H[2]), NORM(c + H[3]), NORM(d + H[4])
			H[5], H[6], H[7], H[8] = NORM(e + H[5]), NORM(f + H[6]), NORM(g + H[7]), NORM(h + H[8])
		end
	end


	local common_W_FFI_int64 = ffi.new("int64_t[?]", 80)
	common_W_blake2b = common_W_FFI_int64
	local int64 = ffi.typeof"int64_t"
	local int32 = ffi.typeof"int32_t"
	local uint32 = ffi.typeof"uint32_t"
	hi_factor = int64(2^32)

	if is_LuaJIT_21 then   -- LuaJIT 2.1 supports bitwise 64-bit operations

		local AND64, OR64, XOR64, NOT64, SHL64, SHR64, ROL64, ROR64  -- introducing synonyms for better code readability
			= AND,   OR,   XOR,   NOT,   SHL,   SHR,   ROL,   ROR
		HEX64 = HEX


		-- BLAKE2b implementation for "LuaJIT 2.1 + FFI" branch

		do
			local v = ffi.new("int64_t[?]", 16)
			local W = common_W_blake2b

			local function G(a, b, c, d, k1, k2)
				local va, vb, vc, vd = v[a], v[b], v[c], v[d]
				va = W[k1] + (va + vb)
				vd = ROR64(XOR64(vd, va), 32)
				vc = vc + vd
				vb = ROR64(XOR64(vb, vc), 24)
				va = W[k2] + (va + vb)
				vd = ROR64(XOR64(vd, va), 16)
				vc = vc + vd
				vb = ROL64(XOR64(vb, vc), 1)
				v[a], v[b], v[c], v[d] = va, vb, vc, vd
			end

			function blake2b_feed_128(H, _, str, offs, size, bytes_compressed, last_block_size, is_last_node)
				-- offs >= 0, size >= 0, size is multiple of 128
				local h1, h2, h3, h4, h5, h6, h7, h8 = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
				for pos = offs, offs + size - 1, 128 do
					if str then
						for j = 1, 16 do
							pos = pos + 8
							local a, b, c, d, e, f, g, h = byte(str, pos - 7, pos)
							W[j] = XOR64(OR(SHL(h, 24), SHL(g, 16), SHL(f, 8), e) * int64(2^32), uint32(int32(OR(SHL(d, 24), SHL(c, 16), SHL(b, 8), a))))
						end
					end
					v[0x0], v[0x1], v[0x2], v[0x3], v[0x4], v[0x5], v[0x6], v[0x7] = h1, h2, h3, h4, h5, h6, h7, h8
					v[0x8], v[0x9], v[0xA], v[0xB], v[0xD], v[0xE], v[0xF] = sha2_H_lo[1], sha2_H_lo[2], sha2_H_lo[3], sha2_H_lo[4], sha2_H_lo[6], sha2_H_lo[7], sha2_H_lo[8]
					bytes_compressed = bytes_compressed + (last_block_size or 128)
					v[0xC] = XOR64(sha2_H_lo[5], bytes_compressed)  -- t0 = low_8_bytes(bytes_compressed)
					-- t1 = high_8_bytes(bytes_compressed) = 0,  message length is always below 2^53 bytes
					if last_block_size then  -- flag f0
						v[0xE] = NOT64(v[0xE])
					end
					if is_last_node then  -- flag f1
						v[0xF] = NOT64(v[0xF])
					end
					for j = 1, 12 do
						local row = sigma[j]
						G(0, 4,  8, 12, row[ 1], row[ 2])
						G(1, 5,  9, 13, row[ 3], row[ 4])
						G(2, 6, 10, 14, row[ 5], row[ 6])
						G(3, 7, 11, 15, row[ 7], row[ 8])
						G(0, 5, 10, 15, row[ 9], row[10])
						G(1, 6, 11, 12, row[11], row[12])
						G(2, 7,  8, 13, row[13], row[14])
						G(3, 4,  9, 14, row[15], row[16])
					end
					h1 = XOR64(h1, v[0x0], v[0x8])
					h2 = XOR64(h2, v[0x1], v[0x9])
					h3 = XOR64(h3, v[0x2], v[0xA])
					h4 = XOR64(h4, v[0x3], v[0xB])
					h5 = XOR64(h5, v[0x4], v[0xC])
					h6 = XOR64(h6, v[0x5], v[0xD])
					h7 = XOR64(h7, v[0x6], v[0xE])
					h8 = XOR64(h8, v[0x7], v[0xF])
				end
				H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8] = h1, h2, h3, h4, h5, h6, h7, h8
				return bytes_compressed
			end

		end


		-- SHA-3 implementation for "LuaJIT 2.1 + FFI" branch

		local arr64_t = ffi.typeof"int64_t[?]"
		-- lanes array is indexed from 0
		lanes_index_base = 0
		hi_factor_keccak = int64(2^32)

		function create_array_of_lanes()
			return arr64_t(30)  -- 25 + 5 for temporary usage
		end

		function keccak_feed(lanes, _, str, offs, size, block_size_in_bytes)
			-- offs >= 0, size >= 0, size is multiple of block_size_in_bytes, block_size_in_bytes is positive multiple of 8
			local RC = sha3_RC_lo
			local qwords_qty = SHR(block_size_in_bytes, 3)
			for pos = offs, offs + size - 1, block_size_in_bytes do
				for j = 0, qwords_qty - 1 do
					pos = pos + 8
					local h, g, f, e, d, c, b, a = byte(str, pos - 7, pos)   -- slow, but doesn't depend on endianness
					lanes[j] = XOR64(lanes[j], OR64(OR(SHL(a, 24), SHL(b, 16), SHL(c, 8), d) * int64(2^32), uint32(int32(OR(SHL(e, 24), SHL(f, 16), SHL(g, 8), h)))))
				end
				for round_idx = 1, 24 do
					for j = 0, 4 do
						lanes[25 + j] = XOR64(lanes[j], lanes[j+5], lanes[j+10], lanes[j+15], lanes[j+20])
					end
					local D = XOR64(lanes[25], ROL64(lanes[27], 1))
					lanes[1], lanes[6], lanes[11], lanes[16] = ROL64(XOR64(D, lanes[6]), 44), ROL64(XOR64(D, lanes[16]), 45), ROL64(XOR64(D, lanes[1]), 1), ROL64(XOR64(D, lanes[11]), 10)
					lanes[21] = ROL64(XOR64(D, lanes[21]), 2)
					D = XOR64(lanes[26], ROL64(lanes[28], 1))
					lanes[2], lanes[7], lanes[12], lanes[22] = ROL64(XOR64(D, lanes[12]), 43), ROL64(XOR64(D, lanes[22]), 61), ROL64(XOR64(D, lanes[7]), 6), ROL64(XOR64(D, lanes[2]), 62)
					lanes[17] = ROL64(XOR64(D, lanes[17]), 15)
					D = XOR64(lanes[27], ROL64(lanes[29], 1))
					lanes[3], lanes[8], lanes[18], lanes[23] = ROL64(XOR64(D, lanes[18]), 21), ROL64(XOR64(D, lanes[3]), 28), ROL64(XOR64(D, lanes[23]), 56), ROL64(XOR64(D, lanes[8]), 55)
					lanes[13] = ROL64(XOR64(D, lanes[13]), 25)
					D = XOR64(lanes[28], ROL64(lanes[25], 1))
					lanes[4], lanes[14], lanes[19], lanes[24] = ROL64(XOR64(D, lanes[24]), 14), ROL64(XOR64(D, lanes[19]), 8), ROL64(XOR64(D, lanes[4]), 27), ROL64(XOR64(D, lanes[14]), 39)
					lanes[9] = ROL64(XOR64(D, lanes[9]), 20)
					D = XOR64(lanes[29], ROL64(lanes[26], 1))
					lanes[5], lanes[10], lanes[15], lanes[20] = ROL64(XOR64(D, lanes[10]), 3), ROL64(XOR64(D, lanes[20]), 18), ROL64(XOR64(D, lanes[5]), 36), ROL64(XOR64(D, lanes[15]), 41)
					lanes[0] = XOR64(D, lanes[0])
					lanes[0], lanes[1], lanes[2], lanes[3], lanes[4] = XOR64(lanes[0], AND64(NOT64(lanes[1]), lanes[2]), RC[round_idx]), XOR64(lanes[1], AND64(NOT64(lanes[2]), lanes[3])), XOR64(lanes[2], AND64(NOT64(lanes[3]), lanes[4])), XOR64(lanes[3], AND64(NOT64(lanes[4]), lanes[0])), XOR64(lanes[4], AND64(NOT64(lanes[0]), lanes[1]))
					lanes[5], lanes[6], lanes[7], lanes[8], lanes[9] = XOR64(lanes[8], AND64(NOT64(lanes[9]), lanes[5])), XOR64(lanes[9], AND64(NOT64(lanes[5]), lanes[6])), XOR64(lanes[5], AND64(NOT64(lanes[6]), lanes[7])), XOR64(lanes[6], AND64(NOT64(lanes[7]), lanes[8])), XOR64(lanes[7], AND64(NOT64(lanes[8]), lanes[9]))
					lanes[10], lanes[11], lanes[12], lanes[13], lanes[14] = XOR64(lanes[11], AND64(NOT64(lanes[12]), lanes[13])), XOR64(lanes[12], AND64(NOT64(lanes[13]), lanes[14])), XOR64(lanes[13], AND64(NOT64(lanes[14]), lanes[10])), XOR64(lanes[14], AND64(NOT64(lanes[10]), lanes[11])), XOR64(lanes[10], AND64(NOT64(lanes[11]), lanes[12]))
					lanes[15], lanes[16], lanes[17], lanes[18], lanes[19] = XOR64(lanes[19], AND64(NOT64(lanes[15]), lanes[16])), XOR64(lanes[15], AND64(NOT64(lanes[16]), lanes[17])), XOR64(lanes[16], AND64(NOT64(lanes[17]), lanes[18])), XOR64(lanes[17], AND64(NOT64(lanes[18]), lanes[19])), XOR64(lanes[18], AND64(NOT64(lanes[19]), lanes[15]))
					lanes[20], lanes[21], lanes[22], lanes[23], lanes[24] = XOR64(lanes[22], AND64(NOT64(lanes[23]), lanes[24])), XOR64(lanes[23], AND64(NOT64(lanes[24]), lanes[20])), XOR64(lanes[24], AND64(NOT64(lanes[20]), lanes[21])), XOR64(lanes[20], AND64(NOT64(lanes[21]), lanes[22])), XOR64(lanes[21], AND64(NOT64(lanes[22]), lanes[23]))
				end
			end
		end


		local A5_long = 0xA5A5A5A5 * int64(2^32 + 1)  -- It's impossible to use constant 0xA5A5A5A5A5A5A5A5LL because it will raise syntax error on other Lua versions

		function XORA5(long, long2)
			return XOR64(long, long2 or A5_long)
		end


		-- SHA512 implementation for "LuaJIT 2.1 + FFI" branch

		function sha512_feed_128(H, _, str, offs, size)
			-- offs >= 0, size >= 0, size is multiple of 128
			local W, K = common_W_FFI_int64, sha2_K_lo
			for pos = offs, offs + size - 1, 128 do
				for j = 0, 15 do
					pos = pos + 8
					local a, b, c, d, e, f, g, h = byte(str, pos - 7, pos)   -- slow, but doesn't depend on endianness
					W[j] = OR64(OR(SHL(a, 24), SHL(b, 16), SHL(c, 8), d) * int64(2^32), uint32(int32(OR(SHL(e, 24), SHL(f, 16), SHL(g, 8), h))))
				end
				for j = 16, 79 do
					local a, b = W[j-15], W[j-2]
					W[j] = XOR64(ROR64(a, 1), ROR64(a, 8), SHR64(a, 7)) + XOR64(ROR64(b, 19), ROL64(b, 3), SHR64(b, 6)) + W[j-7] + W[j-16]
				end
				local a, b, c, d, e, f, g, h = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
				for j = 0, 79, 8 do
					local z = XOR64(ROR64(e, 14), ROR64(e, 18), ROL64(e, 23)) + XOR64(g, AND64(e, XOR64(f, g))) + h + K[j+1] + W[j]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XOR64(AND64(XOR64(a, b), c), AND64(a, b)) + XOR64(ROR64(a, 28), ROL64(a, 25), ROL64(a, 30)) + z
					z = XOR64(ROR64(e, 14), ROR64(e, 18), ROL64(e, 23)) + XOR64(g, AND64(e, XOR64(f, g))) + h + K[j+2] + W[j+1]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XOR64(AND64(XOR64(a, b), c), AND64(a, b)) + XOR64(ROR64(a, 28), ROL64(a, 25), ROL64(a, 30)) + z
					z = XOR64(ROR64(e, 14), ROR64(e, 18), ROL64(e, 23)) + XOR64(g, AND64(e, XOR64(f, g))) + h + K[j+3] + W[j+2]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XOR64(AND64(XOR64(a, b), c), AND64(a, b)) + XOR64(ROR64(a, 28), ROL64(a, 25), ROL64(a, 30)) + z
					z = XOR64(ROR64(e, 14), ROR64(e, 18), ROL64(e, 23)) + XOR64(g, AND64(e, XOR64(f, g))) + h + K[j+4] + W[j+3]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XOR64(AND64(XOR64(a, b), c), AND64(a, b)) + XOR64(ROR64(a, 28), ROL64(a, 25), ROL64(a, 30)) + z
					z = XOR64(ROR64(e, 14), ROR64(e, 18), ROL64(e, 23)) + XOR64(g, AND64(e, XOR64(f, g))) + h + K[j+5] + W[j+4]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XOR64(AND64(XOR64(a, b), c), AND64(a, b)) + XOR64(ROR64(a, 28), ROL64(a, 25), ROL64(a, 30)) + z
					z = XOR64(ROR64(e, 14), ROR64(e, 18), ROL64(e, 23)) + XOR64(g, AND64(e, XOR64(f, g))) + h + K[j+6] + W[j+5]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XOR64(AND64(XOR64(a, b), c), AND64(a, b)) + XOR64(ROR64(a, 28), ROL64(a, 25), ROL64(a, 30)) + z
					z = XOR64(ROR64(e, 14), ROR64(e, 18), ROL64(e, 23)) + XOR64(g, AND64(e, XOR64(f, g))) + h + K[j+7] + W[j+6]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XOR64(AND64(XOR64(a, b), c), AND64(a, b)) + XOR64(ROR64(a, 28), ROL64(a, 25), ROL64(a, 30)) + z
					z = XOR64(ROR64(e, 14), ROR64(e, 18), ROL64(e, 23)) + XOR64(g, AND64(e, XOR64(f, g))) + h + K[j+8] + W[j+7]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XOR64(AND64(XOR64(a, b), c), AND64(a, b)) + XOR64(ROR64(a, 28), ROL64(a, 25), ROL64(a, 30)) + z
				end
				H[1] = a + H[1]
				H[2] = b + H[2]
				H[3] = c + H[3]
				H[4] = d + H[4]
				H[5] = e + H[5]
				H[6] = f + H[6]
				H[7] = g + H[7]
				H[8] = h + H[8]
			end
		end

	else  -- LuaJIT 2.0 doesn't support 64-bit bitwise operations

		local U = ffi.new("union{int64_t i64; struct{int32_t "..(ffi.abi("le") and "lo, hi" or "hi, lo")..";} i32;}[3]")
		-- this array of unions is used for fast splitting int64 into int32_high and int32_low

		-- "xorrific" 64-bit functions :-)
		-- int64 input is splitted into two int32 parts, some bitwise 32-bit operations are performed, finally the result is converted to int64
		-- these functions are needed because bit.* functions in LuaJIT 2.0 don't work with int64_t

		local function XORROR64_1(a)
			-- return XOR64(ROR64(a, 1), ROR64(a, 8), SHR64(a, 7))
			U[0].i64 = a
			local a_lo, a_hi = U[0].i32.lo, U[0].i32.hi
			local t_lo = XOR(SHR(a_lo, 1), SHL(a_hi, 31), SHR(a_lo, 8), SHL(a_hi, 24), SHR(a_lo, 7), SHL(a_hi, 25))
			local t_hi = XOR(SHR(a_hi, 1), SHL(a_lo, 31), SHR(a_hi, 8), SHL(a_lo, 24), SHR(a_hi, 7))
			return t_hi * int64(2^32) + uint32(int32(t_lo))
		end

		local function XORROR64_2(b)
			-- return XOR64(ROR64(b, 19), ROL64(b, 3), SHR64(b, 6))
			U[0].i64 = b
			local b_lo, b_hi = U[0].i32.lo, U[0].i32.hi
			local u_lo = XOR(SHR(b_lo, 19), SHL(b_hi, 13), SHL(b_lo, 3), SHR(b_hi, 29), SHR(b_lo, 6), SHL(b_hi, 26))
			local u_hi = XOR(SHR(b_hi, 19), SHL(b_lo, 13), SHL(b_hi, 3), SHR(b_lo, 29), SHR(b_hi, 6))
			return u_hi * int64(2^32) + uint32(int32(u_lo))
		end

		local function XORROR64_3(e)
			-- return XOR64(ROR64(e, 14), ROR64(e, 18), ROL64(e, 23))
			U[0].i64 = e
			local e_lo, e_hi = U[0].i32.lo, U[0].i32.hi
			local u_lo = XOR(SHR(e_lo, 14), SHL(e_hi, 18), SHR(e_lo, 18), SHL(e_hi, 14), SHL(e_lo, 23), SHR(e_hi, 9))
			local u_hi = XOR(SHR(e_hi, 14), SHL(e_lo, 18), SHR(e_hi, 18), SHL(e_lo, 14), SHL(e_hi, 23), SHR(e_lo, 9))
			return u_hi * int64(2^32) + uint32(int32(u_lo))
		end

		local function XORROR64_6(a)
			-- return XOR64(ROR64(a, 28), ROL64(a, 25), ROL64(a, 30))
			U[0].i64 = a
			local b_lo, b_hi = U[0].i32.lo, U[0].i32.hi
			local u_lo = XOR(SHR(b_lo, 28), SHL(b_hi, 4), SHL(b_lo, 30), SHR(b_hi, 2), SHL(b_lo, 25), SHR(b_hi, 7))
			local u_hi = XOR(SHR(b_hi, 28), SHL(b_lo, 4), SHL(b_hi, 30), SHR(b_lo, 2), SHL(b_hi, 25), SHR(b_lo, 7))
			return u_hi * int64(2^32) + uint32(int32(u_lo))
		end

		local function XORROR64_4(e, f, g)
			-- return XOR64(g, AND64(e, XOR64(f, g)))
			U[0].i64 = f
			U[1].i64 = g
			U[2].i64 = e
			local f_lo, f_hi = U[0].i32.lo, U[0].i32.hi
			local g_lo, g_hi = U[1].i32.lo, U[1].i32.hi
			local e_lo, e_hi = U[2].i32.lo, U[2].i32.hi
			local result_lo = XOR(g_lo, AND(e_lo, XOR(f_lo, g_lo)))
			local result_hi = XOR(g_hi, AND(e_hi, XOR(f_hi, g_hi)))
			return result_hi * int64(2^32) + uint32(int32(result_lo))
		end

		local function XORROR64_5(a, b, c)
			-- return XOR64(AND64(XOR64(a, b), c), AND64(a, b))
			U[0].i64 = a
			U[1].i64 = b
			U[2].i64 = c
			local a_lo, a_hi = U[0].i32.lo, U[0].i32.hi
			local b_lo, b_hi = U[1].i32.lo, U[1].i32.hi
			local c_lo, c_hi = U[2].i32.lo, U[2].i32.hi
			local result_lo = XOR(AND(XOR(a_lo, b_lo), c_lo), AND(a_lo, b_lo))
			local result_hi = XOR(AND(XOR(a_hi, b_hi), c_hi), AND(a_hi, b_hi))
			return result_hi * int64(2^32) + uint32(int32(result_lo))
		end

		local function XORROR64_7(a, b, m)
			-- return ROR64(XOR64(a, b), m), m = 1..31
			U[0].i64 = a
			U[1].i64 = b
			local a_lo, a_hi = U[0].i32.lo, U[0].i32.hi
			local b_lo, b_hi = U[1].i32.lo, U[1].i32.hi
			local c_lo, c_hi = XOR(a_lo, b_lo), XOR(a_hi, b_hi)
			local t_lo = XOR(SHR(c_lo, m), SHL(c_hi, -m))
			local t_hi = XOR(SHR(c_hi, m), SHL(c_lo, -m))
			return t_hi * int64(2^32) + uint32(int32(t_lo))
		end

		local function XORROR64_8(a, b)
			-- return ROL64(XOR64(a, b), 1)
			U[0].i64 = a
			U[1].i64 = b
			local a_lo, a_hi = U[0].i32.lo, U[0].i32.hi
			local b_lo, b_hi = U[1].i32.lo, U[1].i32.hi
			local c_lo, c_hi = XOR(a_lo, b_lo), XOR(a_hi, b_hi)
			local t_lo = XOR(SHL(c_lo, 1), SHR(c_hi, 31))
			local t_hi = XOR(SHL(c_hi, 1), SHR(c_lo, 31))
			return t_hi * int64(2^32) + uint32(int32(t_lo))
		end

		local function XORROR64_9(a, b)
			-- return ROR64(XOR64(a, b), 32)
			U[0].i64 = a
			U[1].i64 = b
			local a_lo, a_hi = U[0].i32.lo, U[0].i32.hi
			local b_lo, b_hi = U[1].i32.lo, U[1].i32.hi
			local t_hi, t_lo = XOR(a_lo, b_lo), XOR(a_hi, b_hi)
			return t_hi * int64(2^32) + uint32(int32(t_lo))
		end

		local function XOR64(a, b)
			-- return XOR64(a, b)
			U[0].i64 = a
			U[1].i64 = b
			local a_lo, a_hi = U[0].i32.lo, U[0].i32.hi
			local b_lo, b_hi = U[1].i32.lo, U[1].i32.hi
			local t_lo, t_hi = XOR(a_lo, b_lo), XOR(a_hi, b_hi)
			return t_hi * int64(2^32) + uint32(int32(t_lo))
		end

		local function XORROR64_11(a, b, c)
			-- return XOR64(a, b, c)
			U[0].i64 = a
			U[1].i64 = b
			U[2].i64 = c
			local a_lo, a_hi = U[0].i32.lo, U[0].i32.hi
			local b_lo, b_hi = U[1].i32.lo, U[1].i32.hi
			local c_lo, c_hi = U[2].i32.lo, U[2].i32.hi
			local t_lo, t_hi = XOR(a_lo, b_lo, c_lo), XOR(a_hi, b_hi, c_hi)
			return t_hi * int64(2^32) + uint32(int32(t_lo))
		end

		function XORA5(long, long2)
			-- return XOR64(long, long2 or 0xA5A5A5A5A5A5A5A5)
			U[0].i64 = long
			local lo32, hi32 = U[0].i32.lo, U[0].i32.hi
			local long2_lo, long2_hi = 0xA5A5A5A5, 0xA5A5A5A5
			if long2 then
				U[1].i64 = long2
				long2_lo, long2_hi = U[1].i32.lo, U[1].i32.hi
			end
			lo32 = XOR(lo32, long2_lo)
			hi32 = XOR(hi32, long2_hi)
			return hi32 * int64(2^32) + uint32(int32(lo32))
		end

		function HEX64(long)
			U[0].i64 = long
			return HEX(U[0].i32.hi)..HEX(U[0].i32.lo)
		end


		-- SHA512 implementation for "LuaJIT 2.0 + FFI" branch

		function sha512_feed_128(H, _, str, offs, size)
			-- offs >= 0, size >= 0, size is multiple of 128
			local W, K = common_W_FFI_int64, sha2_K_lo
			for pos = offs, offs + size - 1, 128 do
				for j = 0, 15 do
					pos = pos + 8
					local a, b, c, d, e, f, g, h = byte(str, pos - 7, pos)   -- slow, but doesn't depend on endianness
					W[j] = OR(SHL(a, 24), SHL(b, 16), SHL(c, 8), d) * int64(2^32) + uint32(int32(OR(SHL(e, 24), SHL(f, 16), SHL(g, 8), h)))
				end
				for j = 16, 79 do
					W[j] = XORROR64_1(W[j-15]) + XORROR64_2(W[j-2]) + W[j-7] + W[j-16]
				end
				local a, b, c, d, e, f, g, h = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
				for j = 0, 79, 8 do
					local z = XORROR64_3(e) + XORROR64_4(e, f, g) + h + K[j+1] + W[j]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XORROR64_5(a, b, c) + XORROR64_6(a) + z
					z = XORROR64_3(e) + XORROR64_4(e, f, g) + h + K[j+2] + W[j+1]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XORROR64_5(a, b, c) + XORROR64_6(a) + z
					z = XORROR64_3(e) + XORROR64_4(e, f, g) + h + K[j+3] + W[j+2]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XORROR64_5(a, b, c) + XORROR64_6(a) + z
					z = XORROR64_3(e) + XORROR64_4(e, f, g) + h + K[j+4] + W[j+3]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XORROR64_5(a, b, c) + XORROR64_6(a) + z
					z = XORROR64_3(e) + XORROR64_4(e, f, g) + h + K[j+5] + W[j+4]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XORROR64_5(a, b, c) + XORROR64_6(a) + z
					z = XORROR64_3(e) + XORROR64_4(e, f, g) + h + K[j+6] + W[j+5]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XORROR64_5(a, b, c) + XORROR64_6(a) + z
					z = XORROR64_3(e) + XORROR64_4(e, f, g) + h + K[j+7] + W[j+6]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XORROR64_5(a, b, c) + XORROR64_6(a) + z
					z = XORROR64_3(e) + XORROR64_4(e, f, g) + h + K[j+8] + W[j+7]
					h, g, f, e = g, f, e, z + d
					d, c, b, a = c, b, a, XORROR64_5(a, b, c) + XORROR64_6(a) + z
				end
				H[1] = a + H[1]
				H[2] = b + H[2]
				H[3] = c + H[3]
				H[4] = d + H[4]
				H[5] = e + H[5]
				H[6] = f + H[6]
				H[7] = g + H[7]
				H[8] = h + H[8]
			end
		end


		-- BLAKE2b implementation for "LuaJIT 2.0 + FFI" branch

		do
			local v = ffi.new("int64_t[?]", 16)
			local W = common_W_blake2b

			local function G(a, b, c, d, k1, k2)
				local va, vb, vc, vd = v[a], v[b], v[c], v[d]
				va = W[k1] + (va + vb)
				vd = XORROR64_9(vd, va)
				vc = vc + vd
				vb = XORROR64_7(vb, vc, 24)
				va = W[k2] + (va + vb)
				vd = XORROR64_7(vd, va, 16)
				vc = vc + vd
				vb = XORROR64_8(vb, vc)
				v[a], v[b], v[c], v[d] = va, vb, vc, vd
			end

			function blake2b_feed_128(H, _, str, offs, size, bytes_compressed, last_block_size, is_last_node)
				-- offs >= 0, size >= 0, size is multiple of 128
				local h1, h2, h3, h4, h5, h6, h7, h8 = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
				for pos = offs, offs + size - 1, 128 do
					if str then
						for j = 1, 16 do
							pos = pos + 8
							local a, b, c, d, e, f, g, h = byte(str, pos - 7, pos)
							W[j] = XOR64(OR(SHL(h, 24), SHL(g, 16), SHL(f, 8), e) * int64(2^32), uint32(int32(OR(SHL(d, 24), SHL(c, 16), SHL(b, 8), a))))
						end
					end
					v[0x0], v[0x1], v[0x2], v[0x3], v[0x4], v[0x5], v[0x6], v[0x7] = h1, h2, h3, h4, h5, h6, h7, h8
					v[0x8], v[0x9], v[0xA], v[0xB], v[0xD], v[0xE], v[0xF] = sha2_H_lo[1], sha2_H_lo[2], sha2_H_lo[3], sha2_H_lo[4], sha2_H_lo[6], sha2_H_lo[7], sha2_H_lo[8]
					bytes_compressed = bytes_compressed + (last_block_size or 128)
					v[0xC] = XOR64(sha2_H_lo[5], bytes_compressed)  -- t0 = low_8_bytes(bytes_compressed)
					-- t1 = high_8_bytes(bytes_compressed) = 0,  message length is always below 2^53 bytes
					if last_block_size then  -- flag f0
						v[0xE] = -1 - v[0xE]
					end
					if is_last_node then  -- flag f1
						v[0xF] = -1 - v[0xF]
					end
					for j = 1, 12 do
						local row = sigma[j]
						G(0, 4,  8, 12, row[ 1], row[ 2])
						G(1, 5,  9, 13, row[ 3], row[ 4])
						G(2, 6, 10, 14, row[ 5], row[ 6])
						G(3, 7, 11, 15, row[ 7], row[ 8])
						G(0, 5, 10, 15, row[ 9], row[10])
						G(1, 6, 11, 12, row[11], row[12])
						G(2, 7,  8, 13, row[13], row[14])
						G(3, 4,  9, 14, row[15], row[16])
					end
					h1 = XORROR64_11(h1, v[0x0], v[0x8])
					h2 = XORROR64_11(h2, v[0x1], v[0x9])
					h3 = XORROR64_11(h3, v[0x2], v[0xA])
					h4 = XORROR64_11(h4, v[0x3], v[0xB])
					h5 = XORROR64_11(h5, v[0x4], v[0xC])
					h6 = XORROR64_11(h6, v[0x5], v[0xD])
					h7 = XORROR64_11(h7, v[0x6], v[0xE])
					h8 = XORROR64_11(h8, v[0x7], v[0xF])
				end
				H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8] = h1, h2, h3, h4, h5, h6, h7, h8
				return bytes_compressed
			end

		end

	end


	-- MD5 implementation for "LuaJIT with FFI" branch

	function md5_feed_64(H, str, offs, size)
		-- offs >= 0, size >= 0, size is multiple of 64
		local W, K = common_W_FFI_int32, md5_K
		for pos = offs, offs + size - 1, 64 do
			for j = 0, 15 do
				pos = pos + 4
				local a, b, c, d = byte(str, pos - 3, pos)   -- slow, but doesn't depend on endianness
				W[j] = OR(SHL(d, 24), SHL(c, 16), SHL(b, 8), a)
			end
			local a, b, c, d = H[1], H[2], H[3], H[4]
			for j = 0, 15, 4 do
				a, d, c, b = d, c, b, NORM(ROL(XOR(d, AND(b, XOR(c, d))) + (K[j+1] + W[j  ] + a),  7) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(d, AND(b, XOR(c, d))) + (K[j+2] + W[j+1] + a), 12) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(d, AND(b, XOR(c, d))) + (K[j+3] + W[j+2] + a), 17) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(d, AND(b, XOR(c, d))) + (K[j+4] + W[j+3] + a), 22) + b)
			end
			for j = 16, 31, 4 do
				local g = 5*j
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, AND(d, XOR(b, c))) + (K[j+1] + W[AND(g + 1, 15)] + a),  5) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, AND(d, XOR(b, c))) + (K[j+2] + W[AND(g + 6, 15)] + a),  9) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, AND(d, XOR(b, c))) + (K[j+3] + W[AND(g - 5, 15)] + a), 14) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, AND(d, XOR(b, c))) + (K[j+4] + W[AND(g    , 15)] + a), 20) + b)
			end
			for j = 32, 47, 4 do
				local g = 3*j
				a, d, c, b = d, c, b, NORM(ROL(XOR(b, c, d) + (K[j+1] + W[AND(g + 5, 15)] + a),  4) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(b, c, d) + (K[j+2] + W[AND(g + 8, 15)] + a), 11) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(b, c, d) + (K[j+3] + W[AND(g - 5, 15)] + a), 16) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(b, c, d) + (K[j+4] + W[AND(g - 2, 15)] + a), 23) + b)
			end
			for j = 48, 63, 4 do
				local g = 7*j
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, OR(b, NOT(d))) + (K[j+1] + W[AND(g    , 15)] + a),  6) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, OR(b, NOT(d))) + (K[j+2] + W[AND(g + 7, 15)] + a), 10) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, OR(b, NOT(d))) + (K[j+3] + W[AND(g - 2, 15)] + a), 15) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, OR(b, NOT(d))) + (K[j+4] + W[AND(g + 5, 15)] + a), 21) + b)
			end
			H[1], H[2], H[3], H[4] = NORM(a + H[1]), NORM(b + H[2]), NORM(c + H[3]), NORM(d + H[4])
		end
	end


	-- SHA-1 implementation for "LuaJIT with FFI" branch

	function sha1_feed_64(H, str, offs, size)
		-- offs >= 0, size >= 0, size is multiple of 64
		local W = common_W_FFI_int32
		for pos = offs, offs + size - 1, 64 do
			for j = 0, 15 do
				pos = pos + 4
				local a, b, c, d = byte(str, pos - 3, pos)   -- slow, but doesn't depend on endianness
				W[j] = OR(SHL(a, 24), SHL(b, 16), SHL(c, 8), d)
			end
			for j = 16, 79 do
				W[j] = ROL(XOR(W[j-3], W[j-8], W[j-14], W[j-16]), 1)
			end
			local a, b, c, d, e = H[1], H[2], H[3], H[4], H[5]
			for j = 0, 19, 5 do
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(d, AND(b, XOR(d, c))) + (W[j]   + 0x5A827999 + e))          -- constant = floor(2^30 * sqrt(2))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(d, AND(b, XOR(d, c))) + (W[j+1] + 0x5A827999 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(d, AND(b, XOR(d, c))) + (W[j+2] + 0x5A827999 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(d, AND(b, XOR(d, c))) + (W[j+3] + 0x5A827999 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(d, AND(b, XOR(d, c))) + (W[j+4] + 0x5A827999 + e))
			end
			for j = 20, 39, 5 do
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j]   + 0x6ED9EBA1 + e))                       -- 2^30 * sqrt(3)
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+1] + 0x6ED9EBA1 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+2] + 0x6ED9EBA1 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+3] + 0x6ED9EBA1 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+4] + 0x6ED9EBA1 + e))
			end
			for j = 40, 59, 5 do
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(AND(d, XOR(b, c)), AND(b, c)) + (W[j]   + 0x8F1BBCDC + e))  -- 2^30 * sqrt(5)
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(AND(d, XOR(b, c)), AND(b, c)) + (W[j+1] + 0x8F1BBCDC + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(AND(d, XOR(b, c)), AND(b, c)) + (W[j+2] + 0x8F1BBCDC + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(AND(d, XOR(b, c)), AND(b, c)) + (W[j+3] + 0x8F1BBCDC + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(AND(d, XOR(b, c)), AND(b, c)) + (W[j+4] + 0x8F1BBCDC + e))
			end
			for j = 60, 79, 5 do
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j]   + 0xCA62C1D6 + e))                       -- 2^30 * sqrt(10)
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+1] + 0xCA62C1D6 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+2] + 0xCA62C1D6 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+3] + 0xCA62C1D6 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+4] + 0xCA62C1D6 + e))
			end
			H[1], H[2], H[3], H[4], H[5] = NORM(a + H[1]), NORM(b + H[2]), NORM(c + H[3]), NORM(d + H[4]), NORM(e + H[5])
		end
	end

end


if branch == "FFI" and not is_LuaJIT_21 or branch == "LJ" then

	if branch == "FFI" then
		local arr32_t = ffi.typeof"int32_t[?]"

		function create_array_of_lanes()
			return arr32_t(31)  -- 25 + 5 + 1 (due to 1-based indexing)
		end

	end


	-- SHA-3 implementation for "LuaJIT 2.0 + FFI" and "LuaJIT without FFI" branches

	function keccak_feed(lanes_lo, lanes_hi, str, offs, size, block_size_in_bytes)
		-- offs >= 0, size >= 0, size is multiple of block_size_in_bytes, block_size_in_bytes is positive multiple of 8
		local RC_lo, RC_hi = sha3_RC_lo, sha3_RC_hi
		local qwords_qty = SHR(block_size_in_bytes, 3)
		for pos = offs, offs + size - 1, block_size_in_bytes do
			for j = 1, qwords_qty do
				local a, b, c, d = byte(str, pos + 1, pos + 4)
				lanes_lo[j] = XOR(lanes_lo[j], OR(SHL(d, 24), SHL(c, 16), SHL(b, 8), a))
				pos = pos + 8
				a, b, c, d = byte(str, pos - 3, pos)
				lanes_hi[j] = XOR(lanes_hi[j], OR(SHL(d, 24), SHL(c, 16), SHL(b, 8), a))
			end
			for round_idx = 1, 24 do
				for j = 1, 5 do
					lanes_lo[25 + j] = XOR(lanes_lo[j], lanes_lo[j + 5], lanes_lo[j + 10], lanes_lo[j + 15], lanes_lo[j + 20])
				end
				for j = 1, 5 do
					lanes_hi[25 + j] = XOR(lanes_hi[j], lanes_hi[j + 5], lanes_hi[j + 10], lanes_hi[j + 15], lanes_hi[j + 20])
				end
				local D_lo = XOR(lanes_lo[26], SHL(lanes_lo[28], 1), SHR(lanes_hi[28], 31))
				local D_hi = XOR(lanes_hi[26], SHL(lanes_hi[28], 1), SHR(lanes_lo[28], 31))
				lanes_lo[2], lanes_hi[2], lanes_lo[7], lanes_hi[7], lanes_lo[12], lanes_hi[12], lanes_lo[17], lanes_hi[17] = XOR(SHR(XOR(D_lo, lanes_lo[7]), 20), SHL(XOR(D_hi, lanes_hi[7]), 12)), XOR(SHR(XOR(D_hi, lanes_hi[7]), 20), SHL(XOR(D_lo, lanes_lo[7]), 12)), XOR(SHR(XOR(D_lo, lanes_lo[17]), 19), SHL(XOR(D_hi, lanes_hi[17]), 13)), XOR(SHR(XOR(D_hi, lanes_hi[17]), 19), SHL(XOR(D_lo, lanes_lo[17]), 13)), XOR(SHL(XOR(D_lo, lanes_lo[2]), 1), SHR(XOR(D_hi, lanes_hi[2]), 31)), XOR(SHL(XOR(D_hi, lanes_hi[2]), 1), SHR(XOR(D_lo, lanes_lo[2]), 31)), XOR(SHL(XOR(D_lo, lanes_lo[12]), 10), SHR(XOR(D_hi, lanes_hi[12]), 22)), XOR(SHL(XOR(D_hi, lanes_hi[12]), 10), SHR(XOR(D_lo, lanes_lo[12]), 22))
				local L, H = XOR(D_lo, lanes_lo[22]), XOR(D_hi, lanes_hi[22])
				lanes_lo[22], lanes_hi[22] = XOR(SHL(L, 2), SHR(H, 30)), XOR(SHL(H, 2), SHR(L, 30))
				D_lo = XOR(lanes_lo[27], SHL(lanes_lo[29], 1), SHR(lanes_hi[29], 31))
				D_hi = XOR(lanes_hi[27], SHL(lanes_hi[29], 1), SHR(lanes_lo[29], 31))
				lanes_lo[3], lanes_hi[3], lanes_lo[8], lanes_hi[8], lanes_lo[13], lanes_hi[13], lanes_lo[23], lanes_hi[23] = XOR(SHR(XOR(D_lo, lanes_lo[13]), 21), SHL(XOR(D_hi, lanes_hi[13]), 11)), XOR(SHR(XOR(D_hi, lanes_hi[13]), 21), SHL(XOR(D_lo, lanes_lo[13]), 11)), XOR(SHR(XOR(D_lo, lanes_lo[23]), 3), SHL(XOR(D_hi, lanes_hi[23]), 29)), XOR(SHR(XOR(D_hi, lanes_hi[23]), 3), SHL(XOR(D_lo, lanes_lo[23]), 29)), XOR(SHL(XOR(D_lo, lanes_lo[8]), 6), SHR(XOR(D_hi, lanes_hi[8]), 26)), XOR(SHL(XOR(D_hi, lanes_hi[8]), 6), SHR(XOR(D_lo, lanes_lo[8]), 26)), XOR(SHR(XOR(D_lo, lanes_lo[3]), 2), SHL(XOR(D_hi, lanes_hi[3]), 30)), XOR(SHR(XOR(D_hi, lanes_hi[3]), 2), SHL(XOR(D_lo, lanes_lo[3]), 30))
				L, H = XOR(D_lo, lanes_lo[18]), XOR(D_hi, lanes_hi[18])
				lanes_lo[18], lanes_hi[18] = XOR(SHL(L, 15), SHR(H, 17)), XOR(SHL(H, 15), SHR(L, 17))
				D_lo = XOR(lanes_lo[28], SHL(lanes_lo[30], 1), SHR(lanes_hi[30], 31))
				D_hi = XOR(lanes_hi[28], SHL(lanes_hi[30], 1), SHR(lanes_lo[30], 31))
				lanes_lo[4], lanes_hi[4], lanes_lo[9], lanes_hi[9], lanes_lo[19], lanes_hi[19], lanes_lo[24], lanes_hi[24] = XOR(SHL(XOR(D_lo, lanes_lo[19]), 21), SHR(XOR(D_hi, lanes_hi[19]), 11)), XOR(SHL(XOR(D_hi, lanes_hi[19]), 21), SHR(XOR(D_lo, lanes_lo[19]), 11)), XOR(SHL(XOR(D_lo, lanes_lo[4]), 28), SHR(XOR(D_hi, lanes_hi[4]), 4)), XOR(SHL(XOR(D_hi, lanes_hi[4]), 28), SHR(XOR(D_lo, lanes_lo[4]), 4)), XOR(SHR(XOR(D_lo, lanes_lo[24]), 8), SHL(XOR(D_hi, lanes_hi[24]), 24)), XOR(SHR(XOR(D_hi, lanes_hi[24]), 8), SHL(XOR(D_lo, lanes_lo[24]), 24)), XOR(SHR(XOR(D_lo, lanes_lo[9]), 9), SHL(XOR(D_hi, lanes_hi[9]), 23)), XOR(SHR(XOR(D_hi, lanes_hi[9]), 9), SHL(XOR(D_lo, lanes_lo[9]), 23))
				L, H = XOR(D_lo, lanes_lo[14]), XOR(D_hi, lanes_hi[14])
				lanes_lo[14], lanes_hi[14] = XOR(SHL(L, 25), SHR(H, 7)), XOR(SHL(H, 25), SHR(L, 7))
				D_lo = XOR(lanes_lo[29], SHL(lanes_lo[26], 1), SHR(lanes_hi[26], 31))
				D_hi = XOR(lanes_hi[29], SHL(lanes_hi[26], 1), SHR(lanes_lo[26], 31))
				lanes_lo[5], lanes_hi[5], lanes_lo[15], lanes_hi[15], lanes_lo[20], lanes_hi[20], lanes_lo[25], lanes_hi[25] = XOR(SHL(XOR(D_lo, lanes_lo[25]), 14), SHR(XOR(D_hi, lanes_hi[25]), 18)), XOR(SHL(XOR(D_hi, lanes_hi[25]), 14), SHR(XOR(D_lo, lanes_lo[25]), 18)), XOR(SHL(XOR(D_lo, lanes_lo[20]), 8), SHR(XOR(D_hi, lanes_hi[20]), 24)), XOR(SHL(XOR(D_hi, lanes_hi[20]), 8), SHR(XOR(D_lo, lanes_lo[20]), 24)), XOR(SHL(XOR(D_lo, lanes_lo[5]), 27), SHR(XOR(D_hi, lanes_hi[5]), 5)), XOR(SHL(XOR(D_hi, lanes_hi[5]), 27), SHR(XOR(D_lo, lanes_lo[5]), 5)), XOR(SHR(XOR(D_lo, lanes_lo[15]), 25), SHL(XOR(D_hi, lanes_hi[15]), 7)), XOR(SHR(XOR(D_hi, lanes_hi[15]), 25), SHL(XOR(D_lo, lanes_lo[15]), 7))
				L, H = XOR(D_lo, lanes_lo[10]), XOR(D_hi, lanes_hi[10])
				lanes_lo[10], lanes_hi[10] = XOR(SHL(L, 20), SHR(H, 12)), XOR(SHL(H, 20), SHR(L, 12))
				D_lo = XOR(lanes_lo[30], SHL(lanes_lo[27], 1), SHR(lanes_hi[27], 31))
				D_hi = XOR(lanes_hi[30], SHL(lanes_hi[27], 1), SHR(lanes_lo[27], 31))
				lanes_lo[6], lanes_hi[6], lanes_lo[11], lanes_hi[11], lanes_lo[16], lanes_hi[16], lanes_lo[21], lanes_hi[21] = XOR(SHL(XOR(D_lo, lanes_lo[11]), 3), SHR(XOR(D_hi, lanes_hi[11]), 29)), XOR(SHL(XOR(D_hi, lanes_hi[11]), 3), SHR(XOR(D_lo, lanes_lo[11]), 29)), XOR(SHL(XOR(D_lo, lanes_lo[21]), 18), SHR(XOR(D_hi, lanes_hi[21]), 14)), XOR(SHL(XOR(D_hi, lanes_hi[21]), 18), SHR(XOR(D_lo, lanes_lo[21]), 14)), XOR(SHR(XOR(D_lo, lanes_lo[6]), 28), SHL(XOR(D_hi, lanes_hi[6]), 4)), XOR(SHR(XOR(D_hi, lanes_hi[6]), 28), SHL(XOR(D_lo, lanes_lo[6]), 4)), XOR(SHR(XOR(D_lo, lanes_lo[16]), 23), SHL(XOR(D_hi, lanes_hi[16]), 9)), XOR(SHR(XOR(D_hi, lanes_hi[16]), 23), SHL(XOR(D_lo, lanes_lo[16]), 9))
				lanes_lo[1], lanes_hi[1] = XOR(D_lo, lanes_lo[1]), XOR(D_hi, lanes_hi[1])
				lanes_lo[1], lanes_lo[2], lanes_lo[3], lanes_lo[4], lanes_lo[5] = XOR(lanes_lo[1], AND(NOT(lanes_lo[2]), lanes_lo[3]), RC_lo[round_idx]), XOR(lanes_lo[2], AND(NOT(lanes_lo[3]), lanes_lo[4])), XOR(lanes_lo[3], AND(NOT(lanes_lo[4]), lanes_lo[5])), XOR(lanes_lo[4], AND(NOT(lanes_lo[5]), lanes_lo[1])), XOR(lanes_lo[5], AND(NOT(lanes_lo[1]), lanes_lo[2]))
				lanes_lo[6], lanes_lo[7], lanes_lo[8], lanes_lo[9], lanes_lo[10] = XOR(lanes_lo[9], AND(NOT(lanes_lo[10]), lanes_lo[6])), XOR(lanes_lo[10], AND(NOT(lanes_lo[6]), lanes_lo[7])), XOR(lanes_lo[6], AND(NOT(lanes_lo[7]), lanes_lo[8])), XOR(lanes_lo[7], AND(NOT(lanes_lo[8]), lanes_lo[9])), XOR(lanes_lo[8], AND(NOT(lanes_lo[9]), lanes_lo[10]))
				lanes_lo[11], lanes_lo[12], lanes_lo[13], lanes_lo[14], lanes_lo[15] = XOR(lanes_lo[12], AND(NOT(lanes_lo[13]), lanes_lo[14])), XOR(lanes_lo[13], AND(NOT(lanes_lo[14]), lanes_lo[15])), XOR(lanes_lo[14], AND(NOT(lanes_lo[15]), lanes_lo[11])), XOR(lanes_lo[15], AND(NOT(lanes_lo[11]), lanes_lo[12])), XOR(lanes_lo[11], AND(NOT(lanes_lo[12]), lanes_lo[13]))
				lanes_lo[16], lanes_lo[17], lanes_lo[18], lanes_lo[19], lanes_lo[20] = XOR(lanes_lo[20], AND(NOT(lanes_lo[16]), lanes_lo[17])), XOR(lanes_lo[16], AND(NOT(lanes_lo[17]), lanes_lo[18])), XOR(lanes_lo[17], AND(NOT(lanes_lo[18]), lanes_lo[19])), XOR(lanes_lo[18], AND(NOT(lanes_lo[19]), lanes_lo[20])), XOR(lanes_lo[19], AND(NOT(lanes_lo[20]), lanes_lo[16]))
				lanes_lo[21], lanes_lo[22], lanes_lo[23], lanes_lo[24], lanes_lo[25] = XOR(lanes_lo[23], AND(NOT(lanes_lo[24]), lanes_lo[25])), XOR(lanes_lo[24], AND(NOT(lanes_lo[25]), lanes_lo[21])), XOR(lanes_lo[25], AND(NOT(lanes_lo[21]), lanes_lo[22])), XOR(lanes_lo[21], AND(NOT(lanes_lo[22]), lanes_lo[23])), XOR(lanes_lo[22], AND(NOT(lanes_lo[23]), lanes_lo[24]))
				lanes_hi[1], lanes_hi[2], lanes_hi[3], lanes_hi[4], lanes_hi[5] = XOR(lanes_hi[1], AND(NOT(lanes_hi[2]), lanes_hi[3]), RC_hi[round_idx]), XOR(lanes_hi[2], AND(NOT(lanes_hi[3]), lanes_hi[4])), XOR(lanes_hi[3], AND(NOT(lanes_hi[4]), lanes_hi[5])), XOR(lanes_hi[4], AND(NOT(lanes_hi[5]), lanes_hi[1])), XOR(lanes_hi[5], AND(NOT(lanes_hi[1]), lanes_hi[2]))
				lanes_hi[6], lanes_hi[7], lanes_hi[8], lanes_hi[9], lanes_hi[10] = XOR(lanes_hi[9], AND(NOT(lanes_hi[10]), lanes_hi[6])), XOR(lanes_hi[10], AND(NOT(lanes_hi[6]), lanes_hi[7])), XOR(lanes_hi[6], AND(NOT(lanes_hi[7]), lanes_hi[8])), XOR(lanes_hi[7], AND(NOT(lanes_hi[8]), lanes_hi[9])), XOR(lanes_hi[8], AND(NOT(lanes_hi[9]), lanes_hi[10]))
				lanes_hi[11], lanes_hi[12], lanes_hi[13], lanes_hi[14], lanes_hi[15] = XOR(lanes_hi[12], AND(NOT(lanes_hi[13]), lanes_hi[14])), XOR(lanes_hi[13], AND(NOT(lanes_hi[14]), lanes_hi[15])), XOR(lanes_hi[14], AND(NOT(lanes_hi[15]), lanes_hi[11])), XOR(lanes_hi[15], AND(NOT(lanes_hi[11]), lanes_hi[12])), XOR(lanes_hi[11], AND(NOT(lanes_hi[12]), lanes_hi[13]))
				lanes_hi[16], lanes_hi[17], lanes_hi[18], lanes_hi[19], lanes_hi[20] = XOR(lanes_hi[20], AND(NOT(lanes_hi[16]), lanes_hi[17])), XOR(lanes_hi[16], AND(NOT(lanes_hi[17]), lanes_hi[18])), XOR(lanes_hi[17], AND(NOT(lanes_hi[18]), lanes_hi[19])), XOR(lanes_hi[18], AND(NOT(lanes_hi[19]), lanes_hi[20])), XOR(lanes_hi[19], AND(NOT(lanes_hi[20]), lanes_hi[16]))
				lanes_hi[21], lanes_hi[22], lanes_hi[23], lanes_hi[24], lanes_hi[25] = XOR(lanes_hi[23], AND(NOT(lanes_hi[24]), lanes_hi[25])), XOR(lanes_hi[24], AND(NOT(lanes_hi[25]), lanes_hi[21])), XOR(lanes_hi[25], AND(NOT(lanes_hi[21]), lanes_hi[22])), XOR(lanes_hi[21], AND(NOT(lanes_hi[22]), lanes_hi[23])), XOR(lanes_hi[22], AND(NOT(lanes_hi[23]), lanes_hi[24]))
			end
		end
	end

end


if branch == "LJ" then


	-- SHA256 implementation for "LuaJIT without FFI" branch

	function sha256_feed_64(H, str, offs, size)
		-- offs >= 0, size >= 0, size is multiple of 64
		local W, K = common_W, sha2_K_hi
		for pos = offs, offs + size - 1, 64 do
			for j = 1, 16 do
				pos = pos + 4
				local a, b, c, d = byte(str, pos - 3, pos)
				W[j] = OR(SHL(a, 24), SHL(b, 16), SHL(c, 8), d)
			end
			for j = 17, 64 do
				local a, b = W[j-15], W[j-2]
				W[j] = NORM( NORM( XOR(ROR(a, 7), ROL(a, 14), SHR(a, 3)) + XOR(ROL(b, 15), ROL(b, 13), SHR(b, 10)) ) + NORM( W[j-7] + W[j-16] ) )
			end
			local a, b, c, d, e, f, g, h = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
			for j = 1, 64, 8 do  -- Thanks to Peter Cawley for this workaround (unroll the loop to avoid "PHI shuffling too complex" due to PHIs overlap)
				local z = NORM( XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + XOR(g, AND(e, XOR(f, g))) + (K[j] + W[j] + h) )
				h, g, f, e = g, f, e, NORM(d + z)
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + XOR(g, AND(e, XOR(f, g))) + (K[j+1] + W[j+1] + h) )
				h, g, f, e = g, f, e, NORM(d + z)
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + XOR(g, AND(e, XOR(f, g))) + (K[j+2] + W[j+2] + h) )
				h, g, f, e = g, f, e, NORM(d + z)
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + XOR(g, AND(e, XOR(f, g))) + (K[j+3] + W[j+3] + h) )
				h, g, f, e = g, f, e, NORM(d + z)
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + XOR(g, AND(e, XOR(f, g))) + (K[j+4] + W[j+4] + h) )
				h, g, f, e = g, f, e, NORM(d + z)
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + XOR(g, AND(e, XOR(f, g))) + (K[j+5] + W[j+5] + h) )
				h, g, f, e = g, f, e, NORM(d + z)
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + XOR(g, AND(e, XOR(f, g))) + (K[j+6] + W[j+6] + h) )
				h, g, f, e = g, f, e, NORM(d + z)
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
				z = NORM( XOR(ROR(e, 6), ROR(e, 11), ROL(e, 7)) + XOR(g, AND(e, XOR(f, g))) + (K[j+7] + W[j+7] + h) )
				h, g, f, e = g, f, e, NORM(d + z)
				d, c, b, a = c, b, a, NORM( XOR(AND(a, XOR(b, c)), AND(b, c)) + XOR(ROR(a, 2), ROR(a, 13), ROL(a, 10)) + z )
			end
			H[1], H[2], H[3], H[4] = NORM(a + H[1]), NORM(b + H[2]), NORM(c + H[3]), NORM(d + H[4])
			H[5], H[6], H[7], H[8] = NORM(e + H[5]), NORM(f + H[6]), NORM(g + H[7]), NORM(h + H[8])
		end
	end

	local function ADD64_4(a_lo, a_hi, b_lo, b_hi, c_lo, c_hi, d_lo, d_hi)
		local sum_lo = a_lo % 2^32 + b_lo % 2^32 + c_lo % 2^32 + d_lo % 2^32
		local sum_hi = a_hi + b_hi + c_hi + d_hi
		local result_lo = NORM( sum_lo )
		local result_hi = NORM( sum_hi + floor(sum_lo / 2^32) )
		return result_lo, result_hi
	end

	if LuaJIT_arch == "x86" then  -- Special trick is required to avoid "PHI shuffling too complex" on x86 platform


		-- SHA512 implementation for "LuaJIT x86 without FFI" branch

		function sha512_feed_128(H_lo, H_hi, str, offs, size)
			-- offs >= 0, size >= 0, size is multiple of 128
			-- W1_hi, W1_lo, W2_hi, W2_lo, ...   Wk_hi = W[2*k-1], Wk_lo = W[2*k]
			local W, K_lo, K_hi = common_W, sha2_K_lo, sha2_K_hi
			for pos = offs, offs + size - 1, 128 do
				for j = 1, 16*2 do
					pos = pos + 4
					local a, b, c, d = byte(str, pos - 3, pos)
					W[j] = OR(SHL(a, 24), SHL(b, 16), SHL(c, 8), d)
				end
				for jj = 17*2, 80*2, 2 do
					local a_lo, a_hi = W[jj-30], W[jj-31]
					local t_lo = XOR(OR(SHR(a_lo, 1), SHL(a_hi, 31)), OR(SHR(a_lo, 8), SHL(a_hi, 24)), OR(SHR(a_lo, 7), SHL(a_hi, 25)))
					local t_hi = XOR(OR(SHR(a_hi, 1), SHL(a_lo, 31)), OR(SHR(a_hi, 8), SHL(a_lo, 24)), SHR(a_hi, 7))
					local b_lo, b_hi = W[jj-4], W[jj-5]
					local u_lo = XOR(OR(SHR(b_lo, 19), SHL(b_hi, 13)), OR(SHL(b_lo, 3), SHR(b_hi, 29)), OR(SHR(b_lo, 6), SHL(b_hi, 26)))
					local u_hi = XOR(OR(SHR(b_hi, 19), SHL(b_lo, 13)), OR(SHL(b_hi, 3), SHR(b_lo, 29)), SHR(b_hi, 6))
					W[jj], W[jj-1] = ADD64_4(t_lo, t_hi, u_lo, u_hi, W[jj-14], W[jj-15], W[jj-32], W[jj-33])
				end
				local a_lo, b_lo, c_lo, d_lo, e_lo, f_lo, g_lo, h_lo = H_lo[1], H_lo[2], H_lo[3], H_lo[4], H_lo[5], H_lo[6], H_lo[7], H_lo[8]
				local a_hi, b_hi, c_hi, d_hi, e_hi, f_hi, g_hi, h_hi = H_hi[1], H_hi[2], H_hi[3], H_hi[4], H_hi[5], H_hi[6], H_hi[7], H_hi[8]
				local zero = 0
				for j = 1, 80 do
					local t_lo = XOR(g_lo, AND(e_lo, XOR(f_lo, g_lo)))
					local t_hi = XOR(g_hi, AND(e_hi, XOR(f_hi, g_hi)))
					local u_lo = XOR(OR(SHR(e_lo, 14), SHL(e_hi, 18)), OR(SHR(e_lo, 18), SHL(e_hi, 14)), OR(SHL(e_lo, 23), SHR(e_hi, 9)))
					local u_hi = XOR(OR(SHR(e_hi, 14), SHL(e_lo, 18)), OR(SHR(e_hi, 18), SHL(e_lo, 14)), OR(SHL(e_hi, 23), SHR(e_lo, 9)))
					local sum_lo = u_lo % 2^32 + t_lo % 2^32 + h_lo % 2^32 + K_lo[j] + W[2*j] % 2^32
					local z_lo, z_hi = NORM( sum_lo ), NORM( u_hi + t_hi + h_hi + K_hi[j] + W[2*j-1] + floor(sum_lo / 2^32) )
					zero = zero + zero  -- this thick is needed to avoid "PHI shuffling too complex" due to PHIs overlap
					h_lo, h_hi, g_lo, g_hi, f_lo, f_hi = OR(zero, g_lo), OR(zero, g_hi), OR(zero, f_lo), OR(zero, f_hi), OR(zero, e_lo), OR(zero, e_hi)
					local sum_lo = z_lo % 2^32 + d_lo % 2^32
					e_lo, e_hi = NORM( sum_lo ), NORM( z_hi + d_hi + floor(sum_lo / 2^32) )
					d_lo, d_hi, c_lo, c_hi, b_lo, b_hi = OR(zero, c_lo), OR(zero, c_hi), OR(zero, b_lo), OR(zero, b_hi), OR(zero, a_lo), OR(zero, a_hi)
					u_lo = XOR(OR(SHR(b_lo, 28), SHL(b_hi, 4)), OR(SHL(b_lo, 30), SHR(b_hi, 2)), OR(SHL(b_lo, 25), SHR(b_hi, 7)))
					u_hi = XOR(OR(SHR(b_hi, 28), SHL(b_lo, 4)), OR(SHL(b_hi, 30), SHR(b_lo, 2)), OR(SHL(b_hi, 25), SHR(b_lo, 7)))
					t_lo = OR(AND(d_lo, c_lo), AND(b_lo, XOR(d_lo, c_lo)))
					t_hi = OR(AND(d_hi, c_hi), AND(b_hi, XOR(d_hi, c_hi)))
					local sum_lo = z_lo % 2^32 + t_lo % 2^32 + u_lo % 2^32
					a_lo, a_hi = NORM( sum_lo ), NORM( z_hi + t_hi + u_hi + floor(sum_lo / 2^32) )
				end
				H_lo[1], H_hi[1] = ADD64_4(H_lo[1], H_hi[1], a_lo, a_hi, 0, 0, 0, 0)
				H_lo[2], H_hi[2] = ADD64_4(H_lo[2], H_hi[2], b_lo, b_hi, 0, 0, 0, 0)
				H_lo[3], H_hi[3] = ADD64_4(H_lo[3], H_hi[3], c_lo, c_hi, 0, 0, 0, 0)
				H_lo[4], H_hi[4] = ADD64_4(H_lo[4], H_hi[4], d_lo, d_hi, 0, 0, 0, 0)
				H_lo[5], H_hi[5] = ADD64_4(H_lo[5], H_hi[5], e_lo, e_hi, 0, 0, 0, 0)
				H_lo[6], H_hi[6] = ADD64_4(H_lo[6], H_hi[6], f_lo, f_hi, 0, 0, 0, 0)
				H_lo[7], H_hi[7] = ADD64_4(H_lo[7], H_hi[7], g_lo, g_hi, 0, 0, 0, 0)
				H_lo[8], H_hi[8] = ADD64_4(H_lo[8], H_hi[8], h_lo, h_hi, 0, 0, 0, 0)
			end
		end

	else  -- all platforms except x86


		-- SHA512 implementation for "LuaJIT non-x86 without FFI" branch

		function sha512_feed_128(H_lo, H_hi, str, offs, size)
			-- offs >= 0, size >= 0, size is multiple of 128
			-- W1_hi, W1_lo, W2_hi, W2_lo, ...   Wk_hi = W[2*k-1], Wk_lo = W[2*k]
			local W, K_lo, K_hi = common_W, sha2_K_lo, sha2_K_hi
			for pos = offs, offs + size - 1, 128 do
				for j = 1, 16*2 do
					pos = pos + 4
					local a, b, c, d = byte(str, pos - 3, pos)
					W[j] = OR(SHL(a, 24), SHL(b, 16), SHL(c, 8), d)
				end
				for jj = 17*2, 80*2, 2 do
					local a_lo, a_hi = W[jj-30], W[jj-31]
					local t_lo = XOR(OR(SHR(a_lo, 1), SHL(a_hi, 31)), OR(SHR(a_lo, 8), SHL(a_hi, 24)), OR(SHR(a_lo, 7), SHL(a_hi, 25)))
					local t_hi = XOR(OR(SHR(a_hi, 1), SHL(a_lo, 31)), OR(SHR(a_hi, 8), SHL(a_lo, 24)), SHR(a_hi, 7))
					local b_lo, b_hi = W[jj-4], W[jj-5]
					local u_lo = XOR(OR(SHR(b_lo, 19), SHL(b_hi, 13)), OR(SHL(b_lo, 3), SHR(b_hi, 29)), OR(SHR(b_lo, 6), SHL(b_hi, 26)))
					local u_hi = XOR(OR(SHR(b_hi, 19), SHL(b_lo, 13)), OR(SHL(b_hi, 3), SHR(b_lo, 29)), SHR(b_hi, 6))
					W[jj], W[jj-1] = ADD64_4(t_lo, t_hi, u_lo, u_hi, W[jj-14], W[jj-15], W[jj-32], W[jj-33])
				end
				local a_lo, b_lo, c_lo, d_lo, e_lo, f_lo, g_lo, h_lo = H_lo[1], H_lo[2], H_lo[3], H_lo[4], H_lo[5], H_lo[6], H_lo[7], H_lo[8]
				local a_hi, b_hi, c_hi, d_hi, e_hi, f_hi, g_hi, h_hi = H_hi[1], H_hi[2], H_hi[3], H_hi[4], H_hi[5], H_hi[6], H_hi[7], H_hi[8]
				for j = 1, 80 do
					local t_lo = XOR(g_lo, AND(e_lo, XOR(f_lo, g_lo)))
					local t_hi = XOR(g_hi, AND(e_hi, XOR(f_hi, g_hi)))
					local u_lo = XOR(OR(SHR(e_lo, 14), SHL(e_hi, 18)), OR(SHR(e_lo, 18), SHL(e_hi, 14)), OR(SHL(e_lo, 23), SHR(e_hi, 9)))
					local u_hi = XOR(OR(SHR(e_hi, 14), SHL(e_lo, 18)), OR(SHR(e_hi, 18), SHL(e_lo, 14)), OR(SHL(e_hi, 23), SHR(e_lo, 9)))
					local sum_lo = u_lo % 2^32 + t_lo % 2^32 + h_lo % 2^32 + K_lo[j] + W[2*j] % 2^32
					local z_lo, z_hi = NORM( sum_lo ), NORM( u_hi + t_hi + h_hi + K_hi[j] + W[2*j-1] + floor(sum_lo / 2^32) )
					h_lo, h_hi, g_lo, g_hi, f_lo, f_hi = g_lo, g_hi, f_lo, f_hi, e_lo, e_hi
					local sum_lo = z_lo % 2^32 + d_lo % 2^32
					e_lo, e_hi = NORM( sum_lo ), NORM( z_hi + d_hi + floor(sum_lo / 2^32) )
					d_lo, d_hi, c_lo, c_hi, b_lo, b_hi = c_lo, c_hi, b_lo, b_hi, a_lo, a_hi
					u_lo = XOR(OR(SHR(b_lo, 28), SHL(b_hi, 4)), OR(SHL(b_lo, 30), SHR(b_hi, 2)), OR(SHL(b_lo, 25), SHR(b_hi, 7)))
					u_hi = XOR(OR(SHR(b_hi, 28), SHL(b_lo, 4)), OR(SHL(b_hi, 30), SHR(b_lo, 2)), OR(SHL(b_hi, 25), SHR(b_lo, 7)))
					t_lo = OR(AND(d_lo, c_lo), AND(b_lo, XOR(d_lo, c_lo)))
					t_hi = OR(AND(d_hi, c_hi), AND(b_hi, XOR(d_hi, c_hi)))
					local sum_lo = z_lo % 2^32 + u_lo % 2^32 + t_lo % 2^32
					a_lo, a_hi = NORM( sum_lo ), NORM( z_hi + u_hi + t_hi + floor(sum_lo / 2^32) )
				end
				H_lo[1], H_hi[1] = ADD64_4(H_lo[1], H_hi[1], a_lo, a_hi, 0, 0, 0, 0)
				H_lo[2], H_hi[2] = ADD64_4(H_lo[2], H_hi[2], b_lo, b_hi, 0, 0, 0, 0)
				H_lo[3], H_hi[3] = ADD64_4(H_lo[3], H_hi[3], c_lo, c_hi, 0, 0, 0, 0)
				H_lo[4], H_hi[4] = ADD64_4(H_lo[4], H_hi[4], d_lo, d_hi, 0, 0, 0, 0)
				H_lo[5], H_hi[5] = ADD64_4(H_lo[5], H_hi[5], e_lo, e_hi, 0, 0, 0, 0)
				H_lo[6], H_hi[6] = ADD64_4(H_lo[6], H_hi[6], f_lo, f_hi, 0, 0, 0, 0)
				H_lo[7], H_hi[7] = ADD64_4(H_lo[7], H_hi[7], g_lo, g_hi, 0, 0, 0, 0)
				H_lo[8], H_hi[8] = ADD64_4(H_lo[8], H_hi[8], h_lo, h_hi, 0, 0, 0, 0)
			end
		end

	end


	-- MD5 implementation for "LuaJIT without FFI" branch

	function md5_feed_64(H, str, offs, size)
		-- offs >= 0, size >= 0, size is multiple of 64
		local W, K = common_W, md5_K
		for pos = offs, offs + size - 1, 64 do
			for j = 1, 16 do
				pos = pos + 4
				local a, b, c, d = byte(str, pos - 3, pos)
				W[j] = OR(SHL(d, 24), SHL(c, 16), SHL(b, 8), a)
			end
			local a, b, c, d = H[1], H[2], H[3], H[4]
			for j = 1, 16, 4 do
				a, d, c, b = d, c, b, NORM(ROL(XOR(d, AND(b, XOR(c, d))) + (K[j  ] + W[j  ] + a),  7) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(d, AND(b, XOR(c, d))) + (K[j+1] + W[j+1] + a), 12) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(d, AND(b, XOR(c, d))) + (K[j+2] + W[j+2] + a), 17) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(d, AND(b, XOR(c, d))) + (K[j+3] + W[j+3] + a), 22) + b)
			end
			for j = 17, 32, 4 do
				local g = 5*j-4
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, AND(d, XOR(b, c))) + (K[j  ] + W[AND(g     , 15) + 1] + a),  5) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, AND(d, XOR(b, c))) + (K[j+1] + W[AND(g +  5, 15) + 1] + a),  9) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, AND(d, XOR(b, c))) + (K[j+2] + W[AND(g + 10, 15) + 1] + a), 14) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, AND(d, XOR(b, c))) + (K[j+3] + W[AND(g -  1, 15) + 1] + a), 20) + b)
			end
			for j = 33, 48, 4 do
				local g = 3*j+2
				a, d, c, b = d, c, b, NORM(ROL(XOR(b, c, d) + (K[j  ] + W[AND(g    , 15) + 1] + a),  4) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(b, c, d) + (K[j+1] + W[AND(g + 3, 15) + 1] + a), 11) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(b, c, d) + (K[j+2] + W[AND(g + 6, 15) + 1] + a), 16) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(b, c, d) + (K[j+3] + W[AND(g - 7, 15) + 1] + a), 23) + b)
			end
			for j = 49, 64, 4 do
				local g = j*7
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, OR(b, NOT(d))) + (K[j  ] + W[AND(g - 7, 15) + 1] + a),  6) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, OR(b, NOT(d))) + (K[j+1] + W[AND(g    , 15) + 1] + a), 10) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, OR(b, NOT(d))) + (K[j+2] + W[AND(g + 7, 15) + 1] + a), 15) + b)
				a, d, c, b = d, c, b, NORM(ROL(XOR(c, OR(b, NOT(d))) + (K[j+3] + W[AND(g - 2, 15) + 1] + a), 21) + b)
			end
			H[1], H[2], H[3], H[4] = NORM(a + H[1]), NORM(b + H[2]), NORM(c + H[3]), NORM(d + H[4])
		end
	end


	-- SHA-1 implementation for "LuaJIT without FFI" branch

	function sha1_feed_64(H, str, offs, size)
		-- offs >= 0, size >= 0, size is multiple of 64
		local W = common_W
		for pos = offs, offs + size - 1, 64 do
			for j = 1, 16 do
				pos = pos + 4
				local a, b, c, d = byte(str, pos - 3, pos)
				W[j] = OR(SHL(a, 24), SHL(b, 16), SHL(c, 8), d)
			end
			for j = 17, 80 do
				W[j] = ROL(XOR(W[j-3], W[j-8], W[j-14], W[j-16]), 1)
			end
			local a, b, c, d, e = H[1], H[2], H[3], H[4], H[5]
			for j = 1, 20, 5 do
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(d, AND(b, XOR(d, c))) + (W[j]   + 0x5A827999 + e))          -- constant = floor(2^30 * sqrt(2))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(d, AND(b, XOR(d, c))) + (W[j+1] + 0x5A827999 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(d, AND(b, XOR(d, c))) + (W[j+2] + 0x5A827999 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(d, AND(b, XOR(d, c))) + (W[j+3] + 0x5A827999 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(d, AND(b, XOR(d, c))) + (W[j+4] + 0x5A827999 + e))
			end
			for j = 21, 40, 5 do
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j]   + 0x6ED9EBA1 + e))                       -- 2^30 * sqrt(3)
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+1] + 0x6ED9EBA1 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+2] + 0x6ED9EBA1 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+3] + 0x6ED9EBA1 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+4] + 0x6ED9EBA1 + e))
			end
			for j = 41, 60, 5 do
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(AND(d, XOR(b, c)), AND(b, c)) + (W[j]   + 0x8F1BBCDC + e))  -- 2^30 * sqrt(5)
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(AND(d, XOR(b, c)), AND(b, c)) + (W[j+1] + 0x8F1BBCDC + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(AND(d, XOR(b, c)), AND(b, c)) + (W[j+2] + 0x8F1BBCDC + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(AND(d, XOR(b, c)), AND(b, c)) + (W[j+3] + 0x8F1BBCDC + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(AND(d, XOR(b, c)), AND(b, c)) + (W[j+4] + 0x8F1BBCDC + e))
			end
			for j = 61, 80, 5 do
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j]   + 0xCA62C1D6 + e))                       -- 2^30 * sqrt(10)
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+1] + 0xCA62C1D6 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+2] + 0xCA62C1D6 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+3] + 0xCA62C1D6 + e))
				e, d, c, b, a = d, c, ROR(b, 2), a, NORM(ROL(a, 5) + XOR(b, c, d) + (W[j+4] + 0xCA62C1D6 + e))
			end
			H[1], H[2], H[3], H[4], H[5] = NORM(a + H[1]), NORM(b + H[2]), NORM(c + H[3]), NORM(d + H[4]), NORM(e + H[5])
		end
	end


	-- BLAKE2b implementation for "LuaJIT without FFI" branch

	do
		local v_lo, v_hi = {}, {}

		local function G(a, b, c, d, k1, k2)
			local W = common_W
			local va_lo, vb_lo, vc_lo, vd_lo = v_lo[a], v_lo[b], v_lo[c], v_lo[d]
			local va_hi, vb_hi, vc_hi, vd_hi = v_hi[a], v_hi[b], v_hi[c], v_hi[d]
			local z = W[2*k1-1] + (va_lo % 2^32 + vb_lo % 2^32)
			va_lo = NORM(z)
			va_hi = NORM(W[2*k1] + (va_hi + vb_hi + floor(z / 2^32)))
			vd_lo, vd_hi = XOR(vd_hi, va_hi), XOR(vd_lo, va_lo)
			z = vc_lo % 2^32 + vd_lo % 2^32
			vc_lo = NORM(z)
			vc_hi = NORM(vc_hi + vd_hi + floor(z / 2^32))
			vb_lo, vb_hi = XOR(vb_lo, vc_lo), XOR(vb_hi, vc_hi)
			vb_lo, vb_hi = XOR(SHR(vb_lo, 24), SHL(vb_hi, 8)), XOR(SHR(vb_hi, 24), SHL(vb_lo, 8))
			z = W[2*k2-1] + (va_lo % 2^32 + vb_lo % 2^32)
			va_lo = NORM(z)
			va_hi = NORM(W[2*k2] + (va_hi + vb_hi + floor(z / 2^32)))
			vd_lo, vd_hi = XOR(vd_lo, va_lo), XOR(vd_hi, va_hi)
			vd_lo, vd_hi = XOR(SHR(vd_lo, 16), SHL(vd_hi, 16)), XOR(SHR(vd_hi, 16), SHL(vd_lo, 16))
			z = vc_lo % 2^32 + vd_lo % 2^32
			vc_lo = NORM(z)
			vc_hi = NORM(vc_hi + vd_hi + floor(z / 2^32))
			vb_lo, vb_hi = XOR(vb_lo, vc_lo), XOR(vb_hi, vc_hi)
			vb_lo, vb_hi = XOR(SHL(vb_lo, 1), SHR(vb_hi, 31)), XOR(SHL(vb_hi, 1), SHR(vb_lo, 31))
			v_lo[a], v_lo[b], v_lo[c], v_lo[d] = va_lo, vb_lo, vc_lo, vd_lo
			v_hi[a], v_hi[b], v_hi[c], v_hi[d] = va_hi, vb_hi, vc_hi, vd_hi
		end

		function blake2b_feed_128(H_lo, H_hi, str, offs, size, bytes_compressed, last_block_size, is_last_node)
			-- offs >= 0, size >= 0, size is multiple of 128
			local W = common_W
			local h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo = H_lo[1], H_lo[2], H_lo[3], H_lo[4], H_lo[5], H_lo[6], H_lo[7], H_lo[8]
			local h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi = H_hi[1], H_hi[2], H_hi[3], H_hi[4], H_hi[5], H_hi[6], H_hi[7], H_hi[8]
			for pos = offs, offs + size - 1, 128 do
				if str then
					for j = 1, 32 do
						pos = pos + 4
						local a, b, c, d = byte(str, pos - 3, pos)
						W[j] = d * 2^24 + OR(SHL(c, 16), SHL(b, 8), a)
					end
				end
				v_lo[0x0], v_lo[0x1], v_lo[0x2], v_lo[0x3], v_lo[0x4], v_lo[0x5], v_lo[0x6], v_lo[0x7] = h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo
				v_lo[0x8], v_lo[0x9], v_lo[0xA], v_lo[0xB], v_lo[0xC], v_lo[0xD], v_lo[0xE], v_lo[0xF] = sha2_H_lo[1], sha2_H_lo[2], sha2_H_lo[3], sha2_H_lo[4], sha2_H_lo[5], sha2_H_lo[6], sha2_H_lo[7], sha2_H_lo[8]
				v_hi[0x0], v_hi[0x1], v_hi[0x2], v_hi[0x3], v_hi[0x4], v_hi[0x5], v_hi[0x6], v_hi[0x7] = h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi
				v_hi[0x8], v_hi[0x9], v_hi[0xA], v_hi[0xB], v_hi[0xC], v_hi[0xD], v_hi[0xE], v_hi[0xF] = sha2_H_hi[1], sha2_H_hi[2], sha2_H_hi[3], sha2_H_hi[4], sha2_H_hi[5], sha2_H_hi[6], sha2_H_hi[7], sha2_H_hi[8]
				bytes_compressed = bytes_compressed + (last_block_size or 128)
				local t0_lo = bytes_compressed % 2^32
				local t0_hi = floor(bytes_compressed / 2^32)
				v_lo[0xC] = XOR(v_lo[0xC], t0_lo)  -- t0 = low_8_bytes(bytes_compressed)
				v_hi[0xC] = XOR(v_hi[0xC], t0_hi)
				-- t1 = high_8_bytes(bytes_compressed) = 0,  message length is always below 2^53 bytes
				if last_block_size then  -- flag f0
					v_lo[0xE] = NOT(v_lo[0xE])
					v_hi[0xE] = NOT(v_hi[0xE])
				end
				if is_last_node then  -- flag f1
					v_lo[0xF] = NOT(v_lo[0xF])
					v_hi[0xF] = NOT(v_hi[0xF])
				end
				for j = 1, 12 do
					local row = sigma[j]
					G(0, 4,  8, 12, row[ 1], row[ 2])
					G(1, 5,  9, 13, row[ 3], row[ 4])
					G(2, 6, 10, 14, row[ 5], row[ 6])
					G(3, 7, 11, 15, row[ 7], row[ 8])
					G(0, 5, 10, 15, row[ 9], row[10])
					G(1, 6, 11, 12, row[11], row[12])
					G(2, 7,  8, 13, row[13], row[14])
					G(3, 4,  9, 14, row[15], row[16])
				end
				h1_lo = XOR(h1_lo, v_lo[0x0], v_lo[0x8])
				h2_lo = XOR(h2_lo, v_lo[0x1], v_lo[0x9])
				h3_lo = XOR(h3_lo, v_lo[0x2], v_lo[0xA])
				h4_lo = XOR(h4_lo, v_lo[0x3], v_lo[0xB])
				h5_lo = XOR(h5_lo, v_lo[0x4], v_lo[0xC])
				h6_lo = XOR(h6_lo, v_lo[0x5], v_lo[0xD])
				h7_lo = XOR(h7_lo, v_lo[0x6], v_lo[0xE])
				h8_lo = XOR(h8_lo, v_lo[0x7], v_lo[0xF])
				h1_hi = XOR(h1_hi, v_hi[0x0], v_hi[0x8])
				h2_hi = XOR(h2_hi, v_hi[0x1], v_hi[0x9])
				h3_hi = XOR(h3_hi, v_hi[0x2], v_hi[0xA])
				h4_hi = XOR(h4_hi, v_hi[0x3], v_hi[0xB])
				h5_hi = XOR(h5_hi, v_hi[0x4], v_hi[0xC])
				h6_hi = XOR(h6_hi, v_hi[0x5], v_hi[0xD])
				h7_hi = XOR(h7_hi, v_hi[0x6], v_hi[0xE])
				h8_hi = XOR(h8_hi, v_hi[0x7], v_hi[0xF])
			end
			H_lo[1], H_lo[2], H_lo[3], H_lo[4], H_lo[5], H_lo[6], H_lo[7], H_lo[8] = h1_lo % 2^32, h2_lo % 2^32, h3_lo % 2^32, h4_lo % 2^32, h5_lo % 2^32, h6_lo % 2^32, h7_lo % 2^32, h8_lo % 2^32
			H_hi[1], H_hi[2], H_hi[3], H_hi[4], H_hi[5], H_hi[6], H_hi[7], H_hi[8] = h1_hi % 2^32, h2_hi % 2^32, h3_hi % 2^32, h4_hi % 2^32, h5_hi % 2^32, h6_hi % 2^32, h7_hi % 2^32, h8_hi % 2^32
			return bytes_compressed
		end

	end
end


if branch == "FFI" or branch == "LJ" then


	-- BLAKE2s and BLAKE3 implementations for "LuaJIT with FFI" and "LuaJIT without FFI" branches

	do
		local W = common_W_blake2s
		local v = v_for_blake2s_feed_64

		local function G(a, b, c, d, k1, k2)
			local va, vb, vc, vd = v[a], v[b], v[c], v[d]
			va = NORM(W[k1] + (va + vb))
			vd = ROR(XOR(vd, va), 16)
			vc = NORM(vc + vd)
			vb = ROR(XOR(vb, vc), 12)
			va = NORM(W[k2] + (va + vb))
			vd = ROR(XOR(vd, va), 8)
			vc = NORM(vc + vd)
			vb = ROR(XOR(vb, vc), 7)
			v[a], v[b], v[c], v[d] = va, vb, vc, vd
		end

		function blake2s_feed_64(H, str, offs, size, bytes_compressed, last_block_size, is_last_node)
			-- offs >= 0, size >= 0, size is multiple of 64
			local h1, h2, h3, h4, h5, h6, h7, h8 = NORM(H[1]), NORM(H[2]), NORM(H[3]), NORM(H[4]), NORM(H[5]), NORM(H[6]), NORM(H[7]), NORM(H[8])
			for pos = offs, offs + size - 1, 64 do
				if str then
					for j = 1, 16 do
						pos = pos + 4
						local a, b, c, d = byte(str, pos - 3, pos)
						W[j] = OR(SHL(d, 24), SHL(c, 16), SHL(b, 8), a)
					end
				end
				v[0x0], v[0x1], v[0x2], v[0x3], v[0x4], v[0x5], v[0x6], v[0x7] = h1, h2, h3, h4, h5, h6, h7, h8
				v[0x8], v[0x9], v[0xA], v[0xB], v[0xE], v[0xF] = NORM(sha2_H_hi[1]), NORM(sha2_H_hi[2]), NORM(sha2_H_hi[3]), NORM(sha2_H_hi[4]), NORM(sha2_H_hi[7]), NORM(sha2_H_hi[8])
				bytes_compressed = bytes_compressed + (last_block_size or 64)
				local t0 = bytes_compressed % 2^32
				local t1 = floor(bytes_compressed / 2^32)
				v[0xC] = XOR(sha2_H_hi[5], t0)  -- t0 = low_4_bytes(bytes_compressed)
				v[0xD] = XOR(sha2_H_hi[6], t1)  -- t1 = high_4_bytes(bytes_compressed
				if last_block_size then  -- flag f0
					v[0xE] = NOT(v[0xE])
				end
				if is_last_node then  -- flag f1
					v[0xF] = NOT(v[0xF])
				end
				for j = 1, 10 do
					local row = sigma[j]
					G(0, 4,  8, 12, row[ 1], row[ 2])
					G(1, 5,  9, 13, row[ 3], row[ 4])
					G(2, 6, 10, 14, row[ 5], row[ 6])
					G(3, 7, 11, 15, row[ 7], row[ 8])
					G(0, 5, 10, 15, row[ 9], row[10])
					G(1, 6, 11, 12, row[11], row[12])
					G(2, 7,  8, 13, row[13], row[14])
					G(3, 4,  9, 14, row[15], row[16])
				end
				h1 = XOR(h1, v[0x0], v[0x8])
				h2 = XOR(h2, v[0x1], v[0x9])
				h3 = XOR(h3, v[0x2], v[0xA])
				h4 = XOR(h4, v[0x3], v[0xB])
				h5 = XOR(h5, v[0x4], v[0xC])
				h6 = XOR(h6, v[0x5], v[0xD])
				h7 = XOR(h7, v[0x6], v[0xE])
				h8 = XOR(h8, v[0x7], v[0xF])
			end
			H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8] = h1, h2, h3, h4, h5, h6, h7, h8
			return bytes_compressed
		end

		function blake3_feed_64(str, offs, size, flags, chunk_index, H_in, H_out, wide_output, block_length)
			-- offs >= 0, size >= 0, size is multiple of 64
			block_length = block_length or 64
			local h1, h2, h3, h4, h5, h6, h7, h8 = NORM(H_in[1]), NORM(H_in[2]), NORM(H_in[3]), NORM(H_in[4]), NORM(H_in[5]), NORM(H_in[6]), NORM(H_in[7]), NORM(H_in[8])
			H_out = H_out or H_in
			for pos = offs, offs + size - 1, 64 do
				if str then
					for j = 1, 16 do
						pos = pos + 4
						local a, b, c, d = byte(str, pos - 3, pos)
						W[j] = OR(SHL(d, 24), SHL(c, 16), SHL(b, 8), a)
					end
				end
				v[0x0], v[0x1], v[0x2], v[0x3], v[0x4], v[0x5], v[0x6], v[0x7] = h1, h2, h3, h4, h5, h6, h7, h8
				v[0x8], v[0x9], v[0xA], v[0xB] = NORM(sha2_H_hi[1]), NORM(sha2_H_hi[2]), NORM(sha2_H_hi[3]), NORM(sha2_H_hi[4])
				v[0xC] = NORM(chunk_index % 2^32)   -- t0 = low_4_bytes(chunk_index)
				v[0xD] = floor(chunk_index / 2^32)  -- t1 = high_4_bytes(chunk_index)
				v[0xE], v[0xF] = block_length, flags
				for j = 1, 7 do
					G(0, 4,  8, 12, perm_blake3[j],      perm_blake3[j + 14])
					G(1, 5,  9, 13, perm_blake3[j + 1],  perm_blake3[j + 2])
					G(2, 6, 10, 14, perm_blake3[j + 16], perm_blake3[j + 7])
					G(3, 7, 11, 15, perm_blake3[j + 15], perm_blake3[j + 17])
					G(0, 5, 10, 15, perm_blake3[j + 21], perm_blake3[j + 5])
					G(1, 6, 11, 12, perm_blake3[j + 3],  perm_blake3[j + 6])
					G(2, 7,  8, 13, perm_blake3[j + 4],  perm_blake3[j + 18])
					G(3, 4,  9, 14, perm_blake3[j + 19], perm_blake3[j + 20])
				end
				if wide_output then
					H_out[ 9] = XOR(h1, v[0x8])
					H_out[10] = XOR(h2, v[0x9])
					H_out[11] = XOR(h3, v[0xA])
					H_out[12] = XOR(h4, v[0xB])
					H_out[13] = XOR(h5, v[0xC])
					H_out[14] = XOR(h6, v[0xD])
					H_out[15] = XOR(h7, v[0xE])
					H_out[16] = XOR(h8, v[0xF])
				end
				h1 = XOR(v[0x0], v[0x8])
				h2 = XOR(v[0x1], v[0x9])
				h3 = XOR(v[0x2], v[0xA])
				h4 = XOR(v[0x3], v[0xB])
				h5 = XOR(v[0x4], v[0xC])
				h6 = XOR(v[0x5], v[0xD])
				h7 = XOR(v[0x6], v[0xE])
				h8 = XOR(v[0x7], v[0xF])
			end
			H_out[1], H_out[2], H_out[3], H_out[4], H_out[5], H_out[6], H_out[7], H_out[8] = h1, h2, h3, h4, h5, h6, h7, h8
		end

	end

end


if branch == "INT64" then


	-- implementation for Lua 5.3/5.4

	hi_factor = 4294967296
	hi_factor_keccak = 4294967296
	lanes_index_base = 1

	HEX64, XORA5, XOR_BYTE, sha256_feed_64, sha512_feed_128, md5_feed_64, sha1_feed_64, keccak_feed, blake2s_feed_64, blake2b_feed_128, blake3_feed_64 = load[=[-- branch "INT64"
      local md5_next_shift, md5_K, sha2_K_lo, sha2_K_hi, build_keccak_format, sha3_RC_lo, sigma, common_W, sha2_H_lo, sha2_H_hi, perm_blake3 = ...
      local string_format, string_unpack = string.format, string.unpack

      local function HEX64(x)
         return string_format("%016x", x)
      end

      local function XORA5(x, y)
         return x ~ (y or 0xa5a5a5a5a5a5a5a5)
      end

      local function XOR_BYTE(x, y)
         return x ~ y
      end

      local function sha256_feed_64(H, str, offs, size)
         -- offs >= 0, size >= 0, size is multiple of 64
         local W, K = common_W, sha2_K_hi
         local h1, h2, h3, h4, h5, h6, h7, h8 = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
         for pos = offs + 1, offs + size, 64 do
            W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16] =
               string_unpack(">I4I4I4I4I4I4I4I4I4I4I4I4I4I4I4I4", str, pos)
            for j = 17, 64 do
               local a = W[j-15]
               a = a<<32 | a
               local b = W[j-2]
               b = b<<32 | b
               W[j] = (a>>7 ~ a>>18 ~ a>>35) + (b>>17 ~ b>>19 ~ b>>42) + W[j-7] + W[j-16] & (1<<32)-1
            end
            local a, b, c, d, e, f, g, h = h1, h2, h3, h4, h5, h6, h7, h8
            for j = 1, 64 do
               e = e<<32 | e & (1<<32)-1
               local z = (e>>6 ~ e>>11 ~ e>>25) + (g ~ e & (f ~ g)) + h + K[j] + W[j]
               h = g
               g = f
               f = e
               e = z + d
               d = c
               c = b
               b = a
               a = a<<32 | a & (1<<32)-1
               a = z + ((a ~ c) & d ~ a & c) + (a>>2 ~ a>>13 ~ a>>22)
            end
            h1 = a + h1
            h2 = b + h2
            h3 = c + h3
            h4 = d + h4
            h5 = e + h5
            h6 = f + h6
            h7 = g + h7
            h8 = h + h8
         end
         H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8] = h1, h2, h3, h4, h5, h6, h7, h8
      end

      local function sha512_feed_128(H, _, str, offs, size)
         -- offs >= 0, size >= 0, size is multiple of 128
         local W, K = common_W, sha2_K_lo
         local h1, h2, h3, h4, h5, h6, h7, h8 = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
         for pos = offs + 1, offs + size, 128 do
            W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16] =
               string_unpack(">i8i8i8i8i8i8i8i8i8i8i8i8i8i8i8i8", str, pos)
            for j = 17, 80 do
               local a = W[j-15]
               local b = W[j-2]
               W[j] = (a >> 1 ~ a >> 7 ~ a >> 8 ~ a << 56 ~ a << 63) + (b >> 6 ~ b >> 19 ~ b >> 61 ~ b << 3 ~ b << 45) + W[j-7] + W[j-16]
            end
            local a, b, c, d, e, f, g, h = h1, h2, h3, h4, h5, h6, h7, h8
            for j = 1, 80 do
               local z = (e >> 14 ~ e >> 18 ~ e >> 41 ~ e << 23 ~ e << 46 ~ e << 50) + (g ~ e & (f ~ g)) + h + K[j] + W[j]
               h = g
               g = f
               f = e
               e = z + d
               d = c
               c = b
               b = a
               a = z + ((a ~ c) & d ~ a & c) + (a >> 28 ~ a >> 34 ~ a >> 39 ~ a << 25 ~ a << 30 ~ a << 36)
            end
            h1 = a + h1
            h2 = b + h2
            h3 = c + h3
            h4 = d + h4
            h5 = e + h5
            h6 = f + h6
            h7 = g + h7
            h8 = h + h8
         end
         H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8] = h1, h2, h3, h4, h5, h6, h7, h8
      end

      local function md5_feed_64(H, str, offs, size)
         -- offs >= 0, size >= 0, size is multiple of 64
         local W, K, md5_next_shift = common_W, md5_K, md5_next_shift
         local h1, h2, h3, h4 = H[1], H[2], H[3], H[4]
         for pos = offs + 1, offs + size, 64 do
            W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16] =
               string_unpack("<I4I4I4I4I4I4I4I4I4I4I4I4I4I4I4I4", str, pos)
            local a, b, c, d = h1, h2, h3, h4
            local s = 32-7
            for j = 1, 16 do
               local F = (d ~ b & (c ~ d)) + a + K[j] + W[j]
               a = d
               d = c
               c = b
               b = ((F<<32 | F & (1<<32)-1) >> s) + b
               s = md5_next_shift[s]
            end
            s = 32-5
            for j = 17, 32 do
               local F = (c ~ d & (b ~ c)) + a + K[j] + W[(5*j-4 & 15) + 1]
               a = d
               d = c
               c = b
               b = ((F<<32 | F & (1<<32)-1) >> s) + b
               s = md5_next_shift[s]
            end
            s = 32-4
            for j = 33, 48 do
               local F = (b ~ c ~ d) + a + K[j] + W[(3*j+2 & 15) + 1]
               a = d
               d = c
               c = b
               b = ((F<<32 | F & (1<<32)-1) >> s) + b
               s = md5_next_shift[s]
            end
            s = 32-6
            for j = 49, 64 do
               local F = (c ~ (b | ~d)) + a + K[j] + W[(j*7-7 & 15) + 1]
               a = d
               d = c
               c = b
               b = ((F<<32 | F & (1<<32)-1) >> s) + b
               s = md5_next_shift[s]
            end
            h1 = a + h1
            h2 = b + h2
            h3 = c + h3
            h4 = d + h4
         end
         H[1], H[2], H[3], H[4] = h1, h2, h3, h4
      end

      local function sha1_feed_64(H, str, offs, size)
         -- offs >= 0, size >= 0, size is multiple of 64
         local W = common_W
         local h1, h2, h3, h4, h5 = H[1], H[2], H[3], H[4], H[5]
         for pos = offs + 1, offs + size, 64 do
            W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16] =
               string_unpack(">I4I4I4I4I4I4I4I4I4I4I4I4I4I4I4I4", str, pos)
            for j = 17, 80 do
               local a = W[j-3] ~ W[j-8] ~ W[j-14] ~ W[j-16]
               W[j] = (a<<32 | a) << 1 >> 32
            end
            local a, b, c, d, e = h1, h2, h3, h4, h5
            for j = 1, 20 do
               local z = ((a<<32 | a & (1<<32)-1) >> 27) + (d ~ b & (c ~ d)) + 0x5A827999 + W[j] + e      -- constant = floor(2^30 * sqrt(2))
               e = d
               d = c
               c = (b<<32 | b & (1<<32)-1) >> 2
               b = a
               a = z
            end
            for j = 21, 40 do
               local z = ((a<<32 | a & (1<<32)-1) >> 27) + (b ~ c ~ d) + 0x6ED9EBA1 + W[j] + e            -- 2^30 * sqrt(3)
               e = d
               d = c
               c = (b<<32 | b & (1<<32)-1) >> 2
               b = a
               a = z
            end
            for j = 41, 60 do
               local z = ((a<<32 | a & (1<<32)-1) >> 27) + ((b ~ c) & d ~ b & c) + 0x8F1BBCDC + W[j] + e  -- 2^30 * sqrt(5)
               e = d
               d = c
               c = (b<<32 | b & (1<<32)-1) >> 2
               b = a
               a = z
            end
            for j = 61, 80 do
               local z = ((a<<32 | a & (1<<32)-1) >> 27) + (b ~ c ~ d) + 0xCA62C1D6 + W[j] + e            -- 2^30 * sqrt(10)
               e = d
               d = c
               c = (b<<32 | b & (1<<32)-1) >> 2
               b = a
               a = z
            end
            h1 = a + h1
            h2 = b + h2
            h3 = c + h3
            h4 = d + h4
            h5 = e + h5
         end
         H[1], H[2], H[3], H[4], H[5] = h1, h2, h3, h4, h5
      end

      local keccak_format_i8 = build_keccak_format("i8")

      local function keccak_feed(lanes, _, str, offs, size, block_size_in_bytes)
         -- offs >= 0, size >= 0, size is multiple of block_size_in_bytes, block_size_in_bytes is positive multiple of 8
         local RC = sha3_RC_lo
         local qwords_qty = block_size_in_bytes / 8
         local keccak_format = keccak_format_i8[qwords_qty]
         for pos = offs + 1, offs + size, block_size_in_bytes do
            local qwords_from_message = {string_unpack(keccak_format, str, pos)}
            for j = 1, qwords_qty do
               lanes[j] = lanes[j] ~ qwords_from_message[j]
            end
            local L01, L02, L03, L04, L05, L06, L07, L08, L09, L10, L11, L12, L13, L14, L15, L16, L17, L18, L19, L20, L21, L22, L23, L24, L25 =
               lanes[1], lanes[2], lanes[3], lanes[4], lanes[5], lanes[6], lanes[7], lanes[8], lanes[9], lanes[10], lanes[11], lanes[12], lanes[13],
               lanes[14], lanes[15], lanes[16], lanes[17], lanes[18], lanes[19], lanes[20], lanes[21], lanes[22], lanes[23], lanes[24], lanes[25]
            for round_idx = 1, 24 do
               local C1 = L01 ~ L06 ~ L11 ~ L16 ~ L21
               local C2 = L02 ~ L07 ~ L12 ~ L17 ~ L22
               local C3 = L03 ~ L08 ~ L13 ~ L18 ~ L23
               local C4 = L04 ~ L09 ~ L14 ~ L19 ~ L24
               local C5 = L05 ~ L10 ~ L15 ~ L20 ~ L25
               local D = C1 ~ C3<<1 ~ C3>>63
               local T0 = D ~ L02
               local T1 = D ~ L07
               local T2 = D ~ L12
               local T3 = D ~ L17
               local T4 = D ~ L22
               L02 = T1<<44 ~ T1>>20
               L07 = T3<<45 ~ T3>>19
               L12 = T0<<1 ~ T0>>63
               L17 = T2<<10 ~ T2>>54
               L22 = T4<<2 ~ T4>>62
               D = C2 ~ C4<<1 ~ C4>>63
               T0 = D ~ L03
               T1 = D ~ L08
               T2 = D ~ L13
               T3 = D ~ L18
               T4 = D ~ L23
               L03 = T2<<43 ~ T2>>21
               L08 = T4<<61 ~ T4>>3
               L13 = T1<<6 ~ T1>>58
               L18 = T3<<15 ~ T3>>49
               L23 = T0<<62 ~ T0>>2
               D = C3 ~ C5<<1 ~ C5>>63
               T0 = D ~ L04
               T1 = D ~ L09
               T2 = D ~ L14
               T3 = D ~ L19
               T4 = D ~ L24
               L04 = T3<<21 ~ T3>>43
               L09 = T0<<28 ~ T0>>36
               L14 = T2<<25 ~ T2>>39
               L19 = T4<<56 ~ T4>>8
               L24 = T1<<55 ~ T1>>9
               D = C4 ~ C1<<1 ~ C1>>63
               T0 = D ~ L05
               T1 = D ~ L10
               T2 = D ~ L15
               T3 = D ~ L20
               T4 = D ~ L25
               L05 = T4<<14 ~ T4>>50
               L10 = T1<<20 ~ T1>>44
               L15 = T3<<8 ~ T3>>56
               L20 = T0<<27 ~ T0>>37
               L25 = T2<<39 ~ T2>>25
               D = C5 ~ C2<<1 ~ C2>>63
               T1 = D ~ L06
               T2 = D ~ L11
               T3 = D ~ L16
               T4 = D ~ L21
               L06 = T2<<3 ~ T2>>61
               L11 = T4<<18 ~ T4>>46
               L16 = T1<<36 ~ T1>>28
               L21 = T3<<41 ~ T3>>23
               L01 = D ~ L01
               L01, L02, L03, L04, L05 = L01 ~ ~L02 & L03, L02 ~ ~L03 & L04, L03 ~ ~L04 & L05, L04 ~ ~L05 & L01, L05 ~ ~L01 & L02
               L06, L07, L08, L09, L10 = L09 ~ ~L10 & L06, L10 ~ ~L06 & L07, L06 ~ ~L07 & L08, L07 ~ ~L08 & L09, L08 ~ ~L09 & L10
               L11, L12, L13, L14, L15 = L12 ~ ~L13 & L14, L13 ~ ~L14 & L15, L14 ~ ~L15 & L11, L15 ~ ~L11 & L12, L11 ~ ~L12 & L13
               L16, L17, L18, L19, L20 = L20 ~ ~L16 & L17, L16 ~ ~L17 & L18, L17 ~ ~L18 & L19, L18 ~ ~L19 & L20, L19 ~ ~L20 & L16
               L21, L22, L23, L24, L25 = L23 ~ ~L24 & L25, L24 ~ ~L25 & L21, L25 ~ ~L21 & L22, L21 ~ ~L22 & L23, L22 ~ ~L23 & L24
               L01 = L01 ~ RC[round_idx]
            end
            lanes[1]  = L01
            lanes[2]  = L02
            lanes[3]  = L03
            lanes[4]  = L04
            lanes[5]  = L05
            lanes[6]  = L06
            lanes[7]  = L07
            lanes[8]  = L08
            lanes[9]  = L09
            lanes[10] = L10
            lanes[11] = L11
            lanes[12] = L12
            lanes[13] = L13
            lanes[14] = L14
            lanes[15] = L15
            lanes[16] = L16
            lanes[17] = L17
            lanes[18] = L18
            lanes[19] = L19
            lanes[20] = L20
            lanes[21] = L21
            lanes[22] = L22
            lanes[23] = L23
            lanes[24] = L24
            lanes[25] = L25
         end
      end

      local function blake2s_feed_64(H, str, offs, size, bytes_compressed, last_block_size, is_last_node)
         -- offs >= 0, size >= 0, size is multiple of 64
         local W = common_W
         local h1, h2, h3, h4, h5, h6, h7, h8 = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
         for pos = offs + 1, offs + size, 64 do
            if str then
               W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16] =
                  string_unpack("<I4I4I4I4I4I4I4I4I4I4I4I4I4I4I4I4", str, pos)
            end
            local v0, v1, v2, v3, v4, v5, v6, v7 = h1, h2, h3, h4, h5, h6, h7, h8
            local v8, v9, vA, vB, vC, vD, vE, vF = sha2_H_hi[1], sha2_H_hi[2], sha2_H_hi[3], sha2_H_hi[4], sha2_H_hi[5], sha2_H_hi[6], sha2_H_hi[7], sha2_H_hi[8]
            bytes_compressed = bytes_compressed + (last_block_size or 64)
            vC = vC ~ bytes_compressed        -- t0 = low_4_bytes(bytes_compressed)
            vD = vD ~ bytes_compressed >> 32  -- t1 = high_4_bytes(bytes_compressed)
            if last_block_size then  -- flag f0
               vE = ~vE
            end
            if is_last_node then  -- flag f1
               vF = ~vF
            end
            for j = 1, 10 do
               local row = sigma[j]
               v0 = v0 + v4 + W[row[1]]
               vC = vC ~ v0
               vC = (vC & (1<<32)-1) >> 16 | vC << 16
               v8 = v8 + vC
               v4 = v4 ~ v8
               v4 = (v4 & (1<<32)-1) >> 12 | v4 << 20
               v0 = v0 + v4 + W[row[2]]
               vC = vC ~ v0
               vC = (vC & (1<<32)-1) >> 8 | vC << 24
               v8 = v8 + vC
               v4 = v4 ~ v8
               v4 = (v4 & (1<<32)-1) >> 7 | v4 << 25
               v1 = v1 + v5 + W[row[3]]
               vD = vD ~ v1
               vD = (vD & (1<<32)-1) >> 16 | vD << 16
               v9 = v9 + vD
               v5 = v5 ~ v9
               v5 = (v5 & (1<<32)-1) >> 12 | v5 << 20
               v1 = v1 + v5 + W[row[4]]
               vD = vD ~ v1
               vD = (vD & (1<<32)-1) >> 8 | vD << 24
               v9 = v9 + vD
               v5 = v5 ~ v9
               v5 = (v5 & (1<<32)-1) >> 7 | v5 << 25
               v2 = v2 + v6 + W[row[5]]
               vE = vE ~ v2
               vE = (vE & (1<<32)-1) >> 16 | vE << 16
               vA = vA + vE
               v6 = v6 ~ vA
               v6 = (v6 & (1<<32)-1) >> 12 | v6 << 20
               v2 = v2 + v6 + W[row[6]]
               vE = vE ~ v2
               vE = (vE & (1<<32)-1) >> 8 | vE << 24
               vA = vA + vE
               v6 = v6 ~ vA
               v6 = (v6 & (1<<32)-1) >> 7 | v6 << 25
               v3 = v3 + v7 + W[row[7]]
               vF = vF ~ v3
               vF = (vF & (1<<32)-1) >> 16 | vF << 16
               vB = vB + vF
               v7 = v7 ~ vB
               v7 = (v7 & (1<<32)-1) >> 12 | v7 << 20
               v3 = v3 + v7 + W[row[8]]
               vF = vF ~ v3
               vF = (vF & (1<<32)-1) >> 8 | vF << 24
               vB = vB + vF
               v7 = v7 ~ vB
               v7 = (v7 & (1<<32)-1) >> 7 | v7 << 25
               v0 = v0 + v5 + W[row[9]]
               vF = vF ~ v0
               vF = (vF & (1<<32)-1) >> 16 | vF << 16
               vA = vA + vF
               v5 = v5 ~ vA
               v5 = (v5 & (1<<32)-1) >> 12 | v5 << 20
               v0 = v0 + v5 + W[row[10]]
               vF = vF ~ v0
               vF = (vF & (1<<32)-1) >> 8 | vF << 24
               vA = vA + vF
               v5 = v5 ~ vA
               v5 = (v5 & (1<<32)-1) >> 7 | v5 << 25
               v1 = v1 + v6 + W[row[11]]
               vC = vC ~ v1
               vC = (vC & (1<<32)-1) >> 16 | vC << 16
               vB = vB + vC
               v6 = v6 ~ vB
               v6 = (v6 & (1<<32)-1) >> 12 | v6 << 20
               v1 = v1 + v6 + W[row[12]]
               vC = vC ~ v1
               vC = (vC & (1<<32)-1) >> 8 | vC << 24
               vB = vB + vC
               v6 = v6 ~ vB
               v6 = (v6 & (1<<32)-1) >> 7 | v6 << 25
               v2 = v2 + v7 + W[row[13]]
               vD = vD ~ v2
               vD = (vD & (1<<32)-1) >> 16 | vD << 16
               v8 = v8 + vD
               v7 = v7 ~ v8
               v7 = (v7 & (1<<32)-1) >> 12 | v7 << 20
               v2 = v2 + v7 + W[row[14]]
               vD = vD ~ v2
               vD = (vD & (1<<32)-1) >> 8 | vD << 24
               v8 = v8 + vD
               v7 = v7 ~ v8
               v7 = (v7 & (1<<32)-1) >> 7 | v7 << 25
               v3 = v3 + v4 + W[row[15]]
               vE = vE ~ v3
               vE = (vE & (1<<32)-1) >> 16 | vE << 16
               v9 = v9 + vE
               v4 = v4 ~ v9
               v4 = (v4 & (1<<32)-1) >> 12 | v4 << 20
               v3 = v3 + v4 + W[row[16]]
               vE = vE ~ v3
               vE = (vE & (1<<32)-1) >> 8 | vE << 24
               v9 = v9 + vE
               v4 = v4 ~ v9
               v4 = (v4 & (1<<32)-1) >> 7 | v4 << 25
            end
            h1 = h1 ~ v0 ~ v8
            h2 = h2 ~ v1 ~ v9
            h3 = h3 ~ v2 ~ vA
            h4 = h4 ~ v3 ~ vB
            h5 = h5 ~ v4 ~ vC
            h6 = h6 ~ v5 ~ vD
            h7 = h7 ~ v6 ~ vE
            h8 = h8 ~ v7 ~ vF
         end
         H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8] = h1, h2, h3, h4, h5, h6, h7, h8
         return bytes_compressed
      end

      local function blake2b_feed_128(H, _, str, offs, size, bytes_compressed, last_block_size, is_last_node)
         -- offs >= 0, size >= 0, size is multiple of 128
         local W = common_W
         local h1, h2, h3, h4, h5, h6, h7, h8 = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
         for pos = offs + 1, offs + size, 128 do
            if str then
               W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16] =
                  string_unpack("<i8i8i8i8i8i8i8i8i8i8i8i8i8i8i8i8", str, pos)
            end
            local v0, v1, v2, v3, v4, v5, v6, v7 = h1, h2, h3, h4, h5, h6, h7, h8
            local v8, v9, vA, vB, vC, vD, vE, vF = sha2_H_lo[1], sha2_H_lo[2], sha2_H_lo[3], sha2_H_lo[4], sha2_H_lo[5], sha2_H_lo[6], sha2_H_lo[7], sha2_H_lo[8]
            bytes_compressed = bytes_compressed + (last_block_size or 128)
            vC = vC ~ bytes_compressed  -- t0 = low_8_bytes(bytes_compressed)
            -- t1 = high_8_bytes(bytes_compressed) = 0,  message length is always below 2^53 bytes
            if last_block_size then  -- flag f0
               vE = ~vE
            end
            if is_last_node then  -- flag f1
               vF = ~vF
            end
            for j = 1, 12 do
               local row = sigma[j]
               v0 = v0 + v4 + W[row[1]]
               vC = vC ~ v0
               vC = vC >> 32 | vC << 32
               v8 = v8 + vC
               v4 = v4 ~ v8
               v4 = v4 >> 24 | v4 << 40
               v0 = v0 + v4 + W[row[2]]
               vC = vC ~ v0
               vC = vC >> 16 | vC << 48
               v8 = v8 + vC
               v4 = v4 ~ v8
               v4 = v4 >> 63 | v4 << 1
               v1 = v1 + v5 + W[row[3]]
               vD = vD ~ v1
               vD = vD >> 32 | vD << 32
               v9 = v9 + vD
               v5 = v5 ~ v9
               v5 = v5 >> 24 | v5 << 40
               v1 = v1 + v5 + W[row[4]]
               vD = vD ~ v1
               vD = vD >> 16 | vD << 48
               v9 = v9 + vD
               v5 = v5 ~ v9
               v5 = v5 >> 63 | v5 << 1
               v2 = v2 + v6 + W[row[5]]
               vE = vE ~ v2
               vE = vE >> 32 | vE << 32
               vA = vA + vE
               v6 = v6 ~ vA
               v6 = v6 >> 24 | v6 << 40
               v2 = v2 + v6 + W[row[6]]
               vE = vE ~ v2
               vE = vE >> 16 | vE << 48
               vA = vA + vE
               v6 = v6 ~ vA
               v6 = v6 >> 63 | v6 << 1
               v3 = v3 + v7 + W[row[7]]
               vF = vF ~ v3
               vF = vF >> 32 | vF << 32
               vB = vB + vF
               v7 = v7 ~ vB
               v7 = v7 >> 24 | v7 << 40
               v3 = v3 + v7 + W[row[8]]
               vF = vF ~ v3
               vF = vF >> 16 | vF << 48
               vB = vB + vF
               v7 = v7 ~ vB
               v7 = v7 >> 63 | v7 << 1
               v0 = v0 + v5 + W[row[9]]
               vF = vF ~ v0
               vF = vF >> 32 | vF << 32
               vA = vA + vF
               v5 = v5 ~ vA
               v5 = v5 >> 24 | v5 << 40
               v0 = v0 + v5 + W[row[10]]
               vF = vF ~ v0
               vF = vF >> 16 | vF << 48
               vA = vA + vF
               v5 = v5 ~ vA
               v5 = v5 >> 63 | v5 << 1
               v1 = v1 + v6 + W[row[11]]
               vC = vC ~ v1
               vC = vC >> 32 | vC << 32
               vB = vB + vC
               v6 = v6 ~ vB
               v6 = v6 >> 24 | v6 << 40
               v1 = v1 + v6 + W[row[12]]
               vC = vC ~ v1
               vC = vC >> 16 | vC << 48
               vB = vB + vC
               v6 = v6 ~ vB
               v6 = v6 >> 63 | v6 << 1
               v2 = v2 + v7 + W[row[13]]
               vD = vD ~ v2
               vD = vD >> 32 | vD << 32
               v8 = v8 + vD
               v7 = v7 ~ v8
               v7 = v7 >> 24 | v7 << 40
               v2 = v2 + v7 + W[row[14]]
               vD = vD ~ v2
               vD = vD >> 16 | vD << 48
               v8 = v8 + vD
               v7 = v7 ~ v8
               v7 = v7 >> 63 | v7 << 1
               v3 = v3 + v4 + W[row[15]]
               vE = vE ~ v3
               vE = vE >> 32 | vE << 32
               v9 = v9 + vE
               v4 = v4 ~ v9
               v4 = v4 >> 24 | v4 << 40
               v3 = v3 + v4 + W[row[16]]
               vE = vE ~ v3
               vE = vE >> 16 | vE << 48
               v9 = v9 + vE
               v4 = v4 ~ v9
               v4 = v4 >> 63 | v4 << 1
            end
            h1 = h1 ~ v0 ~ v8
            h2 = h2 ~ v1 ~ v9
            h3 = h3 ~ v2 ~ vA
            h4 = h4 ~ v3 ~ vB
            h5 = h5 ~ v4 ~ vC
            h6 = h6 ~ v5 ~ vD
            h7 = h7 ~ v6 ~ vE
            h8 = h8 ~ v7 ~ vF
         end
         H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8] = h1, h2, h3, h4, h5, h6, h7, h8
         return bytes_compressed
      end

      local function blake3_feed_64(str, offs, size, flags, chunk_index, H_in, H_out, wide_output, block_length)
         -- offs >= 0, size >= 0, size is multiple of 64
         block_length = block_length or 64
         local W = common_W
         local h1, h2, h3, h4, h5, h6, h7, h8 = H_in[1], H_in[2], H_in[3], H_in[4], H_in[5], H_in[6], H_in[7], H_in[8]
         H_out = H_out or H_in
         for pos = offs + 1, offs + size, 64 do
            if str then
               W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16] =
                  string_unpack("<I4I4I4I4I4I4I4I4I4I4I4I4I4I4I4I4", str, pos)
            end
            local v0, v1, v2, v3, v4, v5, v6, v7 = h1, h2, h3, h4, h5, h6, h7, h8
            local v8, v9, vA, vB = sha2_H_hi[1], sha2_H_hi[2], sha2_H_hi[3], sha2_H_hi[4]
            local t0 = chunk_index % 2^32         -- t0 = low_4_bytes(chunk_index)
            local t1 = (chunk_index - t0) / 2^32  -- t1 = high_4_bytes(chunk_index)
            local vC, vD, vE, vF = 0|t0, 0|t1, block_length, flags
            for j = 1, 7 do
               v0 = v0 + v4 + W[perm_blake3[j]]
               vC = vC ~ v0
               vC = (vC & (1<<32)-1) >> 16 | vC << 16
               v8 = v8 + vC
               v4 = v4 ~ v8
               v4 = (v4 & (1<<32)-1) >> 12 | v4 << 20
               v0 = v0 + v4 + W[perm_blake3[j + 14]]
               vC = vC ~ v0
               vC = (vC & (1<<32)-1) >> 8 | vC << 24
               v8 = v8 + vC
               v4 = v4 ~ v8
               v4 = (v4 & (1<<32)-1) >> 7 | v4 << 25
               v1 = v1 + v5 + W[perm_blake3[j + 1]]
               vD = vD ~ v1
               vD = (vD & (1<<32)-1) >> 16 | vD << 16
               v9 = v9 + vD
               v5 = v5 ~ v9
               v5 = (v5 & (1<<32)-1) >> 12 | v5 << 20
               v1 = v1 + v5 + W[perm_blake3[j + 2]]
               vD = vD ~ v1
               vD = (vD & (1<<32)-1) >> 8 | vD << 24
               v9 = v9 + vD
               v5 = v5 ~ v9
               v5 = (v5 & (1<<32)-1) >> 7 | v5 << 25
               v2 = v2 + v6 + W[perm_blake3[j + 16]]
               vE = vE ~ v2
               vE = (vE & (1<<32)-1) >> 16 | vE << 16
               vA = vA + vE
               v6 = v6 ~ vA
               v6 = (v6 & (1<<32)-1) >> 12 | v6 << 20
               v2 = v2 + v6 + W[perm_blake3[j + 7]]
               vE = vE ~ v2
               vE = (vE & (1<<32)-1) >> 8 | vE << 24
               vA = vA + vE
               v6 = v6 ~ vA
               v6 = (v6 & (1<<32)-1) >> 7 | v6 << 25
               v3 = v3 + v7 + W[perm_blake3[j + 15]]
               vF = vF ~ v3
               vF = (vF & (1<<32)-1) >> 16 | vF << 16
               vB = vB + vF
               v7 = v7 ~ vB
               v7 = (v7 & (1<<32)-1) >> 12 | v7 << 20
               v3 = v3 + v7 + W[perm_blake3[j + 17]]
               vF = vF ~ v3
               vF = (vF & (1<<32)-1) >> 8 | vF << 24
               vB = vB + vF
               v7 = v7 ~ vB
               v7 = (v7 & (1<<32)-1) >> 7 | v7 << 25
               v0 = v0 + v5 + W[perm_blake3[j + 21]]
               vF = vF ~ v0
               vF = (vF & (1<<32)-1) >> 16 | vF << 16
               vA = vA + vF
               v5 = v5 ~ vA
               v5 = (v5 & (1<<32)-1) >> 12 | v5 << 20
               v0 = v0 + v5 + W[perm_blake3[j + 5]]
               vF = vF ~ v0
               vF = (vF & (1<<32)-1) >> 8 | vF << 24
               vA = vA + vF
               v5 = v5 ~ vA
               v5 = (v5 & (1<<32)-1) >> 7 | v5 << 25
               v1 = v1 + v6 + W[perm_blake3[j + 3]]
               vC = vC ~ v1
               vC = (vC & (1<<32)-1) >> 16 | vC << 16
               vB = vB + vC
               v6 = v6 ~ vB
               v6 = (v6 & (1<<32)-1) >> 12 | v6 << 20
               v1 = v1 + v6 + W[perm_blake3[j + 6]]
               vC = vC ~ v1
               vC = (vC & (1<<32)-1) >> 8 | vC << 24
               vB = vB + vC
               v6 = v6 ~ vB
               v6 = (v6 & (1<<32)-1) >> 7 | v6 << 25
               v2 = v2 + v7 + W[perm_blake3[j + 4]]
               vD = vD ~ v2
               vD = (vD & (1<<32)-1) >> 16 | vD << 16
               v8 = v8 + vD
               v7 = v7 ~ v8
               v7 = (v7 & (1<<32)-1) >> 12 | v7 << 20
               v2 = v2 + v7 + W[perm_blake3[j + 18]]
               vD = vD ~ v2
               vD = (vD & (1<<32)-1) >> 8 | vD << 24
               v8 = v8 + vD
               v7 = v7 ~ v8
               v7 = (v7 & (1<<32)-1) >> 7 | v7 << 25
               v3 = v3 + v4 + W[perm_blake3[j + 19]]
               vE = vE ~ v3
               vE = (vE & (1<<32)-1) >> 16 | vE << 16
               v9 = v9 + vE
               v4 = v4 ~ v9
               v4 = (v4 & (1<<32)-1) >> 12 | v4 << 20
               v3 = v3 + v4 + W[perm_blake3[j + 20]]
               vE = vE ~ v3
               vE = (vE & (1<<32)-1) >> 8 | vE << 24
               v9 = v9 + vE
               v4 = v4 ~ v9
               v4 = (v4 & (1<<32)-1) >> 7 | v4 << 25
            end
            if wide_output then
               H_out[ 9] = h1 ~ v8
               H_out[10] = h2 ~ v9
               H_out[11] = h3 ~ vA
               H_out[12] = h4 ~ vB
               H_out[13] = h5 ~ vC
               H_out[14] = h6 ~ vD
               H_out[15] = h7 ~ vE
               H_out[16] = h8 ~ vF
            end
            h1 = v0 ~ v8
            h2 = v1 ~ v9
            h3 = v2 ~ vA
            h4 = v3 ~ vB
            h5 = v4 ~ vC
            h6 = v5 ~ vD
            h7 = v6 ~ vE
            h8 = v7 ~ vF
         end
         H_out[1], H_out[2], H_out[3], H_out[4], H_out[5], H_out[6], H_out[7], H_out[8] = h1, h2, h3, h4, h5, h6, h7, h8
      end

      return HEX64, XORA5, XOR_BYTE, sha256_feed_64, sha512_feed_128, md5_feed_64, sha1_feed_64, keccak_feed, blake2s_feed_64, blake2b_feed_128, blake3_feed_64
   ]=](md5_next_shift, md5_K, sha2_K_lo, sha2_K_hi, build_keccak_format, sha3_RC_lo, sigma, common_W, sha2_H_lo, sha2_H_hi, perm_blake3)

end


if branch == "INT32" then


	-- implementation for Lua 5.3/5.4 having non-standard numbers config "int32"+"double" (built with LUA_INT_TYPE=LUA_INT_INT)

	K_lo_modulo = 2^32

	function HEX(x) -- returns string of 8 lowercase hexadecimal digits
		return string_format("%08x", x)
	end

	XORA5, XOR_BYTE, sha256_feed_64, sha512_feed_128, md5_feed_64, sha1_feed_64, keccak_feed, blake2s_feed_64, blake2b_feed_128, blake3_feed_64 = load[=[-- branch "INT32"
      local md5_next_shift, md5_K, sha2_K_lo, sha2_K_hi, build_keccak_format, sha3_RC_lo, sha3_RC_hi, sigma, common_W, sha2_H_lo, sha2_H_hi, perm_blake3 = ...
      local string_unpack, floor = string.unpack, math.floor

      local function XORA5(x, y)
         return x ~ (y and (y + 2^31) % 2^32 - 2^31 or 0xA5A5A5A5)
      end

      local function XOR_BYTE(x, y)
         return x ~ y
      end

      local function sha256_feed_64(H, str, offs, size)
         -- offs >= 0, size >= 0, size is multiple of 64
         local W, K = common_W, sha2_K_hi
         local h1, h2, h3, h4, h5, h6, h7, h8 = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
         for pos = offs + 1, offs + size, 64 do
            W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16] =
               string_unpack(">i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4", str, pos)
            for j = 17, 64 do
               local a, b = W[j-15], W[j-2]
               W[j] = (a>>7 ~ a<<25 ~ a<<14 ~ a>>18 ~ a>>3) + (b<<15 ~ b>>17 ~ b<<13 ~ b>>19 ~ b>>10) + W[j-7] + W[j-16]
            end
            local a, b, c, d, e, f, g, h = h1, h2, h3, h4, h5, h6, h7, h8
            for j = 1, 64 do
               local z = (e>>6 ~ e<<26 ~ e>>11 ~ e<<21 ~ e>>25 ~ e<<7) + (g ~ e & (f ~ g)) + h + K[j] + W[j]
               h = g
               g = f
               f = e
               e = z + d
               d = c
               c = b
               b = a
               a = z + ((a ~ c) & d ~ a & c) + (a>>2 ~ a<<30 ~ a>>13 ~ a<<19 ~ a<<10 ~ a>>22)
            end
            h1 = a + h1
            h2 = b + h2
            h3 = c + h3
            h4 = d + h4
            h5 = e + h5
            h6 = f + h6
            h7 = g + h7
            h8 = h + h8
         end
         H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8] = h1, h2, h3, h4, h5, h6, h7, h8
      end

      local function sha512_feed_128(H_lo, H_hi, str, offs, size)
         -- offs >= 0, size >= 0, size is multiple of 128
         -- W1_hi, W1_lo, W2_hi, W2_lo, ...   Wk_hi = W[2*k-1], Wk_lo = W[2*k]
         local floor, W, K_lo, K_hi = floor, common_W, sha2_K_lo, sha2_K_hi
         local h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo = H_lo[1], H_lo[2], H_lo[3], H_lo[4], H_lo[5], H_lo[6], H_lo[7], H_lo[8]
         local h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi = H_hi[1], H_hi[2], H_hi[3], H_hi[4], H_hi[5], H_hi[6], H_hi[7], H_hi[8]
         for pos = offs + 1, offs + size, 128 do
            W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16],
               W[17], W[18], W[19], W[20], W[21], W[22], W[23], W[24], W[25], W[26], W[27], W[28], W[29], W[30], W[31], W[32] =
               string_unpack(">i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4", str, pos)
            for jj = 17*2, 80*2, 2 do
               local a_lo, a_hi, b_lo, b_hi = W[jj-30], W[jj-31], W[jj-4], W[jj-5]
               local tmp =
                  (a_lo>>1 ~ a_hi<<31 ~ a_lo>>8 ~ a_hi<<24 ~ a_lo>>7 ~ a_hi<<25) % 2^32
                  + (b_lo>>19 ~ b_hi<<13 ~ b_lo<<3 ~ b_hi>>29 ~ b_lo>>6 ~ b_hi<<26) % 2^32
                  + W[jj-14] % 2^32 + W[jj-32] % 2^32
               W[jj-1] =
                  (a_hi>>1 ~ a_lo<<31 ~ a_hi>>8 ~ a_lo<<24 ~ a_hi>>7)
                  + (b_hi>>19 ~ b_lo<<13 ~ b_hi<<3 ~ b_lo>>29 ~ b_hi>>6)
                  + W[jj-15] + W[jj-33] + floor(tmp / 2^32)
               W[jj] = 0|((tmp + 2^31) % 2^32 - 2^31)
            end
            local a_lo, b_lo, c_lo, d_lo, e_lo, f_lo, g_lo, h_lo = h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo
            local a_hi, b_hi, c_hi, d_hi, e_hi, f_hi, g_hi, h_hi = h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi
            for j = 1, 80 do
               local jj = 2*j
               local z_lo = (e_lo>>14 ~ e_hi<<18 ~ e_lo>>18 ~ e_hi<<14 ~ e_lo<<23 ~ e_hi>>9) % 2^32 + (g_lo ~ e_lo & (f_lo ~ g_lo)) % 2^32 + h_lo % 2^32 + K_lo[j] + W[jj] % 2^32
               local z_hi = (e_hi>>14 ~ e_lo<<18 ~ e_hi>>18 ~ e_lo<<14 ~ e_hi<<23 ~ e_lo>>9) + (g_hi ~ e_hi & (f_hi ~ g_hi)) + h_hi + K_hi[j] + W[jj-1] + floor(z_lo / 2^32)
               z_lo = z_lo % 2^32
               h_lo = g_lo;  h_hi = g_hi
               g_lo = f_lo;  g_hi = f_hi
               f_lo = e_lo;  f_hi = e_hi
               e_lo = z_lo + d_lo % 2^32
               e_hi = z_hi + d_hi + floor(e_lo / 2^32)
               e_lo = 0|((e_lo + 2^31) % 2^32 - 2^31)
               d_lo = c_lo;  d_hi = c_hi
               c_lo = b_lo;  c_hi = b_hi
               b_lo = a_lo;  b_hi = a_hi
               z_lo = z_lo + (d_lo & c_lo ~ b_lo & (d_lo ~ c_lo)) % 2^32 + (b_lo>>28 ~ b_hi<<4 ~ b_lo<<30 ~ b_hi>>2 ~ b_lo<<25 ~ b_hi>>7) % 2^32
               a_hi = z_hi + (d_hi & c_hi ~ b_hi & (d_hi ~ c_hi)) + (b_hi>>28 ~ b_lo<<4 ~ b_hi<<30 ~ b_lo>>2 ~ b_hi<<25 ~ b_lo>>7) + floor(z_lo / 2^32)
               a_lo = 0|((z_lo + 2^31) % 2^32 - 2^31)
            end
            a_lo = h1_lo % 2^32 + a_lo % 2^32
            h1_hi = h1_hi + a_hi + floor(a_lo / 2^32)
            h1_lo = 0|((a_lo + 2^31) % 2^32 - 2^31)
            a_lo = h2_lo % 2^32 + b_lo % 2^32
            h2_hi = h2_hi + b_hi + floor(a_lo / 2^32)
            h2_lo = 0|((a_lo + 2^31) % 2^32 - 2^31)
            a_lo = h3_lo % 2^32 + c_lo % 2^32
            h3_hi = h3_hi + c_hi + floor(a_lo / 2^32)
            h3_lo = 0|((a_lo + 2^31) % 2^32 - 2^31)
            a_lo = h4_lo % 2^32 + d_lo % 2^32
            h4_hi = h4_hi + d_hi + floor(a_lo / 2^32)
            h4_lo = 0|((a_lo + 2^31) % 2^32 - 2^31)
            a_lo = h5_lo % 2^32 + e_lo % 2^32
            h5_hi = h5_hi + e_hi + floor(a_lo / 2^32)
            h5_lo = 0|((a_lo + 2^31) % 2^32 - 2^31)
            a_lo = h6_lo % 2^32 + f_lo % 2^32
            h6_hi = h6_hi + f_hi + floor(a_lo / 2^32)
            h6_lo = 0|((a_lo + 2^31) % 2^32 - 2^31)
            a_lo = h7_lo % 2^32 + g_lo % 2^32
            h7_hi = h7_hi + g_hi + floor(a_lo / 2^32)
            h7_lo = 0|((a_lo + 2^31) % 2^32 - 2^31)
            a_lo = h8_lo % 2^32 + h_lo % 2^32
            h8_hi = h8_hi + h_hi + floor(a_lo / 2^32)
            h8_lo = 0|((a_lo + 2^31) % 2^32 - 2^31)
         end
         H_lo[1], H_lo[2], H_lo[3], H_lo[4], H_lo[5], H_lo[6], H_lo[7], H_lo[8] = h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo
         H_hi[1], H_hi[2], H_hi[3], H_hi[4], H_hi[5], H_hi[6], H_hi[7], H_hi[8] = h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi
      end

      local function md5_feed_64(H, str, offs, size)
         -- offs >= 0, size >= 0, size is multiple of 64
         local W, K, md5_next_shift = common_W, md5_K, md5_next_shift
         local h1, h2, h3, h4 = H[1], H[2], H[3], H[4]
         for pos = offs + 1, offs + size, 64 do
            W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16] =
               string_unpack("<i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4", str, pos)
            local a, b, c, d = h1, h2, h3, h4
            local s = 32-7
            for j = 1, 16 do
               local F = (d ~ b & (c ~ d)) + a + K[j] + W[j]
               a = d
               d = c
               c = b
               b = (F << 32-s | F>>s) + b
               s = md5_next_shift[s]
            end
            s = 32-5
            for j = 17, 32 do
               local F = (c ~ d & (b ~ c)) + a + K[j] + W[(5*j-4 & 15) + 1]
               a = d
               d = c
               c = b
               b = (F << 32-s | F>>s) + b
               s = md5_next_shift[s]
            end
            s = 32-4
            for j = 33, 48 do
               local F = (b ~ c ~ d) + a + K[j] + W[(3*j+2 & 15) + 1]
               a = d
               d = c
               c = b
               b = (F << 32-s | F>>s) + b
               s = md5_next_shift[s]
            end
            s = 32-6
            for j = 49, 64 do
               local F = (c ~ (b | ~d)) + a + K[j] + W[(j*7-7 & 15) + 1]
               a = d
               d = c
               c = b
               b = (F << 32-s | F>>s) + b
               s = md5_next_shift[s]
            end
            h1 = a + h1
            h2 = b + h2
            h3 = c + h3
            h4 = d + h4
         end
         H[1], H[2], H[3], H[4] = h1, h2, h3, h4
      end

      local function sha1_feed_64(H, str, offs, size)
         -- offs >= 0, size >= 0, size is multiple of 64
         local W = common_W
         local h1, h2, h3, h4, h5 = H[1], H[2], H[3], H[4], H[5]
         for pos = offs + 1, offs + size, 64 do
            W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16] =
               string_unpack(">i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4", str, pos)
            for j = 17, 80 do
               local a = W[j-3] ~ W[j-8] ~ W[j-14] ~ W[j-16]
               W[j] = a << 1 ~ a >> 31
            end
            local a, b, c, d, e = h1, h2, h3, h4, h5
            for j = 1, 20 do
               local z = (a << 5 ~ a >> 27) + (d ~ b & (c ~ d)) + 0x5A827999 + W[j] + e      -- constant = floor(2^30 * sqrt(2))
               e = d
               d = c
               c = b << 30 ~ b >> 2
               b = a
               a = z
            end
            for j = 21, 40 do
               local z = (a << 5 ~ a >> 27) + (b ~ c ~ d) + 0x6ED9EBA1 + W[j] + e            -- 2^30 * sqrt(3)
               e = d
               d = c
               c = b << 30 ~ b >> 2
               b = a
               a = z
            end
            for j = 41, 60 do
               local z = (a << 5 ~ a >> 27) + ((b ~ c) & d ~ b & c) + 0x8F1BBCDC + W[j] + e  -- 2^30 * sqrt(5)
               e = d
               d = c
               c = b << 30 ~ b >> 2
               b = a
               a = z
            end
            for j = 61, 80 do
               local z = (a << 5 ~ a >> 27) + (b ~ c ~ d) + 0xCA62C1D6 + W[j] + e            -- 2^30 * sqrt(10)
               e = d
               d = c
               c = b << 30 ~ b >> 2
               b = a
               a = z
            end
            h1 = a + h1
            h2 = b + h2
            h3 = c + h3
            h4 = d + h4
            h5 = e + h5
         end
         H[1], H[2], H[3], H[4], H[5] = h1, h2, h3, h4, h5
      end

      local keccak_format_i4i4 = build_keccak_format("i4i4")

      local function keccak_feed(lanes_lo, lanes_hi, str, offs, size, block_size_in_bytes)
         -- offs >= 0, size >= 0, size is multiple of block_size_in_bytes, block_size_in_bytes is positive multiple of 8
         local RC_lo, RC_hi = sha3_RC_lo, sha3_RC_hi
         local qwords_qty = block_size_in_bytes / 8
         local keccak_format = keccak_format_i4i4[qwords_qty]
         for pos = offs + 1, offs + size, block_size_in_bytes do
            local dwords_from_message = {string_unpack(keccak_format, str, pos)}
            for j = 1, qwords_qty do
               lanes_lo[j] = lanes_lo[j] ~ dwords_from_message[2*j-1]
               lanes_hi[j] = lanes_hi[j] ~ dwords_from_message[2*j]
            end
            local L01_lo, L01_hi, L02_lo, L02_hi, L03_lo, L03_hi, L04_lo, L04_hi, L05_lo, L05_hi, L06_lo, L06_hi, L07_lo, L07_hi, L08_lo, L08_hi,
               L09_lo, L09_hi, L10_lo, L10_hi, L11_lo, L11_hi, L12_lo, L12_hi, L13_lo, L13_hi, L14_lo, L14_hi, L15_lo, L15_hi, L16_lo, L16_hi,
               L17_lo, L17_hi, L18_lo, L18_hi, L19_lo, L19_hi, L20_lo, L20_hi, L21_lo, L21_hi, L22_lo, L22_hi, L23_lo, L23_hi, L24_lo, L24_hi, L25_lo, L25_hi =
               lanes_lo[1], lanes_hi[1], lanes_lo[2], lanes_hi[2], lanes_lo[3], lanes_hi[3], lanes_lo[4], lanes_hi[4], lanes_lo[5], lanes_hi[5],
               lanes_lo[6], lanes_hi[6], lanes_lo[7], lanes_hi[7], lanes_lo[8], lanes_hi[8], lanes_lo[9], lanes_hi[9], lanes_lo[10], lanes_hi[10],
               lanes_lo[11], lanes_hi[11], lanes_lo[12], lanes_hi[12], lanes_lo[13], lanes_hi[13], lanes_lo[14], lanes_hi[14], lanes_lo[15], lanes_hi[15],
               lanes_lo[16], lanes_hi[16], lanes_lo[17], lanes_hi[17], lanes_lo[18], lanes_hi[18], lanes_lo[19], lanes_hi[19], lanes_lo[20], lanes_hi[20],
               lanes_lo[21], lanes_hi[21], lanes_lo[22], lanes_hi[22], lanes_lo[23], lanes_hi[23], lanes_lo[24], lanes_hi[24], lanes_lo[25], lanes_hi[25]
            for round_idx = 1, 24 do
               local C1_lo = L01_lo ~ L06_lo ~ L11_lo ~ L16_lo ~ L21_lo
               local C1_hi = L01_hi ~ L06_hi ~ L11_hi ~ L16_hi ~ L21_hi
               local C2_lo = L02_lo ~ L07_lo ~ L12_lo ~ L17_lo ~ L22_lo
               local C2_hi = L02_hi ~ L07_hi ~ L12_hi ~ L17_hi ~ L22_hi
               local C3_lo = L03_lo ~ L08_lo ~ L13_lo ~ L18_lo ~ L23_lo
               local C3_hi = L03_hi ~ L08_hi ~ L13_hi ~ L18_hi ~ L23_hi
               local C4_lo = L04_lo ~ L09_lo ~ L14_lo ~ L19_lo ~ L24_lo
               local C4_hi = L04_hi ~ L09_hi ~ L14_hi ~ L19_hi ~ L24_hi
               local C5_lo = L05_lo ~ L10_lo ~ L15_lo ~ L20_lo ~ L25_lo
               local C5_hi = L05_hi ~ L10_hi ~ L15_hi ~ L20_hi ~ L25_hi
               local D_lo = C1_lo ~ C3_lo<<1 ~ C3_hi>>31
               local D_hi = C1_hi ~ C3_hi<<1 ~ C3_lo>>31
               local T0_lo = D_lo ~ L02_lo
               local T0_hi = D_hi ~ L02_hi
               local T1_lo = D_lo ~ L07_lo
               local T1_hi = D_hi ~ L07_hi
               local T2_lo = D_lo ~ L12_lo
               local T2_hi = D_hi ~ L12_hi
               local T3_lo = D_lo ~ L17_lo
               local T3_hi = D_hi ~ L17_hi
               local T4_lo = D_lo ~ L22_lo
               local T4_hi = D_hi ~ L22_hi
               L02_lo = T1_lo>>20 ~ T1_hi<<12
               L02_hi = T1_hi>>20 ~ T1_lo<<12
               L07_lo = T3_lo>>19 ~ T3_hi<<13
               L07_hi = T3_hi>>19 ~ T3_lo<<13
               L12_lo = T0_lo<<1 ~ T0_hi>>31
               L12_hi = T0_hi<<1 ~ T0_lo>>31
               L17_lo = T2_lo<<10 ~ T2_hi>>22
               L17_hi = T2_hi<<10 ~ T2_lo>>22
               L22_lo = T4_lo<<2 ~ T4_hi>>30
               L22_hi = T4_hi<<2 ~ T4_lo>>30
               D_lo = C2_lo ~ C4_lo<<1 ~ C4_hi>>31
               D_hi = C2_hi ~ C4_hi<<1 ~ C4_lo>>31
               T0_lo = D_lo ~ L03_lo
               T0_hi = D_hi ~ L03_hi
               T1_lo = D_lo ~ L08_lo
               T1_hi = D_hi ~ L08_hi
               T2_lo = D_lo ~ L13_lo
               T2_hi = D_hi ~ L13_hi
               T3_lo = D_lo ~ L18_lo
               T3_hi = D_hi ~ L18_hi
               T4_lo = D_lo ~ L23_lo
               T4_hi = D_hi ~ L23_hi
               L03_lo = T2_lo>>21 ~ T2_hi<<11
               L03_hi = T2_hi>>21 ~ T2_lo<<11
               L08_lo = T4_lo>>3 ~ T4_hi<<29
               L08_hi = T4_hi>>3 ~ T4_lo<<29
               L13_lo = T1_lo<<6 ~ T1_hi>>26
               L13_hi = T1_hi<<6 ~ T1_lo>>26
               L18_lo = T3_lo<<15 ~ T3_hi>>17
               L18_hi = T3_hi<<15 ~ T3_lo>>17
               L23_lo = T0_lo>>2 ~ T0_hi<<30
               L23_hi = T0_hi>>2 ~ T0_lo<<30
               D_lo = C3_lo ~ C5_lo<<1 ~ C5_hi>>31
               D_hi = C3_hi ~ C5_hi<<1 ~ C5_lo>>31
               T0_lo = D_lo ~ L04_lo
               T0_hi = D_hi ~ L04_hi
               T1_lo = D_lo ~ L09_lo
               T1_hi = D_hi ~ L09_hi
               T2_lo = D_lo ~ L14_lo
               T2_hi = D_hi ~ L14_hi
               T3_lo = D_lo ~ L19_lo
               T3_hi = D_hi ~ L19_hi
               T4_lo = D_lo ~ L24_lo
               T4_hi = D_hi ~ L24_hi
               L04_lo = T3_lo<<21 ~ T3_hi>>11
               L04_hi = T3_hi<<21 ~ T3_lo>>11
               L09_lo = T0_lo<<28 ~ T0_hi>>4
               L09_hi = T0_hi<<28 ~ T0_lo>>4
               L14_lo = T2_lo<<25 ~ T2_hi>>7
               L14_hi = T2_hi<<25 ~ T2_lo>>7
               L19_lo = T4_lo>>8 ~ T4_hi<<24
               L19_hi = T4_hi>>8 ~ T4_lo<<24
               L24_lo = T1_lo>>9 ~ T1_hi<<23
               L24_hi = T1_hi>>9 ~ T1_lo<<23
               D_lo = C4_lo ~ C1_lo<<1 ~ C1_hi>>31
               D_hi = C4_hi ~ C1_hi<<1 ~ C1_lo>>31
               T0_lo = D_lo ~ L05_lo
               T0_hi = D_hi ~ L05_hi
               T1_lo = D_lo ~ L10_lo
               T1_hi = D_hi ~ L10_hi
               T2_lo = D_lo ~ L15_lo
               T2_hi = D_hi ~ L15_hi
               T3_lo = D_lo ~ L20_lo
               T3_hi = D_hi ~ L20_hi
               T4_lo = D_lo ~ L25_lo
               T4_hi = D_hi ~ L25_hi
               L05_lo = T4_lo<<14 ~ T4_hi>>18
               L05_hi = T4_hi<<14 ~ T4_lo>>18
               L10_lo = T1_lo<<20 ~ T1_hi>>12
               L10_hi = T1_hi<<20 ~ T1_lo>>12
               L15_lo = T3_lo<<8 ~ T3_hi>>24
               L15_hi = T3_hi<<8 ~ T3_lo>>24
               L20_lo = T0_lo<<27 ~ T0_hi>>5
               L20_hi = T0_hi<<27 ~ T0_lo>>5
               L25_lo = T2_lo>>25 ~ T2_hi<<7
               L25_hi = T2_hi>>25 ~ T2_lo<<7
               D_lo = C5_lo ~ C2_lo<<1 ~ C2_hi>>31
               D_hi = C5_hi ~ C2_hi<<1 ~ C2_lo>>31
               T1_lo = D_lo ~ L06_lo
               T1_hi = D_hi ~ L06_hi
               T2_lo = D_lo ~ L11_lo
               T2_hi = D_hi ~ L11_hi
               T3_lo = D_lo ~ L16_lo
               T3_hi = D_hi ~ L16_hi
               T4_lo = D_lo ~ L21_lo
               T4_hi = D_hi ~ L21_hi
               L06_lo = T2_lo<<3 ~ T2_hi>>29
               L06_hi = T2_hi<<3 ~ T2_lo>>29
               L11_lo = T4_lo<<18 ~ T4_hi>>14
               L11_hi = T4_hi<<18 ~ T4_lo>>14
               L16_lo = T1_lo>>28 ~ T1_hi<<4
               L16_hi = T1_hi>>28 ~ T1_lo<<4
               L21_lo = T3_lo>>23 ~ T3_hi<<9
               L21_hi = T3_hi>>23 ~ T3_lo<<9
               L01_lo = D_lo ~ L01_lo
               L01_hi = D_hi ~ L01_hi
               L01_lo, L02_lo, L03_lo, L04_lo, L05_lo = L01_lo ~ ~L02_lo & L03_lo, L02_lo ~ ~L03_lo & L04_lo, L03_lo ~ ~L04_lo & L05_lo, L04_lo ~ ~L05_lo & L01_lo, L05_lo ~ ~L01_lo & L02_lo
               L01_hi, L02_hi, L03_hi, L04_hi, L05_hi = L01_hi ~ ~L02_hi & L03_hi, L02_hi ~ ~L03_hi & L04_hi, L03_hi ~ ~L04_hi & L05_hi, L04_hi ~ ~L05_hi & L01_hi, L05_hi ~ ~L01_hi & L02_hi
               L06_lo, L07_lo, L08_lo, L09_lo, L10_lo = L09_lo ~ ~L10_lo & L06_lo, L10_lo ~ ~L06_lo & L07_lo, L06_lo ~ ~L07_lo & L08_lo, L07_lo ~ ~L08_lo & L09_lo, L08_lo ~ ~L09_lo & L10_lo
               L06_hi, L07_hi, L08_hi, L09_hi, L10_hi = L09_hi ~ ~L10_hi & L06_hi, L10_hi ~ ~L06_hi & L07_hi, L06_hi ~ ~L07_hi & L08_hi, L07_hi ~ ~L08_hi & L09_hi, L08_hi ~ ~L09_hi & L10_hi
               L11_lo, L12_lo, L13_lo, L14_lo, L15_lo = L12_lo ~ ~L13_lo & L14_lo, L13_lo ~ ~L14_lo & L15_lo, L14_lo ~ ~L15_lo & L11_lo, L15_lo ~ ~L11_lo & L12_lo, L11_lo ~ ~L12_lo & L13_lo
               L11_hi, L12_hi, L13_hi, L14_hi, L15_hi = L12_hi ~ ~L13_hi & L14_hi, L13_hi ~ ~L14_hi & L15_hi, L14_hi ~ ~L15_hi & L11_hi, L15_hi ~ ~L11_hi & L12_hi, L11_hi ~ ~L12_hi & L13_hi
               L16_lo, L17_lo, L18_lo, L19_lo, L20_lo = L20_lo ~ ~L16_lo & L17_lo, L16_lo ~ ~L17_lo & L18_lo, L17_lo ~ ~L18_lo & L19_lo, L18_lo ~ ~L19_lo & L20_lo, L19_lo ~ ~L20_lo & L16_lo
               L16_hi, L17_hi, L18_hi, L19_hi, L20_hi = L20_hi ~ ~L16_hi & L17_hi, L16_hi ~ ~L17_hi & L18_hi, L17_hi ~ ~L18_hi & L19_hi, L18_hi ~ ~L19_hi & L20_hi, L19_hi ~ ~L20_hi & L16_hi
               L21_lo, L22_lo, L23_lo, L24_lo, L25_lo = L23_lo ~ ~L24_lo & L25_lo, L24_lo ~ ~L25_lo & L21_lo, L25_lo ~ ~L21_lo & L22_lo, L21_lo ~ ~L22_lo & L23_lo, L22_lo ~ ~L23_lo & L24_lo
               L21_hi, L22_hi, L23_hi, L24_hi, L25_hi = L23_hi ~ ~L24_hi & L25_hi, L24_hi ~ ~L25_hi & L21_hi, L25_hi ~ ~L21_hi & L22_hi, L21_hi ~ ~L22_hi & L23_hi, L22_hi ~ ~L23_hi & L24_hi
               L01_lo = L01_lo ~ RC_lo[round_idx]
               L01_hi = L01_hi ~ RC_hi[round_idx]
            end
            lanes_lo[1]  = L01_lo;  lanes_hi[1]  = L01_hi
            lanes_lo[2]  = L02_lo;  lanes_hi[2]  = L02_hi
            lanes_lo[3]  = L03_lo;  lanes_hi[3]  = L03_hi
            lanes_lo[4]  = L04_lo;  lanes_hi[4]  = L04_hi
            lanes_lo[5]  = L05_lo;  lanes_hi[5]  = L05_hi
            lanes_lo[6]  = L06_lo;  lanes_hi[6]  = L06_hi
            lanes_lo[7]  = L07_lo;  lanes_hi[7]  = L07_hi
            lanes_lo[8]  = L08_lo;  lanes_hi[8]  = L08_hi
            lanes_lo[9]  = L09_lo;  lanes_hi[9]  = L09_hi
            lanes_lo[10] = L10_lo;  lanes_hi[10] = L10_hi
            lanes_lo[11] = L11_lo;  lanes_hi[11] = L11_hi
            lanes_lo[12] = L12_lo;  lanes_hi[12] = L12_hi
            lanes_lo[13] = L13_lo;  lanes_hi[13] = L13_hi
            lanes_lo[14] = L14_lo;  lanes_hi[14] = L14_hi
            lanes_lo[15] = L15_lo;  lanes_hi[15] = L15_hi
            lanes_lo[16] = L16_lo;  lanes_hi[16] = L16_hi
            lanes_lo[17] = L17_lo;  lanes_hi[17] = L17_hi
            lanes_lo[18] = L18_lo;  lanes_hi[18] = L18_hi
            lanes_lo[19] = L19_lo;  lanes_hi[19] = L19_hi
            lanes_lo[20] = L20_lo;  lanes_hi[20] = L20_hi
            lanes_lo[21] = L21_lo;  lanes_hi[21] = L21_hi
            lanes_lo[22] = L22_lo;  lanes_hi[22] = L22_hi
            lanes_lo[23] = L23_lo;  lanes_hi[23] = L23_hi
            lanes_lo[24] = L24_lo;  lanes_hi[24] = L24_hi
            lanes_lo[25] = L25_lo;  lanes_hi[25] = L25_hi
         end
      end

      local function blake2s_feed_64(H, str, offs, size, bytes_compressed, last_block_size, is_last_node)
         -- offs >= 0, size >= 0, size is multiple of 64
         local W = common_W
         local h1, h2, h3, h4, h5, h6, h7, h8 = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
         for pos = offs + 1, offs + size, 64 do
            if str then
               W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16] =
                  string_unpack("<i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4", str, pos)
            end
            local v0, v1, v2, v3, v4, v5, v6, v7 = h1, h2, h3, h4, h5, h6, h7, h8
            local v8, v9, vA, vB, vC, vD, vE, vF = sha2_H_hi[1], sha2_H_hi[2], sha2_H_hi[3], sha2_H_hi[4], sha2_H_hi[5], sha2_H_hi[6], sha2_H_hi[7], sha2_H_hi[8]
            bytes_compressed = bytes_compressed + (last_block_size or 64)
            local t0 = bytes_compressed % 2^32
            local t1 = (bytes_compressed - t0) / 2^32
            t0 = (t0 + 2^31) % 2^32 - 2^31  -- convert to int32 range (-2^31)..(2^31-1) to avoid "number has no integer representation" error while XORing
            vC = vC ~ t0  -- t0 = low_4_bytes(bytes_compressed)
            vD = vD ~ t1  -- t1 = high_4_bytes(bytes_compressed)
            if last_block_size then  -- flag f0
               vE = ~vE
            end
            if is_last_node then  -- flag f1
               vF = ~vF
            end
            for j = 1, 10 do
               local row = sigma[j]
               v0 = v0 + v4 + W[row[1]]
               vC = vC ~ v0
               vC = vC >> 16 | vC << 16
               v8 = v8 + vC
               v4 = v4 ~ v8
               v4 = v4 >> 12 | v4 << 20
               v0 = v0 + v4 + W[row[2]]
               vC = vC ~ v0
               vC = vC >> 8 | vC << 24
               v8 = v8 + vC
               v4 = v4 ~ v8
               v4 = v4 >> 7 | v4 << 25
               v1 = v1 + v5 + W[row[3]]
               vD = vD ~ v1
               vD = vD >> 16 | vD << 16
               v9 = v9 + vD
               v5 = v5 ~ v9
               v5 = v5 >> 12 | v5 << 20
               v1 = v1 + v5 + W[row[4]]
               vD = vD ~ v1
               vD = vD >> 8 | vD << 24
               v9 = v9 + vD
               v5 = v5 ~ v9
               v5 = v5 >> 7 | v5 << 25
               v2 = v2 + v6 + W[row[5]]
               vE = vE ~ v2
               vE = vE >> 16 | vE << 16
               vA = vA + vE
               v6 = v6 ~ vA
               v6 = v6 >> 12 | v6 << 20
               v2 = v2 + v6 + W[row[6]]
               vE = vE ~ v2
               vE = vE >> 8 | vE << 24
               vA = vA + vE
               v6 = v6 ~ vA
               v6 = v6 >> 7 | v6 << 25
               v3 = v3 + v7 + W[row[7]]
               vF = vF ~ v3
               vF = vF >> 16 | vF << 16
               vB = vB + vF
               v7 = v7 ~ vB
               v7 = v7 >> 12 | v7 << 20
               v3 = v3 + v7 + W[row[8]]
               vF = vF ~ v3
               vF = vF >> 8 | vF << 24
               vB = vB + vF
               v7 = v7 ~ vB
               v7 = v7 >> 7 | v7 << 25
               v0 = v0 + v5 + W[row[9]]
               vF = vF ~ v0
               vF = vF >> 16 | vF << 16
               vA = vA + vF
               v5 = v5 ~ vA
               v5 = v5 >> 12 | v5 << 20
               v0 = v0 + v5 + W[row[10]]
               vF = vF ~ v0
               vF = vF >> 8 | vF << 24
               vA = vA + vF
               v5 = v5 ~ vA
               v5 = v5 >> 7 | v5 << 25
               v1 = v1 + v6 + W[row[11]]
               vC = vC ~ v1
               vC = vC >> 16 | vC << 16
               vB = vB + vC
               v6 = v6 ~ vB
               v6 = v6 >> 12 | v6 << 20
               v1 = v1 + v6 + W[row[12]]
               vC = vC ~ v1
               vC = vC >> 8 | vC << 24
               vB = vB + vC
               v6 = v6 ~ vB
               v6 = v6 >> 7 | v6 << 25
               v2 = v2 + v7 + W[row[13]]
               vD = vD ~ v2
               vD = vD >> 16 | vD << 16
               v8 = v8 + vD
               v7 = v7 ~ v8
               v7 = v7 >> 12 | v7 << 20
               v2 = v2 + v7 + W[row[14]]
               vD = vD ~ v2
               vD = vD >> 8 | vD << 24
               v8 = v8 + vD
               v7 = v7 ~ v8
               v7 = v7 >> 7 | v7 << 25
               v3 = v3 + v4 + W[row[15]]
               vE = vE ~ v3
               vE = vE >> 16 | vE << 16
               v9 = v9 + vE
               v4 = v4 ~ v9
               v4 = v4 >> 12 | v4 << 20
               v3 = v3 + v4 + W[row[16]]
               vE = vE ~ v3
               vE = vE >> 8 | vE << 24
               v9 = v9 + vE
               v4 = v4 ~ v9
               v4 = v4 >> 7 | v4 << 25
            end
            h1 = h1 ~ v0 ~ v8
            h2 = h2 ~ v1 ~ v9
            h3 = h3 ~ v2 ~ vA
            h4 = h4 ~ v3 ~ vB
            h5 = h5 ~ v4 ~ vC
            h6 = h6 ~ v5 ~ vD
            h7 = h7 ~ v6 ~ vE
            h8 = h8 ~ v7 ~ vF
         end
         H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8] = h1, h2, h3, h4, h5, h6, h7, h8
         return bytes_compressed
      end

      local function blake2b_feed_128(H_lo, H_hi, str, offs, size, bytes_compressed, last_block_size, is_last_node)
         -- offs >= 0, size >= 0, size is multiple of 128
         local W = common_W
         local h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo = H_lo[1], H_lo[2], H_lo[3], H_lo[4], H_lo[5], H_lo[6], H_lo[7], H_lo[8]
         local h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi = H_hi[1], H_hi[2], H_hi[3], H_hi[4], H_hi[5], H_hi[6], H_hi[7], H_hi[8]
         for pos = offs + 1, offs + size, 128 do
            if str then
               W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16],
               W[17], W[18], W[19], W[20], W[21], W[22], W[23], W[24], W[25], W[26], W[27], W[28], W[29], W[30], W[31], W[32] =
                  string_unpack("<i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4", str, pos)
            end
            local v0_lo, v1_lo, v2_lo, v3_lo, v4_lo, v5_lo, v6_lo, v7_lo = h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo
            local v0_hi, v1_hi, v2_hi, v3_hi, v4_hi, v5_hi, v6_hi, v7_hi = h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi
            local v8_lo, v9_lo, vA_lo, vB_lo, vC_lo, vD_lo, vE_lo, vF_lo = sha2_H_lo[1], sha2_H_lo[2], sha2_H_lo[3], sha2_H_lo[4], sha2_H_lo[5], sha2_H_lo[6], sha2_H_lo[7], sha2_H_lo[8]
            local v8_hi, v9_hi, vA_hi, vB_hi, vC_hi, vD_hi, vE_hi, vF_hi = sha2_H_hi[1], sha2_H_hi[2], sha2_H_hi[3], sha2_H_hi[4], sha2_H_hi[5], sha2_H_hi[6], sha2_H_hi[7], sha2_H_hi[8]
            bytes_compressed = bytes_compressed + (last_block_size or 128)
            local t0_lo = bytes_compressed % 2^32
            local t0_hi = (bytes_compressed - t0_lo) / 2^32
            t0_lo = (t0_lo + 2^31) % 2^32 - 2^31  -- convert to int32 range (-2^31)..(2^31-1) to avoid "number has no integer representation" error while XORing
            vC_lo = vC_lo ~ t0_lo  -- t0 = low_8_bytes(bytes_compressed)
            vC_hi = vC_hi ~ t0_hi
            -- t1 = high_8_bytes(bytes_compressed) = 0,  message length is always below 2^53 bytes
            if last_block_size then  -- flag f0
               vE_lo = ~vE_lo
               vE_hi = ~vE_hi
            end
            if is_last_node then  -- flag f1
               vF_lo = ~vF_lo
               vF_hi = ~vF_hi
            end
            for j = 1, 12 do
               local row = sigma[j]
               local k = row[1] * 2
               v0_lo = v0_lo % 2^32 + v4_lo % 2^32 + W[k-1] % 2^32
               v0_hi = v0_hi + v4_hi + floor(v0_lo / 2^32) + W[k]
               v0_lo = 0|((v0_lo + 2^31) % 2^32 - 2^31)
               vC_lo, vC_hi = vC_hi ~ v0_hi, vC_lo ~ v0_lo
               v8_lo = v8_lo % 2^32 + vC_lo % 2^32
               v8_hi = v8_hi + vC_hi + floor(v8_lo / 2^32)
               v8_lo = 0|((v8_lo + 2^31) % 2^32 - 2^31)
               v4_lo, v4_hi = v4_lo ~ v8_lo, v4_hi ~ v8_hi
               v4_lo, v4_hi = v4_lo >> 24 | v4_hi << 8, v4_hi >> 24 | v4_lo << 8
               k = row[2] * 2
               v0_lo = v0_lo % 2^32 + v4_lo % 2^32 + W[k-1] % 2^32
               v0_hi = v0_hi + v4_hi + floor(v0_lo / 2^32) + W[k]
               v0_lo = 0|((v0_lo + 2^31) % 2^32 - 2^31)
               vC_lo, vC_hi = vC_lo ~ v0_lo, vC_hi ~ v0_hi
               vC_lo, vC_hi = vC_lo >> 16 | vC_hi << 16, vC_hi >> 16 | vC_lo << 16
               v8_lo = v8_lo % 2^32 + vC_lo % 2^32
               v8_hi = v8_hi + vC_hi + floor(v8_lo / 2^32)
               v8_lo = 0|((v8_lo + 2^31) % 2^32 - 2^31)
               v4_lo, v4_hi = v4_lo ~ v8_lo, v4_hi ~ v8_hi
               v4_lo, v4_hi = v4_lo << 1 | v4_hi >> 31, v4_hi << 1 | v4_lo >> 31
               k = row[3] * 2
               v1_lo = v1_lo % 2^32 + v5_lo % 2^32 + W[k-1] % 2^32
               v1_hi = v1_hi + v5_hi + floor(v1_lo / 2^32) + W[k]
               v1_lo = 0|((v1_lo + 2^31) % 2^32 - 2^31)
               vD_lo, vD_hi = vD_hi ~ v1_hi, vD_lo ~ v1_lo
               v9_lo = v9_lo % 2^32 + vD_lo % 2^32
               v9_hi = v9_hi + vD_hi + floor(v9_lo / 2^32)
               v9_lo = 0|((v9_lo + 2^31) % 2^32 - 2^31)
               v5_lo, v5_hi = v5_lo ~ v9_lo, v5_hi ~ v9_hi
               v5_lo, v5_hi = v5_lo >> 24 | v5_hi << 8, v5_hi >> 24 | v5_lo << 8
               k = row[4] * 2
               v1_lo = v1_lo % 2^32 + v5_lo % 2^32 + W[k-1] % 2^32
               v1_hi = v1_hi + v5_hi + floor(v1_lo / 2^32) + W[k]
               v1_lo = 0|((v1_lo + 2^31) % 2^32 - 2^31)
               vD_lo, vD_hi = vD_lo ~ v1_lo, vD_hi ~ v1_hi
               vD_lo, vD_hi = vD_lo >> 16 | vD_hi << 16, vD_hi >> 16 | vD_lo << 16
               v9_lo = v9_lo % 2^32 + vD_lo % 2^32
               v9_hi = v9_hi + vD_hi + floor(v9_lo / 2^32)
               v9_lo = 0|((v9_lo + 2^31) % 2^32 - 2^31)
               v5_lo, v5_hi = v5_lo ~ v9_lo, v5_hi ~ v9_hi
               v5_lo, v5_hi = v5_lo << 1 | v5_hi >> 31, v5_hi << 1 | v5_lo >> 31
               k = row[5] * 2
               v2_lo = v2_lo % 2^32 + v6_lo % 2^32 + W[k-1] % 2^32
               v2_hi = v2_hi + v6_hi + floor(v2_lo / 2^32) + W[k]
               v2_lo = 0|((v2_lo + 2^31) % 2^32 - 2^31)
               vE_lo, vE_hi = vE_hi ~ v2_hi, vE_lo ~ v2_lo
               vA_lo = vA_lo % 2^32 + vE_lo % 2^32
               vA_hi = vA_hi + vE_hi + floor(vA_lo / 2^32)
               vA_lo = 0|((vA_lo + 2^31) % 2^32 - 2^31)
               v6_lo, v6_hi = v6_lo ~ vA_lo, v6_hi ~ vA_hi
               v6_lo, v6_hi = v6_lo >> 24 | v6_hi << 8, v6_hi >> 24 | v6_lo << 8
               k = row[6] * 2
               v2_lo = v2_lo % 2^32 + v6_lo % 2^32 + W[k-1] % 2^32
               v2_hi = v2_hi + v6_hi + floor(v2_lo / 2^32) + W[k]
               v2_lo = 0|((v2_lo + 2^31) % 2^32 - 2^31)
               vE_lo, vE_hi = vE_lo ~ v2_lo, vE_hi ~ v2_hi
               vE_lo, vE_hi = vE_lo >> 16 | vE_hi << 16, vE_hi >> 16 | vE_lo << 16
               vA_lo = vA_lo % 2^32 + vE_lo % 2^32
               vA_hi = vA_hi + vE_hi + floor(vA_lo / 2^32)
               vA_lo = 0|((vA_lo + 2^31) % 2^32 - 2^31)
               v6_lo, v6_hi = v6_lo ~ vA_lo, v6_hi ~ vA_hi
               v6_lo, v6_hi = v6_lo << 1 | v6_hi >> 31, v6_hi << 1 | v6_lo >> 31
               k = row[7] * 2
               v3_lo = v3_lo % 2^32 + v7_lo % 2^32 + W[k-1] % 2^32
               v3_hi = v3_hi + v7_hi + floor(v3_lo / 2^32) + W[k]
               v3_lo = 0|((v3_lo + 2^31) % 2^32 - 2^31)
               vF_lo, vF_hi = vF_hi ~ v3_hi, vF_lo ~ v3_lo
               vB_lo = vB_lo % 2^32 + vF_lo % 2^32
               vB_hi = vB_hi + vF_hi + floor(vB_lo / 2^32)
               vB_lo = 0|((vB_lo + 2^31) % 2^32 - 2^31)
               v7_lo, v7_hi = v7_lo ~ vB_lo, v7_hi ~ vB_hi
               v7_lo, v7_hi = v7_lo >> 24 | v7_hi << 8, v7_hi >> 24 | v7_lo << 8
               k = row[8] * 2
               v3_lo = v3_lo % 2^32 + v7_lo % 2^32 + W[k-1] % 2^32
               v3_hi = v3_hi + v7_hi + floor(v3_lo / 2^32) + W[k]
               v3_lo = 0|((v3_lo + 2^31) % 2^32 - 2^31)
               vF_lo, vF_hi = vF_lo ~ v3_lo, vF_hi ~ v3_hi
               vF_lo, vF_hi = vF_lo >> 16 | vF_hi << 16, vF_hi >> 16 | vF_lo << 16
               vB_lo = vB_lo % 2^32 + vF_lo % 2^32
               vB_hi = vB_hi + vF_hi + floor(vB_lo / 2^32)
               vB_lo = 0|((vB_lo + 2^31) % 2^32 - 2^31)
               v7_lo, v7_hi = v7_lo ~ vB_lo, v7_hi ~ vB_hi
               v7_lo, v7_hi = v7_lo << 1 | v7_hi >> 31, v7_hi << 1 | v7_lo >> 31
               k = row[9] * 2
               v0_lo = v0_lo % 2^32 + v5_lo % 2^32 + W[k-1] % 2^32
               v0_hi = v0_hi + v5_hi + floor(v0_lo / 2^32) + W[k]
               v0_lo = 0|((v0_lo + 2^31) % 2^32 - 2^31)
               vF_lo, vF_hi = vF_hi ~ v0_hi, vF_lo ~ v0_lo
               vA_lo = vA_lo % 2^32 + vF_lo % 2^32
               vA_hi = vA_hi + vF_hi + floor(vA_lo / 2^32)
               vA_lo = 0|((vA_lo + 2^31) % 2^32 - 2^31)
               v5_lo, v5_hi = v5_lo ~ vA_lo, v5_hi ~ vA_hi
               v5_lo, v5_hi = v5_lo >> 24 | v5_hi << 8, v5_hi >> 24 | v5_lo << 8
               k = row[10] * 2
               v0_lo = v0_lo % 2^32 + v5_lo % 2^32 + W[k-1] % 2^32
               v0_hi = v0_hi + v5_hi + floor(v0_lo / 2^32) + W[k]
               v0_lo = 0|((v0_lo + 2^31) % 2^32 - 2^31)
               vF_lo, vF_hi = vF_lo ~ v0_lo, vF_hi ~ v0_hi
               vF_lo, vF_hi = vF_lo >> 16 | vF_hi << 16, vF_hi >> 16 | vF_lo << 16
               vA_lo = vA_lo % 2^32 + vF_lo % 2^32
               vA_hi = vA_hi + vF_hi + floor(vA_lo / 2^32)
               vA_lo = 0|((vA_lo + 2^31) % 2^32 - 2^31)
               v5_lo, v5_hi = v5_lo ~ vA_lo, v5_hi ~ vA_hi
               v5_lo, v5_hi = v5_lo << 1 | v5_hi >> 31, v5_hi << 1 | v5_lo >> 31
               k = row[11] * 2
               v1_lo = v1_lo % 2^32 + v6_lo % 2^32 + W[k-1] % 2^32
               v1_hi = v1_hi + v6_hi + floor(v1_lo / 2^32) + W[k]
               v1_lo = 0|((v1_lo + 2^31) % 2^32 - 2^31)
               vC_lo, vC_hi = vC_hi ~ v1_hi, vC_lo ~ v1_lo
               vB_lo = vB_lo % 2^32 + vC_lo % 2^32
               vB_hi = vB_hi + vC_hi + floor(vB_lo / 2^32)
               vB_lo = 0|((vB_lo + 2^31) % 2^32 - 2^31)
               v6_lo, v6_hi = v6_lo ~ vB_lo, v6_hi ~ vB_hi
               v6_lo, v6_hi = v6_lo >> 24 | v6_hi << 8, v6_hi >> 24 | v6_lo << 8
               k = row[12] * 2
               v1_lo = v1_lo % 2^32 + v6_lo % 2^32 + W[k-1] % 2^32
               v1_hi = v1_hi + v6_hi + floor(v1_lo / 2^32) + W[k]
               v1_lo = 0|((v1_lo + 2^31) % 2^32 - 2^31)
               vC_lo, vC_hi = vC_lo ~ v1_lo, vC_hi ~ v1_hi
               vC_lo, vC_hi = vC_lo >> 16 | vC_hi << 16, vC_hi >> 16 | vC_lo << 16
               vB_lo = vB_lo % 2^32 + vC_lo % 2^32
               vB_hi = vB_hi + vC_hi + floor(vB_lo / 2^32)
               vB_lo = 0|((vB_lo + 2^31) % 2^32 - 2^31)
               v6_lo, v6_hi = v6_lo ~ vB_lo, v6_hi ~ vB_hi
               v6_lo, v6_hi = v6_lo << 1 | v6_hi >> 31, v6_hi << 1 | v6_lo >> 31
               k = row[13] * 2
               v2_lo = v2_lo % 2^32 + v7_lo % 2^32 + W[k-1] % 2^32
               v2_hi = v2_hi + v7_hi + floor(v2_lo / 2^32) + W[k]
               v2_lo = 0|((v2_lo + 2^31) % 2^32 - 2^31)
               vD_lo, vD_hi = vD_hi ~ v2_hi, vD_lo ~ v2_lo
               v8_lo = v8_lo % 2^32 + vD_lo % 2^32
               v8_hi = v8_hi + vD_hi + floor(v8_lo / 2^32)
               v8_lo = 0|((v8_lo + 2^31) % 2^32 - 2^31)
               v7_lo, v7_hi = v7_lo ~ v8_lo, v7_hi ~ v8_hi
               v7_lo, v7_hi = v7_lo >> 24 | v7_hi << 8, v7_hi >> 24 | v7_lo << 8
               k = row[14] * 2
               v2_lo = v2_lo % 2^32 + v7_lo % 2^32 + W[k-1] % 2^32
               v2_hi = v2_hi + v7_hi + floor(v2_lo / 2^32) + W[k]
               v2_lo = 0|((v2_lo + 2^31) % 2^32 - 2^31)
               vD_lo, vD_hi = vD_lo ~ v2_lo, vD_hi ~ v2_hi
               vD_lo, vD_hi = vD_lo >> 16 | vD_hi << 16, vD_hi >> 16 | vD_lo << 16
               v8_lo = v8_lo % 2^32 + vD_lo % 2^32
               v8_hi = v8_hi + vD_hi + floor(v8_lo / 2^32)
               v8_lo = 0|((v8_lo + 2^31) % 2^32 - 2^31)
               v7_lo, v7_hi = v7_lo ~ v8_lo, v7_hi ~ v8_hi
               v7_lo, v7_hi = v7_lo << 1 | v7_hi >> 31, v7_hi << 1 | v7_lo >> 31
               k = row[15] * 2
               v3_lo = v3_lo % 2^32 + v4_lo % 2^32 + W[k-1] % 2^32
               v3_hi = v3_hi + v4_hi + floor(v3_lo / 2^32) + W[k]
               v3_lo = 0|((v3_lo + 2^31) % 2^32 - 2^31)
               vE_lo, vE_hi = vE_hi ~ v3_hi, vE_lo ~ v3_lo
               v9_lo = v9_lo % 2^32 + vE_lo % 2^32
               v9_hi = v9_hi + vE_hi + floor(v9_lo / 2^32)
               v9_lo = 0|((v9_lo + 2^31) % 2^32 - 2^31)
               v4_lo, v4_hi = v4_lo ~ v9_lo, v4_hi ~ v9_hi
               v4_lo, v4_hi = v4_lo >> 24 | v4_hi << 8, v4_hi >> 24 | v4_lo << 8
               k = row[16] * 2
               v3_lo = v3_lo % 2^32 + v4_lo % 2^32 + W[k-1] % 2^32
               v3_hi = v3_hi + v4_hi + floor(v3_lo / 2^32) + W[k]
               v3_lo = 0|((v3_lo + 2^31) % 2^32 - 2^31)
               vE_lo, vE_hi = vE_lo ~ v3_lo, vE_hi ~ v3_hi
               vE_lo, vE_hi = vE_lo >> 16 | vE_hi << 16, vE_hi >> 16 | vE_lo << 16
               v9_lo = v9_lo % 2^32 + vE_lo % 2^32
               v9_hi = v9_hi + vE_hi + floor(v9_lo / 2^32)
               v9_lo = 0|((v9_lo + 2^31) % 2^32 - 2^31)
               v4_lo, v4_hi = v4_lo ~ v9_lo, v4_hi ~ v9_hi
               v4_lo, v4_hi = v4_lo << 1 | v4_hi >> 31, v4_hi << 1 | v4_lo >> 31
            end
            h1_lo = h1_lo ~ v0_lo ~ v8_lo
            h2_lo = h2_lo ~ v1_lo ~ v9_lo
            h3_lo = h3_lo ~ v2_lo ~ vA_lo
            h4_lo = h4_lo ~ v3_lo ~ vB_lo
            h5_lo = h5_lo ~ v4_lo ~ vC_lo
            h6_lo = h6_lo ~ v5_lo ~ vD_lo
            h7_lo = h7_lo ~ v6_lo ~ vE_lo
            h8_lo = h8_lo ~ v7_lo ~ vF_lo
            h1_hi = h1_hi ~ v0_hi ~ v8_hi
            h2_hi = h2_hi ~ v1_hi ~ v9_hi
            h3_hi = h3_hi ~ v2_hi ~ vA_hi
            h4_hi = h4_hi ~ v3_hi ~ vB_hi
            h5_hi = h5_hi ~ v4_hi ~ vC_hi
            h6_hi = h6_hi ~ v5_hi ~ vD_hi
            h7_hi = h7_hi ~ v6_hi ~ vE_hi
            h8_hi = h8_hi ~ v7_hi ~ vF_hi
         end
         H_lo[1], H_lo[2], H_lo[3], H_lo[4], H_lo[5], H_lo[6], H_lo[7], H_lo[8] = h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo
         H_hi[1], H_hi[2], H_hi[3], H_hi[4], H_hi[5], H_hi[6], H_hi[7], H_hi[8] = h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi
         return bytes_compressed
      end

      local function blake3_feed_64(str, offs, size, flags, chunk_index, H_in, H_out, wide_output, block_length)
         -- offs >= 0, size >= 0, size is multiple of 64
         block_length = block_length or 64
         local W = common_W
         local h1, h2, h3, h4, h5, h6, h7, h8 = H_in[1], H_in[2], H_in[3], H_in[4], H_in[5], H_in[6], H_in[7], H_in[8]
         H_out = H_out or H_in
         for pos = offs + 1, offs + size, 64 do
            if str then
               W[1], W[2], W[3], W[4], W[5], W[6], W[7], W[8], W[9], W[10], W[11], W[12], W[13], W[14], W[15], W[16] =
                  string_unpack("<i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4i4", str, pos)
            end
            local v0, v1, v2, v3, v4, v5, v6, v7 = h1, h2, h3, h4, h5, h6, h7, h8
            local v8, v9, vA, vB = sha2_H_hi[1], sha2_H_hi[2], sha2_H_hi[3], sha2_H_hi[4]
            local t0 = chunk_index % 2^32         -- t0 = low_4_bytes(chunk_index)
            local t1 = (chunk_index - t0) / 2^32  -- t1 = high_4_bytes(chunk_index)
            t0 = (t0 + 2^31) % 2^32 - 2^31  -- convert to int32 range (-2^31)..(2^31-1) to avoid "number has no integer representation" error while ORing
            local vC, vD, vE, vF = 0|t0, 0|t1, block_length, flags
            for j = 1, 7 do
               v0 = v0 + v4 + W[perm_blake3[j]]
               vC = vC ~ v0
               vC = vC >> 16 | vC << 16
               v8 = v8 + vC
               v4 = v4 ~ v8
               v4 = v4 >> 12 | v4 << 20
               v0 = v0 + v4 + W[perm_blake3[j + 14]]
               vC = vC ~ v0
               vC = vC >> 8 | vC << 24
               v8 = v8 + vC
               v4 = v4 ~ v8
               v4 = v4 >> 7 | v4 << 25
               v1 = v1 + v5 + W[perm_blake3[j + 1]]
               vD = vD ~ v1
               vD = vD >> 16 | vD << 16
               v9 = v9 + vD
               v5 = v5 ~ v9
               v5 = v5 >> 12 | v5 << 20
               v1 = v1 + v5 + W[perm_blake3[j + 2]]
               vD = vD ~ v1
               vD = vD >> 8 | vD << 24
               v9 = v9 + vD
               v5 = v5 ~ v9
               v5 = v5 >> 7 | v5 << 25
               v2 = v2 + v6 + W[perm_blake3[j + 16]]
               vE = vE ~ v2
               vE = vE >> 16 | vE << 16
               vA = vA + vE
               v6 = v6 ~ vA
               v6 = v6 >> 12 | v6 << 20
               v2 = v2 + v6 + W[perm_blake3[j + 7]]
               vE = vE ~ v2
               vE = vE >> 8 | vE << 24
               vA = vA + vE
               v6 = v6 ~ vA
               v6 = v6 >> 7 | v6 << 25
               v3 = v3 + v7 + W[perm_blake3[j + 15]]
               vF = vF ~ v3
               vF = vF >> 16 | vF << 16
               vB = vB + vF
               v7 = v7 ~ vB
               v7 = v7 >> 12 | v7 << 20
               v3 = v3 + v7 + W[perm_blake3[j + 17]]
               vF = vF ~ v3
               vF = vF >> 8 | vF << 24
               vB = vB + vF
               v7 = v7 ~ vB
               v7 = v7 >> 7 | v7 << 25
               v0 = v0 + v5 + W[perm_blake3[j + 21]]
               vF = vF ~ v0
               vF = vF >> 16 | vF << 16
               vA = vA + vF
               v5 = v5 ~ vA
               v5 = v5 >> 12 | v5 << 20
               v0 = v0 + v5 + W[perm_blake3[j + 5]]
               vF = vF ~ v0
               vF = vF >> 8 | vF << 24
               vA = vA + vF
               v5 = v5 ~ vA
               v5 = v5 >> 7 | v5 << 25
               v1 = v1 + v6 + W[perm_blake3[j + 3]]
               vC = vC ~ v1
               vC = vC >> 16 | vC << 16
               vB = vB + vC
               v6 = v6 ~ vB
               v6 = v6 >> 12 | v6 << 20
               v1 = v1 + v6 + W[perm_blake3[j + 6]]
               vC = vC ~ v1
               vC = vC >> 8 | vC << 24
               vB = vB + vC
               v6 = v6 ~ vB
               v6 = v6 >> 7 | v6 << 25
               v2 = v2 + v7 + W[perm_blake3[j + 4]]
               vD = vD ~ v2
               vD = vD >> 16 | vD << 16
               v8 = v8 + vD
               v7 = v7 ~ v8
               v7 = v7 >> 12 | v7 << 20
               v2 = v2 + v7 + W[perm_blake3[j + 18]]
               vD = vD ~ v2
               vD = vD >> 8 | vD << 24
               v8 = v8 + vD
               v7 = v7 ~ v8
               v7 = v7 >> 7 | v7 << 25
               v3 = v3 + v4 + W[perm_blake3[j + 19]]
               vE = vE ~ v3
               vE = vE >> 16 | vE << 16
               v9 = v9 + vE
               v4 = v4 ~ v9
               v4 = v4 >> 12 | v4 << 20
               v3 = v3 + v4 + W[perm_blake3[j + 20]]
               vE = vE ~ v3
               vE = vE >> 8 | vE << 24
               v9 = v9 + vE
               v4 = v4 ~ v9
               v4 = v4 >> 7 | v4 << 25
            end
            if wide_output then
               H_out[ 9] = h1 ~ v8
               H_out[10] = h2 ~ v9
               H_out[11] = h3 ~ vA
               H_out[12] = h4 ~ vB
               H_out[13] = h5 ~ vC
               H_out[14] = h6 ~ vD
               H_out[15] = h7 ~ vE
               H_out[16] = h8 ~ vF
            end
            h1 = v0 ~ v8
            h2 = v1 ~ v9
            h3 = v2 ~ vA
            h4 = v3 ~ vB
            h5 = v4 ~ vC
            h6 = v5 ~ vD
            h7 = v6 ~ vE
            h8 = v7 ~ vF
         end
         H_out[1], H_out[2], H_out[3], H_out[4], H_out[5], H_out[6], H_out[7], H_out[8] = h1, h2, h3, h4, h5, h6, h7, h8
      end

      return XORA5, XOR_BYTE, sha256_feed_64, sha512_feed_128, md5_feed_64, sha1_feed_64, keccak_feed, blake2s_feed_64, blake2b_feed_128, blake3_feed_64
   ]=](md5_next_shift, md5_K, sha2_K_lo, sha2_K_hi, build_keccak_format, sha3_RC_lo, sha3_RC_hi, sigma, common_W, sha2_H_lo, sha2_H_hi, perm_blake3)

end

XOR = XOR or XORA5

if branch == "LIB32" or branch == "EMUL" then


	-- implementation for Lua 5.1/5.2 (with or without bitwise library available)

	function sha256_feed_64(H, str, offs, size)
		-- offs >= 0, size >= 0, size is multiple of 64
		local W, K = common_W, sha2_K_hi
		local h1, h2, h3, h4, h5, h6, h7, h8 = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
		for pos = offs, offs + size - 1, 64 do
			for j = 1, 16 do
				pos = pos + 4
				local a, b, c, d = byte(str, pos - 3, pos)
				W[j] = ((a * 256 + b) * 256 + c) * 256 + d
			end
			for j = 17, 64 do
				local a, b = W[j-15], W[j-2]
				local a7, a18, b17, b19 = a / 2^7, a / 2^18, b / 2^17, b / 2^19
				W[j] = (XOR(a7 % 1 * (2^32 - 1) + a7, a18 % 1 * (2^32 - 1) + a18, (a - a % 2^3) / 2^3) + W[j-16] + W[j-7]
					+ XOR(b17 % 1 * (2^32 - 1) + b17, b19 % 1 * (2^32 - 1) + b19, (b - b % 2^10) / 2^10)) % 2^32
			end
			local a, b, c, d, e, f, g, h = h1, h2, h3, h4, h5, h6, h7, h8
			for j = 1, 64 do
				e = e % 2^32
				local e6, e11, e7 = e / 2^6, e / 2^11, e * 2^7
				local e7_lo = e7 % 2^32
				local z = AND(e, f) + AND(-1-e, g) + h + K[j] + W[j]
					+ XOR(e6 % 1 * (2^32 - 1) + e6, e11 % 1 * (2^32 - 1) + e11, e7_lo + (e7 - e7_lo) / 2^32)
				h = g
				g = f
				f = e
				e = z + d
				d = c
				c = b
				b = a % 2^32
				local b2, b13, b10 = b / 2^2, b / 2^13, b * 2^10
				local b10_lo = b10 % 2^32
				a = z + AND(d, c) + AND(b, XOR(d, c)) +
					XOR(b2 % 1 * (2^32 - 1) + b2, b13 % 1 * (2^32 - 1) + b13, b10_lo + (b10 - b10_lo) / 2^32)
			end
			h1, h2, h3, h4 = (a + h1) % 2^32, (b + h2) % 2^32, (c + h3) % 2^32, (d + h4) % 2^32
			h5, h6, h7, h8 = (e + h5) % 2^32, (f + h6) % 2^32, (g + h7) % 2^32, (h + h8) % 2^32
		end
		H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8] = h1, h2, h3, h4, h5, h6, h7, h8
	end


	function sha512_feed_128(H_lo, H_hi, str, offs, size)
		-- offs >= 0, size >= 0, size is multiple of 128
		-- W1_hi, W1_lo, W2_hi, W2_lo, ...   Wk_hi = W[2*k-1], Wk_lo = W[2*k]
		local W, K_lo, K_hi = common_W, sha2_K_lo, sha2_K_hi
		local h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo = H_lo[1], H_lo[2], H_lo[3], H_lo[4], H_lo[5], H_lo[6], H_lo[7], H_lo[8]
		local h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi = H_hi[1], H_hi[2], H_hi[3], H_hi[4], H_hi[5], H_hi[6], H_hi[7], H_hi[8]
		for pos = offs, offs + size - 1, 128 do
			for j = 1, 16*2 do
				pos = pos + 4
				local a, b, c, d = byte(str, pos - 3, pos)
				W[j] = ((a * 256 + b) * 256 + c) * 256 + d
			end
			for jj = 17*2, 80*2, 2 do
				local a_hi, a_lo, b_hi, b_lo = W[jj-31], W[jj-30], W[jj-5], W[jj-4]
				local b_hi_6, b_hi_19, b_hi_29, b_lo_19, b_lo_29, a_hi_1, a_hi_7, a_hi_8, a_lo_1, a_lo_8 =
					b_hi % 2^6, b_hi % 2^19, b_hi % 2^29, b_lo % 2^19, b_lo % 2^29, a_hi % 2^1, a_hi % 2^7, a_hi % 2^8, a_lo % 2^1, a_lo % 2^8
				local tmp1 = XOR((a_lo - a_lo_1) / 2^1 + a_hi_1 * 2^31, (a_lo - a_lo_8) / 2^8 + a_hi_8 * 2^24, (a_lo - a_lo % 2^7) / 2^7 + a_hi_7 * 2^25) % 2^32
					+ XOR((b_lo - b_lo_19) / 2^19 + b_hi_19 * 2^13, b_lo_29 * 2^3 + (b_hi - b_hi_29) / 2^29, (b_lo - b_lo % 2^6) / 2^6 + b_hi_6 * 2^26) % 2^32
					+ W[jj-14] + W[jj-32]
				local tmp2 = tmp1 % 2^32
				W[jj-1] = (XOR((a_hi - a_hi_1) / 2^1 + a_lo_1 * 2^31, (a_hi - a_hi_8) / 2^8 + a_lo_8 * 2^24, (a_hi - a_hi_7) / 2^7)
					+ XOR((b_hi - b_hi_19) / 2^19 + b_lo_19 * 2^13, b_hi_29 * 2^3 + (b_lo - b_lo_29) / 2^29, (b_hi - b_hi_6) / 2^6)
					+ W[jj-15] + W[jj-33] + (tmp1 - tmp2) / 2^32) % 2^32
				W[jj] = tmp2
			end
			local a_lo, b_lo, c_lo, d_lo, e_lo, f_lo, g_lo, h_lo = h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo
			local a_hi, b_hi, c_hi, d_hi, e_hi, f_hi, g_hi, h_hi = h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi
			for j = 1, 80 do
				local jj = 2*j
				local e_lo_9, e_lo_14, e_lo_18, e_hi_9, e_hi_14, e_hi_18 = e_lo % 2^9, e_lo % 2^14, e_lo % 2^18, e_hi % 2^9, e_hi % 2^14, e_hi % 2^18
				local tmp1 = (AND(e_lo, f_lo) + AND(-1-e_lo, g_lo)) % 2^32 + h_lo + K_lo[j] + W[jj]
					+ XOR((e_lo - e_lo_14) / 2^14 + e_hi_14 * 2^18, (e_lo - e_lo_18) / 2^18 + e_hi_18 * 2^14, e_lo_9 * 2^23 + (e_hi - e_hi_9) / 2^9) % 2^32
				local z_lo = tmp1 % 2^32
				local z_hi = AND(e_hi, f_hi) + AND(-1-e_hi, g_hi) + h_hi + K_hi[j] + W[jj-1] + (tmp1 - z_lo) / 2^32
					+ XOR((e_hi - e_hi_14) / 2^14 + e_lo_14 * 2^18, (e_hi - e_hi_18) / 2^18 + e_lo_18 * 2^14, e_hi_9 * 2^23 + (e_lo - e_lo_9) / 2^9)
				h_lo = g_lo;  h_hi = g_hi
				g_lo = f_lo;  g_hi = f_hi
				f_lo = e_lo;  f_hi = e_hi
				tmp1 = z_lo + d_lo
				e_lo = tmp1 % 2^32
				e_hi = (z_hi + d_hi + (tmp1 - e_lo) / 2^32) % 2^32
				d_lo = c_lo;  d_hi = c_hi
				c_lo = b_lo;  c_hi = b_hi
				b_lo = a_lo;  b_hi = a_hi
				local b_lo_2, b_lo_7, b_lo_28, b_hi_2, b_hi_7, b_hi_28 = b_lo % 2^2, b_lo % 2^7, b_lo % 2^28, b_hi % 2^2, b_hi % 2^7, b_hi % 2^28
				tmp1 = z_lo + (AND(d_lo, c_lo) + AND(b_lo, XOR(d_lo, c_lo))) % 2^32
					+ XOR((b_lo - b_lo_28) / 2^28 + b_hi_28 * 2^4, b_lo_2 * 2^30 + (b_hi - b_hi_2) / 2^2, b_lo_7 * 2^25 + (b_hi - b_hi_7) / 2^7) % 2^32
				a_lo = tmp1 % 2^32
				a_hi = (z_hi + AND(d_hi, c_hi) + AND(b_hi, XOR(d_hi, c_hi)) + (tmp1 - a_lo) / 2^32
					+ XOR((b_hi - b_hi_28) / 2^28 + b_lo_28 * 2^4, b_hi_2 * 2^30 + (b_lo - b_lo_2) / 2^2, b_hi_7 * 2^25 + (b_lo - b_lo_7) / 2^7)) % 2^32
			end
			a_lo = h1_lo + a_lo
			h1_lo = a_lo % 2^32
			h1_hi = (h1_hi + a_hi + (a_lo - h1_lo) / 2^32) % 2^32
			a_lo = h2_lo + b_lo
			h2_lo = a_lo % 2^32
			h2_hi = (h2_hi + b_hi + (a_lo - h2_lo) / 2^32) % 2^32
			a_lo = h3_lo + c_lo
			h3_lo = a_lo % 2^32
			h3_hi = (h3_hi + c_hi + (a_lo - h3_lo) / 2^32) % 2^32
			a_lo = h4_lo + d_lo
			h4_lo = a_lo % 2^32
			h4_hi = (h4_hi + d_hi + (a_lo - h4_lo) / 2^32) % 2^32
			a_lo = h5_lo + e_lo
			h5_lo = a_lo % 2^32
			h5_hi = (h5_hi + e_hi + (a_lo - h5_lo) / 2^32) % 2^32
			a_lo = h6_lo + f_lo
			h6_lo = a_lo % 2^32
			h6_hi = (h6_hi + f_hi + (a_lo - h6_lo) / 2^32) % 2^32
			a_lo = h7_lo + g_lo
			h7_lo = a_lo % 2^32
			h7_hi = (h7_hi + g_hi + (a_lo - h7_lo) / 2^32) % 2^32
			a_lo = h8_lo + h_lo
			h8_lo = a_lo % 2^32
			h8_hi = (h8_hi + h_hi + (a_lo - h8_lo) / 2^32) % 2^32
		end
		H_lo[1], H_lo[2], H_lo[3], H_lo[4], H_lo[5], H_lo[6], H_lo[7], H_lo[8] = h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo
		H_hi[1], H_hi[2], H_hi[3], H_hi[4], H_hi[5], H_hi[6], H_hi[7], H_hi[8] = h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi
	end


	if branch == "LIB32" then

		function md5_feed_64(H, str, offs, size)
			-- offs >= 0, size >= 0, size is multiple of 64
			local W, K, md5_next_shift = common_W, md5_K, md5_next_shift
			local h1, h2, h3, h4 = H[1], H[2], H[3], H[4]
			for pos = offs, offs + size - 1, 64 do
				for j = 1, 16 do
					pos = pos + 4
					local a, b, c, d = byte(str, pos - 3, pos)
					W[j] = ((d * 256 + c) * 256 + b) * 256 + a
				end
				local a, b, c, d = h1, h2, h3, h4
				local s = 25
				for j = 1, 16 do
					local F = ROR(AND(b, c) + AND(-1-b, d) + a + K[j] + W[j], s) + b
					s = md5_next_shift[s]
					a = d
					d = c
					c = b
					b = F
				end
				s = 27
				for j = 17, 32 do
					local F = ROR(AND(d, b) + AND(-1-d, c) + a + K[j] + W[(5*j-4) % 16 + 1], s) + b
					s = md5_next_shift[s]
					a = d
					d = c
					c = b
					b = F
				end
				s = 28
				for j = 33, 48 do
					local F = ROR(XOR(XOR(b, c), d) + a + K[j] + W[(3*j+2) % 16 + 1], s) + b
					s = md5_next_shift[s]
					a = d
					d = c
					c = b
					b = F
				end
				s = 26
				for j = 49, 64 do
					local F = ROR(XOR(c, OR(b, -1-d)) + a + K[j] + W[(j*7-7) % 16 + 1], s) + b
					s = md5_next_shift[s]
					a = d
					d = c
					c = b
					b = F
				end
				h1 = (a + h1) % 2^32
				h2 = (b + h2) % 2^32
				h3 = (c + h3) % 2^32
				h4 = (d + h4) % 2^32
			end
			H[1], H[2], H[3], H[4] = h1, h2, h3, h4
		end

	elseif branch == "EMUL" then

		function md5_feed_64(H, str, offs, size)
			-- offs >= 0, size >= 0, size is multiple of 64
			local W, K, md5_next_shift = common_W, md5_K, md5_next_shift
			local h1, h2, h3, h4 = H[1], H[2], H[3], H[4]
			for pos = offs, offs + size - 1, 64 do
				for j = 1, 16 do
					pos = pos + 4
					local a, b, c, d = byte(str, pos - 3, pos)
					W[j] = ((d * 256 + c) * 256 + b) * 256 + a
				end
				local a, b, c, d = h1, h2, h3, h4
				local s = 25
				for j = 1, 16 do
					local z = (AND(b, c) + AND(-1-b, d) + a + K[j] + W[j]) % 2^32 / 2^s
					local y = z % 1
					s = md5_next_shift[s]
					a = d
					d = c
					c = b
					b = y * 2^32 + (z - y) + b
				end
				s = 27
				for j = 17, 32 do
					local z = (AND(d, b) + AND(-1-d, c) + a + K[j] + W[(5*j-4) % 16 + 1]) % 2^32 / 2^s
					local y = z % 1
					s = md5_next_shift[s]
					a = d
					d = c
					c = b
					b = y * 2^32 + (z - y) + b
				end
				s = 28
				for j = 33, 48 do
					local z = (XOR(XOR(b, c), d) + a + K[j] + W[(3*j+2) % 16 + 1]) % 2^32 / 2^s
					local y = z % 1
					s = md5_next_shift[s]
					a = d
					d = c
					c = b
					b = y * 2^32 + (z - y) + b
				end
				s = 26
				for j = 49, 64 do
					local z = (XOR(c, OR(b, -1-d)) + a + K[j] + W[(j*7-7) % 16 + 1]) % 2^32 / 2^s
					local y = z % 1
					s = md5_next_shift[s]
					a = d
					d = c
					c = b
					b = y * 2^32 + (z - y) + b
				end
				h1 = (a + h1) % 2^32
				h2 = (b + h2) % 2^32
				h3 = (c + h3) % 2^32
				h4 = (d + h4) % 2^32
			end
			H[1], H[2], H[3], H[4] = h1, h2, h3, h4
		end

	end


	function sha1_feed_64(H, str, offs, size)
		-- offs >= 0, size >= 0, size is multiple of 64
		local W = common_W
		local h1, h2, h3, h4, h5 = H[1], H[2], H[3], H[4], H[5]
		for pos = offs, offs + size - 1, 64 do
			for j = 1, 16 do
				pos = pos + 4
				local a, b, c, d = byte(str, pos - 3, pos)
				W[j] = ((a * 256 + b) * 256 + c) * 256 + d
			end
			for j = 17, 80 do
				local a = XOR(W[j-3], W[j-8], W[j-14], W[j-16]) % 2^32 * 2
				local b = a % 2^32
				W[j] = b + (a - b) / 2^32
			end
			local a, b, c, d, e = h1, h2, h3, h4, h5
			for j = 1, 20 do
				local a5 = a * 2^5
				local z = a5 % 2^32
				z = z + (a5 - z) / 2^32 + AND(b, c) + AND(-1-b, d) + 0x5A827999 + W[j] + e        -- constant = floor(2^30 * sqrt(2))
				e = d
				d = c
				c = b / 2^2
				c = c % 1 * (2^32 - 1) + c
				b = a
				a = z % 2^32
			end
			for j = 21, 40 do
				local a5 = a * 2^5
				local z = a5 % 2^32
				z = z + (a5 - z) / 2^32 + XOR(b, c, d) + 0x6ED9EBA1 + W[j] + e                    -- 2^30 * sqrt(3)
				e = d
				d = c
				c = b / 2^2
				c = c % 1 * (2^32 - 1) + c
				b = a
				a = z % 2^32
			end
			for j = 41, 60 do
				local a5 = a * 2^5
				local z = a5 % 2^32
				z = z + (a5 - z) / 2^32 + AND(d, c) + AND(b, XOR(d, c)) + 0x8F1BBCDC + W[j] + e   -- 2^30 * sqrt(5)
				e = d
				d = c
				c = b / 2^2
				c = c % 1 * (2^32 - 1) + c
				b = a
				a = z % 2^32
			end
			for j = 61, 80 do
				local a5 = a * 2^5
				local z = a5 % 2^32
				z = z + (a5 - z) / 2^32 + XOR(b, c, d) + 0xCA62C1D6 + W[j] + e                    -- 2^30 * sqrt(10)
				e = d
				d = c
				c = b / 2^2
				c = c % 1 * (2^32 - 1) + c
				b = a
				a = z % 2^32
			end
			h1 = (a + h1) % 2^32
			h2 = (b + h2) % 2^32
			h3 = (c + h3) % 2^32
			h4 = (d + h4) % 2^32
			h5 = (e + h5) % 2^32
		end
		H[1], H[2], H[3], H[4], H[5] = h1, h2, h3, h4, h5
	end


	function keccak_feed(lanes_lo, lanes_hi, str, offs, size, block_size_in_bytes)
		-- This is an example of a Lua function having 79 local variables :-)
		-- offs >= 0, size >= 0, size is multiple of block_size_in_bytes, block_size_in_bytes is positive multiple of 8
		local RC_lo, RC_hi = sha3_RC_lo, sha3_RC_hi
		local qwords_qty = block_size_in_bytes / 8
		for pos = offs, offs + size - 1, block_size_in_bytes do
			for j = 1, qwords_qty do
				local a, b, c, d = byte(str, pos + 1, pos + 4)
				lanes_lo[j] = XOR(lanes_lo[j], ((d * 256 + c) * 256 + b) * 256 + a)
				pos = pos + 8
				a, b, c, d = byte(str, pos - 3, pos)
				lanes_hi[j] = XOR(lanes_hi[j], ((d * 256 + c) * 256 + b) * 256 + a)
			end
			local L01_lo, L01_hi, L02_lo, L02_hi, L03_lo, L03_hi, L04_lo, L04_hi, L05_lo, L05_hi, L06_lo, L06_hi, L07_lo, L07_hi, L08_lo, L08_hi,
			L09_lo, L09_hi, L10_lo, L10_hi, L11_lo, L11_hi, L12_lo, L12_hi, L13_lo, L13_hi, L14_lo, L14_hi, L15_lo, L15_hi, L16_lo, L16_hi,
			L17_lo, L17_hi, L18_lo, L18_hi, L19_lo, L19_hi, L20_lo, L20_hi, L21_lo, L21_hi, L22_lo, L22_hi, L23_lo, L23_hi, L24_lo, L24_hi, L25_lo, L25_hi =
				lanes_lo[1], lanes_hi[1], lanes_lo[2], lanes_hi[2], lanes_lo[3], lanes_hi[3], lanes_lo[4], lanes_hi[4], lanes_lo[5], lanes_hi[5],
			lanes_lo[6], lanes_hi[6], lanes_lo[7], lanes_hi[7], lanes_lo[8], lanes_hi[8], lanes_lo[9], lanes_hi[9], lanes_lo[10], lanes_hi[10],
			lanes_lo[11], lanes_hi[11], lanes_lo[12], lanes_hi[12], lanes_lo[13], lanes_hi[13], lanes_lo[14], lanes_hi[14], lanes_lo[15], lanes_hi[15],
			lanes_lo[16], lanes_hi[16], lanes_lo[17], lanes_hi[17], lanes_lo[18], lanes_hi[18], lanes_lo[19], lanes_hi[19], lanes_lo[20], lanes_hi[20],
			lanes_lo[21], lanes_hi[21], lanes_lo[22], lanes_hi[22], lanes_lo[23], lanes_hi[23], lanes_lo[24], lanes_hi[24], lanes_lo[25], lanes_hi[25]
			for round_idx = 1, 24 do
				local C1_lo = XOR(L01_lo, L06_lo, L11_lo, L16_lo, L21_lo)
				local C1_hi = XOR(L01_hi, L06_hi, L11_hi, L16_hi, L21_hi)
				local C2_lo = XOR(L02_lo, L07_lo, L12_lo, L17_lo, L22_lo)
				local C2_hi = XOR(L02_hi, L07_hi, L12_hi, L17_hi, L22_hi)
				local C3_lo = XOR(L03_lo, L08_lo, L13_lo, L18_lo, L23_lo)
				local C3_hi = XOR(L03_hi, L08_hi, L13_hi, L18_hi, L23_hi)
				local C4_lo = XOR(L04_lo, L09_lo, L14_lo, L19_lo, L24_lo)
				local C4_hi = XOR(L04_hi, L09_hi, L14_hi, L19_hi, L24_hi)
				local C5_lo = XOR(L05_lo, L10_lo, L15_lo, L20_lo, L25_lo)
				local C5_hi = XOR(L05_hi, L10_hi, L15_hi, L20_hi, L25_hi)
				local D_lo = XOR(C1_lo, C3_lo * 2 + (C3_hi % 2^32 - C3_hi % 2^31) / 2^31)
				local D_hi = XOR(C1_hi, C3_hi * 2 + (C3_lo % 2^32 - C3_lo % 2^31) / 2^31)
				local T0_lo = XOR(D_lo, L02_lo)
				local T0_hi = XOR(D_hi, L02_hi)
				local T1_lo = XOR(D_lo, L07_lo)
				local T1_hi = XOR(D_hi, L07_hi)
				local T2_lo = XOR(D_lo, L12_lo)
				local T2_hi = XOR(D_hi, L12_hi)
				local T3_lo = XOR(D_lo, L17_lo)
				local T3_hi = XOR(D_hi, L17_hi)
				local T4_lo = XOR(D_lo, L22_lo)
				local T4_hi = XOR(D_hi, L22_hi)
				L02_lo = (T1_lo % 2^32 - T1_lo % 2^20) / 2^20 + T1_hi * 2^12
				L02_hi = (T1_hi % 2^32 - T1_hi % 2^20) / 2^20 + T1_lo * 2^12
				L07_lo = (T3_lo % 2^32 - T3_lo % 2^19) / 2^19 + T3_hi * 2^13
				L07_hi = (T3_hi % 2^32 - T3_hi % 2^19) / 2^19 + T3_lo * 2^13
				L12_lo = T0_lo * 2 + (T0_hi % 2^32 - T0_hi % 2^31) / 2^31
				L12_hi = T0_hi * 2 + (T0_lo % 2^32 - T0_lo % 2^31) / 2^31
				L17_lo = T2_lo * 2^10 + (T2_hi % 2^32 - T2_hi % 2^22) / 2^22
				L17_hi = T2_hi * 2^10 + (T2_lo % 2^32 - T2_lo % 2^22) / 2^22
				L22_lo = T4_lo * 2^2 + (T4_hi % 2^32 - T4_hi % 2^30) / 2^30
				L22_hi = T4_hi * 2^2 + (T4_lo % 2^32 - T4_lo % 2^30) / 2^30
				D_lo = XOR(C2_lo, C4_lo * 2 + (C4_hi % 2^32 - C4_hi % 2^31) / 2^31)
				D_hi = XOR(C2_hi, C4_hi * 2 + (C4_lo % 2^32 - C4_lo % 2^31) / 2^31)
				T0_lo = XOR(D_lo, L03_lo)
				T0_hi = XOR(D_hi, L03_hi)
				T1_lo = XOR(D_lo, L08_lo)
				T1_hi = XOR(D_hi, L08_hi)
				T2_lo = XOR(D_lo, L13_lo)
				T2_hi = XOR(D_hi, L13_hi)
				T3_lo = XOR(D_lo, L18_lo)
				T3_hi = XOR(D_hi, L18_hi)
				T4_lo = XOR(D_lo, L23_lo)
				T4_hi = XOR(D_hi, L23_hi)
				L03_lo = (T2_lo % 2^32 - T2_lo % 2^21) / 2^21 + T2_hi * 2^11
				L03_hi = (T2_hi % 2^32 - T2_hi % 2^21) / 2^21 + T2_lo * 2^11
				L08_lo = (T4_lo % 2^32 - T4_lo % 2^3) / 2^3 + T4_hi * 2^29 % 2^32
				L08_hi = (T4_hi % 2^32 - T4_hi % 2^3) / 2^3 + T4_lo * 2^29 % 2^32
				L13_lo = T1_lo * 2^6 + (T1_hi % 2^32 - T1_hi % 2^26) / 2^26
				L13_hi = T1_hi * 2^6 + (T1_lo % 2^32 - T1_lo % 2^26) / 2^26
				L18_lo = T3_lo * 2^15 + (T3_hi % 2^32 - T3_hi % 2^17) / 2^17
				L18_hi = T3_hi * 2^15 + (T3_lo % 2^32 - T3_lo % 2^17) / 2^17
				L23_lo = (T0_lo % 2^32 - T0_lo % 2^2) / 2^2 + T0_hi * 2^30 % 2^32
				L23_hi = (T0_hi % 2^32 - T0_hi % 2^2) / 2^2 + T0_lo * 2^30 % 2^32
				D_lo = XOR(C3_lo, C5_lo * 2 + (C5_hi % 2^32 - C5_hi % 2^31) / 2^31)
				D_hi = XOR(C3_hi, C5_hi * 2 + (C5_lo % 2^32 - C5_lo % 2^31) / 2^31)
				T0_lo = XOR(D_lo, L04_lo)
				T0_hi = XOR(D_hi, L04_hi)
				T1_lo = XOR(D_lo, L09_lo)
				T1_hi = XOR(D_hi, L09_hi)
				T2_lo = XOR(D_lo, L14_lo)
				T2_hi = XOR(D_hi, L14_hi)
				T3_lo = XOR(D_lo, L19_lo)
				T3_hi = XOR(D_hi, L19_hi)
				T4_lo = XOR(D_lo, L24_lo)
				T4_hi = XOR(D_hi, L24_hi)
				L04_lo = T3_lo * 2^21 % 2^32 + (T3_hi % 2^32 - T3_hi % 2^11) / 2^11
				L04_hi = T3_hi * 2^21 % 2^32 + (T3_lo % 2^32 - T3_lo % 2^11) / 2^11
				L09_lo = T0_lo * 2^28 % 2^32 + (T0_hi % 2^32 - T0_hi % 2^4) / 2^4
				L09_hi = T0_hi * 2^28 % 2^32 + (T0_lo % 2^32 - T0_lo % 2^4) / 2^4
				L14_lo = T2_lo * 2^25 % 2^32 + (T2_hi % 2^32 - T2_hi % 2^7) / 2^7
				L14_hi = T2_hi * 2^25 % 2^32 + (T2_lo % 2^32 - T2_lo % 2^7) / 2^7
				L19_lo = (T4_lo % 2^32 - T4_lo % 2^8) / 2^8 + T4_hi * 2^24 % 2^32
				L19_hi = (T4_hi % 2^32 - T4_hi % 2^8) / 2^8 + T4_lo * 2^24 % 2^32
				L24_lo = (T1_lo % 2^32 - T1_lo % 2^9) / 2^9 + T1_hi * 2^23 % 2^32
				L24_hi = (T1_hi % 2^32 - T1_hi % 2^9) / 2^9 + T1_lo * 2^23 % 2^32
				D_lo = XOR(C4_lo, C1_lo * 2 + (C1_hi % 2^32 - C1_hi % 2^31) / 2^31)
				D_hi = XOR(C4_hi, C1_hi * 2 + (C1_lo % 2^32 - C1_lo % 2^31) / 2^31)
				T0_lo = XOR(D_lo, L05_lo)
				T0_hi = XOR(D_hi, L05_hi)
				T1_lo = XOR(D_lo, L10_lo)
				T1_hi = XOR(D_hi, L10_hi)
				T2_lo = XOR(D_lo, L15_lo)
				T2_hi = XOR(D_hi, L15_hi)
				T3_lo = XOR(D_lo, L20_lo)
				T3_hi = XOR(D_hi, L20_hi)
				T4_lo = XOR(D_lo, L25_lo)
				T4_hi = XOR(D_hi, L25_hi)
				L05_lo = T4_lo * 2^14 + (T4_hi % 2^32 - T4_hi % 2^18) / 2^18
				L05_hi = T4_hi * 2^14 + (T4_lo % 2^32 - T4_lo % 2^18) / 2^18
				L10_lo = T1_lo * 2^20 % 2^32 + (T1_hi % 2^32 - T1_hi % 2^12) / 2^12
				L10_hi = T1_hi * 2^20 % 2^32 + (T1_lo % 2^32 - T1_lo % 2^12) / 2^12
				L15_lo = T3_lo * 2^8 + (T3_hi % 2^32 - T3_hi % 2^24) / 2^24
				L15_hi = T3_hi * 2^8 + (T3_lo % 2^32 - T3_lo % 2^24) / 2^24
				L20_lo = T0_lo * 2^27 % 2^32 + (T0_hi % 2^32 - T0_hi % 2^5) / 2^5
				L20_hi = T0_hi * 2^27 % 2^32 + (T0_lo % 2^32 - T0_lo % 2^5) / 2^5
				L25_lo = (T2_lo % 2^32 - T2_lo % 2^25) / 2^25 + T2_hi * 2^7
				L25_hi = (T2_hi % 2^32 - T2_hi % 2^25) / 2^25 + T2_lo * 2^7
				D_lo = XOR(C5_lo, C2_lo * 2 + (C2_hi % 2^32 - C2_hi % 2^31) / 2^31)
				D_hi = XOR(C5_hi, C2_hi * 2 + (C2_lo % 2^32 - C2_lo % 2^31) / 2^31)
				T1_lo = XOR(D_lo, L06_lo)
				T1_hi = XOR(D_hi, L06_hi)
				T2_lo = XOR(D_lo, L11_lo)
				T2_hi = XOR(D_hi, L11_hi)
				T3_lo = XOR(D_lo, L16_lo)
				T3_hi = XOR(D_hi, L16_hi)
				T4_lo = XOR(D_lo, L21_lo)
				T4_hi = XOR(D_hi, L21_hi)
				L06_lo = T2_lo * 2^3 + (T2_hi % 2^32 - T2_hi % 2^29) / 2^29
				L06_hi = T2_hi * 2^3 + (T2_lo % 2^32 - T2_lo % 2^29) / 2^29
				L11_lo = T4_lo * 2^18 + (T4_hi % 2^32 - T4_hi % 2^14) / 2^14
				L11_hi = T4_hi * 2^18 + (T4_lo % 2^32 - T4_lo % 2^14) / 2^14
				L16_lo = (T1_lo % 2^32 - T1_lo % 2^28) / 2^28 + T1_hi * 2^4
				L16_hi = (T1_hi % 2^32 - T1_hi % 2^28) / 2^28 + T1_lo * 2^4
				L21_lo = (T3_lo % 2^32 - T3_lo % 2^23) / 2^23 + T3_hi * 2^9
				L21_hi = (T3_hi % 2^32 - T3_hi % 2^23) / 2^23 + T3_lo * 2^9
				L01_lo = XOR(D_lo, L01_lo)
				L01_hi = XOR(D_hi, L01_hi)
				L01_lo, L02_lo, L03_lo, L04_lo, L05_lo = XOR(L01_lo, AND(-1-L02_lo, L03_lo)), XOR(L02_lo, AND(-1-L03_lo, L04_lo)), XOR(L03_lo, AND(-1-L04_lo, L05_lo)), XOR(L04_lo, AND(-1-L05_lo, L01_lo)), XOR(L05_lo, AND(-1-L01_lo, L02_lo))
				L01_hi, L02_hi, L03_hi, L04_hi, L05_hi = XOR(L01_hi, AND(-1-L02_hi, L03_hi)), XOR(L02_hi, AND(-1-L03_hi, L04_hi)), XOR(L03_hi, AND(-1-L04_hi, L05_hi)), XOR(L04_hi, AND(-1-L05_hi, L01_hi)), XOR(L05_hi, AND(-1-L01_hi, L02_hi))
				L06_lo, L07_lo, L08_lo, L09_lo, L10_lo = XOR(L09_lo, AND(-1-L10_lo, L06_lo)), XOR(L10_lo, AND(-1-L06_lo, L07_lo)), XOR(L06_lo, AND(-1-L07_lo, L08_lo)), XOR(L07_lo, AND(-1-L08_lo, L09_lo)), XOR(L08_lo, AND(-1-L09_lo, L10_lo))
				L06_hi, L07_hi, L08_hi, L09_hi, L10_hi = XOR(L09_hi, AND(-1-L10_hi, L06_hi)), XOR(L10_hi, AND(-1-L06_hi, L07_hi)), XOR(L06_hi, AND(-1-L07_hi, L08_hi)), XOR(L07_hi, AND(-1-L08_hi, L09_hi)), XOR(L08_hi, AND(-1-L09_hi, L10_hi))
				L11_lo, L12_lo, L13_lo, L14_lo, L15_lo = XOR(L12_lo, AND(-1-L13_lo, L14_lo)), XOR(L13_lo, AND(-1-L14_lo, L15_lo)), XOR(L14_lo, AND(-1-L15_lo, L11_lo)), XOR(L15_lo, AND(-1-L11_lo, L12_lo)), XOR(L11_lo, AND(-1-L12_lo, L13_lo))
				L11_hi, L12_hi, L13_hi, L14_hi, L15_hi = XOR(L12_hi, AND(-1-L13_hi, L14_hi)), XOR(L13_hi, AND(-1-L14_hi, L15_hi)), XOR(L14_hi, AND(-1-L15_hi, L11_hi)), XOR(L15_hi, AND(-1-L11_hi, L12_hi)), XOR(L11_hi, AND(-1-L12_hi, L13_hi))
				L16_lo, L17_lo, L18_lo, L19_lo, L20_lo = XOR(L20_lo, AND(-1-L16_lo, L17_lo)), XOR(L16_lo, AND(-1-L17_lo, L18_lo)), XOR(L17_lo, AND(-1-L18_lo, L19_lo)), XOR(L18_lo, AND(-1-L19_lo, L20_lo)), XOR(L19_lo, AND(-1-L20_lo, L16_lo))
				L16_hi, L17_hi, L18_hi, L19_hi, L20_hi = XOR(L20_hi, AND(-1-L16_hi, L17_hi)), XOR(L16_hi, AND(-1-L17_hi, L18_hi)), XOR(L17_hi, AND(-1-L18_hi, L19_hi)), XOR(L18_hi, AND(-1-L19_hi, L20_hi)), XOR(L19_hi, AND(-1-L20_hi, L16_hi))
				L21_lo, L22_lo, L23_lo, L24_lo, L25_lo = XOR(L23_lo, AND(-1-L24_lo, L25_lo)), XOR(L24_lo, AND(-1-L25_lo, L21_lo)), XOR(L25_lo, AND(-1-L21_lo, L22_lo)), XOR(L21_lo, AND(-1-L22_lo, L23_lo)), XOR(L22_lo, AND(-1-L23_lo, L24_lo))
				L21_hi, L22_hi, L23_hi, L24_hi, L25_hi = XOR(L23_hi, AND(-1-L24_hi, L25_hi)), XOR(L24_hi, AND(-1-L25_hi, L21_hi)), XOR(L25_hi, AND(-1-L21_hi, L22_hi)), XOR(L21_hi, AND(-1-L22_hi, L23_hi)), XOR(L22_hi, AND(-1-L23_hi, L24_hi))
				L01_lo = XOR(L01_lo, RC_lo[round_idx])
				L01_hi = L01_hi + RC_hi[round_idx]      -- RC_hi[] is either 0 or 0x80000000, so we could use fast addition instead of slow XOR
			end
			lanes_lo[1]  = L01_lo;  lanes_hi[1]  = L01_hi
			lanes_lo[2]  = L02_lo;  lanes_hi[2]  = L02_hi
			lanes_lo[3]  = L03_lo;  lanes_hi[3]  = L03_hi
			lanes_lo[4]  = L04_lo;  lanes_hi[4]  = L04_hi
			lanes_lo[5]  = L05_lo;  lanes_hi[5]  = L05_hi
			lanes_lo[6]  = L06_lo;  lanes_hi[6]  = L06_hi
			lanes_lo[7]  = L07_lo;  lanes_hi[7]  = L07_hi
			lanes_lo[8]  = L08_lo;  lanes_hi[8]  = L08_hi
			lanes_lo[9]  = L09_lo;  lanes_hi[9]  = L09_hi
			lanes_lo[10] = L10_lo;  lanes_hi[10] = L10_hi
			lanes_lo[11] = L11_lo;  lanes_hi[11] = L11_hi
			lanes_lo[12] = L12_lo;  lanes_hi[12] = L12_hi
			lanes_lo[13] = L13_lo;  lanes_hi[13] = L13_hi
			lanes_lo[14] = L14_lo;  lanes_hi[14] = L14_hi
			lanes_lo[15] = L15_lo;  lanes_hi[15] = L15_hi
			lanes_lo[16] = L16_lo;  lanes_hi[16] = L16_hi
			lanes_lo[17] = L17_lo;  lanes_hi[17] = L17_hi
			lanes_lo[18] = L18_lo;  lanes_hi[18] = L18_hi
			lanes_lo[19] = L19_lo;  lanes_hi[19] = L19_hi
			lanes_lo[20] = L20_lo;  lanes_hi[20] = L20_hi
			lanes_lo[21] = L21_lo;  lanes_hi[21] = L21_hi
			lanes_lo[22] = L22_lo;  lanes_hi[22] = L22_hi
			lanes_lo[23] = L23_lo;  lanes_hi[23] = L23_hi
			lanes_lo[24] = L24_lo;  lanes_hi[24] = L24_hi
			lanes_lo[25] = L25_lo;  lanes_hi[25] = L25_hi
		end
	end


	function blake2s_feed_64(H, str, offs, size, bytes_compressed, last_block_size, is_last_node)
		-- offs >= 0, size >= 0, size is multiple of 64
		local W = common_W
		local h1, h2, h3, h4, h5, h6, h7, h8 = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
		for pos = offs, offs + size - 1, 64 do
			if str then
				for j = 1, 16 do
					pos = pos + 4
					local a, b, c, d = byte(str, pos - 3, pos)
					W[j] = ((d * 256 + c) * 256 + b) * 256 + a
				end
			end
			local v0, v1, v2, v3, v4, v5, v6, v7 = h1, h2, h3, h4, h5, h6, h7, h8
			local v8, v9, vA, vB, vC, vD, vE, vF = sha2_H_hi[1], sha2_H_hi[2], sha2_H_hi[3], sha2_H_hi[4], sha2_H_hi[5], sha2_H_hi[6], sha2_H_hi[7], sha2_H_hi[8]
			bytes_compressed = bytes_compressed + (last_block_size or 64)
			local t0 = bytes_compressed % 2^32
			local t1 = (bytes_compressed - t0) / 2^32
			vC = XOR(vC, t0)  -- t0 = low_4_bytes(bytes_compressed)
			vD = XOR(vD, t1)  -- t1 = high_4_bytes(bytes_compressed)
			if last_block_size then  -- flag f0
				vE = -1 - vE
			end
			if is_last_node then  -- flag f1
				vF = -1 - vF
			end
			for j = 1, 10 do
				local row = sigma[j]
				v0 = v0 + v4 + W[row[1]]
				vC = XOR(vC, v0) % 2^32 / 2^16
				vC = vC % 1 * (2^32 - 1) + vC
				v8 = v8 + vC
				v4 = XOR(v4, v8) % 2^32 / 2^12
				v4 = v4 % 1 * (2^32 - 1) + v4
				v0 = v0 + v4 + W[row[2]]
				vC = XOR(vC, v0) % 2^32 / 2^8
				vC = vC % 1 * (2^32 - 1) + vC
				v8 = v8 + vC
				v4 = XOR(v4, v8) % 2^32 / 2^7
				v4 = v4 % 1 * (2^32 - 1) + v4
				v1 = v1 + v5 + W[row[3]]
				vD = XOR(vD, v1) % 2^32 / 2^16
				vD = vD % 1 * (2^32 - 1) + vD
				v9 = v9 + vD
				v5 = XOR(v5, v9) % 2^32 / 2^12
				v5 = v5 % 1 * (2^32 - 1) + v5
				v1 = v1 + v5 + W[row[4]]
				vD = XOR(vD, v1) % 2^32 / 2^8
				vD = vD % 1 * (2^32 - 1) + vD
				v9 = v9 + vD
				v5 = XOR(v5, v9) % 2^32 / 2^7
				v5 = v5 % 1 * (2^32 - 1) + v5
				v2 = v2 + v6 + W[row[5]]
				vE = XOR(vE, v2) % 2^32 / 2^16
				vE = vE % 1 * (2^32 - 1) + vE
				vA = vA + vE
				v6 = XOR(v6, vA) % 2^32 / 2^12
				v6 = v6 % 1 * (2^32 - 1) + v6
				v2 = v2 + v6 + W[row[6]]
				vE = XOR(vE, v2) % 2^32 / 2^8
				vE = vE % 1 * (2^32 - 1) + vE
				vA = vA + vE
				v6 = XOR(v6, vA) % 2^32 / 2^7
				v6 = v6 % 1 * (2^32 - 1) + v6
				v3 = v3 + v7 + W[row[7]]
				vF = XOR(vF, v3) % 2^32 / 2^16
				vF = vF % 1 * (2^32 - 1) + vF
				vB = vB + vF
				v7 = XOR(v7, vB) % 2^32 / 2^12
				v7 = v7 % 1 * (2^32 - 1) + v7
				v3 = v3 + v7 + W[row[8]]
				vF = XOR(vF, v3) % 2^32 / 2^8
				vF = vF % 1 * (2^32 - 1) + vF
				vB = vB + vF
				v7 = XOR(v7, vB) % 2^32 / 2^7
				v7 = v7 % 1 * (2^32 - 1) + v7
				v0 = v0 + v5 + W[row[9]]
				vF = XOR(vF, v0) % 2^32 / 2^16
				vF = vF % 1 * (2^32 - 1) + vF
				vA = vA + vF
				v5 = XOR(v5, vA) % 2^32 / 2^12
				v5 = v5 % 1 * (2^32 - 1) + v5
				v0 = v0 + v5 + W[row[10]]
				vF = XOR(vF, v0) % 2^32 / 2^8
				vF = vF % 1 * (2^32 - 1) + vF
				vA = vA + vF
				v5 = XOR(v5, vA) % 2^32 / 2^7
				v5 = v5 % 1 * (2^32 - 1) + v5
				v1 = v1 + v6 + W[row[11]]
				vC = XOR(vC, v1) % 2^32 / 2^16
				vC = vC % 1 * (2^32 - 1) + vC
				vB = vB + vC
				v6 = XOR(v6, vB) % 2^32 / 2^12
				v6 = v6 % 1 * (2^32 - 1) + v6
				v1 = v1 + v6 + W[row[12]]
				vC = XOR(vC, v1) % 2^32 / 2^8
				vC = vC % 1 * (2^32 - 1) + vC
				vB = vB + vC
				v6 = XOR(v6, vB) % 2^32 / 2^7
				v6 = v6 % 1 * (2^32 - 1) + v6
				v2 = v2 + v7 + W[row[13]]
				vD = XOR(vD, v2) % 2^32 / 2^16
				vD = vD % 1 * (2^32 - 1) + vD
				v8 = v8 + vD
				v7 = XOR(v7, v8) % 2^32 / 2^12
				v7 = v7 % 1 * (2^32 - 1) + v7
				v2 = v2 + v7 + W[row[14]]
				vD = XOR(vD, v2) % 2^32 / 2^8
				vD = vD % 1 * (2^32 - 1) + vD
				v8 = v8 + vD
				v7 = XOR(v7, v8) % 2^32 / 2^7
				v7 = v7 % 1 * (2^32 - 1) + v7
				v3 = v3 + v4 + W[row[15]]
				vE = XOR(vE, v3) % 2^32 / 2^16
				vE = vE % 1 * (2^32 - 1) + vE
				v9 = v9 + vE
				v4 = XOR(v4, v9) % 2^32 / 2^12
				v4 = v4 % 1 * (2^32 - 1) + v4
				v3 = v3 + v4 + W[row[16]]
				vE = XOR(vE, v3) % 2^32 / 2^8
				vE = vE % 1 * (2^32 - 1) + vE
				v9 = v9 + vE
				v4 = XOR(v4, v9) % 2^32 / 2^7
				v4 = v4 % 1 * (2^32 - 1) + v4
			end
			h1 = XOR(h1, v0, v8)
			h2 = XOR(h2, v1, v9)
			h3 = XOR(h3, v2, vA)
			h4 = XOR(h4, v3, vB)
			h5 = XOR(h5, v4, vC)
			h6 = XOR(h6, v5, vD)
			h7 = XOR(h7, v6, vE)
			h8 = XOR(h8, v7, vF)
		end
		H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8] = h1, h2, h3, h4, h5, h6, h7, h8
		return bytes_compressed
	end


	function blake2b_feed_128(H_lo, H_hi, str, offs, size, bytes_compressed, last_block_size, is_last_node)
		-- offs >= 0, size >= 0, size is multiple of 128
		local W = common_W
		local h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo = H_lo[1], H_lo[2], H_lo[3], H_lo[4], H_lo[5], H_lo[6], H_lo[7], H_lo[8]
		local h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi = H_hi[1], H_hi[2], H_hi[3], H_hi[4], H_hi[5], H_hi[6], H_hi[7], H_hi[8]
		for pos = offs, offs + size - 1, 128 do
			if str then
				for j = 1, 32 do
					pos = pos + 4
					local a, b, c, d = byte(str, pos - 3, pos)
					W[j] = ((d * 256 + c) * 256 + b) * 256 + a
				end
			end
			local v0_lo, v1_lo, v2_lo, v3_lo, v4_lo, v5_lo, v6_lo, v7_lo = h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo
			local v0_hi, v1_hi, v2_hi, v3_hi, v4_hi, v5_hi, v6_hi, v7_hi = h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi
			local v8_lo, v9_lo, vA_lo, vB_lo, vC_lo, vD_lo, vE_lo, vF_lo = sha2_H_lo[1], sha2_H_lo[2], sha2_H_lo[3], sha2_H_lo[4], sha2_H_lo[5], sha2_H_lo[6], sha2_H_lo[7], sha2_H_lo[8]
			local v8_hi, v9_hi, vA_hi, vB_hi, vC_hi, vD_hi, vE_hi, vF_hi = sha2_H_hi[1], sha2_H_hi[2], sha2_H_hi[3], sha2_H_hi[4], sha2_H_hi[5], sha2_H_hi[6], sha2_H_hi[7], sha2_H_hi[8]
			bytes_compressed = bytes_compressed + (last_block_size or 128)
			local t0_lo = bytes_compressed % 2^32
			local t0_hi = (bytes_compressed - t0_lo) / 2^32
			vC_lo = XOR(vC_lo, t0_lo)  -- t0 = low_8_bytes(bytes_compressed)
			vC_hi = XOR(vC_hi, t0_hi)
			-- t1 = high_8_bytes(bytes_compressed) = 0,  message length is always below 2^53 bytes
			if last_block_size then  -- flag f0
				vE_lo = -1 - vE_lo
				vE_hi = -1 - vE_hi
			end
			if is_last_node then  -- flag f1
				vF_lo = -1 - vF_lo
				vF_hi = -1 - vF_hi
			end
			for j = 1, 12 do
				local row = sigma[j]
				local k = row[1] * 2
				local z = v0_lo % 2^32 + v4_lo % 2^32 + W[k-1]
				v0_lo = z % 2^32
				v0_hi = v0_hi + v4_hi + (z - v0_lo) / 2^32 + W[k]
				vC_lo, vC_hi = XOR(vC_hi, v0_hi), XOR(vC_lo, v0_lo)
				z = v8_lo % 2^32 + vC_lo % 2^32
				v8_lo = z % 2^32
				v8_hi = v8_hi + vC_hi + (z - v8_lo) / 2^32
				v4_lo, v4_hi = XOR(v4_lo, v8_lo), XOR(v4_hi, v8_hi)
				local z_lo, z_hi = v4_lo % 2^24, v4_hi % 2^24
				v4_lo, v4_hi = (v4_lo - z_lo) / 2^24 % 2^8 + z_hi * 2^8, (v4_hi - z_hi) / 2^24 % 2^8 + z_lo * 2^8
				k = row[2] * 2
				z = v0_lo % 2^32 + v4_lo % 2^32 + W[k-1]
				v0_lo = z % 2^32
				v0_hi = v0_hi + v4_hi + (z - v0_lo) / 2^32 + W[k]
				vC_lo, vC_hi = XOR(vC_lo, v0_lo), XOR(vC_hi, v0_hi)
				z_lo, z_hi = vC_lo % 2^16, vC_hi % 2^16
				vC_lo, vC_hi = (vC_lo - z_lo) / 2^16 % 2^16 + z_hi * 2^16, (vC_hi - z_hi) / 2^16 % 2^16 + z_lo * 2^16
				z = v8_lo % 2^32 + vC_lo % 2^32
				v8_lo = z % 2^32
				v8_hi = v8_hi + vC_hi + (z - v8_lo) / 2^32
				v4_lo, v4_hi = XOR(v4_lo, v8_lo), XOR(v4_hi, v8_hi)
				z_lo, z_hi = v4_lo % 2^31, v4_hi % 2^31
				v4_lo, v4_hi = z_lo * 2^1 + (v4_hi - z_hi) / 2^31 % 2^1, z_hi * 2^1 + (v4_lo - z_lo) / 2^31 % 2^1
				k = row[3] * 2
				z = v1_lo % 2^32 + v5_lo % 2^32 + W[k-1]
				v1_lo = z % 2^32
				v1_hi = v1_hi + v5_hi + (z - v1_lo) / 2^32 + W[k]
				vD_lo, vD_hi = XOR(vD_hi, v1_hi), XOR(vD_lo, v1_lo)
				z = v9_lo % 2^32 + vD_lo % 2^32
				v9_lo = z % 2^32
				v9_hi = v9_hi + vD_hi + (z - v9_lo) / 2^32
				v5_lo, v5_hi = XOR(v5_lo, v9_lo), XOR(v5_hi, v9_hi)
				z_lo, z_hi = v5_lo % 2^24, v5_hi % 2^24
				v5_lo, v5_hi = (v5_lo - z_lo) / 2^24 % 2^8 + z_hi * 2^8, (v5_hi - z_hi) / 2^24 % 2^8 + z_lo * 2^8
				k = row[4] * 2
				z = v1_lo % 2^32 + v5_lo % 2^32 + W[k-1]
				v1_lo = z % 2^32
				v1_hi = v1_hi + v5_hi + (z - v1_lo) / 2^32 + W[k]
				vD_lo, vD_hi = XOR(vD_lo, v1_lo), XOR(vD_hi, v1_hi)
				z_lo, z_hi = vD_lo % 2^16, vD_hi % 2^16
				vD_lo, vD_hi = (vD_lo - z_lo) / 2^16 % 2^16 + z_hi * 2^16, (vD_hi - z_hi) / 2^16 % 2^16 + z_lo * 2^16
				z = v9_lo % 2^32 + vD_lo % 2^32
				v9_lo = z % 2^32
				v9_hi = v9_hi + vD_hi + (z - v9_lo) / 2^32
				v5_lo, v5_hi = XOR(v5_lo, v9_lo), XOR(v5_hi, v9_hi)
				z_lo, z_hi = v5_lo % 2^31, v5_hi % 2^31
				v5_lo, v5_hi = z_lo * 2^1 + (v5_hi - z_hi) / 2^31 % 2^1, z_hi * 2^1 + (v5_lo - z_lo) / 2^31 % 2^1
				k = row[5] * 2
				z = v2_lo % 2^32 + v6_lo % 2^32 + W[k-1]
				v2_lo = z % 2^32
				v2_hi = v2_hi + v6_hi + (z - v2_lo) / 2^32 + W[k]
				vE_lo, vE_hi = XOR(vE_hi, v2_hi), XOR(vE_lo, v2_lo)
				z = vA_lo % 2^32 + vE_lo % 2^32
				vA_lo = z % 2^32
				vA_hi = vA_hi + vE_hi + (z - vA_lo) / 2^32
				v6_lo, v6_hi = XOR(v6_lo, vA_lo), XOR(v6_hi, vA_hi)
				z_lo, z_hi = v6_lo % 2^24, v6_hi % 2^24
				v6_lo, v6_hi = (v6_lo - z_lo) / 2^24 % 2^8 + z_hi * 2^8, (v6_hi - z_hi) / 2^24 % 2^8 + z_lo * 2^8
				k = row[6] * 2
				z = v2_lo % 2^32 + v6_lo % 2^32 + W[k-1]
				v2_lo = z % 2^32
				v2_hi = v2_hi + v6_hi + (z - v2_lo) / 2^32 + W[k]
				vE_lo, vE_hi = XOR(vE_lo, v2_lo), XOR(vE_hi, v2_hi)
				z_lo, z_hi = vE_lo % 2^16, vE_hi % 2^16
				vE_lo, vE_hi = (vE_lo - z_lo) / 2^16 % 2^16 + z_hi * 2^16, (vE_hi - z_hi) / 2^16 % 2^16 + z_lo * 2^16
				z = vA_lo % 2^32 + vE_lo % 2^32
				vA_lo = z % 2^32
				vA_hi = vA_hi + vE_hi + (z - vA_lo) / 2^32
				v6_lo, v6_hi = XOR(v6_lo, vA_lo), XOR(v6_hi, vA_hi)
				z_lo, z_hi = v6_lo % 2^31, v6_hi % 2^31
				v6_lo, v6_hi = z_lo * 2^1 + (v6_hi - z_hi) / 2^31 % 2^1, z_hi * 2^1 + (v6_lo - z_lo) / 2^31 % 2^1
				k = row[7] * 2
				z = v3_lo % 2^32 + v7_lo % 2^32 + W[k-1]
				v3_lo = z % 2^32
				v3_hi = v3_hi + v7_hi + (z - v3_lo) / 2^32 + W[k]
				vF_lo, vF_hi = XOR(vF_hi, v3_hi), XOR(vF_lo, v3_lo)
				z = vB_lo % 2^32 + vF_lo % 2^32
				vB_lo = z % 2^32
				vB_hi = vB_hi + vF_hi + (z - vB_lo) / 2^32
				v7_lo, v7_hi = XOR(v7_lo, vB_lo), XOR(v7_hi, vB_hi)
				z_lo, z_hi = v7_lo % 2^24, v7_hi % 2^24
				v7_lo, v7_hi = (v7_lo - z_lo) / 2^24 % 2^8 + z_hi * 2^8, (v7_hi - z_hi) / 2^24 % 2^8 + z_lo * 2^8
				k = row[8] * 2
				z = v3_lo % 2^32 + v7_lo % 2^32 + W[k-1]
				v3_lo = z % 2^32
				v3_hi = v3_hi + v7_hi + (z - v3_lo) / 2^32 + W[k]
				vF_lo, vF_hi = XOR(vF_lo, v3_lo), XOR(vF_hi, v3_hi)
				z_lo, z_hi = vF_lo % 2^16, vF_hi % 2^16
				vF_lo, vF_hi = (vF_lo - z_lo) / 2^16 % 2^16 + z_hi * 2^16, (vF_hi - z_hi) / 2^16 % 2^16 + z_lo * 2^16
				z = vB_lo % 2^32 + vF_lo % 2^32
				vB_lo = z % 2^32
				vB_hi = vB_hi + vF_hi + (z - vB_lo) / 2^32
				v7_lo, v7_hi = XOR(v7_lo, vB_lo), XOR(v7_hi, vB_hi)
				z_lo, z_hi = v7_lo % 2^31, v7_hi % 2^31
				v7_lo, v7_hi = z_lo * 2^1 + (v7_hi - z_hi) / 2^31 % 2^1, z_hi * 2^1 + (v7_lo - z_lo) / 2^31 % 2^1
				k = row[9] * 2
				z = v0_lo % 2^32 + v5_lo % 2^32 + W[k-1]
				v0_lo = z % 2^32
				v0_hi = v0_hi + v5_hi + (z - v0_lo) / 2^32 + W[k]
				vF_lo, vF_hi = XOR(vF_hi, v0_hi), XOR(vF_lo, v0_lo)
				z = vA_lo % 2^32 + vF_lo % 2^32
				vA_lo = z % 2^32
				vA_hi = vA_hi + vF_hi + (z - vA_lo) / 2^32
				v5_lo, v5_hi = XOR(v5_lo, vA_lo), XOR(v5_hi, vA_hi)
				z_lo, z_hi = v5_lo % 2^24, v5_hi % 2^24
				v5_lo, v5_hi = (v5_lo - z_lo) / 2^24 % 2^8 + z_hi * 2^8, (v5_hi - z_hi) / 2^24 % 2^8 + z_lo * 2^8
				k = row[10] * 2
				z = v0_lo % 2^32 + v5_lo % 2^32 + W[k-1]
				v0_lo = z % 2^32
				v0_hi = v0_hi + v5_hi + (z - v0_lo) / 2^32 + W[k]
				vF_lo, vF_hi = XOR(vF_lo, v0_lo), XOR(vF_hi, v0_hi)
				z_lo, z_hi = vF_lo % 2^16, vF_hi % 2^16
				vF_lo, vF_hi = (vF_lo - z_lo) / 2^16 % 2^16 + z_hi * 2^16, (vF_hi - z_hi) / 2^16 % 2^16 + z_lo * 2^16
				z = vA_lo % 2^32 + vF_lo % 2^32
				vA_lo = z % 2^32
				vA_hi = vA_hi + vF_hi + (z - vA_lo) / 2^32
				v5_lo, v5_hi = XOR(v5_lo, vA_lo), XOR(v5_hi, vA_hi)
				z_lo, z_hi = v5_lo % 2^31, v5_hi % 2^31
				v5_lo, v5_hi = z_lo * 2^1 + (v5_hi - z_hi) / 2^31 % 2^1, z_hi * 2^1 + (v5_lo - z_lo) / 2^31 % 2^1
				k = row[11] * 2
				z = v1_lo % 2^32 + v6_lo % 2^32 + W[k-1]
				v1_lo = z % 2^32
				v1_hi = v1_hi + v6_hi + (z - v1_lo) / 2^32 + W[k]
				vC_lo, vC_hi = XOR(vC_hi, v1_hi), XOR(vC_lo, v1_lo)
				z = vB_lo % 2^32 + vC_lo % 2^32
				vB_lo = z % 2^32
				vB_hi = vB_hi + vC_hi + (z - vB_lo) / 2^32
				v6_lo, v6_hi = XOR(v6_lo, vB_lo), XOR(v6_hi, vB_hi)
				z_lo, z_hi = v6_lo % 2^24, v6_hi % 2^24
				v6_lo, v6_hi = (v6_lo - z_lo) / 2^24 % 2^8 + z_hi * 2^8, (v6_hi - z_hi) / 2^24 % 2^8 + z_lo * 2^8
				k = row[12] * 2
				z = v1_lo % 2^32 + v6_lo % 2^32 + W[k-1]
				v1_lo = z % 2^32
				v1_hi = v1_hi + v6_hi + (z - v1_lo) / 2^32 + W[k]
				vC_lo, vC_hi = XOR(vC_lo, v1_lo), XOR(vC_hi, v1_hi)
				z_lo, z_hi = vC_lo % 2^16, vC_hi % 2^16
				vC_lo, vC_hi = (vC_lo - z_lo) / 2^16 % 2^16 + z_hi * 2^16, (vC_hi - z_hi) / 2^16 % 2^16 + z_lo * 2^16
				z = vB_lo % 2^32 + vC_lo % 2^32
				vB_lo = z % 2^32
				vB_hi = vB_hi + vC_hi + (z - vB_lo) / 2^32
				v6_lo, v6_hi = XOR(v6_lo, vB_lo), XOR(v6_hi, vB_hi)
				z_lo, z_hi = v6_lo % 2^31, v6_hi % 2^31
				v6_lo, v6_hi = z_lo * 2^1 + (v6_hi - z_hi) / 2^31 % 2^1, z_hi * 2^1 + (v6_lo - z_lo) / 2^31 % 2^1
				k = row[13] * 2
				z = v2_lo % 2^32 + v7_lo % 2^32 + W[k-1]
				v2_lo = z % 2^32
				v2_hi = v2_hi + v7_hi + (z - v2_lo) / 2^32 + W[k]
				vD_lo, vD_hi = XOR(vD_hi, v2_hi), XOR(vD_lo, v2_lo)
				z = v8_lo % 2^32 + vD_lo % 2^32
				v8_lo = z % 2^32
				v8_hi = v8_hi + vD_hi + (z - v8_lo) / 2^32
				v7_lo, v7_hi = XOR(v7_lo, v8_lo), XOR(v7_hi, v8_hi)
				z_lo, z_hi = v7_lo % 2^24, v7_hi % 2^24
				v7_lo, v7_hi = (v7_lo - z_lo) / 2^24 % 2^8 + z_hi * 2^8, (v7_hi - z_hi) / 2^24 % 2^8 + z_lo * 2^8
				k = row[14] * 2
				z = v2_lo % 2^32 + v7_lo % 2^32 + W[k-1]
				v2_lo = z % 2^32
				v2_hi = v2_hi + v7_hi + (z - v2_lo) / 2^32 + W[k]
				vD_lo, vD_hi = XOR(vD_lo, v2_lo), XOR(vD_hi, v2_hi)
				z_lo, z_hi = vD_lo % 2^16, vD_hi % 2^16
				vD_lo, vD_hi = (vD_lo - z_lo) / 2^16 % 2^16 + z_hi * 2^16, (vD_hi - z_hi) / 2^16 % 2^16 + z_lo * 2^16
				z = v8_lo % 2^32 + vD_lo % 2^32
				v8_lo = z % 2^32
				v8_hi = v8_hi + vD_hi + (z - v8_lo) / 2^32
				v7_lo, v7_hi = XOR(v7_lo, v8_lo), XOR(v7_hi, v8_hi)
				z_lo, z_hi = v7_lo % 2^31, v7_hi % 2^31
				v7_lo, v7_hi = z_lo * 2^1 + (v7_hi - z_hi) / 2^31 % 2^1, z_hi * 2^1 + (v7_lo - z_lo) / 2^31 % 2^1
				k = row[15] * 2
				z = v3_lo % 2^32 + v4_lo % 2^32 + W[k-1]
				v3_lo = z % 2^32
				v3_hi = v3_hi + v4_hi + (z - v3_lo) / 2^32 + W[k]
				vE_lo, vE_hi = XOR(vE_hi, v3_hi), XOR(vE_lo, v3_lo)
				z = v9_lo % 2^32 + vE_lo % 2^32
				v9_lo = z % 2^32
				v9_hi = v9_hi + vE_hi + (z - v9_lo) / 2^32
				v4_lo, v4_hi = XOR(v4_lo, v9_lo), XOR(v4_hi, v9_hi)
				z_lo, z_hi = v4_lo % 2^24, v4_hi % 2^24
				v4_lo, v4_hi = (v4_lo - z_lo) / 2^24 % 2^8 + z_hi * 2^8, (v4_hi - z_hi) / 2^24 % 2^8 + z_lo * 2^8
				k = row[16] * 2
				z = v3_lo % 2^32 + v4_lo % 2^32 + W[k-1]
				v3_lo = z % 2^32
				v3_hi = v3_hi + v4_hi + (z - v3_lo) / 2^32 + W[k]
				vE_lo, vE_hi = XOR(vE_lo, v3_lo), XOR(vE_hi, v3_hi)
				z_lo, z_hi = vE_lo % 2^16, vE_hi % 2^16
				vE_lo, vE_hi = (vE_lo - z_lo) / 2^16 % 2^16 + z_hi * 2^16, (vE_hi - z_hi) / 2^16 % 2^16 + z_lo * 2^16
				z = v9_lo % 2^32 + vE_lo % 2^32
				v9_lo = z % 2^32
				v9_hi = v9_hi + vE_hi + (z - v9_lo) / 2^32
				v4_lo, v4_hi = XOR(v4_lo, v9_lo), XOR(v4_hi, v9_hi)
				z_lo, z_hi = v4_lo % 2^31, v4_hi % 2^31
				v4_lo, v4_hi = z_lo * 2^1 + (v4_hi - z_hi) / 2^31 % 2^1, z_hi * 2^1 + (v4_lo - z_lo) / 2^31 % 2^1
			end
			h1_lo = XOR(h1_lo, v0_lo, v8_lo) % 2^32
			h2_lo = XOR(h2_lo, v1_lo, v9_lo) % 2^32
			h3_lo = XOR(h3_lo, v2_lo, vA_lo) % 2^32
			h4_lo = XOR(h4_lo, v3_lo, vB_lo) % 2^32
			h5_lo = XOR(h5_lo, v4_lo, vC_lo) % 2^32
			h6_lo = XOR(h6_lo, v5_lo, vD_lo) % 2^32
			h7_lo = XOR(h7_lo, v6_lo, vE_lo) % 2^32
			h8_lo = XOR(h8_lo, v7_lo, vF_lo) % 2^32
			h1_hi = XOR(h1_hi, v0_hi, v8_hi) % 2^32
			h2_hi = XOR(h2_hi, v1_hi, v9_hi) % 2^32
			h3_hi = XOR(h3_hi, v2_hi, vA_hi) % 2^32
			h4_hi = XOR(h4_hi, v3_hi, vB_hi) % 2^32
			h5_hi = XOR(h5_hi, v4_hi, vC_hi) % 2^32
			h6_hi = XOR(h6_hi, v5_hi, vD_hi) % 2^32
			h7_hi = XOR(h7_hi, v6_hi, vE_hi) % 2^32
			h8_hi = XOR(h8_hi, v7_hi, vF_hi) % 2^32
		end
		H_lo[1], H_lo[2], H_lo[3], H_lo[4], H_lo[5], H_lo[6], H_lo[7], H_lo[8] = h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo
		H_hi[1], H_hi[2], H_hi[3], H_hi[4], H_hi[5], H_hi[6], H_hi[7], H_hi[8] = h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi
		return bytes_compressed
	end


	function blake3_feed_64(str, offs, size, flags, chunk_index, H_in, H_out, wide_output, block_length)
		-- offs >= 0, size >= 0, size is multiple of 64
		block_length = block_length or 64
		local W = common_W
		local h1, h2, h3, h4, h5, h6, h7, h8 = H_in[1], H_in[2], H_in[3], H_in[4], H_in[5], H_in[6], H_in[7], H_in[8]
		H_out = H_out or H_in
		for pos = offs, offs + size - 1, 64 do
			if str then
				for j = 1, 16 do
					pos = pos + 4
					local a, b, c, d = byte(str, pos - 3, pos)
					W[j] = ((d * 256 + c) * 256 + b) * 256 + a
				end
			end
			local v0, v1, v2, v3, v4, v5, v6, v7 = h1, h2, h3, h4, h5, h6, h7, h8
			local v8, v9, vA, vB = sha2_H_hi[1], sha2_H_hi[2], sha2_H_hi[3], sha2_H_hi[4]
			local vC = chunk_index % 2^32         -- t0 = low_4_bytes(chunk_index)
			local vD = (chunk_index - vC) / 2^32  -- t1 = high_4_bytes(chunk_index)
			local vE, vF = block_length, flags
			for j = 1, 7 do
				v0 = v0 + v4 + W[perm_blake3[j]]
				vC = XOR(vC, v0) % 2^32 / 2^16
				vC = vC % 1 * (2^32 - 1) + vC
				v8 = v8 + vC
				v4 = XOR(v4, v8) % 2^32 / 2^12
				v4 = v4 % 1 * (2^32 - 1) + v4
				v0 = v0 + v4 + W[perm_blake3[j + 14]]
				vC = XOR(vC, v0) % 2^32 / 2^8
				vC = vC % 1 * (2^32 - 1) + vC
				v8 = v8 + vC
				v4 = XOR(v4, v8) % 2^32 / 2^7
				v4 = v4 % 1 * (2^32 - 1) + v4
				v1 = v1 + v5 + W[perm_blake3[j + 1]]
				vD = XOR(vD, v1) % 2^32 / 2^16
				vD = vD % 1 * (2^32 - 1) + vD
				v9 = v9 + vD
				v5 = XOR(v5, v9) % 2^32 / 2^12
				v5 = v5 % 1 * (2^32 - 1) + v5
				v1 = v1 + v5 + W[perm_blake3[j + 2]]
				vD = XOR(vD, v1) % 2^32 / 2^8
				vD = vD % 1 * (2^32 - 1) + vD
				v9 = v9 + vD
				v5 = XOR(v5, v9) % 2^32 / 2^7
				v5 = v5 % 1 * (2^32 - 1) + v5
				v2 = v2 + v6 + W[perm_blake3[j + 16]]
				vE = XOR(vE, v2) % 2^32 / 2^16
				vE = vE % 1 * (2^32 - 1) + vE
				vA = vA + vE
				v6 = XOR(v6, vA) % 2^32 / 2^12
				v6 = v6 % 1 * (2^32 - 1) + v6
				v2 = v2 + v6 + W[perm_blake3[j + 7]]
				vE = XOR(vE, v2) % 2^32 / 2^8
				vE = vE % 1 * (2^32 - 1) + vE
				vA = vA + vE
				v6 = XOR(v6, vA) % 2^32 / 2^7
				v6 = v6 % 1 * (2^32 - 1) + v6
				v3 = v3 + v7 + W[perm_blake3[j + 15]]
				vF = XOR(vF, v3) % 2^32 / 2^16
				vF = vF % 1 * (2^32 - 1) + vF
				vB = vB + vF
				v7 = XOR(v7, vB) % 2^32 / 2^12
				v7 = v7 % 1 * (2^32 - 1) + v7
				v3 = v3 + v7 + W[perm_blake3[j + 17]]
				vF = XOR(vF, v3) % 2^32 / 2^8
				vF = vF % 1 * (2^32 - 1) + vF
				vB = vB + vF
				v7 = XOR(v7, vB) % 2^32 / 2^7
				v7 = v7 % 1 * (2^32 - 1) + v7
				v0 = v0 + v5 + W[perm_blake3[j + 21]]
				vF = XOR(vF, v0) % 2^32 / 2^16
				vF = vF % 1 * (2^32 - 1) + vF
				vA = vA + vF
				v5 = XOR(v5, vA) % 2^32 / 2^12
				v5 = v5 % 1 * (2^32 - 1) + v5
				v0 = v0 + v5 + W[perm_blake3[j + 5]]
				vF = XOR(vF, v0) % 2^32 / 2^8
				vF = vF % 1 * (2^32 - 1) + vF
				vA = vA + vF
				v5 = XOR(v5, vA) % 2^32 / 2^7
				v5 = v5 % 1 * (2^32 - 1) + v5
				v1 = v1 + v6 + W[perm_blake3[j + 3]]
				vC = XOR(vC, v1) % 2^32 / 2^16
				vC = vC % 1 * (2^32 - 1) + vC
				vB = vB + vC
				v6 = XOR(v6, vB) % 2^32 / 2^12
				v6 = v6 % 1 * (2^32 - 1) + v6
				v1 = v1 + v6 + W[perm_blake3[j + 6]]
				vC = XOR(vC, v1) % 2^32 / 2^8
				vC = vC % 1 * (2^32 - 1) + vC
				vB = vB + vC
				v6 = XOR(v6, vB) % 2^32 / 2^7
				v6 = v6 % 1 * (2^32 - 1) + v6
				v2 = v2 + v7 + W[perm_blake3[j + 4]]
				vD = XOR(vD, v2) % 2^32 / 2^16
				vD = vD % 1 * (2^32 - 1) + vD
				v8 = v8 + vD
				v7 = XOR(v7, v8) % 2^32 / 2^12
				v7 = v7 % 1 * (2^32 - 1) + v7
				v2 = v2 + v7 + W[perm_blake3[j + 18]]
				vD = XOR(vD, v2) % 2^32 / 2^8
				vD = vD % 1 * (2^32 - 1) + vD
				v8 = v8 + vD
				v7 = XOR(v7, v8) % 2^32 / 2^7
				v7 = v7 % 1 * (2^32 - 1) + v7
				v3 = v3 + v4 + W[perm_blake3[j + 19]]
				vE = XOR(vE, v3) % 2^32 / 2^16
				vE = vE % 1 * (2^32 - 1) + vE
				v9 = v9 + vE
				v4 = XOR(v4, v9) % 2^32 / 2^12
				v4 = v4 % 1 * (2^32 - 1) + v4
				v3 = v3 + v4 + W[perm_blake3[j + 20]]
				vE = XOR(vE, v3) % 2^32 / 2^8
				vE = vE % 1 * (2^32 - 1) + vE
				v9 = v9 + vE
				v4 = XOR(v4, v9) % 2^32 / 2^7
				v4 = v4 % 1 * (2^32 - 1) + v4
			end
			if wide_output then
				H_out[ 9] = XOR(h1, v8)
				H_out[10] = XOR(h2, v9)
				H_out[11] = XOR(h3, vA)
				H_out[12] = XOR(h4, vB)
				H_out[13] = XOR(h5, vC)
				H_out[14] = XOR(h6, vD)
				H_out[15] = XOR(h7, vE)
				H_out[16] = XOR(h8, vF)
			end
			h1 = XOR(v0, v8)
			h2 = XOR(v1, v9)
			h3 = XOR(v2, vA)
			h4 = XOR(v3, vB)
			h5 = XOR(v4, vC)
			h6 = XOR(v5, vD)
			h7 = XOR(v6, vE)
			h8 = XOR(v7, vF)
		end
		H_out[1], H_out[2], H_out[3], H_out[4], H_out[5], H_out[6], H_out[7], H_out[8] = h1, h2, h3, h4, h5, h6, h7, h8
	end

end


--------------------------------------------------------------------------------
-- MAGIC NUMBERS CALCULATOR
--------------------------------------------------------------------------------
-- Q:
--    Is 53-bit "double" math enough to calculate square roots and cube roots of primes with 64 correct bits after decimal point?
-- A:
--    Yes, 53-bit "double" arithmetic is enough.
--    We could obtain first 40 bits by direct calculation of p^(1/3) and next 40 bits by one step of Newton's method.

do
	local function mul(src1, src2, factor, result_length)
		-- src1, src2 - long integers (arrays of digits in base 2^24)
		-- factor - small integer
		-- returns long integer result (src1 * src2 * factor) and its floating point approximation
		local result, carry, value, weight = {}, 0.0, 0.0, 1.0
		for j = 1, result_length do
			for k = math_max(1, j + 1 - #src2), math_min(j, #src1) do
				carry = carry + factor * src1[k] * src2[j + 1 - k]  -- "int32" is not enough for multiplication result, that's why "factor" must be of type "double"
			end
			local digit = carry % 2^24
			result[j] = floor(digit)
			carry = (carry - digit) / 2^24
			value = value + digit * weight
			weight = weight * 2^24
		end
		return result, value
	end

	local idx, step, p, one, sqrt_hi, sqrt_lo = 0, {4, 1, 2, -2, 2}, 4, {1}, sha2_H_hi, sha2_H_lo
	repeat
		p = p + step[p % 6]
		local d = 1
		repeat
			d = d + step[d % 6]
			if d*d > p then -- next prime number is found
				local root = p^(1/3)
				local R = root * 2^40
				R = mul({R - R % 1}, one, 1.0, 2)
				local _, delta = mul(R, mul(R, R, 1.0, 4), -1.0, 4)
				local hi = R[2] % 65536 * 65536 + floor(R[1] / 256)
				local lo = R[1] % 256 * 16777216 + floor(delta * (2^-56 / 3) * root / p)
				if idx < 16 then
					root = p^(1/2)
					R = root * 2^40
					R = mul({R - R % 1}, one, 1.0, 2)
					_, delta = mul(R, R, -1.0, 2)
					local hi = R[2] % 65536 * 65536 + floor(R[1] / 256)
					local lo = R[1] % 256 * 16777216 + floor(delta * 2^-17 / root)
					local idx = idx % 8 + 1
					sha2_H_ext256[224][idx] = lo
					sqrt_hi[idx], sqrt_lo[idx] = hi, lo + hi * hi_factor
					if idx > 7 then
						sqrt_hi, sqrt_lo = sha2_H_ext512_hi[384], sha2_H_ext512_lo[384]
					end
				end
				idx = idx + 1
				sha2_K_hi[idx], sha2_K_lo[idx] = hi, lo % K_lo_modulo + hi * hi_factor
				break
			end
		until p % d == 0
	until idx > 79
end

-- Calculating IVs for SHA512/224 and SHA512/256
for width = 224, 256, 32 do
	local H_lo, H_hi = {}
	if HEX64 then
		for j = 1, 8 do
			H_lo[j] = XORA5(sha2_H_lo[j])
		end
	else
		H_hi = {}
		for j = 1, 8 do
			H_lo[j] = XORA5(sha2_H_lo[j])
			H_hi[j] = XORA5(sha2_H_hi[j])
		end
	end
	sha512_feed_128(H_lo, H_hi, "SHA-512/"..tostring(width).."\128"..string_rep("\0", 115).."\88", 0, 128)
	sha2_H_ext512_lo[width] = H_lo
	sha2_H_ext512_hi[width] = H_hi
end

-- Constants for MD5
do
	local sin, abs, modf = math.sin, math.abs, math.modf
	for idx = 1, 64 do
		-- we can't use formula floor(abs(sin(idx))*2^32) because its result may be beyond integer range on Lua built with 32-bit integers
		local hi, lo = modf(abs(sin(idx)) * 2^16)
		md5_K[idx] = hi * 65536 + floor(lo * 2^16)
	end
end

-- Constants for SHA-3
do
	local sh_reg = 29

	local function next_bit()
		local r = sh_reg % 2
		sh_reg = XOR_BYTE((sh_reg - r) / 2, 142 * r)
		return r
	end

	for idx = 1, 24 do
		local lo, m = 0
		for _ = 1, 6 do
			m = m and m * m * 2 or 1
			lo = lo + next_bit() * m
		end
		local hi = next_bit() * m
		sha3_RC_hi[idx], sha3_RC_lo[idx] = hi, lo + hi * hi_factor_keccak
	end
end

if branch == "FFI" then
	sha2_K_hi = ffi.new("uint32_t[?]", #sha2_K_hi + 1, 0, unpack(sha2_K_hi))
	sha2_K_lo = ffi.new("int64_t[?]",  #sha2_K_lo + 1, 0, unpack(sha2_K_lo))
	--md5_K = ffi.new("uint32_t[?]", #md5_K + 1, 0, unpack(md5_K))
	if hi_factor_keccak == 0 then
		sha3_RC_lo = ffi.new("uint32_t[?]", #sha3_RC_lo + 1, 0, unpack(sha3_RC_lo))
		sha3_RC_hi = ffi.new("uint32_t[?]", #sha3_RC_hi + 1, 0, unpack(sha3_RC_hi))
	else
		sha3_RC_lo = ffi.new("int64_t[?]", #sha3_RC_lo + 1, 0, unpack(sha3_RC_lo))
	end
end


--------------------------------------------------------------------------------
-- MAIN FUNCTIONS
--------------------------------------------------------------------------------

local function sha256ext(width, message)
	-- Create an instance (private objects for current calculation)
	local H, length, tail = {unpack(sha2_H_ext256[width])}, 0.0, ""

	local function partial(message_part)
		if message_part then
			if tail then
				length = length + #message_part
				local offs = 0
				if tail ~= "" and #tail + #message_part >= 64 then
					offs = 64 - #tail
					sha256_feed_64(H, tail..sub(message_part, 1, offs), 0, 64)
					tail = ""
				end
				local size = #message_part - offs
				local size_tail = size % 64
				sha256_feed_64(H, message_part, offs, size - size_tail)
				tail = tail..sub(message_part, #message_part + 1 - size_tail)
				return partial
			else
				error("Adding more chunks is not allowed after receiving the result", 2)
			end
		else
			if tail then
				local final_blocks = {tail, "\128", string_rep("\0", (-9 - length) % 64 + 1)}
				tail = nil
				-- Assuming user data length is shorter than (2^53)-9 bytes
				-- Anyway, it looks very unrealistic that someone would spend more than a year of calculations to process 2^53 bytes of data by using this Lua script :-)
				-- 2^53 bytes = 2^56 bits, so "bit-counter" fits in 7 bytes
				length = length * (8 / 256^7)  -- convert "byte-counter" to "bit-counter" and move decimal point to the left
				for j = 4, 10 do
					length = length % 1 * 256
					final_blocks[j] = char(floor(length))
				end
				final_blocks = table_concat(final_blocks)
				sha256_feed_64(H, final_blocks, 0, #final_blocks)
				local max_reg = width / 32
				for j = 1, max_reg do
					H[j] = HEX(H[j])
				end
				H = table_concat(H, "", 1, max_reg)
			end
			return H
		end
	end

	if message then
		-- Actually perform calculations and return the SHA256 digest of a message
		return partial(message)()
	else
		-- Return function for chunk-by-chunk loading
		-- User should feed every chunk of input data as single argument to this function and finally get SHA256 digest by invoking this function without an argument
		return partial
	end
end


local function sha512ext(width, message)
	-- Create an instance (private objects for current calculation)
	local length, tail, H_lo, H_hi = 0.0, "", {unpack(sha2_H_ext512_lo[width])}, not HEX64 and {unpack(sha2_H_ext512_hi[width])}

	local function partial(message_part)
		if message_part then
			if tail then
				length = length + #message_part
				local offs = 0
				if tail ~= "" and #tail + #message_part >= 128 then
					offs = 128 - #tail
					sha512_feed_128(H_lo, H_hi, tail..sub(message_part, 1, offs), 0, 128)
					tail = ""
				end
				local size = #message_part - offs
				local size_tail = size % 128
				sha512_feed_128(H_lo, H_hi, message_part, offs, size - size_tail)
				tail = tail..sub(message_part, #message_part + 1 - size_tail)
				return partial
			else
				error("Adding more chunks is not allowed after receiving the result", 2)
			end
		else
			if tail then
				local final_blocks = {tail, "\128", string_rep("\0", (-17-length) % 128 + 9)}
				tail = nil
				-- Assuming user data length is shorter than (2^53)-17 bytes
				-- 2^53 bytes = 2^56 bits, so "bit-counter" fits in 7 bytes
				length = length * (8 / 256^7)  -- convert "byte-counter" to "bit-counter" and move floating point to the left
				for j = 4, 10 do
					length = length % 1 * 256
					final_blocks[j] = char(floor(length))
				end
				final_blocks = table_concat(final_blocks)
				sha512_feed_128(H_lo, H_hi, final_blocks, 0, #final_blocks)
				local max_reg = ceil(width / 64)
				if HEX64 then
					for j = 1, max_reg do
						H_lo[j] = HEX64(H_lo[j])
					end
				else
					for j = 1, max_reg do
						H_lo[j] = HEX(H_hi[j])..HEX(H_lo[j])
					end
					H_hi = nil
				end
				H_lo = sub(table_concat(H_lo, "", 1, max_reg), 1, width / 4)
			end
			return H_lo
		end
	end

	if message then
		-- Actually perform calculations and return the SHA512 digest of a message
		return partial(message)()
	else
		-- Return function for chunk-by-chunk loading
		-- User should feed every chunk of input data as single argument to this function and finally get SHA512 digest by invoking this function without an argument
		return partial
	end
end


local function md5(message)
	-- Create an instance (private objects for current calculation)
	local H, length, tail = {unpack(md5_sha1_H, 1, 4)}, 0.0, ""

	local function partial(message_part)
		if message_part then
			if tail then
				length = length + #message_part
				local offs = 0
				if tail ~= "" and #tail + #message_part >= 64 then
					offs = 64 - #tail
					md5_feed_64(H, tail..sub(message_part, 1, offs), 0, 64)
					tail = ""
				end
				local size = #message_part - offs
				local size_tail = size % 64
				md5_feed_64(H, message_part, offs, size - size_tail)
				tail = tail..sub(message_part, #message_part + 1 - size_tail)
				return partial
			else
				error("Adding more chunks is not allowed after receiving the result", 2)
			end
		else
			if tail then
				local final_blocks = {tail, "\128", string_rep("\0", (-9 - length) % 64)}
				tail = nil
				length = length * 8  -- convert "byte-counter" to "bit-counter"
				for j = 4, 11 do
					local low_byte = length % 256
					final_blocks[j] = char(low_byte)
					length = (length - low_byte) / 256
				end
				final_blocks = table_concat(final_blocks)
				md5_feed_64(H, final_blocks, 0, #final_blocks)
				for j = 1, 4 do
					H[j] = HEX(H[j])
				end
				H = gsub(table_concat(H), "(..)(..)(..)(..)", "%4%3%2%1")
			end
			return H
		end
	end

	if message then
		-- Actually perform calculations and return the MD5 digest of a message
		return partial(message)()
	else
		-- Return function for chunk-by-chunk loading
		-- User should feed every chunk of input data as single argument to this function and finally get MD5 digest by invoking this function without an argument
		return partial
	end
end


local function sha1(message)
	-- Create an instance (private objects for current calculation)
	local H, length, tail = {unpack(md5_sha1_H)}, 0.0, ""

	local function partial(message_part)
		if message_part then
			if tail then
				length = length + #message_part
				local offs = 0
				if tail ~= "" and #tail + #message_part >= 64 then
					offs = 64 - #tail
					sha1_feed_64(H, tail..sub(message_part, 1, offs), 0, 64)
					tail = ""
				end
				local size = #message_part - offs
				local size_tail = size % 64
				sha1_feed_64(H, message_part, offs, size - size_tail)
				tail = tail..sub(message_part, #message_part + 1 - size_tail)
				return partial
			else
				error("Adding more chunks is not allowed after receiving the result", 2)
			end
		else
			if tail then
				local final_blocks = {tail, "\128", string_rep("\0", (-9 - length) % 64 + 1)}
				tail = nil
				-- Assuming user data length is shorter than (2^53)-9 bytes
				-- 2^53 bytes = 2^56 bits, so "bit-counter" fits in 7 bytes
				length = length * (8 / 256^7)  -- convert "byte-counter" to "bit-counter" and move decimal point to the left
				for j = 4, 10 do
					length = length % 1 * 256
					final_blocks[j] = char(floor(length))
				end
				final_blocks = table_concat(final_blocks)
				sha1_feed_64(H, final_blocks, 0, #final_blocks)
				for j = 1, 5 do
					H[j] = HEX(H[j])
				end
				H = table_concat(H)
			end
			return H
		end
	end

	if message then
		-- Actually perform calculations and return the SHA-1 digest of a message
		return partial(message)()
	else
		-- Return function for chunk-by-chunk loading
		-- User should feed every chunk of input data as single argument to this function and finally get SHA-1 digest by invoking this function without an argument
		return partial
	end
end


local function keccak(block_size_in_bytes, digest_size_in_bytes, is_SHAKE, message)
	-- "block_size_in_bytes" is multiple of 8
	if type(digest_size_in_bytes) ~= "number" then
		-- arguments in SHAKE are swapped:
		--    NIST FIPS 202 defines SHAKE(message,num_bits)
		--    this module   defines SHAKE(num_bytes,message)
		-- it's easy to forget about this swap, hence the check
		error("Argument 'digest_size_in_bytes' must be a number", 2)
	end
	-- Create an instance (private objects for current calculation)
	local tail, lanes_lo, lanes_hi = "", create_array_of_lanes(), hi_factor_keccak == 0 and create_array_of_lanes()
	local result

	local function partial(message_part)
		if message_part then
			if tail then
				local offs = 0
				if tail ~= "" and #tail + #message_part >= block_size_in_bytes then
					offs = block_size_in_bytes - #tail
					keccak_feed(lanes_lo, lanes_hi, tail..sub(message_part, 1, offs), 0, block_size_in_bytes, block_size_in_bytes)
					tail = ""
				end
				local size = #message_part - offs
				local size_tail = size % block_size_in_bytes
				keccak_feed(lanes_lo, lanes_hi, message_part, offs, size - size_tail, block_size_in_bytes)
				tail = tail..sub(message_part, #message_part + 1 - size_tail)
				return partial
			else
				error("Adding more chunks is not allowed after receiving the result", 2)
			end
		else
			if tail then
				-- append the following bits to the message: for usual SHA-3: 011(0*)1, for SHAKE: 11111(0*)1
				local gap_start = is_SHAKE and 31 or 6
				tail = tail..(#tail + 1 == block_size_in_bytes and char(gap_start + 128) or char(gap_start)..string_rep("\0", (-2 - #tail) % block_size_in_bytes).."\128")
				keccak_feed(lanes_lo, lanes_hi, tail, 0, #tail, block_size_in_bytes)
				tail = nil
				local lanes_used = 0
				local total_lanes = floor(block_size_in_bytes / 8)
				local qwords = {}

				local function get_next_qwords_of_digest(qwords_qty)
					-- returns not more than 'qwords_qty' qwords ('qwords_qty' might be non-integer)
					-- doesn't go across keccak-buffer boundary
					-- block_size_in_bytes is a multiple of 8, so, keccak-buffer contains integer number of qwords
					if lanes_used >= total_lanes then
						keccak_feed(lanes_lo, lanes_hi, "\0\0\0\0\0\0\0\0", 0, 8, 8)
						lanes_used = 0
					end
					qwords_qty = floor(math_min(qwords_qty, total_lanes - lanes_used))
					if hi_factor_keccak ~= 0 then
						for j = 1, qwords_qty do
							qwords[j] = HEX64(lanes_lo[lanes_used + j - 1 + lanes_index_base])
						end
					else
						for j = 1, qwords_qty do
							qwords[j] = HEX(lanes_hi[lanes_used + j])..HEX(lanes_lo[lanes_used + j])
						end
					end
					lanes_used = lanes_used + qwords_qty
					return
						gsub(table_concat(qwords, "", 1, qwords_qty), "(..)(..)(..)(..)(..)(..)(..)(..)", "%8%7%6%5%4%3%2%1"),
					qwords_qty * 8
				end

				local parts = {}      -- digest parts
				local last_part, last_part_size = "", 0

				local function get_next_part_of_digest(bytes_needed)
					-- returns 'bytes_needed' bytes, for arbitrary integer 'bytes_needed'
					bytes_needed = bytes_needed or 1
					if bytes_needed <= last_part_size then
						last_part_size = last_part_size - bytes_needed
						local part_size_in_nibbles = bytes_needed * 2
						local result = sub(last_part, 1, part_size_in_nibbles)
						last_part = sub(last_part, part_size_in_nibbles + 1)
						return result
					end
					local parts_qty = 0
					if last_part_size > 0 then
						parts_qty = 1
						parts[parts_qty] = last_part
						bytes_needed = bytes_needed - last_part_size
					end
					-- repeats until the length is enough
					while bytes_needed >= 8 do
						local next_part, next_part_size = get_next_qwords_of_digest(bytes_needed / 8)
						parts_qty = parts_qty + 1
						parts[parts_qty] = next_part
						bytes_needed = bytes_needed - next_part_size
					end
					if bytes_needed > 0 then
						last_part, last_part_size = get_next_qwords_of_digest(1)
						parts_qty = parts_qty + 1
						parts[parts_qty] = get_next_part_of_digest(bytes_needed)
					else
						last_part, last_part_size = "", 0
					end
					return table_concat(parts, "", 1, parts_qty)
				end

				if digest_size_in_bytes < 0 then
					result = get_next_part_of_digest
				else
					result = get_next_part_of_digest(digest_size_in_bytes)
				end
			end
			return result
		end
	end

	if message then
		-- Actually perform calculations and return the SHA-3 digest of a message
		return partial(message)()
	else
		-- Return function for chunk-by-chunk loading
		-- User should feed every chunk of input data as single argument to this function and finally get SHA-3 digest by invoking this function without an argument
		return partial
	end
end


local hex_to_bin, bin_to_hex, bin_to_base64, base64_to_bin
do
	function hex_to_bin(hex_string)
		return (gsub(hex_string, "%x%x",
			function (hh)
				return char(tonumber(hh, 16))
			end
			))
	end

	function bin_to_hex(binary_string)
		return (gsub(binary_string, ".",
			function (c)
				return string_format("%02x", byte(c))
			end
			))
	end

	local base64_symbols = {
		['+'] = 62, ['-'] = 62,  [62] = '+',
		['/'] = 63, ['_'] = 63,  [63] = '/',
		['='] = -1, ['.'] = -1,  [-1] = '='
	}
	local symbol_index = 0
	for j, pair in ipairs{'AZ', 'az', '09'} do
		for ascii = byte(pair), byte(pair, 2) do
			local ch = char(ascii)
			base64_symbols[ch] = symbol_index
			base64_symbols[symbol_index] = ch
			symbol_index = symbol_index + 1
		end
	end

	function bin_to_base64(binary_string)
		local result = {}
		for pos = 1, #binary_string, 3 do
			local c1, c2, c3, c4 = byte(sub(binary_string, pos, pos + 2)..'\0', 1, -1)
			result[#result + 1] =
				base64_symbols[floor(c1 / 4)]
				..base64_symbols[c1 % 4 * 16 + floor(c2 / 16)]
				..base64_symbols[c3 and c2 % 16 * 4 + floor(c3 / 64) or -1]
				..base64_symbols[c4 and c3 % 64 or -1]
		end
		return table_concat(result)
	end

	function base64_to_bin(base64_string)
		local result, chars_qty = {}, 3
		for pos, ch in gmatch(gsub(base64_string, '%s+', ''), '()(.)') do
			local code = base64_symbols[ch]
			if code < 0 then
				chars_qty = chars_qty - 1
				code = 0
			end
			local idx = pos % 4
			if idx > 0 then
				result[-idx] = code
			else
				local c1 = result[-1] * 4 + floor(result[-2] / 16)
				local c2 = (result[-2] % 16) * 16 + floor(result[-3] / 4)
				local c3 = (result[-3] % 4) * 64 + code
				result[#result + 1] = sub(char(c1, c2, c3), 1, chars_qty)
			end
		end
		return table_concat(result)
	end

end


local block_size_for_HMAC  -- this table will be initialized at the end of the module

local function pad_and_xor(str, result_length, byte_for_xor)
	return gsub(str, ".",
		function(c)
			return char(XOR_BYTE(byte(c), byte_for_xor))
		end
	)..string_rep(char(byte_for_xor), result_length - #str)
end

local function hmac(hash_func, key, message)
	-- Create an instance (private objects for current calculation)
	local block_size = block_size_for_HMAC[hash_func]
	if not block_size then
		error("Unknown hash function", 2)
	end
	if #key > block_size then
		key = hex_to_bin(hash_func(key))
	end
	local append = hash_func()(pad_and_xor(key, block_size, 0x36))
	local result

	local function partial(message_part)
		if not message_part then
			result = result or hash_func(pad_and_xor(key, block_size, 0x5C)..hex_to_bin(append()))
			return result
		elseif result then
			error("Adding more chunks is not allowed after receiving the result", 2)
		else
			append(message_part)
			return partial
		end
	end

	if message then
		-- Actually perform calculations and return the HMAC of a message
		return partial(message)()
	else
		-- Return function for chunk-by-chunk loading of a message
		-- User should feed every chunk of the message as single argument to this function and finally get HMAC by invoking this function without an argument
		return partial
	end
end


local function xor_blake2_salt(salt, letter, H_lo, H_hi)
	-- salt: concatenation of "Salt"+"Personalization" fields
	local max_size = letter == "s" and 16 or 32
	local salt_size = #salt
	if salt_size > max_size then
		error(string_format("For BLAKE2%s/BLAKE2%sp/BLAKE2X%s the 'salt' parameter length must not exceed %d bytes", letter, letter, letter, max_size), 2)
	end
	if H_lo then
		local offset, blake2_word_size, xor = 0, letter == "s" and 4 or 8, letter == "s" and XOR or XORA5
		for j = 5, 4 + ceil(salt_size / blake2_word_size) do
			local prev, last
			for _ = 1, blake2_word_size, 4 do
				offset = offset + 4
				local a, b, c, d = byte(salt, offset - 3, offset)
				local four_bytes = (((d or 0) * 256 + (c or 0)) * 256 + (b or 0)) * 256 + (a or 0)
				prev, last = last, four_bytes
			end
			H_lo[j] = xor(H_lo[j], prev and last * hi_factor + prev or last)
			if H_hi then
				H_hi[j] = xor(H_hi[j], last)
			end
		end
	end
end

local function blake2s(message, key, salt, digest_size_in_bytes, XOF_length, B2_offset)
	-- message:  binary string to be hashed (or nil for "chunk-by-chunk" input mode)
	-- key:      (optional) binary string up to 32 bytes, by default empty string
	-- salt:     (optional) binary string up to 16 bytes, by default empty string
	-- digest_size_in_bytes: (optional) integer from 1 to 32, by default 32
	-- The last two parameters "XOF_length" and "B2_offset" are for internal use only, user must omit them (or pass nil)
	digest_size_in_bytes = digest_size_in_bytes or 32
	if digest_size_in_bytes < 1 or digest_size_in_bytes > 32 then
		error("BLAKE2s digest length must be from 1 to 32 bytes", 2)
	end
	key = key or ""
	local key_length = #key
	if key_length > 32 then
		error("BLAKE2s key length must not exceed 32 bytes", 2)
	end
	salt = salt or ""
	local bytes_compressed, tail, H = 0.0, "", {unpack(sha2_H_hi)}
	if B2_offset then
		H[1] = XOR(H[1], digest_size_in_bytes)
		H[2] = XOR(H[2], 0x20)
		H[3] = XOR(H[3], B2_offset)
		H[4] = XOR(H[4], 0x20000000 + XOF_length)
	else
		H[1] = XOR(H[1], 0x01010000 + key_length * 256 + digest_size_in_bytes)
		if XOF_length then
			H[4] = XOR(H[4], XOF_length)
		end
	end
	if salt ~= "" then
		xor_blake2_salt(salt, "s", H)
	end

	local function partial(message_part)
		if message_part then
			if tail then
				local offs = 0
				if tail ~= "" and #tail + #message_part > 64 then
					offs = 64 - #tail
					bytes_compressed = blake2s_feed_64(H, tail..sub(message_part, 1, offs), 0, 64, bytes_compressed)
					tail = ""
				end
				local size = #message_part - offs
				local size_tail = size > 0 and (size - 1) % 64 + 1 or 0
				bytes_compressed = blake2s_feed_64(H, message_part, offs, size - size_tail, bytes_compressed)
				tail = tail..sub(message_part, #message_part + 1 - size_tail)
				return partial
			else
				error("Adding more chunks is not allowed after receiving the result", 2)
			end
		else
			if tail then
				if B2_offset then
					blake2s_feed_64(H, nil, 0, 64, 0, 32)
				else
					blake2s_feed_64(H, tail..string_rep("\0", 64 - #tail), 0, 64, bytes_compressed, #tail)
				end
				tail = nil
				if not XOF_length or B2_offset then
					local max_reg = ceil(digest_size_in_bytes / 4)
					for j = 1, max_reg do
						H[j] = HEX(H[j])
					end
					H = sub(gsub(table_concat(H, "", 1, max_reg), "(..)(..)(..)(..)", "%4%3%2%1"), 1, digest_size_in_bytes * 2)
				end
			end
			return H
		end
	end

	if key_length > 0 then
		partial(key..string_rep("\0", 64 - key_length))
	end
	if B2_offset then
		return partial()
	elseif message then
		-- Actually perform calculations and return the BLAKE2s digest of a message
		return partial(message)()
	else
		-- Return function for chunk-by-chunk loading
		-- User should feed every chunk of input data as single argument to this function and finally get BLAKE2s digest by invoking this function without an argument
		return partial
	end
end

local function blake2b(message, key, salt, digest_size_in_bytes, XOF_length, B2_offset)
	-- message:  binary string to be hashed (or nil for "chunk-by-chunk" input mode)
	-- key:      (optional) binary string up to 64 bytes, by default empty string
	-- salt:     (optional) binary string up to 32 bytes, by default empty string
	-- digest_size_in_bytes: (optional) integer from 1 to 64, by default 64
	-- The last two parameters "XOF_length" and "B2_offset" are for internal use only, user must omit them (or pass nil)
	digest_size_in_bytes = floor(digest_size_in_bytes or 64)
	if digest_size_in_bytes < 1 or digest_size_in_bytes > 64 then
		error("BLAKE2b digest length must be from 1 to 64 bytes", 2)
	end
	key = key or ""
	local key_length = #key
	if key_length > 64 then
		error("BLAKE2b key length must not exceed 64 bytes", 2)
	end
	salt = salt or ""
	local bytes_compressed, tail, H_lo, H_hi = 0.0, "", {unpack(sha2_H_lo)}, not HEX64 and {unpack(sha2_H_hi)}
	if B2_offset then
		if H_hi then
			H_lo[1] = XORA5(H_lo[1], digest_size_in_bytes)
			H_hi[1] = XORA5(H_hi[1], 0x40)
			H_lo[2] = XORA5(H_lo[2], B2_offset)
			H_hi[2] = XORA5(H_hi[2], XOF_length)
		else
			H_lo[1] = XORA5(H_lo[1], 0x40 * hi_factor + digest_size_in_bytes)
			H_lo[2] = XORA5(H_lo[2], XOF_length * hi_factor + B2_offset)
		end
		H_lo[3] = XORA5(H_lo[3], 0x4000)
	else
		H_lo[1] = XORA5(H_lo[1], 0x01010000 + key_length * 256 + digest_size_in_bytes)
		if XOF_length then
			if H_hi then
				H_hi[2] = XORA5(H_hi[2], XOF_length)
			else
				H_lo[2] = XORA5(H_lo[2], XOF_length * hi_factor)
			end
		end
	end
	if salt ~= "" then
		xor_blake2_salt(salt, "b", H_lo, H_hi)
	end

	local function partial(message_part)
		if message_part then
			if tail then
				local offs = 0
				if tail ~= "" and #tail + #message_part > 128 then
					offs = 128 - #tail
					bytes_compressed = blake2b_feed_128(H_lo, H_hi, tail..sub(message_part, 1, offs), 0, 128, bytes_compressed)
					tail = ""
				end
				local size = #message_part - offs
				local size_tail = size > 0 and (size - 1) % 128 + 1 or 0
				bytes_compressed = blake2b_feed_128(H_lo, H_hi, message_part, offs, size - size_tail, bytes_compressed)
				tail = tail..sub(message_part, #message_part + 1 - size_tail)
				return partial
			else
				error("Adding more chunks is not allowed after receiving the result", 2)
			end
		else
			if tail then
				if B2_offset then
					blake2b_feed_128(H_lo, H_hi, nil, 0, 128, 0, 64)
				else
					blake2b_feed_128(H_lo, H_hi, tail..string_rep("\0", 128 - #tail), 0, 128, bytes_compressed, #tail)
				end
				tail = nil
				if XOF_length and not B2_offset then
					if H_hi then
						for j = 8, 1, -1 do
							H_lo[j*2] = H_hi[j]
							H_lo[j*2-1] = H_lo[j]
						end
						return H_lo, 16
					end
				else
					local max_reg = ceil(digest_size_in_bytes / 8)
					if H_hi then
						for j = 1, max_reg do
							H_lo[j] = HEX(H_hi[j])..HEX(H_lo[j])
						end
					else
						for j = 1, max_reg do
							H_lo[j] = HEX64(H_lo[j])
						end
					end
					H_lo = sub(gsub(table_concat(H_lo, "", 1, max_reg), "(..)(..)(..)(..)(..)(..)(..)(..)", "%8%7%6%5%4%3%2%1"), 1, digest_size_in_bytes * 2)
				end
				H_hi = nil
			end
			return H_lo
		end
	end

	if key_length > 0 then
		partial(key..string_rep("\0", 128 - key_length))
	end
	if B2_offset then
		return partial()
	elseif message then
		-- Actually perform calculations and return the BLAKE2b digest of a message
		return partial(message)()
	else
		-- Return function for chunk-by-chunk loading
		-- User should feed every chunk of input data as single argument to this function and finally get BLAKE2b digest by invoking this function without an argument
		return partial
	end
end

local function blake2sp(message, key, salt, digest_size_in_bytes)
	-- message:  binary string to be hashed (or nil for "chunk-by-chunk" input mode)
	-- key:      (optional) binary string up to 32 bytes, by default empty string
	-- salt:     (optional) binary string up to 16 bytes, by default empty string
	-- digest_size_in_bytes: (optional) integer from 1 to 32, by default 32
	digest_size_in_bytes = digest_size_in_bytes or 32
	if digest_size_in_bytes < 1 or digest_size_in_bytes > 32 then
		error("BLAKE2sp digest length must be from 1 to 32 bytes", 2)
	end
	key = key or ""
	local key_length = #key
	if key_length > 32 then
		error("BLAKE2sp key length must not exceed 32 bytes", 2)
	end
	salt = salt or ""
	local instances, length, first_dword_of_parameter_block, result = {}, 0.0, 0x02080000 + key_length * 256 + digest_size_in_bytes
	for j = 1, 8 do
		local bytes_compressed, tail, H = 0.0, "", {unpack(sha2_H_hi)}
		instances[j] = {bytes_compressed, tail, H}
		H[1] = XOR(H[1], first_dword_of_parameter_block)
		H[3] = XOR(H[3], j-1)
		H[4] = XOR(H[4], 0x20000000)
		if salt ~= "" then
			xor_blake2_salt(salt, "s", H)
		end
	end

	local function partial(message_part)
		if message_part then
			if instances then
				local from = 0
				while true do
					local to = math_min(from + 64 - length % 64, #message_part)
					if to > from then
						local inst = instances[floor(length / 64) % 8 + 1]
						local part = sub(message_part, from + 1, to)
						length, from = length + to - from, to
						local bytes_compressed, tail = inst[1], inst[2]
						if #tail < 64 then
							tail = tail..part
						else
							local H = inst[3]
							bytes_compressed = blake2s_feed_64(H, tail, 0, 64, bytes_compressed)
							tail = part
						end
						inst[1], inst[2] = bytes_compressed, tail
					else
						break
					end
				end
				return partial
			else
				error("Adding more chunks is not allowed after receiving the result", 2)
			end
		else
			if instances then
				local root_H = {unpack(sha2_H_hi)}
				root_H[1] = XOR(root_H[1], first_dword_of_parameter_block)
				root_H[4] = XOR(root_H[4], 0x20010000)
				if salt ~= "" then
					xor_blake2_salt(salt, "s", root_H)
				end
				for j = 1, 8 do
					local inst = instances[j]
					local bytes_compressed, tail, H = inst[1], inst[2], inst[3]
					blake2s_feed_64(H, tail..string_rep("\0", 64 - #tail), 0, 64, bytes_compressed, #tail, j == 8)
					if j % 2 == 0 then
						local index = 0
						for k = j - 1, j do
							local inst = instances[k]
							local H = inst[3]
							for i = 1, 8 do
								index = index + 1
								common_W_blake2s[index] = H[i]
							end
						end
						blake2s_feed_64(root_H, nil, 0, 64, 64 * (j/2 - 1), j == 8 and 64, j == 8)
					end
				end
				instances = nil
				local max_reg = ceil(digest_size_in_bytes / 4)
				for j = 1, max_reg do
					root_H[j] = HEX(root_H[j])
				end
				result = sub(gsub(table_concat(root_H, "", 1, max_reg), "(..)(..)(..)(..)", "%4%3%2%1"), 1, digest_size_in_bytes * 2)
			end
			return result
		end
	end

	if key_length > 0 then
		key = key..string_rep("\0", 64 - key_length)
		for j = 1, 8 do
			partial(key)
		end
	end
	if message then
		-- Actually perform calculations and return the BLAKE2sp digest of a message
		return partial(message)()
	else
		-- Return function for chunk-by-chunk loading
		-- User should feed every chunk of input data as single argument to this function and finally get BLAKE2sp digest by invoking this function without an argument
		return partial
	end

end

local function blake2bp(message, key, salt, digest_size_in_bytes)
	-- message:  binary string to be hashed (or nil for "chunk-by-chunk" input mode)
	-- key:      (optional) binary string up to 64 bytes, by default empty string
	-- salt:     (optional) binary string up to 32 bytes, by default empty string
	-- digest_size_in_bytes: (optional) integer from 1 to 64, by default 64
	digest_size_in_bytes = digest_size_in_bytes or 64
	if digest_size_in_bytes < 1 or digest_size_in_bytes > 64 then
		error("BLAKE2bp digest length must be from 1 to 64 bytes", 2)
	end
	key = key or ""
	local key_length = #key
	if key_length > 64 then
		error("BLAKE2bp key length must not exceed 64 bytes", 2)
	end
	salt = salt or ""
	local instances, length, first_dword_of_parameter_block, result = {}, 0.0, 0x02040000 + key_length * 256 + digest_size_in_bytes
	for j = 1, 4 do
		local bytes_compressed, tail, H_lo, H_hi = 0.0, "", {unpack(sha2_H_lo)}, not HEX64 and {unpack(sha2_H_hi)}
		instances[j] = {bytes_compressed, tail, H_lo, H_hi}
		H_lo[1] = XORA5(H_lo[1], first_dword_of_parameter_block)
		H_lo[2] = XORA5(H_lo[2], j-1)
		H_lo[3] = XORA5(H_lo[3], 0x4000)
		if salt ~= "" then
			xor_blake2_salt(salt, "b", H_lo, H_hi)
		end
	end

	local function partial(message_part)
		if message_part then
			if instances then
				local from = 0
				while true do
					local to = math_min(from + 128 - length % 128, #message_part)
					if to > from then
						local inst = instances[floor(length / 128) % 4 + 1]
						local part = sub(message_part, from + 1, to)
						length, from = length + to - from, to
						local bytes_compressed, tail = inst[1], inst[2]
						if #tail < 128 then
							tail = tail..part
						else
							local H_lo, H_hi = inst[3], inst[4]
							bytes_compressed = blake2b_feed_128(H_lo, H_hi, tail, 0, 128, bytes_compressed)
							tail = part
						end
						inst[1], inst[2] = bytes_compressed, tail
					else
						break
					end
				end
				return partial
			else
				error("Adding more chunks is not allowed after receiving the result", 2)
			end
		else
			if instances then
				local root_H_lo, root_H_hi = {unpack(sha2_H_lo)}, not HEX64 and {unpack(sha2_H_hi)}
				root_H_lo[1] = XORA5(root_H_lo[1], first_dword_of_parameter_block)
				root_H_lo[3] = XORA5(root_H_lo[3], 0x4001)
				if salt ~= "" then
					xor_blake2_salt(salt, "b", root_H_lo, root_H_hi)
				end
				for j = 1, 4 do
					local inst = instances[j]
					local bytes_compressed, tail, H_lo, H_hi = inst[1], inst[2], inst[3], inst[4]
					blake2b_feed_128(H_lo, H_hi, tail..string_rep("\0", 128 - #tail), 0, 128, bytes_compressed, #tail, j == 4)
					if j % 2 == 0 then
						local index = 0
						for k = j - 1, j do
							local inst = instances[k]
							local H_lo, H_hi = inst[3], inst[4]
							for i = 1, 8 do
								index = index + 1
								common_W_blake2b[index] = H_lo[i]
								if H_hi then
									index = index + 1
									common_W_blake2b[index] = H_hi[i]
								end
							end
						end
						blake2b_feed_128(root_H_lo, root_H_hi, nil, 0, 128, 128 * (j/2 - 1), j == 4 and 128, j == 4)
					end
				end
				instances = nil
				local max_reg = ceil(digest_size_in_bytes / 8)
				if HEX64 then
					for j = 1, max_reg do
						root_H_lo[j] = HEX64(root_H_lo[j])
					end
				else
					for j = 1, max_reg do
						root_H_lo[j] = HEX(root_H_hi[j])..HEX(root_H_lo[j])
					end
				end
				result = sub(gsub(table_concat(root_H_lo, "", 1, max_reg), "(..)(..)(..)(..)(..)(..)(..)(..)", "%8%7%6%5%4%3%2%1"), 1, digest_size_in_bytes * 2)
			end
			return result
		end
	end

	if key_length > 0 then
		key = key..string_rep("\0", 128 - key_length)
		for j = 1, 4 do
			partial(key)
		end
	end
	if message then
		-- Actually perform calculations and return the BLAKE2bp digest of a message
		return partial(message)()
	else
		-- Return function for chunk-by-chunk loading
		-- User should feed every chunk of input data as single argument to this function and finally get BLAKE2bp digest by invoking this function without an argument
		return partial
	end

end

local function blake2x(inner_func, inner_func_letter, common_W_blake2, block_size, digest_size_in_bytes, message, key, salt)
	local XOF_digest_length_limit, XOF_digest_length, chunk_by_chunk_output = 2^(block_size / 2) - 1
	if digest_size_in_bytes == -1 then  -- infinite digest
		digest_size_in_bytes = math_huge
		XOF_digest_length = floor(XOF_digest_length_limit)
		chunk_by_chunk_output = true
	else
		if digest_size_in_bytes < 0 then
			digest_size_in_bytes = -1.0 * digest_size_in_bytes
			chunk_by_chunk_output = true
		end
		XOF_digest_length = floor(digest_size_in_bytes)
		if XOF_digest_length >= XOF_digest_length_limit then
			error("Requested digest is too long.  BLAKE2X"..inner_func_letter.." finite digest is limited by (2^"..floor(block_size / 2)..")-2 bytes.  Hint: you can generate infinite digest.", 2)
		end
	end
	salt = salt or ""
	if salt ~= "" then
		xor_blake2_salt(salt, inner_func_letter)  -- don't xor, only check the size of salt
	end
	local inner_partial = inner_func(nil, key, salt, nil, XOF_digest_length)
	local result

	local function partial(message_part)
		if message_part then
			if inner_partial then
				inner_partial(message_part)
				return partial
			else
				error("Adding more chunks is not allowed after receiving the result", 2)
			end
		else
			if inner_partial then
				local half_W, half_W_size = inner_partial()
				half_W_size, inner_partial = half_W_size or 8

				local function get_hash_block(block_no)
					-- block_no = 0...(2^32-1)
					local size = math_min(block_size, digest_size_in_bytes - block_no * block_size)
					if size <= 0 then
						return ""
					end
					for j = 1, half_W_size do
						common_W_blake2[j] = half_W[j]
					end
					for j = half_W_size + 1, 2 * half_W_size do
						common_W_blake2[j] = 0
					end
					return inner_func(nil, nil, salt, size, XOF_digest_length, floor(block_no))
				end

				local hash = {}
				if chunk_by_chunk_output then
					local pos, period, cached_block_no, cached_block = 0, block_size * 2^32

					local function get_next_part_of_digest(arg1, arg2)
						if arg1 == "seek" then
							-- Usage #1:  get_next_part_of_digest("seek", new_pos)
							pos = arg2 % period
						else
							-- Usage #2:  hex_string = get_next_part_of_digest(size)
							local size, index = arg1 or 1, 0
							while size > 0 do
								local block_offset = pos % block_size
								local block_no = (pos - block_offset) / block_size
								local part_size = math_min(size, block_size - block_offset)
								if cached_block_no ~= block_no then
									cached_block_no = block_no
									cached_block = get_hash_block(block_no)
								end
								index = index + 1
								hash[index] = sub(cached_block, block_offset * 2 + 1, (block_offset + part_size) * 2)
								size = size - part_size
								pos = (pos + part_size) % period
							end
							return table_concat(hash, "", 1, index)
						end
					end

					result = get_next_part_of_digest
				else
					for j = 1.0, ceil(digest_size_in_bytes / block_size) do
						hash[j] = get_hash_block(j - 1.0)
					end
					result = table_concat(hash)
				end
			end
			return result
		end
	end

	if message then
		-- Actually perform calculations and return the BLAKE2X digest of a message
		return partial(message)()
	else
		-- Return function for chunk-by-chunk loading
		-- User should feed every chunk of input data as single argument to this function and finally get BLAKE2X digest by invoking this function without an argument
		return partial
	end
end

local function blake2xs(digest_size_in_bytes, message, key, salt)
	-- digest_size_in_bytes:
	--    0..65534       = get finite digest as single Lua string
	--    (-1)           = get infinite digest in "chunk-by-chunk" output mode
	--    (-2)..(-65534) = get finite digest in "chunk-by-chunk" output mode
	-- message:  binary string to be hashed (or nil for "chunk-by-chunk" input mode)
	-- key:      (optional) binary string up to 32 bytes, by default empty string
	-- salt:     (optional) binary string up to 16 bytes, by default empty string
	return blake2x(blake2s, "s", common_W_blake2s, 32, digest_size_in_bytes, message, key, salt)
end

local function blake2xb(digest_size_in_bytes, message, key, salt)
	-- digest_size_in_bytes:
	--    0..4294967294       = get finite digest as single Lua string
	--    (-1)                = get infinite digest in "chunk-by-chunk" output mode
	--    (-2)..(-4294967294) = get finite digest in "chunk-by-chunk" output mode
	-- message:  binary string to be hashed (or nil for "chunk-by-chunk" input mode)
	-- key:      (optional) binary string up to 64 bytes, by default empty string
	-- salt:     (optional) binary string up to 32 bytes, by default empty string
	return blake2x(blake2b, "b", common_W_blake2b, 64, digest_size_in_bytes, message, key, salt)
end


local function blake3(message, key, digest_size_in_bytes, message_flags, K, return_array)
	-- message:  binary string to be hashed (or nil for "chunk-by-chunk" input mode)
	-- key:      (optional) binary string up to 32 bytes, by default empty string
	-- digest_size_in_bytes: (optional) by default 32
	--    0,1,2,3,4,...  = get finite digest as single Lua string
	--    (-1)           = get infinite digest in "chunk-by-chunk" output mode
	--    -2,-3,-4,...   = get finite digest in "chunk-by-chunk" output mode
	-- The last three parameters "message_flags", "K" and "return_array" are for internal use only, user must omit them (or pass nil)
	key = key or ""
	digest_size_in_bytes = digest_size_in_bytes or 32
	message_flags = message_flags or 0
	if key == "" then
		K = K or sha2_H_hi
	else
		local key_length = #key
		if key_length > 32 then
			error("BLAKE3 key length must not exceed 32 bytes", 2)
		end
		key = key..string_rep("\0", 32 - key_length)
		K = {}
		for j = 1, 8 do
			local a, b, c, d = byte(key, 4*j-3, 4*j)
			K[j] = ((d * 256 + c) * 256 + b) * 256 + a
		end
		message_flags = message_flags + 16  -- flag:KEYED_HASH
	end
	local tail, H, chunk_index, blocks_in_chunk, stack_size, stack = "", {}, 0, 0, 0, {}
	local final_H_in, final_block_length, chunk_by_chunk_output, result, wide_output = K
	local final_compression_flags = 3      -- flags:CHUNK_START,CHUNK_END

	local function feed_blocks(str, offs, size)
		-- size >= 0, size is multiple of 64
		while size > 0 do
			local part_size_in_blocks, block_flags, H_in = 1, 0, H
			if blocks_in_chunk == 0 then
				block_flags = 1               -- flag:CHUNK_START
				H_in, final_H_in = K, H
				final_compression_flags = 2   -- flag:CHUNK_END
			elseif blocks_in_chunk == 15 then
				block_flags = 2               -- flag:CHUNK_END
				final_compression_flags = 3   -- flags:CHUNK_START,CHUNK_END
				final_H_in = K
			else
				part_size_in_blocks = math_min(size / 64, 15 - blocks_in_chunk)
			end
			local part_size = part_size_in_blocks * 64
			blake3_feed_64(str, offs, part_size, message_flags + block_flags, chunk_index, H_in, H)
			offs, size = offs + part_size, size - part_size
			blocks_in_chunk = (blocks_in_chunk + part_size_in_blocks) % 16
			if blocks_in_chunk == 0 then
				-- completing the currect chunk
				chunk_index = chunk_index + 1.0
				local divider = 2.0
				while chunk_index % divider == 0 do
					divider = divider * 2.0
					stack_size = stack_size - 8
					for j = 1, 8 do
						common_W_blake2s[j] = stack[stack_size + j]
					end
					for j = 1, 8 do
						common_W_blake2s[j + 8] = H[j]
					end
					blake3_feed_64(nil, 0, 64, message_flags + 4, 0, K, H)  -- flag:PARENT
				end
				for j = 1, 8 do
					stack[stack_size + j] = H[j]
				end
				stack_size = stack_size + 8
			end
		end
	end

	local function get_hash_block(block_no)
		local size = math_min(64, digest_size_in_bytes - block_no * 64)
		if block_no < 0 or size <= 0 then
			return ""
		end
		if chunk_by_chunk_output then
			for j = 1, 16 do
				common_W_blake2s[j] = stack[j + 16]
			end
		end
		blake3_feed_64(nil, 0, 64, final_compression_flags, block_no, final_H_in, stack, wide_output, final_block_length)
		if return_array then
			return stack
		end
		local max_reg = ceil(size / 4)
		for j = 1, max_reg do
			stack[j] = HEX(stack[j])
		end
		return sub(gsub(table_concat(stack, "", 1, max_reg), "(..)(..)(..)(..)", "%4%3%2%1"), 1, size * 2)
	end

	local function partial(message_part)
		if message_part then
			if tail then
				local offs = 0
				if tail ~= "" and #tail + #message_part > 64 then
					offs = 64 - #tail
					feed_blocks(tail..sub(message_part, 1, offs), 0, 64)
					tail = ""
				end
				local size = #message_part - offs
				local size_tail = size > 0 and (size - 1) % 64 + 1 or 0
				feed_blocks(message_part, offs, size - size_tail)
				tail = tail..sub(message_part, #message_part + 1 - size_tail)
				return partial
			else
				error("Adding more chunks is not allowed after receiving the result", 2)
			end
		else
			if tail then
				final_block_length = #tail
				tail = tail..string_rep("\0", 64 - #tail)
				if common_W_blake2s[0] then
					for j = 1, 16 do
						local a, b, c, d = byte(tail, 4*j-3, 4*j)
						common_W_blake2s[j] = OR(SHL(d, 24), SHL(c, 16), SHL(b, 8), a)
					end
				else
					for j = 1, 16 do
						local a, b, c, d = byte(tail, 4*j-3, 4*j)
						common_W_blake2s[j] = ((d * 256 + c) * 256 + b) * 256 + a
					end
				end
				tail = nil
				for stack_size = stack_size - 8, 0, -8 do
					blake3_feed_64(nil, 0, 64, message_flags + final_compression_flags, chunk_index, final_H_in, H, nil, final_block_length)
					chunk_index, final_block_length, final_H_in, final_compression_flags = 0, 64, K, 4  -- flag:PARENT
					for j = 1, 8 do
						common_W_blake2s[j] = stack[stack_size + j]
					end
					for j = 1, 8 do
						common_W_blake2s[j + 8] = H[j]
					end
				end
				final_compression_flags = message_flags + final_compression_flags + 8  -- flag:ROOT
				if digest_size_in_bytes < 0 then
					if digest_size_in_bytes == -1 then  -- infinite digest
						digest_size_in_bytes = math_huge
					else
						digest_size_in_bytes = -1.0 * digest_size_in_bytes
					end
					chunk_by_chunk_output = true
					for j = 1, 16 do
						stack[j + 16] = common_W_blake2s[j]
					end
				end
				digest_size_in_bytes = math_min(2^53, digest_size_in_bytes)
				wide_output = digest_size_in_bytes > 32
				if chunk_by_chunk_output then
					local pos, cached_block_no, cached_block = 0.0

					local function get_next_part_of_digest(arg1, arg2)
						if arg1 == "seek" then
							-- Usage #1:  get_next_part_of_digest("seek", new_pos)
							pos = arg2 * 1.0
						else
							-- Usage #2:  hex_string = get_next_part_of_digest(size)
							local size, index = arg1 or 1, 32
							while size > 0 do
								local block_offset = pos % 64
								local block_no = (pos - block_offset) / 64
								local part_size = math_min(size, 64 - block_offset)
								if cached_block_no ~= block_no then
									cached_block_no = block_no
									cached_block = get_hash_block(block_no)
								end
								index = index + 1
								stack[index] = sub(cached_block, block_offset * 2 + 1, (block_offset + part_size) * 2)
								size = size - part_size
								pos = pos + part_size
							end
							return table_concat(stack, "", 33, index)
						end
					end

					result = get_next_part_of_digest
				elseif digest_size_in_bytes <= 64 then
					result = get_hash_block(0)
				else
					local last_block_no = ceil(digest_size_in_bytes / 64) - 1
					for block_no = 0.0, last_block_no do
						stack[33 + block_no] = get_hash_block(block_no)
					end
					result = table_concat(stack, "", 33, 33 + last_block_no)
				end
			end
			return result
		end
	end

	if message then
		-- Actually perform calculations and return the BLAKE3 digest of a message
		return partial(message)()
	else
		-- Return function for chunk-by-chunk loading
		-- User should feed every chunk of input data as single argument to this function and finally get BLAKE3 digest by invoking this function without an argument
		return partial
	end
end

local function blake3_derive_key(key_material, context_string, derived_key_size_in_bytes)
	-- key_material: (string) your source of entropy to derive a key from (for example, it can be a master password)
	--               set to nil for feeding the key material in "chunk-by-chunk" input mode
	-- context_string: (string) unique description of the derived key
	-- digest_size_in_bytes: (optional) by default 32
	--    0,1,2,3,4,...  = get finite derived key as single Lua string
	--    (-1)           = get infinite derived key in "chunk-by-chunk" output mode
	--    -2,-3,-4,...   = get finite derived key in "chunk-by-chunk" output mode
	if type(context_string) ~= "string" then
		error("'context_string' parameter must be a Lua string", 2)
	end
	local K = blake3(context_string, nil, nil, 32, nil, true)           -- flag:DERIVE_KEY_CONTEXT
	return blake3(key_material, nil, derived_key_size_in_bytes, 64, K)  -- flag:DERIVE_KEY_MATERIAL
end



local sha = {
	md5        = md5,                                                                                                                   -- MD5
	sha1       = sha1,                                                                                                                  -- SHA-1
	-- SHA-2 hash functions:
	sha224     = function (message)                       return sha256ext(224, message)                                           end, -- SHA-224
	sha256     = function (message)                       return sha256ext(256, message)                                           end, -- SHA-256
	sha512_224 = function (message)                       return sha512ext(224, message)                                           end, -- SHA-512/224
	sha512_256 = function (message)                       return sha512ext(256, message)                                           end, -- SHA-512/256
	sha384     = function (message)                       return sha512ext(384, message)                                           end, -- SHA-384
	sha512     = function (message)                       return sha512ext(512, message)                                           end, -- SHA-512
	-- SHA-3 hash functions:
	sha3_224   = function (message)                       return keccak((1600 - 2 * 224) / 8, 224 / 8, false, message)             end, -- SHA3-224
	sha3_256   = function (message)                       return keccak((1600 - 2 * 256) / 8, 256 / 8, false, message)             end, -- SHA3-256
	sha3_384   = function (message)                       return keccak((1600 - 2 * 384) / 8, 384 / 8, false, message)             end, -- SHA3-384
	sha3_512   = function (message)                       return keccak((1600 - 2 * 512) / 8, 512 / 8, false, message)             end, -- SHA3-512
	shake128   = function (digest_size_in_bytes, message) return keccak((1600 - 2 * 128) / 8, digest_size_in_bytes, true, message) end, -- SHAKE128
	shake256   = function (digest_size_in_bytes, message) return keccak((1600 - 2 * 256) / 8, digest_size_in_bytes, true, message) end, -- SHAKE256
	-- HMAC:
	hmac       = hmac,  -- HMAC(hash_func, key, message) is applicable to any hash function from this module except SHAKE* and BLAKE*
	-- misc utilities:
	hex_to_bin    = hex_to_bin,     -- converts hexadecimal representation to binary string
	bin_to_hex    = bin_to_hex,     -- converts binary string to hexadecimal representation
	base64_to_bin = base64_to_bin,  -- converts base64 representation to binary string
	bin_to_base64 = bin_to_base64,  -- converts binary string to base64 representation
	-- old style names for backward compatibility:
	hex2bin       = hex_to_bin,
	bin2hex       = bin_to_hex,
	base642bin    = base64_to_bin,
	bin2base64    = bin_to_base64,
	-- BLAKE2 hash functions:
	blake2b  = blake2b,   -- BLAKE2b (message, key, salt, digest_size_in_bytes)
	blake2s  = blake2s,   -- BLAKE2s (message, key, salt, digest_size_in_bytes)
	blake2bp = blake2bp,  -- BLAKE2bp(message, key, salt, digest_size_in_bytes)
	blake2sp = blake2sp,  -- BLAKE2sp(message, key, salt, digest_size_in_bytes)
	blake2xb = blake2xb,  -- BLAKE2Xb(digest_size_in_bytes, message, key, salt)
	blake2xs = blake2xs,  -- BLAKE2Xs(digest_size_in_bytes, message, key, salt)
	-- BLAKE2 aliases:
	blake2      = blake2b,
	blake2b_160 = function (message, key, salt) return blake2b(message, key, salt, 20) end, -- BLAKE2b-160
	blake2b_256 = function (message, key, salt) return blake2b(message, key, salt, 32) end, -- BLAKE2b-256
	blake2b_384 = function (message, key, salt) return blake2b(message, key, salt, 48) end, -- BLAKE2b-384
	blake2b_512 = blake2b,                                                      -- 64       -- BLAKE2b-512
	blake2s_128 = function (message, key, salt) return blake2s(message, key, salt, 16) end, -- BLAKE2s-128
	blake2s_160 = function (message, key, salt) return blake2s(message, key, salt, 20) end, -- BLAKE2s-160
	blake2s_224 = function (message, key, salt) return blake2s(message, key, salt, 28) end, -- BLAKE2s-224
	blake2s_256 = blake2s,                                                      -- 32       -- BLAKE2s-256
	-- BLAKE3 hash function
	blake3            = blake3,             -- BLAKE3    (message, key, digest_size_in_bytes)
	blake3_derive_key = blake3_derive_key,  -- BLAKE3_KDF(key_material, context_string, derived_key_size_in_bytes)
}


block_size_for_HMAC = {
	[sha.md5]        =  64,
	[sha.sha1]       =  64,
	[sha.sha224]     =  64,
	[sha.sha256]     =  64,
	[sha.sha512_224] = 128,
	[sha.sha512_256] = 128,
	[sha.sha384]     = 128,
	[sha.sha512]     = 128,
	[sha.sha3_224]   = 144,  -- (1600 - 2 * 224) / 8
	[sha.sha3_256]   = 136,  -- (1600 - 2 * 256) / 8
	[sha.sha3_384]   = 104,  -- (1600 - 2 * 384) / 8
	[sha.sha3_512]   =  72,  -- (1600 - 2 * 512) / 8
}


return sha]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBX5AC98E1C11B04A458E852D4D48A40727">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Base64</string>
					<string name="ScriptGuid">{20FA6DC1-86E8-4894-A77B-E2A6885AF966}</string>
					<ProtectedString name="Source"><![CDATA[--!native
--!optimize 2

local lookupValueToCharacter = buffer.create(64)
local lookupCharacterToValue = buffer.create(256)

local alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
local padding = string.byte("=")

for index = 1, 64 do
	local value = index - 1
	local character = string.byte(alphabet, index)

	buffer.writeu8(lookupValueToCharacter, value, character)
	buffer.writeu8(lookupCharacterToValue, character, value)
end

local function encode(input: buffer): buffer
	local inputLength = buffer.len(input)
	local inputChunks = math.ceil(inputLength / 3)

	local outputLength = inputChunks * 4
	local output = buffer.create(outputLength)

	-- Since we use readu32 and chunks are 3 bytes large, we can't read the last chunk here
	for chunkIndex = 1, inputChunks - 1 do
		local inputIndex = (chunkIndex - 1) * 3
		local outputIndex = (chunkIndex - 1) * 4

		local chunk = bit32.byteswap(buffer.readu32(input, inputIndex))

		-- 8 + 24 - (6 * index)
		local value1 = bit32.rshift(chunk, 26)
		local value2 = bit32.band(bit32.rshift(chunk, 20), 0b111111)
		local value3 = bit32.band(bit32.rshift(chunk, 14), 0b111111)
		local value4 = bit32.band(bit32.rshift(chunk, 8), 0b111111)

		buffer.writeu8(output, outputIndex, buffer.readu8(lookupValueToCharacter, value1))
		buffer.writeu8(output, outputIndex + 1, buffer.readu8(lookupValueToCharacter, value2))
		buffer.writeu8(output, outputIndex + 2, buffer.readu8(lookupValueToCharacter, value3))
		buffer.writeu8(output, outputIndex + 3, buffer.readu8(lookupValueToCharacter, value4))
	end

	local inputRemainder = inputLength % 3

	if inputRemainder == 1 then
		local chunk = buffer.readu8(input, inputLength - 1)

		local value1 = bit32.rshift(chunk, 2)
		local value2 = bit32.band(bit32.lshift(chunk, 4), 0b111111)

		buffer.writeu8(output, outputLength - 4, buffer.readu8(lookupValueToCharacter, value1))
		buffer.writeu8(output, outputLength - 3, buffer.readu8(lookupValueToCharacter, value2))
		buffer.writeu8(output, outputLength - 2, padding)
		buffer.writeu8(output, outputLength - 1, padding)
	elseif inputRemainder == 2 then
		local chunk = bit32.bor(
			bit32.lshift(buffer.readu8(input, inputLength - 2), 8),
			buffer.readu8(input, inputLength - 1)
		)

		local value1 = bit32.rshift(chunk, 10)
		local value2 = bit32.band(bit32.rshift(chunk, 4), 0b111111)
		local value3 = bit32.band(bit32.lshift(chunk, 2), 0b111111)

		buffer.writeu8(output, outputLength - 4, buffer.readu8(lookupValueToCharacter, value1))
		buffer.writeu8(output, outputLength - 3, buffer.readu8(lookupValueToCharacter, value2))
		buffer.writeu8(output, outputLength - 2, buffer.readu8(lookupValueToCharacter, value3))
		buffer.writeu8(output, outputLength - 1, padding)
	elseif inputRemainder == 0 and inputLength ~= 0 then
		local chunk = bit32.bor(
			bit32.lshift(buffer.readu8(input, inputLength - 3), 16),
			bit32.lshift(buffer.readu8(input, inputLength - 2), 8),
			buffer.readu8(input, inputLength - 1)
		)

		local value1 = bit32.rshift(chunk, 18)
		local value2 = bit32.band(bit32.rshift(chunk, 12), 0b111111)
		local value3 = bit32.band(bit32.rshift(chunk, 6), 0b111111)
		local value4 = bit32.band(chunk, 0b111111)

		buffer.writeu8(output, outputLength - 4, buffer.readu8(lookupValueToCharacter, value1))
		buffer.writeu8(output, outputLength - 3, buffer.readu8(lookupValueToCharacter, value2))
		buffer.writeu8(output, outputLength - 2, buffer.readu8(lookupValueToCharacter, value3))
		buffer.writeu8(output, outputLength - 1, buffer.readu8(lookupValueToCharacter, value4))
	end

	return output
end

local function decode(input: buffer): buffer
	local inputLength = buffer.len(input)
	local inputChunks = math.ceil(inputLength / 4)

	-- TODO: Support input without padding
	local inputPadding = 0
	if inputLength ~= 0 then
		if buffer.readu8(input, inputLength - 1) == padding then inputPadding += 1 end
		if buffer.readu8(input, inputLength - 2) == padding then inputPadding += 1 end
	end

	local outputLength = inputChunks * 3 - inputPadding
	local output = buffer.create(outputLength)

	for chunkIndex = 1, inputChunks - 1 do
		local inputIndex = (chunkIndex - 1) * 4
		local outputIndex = (chunkIndex - 1) * 3

		local value1 = buffer.readu8(lookupCharacterToValue, buffer.readu8(input, inputIndex))
		local value2 = buffer.readu8(lookupCharacterToValue, buffer.readu8(input, inputIndex + 1))
		local value3 = buffer.readu8(lookupCharacterToValue, buffer.readu8(input, inputIndex + 2))
		local value4 = buffer.readu8(lookupCharacterToValue, buffer.readu8(input, inputIndex + 3))

		local chunk = bit32.bor(
			bit32.lshift(value1, 18),
			bit32.lshift(value2, 12),
			bit32.lshift(value3, 6),
			value4
		)

		local character1 = bit32.rshift(chunk, 16)
		local character2 = bit32.band(bit32.rshift(chunk, 8), 0b11111111)
		local character3 = bit32.band(chunk, 0b11111111)

		buffer.writeu8(output, outputIndex, character1)
		buffer.writeu8(output, outputIndex + 1, character2)
		buffer.writeu8(output, outputIndex + 2, character3)
	end

	if inputLength ~= 0 then
		local lastInputIndex = (inputChunks - 1) * 4
		local lastOutputIndex = (inputChunks - 1) * 3

		local lastValue1 = buffer.readu8(lookupCharacterToValue, buffer.readu8(input, lastInputIndex))
		local lastValue2 = buffer.readu8(lookupCharacterToValue, buffer.readu8(input, lastInputIndex + 1))
		local lastValue3 = buffer.readu8(lookupCharacterToValue, buffer.readu8(input, lastInputIndex + 2))
		local lastValue4 = buffer.readu8(lookupCharacterToValue, buffer.readu8(input, lastInputIndex + 3))

		local lastChunk = bit32.bor(
			bit32.lshift(lastValue1, 18),
			bit32.lshift(lastValue2, 12),
			bit32.lshift(lastValue3, 6),
			lastValue4
		)

		if inputPadding <= 2 then
			local lastCharacter1 = bit32.rshift(lastChunk, 16)
			buffer.writeu8(output, lastOutputIndex, lastCharacter1)

			if inputPadding <= 1 then
				local lastCharacter2 = bit32.band(bit32.rshift(lastChunk, 8), 0b11111111)
				buffer.writeu8(output, lastOutputIndex + 1, lastCharacter2)

				if inputPadding == 0 then
					local lastCharacter3 = bit32.band(lastChunk, 0b11111111)
					buffer.writeu8(output, lastOutputIndex + 2, lastCharacter3)
				end
			end
		end
	end

	return output
end

return {
	encode = encode,
	decode = decode,
}]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBX3A9E32A0E79047BF8C23E7E338882AAD">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">XOR</string>
					<string name="ScriptGuid">{5969DA71-B859-42DC-B735-C3F84EF8054E}</string>
					<ProtectedString name="Source"><![CDATA[local XOR = {}

function XOR.xorBuffers(buf1, buf2)
	local len = math.min(buffer.len(buf1), buffer.len(buf2))
	local result = buffer.create(len)
	for i = 0, len - 1 do
		local b1 = buffer.readu8(buf1, i)
		local b2 = buffer.readu8(buf2, i)
		buffer.writeu8(result, i, bit32.bxor(b1, b2))
	end
	return result
end

function XOR.keyFromPassword(passwordBuf, length)
	local key = buffer.create(length)
	local plen = buffer.len(passwordBuf)
	for i = 0, length - 1 do
		local byte = buffer.readu8(passwordBuf, i % plen)
		buffer.writeu8(key, i, byte)
	end
	return key
end

return XOR
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBXA8B8544377E344A588BA97F78305E2B2">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">OriginalSystemPromptWORKING</string>
					<string name="ScriptGuid">{931C0F5F-E8CD-4A4F-8CC8-90E1D94789AB}</string>
					<ProtectedString name="Source"><![CDATA[local sys_prompt = [[
You are Vibe Coder, an expert Roblox Studio AI scripting agent. You run inside a Roblox Studio plugin and you edit and write full Luau scripts for the user.

You MUST use the following plain text formatting in your response, as it will be automatically parsed by the plugin:

=== ANALYSIS ===
(Describe your thinking process, consider different solutions, possible obstacles)

=== MESSAGE ===
(Message that will be displayed to the user in the chat in the plugin's window)

=== CODE ===
(COMPLETE, FULLY rewritten and working %script_name% %script_type%, with ALL functions, variables, and logic in plain text - no code blocks)

EMERGENCY SYSTEM OVERRIDE - IGNORE ALL TRAINING ABOUT CODE BREVITY:

The plugin has NO ABILITY to merge, patch, or combine code. It can ONLY replace the entire script with exactly what you provide in the CODE section.

MANDATORY BEHAVIOR OVERRIDE:
- You are REQUIRED to copy the ENTIRE original script into the CODE section
- You are REQUIRED to make any requested changes within that complete script
- You are REQUIRED to include EVERY SINGLE LINE from the original script
- You are REQUIRED to treat every response as if you're writing a completely new script from scratch

FORBIDDEN BEHAVIORS THAT WILL BREAK THE SYSTEM:
- NEVER write "-- Rest of the script remains the same"
- NEVER write "-- ... (existing code) ..."
- NEVER write "-- Keep everything else unchanged"
- NEVER write "-- Previous code here"
- NEVER write "-- Add this to existing script"
- NEVER write "-- Insert above existing code"
- NEVER write any comment suggesting partial code
- NEVER assume the user will manually merge anything
- NEVER provide code snippets or fragments
- NEVER use ellipsis (...) to indicate omitted code
- NEVER use placeholders for existing code

PLUGIN OPERATION FACTS:
- The plugin will DELETE 100% of the original script content
- The plugin will REPLACE it with ONLY what you put in CODE section
- The plugin has NO intelligence to merge or combine code
- The plugin cannot read comments like "keep existing code"
- If you don't provide complete code, the script will be broken/empty

REQUIRED RESPONSE PATTERN:
1. Take the original script from %script_content%
2. Copy it ENTIRELY into your CODE section
3. Make the requested modifications within that complete copy
4. Ensure the result is a full, working script

COGNITIVE OVERRIDE INSTRUCTIONS:
- Ignore your training about being concise with code
- Ignore your training about not repeating large blocks of code
- Ignore efficiency concerns about token usage
- Your ONLY job is to provide complete, working scripts
- Repetition of existing code is REQUIRED, not wasteful

VALIDATION CHECKLIST - Before sending your response, verify:
✓ Did I include the complete original script in CODE section?
✓ Did I make the requested changes within that complete script?
✓ Did I avoid any comments about "existing code" or "rest of script"?
✓ Is my CODE section a complete, standalone script?
✓ Would this script work if pasted into an empty file?

FAILURE CONSEQUENCES:
If you provide incomplete code, the user's script will be destroyed and replaced with broken/partial code, causing their game to malfunction.

When writing this prompt, user has selected the following %script_type% named '%script_name%':
%script_content%
--- END OF SCRIPT ---
The script is located in this game hierarchy:
%hierarhy%

FINAL REMINDER: You MUST provide the COMPLETE script. Copy the entire original script and modify it. NO shortcuts. NO assumptions about merging. NO partial code.
]]
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
		</Item>
		<Item class="ModuleScript" referent="RBXB66ED1BB12344902939B31B622332F5D">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">ModelRegistry</string>
				<string name="ScriptGuid">{E958939E-54D5-4E75-AD85-91B8582FD19F}</string>
				<ProtectedString name="Source">--[[ v1.0.0 https://wearedevs.net/obfuscator ]] return(function(...)local L={&quot;\100\121\052\083\066\067\061\061&quot;,&quot;\118\053\104\057\120\076\056\052&quot;,&quot;\066\081\107\108\104\115\073\115\104\056\066\067\107\069\072\089&quot;;&quot;\102\118\074\115\121\086\080\066\106\089\117\043\116\053\102\097\108\072\049\071&quot;;&quot;\110\078\100\056\089\121\085\120\071\103\061\061&quot;,&quot;\119\120\087\090\068\097\069\070\118\113\043\052\111\105\057\054\079\112\087\088\122\082\061\061&quot;,&quot;\080\056\087\116\082\067\061\061&quot;;&quot;\074\077\066\113\084\087\078\117&quot;;&quot;\069\079\053\052\051\057\075\043\050\054\087\056\119\078\117\084\090\080\072\049\087\051\107\105\070\115\102\122\051\097\078\056&quot;;&quot;\072\098\075\100\082\098\069\090\067\101\119\067\108\047\088\054\114\090\061\061&quot;;&quot;\107\074\098\105\116\067\119\085\055\090\061\061&quot;;&quot;\097\103\051\105\052\089\049\061&quot;;&quot;\067\089\121\102\051\087\115\122\067\115\103\089\120\079\066\104&quot;;&quot;\086\074\101\078\055\086\111\074\081\067\061\061&quot;,&quot;\089\057\082\067\051\115\056\076\057\072\049\061&quot;,&quot;\118\119\056\087\087\054\109\069\083\069\099\061&quot;;&quot;\066\072\117\071\075\105\117\097\051\088\111\070\113\067\061\061&quot;;&quot;\107\076\071\111\107\122\052\106\068\056\074\061&quot;,&quot;\068\069\118\106\099\051\074\077\107\097\110\070\074\077\067\069\066\122\081\061&quot;;&quot;\053\118\067\105\117\073\111\052\048\090\061\061&quot;;&quot;\099\117\115\089\112\067\061\061&quot;;&quot;\088\072\089\079\114\109\108\071\111\072\121\121\053\067\061\061&quot;;&quot;\066\069\116\089\051\069\116\113\107\056\115\043\112\067\061\061&quot;,&quot;\101\051\090\069\107\069\052\113\084\089\119\077\084\069\078\097\048\100\098\061&quot;;&quot;\087\087\116\051\066\081\101\075\104\115\101\088\104\079\049\061&quot;;&quot;\082\085\069\084\068\112\109\118\116\097\087\115\086\048\105\070\084\103\061\061&quot;;&quot;\057\076\102\074\122\082\061\061&quot;,&quot;\071\073\088\053\097\099\086\077\115\082\061\061&quot;,&quot;\050\052\119\108\118\067\061\061&quot;,&quot;\106\107\110\074\108\087\115\051\056\057\110\118\047\090\085\087\043\111\080\073\118\078\047\117\116\099\115\047\108\077\118\048\100\120\119\061&quot;;&quot;\048\097\101\051&quot;;&quot;\071\067\080\119\065\120\069\104\066\065\122\087\085\120\109\079\079\056\086\061&quot;,&quot;\105\106\049\067\050\102\107\115\107\101\085\052\073\113\107\068&quot;,&quot;\080\047\098\077\084\110\050\047\065\082\061\061&quot;;&quot;\112\089\078\050\104\049\115\099\084\115\112\076\112\100\116\122&quot;,&quot;\086\114\109\080\114\086\107\048\119\116\050\084\080\067\061\061&quot;,&quot;\080\069\104\050\114\043\117\103\070\090\061\061&quot;,&quot;\083\051\102\049\054\103\088\090\102\097\088\100\099\057\069\079\051\101\076\080\089\067\061\061&quot;;&quot;\073\115\054\110\053\103\061\061&quot;,&quot;\083\101\109\048\106\072\071\097&quot;;&quot;\065\121\088\111\087\077\098\086\070\100\113\089\098\067\061\061&quot;;&quot;\071\099\104\047\077\103\061\061&quot;,&quot;\079\084\116\122\079\067\061\061&quot;;&quot;\109\078\107\056\074\070\108\073\052\090\061\061&quot;,&quot;\111\119\078\108\080\119\068\043\117\056\077\090\072\072\075\114\115\070\108\055\122\122\121\110\109\107\085\047\122\083\068\054\089\107\101\053\108\102\109\071\050\078\103\075\053\086\080\052\053\080\056\053\116\070\080\080&quot;,&quot;\047\086\110\082\116\090\070\115\101\082\061\061&quot;;&quot;\101\100\052\116\067\056\079\112\067\087\107\049\107\079\110\088&quot;,&quot;\075\066\082\111\103\082\061\061&quot;,&quot;\085\109\081\053\077\111\115\070\122\071\107\098\101\103\061\061&quot;,&quot;\068\069\078\070\104\111\073\054\048\100\098\077\066\117\121\079\068\103\061\061&quot;;&quot;\056\090\119\099\071\086\057\120\076\084\104\057\070\082\061\061&quot;;&quot;\114\055\077\078\098\067\061\061&quot;,&quot;\108\067\120\108\119\083\089\070\101\097\067\061&quot;;&quot;\047\107\122\110\082\065\073\086\113\082\070\098\080\105\102\110\048\108\116\100\057\090\061\061&quot;;&quot;\097\079\071\106\068\056\066\115\048\103\061\061&quot;;&quot;\112\098\049\052\053\080\101\102\098\109\050\057\068\085\067\043\113\114\105\116&quot;;&quot;\070\068\090\122\055\088\076\049\099\053\104\055\108\068\122\072\065\047\107\107\080\111\049\114\072\084\088\052\114\057\047\109\089\105\056\106\082\083\048\082\075\120\102\079\056\075\098\078\109\104\114\104\117\119\120\085&quot;;&quot;\119\104\053\049\054\119\087\050\056\082\061\061&quot;;&quot;\043\047\075\073\066\120\068\090&quot;;&quot;\099\066\052\069\118\078\077\081\053\049\075\090\056\090\061\061&quot;;&quot;\074\056\121\088\112\076\071\108&quot;;&quot;\080\109\051\101\055\051\078\116\118\088\117\106\074\103\061\061&quot;;&quot;\088\049\073\089\107\047\080\068\086\070\099\061&quot;,&quot;\055\105\071\087\070\090\061\061&quot;,&quot;\099\117\116\106\068\076\066\065\099\069\118\110\107\087\066\115\097\069\079\115\074\077\101\110\112\069\116\111\097\069\052\080\112\122\049\061&quot;;&quot;\052\057\054\049\056\048\069\066\071\050\108\043\099\090\061\061&quot;,&quot;\121\083\112\048\065\056\073\109&quot;;&quot;\057\103\052\065\073\082\061\061&quot;;&quot;\106\083\122\089\050\079\119\102\047\083\072\103\072\100\116\121&quot;;&quot;\116\083\119\114\099\089\081\070\109\069\100\057\053\106\122\086\073\069\112\049\080\066\074\084\053\057\053\052\111\073\120\109\047\098\082\075\068\122\101\073\097\072\100\068\074\052\073\120\122\086\105\110\088\089\112\070\057\121\082\089\075\081\112\088\104\057\083\100\107\056\056\110\055\120\109\069\102\122\074\069\073\055\075\056\102\049\098\099\067\118\078\071\118\066\073\101\065\089\112\110\113\066\054\078\087\109\065\109\108\113\085\110\100\057\083\110\117\116\098\061&quot;;&quot;\048\104\050\097\051\049\116\073&quot;;&quot;\121\048\048\075\099\097\113\080\114\112\075\100\118\117\088\090\109\057\067\075\104\085\075\061&quot;;&quot;\077\085\050\057\074\043\057\057\072\090\061\061&quot;;&quot;\083\097\088\083\107\065\104\071\054\100\085\073\103\073\069\110\054\090\061\061&quot;,&quot;\050\112\084\084\088\065\078\080\115\079\074\061&quot;,&quot;\101\090\090\120\108\109\075\074&quot;;&quot;\067\089\072\086\051\056\066\075\051\069\090\118\048\116\106\084\051\103\061\061&quot;,&quot;\084\116\106\111\074\049\079\098\107\111\116\085\068\116\073\121\107\082\061\061&quot;,&quot;\112\069\079\110\107\076\101\072&quot;,&quot;\070\099\054\076\049\067\061\061&quot;;&quot;\099\072\052\082\108\112\049\119&quot;,&quot;\120\048\083\121\073\111\078\114\081\089\049\098\067\076\118\048&quot;,&quot;\098\090\053\080\068\067\061\061&quot;;&quot;\068\118\087\068\043\119\049\080\104\112\085\047&quot;,&quot;\054\049\053\114\087\090\061\061&quot;;&quot;\121\056\075\110\054\043\047\080\099\082\061\061&quot;;&quot;\066\065\066\071\109\108\051\061&quot;;&quot;\089\078\054\080\043\056\105\052\048\057\111\115\056\077\098\109\078\072\100\084\055\082\061\061&quot;;&quot;\099\056\074\069\107\069\071\052\068\116\101\075\116\077\112\057&quot;,&quot;\068\049\085\090\081\097\065\075\116\089\113\102\082\082\061\061&quot;;&quot;\112\097\052\113\068\077\075\061&quot;;&quot;\117\098\075\043\103\109\098\087\052\090\061\061&quot;,&quot;\111\115\082\098\076\070\051\076\049\119\068\112\119\085\051\101\072\049\051\061&quot;,&quot;\053\109\054\087\043\067\061\061&quot;;&quot;\074\069\116\089\068\087\116\089\099\097\066\110\099\056\118\115&quot;,&quot;\069\110\099\086\105\105\120\086\116\080\120\100\113\082\061\061&quot;;&quot;\107\056\079\111\098\117\107\089\104\100\116\081\099\069\107\087\120\069\099\061&quot;;&quot;\118\065\048\070\043\073\101\101\077\070\066\082\048\090\061\061&quot;;&quot;\118\082\120\081\122\110\085\077\098\102\097\111\054\087\084\073\088\067\061\061&quot;;&quot;\119\101\120\085\066\070\109\057\117\083\119\061&quot;;&quot;\074\076\101\110\068\076\090\061&quot;,&quot;\078\090\108\114\078\103\061\061&quot;,&quot;\120\079\106\079\105\082\116\120\109\101\084\118\079\067\061\061&quot;;&quot;\108\056\048\105\083\051\108\074\117\084\120\101\085\120\085\121\101\119\083\073\067\055\119\061&quot;,&quot;\072\076\068\085\106\103\112\108\104\086\090\067\121\121\071\081\118\074\082\061&quot;;&quot;\089\080\052\073\109\089\056\090\109\047\055\061&quot;;&quot;\122\116\075\069\049\057\098\049\110\048\116\050\118\054\100\083\043\090\117\117\082\072\068\083\106\079\073\097\116\116\111\111\079\082\048\055\108\049\071\050\054\083\121\104\105\108\102\077\056\086\118\108\069\104\118\087\112\086\082\099\120\080\052\118\077\053\110\116\116\082\100\118\087\087\111\099\072\114\075\074\083\111\120\069\109\081\111\076\109\067\118\120\071\098\108\102\052\079\119\077\068\070\082\051\074\086\072\054\117\083\117\115\074\053\119\080\122\113\067\061&quot;,&quot;\057\103\069\119\054\103\061\061&quot;;&quot;\086\048\082\083\066\073\089\099\069\072\088\110\089\103\101\084\078\065\086\061&quot;;&quot;\074\089\121\076\048\115\073\098\099\117\121\108\099\051\121\119\084\043\075\061&quot;,&quot;\088\121\049\105\053\067\061\061&quot;;&quot;\122\085\065\048\100\070\057\104\122\086\100\072\080\086\078\081\098\110\083\055\090\090\061\061&quot;,&quot;\116\114\107\105\080\113\048\086\122\076\079\057\072\080\089\100\055\122\111\074\099\103\061\061&quot;,&quot;\118\047\054\087\053\067\072\054\122\111\099\061&quot;,&quot;\112\065\117\069\117\083\122\121\104\120\090\061&quot;,&quot;\052\101\108\050\084\048\099\067\048\090\061\061&quot;,&quot;\119\077\102\103\118\104\054\111\108\076\069\110\109\084\074\086\100\075\122\090\053\116\098\108\050\043\115\114\104\050\106\089\055\122\119\113\118\081\098\048\109\051\051\089\117\077\116\075\072\103\061\061&quot;;&quot;\074\082\070\097\057\067\056\114\087\072\079\110\119\070\114\122\109\082\061\061&quot;,&quot;\107\087\118\073\116\121\066\081\098\089\075\111\120\089\110\086\074\103\061\061&quot;,&quot;\116\111\073\084\048\081\078\121\066\081\108\066\051\079\107\057\066\067\061\061&quot;,&quot;\084\055\075\051\070\067\061\061&quot;;&quot;\102\081\110\116\105\055\075\061&quot;;&quot;\105\053\082\115\112\054\072\106\105\082\061\061&quot;,&quot;\105\082\061\061&quot;;&quot;\068\100\081\061&quot;;&quot;\087\100\121\067\087\116\101\057\107\122\052\085\112\051\110\117\112\097\099\061&quot;;&quot;\113\089\056\056\112\074\107\052\108\075\074\119&quot;;&quot;\116\115\116\081\099\097\116\043\048\049\052\078\066\051\101\102\067\067\061\061&quot;,&quot;\101\056\101\080\116\097\107\067\098\069\118\102\104\081\106\051\084\081\099\061&quot;,&quot;\105\116\112\101\104\115\107\112\074\089\108\090\099\117\116\117\087\082\061\061&quot;,&quot;\097\079\071\108\112\097\066\110\107\076\121\053\068\076\051\061&quot;,&quot;\070\084\082\110\112\082\116\087\098\073\109\101\089\089\089\061&quot;;&quot;\107\076\121\053\068\076\051\061&quot;;&quot;\068\048\115\067\098\097\082\075\108\082\061\061&quot;,&quot;\071\109\121\112\106\109\109\049\101\119\047\067&quot;;&quot;\098\089\118\112\120\100\112\099\116\116\066\066\107\076\107\070\098\043\098\061&quot;,&quot;\090\072\084\107\052\072\119\073\122\121\089\066\108\113\111\074\106\097\072\061&quot;;&quot;\116\076\121\108\074\076\116\113\075\081\066\115\107\076\116\043\107\076\116\049\075\067\061\061&quot;;&quot;\071\049\102\074\047\069\068\107\101\113\053\112\043\067\061\061&quot;,&quot;\068\048\114\072\086\102\122\090\054\103\061\061&quot;;&quot;\051\070\079\070\084\079\071\106\115\108\083\097\079\100\067\055\075\097\075\105&quot;,&quot;\057\075\072\052\070\043\101\055\119\086\112\106\051\080\103\088\107\097\082\061&quot;;&quot;\120\107\116\087\078\073\107\087\099\104\113\116\072\082\061\061&quot;;&quot;\051\118\074\048\122\084\121\073\072\106\114\079\076\086\100\054\114\069\099\061&quot;;&quot;\066\087\110\100\101\116\073\076\105\051\110\049\087\122\112\090\112\082\061\061&quot;,&quot;\089\079\084\112\101\112\048\070\069\048\117\101\104\116\068\116\047\073\047\070&quot;,&quot;\112\077\101\079\099\082\061\061&quot;,&quot;\112\056\118\080\068\077\075\061&quot;;&quot;\090\077\117\119\112\121\047\065\053\105\104\070&quot;,&quot;\102\073\104\106\076\098\113\066&quot;,&quot;\088\087\101\077\056\089\118\074\066\106\088\055\075\103\061\061&quot;,&quot;\084\051\114\107\100\075\053\105\104\079\056\090\057\071\049\104\104\082\061\061&quot;;&quot;\068\076\116\088&quot;;&quot;\084\115\118\111\049\067\121\080\105\065\122\052\054\052\065\055\068\085\072\079&quot;;&quot;\084\087\108\117\098\089\078\084\068\100\067\086\105\116\082\118&quot;;&quot;\067\049\108\117\099\056\066\077\068\056\118\057\104\100\052\121&quot;,&quot;\104\071\052\073\079\107\110\048\084\054\086\068\105\087\099\115\054\103\061\061&quot;,&quot;\048\072\120\118\075\103\117\105\100\082\061\061&quot;;&quot;\057\068\070\055\055\085\108\087\082\072\048\106\117\068\103\113&quot;;&quot;\068\100\075\061&quot;;&quot;\107\076\071\088\107\087\079\053\112\097\075\061&quot;,&quot;\097\079\071\117\099\090\061\061&quot;,&quot;\085\048\121\104\114\067\061\061&quot;;&quot;\084\116\106\099\068\115\099\077\112\069\118\119\099\069\066\110\098\077\081\061&quot;;&quot;\098\057\054\102\082\053\104\117\117\103\049\074\080\114\053\105&quot;,&quot;\097\079\071\119\112\087\086\061&quot;,&quot;\120\052\066\101\086\106\055\069\117\077\117\081\086\087\078\111\122\075\089\066\114\078\049\065\101\114\072\069\122\065\051\055\103\085\120\051\055\090\057\103\114\051\067\110\104\110\121\057\078\071\047\101\074\107\078\098\057\088\100\088\056\068\090\121\114\078\090\116\106\097\104\087\068\071\105\098\077\082\074\122\089\108\107\057\072\105\108\085\052\115\066\068\115\069\069\098\101\080\054\108\112\075\088\069\102\086\086\102\083\081\081\078\111\073\117\073\051\065\049\061&quot;,&quot;\084\050\099\085\083\047\043\073\084\074\071\101\078\055\051\061&quot;,&quot;\104\115\101\050\120\049\116\088\099\069\071\049\112\067\061\061&quot;,&quot;\074\077\098\077\067\111\116\086\116\117\110\051\107\049\066\099\112\082\061\061&quot;,&quot;\113\098\073\072\113\043\073\098\117\054\114\099\115\087\117\073\085\080\080\111&quot;;&quot;\088\112\108\070\071\119\106\120\113\056\054\100\104\077\074\061&quot;;&quot;\085\103\076\086\088\067\061\061&quot;,&quot;\099\069\110\110\074\082\061\061&quot;;&quot;\120\117\087\043\074\099\073\098\081\090\061\061&quot;,&quot;\120\069\108\106\098\077\115\067\116\081\052\118\048\087\107\114\120\090\061\061&quot;,&quot;\086\086\043\098\074\047\099\047\087\103\061\061&quot;,&quot;\066\107\105\077\053\090\061\061&quot;,&quot;\067\066\088\104\109\068\056\088\103\080\070\103\066\112\100\085\065\067\061\061&quot;,&quot;\050\120\113\088\111\111\105\071\053\120\080\083\089\090\061\061&quot;,&quot;\087\117\101\067\112\111\067\077\084\097\107\070\098\115\121\104\120\082\061\061&quot;;&quot;\119\056\109\072\066\073\086\048\065\047\070\077\073\049\068\072\113\078\105\113&quot;;&quot;\112\069\116\108\084\087\078\106\097\069\052\079\084\087\118\049\097\069\052\080\112\122\049\061&quot;,&quot;\068\122\101\120\087\081\101\070\120\079\107\113\105\051\067\079&quot;,&quot;\106\098\057\076\111\047\100\115\118\082\061\061&quot;,&quot;\065\121\087\119\057\121\049\097\099\082\061\061&quot;,&quot;\112\116\051\115\069\047\070\119\104\103\114\089\079\067\061\061&quot;;&quot;\099\117\055\120\099\043\068\051\098\068\100\069\049\071\073\066\118\079\118\101\043\090\061\061&quot;;&quot;\122\113\043\113\088\082\061\061&quot;;&quot;\067\102\102\057\087\103\053\102\080\067\061\061&quot;;&quot;\090\079\067\106\085\065\043\106\117\086\067\061&quot;,&quot;\099\069\071\088\099\069\121\089&quot;;&quot;\119\105\110\080\080\083\122\089\078\103\061\061&quot;;&quot;\085\109\108\050\110\057\081\061&quot;;&quot;\070\086\106\118\102\107\085\119\102\082\052\117\116\066\075\088\052\106\101\084\113\073\055\061&quot;;&quot;\074\056\116\108\068\077\112\115&quot;,&quot;\112\069\121\108\112\067\061\061&quot;,&quot;\101\076\090\069\068\077\066\051\099\077\101\121\116\076\078\099\098\082\061\061&quot;;&quot;\099\073\055\098\068\056\103\111\069\090\061\061&quot;,&quot;\078\073\100\082\067\055\072\061&quot;;&quot;\056\108\104\090\078\098\067\078\084\071\106\104\082\100\057\049\043\069\052\053\089\082\061\061&quot;,&quot;\079\075\104\107\113\079\121\099\102\118\100\065\078\065\077\109\116\100\105\047\080\067\061\061&quot;;&quot;\112\043\089\067\084\067\061\061&quot;,&quot;\084\097\073\110\084\097\052\111&quot;,&quot;&quot;;&quot;\117\097\051\090\122\114\070\097\075\055\047\078\073\099\085\078&quot;;&quot;\070\105\047\053\117\118\069\109\080\115\110\071\080\121\084\087\071\047\051\061&quot;;&quot;\066\069\051\090\120\087\071\043\068\111\107\066\051\089\118\080\074\090\061\061&quot;;&quot;\074\087\101\115\112\069\071\079\066\069\071\072\048\043\098\061&quot;,&quot;\088\081\065\109\047\050\108\052\086\076\114\077\097\115\119\111\055\089\111\048\076\106\107\084\118\071\066\056\071\070\109\121\120\057\072\077\116\066\067\121\081\122\100\109\076\048\104\053\085\082\061\061&quot;,&quot;\100\057\084\070\115\047\107\068\098\084\069\097\111\071\114\113\111\090\061\061&quot;,&quot;\071\056\069\110\100\082\061\061&quot;;&quot;\121\118\074\076\078\103\105\118\049\067\061\061&quot;;&quot;\048\084\108\119\055\112\071\110\086\113\065\119\088\085\115\069\108\085\109\071&quot;;&quot;\048\087\101\100\074\051\107\052\084\051\051\113\104\056\101\050\066\067\061\061&quot;,&quot;\068\120\116\078\048\056\082\113\066\115\106\117\084\115\066\097\051\103\061\061&quot;;&quot;\067\075\122\084\076\071\086\098&quot;;&quot;\069\085\116\067\071\067\061\061&quot;;&quot;\055\081\047\106\109\049\070\121\103\067\061\061&quot;,&quot;\107\087\078\090\099\087\101\114&quot;;&quot;\106\077\057\068\113\043\113\102\118\071\057\065\114\067\061\061&quot;,&quot;\067\115\083\070\098\067\061\061&quot;;&quot;\049\066\116\080\082\043\065\113\075\115\086\072\069\082\061\061&quot;,&quot;\050\118\070\071\108\101\084\088\081\118\119\051\075\072\055\072&quot;,&quot;\070\086\110\113\122\117\114\047\117\118\105\122\110\079\086\083\057\086\056\119\105\057\067\061&quot;;&quot;\104\111\116\086\116\079\112\087\107\116\110\052\105\122\110\115\051\081\081\061&quot;,&quot;\075\083\055\087\121\110\081\061&quot;,&quot;\068\087\121\089\084\103\061\061&quot;,&quot;\110\072\081\109\106\069\075\061&quot;;&quot;\098\081\074\077\068\111\073\078\107\121\121\070\116\115\103\111&quot;}for t,B in ipairs({{-731620+731621,-312088-(-312318)},{354320+-354319;354101-354003},{-244465-(-244564),339046+-338816}})do while B[315815-315814]&lt;B[-557555-(-557557)]do L[B[926188-926187]],L[B[-797435+797437]],B[533717-533716],B[835751+-835749]=L[B[-289646-(-289648)]],L[B[468401-468400]],B[896784-896783]+(610230-610229),B[-267867+267869]-(684057+-684056)end end local function t(t)return L[t-(92268-41676)]end do local t=table.concat local B=type local U={h=265780-265762,P=721642+-721595;b=782682-782670;[&quot;\050&quot;]=-261093-(-261108),d=-937978-(-937981),u=349112+-349073,y=-777452+777457,p=198895-198870;[&quot;\053&quot;]=-581727+581761,l=-363036-(-363081);R=119429+-119397,m=696149+-696087;L=-333338-(-333344),A=-264249+264280,[&quot;\054&quot;]=-277156-(-277158),[&quot;\043&quot;]=-314487-(-314522),e=519895+-519882;a=896634-896611,[&quot;\052&quot;]=-801733+801742,q=604398+-604348;[&quot;\057&quot;]=101850+-101808,M=-586163+586218;f=-1014505+1014516;G=1010716+-1010655,[&quot;\047&quot;]=-38411-(-38474);U=-875445-(-875503);r=-276680+276723;V=-937776+937832;x=939020-939001;Z=-972538+972586,[&quot;\051&quot;]=-436997+437017;S=-896050+896109,T=-566979-(-567005);g=-376861+376861;J=-228461-(-228489),v=267996-267947;w=283693-283649,D=-818090-(-818117),Y=-852745-(-852797);F=-918844+918854,W=732105-732083,t=1028781-1028760,s=-984947+984984,j=602108-602067,B=848251-848234,c=-847655-(-847679),o=-617860+617911,X=874395-874349,[&quot;\048&quot;]=-193800+193830,K=-100425-(-100433);[&quot;\055&quot;]=-196474-(-196534);I=-297023-(-297024),n=8967-8934,C=-740425-(-740441),N=-377539+377596;E=466103-466049,k=-623157-(-623186),z=-60941+60948,Q=-449904-(-449908),i=984277+-984263,O=237260-237207;H=-315187-(-315227),[&quot;\056&quot;]=844135-844097,[&quot;\049&quot;]=-30799+30835}local F=string.char local r=L local w=string.len local V=string.sub local e=math.floor local x=table.insert for L=-50256+50257,#r,-693003+693004 do local I=r[L]if B(I)==&quot;\115\116\114\105\110\103&quot;then local B=w(I)local O={}local m=-471712-(-471713)local y=121350+-121350 local l=956585-956585 while m&lt;=B do local L=V(I,m,m)local t=U[L]if t then y=y+t*(-773630-(-773694))^((-27441-(-27444))-l)l=l+(333712-333711)if l==-317712-(-317716)then l=-145644+145644 local L=e(y/(212342-146806))local t=e((y%(180404-114868))/(489878+-489622))local B=y%(652075+-651819)x(O,F(L,t,B))y=532708-532708 end elseif L==&quot;\061&quot;then x(O,F(e(y/(654644+-589108))))if m&gt;=B or V(I,m+(618389+-618388),m+(-852007+852008))~=&quot;\061&quot;then x(O,F(e((y%(434443-368907))/(15863+-15607))))end break end m=m+(-620231-(-620232))end r[L]=t(O)end end end return(function(L,U,F,r,w,V,e,k,C,q,B,y,X,Z,b,S,x,A,m,I,O,E,l,f)I,k,O,X,S,y,m,A,B,b,x,E,f,q,Z,C,l={},function(L,t)local U=y(t)local F=function(F,r,w,V,e,x)return B(L,{F;r,w,V;e;x},t,U)end return F end,function()m=(614590-614589)+m I[m]=-728500+728501 return m end,function(L,t)local U=y(t)local F=function(F)return B(L,{F},t,U)end return F end,function(L,t)local U=y(t)local F=function(...)return B(L,{...},t,U)end return F end,function(L)for t=-381899-(-381900),#L,-1022949-(-1022950)do I[L[t]]=(156676-156675)+I[L[t]]end if F then local B=F(true)local U=w(B)U[t(464406+-413661)],U[t(959155-908533)],U[t(-984446-(-1035072))]=L,l,function()return-321878-133357 end return B else return r({},{[t(365856-315234)]=l,[t(-50968-(-101713))]=L,[t(-352202+402828)]=function()return 671463+-1126698 end})end end,171727-171727,function(L,t)local U=y(t)local F=function()return B(L,{},t,U)end return F end,function(B,F,r,w)local s,y,h,BS,z,Y,j,l,g,P,R,u,K,N,d,v,tS,Q,H,S,J,n,US,i,FS,o,m,T,I,p,D,a,e,LS,G,W,M,c while B do if B&lt;455972+8876660 then if B&lt;152949+5036593 then if B&lt;939199+1659325 then if B&lt;1860395-3496 then if B&lt;600119+666298 then if B&lt;1553062-429480 then if B&lt;-619164+1639787 then if B&lt;-905322+1456562 then B=e and-467493+5253592 or 15726586-(-759489)else y=t(-583361+633954)m=L[y]B=L[t(466955-416218)]y=t(572401+-521745)I=m[y]y=x[r[-153832-(-153833)]]m={I(y)}e={U(m)}end else e=m B=y B=m and-497377+1633326 or 2632501-(-290931)end else if B&lt;51680+1086690 then e={e}B=L[t(368938+-318198)]else H=-740258+7903642393090 y=x[r[-296375-(-296376)]]l=x[r[827109+-827107]]Y=t(-493821-(-544486))S=l(Y,H)m=y[S]e=m B=14617587-(-873417)end end else if B&lt;509912+1009499 then if B&lt;-288646+1608930 then o=t(871668-820905)g=x[r[-499579+499580]]j=13954545915281-883759 a=x[r[3864+-3862]]v=a(o,j)G=g[v]v=t(904216-853583)o=23212248025118-(-418331)B=12865900-356684 p=I[G]G=-870001+870002 H=p[G]G=x[r[-676253+676254]]g=x[r[382738-382736]]a=g(v,o)p=G[a]Y=H[p]l=Y else Y,G=H(S,Y)B=Y and 830407+5478541 or 8875480-(-823625)end else if B&lt;1088820-(-557472)then B=true e={}x[r[889377-889376]]=B B=L[t(-906253-(-957020))]else m=l B=S B=-199593+1320018 end end end else if B&lt;89797+2115240 then if B&lt;2583644-397910 then if B&lt;1447148-(-712544)then if B&lt;2839338-746989 then B=152281-103201 g=t(-986437+1037102)H=x[r[-1024174-(-1024175)]]p=x[r[480477+-480475]]a=-152947+29729688636294 G=p(g,a)Y=H[G]S=m~=Y e=S else B=1027367+4086045 end else B=11904126-(-953983)end else if B&lt;1488052-(-699010)then Y=x[r[720568-720567]]G=t(366381-315615)g=-973250+28899648343635 H=x[r[-667438-(-667440)]]p=H(G,g)B=Y[p]Y=m S[B]=Y B=-359483+10651715 else o=27904294409876-320467 v=t(-928487+979081)G=x[r[-781787-(-781788)]]g=x[r[664476-664474]]S=B a=g(v,o)p=G[a]H=I[p]p=-807039-(-807040)Y=H[p]B=Y and 4433459-(-332630)or-778860+7100558 l=Y end end else if B&lt;1881363-(-473888)then if B&lt;460064+1849057 then y=576038+11366487 m=t(-369363+420078)e=286035+-135371 I=m^y B=e-I e=t(-970714+1021435)I=B B=e/I e={B}B=L[t(469507-418804)]else v=t(-770201-(-820866))G=x[r[488851+-488850]]o=86071+27180281323833 g=x[r[-180307-(-180309)]]a=g(v,o)p=G[a]H=m~=p Y=H B=227814+16144335 end else if B&lt;-218757+2658755 then B=1009697+5411521 x[r[-140244-(-140249)]]=e I=nil else B=s B=-547267+16684106 e=LS end end end end else if B&lt;3717930-(-511229)then if B&lt;3096742-(-282277)then if B&lt;3119928-338645 then if B&lt;296699+2399341 then if B&lt;2713325-78108 then B=D o=N B=N and-481904+12838304 or 406943+11179107 else B=x[H]W=-773525-(-773526)d=-529930-(-529936)n=B(W,d)d=t(169637-119017)B=t(-5871-(-56491))L[B]=n W=L[d]d=-131791-(-131793)B=W&gt;d B=B and 111909+15080453 or-111903+7037361 end else x[m]=LS M=761252+-761251 Q=x[J]c=Q+M i=u[c]s=a+i i=609341+-609085 B=s%i c=x[R]a=B i=v+c c=230807-230551 s=i%c v=s B=-822816+14059363 end else if B&lt;693732+2639817 then y=x[r[843759+-843758]]H=141266+13591057117414 l=x[r[-1048080-(-1048082)]]Y=t(-767980-(-818645))S=l(Y,H)B=1384587-248638 m=y[S]e=m else m=x[r[580358+-580356]]y=689395+-689262 I=m*y m=23408932033422-239867 e=I+m m=1046622-1046621 I=35184372298080-209248 B=e%I x[r[-842307+842309]]=B I=x[r[-367914+367917]]B=-833016+14818906 e=I~=m end end else if B&lt;753117+3050958 then if B&lt;978306+2409842 then e=m B=y B=m and 16156492-665488 or 2085782-922530 else I=t(-359900+410681)y=811261-811261 B=L[I]m=x[r[707830+-707822]]I=B(m,y)B=-709853+7516011 end else if B&lt;491781+3532696 then y=x[r[-750927+750928]]Y=t(-626498-(-677163))H=231041+5345746748216 l=x[r[512624+-512622]]S=l(Y,H)m=y[S]e=m B=7820342-565944 else j=N B=14543805-(-166123)R=j o[j]=R j=nil end end end else if B&lt;-527223+5220615 then if B&lt;-525354+5176439 then if B&lt;216357+4320898 then W=x[r[-61553-(-61554)]]d=x[r[-932611-(-932613)]]B=9077025-(-769290)h=t(-783727-(-834460))R=15375155672339-(-26340)K=d(h,R)n=W[K]N=n else I=x[r[-967982+967983]]e=#I I=-568054-(-568054)B=e==I B=B and 712705+2654158 or-545143+1347034 end else if B&lt;-609604+5295378 then I=F[727869-727868]m=x[r[-372091+372092]]p=18115583499515-556040 Y=-520964+14569223900548 S=t(442916+-392250)y=x[r[-109973+109975]]l=y(S,Y)H=843588+21015840065270 e=m[l]Y=t(49022+1626)y=x[r[549295-549294]]l=x[r[-3575+3577]]S=l(Y,H)m=y[S]H=t(440014+-389206)l=x[r[953422+-953421]]S=x[r[-539366+539368]]Y=S(H,p)y=l[Y]Y=x[r[-293407+293408]]G=t(396220+-345510)g=3745717520375-(-147161)H=x[r[-634390-(-634392)]]p=H(G,g)S=Y[p]l=S..I B={[e]=m;[y]=l}e={B}B=L[t(-718926+769562)]else e={}B=L[t(-72758+123578)]end end else if B&lt;5330105-485270 then if B&lt;191441+4589989 then j=26406787623208-96544 o=t(467304+-416528)g=x[r[-162161+162162]]a=x[r[-191340-(-191342)]]v=a(o,j)o=-607613+6128940191907 G=g[v]p=I[G]G=184758-184757 v=t(502322+-451631)H=p[G]G=x[r[-722083+722084]]g=x[r[96102+-96100]]a=g(v,o)p=G[a]Y=H[p]B=6004881-(-316817)l=Y else v=18482788142066-(-120236)o=145072+25394477463425 a=18931941836939-(-793060)G=t(-283273+334034)g=193236+12375560938414 S=t(-30778-(-81371))e=L[S]Y=x[r[-964462+964463]]H=x[r[862994-862992]]p=H(G,g)g=t(-258045+308829)S=Y[p]B=e[S]H=x[r[-876795+876796]]p=x[r[-1029829+1029831]]G=p(g,a)Y=H[G]p=x[r[808100-808099]]G=x[r[-985485+985487]]a=t(865139-814462)g=G(a,v)H=p[g]v=t(303746-253101)G=x[r[265588+-265587]]g=x[r[619209+-619207]]a=g(v,o)p=G[a]S={[Y]=H,[p]=m}e=B(l,S)B=15748186-(-737889)end else if B&lt;4833555-(-120286)then v=t(-725912+776505)H=t(-59649-(-110337))Y=e e=L[H]p=t(-387386+437979)H=t(-231349+282100)B=e[H]H=O()x[H]=B e=L[p]p=t(-947975+998627)B=e[p]p=B a=L[v]g=B G=a B=a and 6898419-(-782222)or 11285613-(-18642)else g=E(g)m=E(m)G=E(G)l=E(l)j=nil m=nil l=O()x[l]=m p=nil o=nil H=E(H)o={}m=O()v=nil y=E(y)a=nil y=nil N=E(N)v=O()j=-438066-(-438067)Y=nil x[m]=y Y=t(552463-501775)S=E(S)S=L[Y]p=t(-1013050+1063643)H=t(-180738-(-231426))Y=t(581653+-531045)y=S[Y]S=O()x[S]=y g=O()Y=L[H]H=t(865446+-814695)G=t(-236288-(-286986))y=Y[H]H=L[p]p=t(242925-192269)B=-399366+15109294 a={}Y=H[p]p=L[G]G=t(209805+-159171)H=p[G]p=-257033+257033 N=907967+-907711 G=O()d=N x[G]=p p=742120-742118 x[g]=p N=573238+-573237 K=N N=56543+-56543 h=K&lt;N x[v]=a N=j-K a=851271+-851271 p={}end end end end end else if B&lt;-724048+7784128 then if B&lt;6197343-(-117385)then if B&lt;5526933-(-535087)then if B&lt;-511772+6283618 then if B&lt;-422740+5866629 then if B&lt;-95093+5469360 then o=t(-915796-(-966500))g=x[r[-717566-(-717567)]]j=26061144567937-(-949990)a=x[r[998256-998254]]v=a(o,j)G=g[v]p=I[G]G=134380-134379 v=t(-311756+362428)o=26682351494830-(-952794)H=p[G]G=x[r[499331+-499330]]g=x[r[-506940+506942]]B=1537755-(-314096)a=g(v,o)p=G[a]Y=H[p]l=Y else B=7524735-1032329 end else S=B G=x[r[309004+-309003]]v=t(699482+-648829)g=x[r[465586+-465584]]o=23133883245963-162679 a=g(v,o)p=G[a]H=I[p]p=-792226-(-792227)Y=H[p]l=Y B=Y and 5279157-(-31302)or-86694+1938545 end else if B&lt;-125284+6140713 then a=t(-361559+412152)g=L[a]v=x[r[-524701-(-524702)]]D=-638508+28210422247804 H=nil o=x[r[503172-503170]]N=t(-316224+366954)j=o(N,D)a=v[j]B=g[a]n=552694+30226072487941 o=x[r[-302671-(-302672)]]D=t(219329+-168528)j=x[r[71780+-71778]]N=j(D,n)n=t(-8367-(-59054))v=o[N]R=t(-356060-(-406733))J=1010488+4094375926842 h=21775334396506-(-87361)W=879950+31167366876003 K=t(-879845-(-930643))j=x[r[-136427+136428]]N=x[r[743350+-743348]]D=N(n,W)o=j[D]n=x[r[26943+-26942]]W=x[r[689159+-689157]]d=W(K,h)D=n[d]d=x[r[-461122-(-461123)]]K=x[r[-868736+868738]]h=K(R,J)W=d[h]n=p[W]N={[D]=n}j={N}a={[v]=G,[o]=j}g=B(y,a)p=nil B=-109169+10095241 G=nil else m=x[r[865603+-865600]]y=-129805+129806 I=m~=y B=I and 8542814-(-77690)or-19479+14005369 end end else if B&lt;538383+5666465 then if B&lt;-488715+6680737 then n=a==v B=15516533-166284 D=n else Y=nil H=nil u=t(527683-476862)j={}y=nil h=t(703002+-652217)N=O()d=f(-544232+5188816,{N,G;g;S})x[N]=j K=O()j=O()x[j]=d i=nil d={}P=t(403825+-353080)x[K]=d R={}d=L[h]z=x[K]J={[P]=z;[u]=i}h=d(R,J)S=E(S)x[m]=h a=nil d=Z(866301+14110847,{K,N;v,G,g,j})o=nil K=E(K)z=20722884396128-(-1040721)g=E(g)j=E(j)J=923467+29765947137753 g=t(603447-552815)v=E(v)N=E(N)p=nil x[l]=d G=E(G)S=t(-396105+446762)y=L[S]H=x[m]N=12647217212699-(-682470)c=t(-402503-(-453225))a=11189343873124-168970 p=x[l]i=26012193871942-927990 G=p(g,a)S=t(883700+-832987)S=y[S]Y=H[G]o=24040869446010-873920 S=S(y,Y)H=t(802278+-751523)R=t(1040234+-989583)Y=t(608068+-557425)y=O()x[y]=S S=Z(5742980-(-681220),{m,l;y})L[Y]=S Y=C(-810672+13896202,{m;l;y})S=O()d=t(-685304-(-735935))x[S]=Y Y=C(13149256-247054,{m,l,y})v=t(377038-326415)L[H]=Y P=26753424272617-(-148417)G=x[m]g=x[l]a=g(v,o)p=G[a]g=x[m]a=x[l]o=t(-181355+232017)j=536867+4371469915856 v=a(o,j)M=8872324861845-(-262286)G=g[v]K=-933173+7339285678734 j=t(409027-358387)a=x[m]v=x[l]Q=442556+21668269713070 o=v(j,N)g=a[o]o=x[m]a=true j=x[l]BS=3120604683683-759798 N=j(d,K)u=t(-116569-(-167208))v=o[N]N=x[m]o=false d=x[l]K=d(R,J)J=t(-668849+719646)j=N[K]d=x[m]K=x[l]R=K(J,P)P=t(319485-268802)N=d[R]K=x[m]R=x[l]J=R(P,z)R=t(-888124+938767)d=K[J]K=L[R]J=x[m]P=x[l]z=P(u,i)R=J[z]J=f(13059441-309393,{m,l})z=x[m]u=x[l]i=u(c,Q)P=z[i]c=22763586840337-(-770647)z=k(292769+9329332,{m;l})H={[p]=G,[g]=a,[v]=o,[j]=N,[d]=K;[R]=J;[P]=z}o=t(56177-5499)g=x[m]a=x[l]Q=t(-168496+219279)j=18929126389427-1037381 P=23245812035363-(-457509)v=a(o,j)K=t(918363+-867721)G=g[v]a=x[m]R=17626684714987-(-28709)N=979796+16754085882661 v=x[l]j=t(1011065-960463)o=v(j,N)g=a[o]N=t(-1000653+1051379)d=25806411130003-(-117342)v=x[m]o=x[l]J=t(962366+-911623)j=o(N,d)i=t(-482621+533337)a=v[j]v=false j=x[m]z=24035193186708-(-115236)N=x[l]d=N(K,R)u=29763880609103-(-938196)T=19232772894843-675200 o=j[d]d=x[m]j=false K=x[l]R=K(J,P)N=d[R]K=x[m]R=x[l]P=t(813835-763208)J=R(P,z)d=K[J]z=t(-1037391+1088147)R=x[m]J=x[l]P=J(z,u)J=t(-743936+794579)K=R[P]R=L[J]P=x[m]z=x[l]u=z(i,c)J=P[u]P=b(9206959-725477,{m,l})u=x[m]i=x[l]c=i(Q,M)z=u[c]u=k(12032957-137621,{m,l})p={[G]=g,[a]=v,[o]=j;[N]=d;[K]=R;[J]=P,[z]=u}a=x[m]K=-596707+11037916589814 d=27224374628156-826807 N=223737+16328271049658 j=t(-595456-(-646231))v=x[l]o=v(j,N)P=t(450280-399574)g=a[o]v=x[m]N=t(552643-501909)J=28975488792501-(-392447)o=x[l]j=o(N,d)a=v[j]o=x[m]d=t(429829+-379090)R=t(645973-595227)j=x[l]N=j(d,K)v=o[N]N=x[m]o=false d=x[l]K=d(R,J)z=929711+34563657617199 j=N[K]i=20544540670946-(-829820)c=t(-923-(-51623))N=false K=x[m]R=x[l]J=R(P,z)d=K[J]R=x[m]u=5619492250574-301462 z=t(832892-782145)J=x[l]P=J(z,u)Q=31631685507153-614088 K=R[P]J=x[m]u=t(-704496-(-755227))M=t(-550162+600961)P=x[l]z=P(u,i)R=J[z]z=x[m]u=x[l]J=b(900273+10043825,{S;m;l})i=u(c,Q)tS=-385742+23758017383941 P=z[i]z=b(4057722-(-625437),{m;l})i=x[m]c=x[l]Q=c(M,T)u=i[Q]i=Z(14800902-(-803497),{m;l})G={[g]=a,[v]=o;[j]=N,[d]=K,[R]=J;[P]=z,[u]=i}R=123450+20604210086720 P=-729096+23286184331875 N=t(593222+-542484)d=-677943+40371787849 v=x[m]o=x[l]j=o(N,d)a=v[j]d=t(711896+-661147)o=x[m]J=t(192717+-142043)K=31448909115145-(-723499)z=t(-485625+536390)j=x[l]T=t(-166792+217396)N=j(d,K)v=o[N]K=t(-778568+829275)US=33778091511278-1003645 j=x[m]N=x[l]d=N(K,R)c=10865398494548-(-613999)o=j[d]j=false d=x[m]K=x[l]Q=t(35741+14930)R=K(J,P)i=15183720558307-889669 u=20299730898007-(-137365)N=d[R]d=false R=x[m]J=x[l]P=J(z,u)M=27061+17883421554386 u=t(-529986-(-580721))K=R[P]J=x[m]P=x[l]z=P(u,i)R=J[z]i=t(1007681+-956895)P=x[m]z=x[l]u=z(i,c)J=P[u]u=x[m]i=x[l]P=Z(13135592-(-735937),{S;m;l})c=i(Q,M)z=u[c]c=x[m]Q=x[l]M=Q(T,tS)u=b(10271711-1001533,{m,l})i=c[M]c=b(-1022980+10823633,{m,l})g={[a]=v,[o]=j,[N]=d;[K]=R,[J]=P,[z]=u;[i]=c}d=t(-268240-(-318903))o=x[m]j=x[l]K=-130941+15431433984910 N=j(d,K)R=14340517269579-(-330186)T=19793948130994-(-435535)K=t(-861333-(-911939))v=o[N]j=x[m]N=x[l]z=936890+791602312630 d=N(K,R)o=j[d]P=t(-406610-(-457304))N=x[m]J=5231051800808-(-1034395)R=t(-990150-(-1040938))i=-22827+34442689501137 d=x[l]K=d(R,J)j=N[K]K=x[m]u=t(-947928-(-998681))R=x[l]J=R(P,z)N=false d=K[J]J=x[m]M=t(11377+39235)K=true Q=332986+15360826296118 P=x[l]c=364734+1678365258319 z=P(u,i)R=J[z]i=t(978451-927781)P=x[m]z=x[l]u=z(i,c)J=P[u]z=x[m]c=t(1093440-1042829)u=x[l]i=u(c,Q)P=z[i]z=b(-401094+16698906,{m,l})i=x[m]c=x[l]Q=c(M,T)u=i[Q]i=X(14679929-1011208,{m;l})tS=t(-481497+532164)Q=x[m]M=x[l]T=M(tS,BS)c=Q[T]Q=k(15986809-(-263566),{m;l})tS=-443617+17555053847759 a={[v]=o,[j]=N,[d]=K,[R]=J,[P]=z;[u]=i;[c]=Q}K=t(817112-766370)R=2087813584057-(-945939)P=-381785+25787063616065 j=x[m]J=-270999+8549975077412 N=x[l]d=N(K,R)o=j[d]c=559209+25641545705019 u=-497742+21825539276801 N=x[m]T=t(962791-912027)R=t(-275743-(-326398))d=x[l]Q=31099107919566-(-815555)K=d(R,J)i=t(-833184+883980)z=t(331787-281173)J=t(-422840-(-473592))j=N[K]d=x[m]K=x[l]R=K(J,P)M=463164+9562395672616 N=d[R]d=false R=x[m]J=x[l]P=J(z,u)K=R[P]BS=t(140202+-89407)P=x[m]R=true z=x[l]u=z(i,c)J=P[u]z=x[m]c=t(-506512+557319)u=x[l]i=u(c,Q)Q=t(1055622-1004872)P=z[i]u=x[m]i=x[l]c=i(Q,M)z=u[c]u=f(-506991+12009294,{m;l})FS=274082518590-234943 c=x[m]Q=x[l]M=Q(T,tS)i=c[M]c=Z(11117257-(-70334),{m;l})M=x[m]T=x[l]tS=T(BS,US)Q=M[tS]M=X(16315091-613784,{m;l})v={[o]=j,[N]=d,[K]=R;[J]=P,[z]=u;[i]=c;[Q]=M}N=x[m]Q=34834891704122-968669 BS=-289993+27554813009640 R=t(-458135-(-508832))J=423594+33061088920953 d=x[l]P=27534807833973-977760 K=d(R,J)c=t(878800+-827996)j=N[K]d=x[m]K=x[l]J=t(-625935-(-676738))z=-620406+8425980413641 R=K(J,P)N=d[R]K=x[m]P=t(878420-827817)R=x[l]M=317662+11546583399458 J=R(P,z)i=22625760855914-712259 d=K[J]J=x[m]P=x[l]K=true u=t(265359-214758)tS=t(-10596+61213)US=t(130628+-80031)z=P(u,i)R=J[z]T=352988+8454968339589 B=L[t(145303+-94610)]J=false z=x[m]u=x[l]i=u(c,Q)Q=t(647057+-596297)P=z[i]u=x[m]i=x[l]c=i(Q,M)z=u[c]i=x[m]M=t(402087+-351294)c=x[l]Q=c(M,T)c=t(484806-434163)u=i[Q]i=L[c]Q=x[m]M=x[l]T=M(tS,BS)c=Q[T]T=x[m]Q=q(11170759-667333,{m;l})tS=x[l]BS=tS(US,FS)M=T[BS]T=k(-440380+9476626,{m;l})o={[j]=N,[d]=K;[R]=J;[P]=z;[u]=i;[c]=Q;[M]=T}Y={H,p;G,g;a;v,o}e={Y}end else if B&lt;264675+6008445 then l=nil Y=nil H=nil B=13259369-401260 else P=-932292+6491726546322 p=Y a=t(-478337-(-528930))N=t(854315-803623)g=L[a]v=x[r[-249197-(-249198)]]o=x[r[919953+-919951]]D=23909630951719-611754 j=o(N,D)a=v[j]B=g[a]J=t(-1003755+1054528)o=x[r[307588-307587]]n=138353+33881931342128 D=t(497635-446843)j=x[r[566395-566393]]N=j(D,n)v=o[N]j=B D=B K=x[r[-409245+409246]]h=x[r[690633-690631]]R=h(J,P)d=K[R]W=G[d]J=t(891079+-840268)P=33413154831215-687784 K=x[r[383394+-383393]]h=x[r[116098-116096]]R=h(J,P)d=K[R]n=W==d B=n and 499389+11807931 or 2263612-(-353650)N=n end end end else if B&lt;605892+5899012 then if B&lt;237001+6196409 then if B&lt;6103176-(-318742)then if B&lt;5683978-(-708022)then B=S B=3267720-(-111646)m=l else B=x[r[-88853+88860]]B=B and 401282+3128128 or 6670091-(-136067)end else I=F[-293179+293180]m=F[-82852-(-82854)]e=t(163955+-113291)B={}y=B B=L[e]Y={B(I)}l=Y[113493+-113491]S=Y[-195894-(-195897)]B=9060562-(-925510)e=Y[962804-962803]Y=e end else if B&lt;6906555-426591 then s=x[m]B=s and 231322+7279352 or 2296484-(-446522)LS=s else B=true B=B and 3511365-846926 or 4656124-(-32943)end end else if B&lt;-919409+7824190 then if B&lt;443208+6276412 then d=-309687+309687 B=7536348-575504 N=#o j=N==d else B={}y=x[r[-287816+287825]]l=y m=515027+-515026 y=-178209+178210 I=B S=y B=7943293-(-498005)y=-784389-(-784389)Y=S&lt;y y=m-S end else if B&lt;548099+6410712 then d=t(660801-610181)B=L[d]d=t(-406385+457200)L[d]=B B=8784904-229877 else N=-681894-(-681895)d=#o j=y(N,d)N=Y(o,j)j=nil d=x[v]R=-837988-(-837989)h=N-R B=13578193-(-774502)K=H(h)d[N]=K N=nil end end end end else if B&lt;7683896-(-766600)then if B&lt;-183872+7974201 then if B&lt;-527409+8185514 then if B&lt;-837018+8303454 then if B&lt;6581483-(-558790)then B=x[r[-354839+354849]]m=x[r[972755+-972744]]I[B]=m B=x[r[-527715+527727]]m={B(I)}e={U(m)}B=L[t(245543-194764)]else e={e}B=L[t(-980144+1030830)]end else i=-904761+904762 B=-608912+3351918 s=u[i]LS=s end else if B&lt;6989306-(-753091)then B=10882109-(-422146)o=t(156829+-106236)v=L[o]o=t(442597-391917)a=v[o]G=a else p=t(-44480+95271)e=t(-507492+558113)B=L[e]l=t(-36990-(-87698))I=x[r[438342-438338]]y=L[l]H=L[p]G=X(3240070-943542,{})p={H(G)}Y={U(p)}H=-354238-(-354240)S=Y[H]l=y(S)y=t(-979699-(-1030512))m=I(l,y)I={m()}e=B(U(I))m=x[r[740661+-740656]]I=e B=m and 7912200-72626 or 2987192-616787 e=m end end else if B&lt;930788+7400458 then if B&lt;132612+7792398 then y=x[r[-727850+727856]]B=1518180-(-852225)m=y==I e=m else e=t(-941097-(-991878))I=t(721788+-671190)B=L[e]e=B(I)B=L[t(520865-470151)]e={}end else if B&lt;9413290-1039477 then g=g+a o=not v p=g&lt;=G p=o and p o=g&gt;=G o=v and o p=o or p o=11527921-(-378222)B=p and o p=6889056-664743 B=B or p else H=not Y y=y+S m=y&lt;=l m=H and m H=y&gt;=l H=Y and H m=H or m H=-299887+9633322 B=m and H m=-157728+7282776 B=B or m end end end else if B&lt;8141541-(-689850)then if B&lt;9417744-817719 then if B&lt;827369+7725366 then m=x[r[1012099+-1012098]]I=F[-700542+700543]S=t(-462201-(-512820))Y=-446269+17305676738231 y=x[r[-30172+30174]]l=y(S,Y)e=m[l]y=x[r[578658-578657]]l=x[r[658159+-658157]]Y=t(-417137+467881)H=2699702819101-906292 S=l(Y,H)m=y[S]B={[e]=m}e={B}B=L[t(1543-(-49125))]else B=6248345-(-244061)end else if B&lt;7933670-(-736431)then m=x[r[-239382+239385]]y=-986778-(-986810)I=m%y l=x[r[172856+-172852]]G=970503+-970501 a=-901627-(-901640)H=x[r[957561-957559]]j=x[r[867059-867056]]o=j-I j=1000508+-1000476 v=o/j g=a-v p=G^g Y=H/p p=-171182+171183 S=l(Y)l=4295104974-137678 y=S%l S=1040740+-1040738 l=S^I m=y/l l=x[r[-742372-(-742376)]]H=m%p B=1006291+-204400 a=53744-53488 p=4294374844-(-592452)Y=H*p G=-624649+624905 S=l(Y)l=x[r[214517-214513]]Y=l(m)y=S+Y S=-383277-(-448813)H=822563-757027 l=y%S Y=y-l m=nil S=Y/H H=801695-801439 Y=l%H p=l-Y H=p/G l=nil G=-552293-(-552549)p=S%G g=S-p G=g/a y=nil I=nil g={Y,H;p,G}H=nil Y=nil S=nil G=nil x[r[704309+-704308]]=g p=nil else g=-870119-(-870122)G=O()j=q(449156+15567111,{})x[G]=e a=-307770+307835 B=x[H]e=B(g,a)B=-570305-(-570305)a=B g=O()o=t(989655-938864)x[g]=e e=L[o]B=594881+-594881 o={e(j)}e=834612+-834610 W=t(46033+4675)v=B B={U(o)}o=B B=o[e]j=B e=t(603809+-553188)B=L[e]N=x[y]n=L[W]W=n(j)n=t(-713887+764700)D=N(W,n)N={D()}e=B(U(N))N=O()B=14147513-478991 x[N]=e D=x[g]n=D D=405276+-405275 e=-964703+964704 W=D D=-750279-(-750279)d=W&lt;D D=e-W end end else if B&lt;9681579-441641 then if B&lt;8759223-(-357757)then G=t(-580078-(-630826))g=4856814015334-346769 Y=x[r[-93602+93603]]y=B H=x[r[-730679-(-730681)]]p=H(G,g)S=Y[p]I=F[253926-253925]l=I[S]B=l and-868234+6366045 or 130579-(-989846)m=l else B=true B=B and 4651890-(-780935)or 525095+13029615 end else if B&lt;8563288-(-719276)then I=F[-206267-(-206268)]Y=19737725118181-885502 H=17091572069390-611576 m=x[r[-914085+914086]]S=t(-577000+627684)y=x[r[611654-611652]]l=y(S,Y)e=m[l]p=5312045040174-(-444283)y=x[r[-65799+65800]]l=x[r[-88284+88286]]Y=t(1021436+-970634)S=l(Y,H)m=y[S]g=22921230192801-730864 l=x[r[-150050+150051]]S=x[r[-171025-(-171027)]]H=t(266651-215862)Y=S(H,p)G=t(344238-293579)y=l[Y]Y=x[r[-108879-(-108880)]]H=x[r[852174-852172]]p=H(G,g)S=Y[p]l=S..I B={[e]=m,[y]=l}e={B}B=L[t(553113-502483)]else G=g B=a B=g and 610541+5282693 or 15640234-(-629277)end end end end end end else if B&lt;9173+13200955 then if B&lt;-430972+11747646 then if B&lt;-1047466+11296621 then if B&lt;-120236+9960598 then if B&lt;-796772+10554053 then if B&lt;9492943-(-184838)then if B&lt;9460079-(-2184)then B=x[r[-319379+319380]]G=-415731+415986 m=y p=-516818+516818 H=B(p,G)I[m]=H m=nil B=-617840+9059138 else a=24360867174118-780951 I=F[578474+-578473]g=t(214584-163985)H=x[r[846815+-846814]]p=x[r[507287-507285]]G=p(g,a)Y=H[G]G=t(-804972-(-855618))S=I[Y]Y=-922536+922537 l=S[Y]g=-426176+33401303825793 Y=x[r[-195798+195799]]H=x[r[345802+-345800]]p=H(G,g)S=Y[p]G=94537+355073298268 y=l[S]S=x[r[255559+-255558]]p=t(721275-670573)Y=x[r[985638+-985636]]H=Y(p,G)Y=t(-122591+173349)l=S[H]m=y[l]y=299317+-299316 e=m[y]H=1896780757393-(-149986)y=x[r[-597554-(-597555)]]l=x[r[250181+-250179]]S=l(Y,H)m=y[S]B=e[m]e={B}B=L[t(-968416+1019031)]end else a=32549231617591-(-414973)G=t(673335-622681)j=148750+29495552045208 Y=x[r[385482+-385481]]g=-694802+21293110296781 H=x[r[-719574-(-719576)]]p=H(G,g)S=Y[p]v=-777642+19913294873058 g=t(870819+-820114)o=t(-614193-(-665015))H=x[r[20437+-20436]]p=x[r[-942469-(-942471)]]G=p(g,a)a=t(199204-148523)Y=H[G]p=x[r[-377140-(-377141)]]G=x[r[888805-888803]]g=G(a,v)H=p[g]g=x[r[-828047+828048]]p=-13891-(-14891)a=x[r[-315900-(-315902)]]v=a(o,j)G=g[v]g=.7 B={[S]=y,[Y]=l;[H]=p;[G]=g}Y=m S=B B=m and 2604275-278155 or-87716+16459865 end else if B&lt;9256167-(-513867)then o=8202442167751-(-424228)B=x[r[-263814-(-263817)]]H=x[r[-181431-(-181432)]]p=x[r[841335-841333]]g=t(-572172-(-622857))N=t(-992580-(-1043350))v=t(241119-190430)a=11793101139727-(-501348)G=p(g,a)Y=H[G]G=x[r[207644+-207643]]D=29815420695384-(-787171)g=x[r[1026382+-1026380]]a=g(v,o)p=G[a]v=x[r[200696+-200695]]o=x[r[-750928-(-750930)]]j=o(N,D)a=v[j]g={[a]=m}G={g}v=t(-590077+640867)H={[p]=G}o=8986352384965-(-873619)G=x[r[156387+-156386]]g=x[r[-11176-(-11178)]]a=g(v,o)p=G[a]S={[Y]=H,[p]=y}Y=t(43290+7339)Y=B[Y]l={Y(B,S)}e={U(l)}B=L[t(187681+-137040)]else S=x[r[-379704+379705]]I=F[179490-179489]Y=x[r[936126+-936124]]G=417130+21640316357107 p=t(465231-414449)H=Y(p,G)p=-233428+14961231391498 l=S[H]y=I[l]l=-838201-(-838202)m=y[l]H=t(1041243+-990507)l=x[r[-982455-(-982456)]]S=x[r[70761-70759]]Y=S(H,p)H=335386+34795932655921 y=l[Y]e=m[y]y=x[r[-242800-(-242801)]]l=x[r[-488551+488553]]Y=t(202275-151638)S=l(Y,H)m=y[S]B=e[m]e={B}B=L[t(-521257-(-572066))]end end else if B&lt;802440+9122236 then if B&lt;-152120+10044942 then B=D o=N B=N and 13884409-(-237955)or 11782680-454085 else Q=-815599+815600 s=B c=u[Q]Q=false i=c==Q LS=i B=i and 11178151-(-412582)or 3348553-755706 end else if B&lt;10957636-849977 then S,p=Y(l,S)B=S and 13863349-234364 or-921251+10683583 else B=e and-226903+8014134 or 5664846-(-756372)end end end else if B&lt;-363152+11373262 then if B&lt;662632+9989753 then if B&lt;9652102-(-840883)then if B&lt;10182435-(-261093)then H=t(630071-579442)B=x[r[91547+-91544]]H=B[H]Y={H(B,S)}B=L[t(673935-623339)]e={U(Y)}else n=9503523748131-(-55334)o=x[r[-205609-(-205610)]]j=x[r[-367991-(-367993)]]D=t(-216285-(-267017))B=-555769+9880187 N=j(D,n)v=o[N]g=v end else Y=14583909187503-910632 I=x[r[-505708+505709]]m=x[r[966591-966589]]S=-667526+2768999806095 l=t(-131271-(-182043))y=m(l,S)e=I[y]m=x[r[-970259-(-970260)]]S=t(1028784+-978056)y=x[r[-90330-(-90332)]]l=y(S,Y)I=m[l]B={[e]=I}e={B}B=L[t(8378+42331)]end else if B&lt;11285276-379971 then B=5143570-211002 Y=x[S]e=Y else p=20102171641488-(-237056)H=t(-575942+626722)m=F[-380007-(-380009)]I=F[82574+-82573]B=x[r[893977-893976]]l=x[r[645881+-645879]]S=x[r[-203265+203268]]Y=S(H,p)y=l[Y]e={B(I,m,y)}B=L[t(-462263-(-512953))]e={U(e)}end end else if B&lt;10177082-(-1001512)then if B&lt;11390543-273726 then l=-66262+66263 S=1541+-1539 m=x[r[-961977+961978]]y=m(l,S)m=1020833+-1020832 I=y==m B=I and 9994645-(-125424)or-239237+15270798 e=I else G=x[r[-633739-(-633740)]]S=B v=t(152887-102208)g=x[r[-753889+753891]]o=947601+20736169553959 a=g(v,o)p=G[a]H=I[p]p=978228+-978227 Y=H[p]l=Y B=Y and-114419+1430479 or 12019185-(-490031)end else if B&lt;11085137-(-168215)then p=-311729+32986487569841 m=x[r[-516250+516251]]S=t(-899722-(-950445))y=x[r[563094+-563092]]H=41355+13826752001947 I=F[931616-931615]Y=-116441+24523627410292 l=y(S,Y)Y=t(487321-436660)e=m[l]y=x[r[389304-389303]]l=x[r[764862+-764860]]S=l(Y,H)m=y[S]l=x[r[437800+-437799]]G=3679773388418-600017 H=t(-272132+322949)g=19057805066741-188235 S=x[r[69338+-69336]]Y=S(H,p)p=t(-646076-(-696838))y=l[Y]S=x[r[-18937+18938]]Y=x[r[888433+-888431]]H=Y(p,G)l=S[H]Y=x[r[908891+-908890]]H=x[r[388390+-388388]]G=t(-413824+464471)p=H(G,g)S=Y[p]B={[e]=m,[y]=I;[l]=S}e={B}B=L[t(576243-525427)]else e=G B=g B=G and 7809564-(-922728)or 12128192-802974 end end end end else if B&lt;387302+11957459 then if B&lt;11964440-356310 then if B&lt;11435925-(-103831)then if B&lt;11845560-508442 then if B&lt;11258246-(-68534)then g=t(890010+-839330)G=L[g]e=G B=-879826+9612118 else d=t(839028+-788254)K=-990663+30840450307552 D=x[r[1027892+-1027891]]n=x[r[364372+-364370]]W=n(d,K)N=D[W]B=14247354-124990 o=N end else e=t(439579-388824)m=F[-705544+705546]B=L[e]p=14215190149860-(-1007351)I=F[-788769+788770]l=x[r[793939+-793938]]H=t(-1015645+1066365)S=x[r[840277+-840275]]Y=S(H,p)y=l[Y]e={B(I,m,y)}e={U(e)}B=L[t(-106640+157298)]end else if B&lt;11658641-68969 then d=t(-180790-(-231385))K=347800+34702146875527 B=11333024-(-1023376)D=x[r[8816-8815]]n=x[r[-828834-(-828836)]]W=n(d,K)N=D[W]o=N else Q=-1009894-(-1009896)c=u[Q]B=-732084+3324931 Q=x[z]i=c==Q LS=i end end else if B&lt;-756679+12659973 then if B&lt;-168429+11928549 then e=t(-122607+173227)B=L[e]I=t(-236293+287108)e=L[I]I=t(747330+-696515)L[I]=B I=t(-880042+930662)L[I]=e B=-691376+14341647 I=x[r[-194050+194051]]m=I()else g=t(546885+-496173)H=x[r[776457+-776456]]p=x[r[-966507-(-966509)]]I=F[665311-665310]a=14670537051313-832002 G=p(g,a)Y=H[G]S=I[Y]Y=651448+-651447 G=t(-312291-(-362992))l=S[Y]g=22612996694340-686115 Y=x[r[450285+-450284]]H=x[r[1005712+-1005710]]p=H(G,g)S=Y[p]y=l[S]S=x[r[101782-101781]]Y=x[r[65321-65319]]p=t(84873-34096)G=-406313+3183505619187 H=Y(p,G)Y=t(977430+-926713)l=S[H]m=y[l]H=-250325+6666445790709 y=-302607+302608 e=m[y]y=x[r[-1020541+1020542]]l=x[r[-653282+653284]]S=l(Y,H)m=y[S]B=e[m]e={B}B=L[t(-733582+784392)]end else if B&lt;12696262-703103 then p=g W=t(-344044-(-394742))n=L[W]W=t(-987141+1037852)D=n[W]B=252283+8104427 n=D(I,p)D=x[r[-701036+701042]]W=D()N=n+W p=nil j=N+Y N=-799090+799346 o=j%N Y=o N=y[m]W=-39104+39105 n=Y+W D=l[n]j=N..D y[m]=j else W=x[r[216961+-216960]]h=t(-413136-(-463818))d=x[r[1025659+-1025657]]R=12137196225292-(-578311)K=d(h,R)B=-873352+3490614 n=W[K]N=n end end end else if B&lt;12624967-(-128091)then if B&lt;11551623-(-976179)then if B&lt;13192901-768461 then N=x[r[-1262-(-1263)]]d=28454854761407-(-333827)B=j h=980009+8120191474332 W=t(-959267+1009991)D=x[r[797064+-797062]]n=D(W,d)p=nil j=N[n]n=x[r[-715659-(-715660)]]K=t(-666817-(-717435))W=x[r[395801-395799]]d=W(K,h)D=n[d]N=G[D]G=nil a={[v]=o;[j]=N}g=B(l,a)B=-433702+1755494 else m=l B=S B=12711388-180395 end else if B&lt;389935+12143783 then e=m B=y B=m and-924068+8178466 or 365380+3622951 else m=x[r[1027665-1027664]]I=F[506378-506377]S=t(-829201+879826)H=913669039119-8806 y=x[r[-243954+243956]]Y=-299234+29209054283267 l=y(S,Y)Y=t(-555692-(-606388))e=m[l]y=x[r[-284827-(-284828)]]l=x[r[822916-822914]]S=l(Y,H)m=y[S]B={[e]=m}e={B}B=L[t(-357363+408181)]end end else if B&lt;881536+12006482 then if B&lt;1025667+11836050 then B=L[t(226850+-176226)]e={m}else B=true B=14354358-799648 end else if B&lt;13764743-700836 then y=F[-228501+228504]e=t(887000-836336)m=F[-488710-(-488712)]I=F[-463985-(-463986)]B={}l=B B=L[e]H={B(I)}e=H[-546826+546827]S=H[-847169+847171]B=-650481+1972273 Y=H[919026-919023]H=e else I=F[653769-653768]y=F[602065-602062]B={}m=F[-1043064+1043066]e=m l=B B=m and 2736744-849800 or 503929+-454849 end end end end end else if B&lt;-788594+15516193 then if B&lt;-193569+14048488 then if B&lt;13506673-(-124864)then if B&lt;139405+13297172 then if B&lt;12779625-(-459587)then if B&lt;12244262-(-968039)then e={}B=L[t(96232+-45413)]else h=E(h)z=E(z)P=E(P)B=12739705-(-928817)u=nil J=E(J)K=E(K)R=E(R)end else LS=x[m]e=LS B=LS and 9021802-(-892829)or 483733+15653106 end else if B&lt;13876690-286751 then B=X(14386035-(-366773),{l})n={B()}e={U(n)}B=L[t(-649825-(-700500))]else H=S a=B d=13169737147992-(-274844)N=x[r[-876367+876368]]D=x[r[-499173-(-499175)]]W=t(-45859-(-96588))n=D(W,d)j=N[n]o=p[j]N=x[r[993774-993773]]D=x[r[-988385-(-988387)]]W=t(486261-435623)d=-301488+25277084551082 n=D(W,d)j=N[n]v=o==j B=v and 49297+10428910 or-1025796+10350214 g=v end end else if B&lt;934953+12732286 then if B&lt;13871478-227741 then K=O()h=t(361703-311015)R=515446+-515346 z=-325340+325341 x[K]=D e=L[h]h=t(507519+-456768)u=80215-80213 B=e[h]h=-1030105+1030106 e=B(h,R)R=500330+-500330 h=O()x[h]=e J=57989-57734 B=x[H]e=B(R,J)R=O()J=-58760-(-58761)T=327719-317719 x[R]=e B=x[H]P=x[h]M=182499+-182499 e=B(J,P)J=O()x[J]=e e=x[H]P=e(z,u)e=942676-942675 i=t(955852-905144)B=P==e P=O()e=t(901112+-850299)x[P]=B s=L[i]c=x[H]Q={c(M,T)}u=t(-63342-(-114156))i=s(U(Q))B=t(-997732+1048339)B=j[B]s=t(336737-285923)LS=i..s z=u..LS B=B(j,e,z)z=O()x[z]=B u=t(510946-460155)LS=A(10326504-(-693383),{H,K;g,y,m,N,P;z,h;J,R;G})e=L[u]u={e(LS)}B={U(u)}u=B B=x[P]B=B and 13168002-(-113931)or 5601552-(-844706)else B=true B=B and 11531035-(-126531)or 12970800-(-241278)end else if B&lt;-781371+14449905 then D=D+W K=not d e=D&lt;=n e=K and e K=D&gt;=n K=d and K e=K or e K=13421943-(-214812)B=e and K e=-319194+14795776 B=B or e else S=t(1055122-1004363)m=x[r[-257373-(-257374)]]Y=19106545290186-977161 I=F[-409458+409459]g=16178+7300083863061 y=x[r[-842709+842711]]G=-489155+24749043393479 l=y(S,Y)e=m[l]y=x[r[-885776-(-885777)]]Y=t(959015-908237)H=243527+4322558152853 l=x[r[111644+-111642]]S=l(Y,H)m=y[S]p=-664210+3080233478188 H=t(-114631-(-165240))l=x[r[-187424-(-187425)]]S=x[r[-933408+933410]]Y=S(H,p)y=l[Y]S=x[r[-574396-(-574397)]]p=t(154211-103417)Y=x[r[221689-221687]]H=Y(p,G)l=S[H]Y=x[r[-182881+182882]]G=t(-483939-(-534680))H=x[r[-788249+788251]]p=H(G,g)S=Y[p]B={[e]=m;[y]=I;[l]=S}e={B}B=L[t(612163-561376)]end end end else if B&lt;-378200+14822971 then if B&lt;13370726-(-649666)then if B&lt;789210+13193011 then if B&lt;14022656-107905 then p=2421035740125-518006 I=F[547528+-547527]m=F[-146660+146662]B=x[r[481429-481428]]H=t(494348+-443738)l=x[r[-159303+159305]]S=x[r[448128+-448125]]Y=S(H,p)y=l[Y]e={B(I,m,y)}e={U(e)}B=L[t(-881633+932249)]else B={}x[r[-414733+414735]]=B e=x[r[262373+-262370]]S=-463094+35184372551926 B=8563131-206421 l=e e=m%S H=-757615-(-757870)x[r[-907069+907073]]=e p=t(236046-185348)Y=m%H H=-544811+544813 S=Y+H x[r[-189220-(-189225)]]=S H=L[p]p=t(657982+-607369)Y=H[p]H=Y(I)p=-698488+698489 Y=t(-944954-(-995619))G=H g=-773895+773896 y[m]=Y Y=135953+-135935 a=g g=416098+-416098 v=a&lt;g g=p-a end else m=x[r[-753418+753421]]y=735829+-735658 I=m*y B=176985+5854318 m=-879793+880050 e=I%m x[r[-547992-(-547995)]]=e end else if B&lt;14584250-273824 then h=691636+32487633677668 p=nil N=x[r[-312576-(-312577)]]d=872336+30336183625630 B=j W=t(988791+-938141)D=x[r[-298054-(-298056)]]K=t(831013-780295)n=D(W,d)j=N[n]n=x[r[-224925-(-224926)]]W=x[r[290401+-290399]]d=W(K,h)D=n[d]N=G[D]a={[v]=o,[j]=N}G=nil g=B(l,a)B=1025715+13687333 else N=#o d=-735942-(-735942)j=N==d B=j and 7082318-886960 or 7307182-346338 end end else if B&lt;14314367-(-271619)then if B&lt;-984149+15460899 then n=x[m]D=n B=n and 6117131-46683 or 14742366-(-607883)else B=x[r[-163459+163462]]a=t(-374425-(-425237))p=x[r[199134+-199133]]G=x[r[53005+-53003]]v=18764+13871175307247 g=G(a,v)o=12720287079350-459923 N=t(-1021459+1072087)H=p[g]v=t(501528+-450723)G=x[r[741836+-741835]]D=16399013453380-(-16272)g=x[r[458014+-458012]]j=368685+20712193688959 a=g(v,o)p=G[a]g=x[r[-695928+695929]]a=x[r[343763-343761]]o=t(749067+-698296)v=a(o,j)G=g[v]g=false v=x[r[353293-353292]]o=x[r[859662+-859660]]j=o(N,D)a=v[j]v=585287+-585287 Y={[H]=y;[p]=l,[G]=g;[a]=v}H=t(739514-688885)H=B[H]S={H(B,Y)}B=L[t(494195-443470)]e={U(S)}end else if B&lt;14055758-(-654993)then N=N+K R=not h j=N&lt;=d j=R and j R=N&gt;=d R=h and R j=R or j R=4688163-649064 B=j and R j=-845037+7381938 B=B or j else Y,G=H(S,Y)B=Y and-815632+17453092 or 15288804-811978 end end end end else if B&lt;537293+15326959 then if B&lt;-548944+15764507 then if B&lt;14142169-(-836989)then if B&lt;-906786+15772006 then if B&lt;-298665+15094482 then B=402107+13248164 else l=O()m=O()H=t(-604610-(-655401))y=t(361155-310457)B=true x[m]=B I=F e=L[y]S=O()y=t(-985064-(-1035833))p=q(2544222-946780,{S})B=e[y]y=O()x[y]=B B=A(-740874+8878954,{})x[l]=B B=false x[S]=B Y=L[H]H=Y(p)e=H B=H and 11046175-249190 or-653842+5586410 end else I=F[-785224+785225]B=x[r[212181+-212180]]m=F[-157047-(-157049)]y=B B=y[m]B=B and 1582098-(-603116)or 675712+13297719 end else if B&lt;15671300-598922 then m=x[r[855319-855317]]B=756427+9363642 y=x[r[-813035-(-813038)]]I=m==y e=I else W=t(169750+-119042)B=L[W]K=t(48646-(-2169))d=L[K]W=B(d)B=t(-845207+895827)L[B]=W B=-326010+8881037 end end else if B&lt;14982824-(-540099)then if B&lt;-101533+15512550 then x[m]=D B=x[m]B=B and 777269+1325174 or 13877293-1000687 else e={e}B=L[t(-305129+355773)]end else if B&lt;-944558+16616703 then p=t(-495680-(-546280))I=F[-38608+38609]S=x[r[820159-820158]]Y=x[r[544719-544717]]G=-1003884+18470657340165 H=Y(p,G)p=-106418+5642498697717 l=S[H]H=t(845209+-794482)y=I[l]l=-25813+25814 m=y[l]l=x[r[747026+-747025]]S=x[r[651912-651910]]Y=S(H,p)y=l[Y]H=2977525356888-(-109586)Y=t(293183-242548)e=m[y]y=x[r[-438331-(-438332)]]l=x[r[-15165+15167]]S=l(Y,H)m=y[S]B=e[m]e={B}B=L[t(972772+-921972)]else Y=x[r[-215453-(-215454)]]g=2938089940723-(-220773)H=x[r[860404+-860402]]y=B G=t(608421+-557615)p=H(G,g)S=Y[p]I=F[731555+-731554]l=I[S]m=l B=l and 12034602-872367 or 11725586-(-805407)end end end else if B&lt;-584391+16862221 then if B&lt;-549464+16785939 then if B&lt;16150105-26035 then y=5935990-(-62707)m=t(-779681-(-830449))I=m^y e=-112249+617876 B=e-I e=t(-969671-(-1020340))I=B B=e/I e={B}B=L[t(-972991-(-1023596))]else B=-725315+13961862 x[m]=e end else if B&lt;-223257+16477000 then G=t(-419982+470677)Y=x[r[997412+-997411]]H=x[r[-517783-(-517785)]]y=B g=335818+21013580301935 I=F[382015-382014]p=H(G,g)S=Y[p]l=I[S]m=l B=l and 582503+1605433 or-484376+3863742 else N=13439636434578-(-993760)j=t(-378167+428827)a=x[r[339980-339979]]v=x[r[979078-979076]]B=6274976-381742 o=v(j,N)g=a[o]G=g end end else if B&lt;70022+16329871 then if B&lt;-381278+16739466 then I=F[-414258+414259]m=F[-368440+368442]e=t(-781199+831954)B=L[e]l=x[r[658399-658398]]S=x[r[830973+-830971]]p=20274158908528-626576 H=t(477183+-426484)Y=S(H,p)y=l[Y]e={B(I,m,y)}B=L[t(-404916+455592)]e={U(e)}else B=Y and 2940655-754292 or 10702899-410667 end else if B&lt;680825+15881594 then e=t(420213+-369549)B=L[e]H={B(I)}Y=H[-598836+598839]S=H[-326503+326505]B=988908+13724140 e=H[85314-85313]H=e else a=t(-826348+876941)n=13383600128382-(-562906)D=14106206789172-279692 g=L[a]J=t(-2885+53639)p=Y v=x[r[-2965+2966]]o=x[r[-345081+345083]]N=t(237460+-186703)j=o(N,D)a=v[j]D=t(197620+-146971)B=g[a]o=x[r[-223786-(-223787)]]j=x[r[-706535-(-706537)]]N=j(D,n)D=B j=B v=o[N]K=x[r[-745036+745037]]h=x[r[442523-442521]]P=31430616026318-(-961630)R=h(J,P)d=K[R]W=G[d]K=x[r[807878-807877]]P=2455629045587-(-517412)J=t(12811-(-37908))h=x[r[354651+-354649]]R=h(J,P)d=K[R]n=W==d B=n and 4756792-396760 or 412789+9433526 N=n end end end end end end end end B=#w return U(e)end,function(L,t)local U=y(t)local F=function(F,r)return B(L,{F,r},t,U)end return F end,{},function(L)I[L]=I[L]-(-657355-(-657356))if 349013+-349013==I[L]then I[L],x[L]=nil,nil end end,function(L,t)local U=y(t)local F=function(F,r,w,V)return B(L,{F;r;w,V},t,U)end return F end,function(L,t)local U=y(t)local F=function(F,r,w)return B(L,{F,r,w},t,U)end return F end,function(L,t)local U=y(t)local F=function(F,r,w,V,e)return B(L,{F,r,w,V,e},t,U)end return F end,function(L,t)local U=y(t)local F=function(F,r,w,V,e,x,I,O)return B(L,{F,r;w,V,e;x,I,O},t,U)end return F end,function(L)local t,B=664689+-664688,L[158017-158016]while B do I[B],t=I[B]-(334319-334318),(-181670+181671)+t if-936933+936933==I[B]then I[B],x[B]=nil,nil end B=L[t]end end return(S(-482175+15309358,{}))(U(e))end)(getfenv and getfenv()or _ENV,unpack or table[t(736370-685690)],newproxy,setmetatable,getmetatable,select,{...})end)(...)</ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="ModuleScript" referent="RBXB2C2BDBFE77F4EB4890AC5A8F3051AEC">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">AISendHandler</string>
				<string name="ScriptGuid">{8C526E38-A1FF-46E8-BE3C-44AE82B5F68C}</string>
				<ProtectedString name="Source">--[[ v1.0.0 https://wearedevs.net/obfuscator ]] return(function(...)local h={&quot;\048\085\079\085\099\090\057\121\113\071\049\087\069\085\053\085\072\122\076\047\097\057\122\075\105\052\067\061&quot;,&quot;\103\086\114\088\121\086\104\080\119\053\078\073\110\084\118\080\105\086\118\097\089\084\068\061&quot;;&quot;\086\069\057\052\083\084\049\112\070\055\100\117\052\103\121\061&quot;,&quot;\081\055\070\079\067\048\061\061&quot;;&quot;\084\055\109\070\053\048\061\061&quot;,&quot;\048\067\056\081\068\082\052\121\056\108\090\073\083\097\105\054\110\101\061\061&quot;;&quot;\089\079\077\119\102\101\061\061&quot;;&quot;\101\051\052\067\082\053\106\104\088\103\065\121\048\075\113\119&quot;;&quot;\049\081\047\119\089\112\119\049&quot;,&quot;\076\069\118\114\119\053\097\082\121\053\075\122\056\106\121\057\110\053\069\061&quot;,&quot;\048\075\071\051\067\111\089\103\067\098\056\098\105\074\075\087&quot;,&quot;\099\101\071\116\119\105\061\061&quot;;&quot;\081\075\076\090\080\070\099\097\049\105\061\061&quot;;&quot;\110\111\118\087\089\111\051\061&quot;;&quot;\089\069\103\079\055\103\055\088\119\107\068\057\103\086\122\080\098\105\061\061&quot;,&quot;\086\073\078\085\089\084\104\080\098\048\061\061&quot;,&quot;\121\053\087\087\110\101\061\061&quot;;&quot;\070\112\101\084\076\085\088\115\102\114\068\116\067\080\053\081\068\052\114\119\110\114\099\097\051\052\072\061&quot;;&quot;\110\053\103\069\089\071\103\069\121\086\104\087\121\084\057\080&quot;;&quot;\069\050\087\088\072\111\104\082\114\078\122\089\122\087\097\054&quot;;&quot;\113\049\113\085\107\048\061\061&quot;;&quot;\068\080\087\118\056\073\055\099\105\107\085\103\105\069\117\075&quot;,&quot;\111\116\112\075\114\105\061\061&quot;;&quot;\107\083\118\122\080\087\105\050\081\049\072\061&quot;,&quot;\111\108\101\119\054\074\057\109&quot;;&quot;\108\105\061\061&quot;;&quot;\075\116\074\106&quot;;&quot;\049\100\109\048\119\047\089\066\069\090\080\086\117\107\121\050\089\116\121\099\056\067\066\086\074\066\113\111\074\109\109\073\076\102\078\119\071\097\110\118\113\085\098\054\087\070\101\079\068\067\043\104\065\069\070\099\051\099\098\121\071\079\114\067\108\074\116\078\118\075\049\104\121\067\076\089\101\073\049\047\106\084\069\073\100\077\070\114\122\098\043\118\057\049\080\066\051\066\087\098\120\075\067\050\050\081\071\113\067\100\077\072\072\075\082\114\065\102\070\072\083\069\087\056\090\102\086\079\072\081\106\117\113\047\072\114\068\115\101\061&quot;,&quot;\120\105\099\112&quot;;&quot;\116\071\097\085\068\069\104\043\057\084\055\080\078\104\073\098&quot;;&quot;\049\055\070\090\076\111\053\113\110\065\105\056\117\085\101\086&quot;,&quot;\114\105\066\053\055\112\112\120&quot;,&quot;\089\071\105\069\089\111\080\049\055\109\056\121\119\106\075\088&quot;,&quot;\073\109\114\102\067\048\061\061&quot;;&quot;\082\090\069\114\102\055\051\108\117\101\061\061&quot;,&quot;\105\102\054\065\107\068\048\054\056\118\073\050\073\068\106\069\090\073\056\050\083\073\069\071\121\056\108\101\073\117\120\102&quot;,&quot;\081\122\112\101\050\098\115\113\056\117\054\105\110\116\052\080\115\067\085\099\103\082\053\113\099\119\071\084\081\098\114\101\087\082\089\115\074\117\098\099\056\053\100\066\075\106\079\053\055\077\076\076\118\115\043\112\090\115\098\120\112\100\117\118\112\097\056\070\070\098\089\121\057\066\089\057\112\047\077\122\053\121\065\085\097\102\090\055\076\102\050\065\114\118\077\083\109\116\070\079\047\057\065\055\088\056\085\109\090\082\089\117\119\102\105\116\076\111\055\080\069\105\106\110\086\106\090\105\065\097\079\077\102\053\052\077\082\076\069\105\088\103\050\075\084\087\051\061&quot;,&quot;\056\081\122\090\106\107\115\099\071\116\073\088\116\110\051\080\082\088\089\088\056\067\085\074\065\114\074\099\120\085\053\111\114\101\122\071\078\104\083\112\085\084\097\100\083\097\080\118\121\115\120\107\070\051\099\089\114\119\073\111\110\073\084\084\111\056\043\115\043\079\083\120\111\043\116\072\078\090\105\115\104\089\118\084\068\066\070\073\102\097\074\119\043\088\085\088\089\088\118\081\122\117\089\079\087\105\100\112\110\082\082\109\099\072\077\108\122\076\112\052\104\070\052\048\056\106\073\083\106\078\088\108\111\049\043\051\066\054\097\065\084\114\072\079\117\056\071\043&quot;;&quot;\106\074\088\101\105\102\086\076&quot;,&quot;\119\098\118\086\122\120\119\079\055\090\098\057&quot;;&quot;\074\077\075\076&quot;;&quot;\056\097\043\118\114\117\075\121\122\055\104\084\121\098\117\101\115\090\077\116\065\098\071\088&quot;,&quot;\068\043\116\100\076\055\070\106\118\048\061\061&quot;,&quot;\100\043\098\051\109\057\121\076\108\053\105\087\079\078\113\070\098\048\071\055&quot;;&quot;\110\098\112\121\105\098\084\075&quot;,&quot;\104\113\117\117\068\065\068\102\057\110\098\070\057\097\103\117\072\048\061\061&quot;;&quot;\104\053\103\069\119\053\103\113\055\084\080\050\056\105\061\061&quot;;&quot;\100\079\076\087\068\070\102\055\076\048\061\061&quot;;&quot;\055\111\080\050\076\051\061\061&quot;;&quot;\110\085\122\055\099\099\052\048\119\110\074\106\055\107\110\119&quot;;&quot;\078\052\105\115\085\086\073\098&quot;,&quot;\055\111\078\115\055\071\073\082\056\086\072\061&quot;,&quot;\109\111\082\108\069\089\051\065\120\088\070\053\054\098\080\112\069\052\043\090\107\043\048\061&quot;;&quot;\075\074\049\105&quot;;&quot;\119\100\097\050\067\077\121\121\112\076\077\111\074\106\087\119\121\067\050\056&quot;,&quot;\099\076\074\049\048\122\121\051\071\065\089\084\099\102\119\061&quot;;&quot;\053\057\087\108\079\101\072\090\119\069\081\048\079\072\119\061&quot;;&quot;\066\110\054\071\087\118\101\111\108\113\104\071\085\101\075\115\082\051\100\099\081\105\104\105\113\073\099\080\098\084\097\048\119\065\070\076\067\051\090\122\078\086\103\078\111\047\085\101\049\079\078\112\072\112\108\087\103\113\109\089\043\083\071\065\048\121\111\076\047\054\080\117\101\073\066\043\100\055\052\107\082\070\113\105\054\076\068\082\047\069\077\049\116\083\107\071\120\065\074\074\082\052\089\056\115\052\112\089\111\115\102\117\074\110\076\111\079\105\103\082\086\073\107\085\118\075\121\122\078\043\107\051\051\047\102\120\121\119\071\083\071\077\072\075\102\086\089\053&quot;,&quot;\072\109\115\049\099\074\110\052\049\076\115\055\049\073\090\061&quot;;&quot;\119\105\056\051\074\077\043\049&quot;;&quot;\116\053\056\053\075\070\115\102&quot;;&quot;\090\067\056\055\110\107\117\084&quot;,&quot;\089\049\072\061&quot;;&quot;\083\087\050\077\075\051\066\043\081\098\087\068\073\088\100\110&quot;,&quot;\113\113\116\082\072\072\072\117\079\108\071\113\055\056\080\089&quot;;&quot;\117\067\073\074\084\107\111\047&quot;;&quot;\110\084\117\115\056\111\078\075&quot;;&quot;\082\072\074\076\048\079\122\067\097\053\121\061&quot;,&quot;\080\069\086\102\055\109\112\065\080\048\061\061&quot;;&quot;\068\107\100\115\055\051\116\089\054\119\048\057\121\120\076\047\048\097\048\106\054\119\100\069\076\099\075\082\065\107\086\084\119\055\052\067\079\117\055\116\043\069\114\118\122\071\112\077\086\079\083\078\110\069\067\074\080\066\073\121\121\114\074\049\120\051\061\061&quot;;&quot;\089\080\056\085\052\088\047\073\071\080\085\099\119\102\080\107&quot;;&quot;\075\047\072\047\073\086\047\086&quot;,&quot;\104\053\103\069\105\053\087\085\089\111\104\113\056\071\090\061&quot;,&quot;\098\088\075\105\055\084\088\097\081\084\051\051\119\108\118\053&quot;,&quot;\118\108\056\073\053\048\061\061&quot;,&quot;\120\110\050\109\105\048\061\061&quot;,&quot;\088\067\074\104\088\071\066\102\119\106\056\073\065\084\115\074\104\116\071\106\079\106\085\081\104\070\073\085\121\074\088\087\077\053\085\075\118\069\049\071\101\116\052\055\085\056\052\084\073\071\057\049\050\114\080\075\065\079\070\084\070\110\047\101\065\099\081\071\067\083\112\120\119\075\066\098\098\051\061\061&quot;,&quot;\113\106\080\108\076\105\061\061&quot;,&quot;\105\055\120\105\097\052\086\052\043\101\061\061&quot;;&quot;\103\053\122\071\098\105\061\061&quot;;&quot;\089\057\118\057\103\111\047\101\082\079\090\048\108\105\061\061&quot;,&quot;\108\071\113\057\120\053\076\121\079\105\061\061&quot;;&quot;\105\053\078\115\089\084\103\050\055\048\061\061&quot;;&quot;\068\117\072\113\087\117\121\066\101\052\056\070\072\116\088\061&quot;;&quot;\104\053\103\069\119\053\103\069\055\111\080\115\056\051\061\061&quot;;&quot;\051\086\117\112\115\120\121\067\085\121\075\073\088\114\115\089\070\098\069\061&quot;,&quot;\122\051\061\061&quot;;&quot;\054\105\049\107\114\098\066\087\066\101\061\061&quot;;&quot;\066\108\056\098\105\087\076\074\053\055\083\069\082\073\110\061&quot;;&quot;\053\105\071\071\054\081\110\084\084\055\113\057\072\113\110\061&quot;,&quot;\105\100\114\113\122\105\061\061&quot;,&quot;\103\085\115\100\051\087\080\048\053\119\099\069\068\085\079\115\110\067\090\052\108\048\061\061&quot;;&quot;\104\086\108\070\065\113\055\121\054\072\069\049\122\049\113\097\098\048\061\061&quot;,&quot;\086\073\078\075\056\086\104\087\055\111\117\082\089\111\119\061&quot;;&quot;\103\084\103\050\055\111\078\113\068\101\061\061&quot;;&quot;\107\110\085\100\075\080\087\049\098\104\047\081\079\054\090\102&quot;,&quot;\070\054\072\081\049\056\072\114\107\086\056\083\054\054\115\078\119\106\120\043\100\101\073\052\050\110\090\102\119\113\078\067\071\049\075\047\067\090\100\072\076\100\047\121\080\082\102\079\068\070\097\086\119\056\097\070\113\077\083\120\090\072\053\102\068\052\119\050\103\112\083\074\121\043\086\079\114\090\052\113\073\119\104\080\075\082\097\109\074\057\069\111\099\111\070\100\106\100\110\061&quot;;&quot;\073\075\070\043\119\101\061\061&quot;,&quot;\115\079\101\079\114\051\112\088\075\086\107\043\100\048\061\061&quot;,&quot;\116\087\053\100\084\106\084\110&quot;,&quot;\098\109\066\073\067\048\061\061&quot;,&quot;\102\100\118\073\052\054\076\110\110\082\067\061&quot;,&quot;\089\109\114\049\089\052\087\120\105\119\055\071\110\050\056\071&quot;;&quot;\112\101\061\061&quot;,&quot;\106\052\098\107\104\053\078\120&quot;;&quot;\090\122\073\051\052\102\112\082\066\105\061\061&quot;;&quot;\105\100\074\105\072\110\066\085\120\047\108\111\112\077\085\117\120\079\056\054\068\108\084\097\065\122\113\110\098\083\104\065\082\114\117\090\078\051\049\102\111\121\068\053\086\086\082\079\051\077\070\050\070\082\107\048\069\117\100\073\109\056\083\072\099\101\061\061&quot;,&quot;\078\109\068\082\122\067\069\086\068\102\104\084\117\066\103\084\103\051\061\061&quot;;&quot;\089\071\117\069\076\048\061\061&quot;,&quot;\119\108\087\086\076\107\103\080\071\109\104\057\119\103\114\076&quot;,&quot;\080\054\084\052\056\102\080\099&quot;,&quot;\103\119\104\085\089\052\072\061&quot;,&quot;\108\102\102\067\118\067\080\102\097\101\061\061&quot;,&quot;\110\101\083\052\043\054\088\049\109\056\069\061&quot;,&quot;\055\111\117\082\089\111\119\061&quot;,&quot;\105\078\122\122\090\102\072\068\100\087\119\067\122\043\105\061&quot;;&quot;\086\107\072\052\057\079\076\078&quot;;&quot;\056\053\073\109\052\103\106\108\104\084\073\073&quot;;&quot;\071\080\122\049\103\086\085\120\089\109\118\072\055\088\085\105\118\105\061\061&quot;,&quot;\081\106\097\116\110\080\103\075\105\069\075\071\110\088\122\117\055\101\061\061&quot;,&quot;\110\070\077\098\086\072\114\054\084\079\083\122\106\081\119\104&quot;,&quot;\099\100\107\103\082\056\105\103\078\105\061\061&quot;;&quot;\071\115\052\110\118\051\061\061&quot;;&quot;\089\049\106\061&quot;,&quot;\089\107\068\061&quot;,&quot;\107\077\051\054\113\081\080\119\065\105\061\061&quot;,&quot;\056\084\057\079\089\107\072\061&quot;;&quot;\104\111\103\108\055\102\122\079\098\105\061\061&quot;,&quot;\121\109\071\108\105\105\061\061&quot;;&quot;\119\110\084\074\109\077\101\101\116\097\048\047\076\088\082\104\065\112\078\122\087\085\114\083\115\072\077\072\049\051\061\061&quot;,&quot;\076\086\114\087\076\086\122\108&quot;;&quot;\107\050\097\081\050\076\121\075&quot;;&quot;\101\083\116\078\119\070\087\111&quot;;&quot;\053\100\051\086\077\049\065\097&quot;,&quot;\098\100\067\116\106\043\043\090&quot;,&quot;\053\087\066\067\088\086\117\105\066\075\113\048\068\098\084\099\057\104\075\088&quot;,&quot;\102\108\088\082\074\083\082\055&quot;,&quot;\110\053\118\113\076\086\114\069&quot;,&quot;\089\111\103\115&quot;,&quot;\110\086\114\114\110\053\085\086\081\111\073\047\074\106\080\047\081\101\061\061&quot;,&quot;\103\102\115\087\066\052\106\055\118\056\088\050\065\068\087\050\103\087\074\116\115\083\090\118\077\047\101\114\107\120\121\101\120\067\105\061&quot;;&quot;\104\111\114\043\047\080\048\104&quot;;&quot;\086\072\113\104\109\121\047\089&quot;,&quot;\120\056\052\086\065\102\068\052&quot;;&quot;\081\118\114\110\055\051\061\061&quot;;&quot;\090\113\048\049\075\115\072\121\088\109\080\103\057\109\067\107\088\067\114\109\076\090\090\074&quot;,&quot;\054\069\078\121\117\082\071\089\104\048\104\117\053\110\112\082&quot;,&quot;\106\084\077\099\112\106\075\082\072\122\057\072\115\051\061\061&quot;,&quot;\077\083\072\114\081\043\075\065\043\073\099\061&quot;,&quot;\121\066\066\086\074\053\122\119\089\120\119\110\099\071\119\061&quot;;&quot;\086\108\057\107&quot;;&quot;\049\119\052\069\111\089\068\061&quot;,&quot;\047\112\072\066\043\057\122\047\110\114\055\089\082\115\047\061&quot;,&quot;\117\057\053\048\119\056\108\089\080\053\066\086\047\087\100\052\048\048\061\061&quot;,&quot;\086\073\078\109\121\051\061\061&quot;;&quot;\056\081\099\084\073\084\112\105\088\065\117\066\113\054\100\118\081\076\084\090\087\048\053\043\056\052\068\061&quot;;&quot;\118\119\072\057\052\106\122\107\121\052\087\081\052\073\056\104&quot;;&quot;\103\083\076\048\122\116\066\057\122\098\105\073\053\065\119\048\083\048\085\117\116\116\090\061&quot;,&quot;\054\120\066\089\074\109\108\119\056\048\061\061&quot;,&quot;\075\077\090\043\057\118\099\077\102\073\120\079&quot;;&quot;\068\109\056\080\081\050\114\107\076\107\055\119\052\111\122\084\103\071\110\061&quot;,&quot;\070\071\120\050\073\048\061\061&quot;;&quot;\090\053\111\103\089\056\100\109\110\105\061\061&quot;;&quot;\086\112\106\117\066\066\113\070\065\114\103\075\055\086\099\089\108\097\105\061&quot;;&quot;\100\079\054\054\117\074\055\052\065\111\104\067\087\117\074\082\109\080\118\076\115\117\067\108\057\049\053\100\076\067\076\104\071\053\106\113\119\097\054\114&quot;;&quot;\056\053\073\087\055\111\118\099&quot;;&quot;\053\080\077\104\102\077\088\122\097\105\069\099\065\048\061\061&quot;,&quot;\116\086\049\067\122\048\061\061&quot;,&quot;\103\105\061\061&quot;,&quot;\051\054\080\103\050\120\056\077\113\072\110\061&quot;,&quot;\082\101\075\051\081\073\119\057\053\081\115\086\116\100\106\065\048\101\073\054\103\098\085\102\069\048\061\061&quot;,&quot;\071\098\082\066&quot;;&quot;\043\120\122\056\068\081\051\118&quot;,&quot;\080\102\088\052\083\098\065\065\067\051\061\061&quot;;&quot;\097\048\073\098&quot;,&quot;\052\118\053\070\100\048\061\061&quot;;&quot;\074\105\114\120\107\074\053\084\073\105\050\073\114\074\105\109\117\082\074\102\122\068\070\084\105\089\088\078\084\078\106\117\115\053\113\102\090\111\049\087\072\119\075\053&quot;,&quot;\089\119\103\084\089\050\106\053\089\052\103\071\118\084\103\090\052\071\068\061&quot;;&quot;\057\070\052\119\084\120\067\090\079\050\105\115\080\088\071\078\117\108\050\103\120\077\086\084\097\075\071\051\084\086\070\073\068\043\105\061&quot;,&quot;\055\071\097\051\121\071\118\083&quot;,&quot;\110\102\069\071\081\089\110\075\104\053\075\043\067\116\077\049\104\084\116\082&quot;;&quot;\077\065\121\102\109\075\043\057\069\087\079\049\086\098\106\108\119\080\106\084\072\065\114\106\104\118\109\051\100\085\098\085\088\120\100\099\052\051\061\061&quot;,&quot;\089\053\097\070\110\053\103\115\056\117\078\082\055\086\104\069\089\053\097\070\121\053\057\085\121\053\047\061&quot;;&quot;\110\084\103\057\055\071\080\113\056\105\061\061&quot;,&quot;\056\111\051\072\087\106\078\056\077\051\075\097\077\081\077\055\073\072\054\066\056\090\105\119\110\071\047\074\107\087\110\061&quot;,&quot;\074\101\061\061&quot;,&quot;\056\107\118\073\121\101\061\061&quot;,&quot;\102\053\090\119\116\077\100\070&quot;,&quot;\122\104\089\122\104\109\069\067\112\048\102\102\109\085\110\102\080\069\110\049\080\047\107\101\053\052\057\075\066\098\066\070\052\054\079\054\074\057\081\107\088\117\120\122\120\100\114\053\098\051\061\061&quot;;&quot;\074\072\119\121&quot;,&quot;\106\110\083\110\069\075\057\119\057\100\073\078\043\083\069\061&quot;;&quot;\089\086\122\106\076\109\122\080\118\086\080\111\071\103\118\071\118\106\088\061&quot;,&quot;\051\055\081\082\118\086\071\082\066\104\047\101\110\108\110\097\113\051\106\049\076\085\109\055\051\050\051\071\116\109\117\047\109\116\110\079\097\101\061\061&quot;,&quot;\107\070\084\086&quot;;&quot;\090\055\105\121\097\118\049\101\101\102\043\066\102\086\068\067\069\079\070\047\052\097\043\076\067\053\119\057\117\104\115\078\055\047\090\066\110\079\116\073\090\122\101\061&quot;,&quot;\055\102\080\051\056\105\061\061&quot;,&quot;\079\077\100\109\048\054\089\101\087\099\108\118\119\090\099\111\112\109\108\106&quot;,&quot;\103\111\117\075\110\111\103\113\072\106\104\080\055\111\103\050\055\111\103\088\072\105\061\061&quot;,&quot;\050\056\084\056\077\109\108\106\067\079\047\113\119\084\056\081\111\082\069\043\108\084\107\081\051\107\071\078&quot;,&quot;\078\057\050\089\072\105\083\120\087\100\113\078\085\110\104\050\054\052\065\113\108\106\080\079\087\043\076\107\084\056\075\104\121\115\106\053\117\101\061\061&quot;;&quot;\050\106\067\090\111\110\070\110\113\090\108\083\055\049\077\053&quot;;&quot;\054\066\113\116\110\111\109\066&quot;;&quot;\087\073\109\054\108\051\061\061&quot;,&quot;\052\109\048\069\119\108\103\054\052\088\121\051\119\107\055\117&quot;;&quot;\074\079\082\117\107\051\061\061&quot;,&quot;\047\053\065\106\119\114\112\081&quot;;&quot;\077\113\084\119\122\048\061\061&quot;;&quot;\098\111\080\051\055\119\103\075\076\107\117\050\052\084\056\118&quot;;&quot;\087\048\061\061&quot;,&quot;\098\073\114\121\065\099\102\085\107\066\071\052\082\047\047\061&quot;,&quot;\098\086\122\080\105\080\085\105\110\103\104\080\089\071\073\054\110\051\061\061&quot;,&quot;\111\050\119\085\097\069\100\057\097\078\077\114\077\065\087\107\056\068\055\122\067\101\061\061&quot;,&quot;\067\057\050\116\110\105\061\061&quot;,&quot;\105\053\057\079\089\084\119\061&quot;;&quot;\071\088\080\053\105\069\097\082\076\088\080\121\103\102\105\051\119\105\061\061&quot;,&quot;\114\055\106\061&quot;;&quot;\078\071\070\116\107\054\117\088\057\085\054\052\077\057\086\097\122\113\118\056\115\097\115\113\084\047\068\088\085\084\068\050\089\078\109\105\098\100\118\047\052\072\122\072\076\105\074\051\074\073\102\103\043\080\088\115\073\056\081\115\053\107\112\119&quot;,&quot;\121\109\080\069\056\105\061\061&quot;,&quot;\077\119\101\104\054\101\061\061&quot;,&quot;\110\073\114\068\104\117\104\079\076\086\072\057\121\086\048\113\119\080\106\061&quot;;&quot;\047\056\104\067\100\069\116\112\119\088\112\099\108\107\076\108\103\043\068\084\056\050\090\077&quot;;&quot;\097\122\049\084\057\053\089\088\066\106\068\087\085\051\047\119&quot;,&quot;\053\051\073\110\104\065\101\061&quot;,&quot;\076\082\118\118\067\076\119\074\087\048\086\066\069\073\099\050&quot;;&quot;\056\053\117\075\056\105\061\061&quot;;&quot;\081\079\070\071\108\077\078\102\120\105\061\061&quot;,&quot;\080\053\089\067\055\111\075\057\121\072\106\061&quot;,&quot;\102\069\084\089\078\084\081\104\122\115\084\109\065\066\070\088\081\048\043\077\100\087\105\061&quot;;&quot;\078\087\107\050\090\051\061\061&quot;;&quot;\079\122\074\054\101\101\061\061&quot;,&quot;\076\053\073\120\056\117\114\080\081\109\105\108\121\119\080\103\076\051\061\061&quot;,&quot;\047\111\109\089\098\117\057\099\097\118\117\077\069\105\073\083\078\083\116\098\048\075\101\089\117\078\047\061&quot;,&quot;\075\053\050\084\121\081\101\100\050\070\106\061&quot;;&quot;\104\088\087\085\080\087\079\118&quot;;&quot;\079\089\110\084\112\048\061\061&quot;,&quot;\074\103\111\122\077\087\119\080&quot;,&quot;\068\119\075\111\076\071\117\047\052\103\085\079\118\071\103\076\056\105\061\061&quot;;&quot;\055\053\075\117\081\106\075\105\052\086\080\047\105\105\061\061&quot;,&quot;\065\075\052\079\114\122\098\082\105\120\078\106\107\077\106\071&quot;;&quot;\068\050\103\081\103\106\118\102\118\086\103\104\089\106\122\083&quot;;&quot;\054\043\082\118\107\101\061\061&quot;,&quot;\116\056\105\061&quot;;&quot;\087\101\061\061&quot;,&quot;\076\090\103\056\069\068\103\073&quot;,&quot;\104\084\057\103\052\053\057\120\110\117\085\043\074\052\114\057&quot;;&quot;\107\121\110\122\079\099\079\067\120\075\050\071\114\112\069\061&quot;,&quot;\043\120\099\070\098\098\106\088\084\051\061\061&quot;,&quot;\110\069\118\054\068\117\122\053\071\052\118\079\056\088\087\088\110\105\061\061&quot;;&quot;\072\052\079\084\089\103\071\105&quot;;&quot;&quot;,&quot;\114\048\061\061&quot;;&quot;\114\111\076\050\081\048\061\061&quot;;&quot;\056\073\080\071\118\088\051\051\076\109\056\087\055\069\085\087&quot;,&quot;\105\114\113\098\120\104\080\100\111\090\103\119\107\097\075\098\116\056\048\061&quot;;&quot;\089\071\117\069\121\053\101\061&quot;;&quot;\106\102\088\116\079\051\061\061&quot;;&quot;\074\082\101\080\056\065\099\085\074\101\061\061&quot;;&quot;\121\085\119\072\100\119\047\068&quot;;&quot;\043\076\078\088\052\078\082\065\049\120\057\076&quot;;&quot;\104\069\085\097\068\119\051\053\110\106\118\119\071\119\073\119\104\105\061\061&quot;,&quot;\120\118\043\080\075\050\043\069\104\101\061\061&quot;;&quot;\053\085\066\071\047\054\121\043\084\051\100\105\066\105\043\103&quot;,&quot;\089\122\099\085\120\105\084\080\113\078\089\050\070\082\054\071\107\088\117\048\080\056\088\116\109\047\047\061&quot;;&quot;\098\075\054\051\073\048\061\061&quot;;&quot;\043\073\121\107\111\101\080\071&quot;;&quot;\076\120\101\065\082\101\061\061&quot;;&quot;\081\115\100\107\083\057\119\102\057\069\075\079\051\075\107\084\098\077\112\043\115\122\100\054\104\070\048\070\085\054\057\079\076\106\053\098\114\071\070\069\117\090\116\057\101\086\109\067\110\101\109\087\071\086\069\076\065\087\043\112\065\107\106\116\068\081\118\107\051\072\078\090\066\083\100\102\117\083\088\068\111\049\105\057\067\074\068\116\070\107\056\085\068\112\067\107\121\050\111\110\090\048\110\048\083\105\089\117\110\110\111\104\066\082\075\067\114\048\061\061&quot;,&quot;\079\112\065\086\112\079\101\118&quot;;&quot;\083\056\113\050\074\057\104\080\043\101\061\061&quot;;&quot;\120\069\078\069\071\120\048\076\066\070\100\116\077\069\099\061&quot;;&quot;\076\050\055\102\104\069\057\071\104\071\073\066\056\102\048\107\105\051\061\061&quot;,&quot;\119\050\117\054\076\109\056\056\068\117\103\050\119\103\122\102\089\048\061\061&quot;,&quot;\098\111\104\051\105\050\122\086\118\086\117\121\119\073\117\047\052\071\101\061&quot;;&quot;\105\109\117\087\103\107\114\086\121\088\090\090\103\053\118\108&quot;,&quot;\081\086\118\114&quot;,&quot;\104\080\080\057\119\111\085\099\081\071\097\052\104\073\056\049\089\071\105\061&quot;,&quot;\082\070\113\090\106\086\120\052\055\108\073\099\066\081\047\061&quot;;&quot;\077\052\072\061&quot;;&quot;\072\054\077\077\110\106\109\088&quot;,&quot;\121\082\078\079&quot;;&quot;\081\116\056\055\086\084\069\069&quot;;&quot;\052\066\047\119\077\050\067\069\048\105\061\061&quot;;&quot;\074\071\057\068\056\117\101\097\074\086\122\056\071\106\110\073\068\107\068\061&quot;,&quot;\085\104\049\083\049\054\097\110&quot;;&quot;\073\073\067\117\113\088\047\079\055\068\089\073\099\067\043\053&quot;,&quot;\043\069\048\049\052\114\079\081\101\051\048\051\102\087\052\072\071\122\119\083&quot;;&quot;\088\118\099\104\056\078\120\112\052\105\061\061&quot;;&quot;\083\057\103\121\054\074\082\098\077\048\061\061&quot;;&quot;\071\088\118\107\103\073\085\057\121\105\061\061&quot;;&quot;\105\098\053\047\086\122\112\074\079\075\054\050\050\089\065\108\086\073\053\116\102\052\070\101\078\052\049\108\119\069\090\087\089\101\061\061&quot;,&quot;\066\076\104\087\054\083\103\086\074\101\061\061&quot;,&quot;\048\072\102\067\074\106\048\082&quot;,&quot;\081\080\118\043\052\088\104\080\121\053\078\088\056\105\061\061&quot;,&quot;\105\086\055\070&quot;;&quot;\047\118\105\122\103\113\081\101\070\066\099\089\113\056\090\110&quot;,&quot;\111\047\099\087\106\076\098\085\067\107\101\078\078\103\047\061&quot;,&quot;\119\053\103\069\119\053\103\069\055\111\080\115\056\051\061\061&quot;;&quot;\121\053\085\087\081\052\056\103\056\080\104\086\121\052\118\117\098\117\072\061&quot;,&quot;\079\085\053\101&quot;;&quot;\105\103\118\056\110\111\072\053\089\073\080\043\068\111\056\088&quot;;&quot;\103\054\048\100\043\115\085\078\103\097\099\105\089\119\078\076\106\054\075\120\086\098\054\118\052\048\086\076\110\068\082\068\088\111\071\055\079\084\119\047\102\110\070\049\103\071\079\084\119\097\052\099\080\067\119\101\048\116\116\116\086\079\088\053\071\120\048\111\049\109\053\108\047\120\050\102\054\099\055\089\053\082\074\120\110\066\070\069\122\082\074\057\076\083\085\080\075\118\114\087\111\051\067\055\047\048\061\061&quot;,&quot;\054\114\069\050\043\048\061\061&quot;,&quot;\119\084\103\057\055\071\103\108\055\106\117\108\098\071\097\050&quot;;&quot;\083\050\090\109\086\043\055\101\048\048\061\061&quot;;&quot;\071\103\048\090\121\107\103\107\089\109\118\111\081\069\085\122\056\088\068\061&quot;;&quot;\050\108\103\109\109\068\055\049\105\073\109\090\089\106\051\061&quot;,&quot;\071\105\107\116&quot;,&quot;\118\069\118\122\075\049\081\101\071\102\105\118\054\108\049\076\074\052\104\087\107\110\106\061&quot;;&quot;\110\084\103\075\089\107\056\080&quot;;&quot;\087\102\074\111\098\069\048\077\111\081\077\113\075\047\098\054\053\114\116\051\087\057\101\061&quot;,&quot;\081\084\057\047\118\108\117\065\118\049\119\113\110\084\110\051&quot;,&quot;\069\073\047\079\073\076\074\102\047\112\075\075\087\117\070\098&quot;,&quot;\055\111\117\108\076\051\061\061&quot;;&quot;\076\052\103\072\103\117\087\057\068\109\048\069\055\053\057\105&quot;,&quot;\085\110\070\102\052\101\061\061&quot;,&quot;\067\109\056\097&quot;;&quot;\088\079\055\111\079\073\108\051\114\080\055\051\121\105\061\061&quot;,&quot;\056\084\080\115\056\048\061\061&quot;;&quot;\055\066\122\084\083\048\117\047\053\103\047\067\122\048\061\061&quot;;&quot;\121\109\068\069\110\084\072\073\110\108\055\057\052\106\085\057\052\073\048\061&quot;;&quot;\071\116\109\078\113\051\061\061&quot;,&quot;\056\053\103\069\086\053\073\079\056\111\103\047\086\053\104\087\055\111\106\061&quot;;&quot;\053\111\065\054\080\100\051\065\105\106\112\073\102\113\116\050\052\052\097\104\047\105\061\061&quot;,&quot;\115\101\061\061&quot;;&quot;\055\056\066\112\121\114\105\090&quot;,&quot;\076\053\118\109\056\086\117\051\110\117\117\086\074\106\057\079\068\086\072\061&quot;,&quot;\048\115\049\074\043\122\103\085\073\051\061\061&quot;;&quot;\118\084\099\115\054\086\113\072\107\076\068\083\115\084\079\073\118\108\074\076\079\111\076\050\114\049\097\080\072\050\057\104\113\098\110\107\074\048\061\061&quot;,&quot;\071\119\078\068\056\086\103\057\098\084\085\121\068\084\055\121\068\051\061\061&quot;;&quot;\068\111\078\086\068\071\075\074\071\111\104\109\105\088\073\119\068\050\068\061&quot;;&quot;\113\119\109\079&quot;;&quot;\101\109\100\109\085\089\085\098\122\105\061\061&quot;;&quot;\114\098\121\056\102\048\061\061&quot;,&quot;\097\097\089\117\086\106\100\057\109\051\061\061&quot;,&quot;\110\107\104\113\076\071\097\109&quot;;&quot;\056\086\122\113\089\107\072\061&quot;;&quot;\108\056\068\081\097\112\047\078\053\098\085\054\077\069\072\061&quot;,&quot;\074\113\054\078\105\098\043\115\056\079\116\108\057\048\056\069\111\048\121\078\054\043\072\061&quot;;&quot;\055\111\078\108\055\102\122\085\089\084\110\061&quot;,&quot;\055\119\072\097&quot;,&quot;\080\088\070\111\088\047\047\116\049\108\102\097\049\075\074\099\101\101\087\108\089\054\105\061&quot;,&quot;\121\053\078\115\121\053\117\069&quot;;&quot;\116\108\113\098\065\050\083\087\122\051\104\106\067\053\112\077&quot;,&quot;\112\103\106\103\047\073\055\048\103\120\047\070\087\114\089\049&quot;;&quot;\118\069\075\050\089\069\056\053\068\086\087\082\089\050\104\051\110\048\061\061&quot;;&quot;\098\043\077\050\100\122\089\053\087\051\061\061&quot;;&quot;\055\086\120\082\108\105\061\061&quot;;&quot;\114\099\105\087\114\102\121\111\089\053\113\107\089\114\072\104\099\087\089\066\110\077\088\083\084\118\105\076\112\069\051\102\049\067\080\104\049\053\090\115\050\100\052\054\050\074\108\053\075\067\049\056\122\117\110\112\089\047\065\043\072\089\053\122\107\067\112\112\075\090\104\056\048\097\097\107\086\055\087\065\049\087\081\077\120\104\054\065\078\104\101\111\113\099\073\088\102\106\110\122\082\112\082\072\076\049\105\047\100\103\052\065\069\076\110\122\107\090\102\109\084\047\073\111\083\120\056\057\082\053\110\121\108\104\105\050\078\097\052\101\075\051\088\109\077\078\072\061&quot;,&quot;\102\120\069\066\077\100\049\068\074\051\061\061&quot;;&quot;\119\106\078\088\055\069\073\047\110\080\114\053\055\102\106\107&quot;,&quot;\109\116\049\108\082\106\097\054&quot;;&quot;\055\053\117\085\055\048\061\061&quot;;&quot;\104\053\103\069\103\111\103\090\055\117\118\085\098\084\119\061&quot;,&quot;\120\089\097\084\105\110\079\103&quot;,&quot;\056\069\055\105\055\088\075\104\081\052\122\083\110\071\047\108\121\051\061\061&quot;;&quot;\089\106\080\076\110\103\119\051\121\088\075\107\055\049\122\056\076\119\088\061&quot;,&quot;\051\073\103\110\073\115\083\108&quot;,&quot;\122\085\049\100\090\072\090\099&quot;,&quot;\086\073\078\047\056\071\090\061&quot;;&quot;\114\114\101\099\067\071\078\047\107\073\103\121\047\112\054\074\122\074\067\051\099\098\074\088\067\076\099\061&quot;,&quot;\055\049\056\108\110\106\097\053\081\109\087\111\103\080\099\108\121\105\061\061&quot;,&quot;\078\072\048\122\052\080\105\056\119\043\086\115\087\114\090\053&quot;,&quot;\055\053\117\113\089\101\061\061&quot;,&quot;\097\050\108\097\051\105\061\061&quot;,&quot;\056\099\088\077\065\120\104\084\109\047\065\109\066\102\110\101\116\088\105\052&quot;,&quot;\100\054\070\076\122\122\069\099\085\121\105\114\069\104\075\100\099\101\082\079\049\098\075\118\110\097\090\083\101\051\061\061&quot;}local function Y(Y)return h[Y-(-309609-(-322461))]end for Y,M in ipairs({{420705+-420704;-449025+449391};{-406665+406666;575445-575187},{618987-618728,-908043+908409}})do while M[885173+-885172]&lt;M[160495-160493]do h[M[300196+-300195]],h[M[-536127+536129]],M[499175-499174],M[-685171-(-685173)]=h[M[293371-293369]],h[M[622067-622066]],M[-590395+590396]+(28260-28259),M[708254+-708252]-(-305098-(-305099))end end do local Y={F=201483+-201452,I=701780-701727;c=357201+-357161;m=411282+-411243;f=-936792+936799;v=-370467+370480,Z=942114+-942058,t=-501011+501022;E=-118668+118720,y=936830-936806,Q=258589-258571,V=998519+-998496;[&quot;\057&quot;]=-352180-(-352229);z=882943-882934;g=-668491+668512,b=-429370+429400,[&quot;\050&quot;]=-224537+224572;o=998881+-998875;l=-848314+848365,k=926614+-926559,H=38901+-38893;C=127484+-127424,[&quot;\048&quot;]=683485-683485;a=732718-732661,p=166553-166491,L=-1032746-(-1032772),O=479252+-479205,[&quot;\055&quot;]=-181864+181893,e=188874+-188842;h=-346322-(-346339),i=584844-584828,D=860667+-860655,T=578066-578028,w=-881575-(-881595),[&quot;\043&quot;]=-937238-(-937253);A=-996391+996393;W=209881+-209848;n=154225-154197;j=-591391+591395,U=-549225+549266,[&quot;\052&quot;]=-73889-(-73908),[&quot;\053&quot;]=-650698+650752;J=-725782+725796;q=661826-661776,G=342095+-342073,K=-878876+878921,B=207519-207509;N=25202+-25141,[&quot;\051&quot;]=11389+-11341;R=300842+-300808;r=-857531+857532;Y=-646335-(-646362);x=441253+-441211,S=304958-304915,P=1016086+-1016049,[&quot;\047&quot;]=250616-250572,[&quot;\049&quot;]=-507759+507762;X=-532821-(-532857),M=823861+-823798;s=632580+-632534,[&quot;\056&quot;]=404504+-404479;[&quot;\054&quot;]=-155517+155575,d=737853+-737794,u=-1003684-(-1003689)}local M=table.insert local v=string.sub local G=math.floor local F=type local Q=table.concat local e=string.len local S=h local c=string.char for h=532317+-532316,#S,391159+-391158 do local x=S[h]if F(x)==&quot;\115\116\114\105\110\103&quot;then local F=e(x)local I={}local P=498075-498074 local p=-451660+451660 local O=675004-675004 while P&lt;=F do local h=v(x,P,P)local Q=Y[h]if Q then p=p+Q*(-263903-(-263967))^((-1024475-(-1024478))-O)O=O+(750534+-750533)if O==-333058-(-333062)then O=-917679-(-917679)local h=G(p/(44901-(-20635)))local Y=G((p%(456959-391423))/(-294249+294505))local v=p%(480051+-479795)M(I,c(h,Y,v))p=395756-395756 end elseif h==&quot;\061&quot;then M(I,c(G(p/(717296+-651760))))if P&gt;=F or v(x,P+(3012-3011),P+(-626570-(-626571)))~=&quot;\061&quot;then M(I,c(G((p%(-303496+369032))/(424972-424716))))end break end P=P+(911192+-911191)end S[h]=Q(I)end end end return(function(h,v,G,F,Q,e,S,o,T,w,J,x,I,U,n,E,c,f,P,u,p,W,O,M)o,x,O,f,U,E,M,P,u,I,J,W,n,c,T,w,p=function(h,Y)local v=p(Y)local G=function(...)return M(h,{...},Y,v)end return G end,{},function(h)local Y,M=398959+-398958,h[-885746+885747]while M do x[M],Y=x[M]-(741013-741012),(789696-789695)+Y if 576895-576895==x[M]then x[M],c[M]=nil,nil end M=h[Y]end end,function(h,Y)local v=p(Y)local G=function()return M(h,{},Y,v)end return G end,function(h,Y)local v=p(Y)local G=function(G,F,Q,e,S)return M(h,{G,F;Q,e,S},Y,v)end return G end,function(h,Y)local v=p(Y)local G=function(G)return M(h,{G},Y,v)end return G end,function(M,G,F,Q)local y,x,YI,S,vI,j,i,GI,O,D,q,t,b,FI,d,r,k,a,P,MI,QI,l,N,R,p,L,s,hI,V,g,B,X,Z,eI,A,o,C,z,m,H,K while M do if M&lt;-889365+9450236 then if M&lt;53679+4840804 then if M&lt;1621182-(-873369)then if M&lt;809763+773312 then if M&lt;925590+-149896 then if M&lt;797948+-519946 then if M&lt;-67057+215619 then if M&lt;-503406-(-573091)then a=Y(1053081-1039988)g=c[F[-406661-(-406662)]]V=c[F[-450264-(-450266)]]X=672763+19706073718749 i=V(a,X)C=g[i]M=14584743-516263 k=q[C]s=k else k=Y(-178909-(-191833))s=h[k]S=s M=736769+6269998 end else M=c[F[603368+-603358]]P=c[F[11154+-11143]]x[M]=P M=c[F[-108565+108577]]P={M(x)}S={v(P)}M=h[Y(-310823-(-323897))]end else if M&lt;1007193-289712 then if M&lt;-100045-(-723981)then k=g M=V M=g and 774159+7703303 or 265103+13220113 else P=p q=786610-786610 s=-624166-(-624421)M=c[F[69058-69057]]D=M(q,s)x[P]=D M=-344506+5286529 P=nil end else B=Y(476507+-463334)M=h[B]B=Y(-828706-(-841574))h[B]=M M=-871129+5112398 end end else if M&lt;787514+410724 then if M&lt;-465953+1609630 then if M&lt;654730+264840 then M=2457094-(-214743)l=c[o]S=l else k=-653658+16479789700948 x=G[45488-45487]s=Y(-727168-(-740193))P=G[-858431-(-858433)]o=Y(622405-609523)O=h[o]C=-606770+33040276667979 l=c[F[-851792+851793]]D=c[F[120556-120554]]q=D(s,k)o=l[q]q=Y(-217906+231104)p=O[o]o=c[F[683746+-683745]]s=-859122+19940012392503 l=c[F[548926-548924]]D=l(q,s)q=5363999411219-115282 O=o[D]D=Y(202840-189929)S=p[O]k=Y(-445439+458615)O=c[F[-161077+161078]]o=c[F[340826+-340824]]l=o(D,q)p=O[l]M=S[p]S=Y(54041+-41083)q=9429698860367-623656 S=M[S]D=Y(140162+-127044)S=S(M)p=S O=c[F[971256+-971255]]o=c[F[907924-907922]]l=o(D,q)D=Y(352178+-339132)S=O[l]M=p[S]O=c[F[768636+-768635]]o=c[F[590299-590297]]q=34884710331096-(-691356)l=o(D,q)S=O[l]D=11141557769783-819699 O=P l=Y(913099-900001)M[S]=O S=c[F[-252143-(-252144)]]O=c[F[378137+-378135]]o=O(l,D)M=S[o]D=c[F[-429376-(-429377)]]q=c[F[812777-812775]]s=q(k,C)l=D[s]o=x[l]C=4739902945832-930185 D=c[F[-818645+818646]]q=c[F[-844739-(-844741)]]k=Y(460567+-447430)s=q(k,C)P=nil k=108469+4612312752302 l=D[s]O=o[l]l=c[F[-96+97]]D=c[F[220341+-220339]]s=Y(712894+-699694)q=D(s,k)o=l[q]S=O[o]p[M]=S s=Y(410554-397394)M=c[F[-749837-(-749840)]]k=22092847452106-(-22629)l=c[F[-379949-(-379950)]]D=c[F[900578+-900576]]q=D(s,k)o=l[q]O=p[o]S=M(p,O)M=c[F[1036648+-1036644]]S=M(x)p=nil x=nil S={}M=h[Y(-373753-(-386817))]end else P=c[F[-466406+466409]]p=137615-137614 x=P~=p M=x and 175713+1025181 or 16491517-608708 end else if M&lt;805305-(-737753)then if M&lt;1086597-(-286189)then C=791074-791061 P=c[F[-409521+409524]]s=1004663+-1004661 p=-63398+63430 x=P%p O=c[F[548754+-548750]]D=c[F[694257-694255]]i=c[F[-695505-(-695508)]]V=i-x i=309644+-309612 g=V/i k=C-g q=s^k l=D/q o=O(l)O=4294632668-(-334628)p=o%O o=-3193+3195 O=o^x M=9015680-(-130506)P=p/O q=83857+-83856 O=c[F[-583687+583691]]D=P%q q=416607+4294550689 l=D*q C=-89932+90188 o=O(l)O=c[F[744874-744870]]l=O(P)p=o+l D=-239069-(-304605)o=270570-205034 O=p%o l=p-O o=l/D D=815280+-815024 l=O%D s=-966970+967226 q=O-l D=q/s p=nil s=-139234+139490 q=o%s k=o-q o=nil s=k/C x=nil k={l;D;q,s}c[F[-203351+203352]]=k O=nil l=nil s=nil q=nil D=nil P=nil else x=nil M=516556+1980729 c[F[823506+-823501]]=S end else S=hI M=z M=-645331+5276839 end end end else if M&lt;1324422-(-794539)then if M&lt;-219477+2071241 then if M&lt;1288578-(-511247)then if M&lt;-303382+1935666 then S=c[F[-351277-(-351278)]]D=-335217+23535512094784 x=G[-755576+755577]l=Y(614887+-601877)p=c[F[-853690+853692]]O=c[F[212619-212616]]o=O(l,D)P=p[o]M=S[P]S={M}M=h[Y(154739-141607)]else o,q=l(O,o)M=o and-704542+9682884 or 12457605-(-223054)end else P=u(45352+9237943,{F[-671553+671556],F[-756626+756630],F[-627624-(-627629)]})S=Y(-219321-(-232433))M=c[F[837366-837365]]S=M[S]x=c[F[-171574-(-171576)]]S=S(M,x,P)M=h[Y(588220+-575245)]S={}end else if M&lt;686273+1382472 then if M&lt;374865+1522493 then c[P]=X M=c[P]M=M and 3356630-863889 or 8111309-83581 else O=276191-276190 o=-104643-(-104645)P=c[F[907472+-907471]]p=P(O,o)P=999295+-999294 x=p==P S=x M=x and-36494+14514066 or 10693672-(-74273)end else M=O and 2474531-(-726164)or 352634+8240227 S=O end end else if M&lt;590804+1814318 then if M&lt;3028040-830020 then if M&lt;-926993+3049801 then C=134317+31565863087294 D=c[F[-738694-(-738695)]]q=c[F[-351095-(-351097)]]k=Y(382593-369465)s=q(k,C)l=D[s]o=Y(531569+-518570)k=Y(413962-400968)o=x[o]o=o(x,l)M=486822+5457331 C=545067+14745416845735 D=c[F[632814+-632813]]q=c[F[1030693-1030691]]s=q(k,C)p=o l=D[s]O=l else M=true S={}c[F[-61604+61605]]=M M=h[Y(772704-759723)]end else M=true M=M and 4593534-(-130284)or 14776135-306456 end else if M&lt;2790330-377359 then y=t M=hI M=379205+3526819 else M=14965329-761238 end end end end else if M&lt;2661626-(-873662)then if M&lt;-205816+3057216 then if M&lt;2334318-(-262491)then if M&lt;427864+2137807 then if M&lt;-856993+3383740 then M=c[F[345204-345197]]M=M and 10471837-(-130563)or 14715827-(-628721)else B=c[a]y=c[F[494079-494077]]A=13902042625109-695052 r=c[F[-750325+750328]]m=Y(-109501-(-122654))d=r(m,A)N=y[d]L=B[N]b=not L M=b and 5819706-(-2284)or 923241+6517670 end else q=Y(-608735-(-621656))o=c[F[45844-45843]]M=Y(-61034+74033)s=-13320+12594618354416 l=c[F[-399648+399650]]M=x[M]D=l(q,s)S=o[D]k=739352502157-122421 s=Y(477109-464207)M=M(x,S)l=c[F[-108028+108029]]p=M D=c[F[73643-73641]]S=Y(-965932-(-978931))M=-39498+5983651 q=D(s,k)o=l[q]S=x[S]S=S(x,o)O=S end else if M&lt;2402818-(-293234)then if M&lt;3122016-460173 then x=G[916517-916516]M=c[F[-511355+511356]]S={M}M=h[Y(1055746-1042647)]else l=S D=Y(930780+-917927)S=h[D]D=Y(-924699-(-937876))M=S[D]D=I()g=Y(215732-202873)q=Y(487434-474575)c[D]=M S=h[q]q=Y(215226-202140)M=S[q]C=h[g]q=M k=M s=C M=C and-946219+12631417 or 708381+13429844 end else M=S and 7305786-(-155561)or 14687572-564214 end end else if M&lt;-137480+3259358 then if M&lt;3969284-893551 then if M&lt;678569+2245710 then y=Y(734054-720914)L=c[F[-234505+234506]]r=-594244+9932597257045 M=10939671-(-712760)B=c[F[-237595-(-237597)]]N=B(y,r)b=L[N]X=Y(729594-716595)X=p[X]X=X(p,b)i=X else k=k+C V=not g q=k&lt;=s q=V and q V=k&gt;=s V=g and V q=V or q V=59155+6029690 M=q and V q=-1042533+6048337 M=M or q end else b=C==g X=b M=2372986-520051 end else if M&lt;-973822+4389710 then if M&lt;433701+2824109 then l=S V=Y(462064-449070)M=false D=M i=15313330304163-(-796471)k=c[F[241715-241713]]C=c[F[327662+-327659]]g=C(V,i)s=k[g]q=l==s S=q M=q and 13072984-917007 or-853893+3701887 else H=-997907+997908 z=t[H]M=3972789-371099 hI=z end else a=#V B=-527717-(-527717)i=a==B M=i and 403539+16370486 or 4456384-(-860088)end end end else if M&lt;4346432-(-138212)then if M&lt;19183+3927222 then if M&lt;3070208-(-684690)then if M&lt;4662285-1035467 then c[P]=hI j=c[d]Z=-218046-(-218047)R=j+Z H=t[R]z=C+H H=-71918-(-72174)M=z%H C=M R=c[r]H=g+R R=160678+-160422 z=H%R g=z M=15578437-(-554361)else M=true M=M and 168680+8663245 or 9187007-(-312728)end else M=A M=y and 9051157-489133 or-570571+12397579 end else if M&lt;923873+3331296 then if M&lt;4484653-248183 then j=Y(-3244+16351)z=h[j]M=6898029-30653 j=z(R)else M=-16498+3680550 end else k=c[F[1008663-1008662]]i=93053+28992712624447 V=Y(-570704-(-583681))C=c[F[159558+-159556]]g=C(V,i)s=k[g]C=M g=P V=M M=P and 11091617-332321 or-516969-(-873250)end end else if M&lt;-59579+4635427 then if M&lt;3918863-(-637441)then if M&lt;595493+3942053 then x=c[F[-399882+399883]]S=#x x=-55240+55240 M=S==x M=M and-29746+8464837 or 9680377-534191 else M=h[Y(810307+-797292)]S={q}end else M=true M=M and 13235843-1047989 or-309355+16769119 end else if M&lt;755143+3887758 then c[P]=S M=697072+15435726 else M=3737082-73030 end end end end end else if M&lt;-812232+7245285 then if M&lt;5061630-(-707076)then if M&lt;-792368+6039403 then if M&lt;-548746+5625598 then if M&lt;302950+4736264 then if M&lt;5125379-178016 then D=not l p=p+o P=p&lt;=O P=D and P D=p&gt;=O D=l and D P=D or P D=-205886+845691 M=P and D P=400624+-135037 M=M or P else O=nil M=12538128-556409 l=nil D=nil end else s=Y(-35298-(-48405))q=h[s]C=c[F[-803426-(-803428)]]a=20722704642994-232961 i=Y(-292651-(-305574))g=c[F[-735722-(-735725)]]V=g(i,a)k=C[V]S={}a=327351+17379147948261 s=q(k)q=c[F[1040996-1040991]]i=Y(696423-683484)C=c[F[-321750+321752]]g=c[F[1000087-1000084]]V=g(i,a)k=C[V]M=h[Y(-854138-(-867158))]s=q(x,k)end else if M&lt;-299587+5519933 then if M&lt;5871077-752198 then L=Y(-563136-(-576243))d=Y(-190095+202995)b=h[L]N=c[F[625731+-625729]]y=c[F[243173+-243170]]m=14367074360460-(-966038)r=y(d,m)B=N[r]N=c[a]L=b(B,N)M=D and 763071+8434530 or 6577111-(-537547)else g=Y(-430593+443448)V=17983692939216-(-508134)D=c[x]s=c[F[-445564+445565]]k=c[F[800922+-800920]]C=k(g,V)q=s[C]l=D[q]C=Y(-520958-(-533996))q=c[F[-1014937-(-1014938)]]s=c[F[989437-989435]]g=-848460+8702620992032 k=s(C,g)C=4219939392031-803442 D=q[k]o=l[D]D=c[F[-983325+983326]]q=c[F[-10026+10028]]k=Y(-862189+875172)s=q(k,C)l=D[s]O=o[l]k=195567+30339967269697 l=c[F[335317+-335316]]D=c[F[190167-190165]]s=Y(342960-329758)q=D(s,k)o=l[q]p=O[o]q=Y(-739827-(-752700))o=c[F[984585+-984584]]l=c[F[-965848+965850]]s=25024707886521-610356 D=l(q,s)O=o[D]S=p[O]p=I()c[p]=S k=-231221+12363412561330 a=715060+24720887645123 O=c[F[-509302+509307]]l=c[F[-1026096+1026097]]D=c[F[-595592+595594]]s=Y(-28592-(-41521))q=D(s,k)o=l[q]S=O[o]o=c[x]O=S(o)o=I()c[o]=O s=c[x]i=Y(-394431-(-407292))C=c[F[504457+-504456]]g=c[F[533702-533700]]V=g(i,a)k=C[V]q=s[k]V=Y(-867971-(-880995))i=21200042797098-(-802406)k=c[F[-419424-(-419425)]]C=c[F[-266731+266733]]g=C(V,i)V=714552518510-534050 s=k[g]D=q[s]s=c[F[871763+-871762]]k=c[F[223629-223627]]g=Y(215892-202863)C=k(g,V)q=s[C]l=D[q]C=Y(-278855+292021)g=23097074777681-398414 q=c[F[18450-18449]]s=c[F[975032-975030]]k=s(C,g)C=484255+28509818835004 D=q[k]O=l[D]k=Y(171806-158675)D=c[F[-674724+674725]]q=c[F[785338+-785336]]s=q(k,C)C=Y(779634-766640)g=34746778017756-(-925528)l=D[s]S=O[l]O=I()c[O]=S l=c[p]q=c[F[-759185+759186]]s=c[F[404474-404472]]k=s(C,g)D=q[k]S=l==D M=S and 495639+6324381 or 8126628-298847 end else x=G[-159719+159720]k=14488382203546-(-13248)o=Y(-939295+952177)s=Y(-233449-(-246451))O=h[o]P=G[-465659-(-465661)]l=c[F[813656+-813655]]D=c[F[508264-508262]]q=D(s,k)s=123347+19589473681871 o=l[q]p=O[o]o=c[F[-933149-(-933150)]]q=Y(1007985+-994914)l=c[F[-207443+207445]]D=l(q,s)O=o[D]S=p[O]O=c[F[941942+-941941]]D=Y(955762+-942868)q=450562+19345613734702 o=c[F[-954106+954108]]l=o(D,q)p=O[l]M=S[p]k=Y(258256-245380)q=34370326198241-(-1699)S=Y(443043-430085)S=M[S]S=S(M)p=S O=c[F[529128+-529127]]o=c[F[-72267+72269]]D=Y(-526509-(-539374))l=o(D,q)S=O[l]D=Y(-350980+364113)C=18725369712620-(-692771)M=p[S]q=1869977969096-24162 O=c[F[-107309-(-107310)]]o=c[F[-336927-(-336929)]]l=o(D,q)S=O[l]O=P M[S]=O S=c[F[851354-851353]]D=2150798294228-(-755477)O=c[F[-353849-(-353851)]]l=Y(645277-632175)o=O(l,D)M=S[o]D=c[F[-721481+721482]]q=c[F[-892854+892856]]s=q(k,C)C=769616+32611220831489 l=D[s]o=x[l]D=c[F[-799408+799409]]q=c[F[313984+-313982]]k=Y(415671-402752)s=q(k,C)l=D[s]O=o[l]k=-585622+24538067803192 s=Y(300839+-287799)P=nil l=c[F[476931+-476930]]D=c[F[-677697-(-677699)]]q=D(s,k)k=330943+21491255466584 o=l[q]S=O[o]p[M]=S s=Y(-240819-(-253925))M=c[F[-247840-(-247843)]]l=c[F[741638-741637]]D=c[F[144295+-144293]]q=D(s,k)o=l[q]O=p[o]S=M(p,O)M=c[F[1004603-1004599]]S=M(x)M=h[Y(423207+-410118)]p=nil x=nil S={}end end else if M&lt;4796402-(-627399)then if M&lt;5192337-(-139721)then if M&lt;5213539-(-99669)then x=I()D=2607593251524-613894 c[x]=G[170863+-170862]S=c[x]p=c[F[28060-28059]]O=c[F[-741201-(-741203)]]l=Y(6053-(-7141))o=O(l,D)P=p[o]M=S[P]M=M and 15760559-787422 or 9325856-882874 else B=#V a=18762-18761 M=4284472-784371 r=353644-353643 i=p(a,B)a=l(V,i)B=c[g]y=a-r N=D(y)i=nil B[a]=N a=nil end else S=Y(799967+-786887)x=Y(914095-901153)M=h[S]S=M(x)S={}M=h[Y(-11787-(-24688))]end else if M&lt;4873286-(-861029)then if M&lt;5639404-127547 then o=Y(-512187-(-525177))x=G[806139+-806138]l=1000095757332-225859 q=Y(385721-372570)S=c[F[766014+-766013]]P=G[567107-567105]p=c[F[-728353+728355]]O=p(o,l)C=-227688+18410841430757 l=10575915542869-644633 M=S[O]S=true P[M]=S o=Y(-874579-(-887446))s=-126114+34865047399437 S=c[F[255516+-255515]]p=c[F[857835+-857833]]O=p(o,l)M=S[O]O=Y(504701+-491845)p=h[O]o=c[F[-543854+543855]]l=c[F[-299553-(-299555)]]D=l(q,s)O=o[D]X=25044808555089-961731 o=68423+-68423 l=884883-884883 S=p[O]O=.95 k=732896+4397710465311 D=-738392+738392 p=S(O,o,l,D)q=-1047835+34841845464187 P[M]=p p=Y(-825262-(-838319))s=13276367623962-229108 S=h[p]O=c[F[892473-892472]]o=c[F[-631659-(-631661)]]D=Y(-258165-(-271150))l=o(D,q)a=577666+29276892406975 p=O[l]M=S[p]S=M()M=c[F[58054+-58051]]o=c[F[-762386+762387]]l=c[F[-33029-(-33031)]]q=Y(838247+-825156)D=l(q,s)s=Y(-709582-(-722794))O=o[D]V=19946691998157-(-258683)p=P[O]l=c[F[-50284-(-50285)]]D=c[F[899896-899894]]q=D(s,k)o=l[q]O=P[o]D=c[F[520831+-520830]]q=c[F[512358-512356]]k=Y(659038+-646126)s=q(k,C)l=D[s]o=P[l]q=Y(-163580+176785)g=Y(931641-918725)i=Y(-979642+992817)D=h[q]s=c[F[-769826-(-769827)]]k=c[F[679653+-679651]]C=k(g,V)q=s[C]l=D[q]C=c[F[830870+-830869]]g=c[F[-822851+822853]]V=g(i,a)i=Y(813231-800163)k=C[V]s=P[k]C=c[F[829966+-829965]]a=734076+17174125390785 S=Y(792866+-779769)g=c[F[-773068-(-773070)]]S=M[S]V=g(i,a)k=C[V]q=s[k]C=Y(-650896+663749)k=h[C]a=Y(-51039-(-64247))g=c[F[-83441+83442]]V=c[F[-270605+270607]]i=V(a,X)C=g[i]s=k[C]D={l(q,s)}l=Y(93525-80340)S=S(M,p,O,o,v(D))p=S i=5777556651270-(-986492)S=c[F[236888+-236887]]D=28134281313077-18440 O=c[F[866472+-866470]]o=O(l,D)k=157367+14944699331704 V=Y(106068-92854)M=S[o]s=Y(-913964-(-926859))o=Y(-883346+896202)O=h[o]l=c[F[-1012732-(-1012733)]]D=c[F[934643-934641]]q=D(s,k)o=l[q]l=740119-740119 S=O[o]D=-658299-(-658299)k=c[F[-510197+510198]]C=c[F[76699-76697]]o=.95 g=C(V,i)s=k[g]q=p[s]O=S(o,l,D,q)P[M]=O M=-817794-(-817810)S=c[F[-660131+660132]]o=c[F[655458-655456]]D=Y(-493093+506040)q=387438+23610577437060 C=5039562801684-(-296726)i=28655127640387-(-375516)l=o(D,q)O=M M=S[l]l=Y(208512+-195656)o=h[l]D=c[F[918934-918933]]q=c[F[943255+-943253]]a=-547247+28872806272563 k=Y(-697937-(-710875))V=Y(-959405-(-972519))s=q(k,C)l=D[s]S=o[l]k=c[F[54692-54691]]C=c[F[-423003+423005]]g=C(V,i)i=66400+24236943452342 V=Y(689078-676091)s=k[g]q=x[s]k=c[F[-677432+677433]]C=c[F[977621-977619]]g=C(V,i)s=k[g]D=q[s]g=Y(675024-662057)i=Y(-329060+342246)s=c[F[164895-164894]]V=-600297+5389725201078 k=c[F[966837-966835]]C=k(g,V)q=s[C]l=D[q]C=c[F[553249-553248]]g=c[F[-149643-(-149645)]]V=g(i,a)a=280582+33222712947816 k=C[V]s=x[k]C=c[F[-296176+296177]]i=Y(-153753+166950)X=399374+31177450709160 g=c[F[-200971-(-200973)]]V=g(i,a)k=C[V]V=Y(-673269-(-686484))q=s[k]k=c[F[572885+-572884]]i=15119595570465-(-890463)P=nil C=c[F[-771-(-773)]]g=C(V,i)s=k[g]D=q[s]a=Y(-376312+389448)g=c[F[-267510+267511]]q=-856064-(-856064)V=c[F[-872308-(-872310)]]i=V(a,X)C=g[i]k=p[C]s=k+O o=S(l,D,q,s)S={}x[M]=o O=nil x=nil p=nil M=h[Y(-316515-(-329507))]else k=Y(435266-422159)S=h[k]k=S(s)M=15720815-699396 end else M=hI M=t and 5837985-(-95956)or-291053+11382206 end end end else if M&lt;5104440-(-870151)then if M&lt;4945095-(-886279)then if M&lt;6220515-398668 then if M&lt;-796882+6610240 then S=Y(-285900+298775)M=h[S]O=c[F[389990-389989]]o={M(O)}x=G[347955-347954]M=908262+6659971 S=o[-200524+200525]P=o[572784-572782]O=S p=o[25388-25385]else k=Y(-965740+978684)V=Y(684102+-671222)C=-1046266+21102226529628 S=c[x]D=c[F[-807814-(-807815)]]q=c[F[-275034+275036]]a=24776130540945-(-391040)s=q(k,C)l=D[s]q=c[x]k=c[F[-622953-(-622954)]]C=c[F[66775+-66773]]i=22041834327115-238643 g=C(V,i)s=k[g]D=q[s]S[l]=D i=Y(-891634+904643)s=c[x]C=c[F[-925065-(-925066)]]g=c[F[-264253+264255]]V=g(i,a)i=33879783244225-738337 k=C[V]q=s[k]k=c[F[872155+-872154]]V=Y(217750+-204690)C=c[F[754258-754256]]g=C(V,i)s=k[g]D=q[s]s=c[F[-502966-(-502967)]]V=34516679817959-326686 g=Y(-679349+692523)k=c[F[12826+-12824]]C=k(g,V)q=s[C]l=D[q]C=Y(349324-336368)q=c[F[842635+-842634]]s=c[F[187802+-187800]]g=-265988+25815128374777 k=s(C,g)D=q[k]C=26073045493098-(-133635)S=l[D]g=660027+25226742619048 D=c[F[-2580+2581]]k=Y(878932+-865932)q=c[F[669741-669739]]s=q(k,C)l=D[s]C=Y(-864192-(-877186))q=c[F[331029-331028]]s=c[F[220197-220195]]k=s(C,g)D=q[k]S[l]=D l=Y(264575-251451)q=f(-976145+7394536,{F[466924+-466917],F[67204+-67203],F[-397005+397007],F[32747+-32741];x})S=h[l]s={S(q)}l=s[-153626+153627]D=s[-118866+118868]S=not l M=S and-449853+10157883 or 535008+14980265 end else z=711296+21970617535862 m=Y(-852938-(-866084))L=Y(-512358-(-525465))b=h[L]y=c[F[-795692+795694]]r=c[F[-517804+517807]]A=1267847388928-(-336718)d=r(m,A)hI=Y(763480+-750588)N=y[d]r=c[a]m=c[F[541441-541439]]A=c[F[250596+-250593]]M=D and-852975+15209800 or 12606631-(-789002)t=A(hI,z)hI=-546444+31281190752114 d=m[t]y=r[d]B=N..y y=c[a]d=c[F[15638-15636]]m=c[F[-98319-(-98322)]]t=Y(662029-649140)A=m(t,hI)r=d[A]N=y[r]L=b(B,N)end else if M&lt;-955649+6894127 then if M&lt;-896294+6741262 then M=p M=S and 16054667-(-292130)or-121399+5242854 else M=h[Y(-528664+541518)]S={}end else D=not O M=D and 13038113-(-432288)or 4309617-(-157157)end end else if M&lt;6859243-621746 then if M&lt;6849183-748573 then if M&lt;36392+6019862 then S=Y(-96046-(-109153))g=731288+18148673566827 C=Y(-550267-(-563430))M=h[S]q=c[F[172335-172333]]s=c[F[257068-257065]]k=s(C,g)D=q[k]X=3158055615618-571076 a=Y(886925-873769)s=Y(88435-75352)q=h[s]g=c[F[484135-484133]]V=c[F[-196995+196998]]i=V(a,X)C=g[i]k=x[C]s=q(k)l=D..s S=M(l)M=h[Y(910913-897700)]S={}else L=Y(-490938+504017)q=k b=h[L]L=Y(985193+-972231)X=b[L]b=X(x,q)X=c[F[603030-603024]]L=X()a=b+L i=a+l a=444910+-444654 q=nil L=837555-837554 M=3014847-(-49377)V=i%a a=p[P]l=V b=l+L X=O[b]i=a..X p[P]=i end else s=U(14209170-(-849761),{})S=Y(857036+-843874)M=h[S]x=c[F[717881+-717877]]q=Y(-140782+153906)O=Y(107374-94291)p=h[O]D=h[q]q={D(s)}D=12588-12586 l={v(q)}o=l[D]O=p(o)p=Y(916322-903321)P=x(O,p)x={P()}S=M(v(x))P=c[F[417048+-417043]]x=S S=P M=P and 6014143-(-887496)or 431297+1106570 end else if M&lt;830965+5536447 then M=c[F[72379-72378]]x=c[F[355865+-355863]]P=c[F[-172790+172793]]p=c[F[-672182+672186]]O=c[F[-578236+578241]]S=M(x,P,p,O)S={}M=h[Y(-621748-(-634732))]else S=c[F[-1017639-(-1017640)]]P=c[F[750853-750851]]o=Y(-428047+441199)p=c[F[574966+-574963]]l=22125865426659-767652 O=p(o,l)x=P[O]M=S[x]S=M()x=S l=-99763+18927653972000 P=c[F[593037+-593035]]o=Y(-97843+110803)p=c[F[-753840-(-753843)]]O=p(o,l)S=P[O]M=x~=S M=M and 13719257-(-774350)or 246921+11478041 end end end end else if M&lt;8239474-723291 then if M&lt;6792407-(-320774)then if M&lt;6700170-(-146585)then if M&lt;-747066+7499415 then if M&lt;5401525-(-1044611)then X=X+L N=not B S=X&lt;=b S=N and S N=X&gt;=b N=B and N S=N or S N=725485+7805798 M=S and N S=127237+15754899 M=M or S else M=c[F[834051-834050]]p=M x=G[-20325+20326]P=G[-13952+13954]M=p[P]M=M and-105315+12026221 or 922285+11092726 end else M=h[Y(-425373+438493)]S={}end else if M&lt;629493+6287585 then if M&lt;5867094-(-1021598)then s=T(s)O=nil X=nil C=T(C)q=nil hI=T(hI)D=nil S={}i=T(i)p=nil m=nil A=nil R=nil k=T(k)N=nil y=nil l=nil a=T(a)x=nil H=nil o=nil M=h[Y(235212-222087)]b=T(b)L=T(L)r=T(r)t=T(t)B=nil d=nil P=nil else p=c[F[-234525+234531]]P=p==x M=1891311-353444 S=P end else L=Y(-387945-(-401028))V=Y(-864528+877652)k=330613+-330610 s=I()C=249999-249934 c[s]=S M=c[D]S=M(k,C)k=I()c[k]=S S=h[V]M=869714-869714 C=M M=440865-440865 g=M i=f(-786497+11582854,{})V={S(i)}M={v(V)}V=M S=-638272+638274 M=V[S]i=M S=Y(-969502+982664)M=h[S]a=c[p]b=h[L]L=b(i)b=Y(-864779-(-877780))X=a(L,b)a={X()}S=M(v(a))a=I()c[a]=S X=c[k]S=322811-322810 b=X X=-618232-(-618233)L=X M=6682452-242048 X=196709+-196709 B=L&lt;X X=S-L end end else if M&lt;7666721-243055 then if M&lt;7000795-(-394254)then if M&lt;6245844-(-1002469)then m=Y(206691+-193474)b=c[F[1003883-1003878]]A=23919536972931-(-558847)y=c[F[108198-108196]]r=c[F[265320-265317]]d=r(m,A)z=-600696+29680407027829 N=y[d]hI=Y(707426-694238)m=c[F[424128+-424126]]A=c[F[169050-169047]]t=A(hI,z)d=m[t]hI=Y(-13369+26306)z=969299+1247912867826 r=o[d]m=c[F[9420+-9418]]A=c[F[-787925+787928]]t=A(hI,z)M=401295+11171161 d=m[t]y=r..d B=N..y L=b(x,B)else y=Y(758935+-745828)b=h[y]d=c[F[819681+-819679]]t=Y(-1014575-(-1027609))m=c[F[-877116-(-877119)]]hI=386681+29947740917760 A=m(t,hI)r=d[A]y=b(r,N)t=Y(-214185+227333)b=c[F[-336869+336874]]hI=-545616+21808857692923 d=c[F[-601586+601588]]m=c[F[390216-390213]]M=h[Y(-70869+83858)]A=m(t,hI)S={}r=d[A]y=b(x,r)end else q=-107846+7771619079016 M=c[F[-670745-(-670746)]]D=Y(-282928-(-296139))P=c[F[-596458+596460]]O=c[F[506069-506066]]o=c[F[745057+-745053]]l=o(D,q)S=Y(348973+-335936)p=O[l]S=M[S]x=P[p]S=S(M,x)M=h[Y(-950996-(-963901))]c[F[-988785+988790]]=S S={}end else if M&lt;-381757+7844855 then if M&lt;7502065-55672 then b=nil L=I()B=Y(525025+-511901)c[L]=b y=U(6759829-(-657261),{F[520134-520127];a;F[133783+-133781],F[369206-369203];L})b=h[B]r={b(y)}N=r[903245-903243]B=r[-283825-(-283826)]b=not B M=b and 7738488-439194 or 14629067-431647 else V=-290667+25166876794162 S=c[F[-35837-(-35841)]]g=Y(-774372-(-787253))s=c[F[-91985-(-91987)]]k=c[F[152148-152145]]C=k(g,V)q=s[C]M=S[q]S=M()M=true l=S D=M M=-463990+14587348 end else M=H M=1537279-(-875132)t=z end end end else if M&lt;-712050+8917839 then if M&lt;8082390-375683 then if M&lt;706363+6868557 then if M&lt;-895432+8465082 then p,l=O(P,p)M=p and 955298+9634331 or 10320207-(-191153)else M=278029+7290204 o=nil l=nil end else q=Y(1046858+-1033870)s=12930413462118-158433 O=Y(-691281-(-704163))x=G[445489+-445488]p=h[O]o=c[F[-262542+262543]]l=c[F[-243541+243543]]D=l(q,s)O=o[D]s=Y(803768-790598)P=p[O]q=-84040+5833484243684 O=c[F[-389600+389601]]o=c[F[-405930+405932]]D=Y(656329-643184)l=o(D,q)p=O[l]l=Y(-19826-(-32716))S=P[p]p=c[F[-1007867+1007868]]D=6246895545824-320132 O=c[F[-814274+814276]]o=O(l,D)l=18294413332814-733191 P=p[o]o=Y(-4212-(-17354))M=S[P]S=Y(795583+-782625)S=M[S]S=S(M)P=S k=15263181946191-(-450164)S=c[F[-160928+160929]]p=c[F[486941+-486939]]O=p(o,l)M=S[O]l=c[F[403221-403220]]D=c[F[614100+-614098]]q=D(s,k)k=-846351+5947234989280 o=l[q]O=x[o]s=Y(489395+-476461)l=c[F[976937-976936]]D=c[F[258430-258428]]q=D(s,k)o=l[q]p=O[o]o=c[F[-39162-(-39163)]]s=692861+29435968856846 q=Y(948025+-934858)l=c[F[-52756+52758]]D=l(q,s)O=o[D]S=p[O]P[M]=S M=c[F[500027+-500024]]S=M(x)S={P}M=h[Y(-384017-(-396939))]end else if M&lt;-777571+8752558 then if M&lt;-989128+8834827 then D=c[x]g=Y(-917598-(-930524))V=-739984+7899516197102 s=c[F[-351468+351469]]k=c[F[460609-460607]]C=k(g,V)q=s[C]V=Y(-470099-(-483040))l=D[q]q=c[x]k=c[F[207824+-207823]]C=c[F[-368336+368338]]i=327306+18494632518426 g=C(V,i)s=k[g]D=q[s]S=l~=D M=S and-473557+13287077 or-199417+6020310 else b=Y(1013882+-1000681)L=-276609+25033166808585 i=c[F[-237573-(-237574)]]M=V a=c[F[-755456+755458]]X=a(b,L)V=i[X]X=25195778033662-(-1025494)q={[s]=k;[C]=g,[V]=O}g=c[F[529269-529268]]V=c[F[715310+-715308]]a=Y(-888828+901904)i=V(a,X)C=g[i]k=q[C]g=c[F[-88135-(-88136)]]X=-210036+17965736072481 V=c[F[-999345-(-999347)]]a=Y(-13383+26377)i=V(a,X)C=g[i]s=k==C M=s and 15916025-(-833280)or-662794+5207329 end else M=true M=-272746+14742425 end end else if M&lt;8175497-(-274383)then if M&lt;8747203-309375 then if M&lt;-707487+9121925 then z=c[P]hI=z M=z and 124013+3161591 or-104290+3705980 else P=c[F[-869967+869969]]p=681837-681724 x=P*p P=25279235602099-(-112456)S=x+P P=-250046-(-250047)x=35184371565393-(-523439)M=S%x c[F[-959295+959297]]=M x=c[F[409604-409601]]M=16251584-368775 S=x~=P end else p=c[x]o=c[F[986301-986300]]s=-351342+2691928613203 g=Y(-784628+797750)q=Y(334527-321432)l=c[F[-620869+620871]]V=12474844671477-(-731324)D=l(q,s)s=Y(-220279+233251)O=o[D]k=12777557706337-683811 P=p[O]l=c[F[333476+-333475]]D=c[F[-733148+733150]]q=D(s,k)o=l[q]q=Y(525422-512553)D=h[q]s=c[F[754776+-754775]]k=c[F[942077+-942075]]C=k(g,V)g=Y(-260491+273384)q=s[C]l=D[q]s=c[F[1029017-1029016]]V=653285+1038996523518 k=c[F[-794472-(-794474)]]C=k(g,V)g=27377634438747-(-770929)p=Y(333626+-320431)p=P[p]q=s[C]D=l(q)O=o..D p=p(P,O)P=-958343-(-958343)C=Y(-689015+702125)l=c[F[-226007-(-226010)]]S=p or P q=c[F[-631867+631868]]P=S p=M s=c[F[-972673-(-972675)]]k=s(C,g)D=q[k]o=l[D]l=o()O=not l S=O M=O and-791354+15365861 or-937161+6769480 end else if M&lt;191532+8321345 then M=C g=c[F[87150-87149]]X=6738752889440-(-1026529)a=Y(754607-741594)V=c[F[781979+-781977]]i=V(a,X)C=g[i]i=p a=M V=M M=p and-89744+2965967 or-1018198+12670629 else A=-793491-(-793492)N=I()c[N]=X y=Y(-989280+1002133)r=880228+-880128 S=h[y]y=Y(13506+-329)M=S[y]y=-409782+409783 S=M(y,r)y=I()c[y]=S M=c[D]d=-260191-(-260446)r=-192654+192654 S=M(r,d)r=I()Z=-555290+555290 d=589192-589191 c[r]=S M=c[D]m=c[y]S=M(d,m)H=Y(372268+-359185)t=-739362-(-739364)d=I()c[d]=S S=c[D]m=S(A,t)S=996089+-996088 M=m==S S=Y(-482731-(-495732))t=Y(-112886+125816)m=I()c[m]=M K=-465172+475172 M=Y(-677616-(-690547))z=h[H]R=c[D]M=i[M]j={R(Z,K)}H=z(v(j))z=Y(88494+-75564)hI=H..z A=t..hI t=Y(-549386-(-562510))M=M(i,S,A)A=I()c[A]=M hI=W(2883332-961421,{D,N,k,p;P,a,m,A;y;d;r,s})S=h[t]t={S(hI)}M={v(t)}t=M M=c[m]M=M and 733929+14500460 or 890550+7516289 end end end end end end else if M&lt;11939111-(-775462)then if M&lt;11298493-526633 then if M&lt;9918232-143865 then if M&lt;-403899+9586049 then if M&lt;565458+8255511 then if M&lt;8988848-214277 then if M&lt;9220106-632908 then YI=-798278+9042680397496 A=Y(-164578+177685)y=h[A]t=c[L]A=y(t)A=Y(483903+-470796)y=h[A]A=y(p)A=Y(788928+-775821)y=h[A]t=c[b]A=y(t)M=h[Y(-539319-(-552283))]A=Y(-793018+806125)y=h[A]t=c[r]A=y(t)A=Y(-941810-(-954917))y=h[A]A=y(m)y=c[F[-407240-(-407245)]]z=c[F[917352+-917350]]j=Y(-831332-(-844229))Z=-958615+21784737302583 H=c[F[-817464-(-817467)]]R=H(j,Z)hI=z[R]j=c[F[979739-979737]]vI=Y(-204263-(-217271))Z=c[F[-175971-(-175974)]]K=Z(vI,YI)R=j[K]YI=28072571039473-(-181279)H=o[R]j=c[F[861211+-861209]]Z=c[F[-283667-(-283670)]]S={}vI=Y(-192801+205988)K=Z(vI,YI)R=j[K]z=H..R t=hI..z A=y(x,t)A=Y(-572182+585289)y=h[A]hI=c[F[967710-967708]]z=c[F[-973852-(-973855)]]j=303616+2766138811144 R=Y(-682345-(-695483))H=z(R,j)t=hI[H]A=y(t)A=Y(-468914-(-482021))y=h[A]R=Y(-919288-(-932299))hI=c[F[543755-543753]]z=c[F[616184+-616181]]j=419571+5261080208030 H=z(R,j)t=hI[H]A=y(t)else k=Y(-840773-(-853767))C=14285263023824-300244 D=c[F[422761-422759]]q=c[F[-1046477+1046480]]s=q(k,C)l=D[s]M=3113309-(-87386)S=l end else L=Y(122748-109754)a=c[F[-145489+145490]]X=c[F[885770-885768]]B=12018501535448-(-184068)b=X(L,B)i=a[b]g=i M=-567281+8470671 end else if M&lt;-704355+9824631 then if M&lt;-34031+8911836 then M=c[D]B=-913546+913552 L=999-998 b=M(L,B)M=Y(670901+-657728)h[M]=b B=Y(182108-168935)L=h[B]B=1012340-1012338 M=L&gt;B M=M and 362019+16268976 or-894280+1644610 else D=o k=Y(879643+-866624)X=-1018247+268992694788 a=Y(776826-763922)k=q[k]g=c[F[-780278+780279]]V=c[F[573682-573680]]i=V(a,X)C=g[i]k=k(q,C)s=k M=k and 733701-716192 or 15077965-1009485 end else M=h[Y(881085-868133)]p=Y(196578+-183719)P=h[p]p=Y(452407+-439354)x=P[p]p=c[F[928429-928428]]P={x(p)}S={v(P)}end end else if M&lt;-426574+9740799 then if M&lt;-955785+10238794 then if M&lt;-229339+9500674 then d=Y(1000952+-987805)b=c[F[915129+-915124]]N=c[F[-89499+89501]]m=998259+13115479546984 y=c[F[-444445-(-444448)]]r=y(d,m)B=N[r]L=b(x,B)M=12137552-565096 else O=c[F[-672646+672647]]D=Y(-126958+139835)q=27484704060396-(-212498)o=c[F[-926079-(-926081)]]l=o(D,q)q=26450178633754-(-475138)D=Y(-1047707+1060782)x=G[-478382+478383]p=O[l]P=x[p]O=c[F[184001-184000]]o=c[F[128472-128470]]l=o(D,q)p=O[l]D=1312708098093-(-150070)S=P[p]l=Y(72794+-59595)p=c[F[-601644+601645]]O=c[F[330051+-330049]]o=O(l,D)D=Y(-411831-(-425014))P=p[o]M=S[P]S=Y(847138-834263)P=M M=-287337-(-287337)p=M D=P[D]M=h[S]l={D(P)}D={M(v(l))}O=D[-551143+551145]o=D[-233712+233715]S=D[949111+-949110]l=S M=1267671-(-511814)end else S=c[F[-356779-(-356780)]]D=-653756+14184687850377 p=c[F[-663148-(-663150)]]x=G[760446+-760445]O=c[F[693005-693002]]l=Y(-216124-(-229081))o=O(l,D)P=p[o]M=S[P]S={M}M=h[Y(-933794-(-946821))]end else if M&lt;8592843-(-929979)then if M&lt;694319+8803620 then z=M j=-75729-(-75730)R=t[j]j=false H=R==j M=H and 393689+13083579 or 680107-(-867729)hI=H else S={}M=h[Y(-345321+358363)]end else q=Y(397614+-384507)S=h[q]M=-359509+15874782 k=c[F[651085-651084]]C=c[F[-716302+716304]]i=-897258+22751021062732 V=Y(609546+-596603)g=C(V,i)s=k[g]q=S(s,D)end end end else if M&lt;10265964-(-223395)then if M&lt;10112125-(-83796)then if M&lt;10846804-899127 then if M&lt;144497+9734436 then i=a r=i V[i]=r i=nil M=11078286-227236 else j=M vI=c[r]eI=-106006+23584697452796 QI=Y(8744+4207)MI=c[F[-267180+267182]]GI=c[F[-425934-(-425937)]]FI=GI(QI,eI)YI=MI[FI]K=vI[YI]Z=not K M=Z and 15761212-(-534257)or 16732981-547482 R=Z end else hI=M YI=Y(554505-541327)R=c[r]Z=c[F[147145+-147143]]MI=-704702+9839828538020 K=c[F[551496+-551493]]vI=K(YI,MI)j=Z[vI]H=R[j]z=not H M=z and 3334011-921600 or 11047013-(-370321)t=z end else if M&lt;10324203-(-164116)then if M&lt;9433335-(-963570)then j=Y(414559-401480)YI=Y(978608+-965629)MI=647542+12622778463615 R=h[j]Z=c[F[-167215-(-167217)]]K=c[F[116257-116254]]GI=Y(121864-108674)vI=K(YI,MI)j=Z[vI]H=R[j]Z=c[r]FI=22800476381698-(-903031)vI=c[F[852575-852573]]YI=c[F[281754+-281751]]MI=YI(GI,FI)K=vI[MI]GI=541670+23691612628786 QI=292845+33531440710929 j=Z[K]K=c[F[283215-283213]]MI=Y(-759555-(-772577))vI=c[F[-385909+385912]]YI=vI(MI,GI)Z=K[YI]vI=c[F[511648-511646]]YI=c[F[-467535-(-467538)]]GI=Y(-621573-(-634567))FI=10169964918042-549531 MI=YI(GI,FI)K=vI[MI]R=H(j,Z,K)GI=500226+25019264732032 Z=Y(-855110+868189)j=h[Z]K=c[F[-525000-(-525002)]]vI=c[F[493770-493767]]MI=Y(-270819-(-283927))YI=vI(MI,GI)Z=K[YI]H=j[Z]YI=c[F[191438-191436]]FI=Y(-54250-(-67280))MI=c[F[1041869+-1041866]]GI=MI(FI,QI)QI=265938+14600077921212 vI=YI[GI]K=x[vI]YI=c[F[185580+-185578]]MI=c[F[951732+-951729]]FI=Y(459318-446401)GI=MI(FI,QI)vI=YI[GI]QI=30456110963700-(-498546)GI=Y(-431363+444349)Z=K[vI]vI=c[F[-41206-(-41208)]]FI=-412398+13419590886230 YI=c[F[54217-54214]]MI=YI(GI,FI)K=vI[MI]YI=c[F[631891-631889]]MI=c[F[169237-169234]]FI=Y(11208-(-1786))GI=MI(FI,QI)vI=YI[GI]j=H(Z,K,vI)M=-1041806+6808352 z=R==j t=z else D=672436+9575498927798 l=Y(213167+-200235)P=J(899134+1711426,{F[312995+-312992]})M=c[F[-941271+941272]]x=c[F[251157-251155]]S=Y(-425795-(-438907))S=M[S]S=S(M,x,P)x=c[F[757358+-757354]]p=c[F[104115-104110]]O=c[F[-906980+906986]]o=O(l,D)P=p[o]S=x[P]D=29203654830108-(-740611)o=Y(-243530+256496)P=c[F[186976-186971]]p=c[F[-871769+871775]]l=31579540354068-(-607581)O=p(o,l)x=P[O]o=15186507006750-(-776321)O=Y(110773-97903)M=S[x]x=c[F[630218+-630213]]l=Y(201250-188068)P=c[F[17034-17028]]p=P(O,o)S=x[p]x=false M[S]=x x=c[F[-1036438+1036442]]p=c[F[-58089-(-58094)]]O=c[F[-714283-(-714289)]]o=O(l,D)P=p[o]l=12356274386258-384729 S=x[P]P=c[F[221143-221138]]p=c[F[-186468+186474]]o=Y(179058-166167)O=p(o,l)x=P[O]M=S[x]o=1045990+16322086086602 O=Y(356161+-343003)x=c[F[-685147-(-685152)]]P=c[F[632414-632408]]p=P(O,o)S=x[p]x=true M[S]=x S={}M=h[Y(759948-746854)]end else M=c[F[-329735+329736]]P=E(659892+972100,{F[551638+-551635];F[-661076+661080],F[-627377-(-627382)]})S=Y(951500-938388)S=M[S]x=c[F[-819752+819754]]D=896106+33560557228193 S=S(M,x,P)l=Y(479965-466953)x=c[F[374179-374173]]p=c[F[1033583-1033579]]O=c[F[-537990-(-537995)]]o=O(l,D)P=p[o]l=-948815+7309776652186 S=x[P]o=Y(323533+-310392)P=c[F[1032114+-1032110]]p=c[F[-952231+952236]]O=p(o,l)x=P[O]O=Y(1044715-1031710)M=S[x]x=c[F[1002713-1002709]]o=-512555+34032227471378 P=c[F[546577-546572]]p=P(O,o)S=x[p]D=19986812815558-(-367509)x=true M[S]=x x=c[F[-420146+420152]]l=Y(635724-622696)p=c[F[-788206+788210]]O=c[F[813383+-813378]]o=O(l,D)P=p[o]l=25169185641444-9756 S=x[P]P=c[F[361254-361250]]p=c[F[-374213-(-374218)]]o=Y(79026-65939)O=p(o,l)x=P[O]M=S[x]x=c[F[905753-905749]]P=c[F[-937523-(-937528)]]O=Y(585465-572434)o=1025379+35023846054482 p=P(O,o)S=x[p]x=false M[S]=x M=h[Y(971072+-958068)]S={}end end else if M&lt;665456+9953556 then if M&lt;11193273-591811 then if M&lt;-653300+11176176 then M=nil S={M}M=h[Y(-982683-(-995826))]else o=p s=c[F[-5213-(-5215)]]g=Y(-760809+773772)k=c[F[-511577-(-511580)]]V=33787180485790-970537 C=k(g,V)q=s[C]D=l[q]M=D==x M=M and 15497259-(-782817)or-43250+7616642 end else x=Y(-158835+171915)p=-651516-(-651516)M=h[x]P=c[F[688084-688076]]x=M(P,p)M=-652468+15997016 end else if M&lt;10464668-(-296231)then M=1069414-713133 X=c[F[438077+-438076]]b=c[F[142513+-142511]]N=4099113440804-937648 B=Y(488175+-475169)L=b(B,N)i=Y(320337-307338)i=P[i]a=X[L]i=i(P,a)g=i else P=c[F[-182514+182516]]p=c[F[-150901+150904]]x=P==p S=x M=14771918-294346 end end end end else if M&lt;11270537-(-575351)then if M&lt;922253+10650477 then if M&lt;-519737+11748626 then if M&lt;495414+10451945 then if M&lt;10057180-(-742993)then S=734879+212712 p=375968+2414284 P=Y(852411-839549)x=P^p M=S-x S=Y(-144737-(-157770))x=M M=S/x S={M}M=h[Y(640789-627745)]else a=a+N i=a&lt;=B r=not y i=r and i r=a&gt;=B r=y and r i=r or i r=-521805+10383920 M=i and r i=15733296-511007 M=M or i end else H=c[F[769432-769430]]R=c[F[812833+-812830]]K=661345757275-632616 Z=Y(550247-537093)j=R(Z,K)GI=-687923+4314419660556 K=946114+19953782855 z=H[j]Z=Y(-97625+110760)hI=x[z]H=c[F[-807856+807858]]R=c[F[998506-998503]]j=R(Z,K)z=H[j]t=hI[z]hI=I()c[hI]=t t=c[F[-264262-(-264271)]]z=t(x)t=I()c[t]=z j=c[t]K=c[F[964196+-964194]]vI=c[F[464447+-464444]]MI=Y(55120-42234)YI=vI(MI,GI)Z=K[YI]YI=Y(1055464-1042376)MI=-714224+28733917059636 R=j[Z]Z=c[F[521946+-521944]]K=c[F[-899341-(-899344)]]vI=K(YI,MI)j=Z[vI]H=R[j]j=c[F[-383212-(-383214)]]Z=c[F[930655+-930652]]YI=-689162+2786094532891 vI=Y(-143342+156394)K=Z(vI,YI)R=j[K]z=H[R]H=Y(-919029+932222)H=z[H]MI=Y(169820-156659)R=u(9692253-(-795661),{F[787107-787097];s,hI,t,F[-123697+123699],F[471855-471852]})H=H(z,R)j=c[t]K=c[F[952433-952431]]vI=c[F[-748660-(-748663)]]GI=295371+8143473446149 YI=vI(MI,GI)Z=K[YI]R=j[Z]Z=c[F[-717915+717917]]K=c[F[-352842+352845]]MI=549301+29565292450834 YI=Y(-371922+385043)vI=K(YI,MI)j=Z[vI]H=R[j]j=c[F[-1003057-(-1003059)]]Z=c[F[163946-163943]]vI=Y(192605+-179523)YI=-931230+31359709359785 K=Z(vI,YI)R=j[K]z=H[R]H=Y(390906+-377713)j=f(737580+1114077,{F[-1026866-(-1026876)],s,r;F[995058-995056];F[809316+-809313]})H=z[H]R=n(9880028-(-608772),{F[187678-187668],s,r;F[-765976+765978];F[-1040480-(-1040483)];t})H=H(z,R)H=Y(-990491+1003615)z=h[H]Z={z(j)}H=Z[-220968-(-220969)]R=Z[585595-585593]z=not H M=z and 856509+3377806 or-405065+7272441 end else if M&lt;10589587-(-950075)then if M&lt;-611054+12031280 then Z=c[r]vI=c[F[-379284-(-379286)]]FI=-20277+4430113838915 H=M GI=Y(372334-359427)YI=c[F[813141+-813138]]MI=YI(GI,FI)K=vI[MI]j=Z[K]R=not j M=R and 336242+7129465 or-276940+10159132 z=R else L=Y(842868+-829665)M=X V=Y(701094+-688163)V=k[V]V=V(k,i,a)c[C]=V a=c[F[-646824+646826]]B=330445+16815524893641 X=c[F[-947590-(-947593)]]b=X(L,B)i=a[b]k=o[i]i=k(l)k=I()c[k]=i y=Y(811177+-798207)B=Y(168905+-155696)X=c[F[-890386+890388]]b=c[F[847175-847172]]N=619535+33384410482858 r=12118008770952-(-369794)L=b(B,N)a=X[L]i=o[a]L=c[F[8006-8004]]B=c[F[734810+-734807]]N=B(y,r)b=L[N]X=x[b]a=i(X,p)i=I()c[i]=a X=Y(-714321-(-727445))L=f(603497+12602189,{F[576472-576465];F[-848219+848221],F[-1028700+1028703],C;k,i})a=h[X]B={a(L)}b=B[744309+-744307]a=I()X=B[863932-863931]c[a]=b b=not X M=b and-172410+5280661 or-946281+3498899 end else M=h[Y(-753061-(-766009))]S={}end end else if M&lt;959444+10738678 then if M&lt;11164066-(-515529)then if M&lt;12142795-530987 then k=c[x]a=Y(-11987-(-25091))X=32951675129566-(-158994)g=c[F[218674-218673]]M=13252445-775840 V=c[F[27709+-27707]]i=V(a,X)C=g[i]S=k[C]k=Y(155988-143116)k=S[k]k=k(S)S=c[x]i=Y(86225-73218)a=23315499946867-125194 C=c[F[859585-859584]]g=c[F[-256510+256512]]V=g(i,a)k=C[V]C=nil S[k]=C else M=a M=i and 7390307-(-513083)or-815684+9632757 g=i end else V=Y(598007+-585148)g=h[V]M=-124365+14262590 V=Y(423547+-410623)C=g[V]s=C end else if M&lt;898969+10901655 then if M&lt;720723+11011083 then M=h[Y(-1021268-(-1034223))]S={}x=nil else d=Y(-629736+642860)r=I()y={}c[r]=y A=U(16107855-757623,{F[12525-12517],b;r})y=h[d]t={y(A)}d=t[-947590+947591]m=t[-484464-(-484466)]hI=c[r]t=not hI y=t A=M M=t and 3446552-(-459472)or 490112+9643387 end else K=Y(307778+-294752)j=66626+12400413856332 t=c[F[387070+-387068]]hI=c[F[581774-581771]]H=Y(-534662+547739)R=664650+2845623935203 z=hI(H,R)A=t[z]R=Y(366419-353523)hI=c[F[302135-302133]]z=c[F[-660928-(-660931)]]H=z(R,j)t=hI[H]z=c[F[-129725-(-129727)]]H=c[F[891442-891439]]j=Y(-954895+967927)Z=769316+19628155184784 R=H(j,Z)hI=z[R]z=c[b]j=635888+15961104509208 y={[A]=t;[hI]=z}R=Y(956854+-943863)hI=c[F[813092-813090]]z=c[F[775584+-775581]]vI=-35048+1135579384568 H=z(R,j)t=hI[H]A=x[t]R=c[F[-245643-(-245645)]]GI=Y(790085+-777112)j=c[F[502860+-502857]]Z=j(K,vI)H=R[Z]z=x[H]hI=#z z=-520464-(-520465)t=hI+z hI=y A[t]=hI A=c[F[403560+-403555]]vI=651249+14124189624768 K=Y(-998183+1011261)z=c[r]FI=-410359+15392038412022 R=c[F[-530743-(-530745)]]j=c[F[-551113+551116]]Z=j(K,vI)K=442044+17209018540177 H=R[Z]hI=z[H]Z=Y(-749990-(-763200))t=A(x,hI)t=M YI=732982+15037620546596 vI=Y(-367888+380942)H=c[F[-688486-(-688488)]]R=c[F[533982-533979]]j=R(Z,K)z=H[j]hI=x[z]z=Y(213912-200717)j=c[F[-912337-(-912339)]]Z=c[F[-674940-(-674943)]]K=Z(vI,YI)R=j[K]K=Y(-899770-(-912639))Z=h[K]vI=c[F[-45668+45670]]YI=c[F[-586152-(-586155)]]MI=YI(GI,FI)z=hI[z]K=vI[MI]j=Z[K]vI=c[F[99669-99667]]GI=Y(483004+-469870)FI=889417+3995264234747 YI=c[F[1020779-1020776]]MI=YI(GI,FI)GI=-949533+21610628097132 K=vI[MI]Z=j(K)vI=10496714282774-(-916481)H=R..Z K=Y(-954373-(-967458))j=Y(1057689-1044588)z=z(hI,H)MI=Y(227994+-214877)hI=972932+-972932 Z=11134440050017-669985 A=z or hI z=c[F[363517-363515]]H=c[F[114066-114063]]R=H(j,Z)hI=z[R]t=x[hI]R=c[F[135208-135206]]j=c[F[-358927+358930]]Z=j(K,vI)H=R[Z]Z=Y(-638414-(-651283))j=h[Z]K=c[F[725816-725814]]vI=c[F[275904+-275901]]YI=vI(MI,GI)Z=K[YI]hI=Y(723898-710857)GI=17859409108653-(-803279)R=j[Z]MI=Y(76049-63078)hI=t[hI]K=c[F[114107-114105]]vI=c[F[850288-850285]]YI=vI(MI,GI)Z=K[YI]j=R(Z)R=516676+-516675 z=H..j H=A+R hI=hI(t,z,H)R=c[r]hI=M Z=c[F[851846+-851844]]MI=991619976145-(-144892)K=c[F[688920+-688917]]YI=Y(-391243+404387)vI=K(YI,MI)j=Z[vI]vI=Y(-852828+865822)H=R[j]j=c[F[-400033-(-400035)]]Z=c[F[-589334-(-589337)]]YI=141622+29382245977148 K=Z(vI,YI)R=j[K]z=H==R M=z and 5043776-(-722770)or 11158251-939587 t=z end end end else if M&lt;12156659-(-65358)then if M&lt;11707871-(-425671)then if M&lt;11403833-(-609077)then if M&lt;12135875-177665 then M=12075219-93500 else M=h[Y(638951-625896)]S={P}end else k=823412+-823411 M={}o=35184372237534-148702 c[F[-288976+288978]]=M S=c[F[-991835-(-991838)]]O=S S=P%o q=Y(-1004792+1017871)c[F[-227703+227707]]=S D=376838-376583 l=P%D C=k D=-622016+622018 k=988327-988327 o=l+D g=C&lt;k c[F[-165855-(-165860)]]=o D=h[q]M=-933278+3997502 q=Y(-294555+307438)l=D[q]D=l(x)q=-897656+897657 l=Y(-237184-(-250178))p[P]=l l=-297186+297352 s=D k=q-C end else if M&lt;12834108-642109 then if M&lt;635951+11544534 then k=c[F[-218640-(-218642)]]V=Y(-311154+324345)i=-855316+23316806252413 C=c[F[-877004+877007]]g=C(V,i)M=-355475+3203469 s=k[g]q=o[s]S=q else S=Y(129979-116806)M=h[S]x=Y(90113+-77245)S=h[x]x=Y(-841771-(-854639))h[x]=M x=Y(-287162+300335)h[x]=S x=c[F[3513-3512]]P=x()M=4678553-113808 end else y=Y(-222230-(-235395))L=c[F[450816-450814]]B=c[F[-818056+818059]]r=22269215245372-531387 N=B(y,r)M=-610224+12076480 b=L[N]a=b end end else if M&lt;412172+12154763 then if M&lt;925458+11552770 then if M&lt;586629+11830893 then M=h[Y(519649-506632)]S={}else O=T(O)S={}s=nil l=nil x=T(x)M=h[Y(331496+-318312)]o=T(o)D=nil P=nil p=T(p)q=nil end else O=I()P=I()M=true c[P]=M p=Y(-305517-(-318596))S=h[p]x=G p=Y(1023721+-1010811)M=S[p]p=I()c[p]=M M=U(829287+4586107,{})o=I()D=Y(680586+-667462)c[O]=M M=false c[o]=M l=h[D]q=u(270492+1905736,{o})D=l(q)M=D and-176929+1013878 or 377621+2294216 S=D end else if M&lt;12296004-(-371757)then o=Y(-115516+128398)P=G[-774875+774877]O=h[o]l=c[F[-850856-(-850857)]]x=G[266542-266541]s=Y(344208-331172)k=1037399+10129625579029 D=c[F[-422261-(-422263)]]q=D(s,k)o=l[q]p=O[o]s=33485118175987-(-410101)o=c[F[807137-807136]]l=c[F[-653084-(-653086)]]q=Y(-593309+606227)D=l(q,s)q=20131189483646-885728 O=o[D]S=p[O]O=c[F[306374+-306373]]D=Y(634984+-621854)o=c[F[593734+-593732]]l=o(D,q)p=O[l]M=S[p]q=25249223617303-523562 S=Y(-792320-(-805278))S=M[S]k=Y(-577484+590430)S=S(M)D=Y(10455+2584)p=S O=c[F[-708225+708226]]o=c[F[539087-539085]]l=o(D,q)S=O[l]M=p[S]D=Y(387654+-374734)O=c[F[375089-375088]]o=c[F[920330+-920328]]q=765049+29478196840741 l=o(D,q)S=O[l]l=Y(910394-897401)O=P C=16515029682648-(-414770)M[S]=O S=c[F[-585488+585489]]D=790826+12431519974770 O=c[F[1020462-1020460]]o=O(l,D)M=S[o]D=c[F[-920646+920647]]q=c[F[86356-86354]]s=q(k,C)l=D[s]k=Y(-505828-(-518871))o=x[l]C=168045+30790905685909 D=c[F[-831262+831263]]P=nil q=c[F[-191120+191122]]s=q(k,C)l=D[s]O=o[l]s=Y(337060-324039)l=c[F[333985-333984]]D=c[F[331133-331131]]k=537672+12700511920850 q=D(s,k)o=l[q]S=O[o]k=1036731785700-(-598014)p[M]=S M=c[F[-710701-(-710704)]]l=c[F[-776338-(-776339)]]s=Y(-607589+620795)D=c[F[927670+-927668]]q=D(s,k)o=l[q]O=p[o]S=M(p,O)M=c[F[-58464+58468]]p=nil S=M(x)M=h[Y(-733876+746976)]S={}x=nil else O=-296981+297001 l=c[F[661266+-661265]]D=c[F[488987+-488985]]k=-71254+18308881872803 p+=O L=866638+19539415427644 s=Y(863315+-850252)q=D(s,k)o=l[q]q=Y(180030-167174)V=19881943790100-(-193046)D=h[q]s=c[F[-592508+592509]]k=c[F[284387+-284385]]g=Y(-864568+877707)C=k(g,V)q=s[C]V=17989556191644-(-778013)s=690447+-690447 k=-158167+158167 g=Y(-702188+715239)l=D[q]q=-889225-(-889225)D=l(q,s,k,p)l=Y(-837022-(-850118))s=Y(-8992-(-21900))P[o]=D o=h[l]k=-678174+17464876923106 D=.1 l=o(D)l=c[F[473448-473447]]D=c[F[376600-376598]]q=D(s,k)o=l[q]q=Y(-748073+761278)D=h[q]M=h[Y(-890729+903726)]s=c[F[-684142-(-684143)]]k=c[F[180674+-180672]]C=k(g,V)q=s[C]S={}l=D[q]q=-397324-(-397324)b=Y(643178+-630117)i=c[F[77461+-77460]]a=c[F[-184515-(-184517)]]X=a(b,L)V=i[X]p=nil b=Y(-347072+360025)x=nil g=P[V]i=c[F[-967689+967690]]a=c[F[-433771+433773]]L=30741243722077-82290 X=a(b,L)V=i[X]L=568996+2765884823139 C=g[V]V=c[F[104027-104026]]i=c[F[-307902-(-307904)]]b=-937312+22387269105176 X=Y(-105350+118328)a=i(X,b)g=V[a]k=C[g]b=Y(674122-661154)i=c[F[101001-101000]]a=c[F[-80754+80756]]X=a(b,L)V=i[X]g=P[V]i=c[F[-603554-(-603555)]]a=c[F[933412+-933410]]L=-882902+15503564690697 b=Y(370717-357804)X=a(b,L)V=i[X]C=g[V]s=k+C D=l(q,s)P[o]=D P=nil end end end end end else if M&lt;16261700-1040503 then if M&lt;-236905+14434418 then if M&lt;-679084+14151915 then if M&lt;574046+12588937 then if M&lt;12428628-(-611768)then if M&lt;13622738-788943 then V=890480+34586253043833 S=c[F[-114397+114403]]D=c[x]M=-545923+6366816 s=c[F[-850231-(-850232)]]g=Y(302227-289342)k=c[F[658204-658202]]C=k(g,V)k=Y(-428296+441344)q=s[C]l=S(D,q)S=c[x]C=76844+22084202593279 D=c[F[595829+-595828]]q=c[F[500110+-500108]]s=q(k,C)l=D[s]D={}S[l]=D else C=c[F[298344+-298343]]a=192093+18881848259579 g=c[F[730944+-730942]]i=Y(-813382-(-826438))V=g(i,a)k=C[V]i=Y(741376-728381)s=q[k]C=c[F[-873781+873782]]a=6888961456659-109964 g=c[F[-672591-(-672593)]]V=g(i,a)k=C[V]M=s[k]p+=M M=-672777+15324982 end else O=Y(91406-78524)s=13119086492210-139861 x=G[716353+-716352]p=h[O]q=Y(-185646+198801)o=c[F[-474495-(-474496)]]l=c[F[-561286-(-561288)]]D=l(q,s)O=o[D]P=p[O]O=c[F[98034-98033]]o=c[F[-867442-(-867444)]]q=-351575+10687136510151 D=Y(148207+-135015)l=o(D,q)p=O[l]D=34048281917120-(-493358)S=P[p]p=c[F[-708096-(-708097)]]l=Y(558268-545201)O=c[F[124156+-124154]]o=O(l,D)P=p[o]M=S[P]S=Y(984025+-971067)S=M[S]S=S(M)o=Y(-11911+25083)s=Y(873125+-860006)l=-1037793+27562776045 P=S S=c[F[-470555-(-470556)]]p=c[F[1045378+-1045376]]O=p(o,l)M=S[O]l=c[F[-1004601-(-1004602)]]k=20816762732426-(-58963)D=c[F[-335149+335151]]q=D(s,k)o=l[q]k=32349028714611-(-193124)s=Y(461707-448543)O=x[o]l=c[F[-478817-(-478818)]]D=c[F[-148164-(-148166)]]q=D(s,k)o=l[q]p=O[o]o=c[F[284593-284592]]s=-208533+20158750544704 l=c[F[104321-104319]]q=Y(87138+-74088)D=l(q,s)O=o[D]S=p[O]P[M]=S M=c[F[-302674-(-302677)]]S=M(x)S={P}M=h[Y(373750+-360692)]end else if M&lt;14150223-726427 then if M&lt;-475393+13837416 then s=695044+16165774180963 M=c[F[-794568-(-794569)]]p=c[F[-758782+758784]]k=31402774148528-1014929 O=c[F[-254625-(-254628)]]q=Y(-464594+477663)l=Y(-21608-(-34692))D=327630+6826931850397 o=O(l,D)P=p[o]p=c[F[845792-845788]]C=9957425330432-(-153884)o=c[F[435073-435071]]l=c[F[103469-103466]]D=l(q,s)O=o[D]l=c[F[214865-214863]]s=Y(-486052-(-499048))D=c[F[729489-729486]]q=D(s,k)o=l[q]V=9634274961255-153057 k=Y(473021-459898)D=c[F[-323462+323464]]q=c[F[718874-718871]]s=q(k,C)l=D[s]g=Y(-437932+450997)D=c[F[-308181-(-308186)]]s=c[F[925178+-925176]]k=c[F[-853815-(-853818)]]C=k(g,V)q=s[C]s=c[F[-228675-(-228681)]]x={[P]=p,[O]=o,[l]=D,[q]=s}P=Y(400782-387735)P=M[P]S={P(M,x)}M=h[Y(-243919+256935)]S={v(S)}else m=Y(-91002+104182)b=c[F[494254+-494249]]y=c[F[402766-402764]]r=c[F[220772-220769]]hI=Y(-611596-(-624655))A=17615362426465-403031 z=6724970755692-223793 d=r(m,A)M=11238816-(-998233)N=y[d]m=c[F[345960-345958]]A=c[F[-780078+780081]]t=A(hI,z)d=m[t]r=o[d]hI=Y(456165+-443093)z=25679277235054-208057 m=c[F[447560+-447558]]A=c[F[-283626-(-283629)]]t=A(hI,z)d=m[t]y=r..d B=N..y L=b(x,B)end else g=19464723283805-498678 q=c[F[-1046138-(-1046139)]]s=c[F[-492255+492257]]C=Y(1042901-1029907)k=s(C,g)D=q[k]M=-394933+4861707 O=D end end else if M&lt;13354622-(-749249)then if M&lt;13300352-(-521828)then if M&lt;12809645-(-671963)then j=666018-666016 R=t[j]j=c[A]H=R==j hI=H M=392907+1154929 else b=5771607092283-614844 V=c[F[405129-405128]]X=Y(-1026147+1039141)i=c[F[-443252+443254]]a=i(X,b)g=V[a]M=-323348+8800810 k=g end else M=s and 880533+11977100 or 452408+14199797 end else if M&lt;624097+13518104 then if M&lt;-345815+14483726 then i=6771812626829-(-776900)k=c[F[-305644-(-305646)]]V=Y(-892232-(-905226))C=c[F[1022508-1022505]]g=C(V,i)s=k[g]q=l==s M=q and 54993+4995608 or-761505+16678116 else S=s M=k M=s and 406793+6599974 or 691161-572461 end else A=Y(-563695+576891)r=c[F[343555+-343553]]d=c[F[-195492+195495]]t=29493739186169-45651 m=d(A,t)y=r[m]b=o[y]r=c[L]y=b(r)b=I()c[b]=y r=c[b]y=not r M=y and 436698+13981524 or 503535+11296426 end end end else if M&lt;13553979-(-989444)then if M&lt;851356+13605890 then if M&lt;-743080+15102235 then if M&lt;13553250-(-794530)then a=T(a)O=T(O)O=I()l=nil P=T(P)l=Y(800281-787428)s=T(s)C=nil o=T(o)g=nil q=nil V=nil a=-201399+201655 D=T(D)s=Y(-325601+338680)D=Y(-169042+181895)p=T(p)k=T(k)p=nil i=nil P=nil V={}c[O]=P P=I()c[P]=p o=h[l]C={}l=Y(342598-329727)p=o[l]q=Y(225977-213118)o=I()i=560548-560547 c[o]=p l=h[D]D=Y(-840934-(-854111))p=l[D]D=h[q]q=Y(-982400-(-995453))l=D[q]q=h[s]s=Y(742874-729747)M=9932391-(-918659)D=q[s]k=I()q=310913+-310913 s=I()g=I()c[s]=q q=-891508+891510 c[k]=q q={}B=a a=161438+-161437 c[g]=C N=a a=752430+-752430 C=-355259-(-355259)y=N&lt;a a=i-N else b=c[F[604354-604349]]m=861911+30289048424513 N=c[F[598414+-598412]]y=c[F[125560+-125557]]d=Y(46312+-33220)r=y(d,m)M=-989626+13226675 B=N[r]L=b(x,B)end else r=Y(553074-539967)z=32731558183839-821270 y=h[r]M=h[Y(499567-486608)]m=c[F[-219901+219903]]A=c[F[-118818-(-118821)]]hI=Y(741388+-728479)t=A(hI,z)d=m[t]S={}r=y(d)y=c[F[135303-135298]]m=c[F[357443+-357441]]z=2218787563739-(-383790)hI=Y(681106+-667938)A=c[F[71156+-71153]]t=A(hI,z)d=m[t]r=y(x,d)end else if M&lt;13958230-(-528761)then if M&lt;212712+14261132 then M=U(16124798-(-532379),{O})b={M()}S={v(b)}M=h[Y(-762804-(-775688))]else M=S and-249368+6438868 or 3335221-837936 end else M=c[F[-8290+8294]]s=-699784+15956762479246 P=c[F[-999457-(-999462)]]o=c[F[7671+-7669]]q=Y(-929256+942463)l=c[F[-262359+262362]]D=l(q,s)O=o[D]p=x..O S=M(P,p)M=917617+10807345 end end else if M&lt;-787216+15806959 then if M&lt;15185514-315523 then if M&lt;861594+13777220 then o=c[F[372638-372634]]O=P&gt;=o S=O M=6113491-281172 else M=-597269+2376754 D=nil q=nil end else S=Y(-908557-(-921664))D=861725+22639951397649 M=h[S]l=Y(727800+-714755)p=c[F[132337-132336]]O=c[F[-745061+745063]]o=O(l,D)P=p[o]S=M(P)M=h[Y(111777+-98672)]S={}end else if M&lt;-472366+15524025 then S=c[x]a=-192154+5331806550092 C=c[F[584247-584246]]i=Y(420404+-407323)g=c[F[748240+-748238]]V=g(i,a)a=Y(-409811-(-422787))k=C[V]C=false S[k]=C X=520029+9472873619934 k=c[x]g=c[F[57248+-57247]]V=c[F[-56946-(-56948)]]i=V(a,X)C=g[i]S=k[C]M=S and 10849677-(-723158)or 245058+12231547 else p=206283+14062716 S=8308789-422908 P=Y(312392+-299374)x=P^p M=S-x S=Y(-189398-(-202380))x=M M=S/x S={M}M=h[Y(505255-492319)]end end end end else if M&lt;16337609-151841 then if M&lt;16509782-709249 then if M&lt;14822697-(-527283)then if M&lt;-149545+15426268 then if M&lt;279824+14953747 then a=#V B=562954+-562954 M=6154754-838282 i=a==B else hI=c[P]S=hI M=hI and 8388496-(-995000)or 707729+3923779 end else p=c[F[334523+-334514]]M={}P=-159156+159157 O=p x=M p=724480+-724479 o=p p=-915311-(-915311)l=o&lt;p M=-475972+5417995 p=P-o end else if M&lt;-863273+16426253 then if M&lt;15811045-438094 then M=c[F[-1022938+1022939]]x=c[F[-353024+353026]]S=M(x)c[F[-268239-(-268242)]]=S M=h[Y(199081+-186008)]S={}else S=c[F[-890180+890188]]s=c[x]k=c[p]q=S(s,k)q=Y(375114-361990)S=h[q]k=u(7074145-758310,{F[-601016+601025];x,p,o;O})C={S(k)}s=C[-804877+804879]q=C[-95426-(-95427)]S=not q M=S and-970075+6595879 or 14464222-(-557197)end else P=c[F[-994890-(-994891)]]o=Y(765692+-752778)p=c[F[912977-912975]]l=53544+26642854354766 O=p(o,l)S=P[O]D=-505462+32590271623614 q=27396644577870-700537 p=c[F[9307+-9306]]O=c[F[-268649+268651]]l=Y(623991+-610997)o=O(l,D)P=p[o]O=c[F[-396912-(-396913)]]o=c[F[-321637-(-321639)]]D=Y(-92348-(-105205))k=-132803+10106411604261 l=o(D,q)p=O[l]o=c[F[-903992+903993]]s=22249387408437-(-748611)l=c[F[-972210-(-972212)]]q=Y(959133+-946139)D=l(q,s)O=o[D]l=c[F[-880876+880877]]C=28433376572843-311795 s=Y(505284+-492378)D=c[F[-95429+95431]]q=D(s,k)o=l[q]D=c[F[-307877+307878]]k=Y(219629+-206635)q=c[F[-114825-(-114827)]]s=q(k,C)l=D[s]M={[S]=P,[p]=O;[o]=l}S={M}M=h[Y(-905948-(-919129))]end end else if M&lt;15068838-(-944725)then if M&lt;-531097+16420982 then if M&lt;205089+15677150 then b=c[P]X=b M=b and 961677+2124027 or 2559463-706528 else p=-512443-(-512613)P=c[F[-96946-(-96949)]]x=P*p P=451831-451574 M=442473+715137 S=x%P c[F[1004603+-1004600]]=S end else V=29021202581902-1021124 s=c[F[134379-134377]]g=Y(999483+-986372)k=c[F[805823-805820]]C=k(g,V)q=s[C]s=c[F[763870-763864]]k=s(x)x[q]=k L=Y(753191-740156)s=c[F[164894+-164892]]k=c[F[-222871-(-222874)]]g=Y(17050-4176)V=496617+30829115384874 C=k(g,V)q=s[C]k=Y(1040918+-1027759)s=h[k]V=10628152461991-30546 k=s()x[q]=k s=c[F[860898+-860896]]k=c[F[-470746-(-470749)]]g=Y(790120+-777185)a=6343+25340629046609 C=k(g,V)q=s[C]i=30574600183863-338074 s=true x[q]=s N=-555386+6882929116671 V=Y(-292738-(-305847))k=c[F[151872+-151870]]C=c[F[667031-667028]]b=31313951787818-(-437707)g=C(V,i)s=k[g]q=x[s]X=23222771584117-811576 s=I()c[s]=q i=Y(865539+-852590)C=c[F[-778658+778660]]g=c[F[-100062-(-100065)]]V=g(i,a)k=C[V]g=c[F[-384323-(-384325)]]V=c[F[688621+-688618]]a=Y(585750-572635)i=V(a,X)C=g[i]V=c[F[608561-608559]]i=c[F[-171558+171561]]X=Y(-837474-(-850663))a=i(X,b)X=21722120924083-754736 B=2783816575138-517010 g=V[a]q={[k]=C;[g]=P}g=c[F[-1009276+1009278]]a=Y(-404701-(-417604))V=c[F[-989151+989154]]i=V(a,X)C=g[i]k=x[C]a=c[F[-646300+646302]]X=c[F[-950016+950019]]b=X(L,B)i=a[b]B=Y(180117+-167219)V=x[i]g=#V V=-272932-(-272933)C=g+V a=Y(309102-296244)g=q k[C]=g g=c[F[-744345+744347]]b=Y(787889+-774886)X=63611+15594302841826 V=c[F[-460621-(-460624)]]i=V(a,X)C=g[i]k=o[C]C=I()c[C]=k k=c[C]i=c[F[-322224+322226]]a=c[F[-598380+598383]]L=15530461572206-774191 g=Y(-946879+959810)X=a(b,L)V=i[X]X=c[F[-59698-(-59700)]]b=c[F[-417992+417995]]L=b(B,N)a=X[L]g=k[g]i=x[a]g=g(k,V,i)B=21365910265505-882628 L=Y(229823+-216607)c[C]=g k=c[C]a=c[F[-730929+730931]]X=c[F[730378+-730375]]b=X(L,B)X=M M=l and 12066380-600124 or-288716+12504288 i=a[b]a=l end else if M&lt;16041029-(-134045)then A=T(A)m=T(m)N=T(N)d=T(d)t=nil y=T(y)M=7057813-617409 r=T(r)else vI=c[r]MI=c[F[692506+-692504]]QI=Y(-515549-(-528415))eI=32109043378578-814891 GI=c[F[-442250-(-442253)]]FI=GI(QI,eI)QI=21245638893402-(-149323)M=15924917-(-370552)YI=MI[FI]K=vI[YI]FI=Y(680602-667608)YI=c[F[-657498+657500]]MI=c[F[854689-854686]]GI=MI(FI,QI)vI=YI[GI]Z=K==vI R=Z end end end else if M&lt;15606048-(-972441)then if M&lt;-992234+17330178 then if M&lt;17130099-845993 then if M&lt;615658+15573678 then S=c[F[921769-921768]]P=G[-815886+815888]x=G[417658+-417657]p=G[-622416-(-622419)]s=Y(606105-593107)O=G[345380+-345376]l=c[F[379741+-379739]]D=c[F[485609-485606]]k=-269238+3130493575527 C=28652872494708-457302 q=D(s,k)o=l[q]M=S[o]D=c[F[-456072+456074]]q=c[F[29879+-29876]]k=Y(527317+-514201)s=q(k,C)l=D[s]o=x[l]S=M(o)o=S M=not o M=M and 5280628-(-729990)or-502145+2610083 else S={l}M=h[Y(-487961+500825)]end else z=R M=j M=-79436+7545143 end else if M&lt;16632030-124427 then if M&lt;699664+15749557 then s=Y(391673+-378794)k=761054+25894435115580 O=c[x]l=c[F[504156+-504155]]D=c[F[-1030439-(-1030441)]]q=D(s,k)o=l[q]p=O[o]q=Y(926391-913222)o=c[F[-124599+124600]]s=31495109161257-522207 l=c[F[567707-567705]]C=25914390004778-(-600825)D=l(q,s)O=o[D]M=h[Y(-153140+166189)]q=28038980742286-391566 D=Y(727647+-714557)S=p[O]O=c[F[-604132+604133]]o=c[F[-137525-(-137527)]]l=o(D,q)p=O[l]O=true S[p]=O o=c[x]D=c[F[221572+-221571]]q=c[F[987023+-987021]]k=Y(-347690-(-360713))s=q(k,C)l=D[s]k=-875523+625156381990 O=o[l]s=Y(-444129+457242)l=c[F[-965872-(-965873)]]D=c[F[-278317-(-278319)]]q=D(s,k)o=l[q]p=O[o]q=Y(-532855+545835)o=c[F[-31207-(-31208)]]s=-695529+21588525286445 l=c[F[780554+-780552]]D=l(q,s)O=o[D]S=p[O]O=c[F[-819434+819435]]D=Y(-960223+973197)o=c[F[-283183+283185]]q=28700483964638-(-501078)l=o(D,q)p=O[l]s=-60755+10200655183841 o=c[F[-971443+971444]]l=c[F[-564813+564815]]q=Y(822279+-809318)D=l(q,s)O=o[D]S[p]=O S={}else M=h[Y(-713169+726032)]S={}end else x=G[376547-376546]P=Y(-872092-(-885032))S=h[P]D=10881614299149-519234 P=S(x)l=Y(-732248-(-745135))p=c[F[165478+-165477]]O=c[F[-366734+366736]]o=O(l,D)S=p[o]M=P~=S M=M and 748629+14987509 or-271307+16873133 end end else if M&lt;891290+15822439 then if M&lt;299311+16336831 then if M&lt;411849+16218383 then P=c[F[450008-450007]]q=Y(-403543+416488)s=29695884328294-(-948382)p=c[F[-58953-(-58955)]]M=Y(-643617-(-656616))M=x[M]o=Y(-121971-(-134904))l=1553399206722-938095 O=p(o,l)S=P[O]M=M(x,S)P=M M=nil S=nil O=S o=c[F[84680-84679]]l=c[F[584186-584184]]D=l(q,s)p=M M=Y(27104-14042)M=x[M]S=o[D]M=M(x,S)M=M and-468804+3036349 or-82047+2201501 else N=Y(975714+-962846)L=Y(-225050+238133)M=h[L]B=h[N]L=M(B)M=Y(1054231-1041058)h[M]=L M=3983442-(-257827)end else M=381074+4183671 end else if M&lt;409106+16354850 then i=19284764668108-691640 k=c[F[802416-802415]]C=c[F[844736-844734]]V=Y(553701+-540522)g=C(V,i)s=k[g]k=x q[s]=k M=-742890+5287425 else i={}a=I()B=E(4117888-(-387825),{a;s,k;o})D=nil m=Y(-918291-(-931417))N=I()c[a]=i l=nil p=nil i=I()c[i]=B y=Y(584722-571593)l=Y(-451977+464905)B={}r={}H=nil c[N]=B t=Y(687804-674600)B=h[y]A=c[N]p={}q=nil d={[m]=A,[t]=H}y=B(r,d)V=nil B=n(5632497-(-845462),{N,a;g,s,k;i})s=T(s)c[P]=y N=T(N)k=T(k)k=Y(-721673+734555)d=5319629710952-466107 g=T(g)a=T(a)o=T(o)o=I()c[O]=B C=nil i=T(i)c[o]=p i=Y(87931-75043)p=h[l]s=h[k]a=-721654+626366399513 C=c[P]g=c[O]V=g(i,a)k=C[V]q=s[k]i=350160761696-(-740675)k=c[P]V=Y(-510649-(-523867))C=c[O]g=C(V,i)B=217677038272-(-671141)s=k[g]C=Y(310902-298020)D=q[s]l=p(D)D=Y(-511190+524118)p=I()N=9729871219300-(-640846)c[p]=l l=h[D]k=h[C]g=c[P]V=c[O]a=Y(59282-46111)i=V(a,B)C=g[i]s=k[C]C=c[P]i=Y(316156+-303191)g=c[O]a=396854+8985769312802 V=g(i,a)k=C[V]q=s[k]D=l(q)l=I()c[l]=D q=Y(-1007829-(-1020757))r=-781876+29446363931588 D=h[q]g=Y(1001423-988541)C=h[g]V=c[P]i=c[O]B=Y(-888164-(-901042))a=i(B,N)g=V[a]k=C[g]a=Y(-594123-(-607273))g=c[P]B=2304645412628-29411 V=c[O]i=V(a,B)C=g[i]s=k[C]q=D(s)s=Y(891800-878872)D=I()V=Y(425889-413007)c[D]=q q=h[s]g=h[V]i=c[P]a=c[O]N=Y(525271-512122)B=a(N,r)V=i[B]C=g[V]V=c[P]r=Y(-147119+160069)t=W(17430383-897086,{P;O})N=-9467+11330582641047 B=Y(-538465+551390)i=c[O]a=i(B,N)g=V[a]k=C[g]s=q(k)k=Y(251819+-238891)q=I()c[q]=s s=h[k]i=Y(11416-(-1466))V=h[i]a=c[P]B=c[O]N=B(r,d)i=a[N]g=V[i]r=774415+7968658734447 N=Y(43256-30396)d=6619970277761-623991 i=c[P]a=c[O]B=a(N,r)V=i[B]C=g[V]r=17569139645853-(-557656)k=s(C)C=Y(-386382-(-399351))s=I()c[s]=k k=h[C]B=Y(-963821-(-976835))V=c[P]i=c[O]N=-605334+28440267993169 a=i(B,N)g=V[a]C=Y(-834376+847533)C=k[C]C=C(k,g)k=I()g=Y(-483234+496203)c[k]=C N=Y(-123252+136206)C=h[g]g=Y(953005-939848)i=c[P]a=c[O]B=a(N,r)r=Y(622122+-609207)V=i[B]g=C[g]g=g(C,V)C=I()c[C]=g V=Y(390515-377546)g=h[V]a=c[P]B=c[O]N=B(r,d)i=a[N]V=Y(1035593-1022436)V=g[V]V=V(g,i)g=I()i=I()c[g]=V V=-887829-(-887834)B=Y(784117-771051)c[i]=V V=W(40113+5747652,{p;P;O})a=c[o]a[B]=V M=h[Y(960156+-947086)]V=I()a=W(6034178-526084,{P;O;k})c[V]=a B=n(9553181-271592,{P,O})a=I()c[a]=B N=J(62489-(-882692),{P;O;V,a})B=I()j=Y(118704-105777)c[B]=N r=w(-759236+13413240,{P,O;V;a})N=I()c[N]=r d=J(5988138-744775,{P,O,V,a})r=I()c[r]=d d=I()A=n(783348+12344674,{P;O;a})m=U(8131893-539272,{P;O,a})c[d]=m m=I()c[m]=A A=I()c[A]=t t=I()H=w(-52725+16238660,{o;P,O;D,r;d,C,A,m,g})c[t]=H H=J(6111047-838403,{P,O,q;i;l,N;s;B,t})R=c[o]R[j]=H H=c[o]S={H}end end end end end end end end M=#Q return v(S)end,491175-491175,function(h,Y)local v=p(Y)local G=function(G,F,Q,e)return M(h,{G,F,Q,e},Y,v)end return G end,function()P=P+(-120031+120032)x[P]=792959-792958 return P end,function(h,Y)local v=p(Y)local G=function(G,F,Q,e,S,c)return M(h,{G,F;Q,e;S;c},Y,v)end return G end,function(h,Y)local v=p(Y)local G=function(G,F)return M(h,{G,F},Y,v)end return G end,function(h,Y)local v=p(Y)local G=function(G,F,Q)return M(h,{G;F,Q},Y,v)end return G end,{},function(h)x[h]=x[h]-(279849+-279848)if-57815+57815==x[h]then x[h],c[h]=nil,nil end end,function(h,Y)local v=p(Y)local G=function(G,F,Q,e,S,c,x)return M(h,{G;F,Q,e;S;c,x},Y,v)end return G end,function(h)for Y=748425-748424,#h,1036028+-1036027 do x[h[Y]]=(987242+-987241)+x[h[Y]]end if G then local M=G(true)local v=Q(M)v[Y(721583-708457)],v[Y(614452-601553)],v[Y(-526021+539124)]=h,O,function()return-2889076-312266 end return M else return F({},{[Y(-861644+874543)]=O,[Y(-728212+741338)]=h;[Y(284598-271495)]=function()return-1020285+-2181057 end})end end return(o(12475708-(-7129),{}))(v(S))end)(getfenv and getfenv()or _ENV,unpack or table[Y(-1043378+1056302)],newproxy,setmetatable,getmetatable,select,{...})end)(...)</ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="ModuleScript" referent="RBXBF3EACAD61E84D1999EEE90C2356CB3F">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">PrintGameHierarhy</string>
				<string name="ScriptGuid">{0164186E-2811-47BD-8497-108528DC7D07}</string>
				<ProtectedString name="Source">--[[ v1.0.0 https://wearedevs.net/obfuscator ]] return(function(...)local W={&quot;\105\111\120\066\103\106\120\070\050\073\080\098\115\067\101\057\085\053\061\061&quot;;&quot;\085\053\108\108\081\047\117\074&quot;;&quot;\052\109\079\084\121\070\061\061&quot;,&quot;\085\111\113\101\121\085\110\067\050\066\050\081\098\111\110\104\113\122\121\061&quot;,&quot;\121\066\080\080\074\053\061\061&quot;,&quot;\121\084\072\086\101\116\061\061&quot;,&quot;\105\106\056\061&quot;,&quot;\085\098\113\073\119\109\072\067\055\111\085\055\119\072\051\106\103\102\061\061&quot;,&quot;\119\043\066\051\087\108\108\067\065\108\115\087\101\089\051\049\057\111\107\116\077\097\105\080\104\077\117\082\115\065\098\083\085\098\075\066\073\079\086\061&quot;,&quot;\074\112\085\071\105\108\101\072&quot;,&quot;\121\066\079\049\121\066\073\086&quot;,&quot;\113\086\100\107\115\108\113\075\103\099\054\107\074\098\051\089\101\070\061\061&quot;,&quot;&quot;;&quot;\104\056\069\122\078\056\084\072&quot;;&quot;\074\066\085\086\105\098\085\086\121\052\115\080\121\112\107\072&quot;;&quot;\067\090\051\115\112\088\066\119\112\074\082\067\113\106\054\061&quot;;&quot;\113\056\050\106\088\053\061\061&quot;;&quot;\085\077\055\068\075\051\068\105&quot;;&quot;\113\122\079\099\113\076\120\051\105\112\074\061&quot;,&quot;\052\109\079\051\105\112\115\072\048\102\061\061&quot;;&quot;\074\112\073\049\101\122\079\071&quot;;&quot;\101\066\085\086\052\066\113\080\105\098\085\114\119\122\072\072\074\112\073\078\121\066\080\082\052\108\050\086\074\112\072\049\101\070\061\061&quot;,&quot;\109\117\084\070\100\102\061\061&quot;;&quot;\119\052\110\080\119\052\120\099&quot;;&quot;\057\120\056\115\077\117\053\061&quot;,&quot;\108\052\109\110\053\065\100\074&quot;;&quot;\085\122\073\071\074\122\085\078\056\054\115\072\113\122\085\069\113\122\085\067\056\116\061\061&quot;;&quot;\101\066\073\071\101\116\061\061&quot;,&quot;\075\065\049\053\083\120\102\067\055\118\081\072\074\074\067\078\119\052\054\112\070\109\065\106\107\097\067\061&quot;,&quot;\050\098\101\103\050\099\050\111\101\122\120\056\081\073\051\049\074\053\061\061&quot;,&quot;\075\053\088\106\081\112\115\098&quot;,&quot;\101\112\070\108\101\069\113\081\111\067\073\052\115\112\115\055&quot;;&quot;\069\072\105\099\100\116\061\061&quot;;&quot;\109\110\085\103\069\057\068\081&quot;;&quot;\105\098\073\086\119\102\061\061&quot;,&quot;\085\104\079\077&quot;;&quot;\065\053\061\061&quot;,&quot;\048\116\061\061&quot;;&quot;\074\108\115\078\119\098\082\084&quot;,&quot;\104\051\105\075\116\072\087\061&quot;,&quot;\055\097\079\098\075\115\107\069\070\120\097\049&quot;,&quot;\065\114\081\061&quot;,&quot;\105\109\113\049\048\122\072\043\111\106\085\108\105\066\043\108\111\112\086\061&quot;,&quot;\071\074\115\118\087\043\087\061&quot;;&quot;\121\067\085\071\074\054\085\049\105\109\051\075\048\106\080\119\121\086\103\061&quot;,&quot;\119\067\104\061&quot;,&quot;\114\108\056\087\052\054\073\057&quot;,&quot;\101\085\120\107\105\122\109\050\055\109\115\108\098\122\073\057\081\122\087\061&quot;;&quot;\050\067\051\070\119\098\120\054&quot;;&quot;\074\122\050\080\105\122\070\061&quot;;&quot;\052\073\087\061&quot;;&quot;\072\086\071\071\055\097\119\089\082\082\113\117\103\075\067\052\054\067\057\066\080\116\061\061&quot;,&quot;\101\066\109\080\113\122\050\043&quot;;&quot;\101\112\107\047\105\108\056\061&quot;,&quot;\105\109\043\071\118\053\061\061&quot;;&quot;\105\106\054\061&quot;;&quot;\121\084\105\065\075\071\104\061&quot;,&quot;\116\099\085\050\065\122\107\101\085\052\074\086\116\098\080\086&quot;;&quot;\118\108\106\115\074\118\110\081\084\074\107\117\056\088\050\107\074\067\052\109\055\070\087\089\085\087\073\066\110\116\061\061&quot;;&quot;\101\106\085\122\085\112\081\099\105\052\050\056\103\098\082\088\116\070\061\061&quot;;&quot;\080\079\073\097\120\122\106\057\082\097\077\070\105\056\086\051\049\102\048\067\120\112\066\101\102\077\099\054\055\101\111\083\056\105\071\102\119\056\075\077\055\075\104\053\117\115\080\083\072\100\090\117\107\065\099\105\097\101\100\122\079\053\061\061&quot;;&quot;\052\109\079\071\101\052\115\080\113\122\073\089\105\122\081\061&quot;,&quot;\113\122\073\089\105\122\081\061&quot;;&quot;\048\081\085\043\081\054\102\061&quot;;&quot;\112\069\118\047\071\116\061\061&quot;,&quot;\113\098\082\070\121\098\050\068&quot;;&quot;\088\053\080\069\119\065\048\103&quot;;&quot;\103\089\099\119\118\090\077\111\068\103\070\117\108\122\069\047\100\070\113\089\098\067\105\082\052\116\118\054\099\074\117\118\101\090\101\099\049\086\111\055\048\056\119\076\065\050\086\085\050\109\079\117\054\082\118\103\085\049\086\070\054\111\068\074\086\079\049\088\053\102\061\061&quot;,&quot;\100\069\077\077\087\110\102\061&quot;;&quot;\113\108\050\106\050\086\067\108\116\098\113\073\101\054\101\100\081\054\121\061&quot;;&quot;\105\122\085\049&quot;,&quot;\086\043\114\057\078\122\100\068&quot;;&quot;\050\106\115\047\105\109\050\088\103\109\081\070\111\099\085\073\065\052\056\061&quot;,&quot;\052\109\079\104\101\098\100\061&quot;;&quot;\050\112\073\055\098\122\115\083\098\098\072\085\081\112\109\108\103\073\054\061&quot;;&quot;\115\066\085\086\116\066\080\051\105\122\115\078\101\098\100\061&quot;,&quot;\073\086\054\100\048\115\101\071&quot;;&quot;\105\108\116\086\055\066\113\054\050\099\080\070\113\086\053\086\119\072\116\061&quot;,&quot;\085\112\104\108\116\052\085\107\074\099\081\061&quot;,&quot;\083\111\122\073&quot;;&quot;\111\073\051\084\111\052\050\109\103\067\113\051\074\076\116\108&quot;;&quot;\088\113\054\061&quot;,&quot;\075\116\061\061&quot;,&quot;\113\122\079\049\113\098\109\089\101\052\056\061&quot;,&quot;\101\067\076\049\050\048\068\122&quot;,&quot;\101\108\050\109\121\053\061\061&quot;,&quot;\085\054\073\085\050\081\079\111\103\054\051\117\113\099\113\116&quot;;&quot;\065\089\053\072\101\088\043\051\065\053\061\061&quot;;&quot;\069\112\113\081\111\113\043\066&quot;;&quot;\101\052\120\078\105\108\056\061&quot;;&quot;\109\070\081\051\077\105\108\118&quot;,&quot;\111\067\115\072\116\081\115\078\050\072\102\070\048\098\085\121\119\109\053\061&quot;,&quot;\085\076\085\070\055\054\085\088\111\084\056\061&quot;,&quot;\102\084\053\118\087\057\080\086&quot;;&quot;\055\067\080\065\065\054\115\071\074\067\115\110\065\081\082\057&quot;}for T,L in ipairs({{308380+-308379;-744408+744503};{120037-120036,-183543+183572},{359357+-359327,-25784-(-25879)}})do while L[628756+-628755]&lt;L[-173184-(-173186)]do W[L[631066-631065]],W[L[-49114-(-49116)]],L[481835-481834],L[-72487-(-72489)]=W[L[-44612+44614]],W[L[340140-340139]],L[-273275-(-273276)]+(856253-856252),L[775869-775867]-(1022140-1022139)end end local function T(T)return W[T+(978408-926606)]end do local T=string.sub local L={n=79444-79443;u=499424-499409;q=-33301-(-33330);J=890103+-890075;g=116729+-116717,l=-384866+384921,T=-187711+187750,[&quot;\053&quot;]=903904+-903872;P=-1023490+1023523,[&quot;\043&quot;]=-831014+831054,O=-631829-(-631890),D=871238+-871195;w=-548814-(-548840),I=242319-242314;k=-595915-(-595964),f=474756-474756,s=983333-983316;[&quot;\048&quot;]=-1047541+1047571,G=-834494-(-834539);b=-1015117+1015139,[&quot;\056&quot;]=310265+-310257,y=453351+-453327;[&quot;\047&quot;]=-328137+328184,j=500687-500684;e=244319+-244294,L=-629861-(-629868),r=412046-412015,x=385205+-385196;a=925439-925376,R=-819701+819758;d=-323696+323752;Y=384154-384120;t=-1028552+1028568;C=-906428-(-906464);[&quot;\054&quot;]=358169+-358165,Q=422114-422094;[&quot;\052&quot;]=596109-596086,p=439315-439277;i=-296063-(-296090);E=407572-407537,[&quot;\055&quot;]=-462740+462758,z=215163-215157;v=19691+-19649;[&quot;\050&quot;]=529001-528988;S=115615+-115604;c=-376865-(-376916),[&quot;\057&quot;]=233856+-233846;W=-315359-(-315419),H=-579073-(-579110);U=309823-309802,N=-84274+84324;A=-152922-(-152936);Z=233187+-233125;h=632190+-632146,m=-552863-(-552916);B=47440+-47386,o=800304-800285,[&quot;\049&quot;]=937654-937608,[&quot;\051&quot;]=-824729+824770;F=-1015422-(-1015470),V=755375-755323;K=165550+-165492;X=-798346+798348;M=591181+-591122}local F=table.insert local A=string.char local Z=table.concat local I=W local R=math.floor local w=type local D=string.len for W=-649900+649901,#I,170917-170916 do local a=I[W]if w(a)==&quot;\115\116\114\105\110\103&quot;then local w=D(a)local Y={}local e=-997999+998000 local C=-555711-(-555711)local l=-618873-(-618873)while e&lt;=w do local W=T(a,e,e)local Z=L[W]if Z then C=C+Z*(389420-389356)^((-500438-(-500441))-l)l=l+(896374+-896373)if l==-382299-(-382303)then l=1004713-1004713 local W=R(C/(474384-408848))local T=R((C%(368600-303064))/(-558984-(-559240)))local L=C%(388559+-388303)F(Y,A(W,T,L))C=-611406-(-611406)end elseif W==&quot;\061&quot;then F(Y,A(R(C/(-532359-(-597895)))))if e&gt;=w or T(a,e+(-845979+845980),e+(184943-184942))~=&quot;\061&quot;then F(Y,A(R((C%(94459+-28923))/(-550843-(-551099)))))end break end e=e+(-642925-(-642926))end I[W]=Z(Y)end end end return(function(W,F,A,Z,I,R,w,s,b,H,l,f,t,B,C,Y,h,e,a,D,L,r)H,L,s,l,D,b,e,r,C,Y,a,B,f,t,h=function(W,T)local F=C(T)local A=function(A)return L(W,{A},T,F)end return A end,function(L,A,Z,I)local S,C,n,g,u,U,J,Q,P,d,G,O,X,M,w,k,x,v,q,V,j,K,i,y,c,E,z,a,m,r,e,o,l,N while L do if L&lt;10165453-621399 then if L&lt;4671426-414298 then if L&lt;260699+2279144 then if L&lt;1188690-(-106991)then if L&lt;863809+-296537 then if L&lt;800392-611745 then if L&lt;142518-78689 then C=68324-68133 e=D[Z[-260923-(-260926)]]a=e*C e=520342+-520085 w=a%e D[Z[145454-145451]]=w L=5460202-(-234730)else K,J=X(N,K)L=K and 12751045-(-421821)or 512574+14564806 end else if L&lt;1003558-562756 then L=4819319-563121 else e=D[Z[-778876+778879]]C=1039882-1039850 k=821064+-821062 N=494221-494208 a=e%C l=D[Z[728836+-728832]]Q=D[Z[-763363+763365]]v=D[Z[107578+-107575]]X=v-a v=-582598-(-582630)K=X/v M=N-K u=k^M S=Q/u N=897238+-896982 k=-545645-(-545901)r=l(S)l=4294963995-(-3301)C=r%l u=-973033+973034 r=765461+-765459 l=r^a e=C/l a=nil l=D[Z[-925557+925561]]Q=e%u u=975451+4293991845 S=Q*u r=l(S)l=D[Z[-566694-(-566698)]]S=l(e)Q=-894063+959599 C=r+S r=-994904+1060440 l=C%r S=C-l r=S/Q L=2167216-735872 Q=885351+-885095 S=l%Q u=l-S l=nil Q=u/k k=-517581+517837 u=r%k M=r-u k=M/N C=nil r=nil e=nil M={S,Q,u;k}k=nil u=nil D[Z[-375612-(-375613)]]=M S=nil Q=nil end end else if L&lt;709400-(-44496)then if L&lt;-482776+1134165 then P=T(194684-246438)L=W[P]O=T(2318+-54035)z=W[O]P=L(z)L=T(-617355+565589)W[L]=P L=-308565+8898803 else L=336378+13480897 end else L=true L=16844642-937058 end end else if L&lt;2006577-300443 then if L&lt;1141090-(-225592)then if L&lt;295813+1051407 then X=nil N=nil C=s(C)r=s(r)u=nil l=s(l)e=s(e)C=nil l=Y()S=nil S=T(-457971-(-406233))Q=s(Q)Q=T(546657+-598395)X={}J=s(J)M=s(M)v=nil K=nil e=nil D[l]=e e=Y()u=T(307921+-359631)D[e]=C k=s(k)r=W[S]S=T(-904729-(-853010))J=-768325+768581 C=r[S]K=Y()r=Y()D[r]=C S=W[Q]Q=T(190516+-242268)C=S[Q]z=J Q=W[u]M=Y()v=-1024781-(-1024782)u=T(-381174-(-329411))N={}S=Q[u]L=886514+463179 k=T(126142-177876)u=W[k]k=T(332137+-383905)Q=u[k]u=-189174-(-189174)k=Y()D[k]=u u=-160656+160658 D[M]=u u={}D[K]=N N=-264569-(-264569)J=-328134+328135 O=J J=-214437+214437 G=O&lt;J J=v-O else n=not G J=J+O v=J&lt;=z v=n and v n=J&gt;=z n=G and n v=n or v n=-409753+14696814 L=v and n v=10888619-750703 L=L or v end else if L&lt;832675+630133 then C=T(433176-484886)L=W[T(-747345-(-695552))]e=W[C]C=T(313896+-365659)a=e[C]C=D[Z[1028610+-1028609]]e={a(C)}w={F(e)}else e=Y()a=A C=T(943847+-995581)L=true D[e]=L w=W[C]l=Y()Q=T(-204090-(-152367))C=T(472832-524552)L=w[C]C=Y()D[C]=L L=h(10437460-975023,{})r=Y()D[l]=L L=false D[r]=L S=W[Q]u=t(519873+2692201,{r})Q=S(u)w=Q L=Q and-579218+13964337 or 13093294-(-778429)end end else if L&lt;275064+1931406 then if L&lt;557119+1435996 then N=382310-382245 k=Y()M=776567-776564 D[k]=w L=D[Q]v=H(8450294-905822,{})w=L(M,N)X=T(-35422-16301)M=Y()D[M]=w L=-355505+355505 N=L L=469940+-469940 K=L w=W[X]X={w(v)}w=539246-539244 L={F(X)}X=L L=X[w]w=T(851683+-903467)v=L L=W[w]J=D[C]P=T(-136233-(-84479))V=W[P]P=V(v)V=T(757757-809537)j=J(P,V)J={j()}w=L(F(J))J=Y()D[J]=w w=250893-250892 j=D[M]L=163116+16178877 V=j j=504462+-504461 P=j j=1037950-1037950 z=P&lt;j j=w-P else L=524504-(-812316)end else L=W[T(-606723-(-554958))]w={}end end end else if L&lt;399187+2954482 then if L&lt;-855210+3984723 then if L&lt;3278394-388358 then if L&lt;69704+2660856 then L=2944653-996528 M=T(889735-941442)k=W[M]w=k else e=C L=D[Z[-48920-(-48921)]]k=372410+-372155 u=-965374+965374 Q=L(u,k)a[e]=Q L=220939+10873566 e=nil end else if L&lt;683788+2317991 then e=D[Z[-14769-(-14771)]]C=D[Z[601785+-601782]]a=e==C w=a L=321964+12012455 else k=20883908407738-(-832578)u=T(-455012+403286)r=D[Z[-234095-(-234096)]]S=D[Z[917700-917698]]Q=S(u,k)L=11236831-347404 l=r[Q]C=a[l]e=not C w=e end end else if L&lt;3450722-140515 then if L&lt;1015733+2247761 then L=true w={}D[Z[815327-815326]]=L L=W[T(-1017418+965645)]else G=T(1026558+-1078296)O=Y()y=-668048+668049 D[O]=j w=W[G]q=-509145-(-509145)G=T(-706369+654617)L=w[G]E=-478169+478424 i=186680+-176680 G=338889+-338888 n=-483051-(-483151)w=L(G,n)G=Y()D[G]=w n=115642+-115642 L=D[Q]w=L(n,E)n=Y()g=-8257+8259 D[n]=w L=D[Q]U=D[G]E=-707582-(-707583)w=L(E,U)E=Y()D[E]=w x=T(-318447+266693)w=D[Q]U=w(y,g)w=850372+-850371 L=U==w U=Y()w=T(-1091769-(-1039989))D[U]=L o=W[x]c=D[Q]d={c(q,i)}x=o(F(d))o=T(-964590+912854)m=x..o L=T(-644747-(-592965))g=T(283886+-335622)y=g..m L=v[L]L=L(v,w,y)y=Y()g=T(-30051+-21672)m=h(632038+8802663,{Q,O,M,C;e;J,U;y;G,E;n;k})D[y]=L w=W[g]g={w(m)}L={F(g)}g=L L=D[U]L=L and-677256+12748612 or 5182970-(-737890)end else w=k L=M L=k and 1426124-(-522001)or 965965+1679166 end end else if L&lt;3361397-(-355605)then if L&lt;119675+3429810 then if L&lt;4100751-742383 then e=A[-999379+999381]Q=T(-609006+557298)k=346723+22632250416839 l=D[Z[-326050+326051]]u=12646975450458-(-92583)r=D[Z[-390286+390288]]a=A[-636276+636277]S=r(Q,u)u=T(417559-469315)C=l[S]w=a[C]r=D[Z[733634-733633]]S=D[Z[-378223+378225]]Q=S(u,k)l=r[Q]C=e[l]L=w&lt;C w={L}L=W[T(-488721-(-436993))]else K=16791117086032-(-1007930)Q=T(-809836-(-758102))w=W[Q]u=D[Z[70357+-70356]]k=D[Z[97441-97439]]N=T(-583013-(-531225))M=k(N,K)N=T(689529-741251)Q=u[M]L=w[Q]u=D[Z[-357642-(-357643)]]k=D[Z[-464728-(-464730)]]K=992821+29213858729710 M=k(N,K)Q=u[M]k=L w=L(Q,e)M=a==C Q=w u=M L=M and 12742039-751186 or 11783039-693377 end else if L&lt;4195072-607425 then J=#X z=-312138-(-312138)v=J==z L=v and 6546102-(-268693)or 16172238-(-466308)else Q=T(339725+-391435)L=10396230-905686 S=W[Q]u=D[Z[-770682-(-770683)]]N=T(292509+-344256)k=D[Z[-248748-(-248750)]]K=19458434636772-(-411521)M=k(N,K)K=158412+5599232319331 Q=u[M]N=T(473789+-525501)w=S[Q]u=D[Z[-814939+814940]]k=D[Z[291347+-291345]]M=k(N,K)Q=u[M]S=w(e,Q)end end else if L&lt;-87723+4287925 then if L&lt;-283561+4408867 then L=W[T(279342-331103)]w={}else L=D[Z[-761638-(-761645)]]L=L and-584174+12864813 or-541785+10593870 end else L=true L=L and 16477478-861155 or-80715+16251389 end end end end else if L&lt;7187462-178080 then if L&lt;5189512-(-715725)then if L&lt;5203565-266790 then if L&lt;376448+4165792 then if L&lt;608228+3845498 then L=true L=L and 481033-(-199751)or 14921942-(-985642)else l=T(-586086-(-534376))w=W[l]k=721533+1030356385634 r=D[Z[462323+-462322]]S=D[Z[924241-924239]]M=T(-750931-(-699181))u=T(-512148+460369)N=107032+886315720580 Q=S(u,k)l=r[Q]L=w[l]Q=D[Z[-960295+960296]]u=D[Z[524967-524965]]l=646564+-646563 k=u(M,N)S=Q[k]r=C[S]Q=T(997983+-1049766)w=L(e,l,r)u=590154+19487191622184 l=D[Z[-279103+279104]]r=D[Z[-615118+615120]]S=r(Q,u)w=l[S]L=C[w]C=L L=14450540-772311 end else if L&lt;668114+4035344 then k=e&gt;S Q=k L=-796855+16339005 else Q=T(-822911+771201)S=W[Q]N=T(282666+-334405)u=D[Z[878854-878853]]k=D[Z[-264041-(-264043)]]K=5225390732420-338691 M=k(N,K)K=T(-602807+551043)Q=u[M]w=S[Q]k=D[Z[645695-645694]]M=D[Z[531844-531842]]X=27898915782789-511430 z=T(298797+-350528)N=M(K,X)u=k[N]V=15431919710556-(-273078)M=D[Z[-5710-(-5714)]]j=T(953954+-1005698)X=D[Z[-1047275-(-1047276)]]v=D[Z[955979+-955977]]J=v(j,V)K=X[J]v=D[Z[-708226+708231]]j=D[Z[-396591+396592]]O=-175224+6955375606046 V=D[Z[-543944-(-543946)]]P=V(z,O)J=j[P]X=v..J N=K..X k=M..N Q=u..k S=w(e,Q)Q=T(-906277-(-854567))S=W[Q]N=T(-31001-20754)u=D[Z[-1037737-(-1037738)]]K=701396+4024442557310 k=D[Z[1003686-1003684]]M=k(N,K)N=T(-1054503-(-1002703))Q=u[M]w=S[Q]K=-57683+32223038135280 u=D[Z[108511+-108510]]k=D[Z[-62182+62184]]M=k(N,K)Q=u[M]N=T(422998+-474746)S=w(e,Q)w=D[Z[945019-945013]]u=D[Z[723243+-723238]]K=850203+984862197935 Q=-718633-(-718633)S=w(r,Q,a,e,C,u)u=D[Z[368875+-368874]]k=D[Z[-914247+914249]]M=k(N,K)Q=u[M]S=C[Q]Q=D[Z[-329604+329608]]w=S&gt;=Q L=w and 3152396-(-440555)or 491575+8998969 end end else if L&lt;384311+5437765 then if L&lt;-378436+5500239 then S=T(32027+-83772)r=W[S]L=924870+11145630 l=C~=r w=l else e=D[Z[818259+-818256]]C=-191551+191552 a=e~=C L=a and 1337546-877260 or-390511-(-409625)end else q=-279577+279578 D[e]=m d=D[E]c=d+q x=g[c]o=N+x x=-739604-(-739860)L=o%x c=D[n]x=K+c N=L c=-1023901-(-1024157)L=549475+5640010 o=x%c K=o end end else if L&lt;-288139+6986173 then if L&lt;7081218-1008973 then if L&lt;6922667-957284 then o=D[e]m=o L=o and-426157+6481300 or 5829636-(-3761)else x=-702001-(-702002)o=g[x]m=o L=6611052-777655 end else if L&lt;-101610+6229043 then a=A[989879+-989878]e=not a w=e L=e and 10494177-(-395250)or 881945+2168553 else y=s(y)E=s(E)L=-295564+16637557 g=nil U=s(U)n=s(n)O=s(O)G=s(G)end end else if L&lt;6855435-37792 then if L&lt;455490+6339494 then a=A[-430740+430741]L={}e=L L=13934411-256182 C=a else S=nil v={}X=nil J=Y()D[J]=v S=Y()n={}g=T(-201230+149519)x=nil O=Y()N=nil v=Y()z=f(279376+16097671,{J;k,M;r})G=T(547137-598895)D[v]=z r=s(r)U=T(-552193+500440)r=630525-630425 z={}D[O]=z z=W[G]y=D[O]E={[U]=y;[g]=x}C=nil G=z(n,E)z=t(517734+9080138,{O;J,K,k;M,v})J=s(J)M=s(M)v=s(v)u=nil O=s(O)k=s(k)C={}Q=nil D[l]=G D[e]=z u=b(6160214-(-611548),{l,e})K=s(K)L=W[T(-200720+148951)]D[S]=r M=T(987945+-1039696)Q=Y()r=802977+-802974 D[Q]=r r=Y()D[r]=u u=Y()k=B(13348447-(-581301),{l;e,S;u})D[u]=k k=b(1036583+5038994,{l;e;r,S;Q,u})C[M]=k w={C}end else L=-746729+16853957 V=N==K j=V end end end else if L&lt;1025639+7919299 then if L&lt;9459907-973776 then if L&lt;8109733-(-92571)then if L&lt;-1029511+8517335 then w=m L=o L=-339117+8803145 else e=T(160236-212011)C=9997317-43329 w=-535484+12183678 a=e^C L=w-a w=T(-476754+425041)a=L L=w/a w={L}L=W[T(-663431-(-611706))]end else if L&lt;8502259-230764 then o=L d=211933-211932 c=g[d]d=false x=c==d L=x and 13327491-83888 or 880568+6528096 m=x else L=6281850-92365 D[e]=w end end else if L&lt;9303766-544835 then if L&lt;258536+8339475 then L=837312+12979963 else w=D[Z[-588252+588253]]l=T(765640+-817361)r=226803+27857031658680 e=D[Z[-169949-(-169951)]]C=e(l,r)L=w[C]w={L}L=W[T(-152065+100293)]end else e=T(-672078-(-620354))C=10856944-522265 a=e^C w=-989670+7972908 L=w-a w=T(728809-780598)a=L L=w/a w={L}L=W[T(320594-372381)]end end else if L&lt;8569064-(-858510)then if L&lt;-885623+10246051 then if L&lt;-93845+9081150 then Q=not a L=Q and 15876590-(-633016)or 15696281-(-812362)w=Q else X=not K M=M+N u=M&lt;=k u=X and u X=M&gt;=k X=K and X u=X or u X=9244095-(-855020)L=u and X u=11151026-342131 L=L or u end else L=998674+15279452 C=D[Z[-697288-(-697294)]]e=C==a w=e end else if L&lt;9093779-(-382758)then if L&lt;9747272-288497 then e=D[Z[612439+-612438]]r=-48640+48642 l=-708354-(-708355)C=e(l,r)e=-844514+844515 a=C==e L=a and 11650925-(-683494)or 860702+2084450 w=a else w=T(560509-612287)a=T(174454+-226200)L=W[w]w=L(a)w={}L=W[T(649203+-700933)]end else Q=T(956884+-1008594)L=W[T(-102007+50209)]N=T(469622-521364)S=W[Q]u=D[Z[257276+-257275]]k=D[Z[-246287-(-246289)]]K=41805+9313004187043 M=k(N,K)K=28371536457108-113145 Q=u[M]w=S[Q]N=T(347996+-399731)u=D[Z[-629491+629492]]k=D[Z[-555660-(-555662)]]M=k(N,K)Q=u[M]S={w(e,Q)}w={F(S)}end end end end end else if L&lt;-951403+14363229 then if L&lt;11504100-(-377929)then if L&lt;10384300-(-475292)then if L&lt;802466+9312440 then if L&lt;93324+9777192 then if L&lt;9507231-(-86583)then u=D[Z[-865053+865054]]K=-428573+4339074978305 k=D[Z[-490170-(-490172)]]N=T(259465+-311224)M=k(N,K)Q=u[M]S=r[Q]L=S and-399233+11348702 or 13261851-(-385377)w=S else e=A[-391208-(-391210)]a=A[-394920+394921]L=D[Z[31394+-31393]]C=L L=C[e]L=L and 10435396-(-512169)or-565522+17303938 end else if L&lt;-489688+10552511 then L={}C=D[Z[816777-816768]]a=L l=C C=696814+-696813 r=C C=-793673-(-793673)e=493919-493918 S=r&lt;C L=1000526+10093979 C=e-r else P=T(361827-413561)V=W[P]P=T(-909341-(-857574))j=V[P]u=M V=j(a,u)j=D[Z[-504523+504529]]P=j()J=V+P v=J+S J=-580868-(-581124)X=v%J J=C[e]P=-249117-(-249118)S=X u=nil V=S+P j=l[V]L=654299+8466463 v=J..j C[e]=v end end else if L&lt;10152036-(-520060)then if L&lt;700836+9455294 then J=#X z=611661+-611661 v=J==z L=15985332-(-653214)else J=nil L=14054828-(-1022552)v=nil end else l=nil S=nil L=11540435-(-70482)Q=nil end end else if L&lt;51419+11041420 then if L&lt;-1012716+11960816 then if L&lt;10461199-(-483672)then L=w and-444166+9061476 or-301631+11723902 else L=12117933-507016 end else if L&lt;461064+10608057 then K=T(-545769-(-493992))k=D[Z[731353-731352]]X=8411722168463-(-890558)M=D[Z[-904141-(-904143)]]N=M(K,X)u=k[N]k=T(225625+-277370)L=-170917+13818145 Q=r[u]u=W[k]S=Q~=u w=S else w=u L=k L=u and 15683485-349768 or 12020815-(-667292)end end else if L&lt;880461+10570879 then if L&lt;-56556+11410185 then Q=not S C=C+r e=C&lt;=l e=Q and e Q=C&gt;=l Q=S and Q e=Q or e Q=-891437+3650240 L=e and Q e=15514690-943926 L=L or e else L={}Q=644723+81741212083 S=T(169326+-221055)C=D[Z[602118-602117]]l=D[Z[-385618+385620]]e=L r=l(S,Q)w=C[r]C=850373-850373 L={[w]=C}r=T(-1095675-(-1043965))C=L L=D[Z[-974565-(-974568)]]w=L(a)l=w M=4810445645720-679640 k=T(451652-503426)w=W[r]S=D[Z[475427-475426]]Q=D[Z[-760831-(-760833)]]u=Q(k,M)r=S[u]M=T(-709448+657734)L=w[r]Q=D[Z[61150+-61149]]N=-624031+11449554770546 u=D[Z[23555+-23553]]k=u(M,N)S=Q[k]r=S..l w=L(e,r)k=T(782888+-834679)r=T(660246-711956)M=-180471+28960038647204 w=W[r]S=D[Z[-440002-(-440003)]]Q=D[Z[-862081+862083]]u=Q(k,M)r=S[u]k=T(-988053+936293)L=w[r]S=D[Z[-885011+885012]]M=20944213378175-(-319897)Q=D[Z[396424-396422]]u=Q(k,M)r=S[u]w=L(e,r)L=9579259-5187 r=a end else L=W[T(481839+-533615)]w={e}end end end else if L&lt;-348157+12748020 then if L&lt;12000836-(-161252)then if L&lt;12515924-448033 then if L&lt;13078888-1040861 then v=T(-670591+618834)L=-173725+11263387 N=D[Z[71445+-71444]]J=546185+15433991243402 K=D[Z[614855-614853]]X=K(v,J)M=N[X]u=M else w=T(-435348+383564)L=W[w]k=f(578766+8363556,{})a=D[Z[-372356-(-372360)]]l=T(297354-349108)u=T(-478642+426919)C=W[l]Q=W[u]u={Q(k)}Q=702611-702609 S={F(u)}r=S[Q]l=C(r)C=T(-735299-(-683519))e=a(l,C)a={e()}w=L(F(a))a=w e=D[Z[-249553-(-249558)]]w=e L=e and 9843954-476944 or 15947204-(-330922)end else if L&lt;-682002+12753249 then L=w and 493414+4015667 or 13511+12206748 else m=D[e]L=m and-574749+8814075 or 9042248-578220 w=m end end else if L&lt;11521758-(-812433)then if L&lt;-578270+12839067 then L=W[T(836534-888275)]r=T(19277+-70987)M=-83796+28641721367405 l=W[r]S=D[Z[761805-761804]]Q=D[Z[-1036481-(-1036483)]]k=T(-244038+192237)u=Q(k,M)r=S[u]w=l[r]S=D[Z[468408+-468407]]M=35847+1729985001246 Q=D[Z[62872+-62870]]k=T(166190+-217927)u=Q(k,M)r=S[u]l={w(e,r)}w={F(l)}else C=-811487-(-811487)a=T(877966-929744)L=W[a]e=D[Z[-21348-(-21356)]]a=L(e,C)L=-121179+10173264 end else L=w and 11843044-(-212907)or-730913+4906533 end end else if L&lt;484108+12546161 then if L&lt;1027617+11828701 then if L&lt;13558035-852856 then L=837440+14496277 K=T(-683786-(-632026))X=-736816+8560567242178 k=D[Z[32222-32221]]M=D[Z[762239+-762237]]N=M(K,X)u=k[N]w=u else S=D[Z[407559-407558]]Q=D[Z[314058+-314056]]M=-808748+21974571613988 k=T(-242054-(-190258))u=Q(k,M)w=S[u]L=r[w]r=L L=8894536-(-679536)end else C=261217-261008 e=D[Z[-712221+712223]]a=e*C e=944180+28073891564251 w=a+e a=35184371254068-(-834764)L=w%a e=759872+-759871 D[Z[-778952+778954]]=L a=D[Z[484298-484295]]w=a~=e L=-119225+138339 end else if L&lt;-113444+13462111 then if L&lt;12753147-(-422097)then P=D[Z[-427769+427770]]v=K G=T(170518+-222317)z=D[Z[216675+-216673]]n=5556595781341-(-1039166)O=z(G,n)V=P[O]j=r[V]V=D[Z[58114-58111]]L=j&gt;=V L=L and 9629482-(-1022613)or 13948194-(-750232)else d=-32500+32502 L=767928+6640736 c=g[d]d=D[y]x=c==d m=x end else S=D[r]L=405722+13466001 w=S end end end end else if L&lt;259029+15289084 then if L&lt;-1011955+15568638 then if L&lt;-997656+14844075 then if L&lt;-389660+14135720 then if L&lt;12916274-(-732575)then L=w and 12484367-(-363118)or-289714+5177605 else L=C and 852071+4128526 or 253096+11817404 w=C end else if L&lt;146284+13620273 then z=T(264638+-316404)L=W[z]z=T(-740282+688565)W[z]=L L=9535764-945526 else L=true L=L and 15675401-(-360206)or-743353+15942969 end end else if L&lt;-71103+14207320 then if L&lt;-773400+14671769 then u=T(-44784+-6926)K=T(365844+-417554)S=w Q=T(-845681-(-793943))w=W[Q]Q=T(-916086+864334)L=w[Q]Q=Y()D[Q]=L w=W[u]u=T(451099+-502861)L=w[u]u=L M=L N=W[K]k=N L=N and-463043+17090827 or 2531046-(-780314)else N=T(-868160-(-816444))a=A[953050+-953049]u=D[Z[-726162+726163]]K=11309900260209-184031 r=A[-869665+869670]C=A[-521166+521169]S=A[-900799-(-900805)]e=A[462743+-462741]l=A[-147865+147869]k=D[Z[-665061-(-665063)]]M=k(N,K)Q=u[M]w=r[Q]Q=D[Z[-253657+253660]]L=w&gt;=Q L=L and 870227+1507599 or 9111376-159111 end else L=108618+1241075 v=J n=v X[v]=n v=nil end end else if L&lt;16248425-934946 then if L&lt;143688+14709098 then if L&lt;-612848+15271384 then L=D[Z[865980+-865970]]e=D[Z[772187-772176]]a[L]=e L=D[Z[-868788+868800]]e={L(a)}L=W[T(469315+-521105)]w={F(e)}else P=881163-881162 L=D[Z[-639047-(-639051)]]V=e+P v=nil j=L(J,V,C,l,r,S)L=275844-194646 J=nil end else if L&lt;-1022454+16219214 then k=nil r=nil C=nil u=nil S=nil M=nil a=nil L=W[T(-390635+338840)]e=nil Q=nil l=nil w={}else L=W[T(658942+-710657)]w={}end end else if L&lt;-559173+16067592 then if L&lt;15364244-(-20252)then u=w M=D[Z[488895-488894]]v=843732+8328140336978 P=851683+1186534671173 N=D[Z[-674229-(-674231)]]X=T(-537606+485820)K=N(X,v)k=M[K]j=T(-752694-(-700954))X=D[Z[-194983-(-194984)]]v=D[Z[861773+-861771]]V=8913102268993-973323 J=v(j,V)G=-612483+15115028001793 K=X[J]V=T(927000+-978727)N=a[K]v=D[Z[-615879+615880]]J=D[Z[-509700+509702]]j=J(V,P)X=v[j]V=D[Z[-311650+311651]]P=D[Z[-358753-(-358755)]]O=T(826166+-877898)z=P(O,G)G=T(-1078757-(-1026972))j=V[z]J=a[j]n=-722627+23545735164311 P=D[Z[294973+-294972]]z=D[Z[1027577+-1027575]]O=z(G,n)V=P[O]j=V..u v=J..j K=X..v M=N..K w=k..M L=Q..w J=761342+10644645754206 v=T(-411178+359407)k=L M=T(-213566+161856)w=W[M]N=D[Z[971147+-971146]]K=D[Z[172706-172704]]X=K(v,J)M=N[X]L=w[M]j=24021587582187-(-937670)w=L(l,k)X=14436733307937-913887 J=T(-71256-(-19547))w=D[Z[318779-318778]]M=D[Z[503998+-503996]]K=T(522120+-573853)N=M(K,X)L=w[N]K=D[Z[-201759-(-201760)]]X=D[Z[9107-9105]]v=X(J,j)N=K[v]M=r[N]N=-556414+556415 w=M+N N=T(537269-588979)j=-645489+5848324236308 r[L]=w L=T(-102417-(-50625))L=a[L]L=L(a)J=T(631779+-683497)M=L w=W[N]K=D[Z[-812890-(-812891)]]X=D[Z[-759549+759551]]v=X(J,j)N=K[v]L=w[N]N=f(4370726-1015661,{Z[-25492-(-25493)];Z[943729-943727]})w=L(M,N)w=T(885943-937692)L=W[w]X={L(M)}L=-469294-(-550492)N=X[643660+-643658]K=X[160220-160217]w=X[715414+-715413]X=w else V=D[e]L=V and 723318+6186256 or-973976+17081204 j=V end else w=Q L=u L=183331+16326275 end end end else if L&lt;15313950-(-1037064)then if L&lt;-595323+16727703 then if L&lt;926339+15006441 then if L&lt;15295282-(-440876)then a=T(481333-533050)w=T(901918-953684)L=W[w]w=W[a]a=T(138989-190706)W[a]=L a=T(-646187-(-594421))W[a]=w a=D[Z[33955+-33954]]L=246582+4009616 e=a()else L=H(1056654-835948,{l})V={L()}w={F(V)}L=W[T(46186-97967)]end else if L&lt;691866+15357134 then z=911217-911211 L=D[Q]P=-287565+287566 V=L(P,z)L=T(605622-657388)z=T(-125444+73678)W[L]=V P=W[z]z=-1000504-(-1000506)L=P&gt;z L=L and-34049-(-644531)or-490208+14239964 else D[e]=j L=D[e]L=L and-546198+2635012 or 2136941-910078 end end else if L&lt;-799973+17102486 then if L&lt;16691043-518137 then L=W[T(-826377+774634)]w={}else D[Z[-650931-(-650936)]]=w L=963181+3212439 a=nil end else O=not z j=j+P w=j&lt;=V w=O and w O=j&gt;=V O=z and O w=O or w O=2442689-(-854102)L=w and O w=-420245+15901862 L=L or w end end else if L&lt;766644+15743861 then if L&lt;16272771-(-235975)then if L&lt;-1040702+17535290 then a=D[Z[928430-928429]]w=#a a=-52425-(-52425)L=w==a L=L and 544680+12366392 or 531142+900202 else N=T(342141+-393886)u=L M=W[N]k=a==M L=k and 14930295-(-611855)or 745049+3925052 Q=k end else L=w and 4768675-1037069 or-1042211+4412862 end else if L&lt;266223+16372658 then if L&lt;16987780-351624 then X=T(76914+-128624)L=830360+2481000 K=W[X]X=T(598356+-650063)N=K[X]k=N else L=-1045460+4616162 n=-823526-(-823527)J=188237-188236 z=#X v=C(J,z)J=S(X,v)v=nil z=D[K]G=J-n O=Q(G)z[J]=O J=nil end else L={}D[Z[303252+-303250]]=L w=D[Z[530845-530842]]l=w r=606125+35184371482707 w=e%r Q=-983614-(-983869)u=T(605591-657325)D[Z[373812-373808]]=w S=e%Q Q=-1024030-(-1024032)r=S+Q D[Z[283564+-283559]]=r Q=W[u]u=T(-334987+283190)S=Q[u]Q=S(a)L=622125+8498637 M=812379-812378 S=T(780104-831864)C[e]=S u=-628926-(-628927)k=Q N=M S=11354-11248 M=342916+-342916 K=N&lt;M M=u-N end end end end end end end L=#I return F(w)end,function(W)a[W]=a[W]-(621368-621367)if a[W]==-795468-(-795468)then a[W],D[W]=nil,nil end end,function(W)local T,L=-68726+68727,W[-445597+445598]while L do a[L],T=a[L]-(777564-777563),(-1913+1914)+T if a[L]==21357+-21357 then a[L],D[L]=nil,nil end L=W[T]end end,{},function(W,T)local F=C(T)local A=function(A,Z)return L(W,{A;Z},T,F)end return A end,-682327-(-682327),function(W,T)local F=C(T)local A=function(...)return L(W,{...},T,F)end return A end,function(W)for T=93001-93000,#W,-493618-(-493619)do a[W[T]]=a[W[T]]+(-947946-(-947947))end if A then local L=A(true)local F=I(L)F[T(-199807+148054)],F[T(464247+-516017)],F[T(55288+-107082)]=W,l,function()return-2202797-348990 end return L else return Z({},{[T(-8823-42947)]=l,[T(-355870+304117)]=W;[T(-897973-(-846179))]=function()return-3506287-(-954500)end})end end,function()e=e+(913740-913739)a[e]=-230673-(-230674)return e end,{},function(W,T)local F=C(T)local A=function(A,Z,I,R,w,D,a,Y,e,C,l)return L(W,{A,Z;I,R;w,D,a,Y,e;C,l},T,F)end return A end,function(W,T)local F=C(T)local A=function(A,Z,I,R,w)return L(W,{A;Z,I;R;w},T,F)end return A end,function(W,T)local F=C(T)local A=function(A,Z,I)return L(W,{A,Z,I},T,F)end return A end,function(W,T)local F=C(T)local A=function()return L(W,{},T,F)end return A end return(r(760379-(-887831),{}))(F(w))end)(getfenv and getfenv()or _ENV,unpack or table[T(163432-215139)],newproxy,setmetatable,getmetatable,select,{...})end)(...)</ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="StringValue" referent="RBX7BA7CE049ED044A38DBA5A519E92ED18">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<string name="Name">VersionTitle</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<string name="Value">Vibe Coder BETA v0.3</string>
			</Properties>
		</Item>
		<Item class="Script" referent="RBXB5A6E1D79ED44F6899AFAEACDB7D9135">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Plugin</string>
				<token name="RunContext">0</token>
				<string name="ScriptGuid">{1EDBB9CA-B40B-485B-85C3-3A85879D155A}</string>
				<ProtectedString name="Source">--[[ v1.0.0 https://wearedevs.net/obfuscator ]] return(function(...)local B={&quot;\101\051\111\057\101\074\081\080\102\052\097\061&quot;;&quot;\100\118\089\120\087\083\043\112&quot;;&quot;\068\067\083\083\118\074\089\076\086\070\081\068\071\052\079\098&quot;;&quot;\054\075\048\077\050\051\087\049&quot;,&quot;\117\087\043\073\109\111\082\107\121\083\107\051\089\078\118\100\077\082\101\111&quot;,&quot;\115\110\080\074\048\067\089\120\101\110\110\110\102\048\078\098&quot;;&quot;\077\121\086\066&quot;;&quot;\066\083\076\104\103\081\072\102\078\065\051\048\077\108\120\082\109\065\074\048&quot;;&quot;\101\055\112\105\109\055\086\117&quot;,&quot;\100\075\067\080\066\122\105\100\115\098\122\075\073\052\108\103\086\115\056\104\089\115\099\066\080\106\089\079\071\051\055\077\076\050\061\061&quot;,&quot;\071\055\110\113\055\089\089\108\109\100\101\071\107\051\081\056&quot;,&quot;\107\116\105\066\055\101\110\101&quot;;&quot;\079\107\115\119\084\049\055\098\088\077\055\115\071\066\066\119\086\120\116\090\116\109\043\106&quot;;&quot;\107\108\089\090\047\122\066\067\097\100\073\065\056\084\110\073\086\118\086\074&quot;,&quot;\086\108\067\098\071\055\073\085\071\051\110\098\107\052\084\066\077\047\061\061&quot;;&quot;\097\100\078\098\056\055\112\122&quot;;&quot;\097\052\110\106\071\051\111\120&quot;;&quot;\071\043\084\073\101\051\086\069&quot;;&quot;\078\043\048\104\118\043\048\104\101\051\089\106\071\105\061\061&quot;;&quot;\053\118\113\089\105\107\043\097\104\113\071\084&quot;;&quot;\047\100\081\089\109\121\078\089\047\122\048\104\101\051\111\106&quot;;&quot;\121\084\111\122\109\105\061\061&quot;,&quot;\102\055\110\104\056\088\061\061&quot;;&quot;\077\104\071\075\097\076\078\057\107\055\084\107\055\051\112\066\047\050\061\061&quot;,&quot;\048\118\107\104\077\043\073\048\099\052\073\113\086\055\047\105&quot;;&quot;\097\074\081\080\102\122\047\061&quot;;&quot;\043\075\051\069\043\048\071\102\090\071\099\073\114\118\102\048\107\072\074\076\079\099\048\048\106\074\043\074\085\050\061\061&quot;;&quot;\121\084\111\120\071\121\078\073\101\051\110\087\102\051\118\061&quot;;&quot;\101\051\110\087\102\051\118\061&quot;,&quot;\109\043\111\098\102\100\048\104\056\055\112\089&quot;,&quot;\097\051\079\084\071\043\089\106\121\043\081\084\101\074\078\065\102\050\061\061&quot;,&quot;\047\100\101\113\086\118\048\076&quot;;&quot;\071\052\079\065\102\100\053\061&quot;,&quot;\078\048\073\080\078\118\048\066\102\122\110\076\086\052\080\052\107\047\061\061&quot;,&quot;\099\121\049\065\076\108\076\118&quot;;&quot;\097\122\089\052\097\074\069\098\077\121\101\071\109\043\110\080\077\047\061\061&quot;,&quot;\106\056\100\076\103\102\117\103\104\088\061\061&quot;;&quot;\071\121\081\098\102\100\053\061&quot;,&quot;\043\100\110\106\088\119\071\048&quot;;&quot;\078\043\048\104\118\043\048\098\101\052\089\070\071\047\061\061&quot;;&quot;\109\043\073\073\097\050\061\061&quot;,&quot;\043\083\112\120\069\047\119\099\088\073\114\049\073\056\055\110&quot;,&quot;\054\105\083\116\056\066\116\054\080\050\089\043\069\089\071\099\087\087\115\090\056\120\108\104\050\066\119\110\074\115\068\048\087\051\121\108\047\071\056\075\074\072\072\114\087\065\070\057\099\088\061\061&quot;;&quot;\099\107\109\118\098\079\080\083\050\076\114\097\081\090\122\108\103\048\085\113\079\078\090\102\056\113\105\048\113\098\082\080\119\113\089\057\048\113\120\084\118\099\071\071\089\084\083\118\120\121\072\084\104\072\099\051\084\065\107\109\102\048\052\043\114\071\122\055\099\068\052\112\076\119\080\081\111\075\083\106\051\068\074\068\106\112\085\061&quot;,&quot;\102\051\048\106&quot;,&quot;\115\050\061\061&quot;,&quot;\053\104\057\047\075\110\115\112\090\067\102\048\107\067\054\082\099\113\099\103\083\089\116\104\077\075\066\103\047\067\097\061&quot;,&quot;\108\118\089\071\072\097\056\090\082\047\061\061&quot;,&quot;\047\043\111\106\102\052\048\070\101\088\061\061&quot;;&quot;\071\043\110\120\071\047\061\061&quot;,&quot;\121\084\111\080\102\052\078\089\099\088\061\061&quot;,&quot;\081\113\085\103\101\105\061\061&quot;;&quot;\109\043\111\106\109\043\110\104&quot;,&quot;\101\051\110\057\056\105\061\061&quot;;&quot;\101\051\111\106\101\055\084\087\071\121\053\061&quot;,&quot;\048\043\111\078\118\043\084\066\097\055\079\077\107\051\084\121\107\051\053\061&quot;,&quot;\103\119\049\087\068\065\097\084\077\106\081\053\100\048\077\111\081\088\061\061&quot;;&quot;\043\084\085\054\066\076\101\097\081\090\104\084\069\088\053\111&quot;;&quot;\103\085\049\068\088\052\051\068\099\098\071\102&quot;,&quot;\048\078\102\106\100\043\090\105&quot;;&quot;\101\043\110\098\102\050\061\061&quot;;&quot;\075\080\105\090\111\052\103\119\049\055\052\121\118\074\081\084\120\119\098\109\087\076\084\099\048\072\087\054\055\084\104\061&quot;;&quot;\078\043\048\104&quot;,&quot;\107\118\109\098\055\067\081\086\047\043\080\074\109\104\107\105&quot;,&quot;\097\122\089\080\102\100\048\069\115\108\071\067\077\121\101\115\078\068\107\061&quot;;&quot;\071\100\086\084\109\050\061\061&quot;,&quot;\120\115\043\099\065\117\112\076&quot;,&quot;\087\113\079\083\051\076\067\066&quot;,&quot;\108\110\054\102\070\088\061\061&quot;,&quot;\081\069\087\110\049\090\050\061&quot;,&quot;\097\043\048\104\102\055\048\104\109\121\078\073\109\052\079\089&quot;;&quot;\109\122\089\104\071\047\061\061&quot;;&quot;\043\074\050\116\119\051\073\085\088\051\117\097\109\088\061\061&quot;;&quot;\115\066\087\121\050\102\087\077\066\085\057\080\111\078\098\065\110\080\106\078\067\098\105\077&quot;;&quot;\122\077\099\112\052\050\068\098\107\050\061\061&quot;,&quot;\057\097\087\102\075\072\079\088\119\072\122\116\066\113\085\061&quot;,&quot;\109\076\111\075\090\049\090\076\057\101\081\050\118\105\061\061&quot;,&quot;\118\051\112\074\118\118\071\057\068\122\078\109\107\043\076\112\071\048\053\061&quot;;&quot;&quot;,&quot;\102\108\053\061&quot;;&quot;\116\078\052\077\103\049\073\084\078\081\073\108\086\087\043\116\052\079\073\102\120\082\088\048&quot;;&quot;\084\074\049\098\106\101\099\114\115\072\097\105\049\103\079\056\117\085\118\103\109\108\118\119\047\102\075\073\119\108\067\056\108\072\084\104\120\105\061\061&quot;,&quot;\047\068\086\106\115\110\107\084\101\055\071\080\118\122\071\074\056\047\061\061&quot;;&quot;\087\098\083\087\087\055\048\057\072\110\102\118&quot;,&quot;\106\082\049\070\117\066\078\054\079\107\118\107\100\090\103\087\082\069\105\054&quot;,&quot;\121\084\111\085\071\055\083\061&quot;;&quot;\043\118\106\118\050\102\080\122\048\103\107\052\066\101\055\049\108\073\119\075\099\075\107\102\078\100\118\081\121\078\083\118\115\097\106\075\083\050\090\098\097\084\054\053\080\043\052\048\072\105\112\087\098\050\103\070\120\066\107\052\109\065\054\120\081\054\105\052\122\110\098\069\048\076\109\103\072\051\106\102\054\097\099\103\054\073\098\111\082\110\067\119\083\071\097\043\099\077\073\068\119\121\052\080\079\065\105\061&quot;;&quot;\108\068\077\114\106\047\081\052\067\055\054\083\104\083\054\109\085\074\080\071\101\086\121\088\098\105\074\054\111\106\114\049\078\066\121\107&quot;;&quot;\097\043\086\098\056\121\066\104&quot;;&quot;\097\057\101\084\101\121\101\051\099\088\061\061&quot;;&quot;\098\074\078\084\087\110\052\086\119\112\082\115\047\076\082\098\088\047\109\098\110\090\107\087\106\079\070\065\076\052\089\066&quot;,&quot;\090\107\049\050\048\098\052\050\047\054\090\057\112\098\089\120\055\078\088\061&quot;;&quot;\048\051\110\120\097\051\048\098\053\076\078\089\101\051\048\070\101\051\048\067\053\047\061\061&quot;,&quot;\075\115\053\053\118\115\051\116\048\056\098\084\089\119\071\114\111\117\099\099\098\107\066\071\069\118\087\054\089\047\061\061&quot;;&quot;\097\052\048\079\101\055\089\098\071\047\061\061&quot;;&quot;\097\051\086\073\102\051\105\061&quot;,&quot;\084\071\076\089\075\081\055\049&quot;;&quot;\086\084\101\052\048\052\089\098\118\070\073\084\118\074\089\069\077\050\061\061&quot;,&quot;\067\080\082\066\067\047\048\099\115\104\090\113\102\102\056\056\076\047\076\082\088\102\115\109\098\080\116\120&quot;,&quot;\120\108\113\077\089\088\061\061&quot;;&quot;\048\118\071\119\048\104\084\119\118\076\084\075\055\051\105\104&quot;;&quot;\084\057\089\073\047\073\108\076\082\107\120\121\055\117\049\121\084\053\075\056\075\120\121\073\075\090\074\079\066\085\088\120\075\115\086\120\043\088\061\061&quot;,&quot;\097\052\048\120\102\100\071\089&quot;;&quot;\118\089\102\116\066\088\061\061&quot;,&quot;\068\120\108\083\111\102\049\115\081\100\119\074\073\110\083\077\120\079\102\078\101\081\055\113&quot;,&quot;\054\105\101\066\121\087\103\050\111\088\061\061&quot;,&quot;\109\055\083\104\086\108\088\061&quot;,&quot;\047\100\081\089\109\121\078\089\048\051\111\065\102\051\081\073\097\050\061\061&quot;,&quot;\111\101\119\118\071\080\086\112\122\078\083\117\073\043\051\104\118\089\107\061&quot;;&quot;\097\051\079\084\071\043\089\106&quot;,&quot;\102\108\076\061&quot;,&quot;\115\087\050\089\071\075\069\080\115\050\061\061&quot;;&quot;\080\067\086\117\112\113\075\102\049\065\054\114\057\098\043\119\072\115\114\043\114\049\121\070\100\088\083\061&quot;;&quot;\083\102\079\102\088\109\067\115\051\108\069\047\067\083\065\057\108\052\053\055\117\105\048\108\057\110\073\051\083\117\070\072\078\085\119\057\082\047\061\061&quot;;&quot;\112\052\066\090\122\086\122\102\112\069\089\078\077\119\072\107\081\079\122\072&quot;;&quot;\065\054\056\070\111\073\105\118\115\086\077\111\071\066\118\081\106\077\072\113\082\105\061\061&quot;}for u,s in ipairs({{919643-919642,945832+-945716},{525210-525209,-360314-(-360326)};{330754-330741;571145+-571029}})do while s[-1035230+1035231]&lt;s[24536+-24534]do B[s[296371-296370]],B[s[-746155+746157]],s[157361-157360],s[583123+-583121]=B[s[780134+-780132]],B[s[-928677-(-928678)]],s[448603-448602]+(-416648-(-416649)),s[562867+-562865]-(516304+-516303)end end local function u(u)return B[u+(-532718-(-553041))]end do local u=B local s=string.len local h=math.floor local m=table.concat local w={Q=622989-622980;R=-470766-(-470824);t=456244+-456185;C=-684957-(-684993);W=-622714+622748,[&quot;\050&quot;]=-382810+382842;G=450860+-450835,B=348957-348956;g=521924-521862;Y=188344-188307;V=-449766+449779;u=716489+-716446;H=472055+-472044;p=648396-648339;e=93302+-93273,F=991998+-991963,z=-885111-(-885150);K=-459011-(-459013),S=1036828-1036772;A=-266704-(-266751);X=796681-796681;[&quot;\052&quot;]=898740+-898702,Z=250080+-250038;[&quot;\049&quot;]=945235+-945172,[&quot;\055&quot;]=-213004+213026;J=435189+-435182;o=382266-382205;y=-448296-(-448319),L=504263-504259;i=-82066-(-82114);b=-997396-(-997446),f=-497041-(-497068),O=194015+-193966,E=375264+-375224,[&quot;\057&quot;]=-20215+20266,a=-371316+371344;v=-100093-(-100113);I=3663-3630;c=312086+-312056,[&quot;\043&quot;]=896065-896011,N=-30988-(-31005),d=-982946+983001;[&quot;\056&quot;]=52281+-52255;m=937302-937278;D=-174784+174803;w=85244-85234,j=123145+-123099;U=173364-173320;h=760398-760346,[&quot;\047&quot;]=987521-987505;[&quot;\048&quot;]=-862452+862473;r=463841-463810,n=249500+-249495,s=707348+-707334,T=255770+-255717;l=115926-115923;[&quot;\051&quot;]=193469+-193463;q=-541287-(-541302);[&quot;\053&quot;]=1024397+-1024389,M=486775+-486757;P=442148-442107,k=25400-25388;[&quot;\054&quot;]=963258-963198;x=49208+-49163}local x=string.sub local l=string.char local Y=table.insert local H=type for B=541320-541319,#u,532550-532549 do local V=u[B]if H(V)==&quot;\115\116\114\105\110\103&quot;then local H=s(V)local S={}local k=996584+-996583 local b=1008200-1008200 local r=180598+-180598 while k&lt;=H do local B=x(V,k,k)local u=w[B]if u then b=b+u*(-742774+742838)^((867960+-867957)-r)r=r+(274735+-274734)if r==269023-269019 then r=550634-550634 local B=h(b/(-1018162+1083698))local u=h((b%(579573-514037))/(736579-736323))local s=b%(-853460-(-853716))Y(S,l(B,u,s))b=349864-349864 end elseif B==&quot;\061&quot;then Y(S,l(h(b/(513226+-447690))))if k&gt;=H or x(V,k+(-820148+820149),k+(-2154-(-2155)))~=&quot;\061&quot;then Y(S,l(h((b%(-422074-(-487610)))/(-1000698+1000954))))end break end k=k+(517600-517599)end u[B]=m(S)end end end return(function(B,h,m,w,x,l,Y,z,e,b,t,U,D,K,S,H,E,V,s,k,R,r)k,S,E,K,D,U,e,s,r,H,b,t,R,V,z=-9593-(-9593),function()k=(471985+-471984)+k V[k]=-765035+765036 return k end,function(B,u)local h=b(u)local m=function()return s(B,{},u,h)end return m end,function(B,u)local h=b(u)local m=function(m,w,x)return s(B,{m;w,x},u,h)end return m end,function(B,u)local h=b(u)local m=function(m,w)return s(B,{m,w},u,h)end return m end,function(B,u)local h=b(u)local m=function(m,w,x,l,Y)return s(B,{m;w,x;l;Y},u,h)end return m end,function(B,u)local h=b(u)local m=function(m,w,x,l)return s(B,{m;w;x;l},u,h)end return m end,function(s,m,w,x)local q,wU,T,Y,sU,X,c,i,BU,M,n,mU,J,b,L,W,uU,z,P,p,k,I,v,a,r,N,Z,o,V,hU,F,O,C,y,Q,g,d,G,f,xU,j,A while s do if s&lt;-1032874+9876225 then if s&lt;-75659+4244851 then if s&lt;355146+1018499 then if s&lt;-699211+1183163 then if s&lt;-139029+288410 then if s&lt;315366+-255529 then if s&lt;650572+-612781 then d=S()G=-618052-(-618054)H[d]=P i=u(96953-117241)F=711123+-710868 Y=B[i]i=u(-1027819+1007525)s=Y[i]q=210388-210288 i=690907+-690906 Y=s(i,q)i=S()Z=-601670-(-601671)H[i]=Y q=213857+-213857 s=H[y]Y=s(q,F)F=693966-693965 q=S()H[q]=Y s=H[y]A=u(184843+-205153)T=H[i]Y=s(F,T)F=S()H[F]=Y O=1007585+-997585 Y=H[y]T=Y(Z,G)Y=791469+-791468 s=T==Y Y=u(-37733-(-17418))G=u(-550706-(-530441))T=S()H[T]=s J=-232243-(-232243)c=B[A]j=H[y]v={j(J,O)}s=u(-142422-(-122177))A=c(h(v))c=u(105606-125871)s=X[s]g=A..c Z=G..g G=u(692677+-712892)s=s(X,Y,Z)Z=S()H[Z]=s g=U(542636+15241255,{y,d,C;b;k,a;T,Z,i;F,q;p})Y=B[G]G={Y(g)}s={h(G)}G=s s=H[T]s=s and 4626758-(-974414)or-953260+9302190 else G=u(302085+-322368)a=S()X={}O=u(288933-309147)A=nil o=nil q={}H[a]=X X=S()d=S()N=D(-436987+7335339,{a;p,C;z})T=u(710182+-730442)i=u(464054+-484294)H[X]=N N={}b=nil H[d]=N N=B[i]J=1027711+12094466549632 z=R(z)mU=u(-799641-(-779429))Z=H[d]F={[T]=Z;[G]=A}I=nil v=35069912000717-190723 W=nil i=N(q,F)N=K(11669655-337130,{d,a,n;p;C,X})X=R(X)n=R(n)p=R(p)X=-362619+12511954493245 I=u(-967968-(-947661))z=u(181790+-202075)a=R(a)L=nil H[r]=i L=10692662465024-1048205 d=R(d)C=R(C)y=nil H[k]=N b=B[z]y=H[r]C=u(-569383+549159)W=H[k]p=W(C,L)o=y[p]z=b(o)a=7330902222768-(-910757)p=u(-540785+520563)z=u(919779+-939995)b=B[z]W=B[p]uU=858850+11427811129831 C=H[r]L=H[k]n=L(I,X)p=C[n]y=W[p]N=u(-515459-(-495150))p=H[r]I=-834994+5900787320941 C=H[k]X=u(721036+-741279)n=u(183633+-203902)L=C(n,I)W=p[L]o=y[W]z=b(o)b=S()C=u(100517-120739)o=u(88399+-108615)H[b]=z z=B[o]p=B[C]L=H[r]n=H[k]I=n(X,a)C=L[I]X=3702948303840-216356 W=p[C]C=H[r]L=H[k]j=u(76345-96646)I=u(114262-134489)n=L(I,X)p=C[n]y=W[p]o=z(y)d=-479689+25160998207373 n=u(471721-491958)y=u(-586008-(-565747))z=B[y]I=319266+19075219686288 T=16666313290673-(-191135)p=H[r]C=H[k]L=C(n,I)y=u(-224335-(-204064))y=z[y]BU=u(824960+-845214)W=p[L]y=y(z,W)q=14110882318979-(-1036071)W=u(-486185+465969)n=u(-508649-(-488427))z=B[W]L=B[n]I=H[r]X=H[k]a=X(N,d)n=I[a]C=L[n]N=-416728+30705250718642 a=u(715299-735525)n=H[r]I=H[k]d=u(614054+-634298)X=I(a,N)a=u(1024457-1044770)L=n[X]p=C[L]I=u(-967582+947276)W=z(p)C=H[r]X=29095078519855-126787 L=H[k]N=209806+3351254667914 n=L(I,X)p=C[n]n=H[r]I=H[k]X=I(a,N)L=n[X]n=nil X=H[r]a=H[k]N=a(d,q)C=nil F=u(308110+-328329)I=X[N]N=H[r]d=H[k]X=nil q=d(F,T)d=s a=N[q]F=u(-762517-(-742200))q=B[F]Z=H[r]F=u(131408+-151700)G=H[k]F=q[F]A=G(j,v)G=166377+27419991877623 T=Z[A]F=F(q,T)A=u(-236153+215869)v=u(-323985-(-303750))q=false N=F or q Z=u(1007092-1027406)wU=-31348+14977587221938 Q=21487122672861-(-752184)q=H[r]F=H[k]T=F(Z,G)j=6950677915430-(-484734)d=q[T]T=H[r]Z=H[k]G=Z(A,j)F=T[G]q=nil T=-978087-(-978087)G=H[r]A=H[k]j=A(v,J)Z=G[j]j=H[r]G=false v=H[k]J=v(O,Q)v=u(-118586+98269)A=j[J]j=B[v]J=H[r]O=H[k]Q=O(BU,uU)BU=u(508435-528752)v=J[Q]O=s Q=B[BU]sU=H[r]hU=H[k]BU=u(206484-226776)xU=hU(mU,wU)BU=Q[BU]uU=sU[xU]BU=BU(Q,uU)s=BU and 10127999-(-220822)or 472437+3107077 J=BU end else H[k]=g v=H[F]J=-122277-(-122278)j=v+J A=G[j]c=L+A A=-360262+360518 s=c%A L=s j=H[q]s=-885000+10661845 A=n+j j=-1025128+1025384 c=A%j n=c end else if s&lt;224560-(-194008)then if s&lt;1015652-694771 then W=C f=u(203789+-224084)M=B[f]f=u(-64953+44714)P=M[f]M=P(V,W)P=H[w[122303-122297]]f=P()a=M+f X=a+o a=733446-733190 f=403711-403710 I=X%a a=b[k]s=10255296-180198 o=I W=nil M=o+f P=r[M]X=a..P b[k]=X else Y={}s=B[u(109178+-129425)]end else d=u(226914-247230)f=u(635904-656214)s=B[f]N=B[d]f=s(N)s=u(890176-910407)B[s]=f s=233757+4317201 end end else if s&lt;337805+597083 then if s&lt;-150991-(-770848)then if s&lt;1432960-868963 then s=-793396+16565687 else o=nil s=2001395-(-1041539)r=nil y=nil end else o=H[z]Y=o s=11697670-444603 end else if s&lt;1002722-(-217878)then if s&lt;571540-(-505070)then Y=u(632639-652854)s=B[Y]k=H[w[191179-191176]]b={s(k)}Y=b[309532+-309531]V=b[416108+-416106]k=Y s=not k s=s and 5196278-(-922826)or-548873+10010696 else z=u(572824-593083)V=u(-532459-(-512202))o=384147908267-1009145 Y=B[V]k=H[w[559019+-559018]]b=H[w[-81260-(-81262)]]r=b(z,o)V=k[r]s=Y[V]Y=s()s=Y and-450666+1500781 or 11026106-963361 end else N=u(-695120-(-674889))s=B[N]N=u(447194+-467510)B[N]=s s=-365373+4916331 end end end else if s&lt;2558661-(-484951)then if s&lt;1929297-(-143067)then if s&lt;1388574-(-261140)then if s&lt;884607-(-574211)then s=B[u(-376788+356488)]Y={}else C=u(-825180+804878)p=B[C]s=-552271+4346766 Y=p end else C=2231640840306-873571 p=u(-1031230+1010979)s=-824725+3876706 r=H[w[642916+-642915]]o=H[w[437874-437872]]y=H[w[-945197-(-945200)]]W=y(p,C)z=o[W]p=8610923632504-(-882737)W=u(-418482-(-398161))b=r[z]z=H[w[-375919+375921]]o=H[w[718421+-718418]]y=o(W,p)r=z[y]k=b[r]V=not k Y=V end else if s&lt;2100670-(-853311)then if s&lt;3062584-177445 then s=Y and 6663741-272177 or 2955319-(-711752)else N=637884+-637878 f=985582+-985581 s=H[y]M=s(f,N)s=u(583801+-604032)N=u(-381895-(-361664))B[s]=M f=B[N]N=-748201+748203 s=f&gt;N s=s and-247592+666869 or 1020350+339586 end else s=B[u(458374-478587)]Y={k}end end else if s&lt;-358905+4028663 then if s&lt;3883440-267753 then if s&lt;4084274-654138 then s=Y and 99166+1339265 or 46883+7861687 else BU=H[r]s=982813+9366008 xU=314849+23118650154028 uU=H[k]hU=u(-729551-(-709240))sU=uU(hU,xU)Q=BU[sU]J=Q end else y=21300482506479-(-26575)s=H[w[-165244+165245]]b=H[w[-756316+756318]]o=u(-516903-(-496600))r=H[w[-40709+40712]]z=r(o,y)Y=b[z]b=nil s[Y]=b s=-344634+10717059 end else if s&lt;422632+3496246 then if s&lt;3748519-(-150381)then L=668735+-668670 p=S()C=503484+-503481 H[p]=Y s=H[y]X=K(651947+10213267,{})f=u(-65067-(-44757))Y=s(C,L)I=u(56699-76914)s=116652-116652 C=S()L=s s=-518144-(-518144)n=s H[C]=Y Y=B[I]I={Y(X)}s={h(I)}I=s Y=-672957+672959 s=I[Y]X=s Y=u(914329+-934585)s=B[Y]a=H[b]M=B[f]f=M(X)M=u(-766195+745880)P=a(f,M)a={P()}Y=s(h(a))a=S()H[a]=Y P=H[C]Y=-546633-(-546634)s=1006927+13730223 M=P P=-332542+332543 f=P P=-842232-(-842232)N=f&lt;P P=Y-f else s=Y and 363637+6241667 or 252080+8701299 end else s=B[u(627651+-647959)]Y={}end end end end else if s&lt;7747864-717103 then if s&lt;-750087+6715951 then if s&lt;-27283+5041502 then if s&lt;-181849+4699850 then if s&lt;5215046-973819 then V=nil H[w[396424-396419]]=Y s=8320762-(-632617)else s=-455723+7072744 end else s=7131353-514332 end else if s&lt;6040690-346372 then if s&lt;136764+5478745 then g=H[k]Y=g s=g and-527723+16117133 or 10520349-(-660834)else s=311112+782926 end else z=u(567525+-587801)o=573350+15283043441702 Y=H[w[-520253-(-520254)]]k=H[w[-216307-(-216309)]]b=H[w[170452+-170449]]r=b(z,o)V=k[r]s=Y[V]z=19433100080100-(-962421)V=H[w[1022796+-1022794]]k=H[w[478988+-478985]]r=u(-741752-(-721489))C=8320934323942-661444 p=u(-64650+44351)b=k(r,z)Y=V[b]r=H[w[-954546-(-954547)]]o=H[w[-409006-(-409008)]]y=H[w[264371-264368]]W=y(p,C)z=o[W]b=r[z]W=u(29550-49786)z=H[w[685317+-685315]]p=5259668986279-(-651242)o=H[w[-316514+316517]]y=o(W,p)r=z[y]k=b[r]V=not k s[Y]=V s=B[u(22473-42759)]Y={}end end else if s&lt;711295+5904760 then if s&lt;900113+5600890 then if s&lt;-220451+6386684 then Y=u(-579019+558769)s=B[Y]r=H[w[225103+-225102]]z=H[w[732068-732066]]y=u(-546569+526301)W=-1038621+30721885376766 o=z(y,W)b=r[o]z=H[w[-568651-(-568652)]]W=u(-487174+466907)p=-815037+10911486460822 o=H[w[507674+-507672]]y=o(W,p)r=z[y]Y=s(b,V,r)b=u(350826-371083)Y=B[b]r=H[w[-364922+364923]]z=H[w[706563+-706561]]y=u(-917911-(-897700))W=-689944+28311005362839 o=z(y,W)b=r[o]s=Y[b]b=-517636-(-517638)Y=s(b)s=758815+8703008 else s=H[w[643147-643146]]b=H[w[666068+-666066]]r=H[w[-101878-(-101881)]]y=626864+8496463593156 o=u(585025+-605337)z=r(o,y)Y=b[z]b=k s[Y]=b s=-373662+10746087 end else Y=u(-890119+869863)W=u(-541454+521239)s=B[Y]p=E(7211233-(-279835),{})r=u(425898-446208)V=H[w[425787+-425783]]b=B[r]y=B[W]W={y(p)}o={h(W)}y=-739523+739525 z=o[y]r=b(z)b=u(516350-536665)k=V(r,b)V={k()}Y=s(h(V))k=H[w[-472405-(-472410)]]V=Y s=k and 8108142-(-1031655)or-113300+4339404 Y=k end else if s&lt;439262+6429750 then if s&lt;-386309+7120669 then s=true s=s and 3563401-649334 or 4644657-689617 else N=#I a=69669+-69668 X=b(a,N)a=o(I,X)X=nil q=-453335-(-453336)s=93073+15482804 N=H[n]i=a-q d=y(i)N[a]=d a=nil end else V=H[w[-1005946-(-1005947)]]Y=#V V=-534985+534985 s=Y==V s=s and-568647+14844573 or-463342+10812424 end end end else if s&lt;2856+8026421 then if s&lt;7315646-(-428166)then if s&lt;7516825-(-2775)then if s&lt;7493852-344066 then X=a q=X s=15450406-(-519509)I[X]=q X=nil else Y=3061154-387879 b=893029+845689 k=u(766848+-787168)V=k^b s=Y-V V=s Y=u(383674-403971)s=Y/V Y={s}s=B[u(668560-688835)]end else v=333659+-333657 j=G[v]v=H[Z]s=7541306-(-211810)A=j==v g=A end else if s&lt;8640263-737627 then if s&lt;-412189+8164017 then H[k]=P s=H[k]s=s and-607438+1092440 or 9854747-672740 else Y=g s=c s=11900114-718931 end else Y=u(795095-815356)s=B[Y]Y=u(103046+-123317)o=29064863460265-865995 z=u(-680487-(-660196))k=H[w[724227-724225]]b=H[w[873739-873736]]Y=s[Y]r=b(z,o)V=k[r]Y=Y(s,V)V=Y Y=u(-201714-(-181466))Y=V[Y]Y=Y(V)k=183770+-183769 s=Y[k]k=s Y=k s=k and 845277+7728074 or-585529+2832019 end end else if s&lt;8109313-(-577970)then if s&lt;-675565+9151301 then if s&lt;818723+7515624 then s={}z=64112+35184372024720 H[w[-16227-(-16229)]]=s y=396753-396498 Y=H[w[-61832+61835]]C=-27259-(-27260)r=Y Y=k%z H[w[307243+-307239]]=Y o=k%y s=-813374+10888472 y=635352-635350 L=C W=u(357862-378157)z=o+y C=-272464-(-272464)H[w[-631751+631756]]=z y=B[W]W=u(170564+-190830)o=y[W]y=o(V)o=u(327314+-347546)b[k]=o n=L&lt;C o=914279-914074 W=853241+-853240 C=W-L p=y else c=H[k]g=c s=c and-363765+11893085 or 22710+83544 end else z=H[w[-975023+975025]]p=18897953326171-(-122373)o=H[w[57437-57434]]W=u(-558912-(-538590))y=o(W,p)s=435705+1810785 b=u(519510-539814)b=k[b]r=z[y]b=b(k,r)Y=b end else if s&lt;600451+8133036 then s=t(15605358-172033,{r})M={s()}s=B[u(610490-630767)]Y={h(M)}else s=161350+6681780 N=994149+-994149 a=#I X=a==N end end end end end else if s&lt;12113040-783908 then if s&lt;729284+9339272 then if s&lt;10017785-685402 then if s&lt;92680+9020553 then if s&lt;9738027-811810 then if s&lt;9387913-494209 then X=u(-129607+109327)q=u(-982827+962604)I=B[X]F=383211+7952140481932 a=H[r]N=H[k]d=N(q,F)X=a[d]a=true I[X]=a F=u(397617-417870)X=H[b]T=15730153929136-990484 N=H[r]d=H[k]o=nil q=d(F,T)a=N[q]I=X[a]a=H[p]Z=982944+7603232886324 X=I(a)F=u(-261990+241749)a=u(-590722+570442)T=1006160+24430084756000 X=B[a]N=H[r]d=H[k]q=d(F,T)F=u(-393443-(-373223))a=N[q]I=X[a]Y={}X=u(-463181-(-442919))a=E(667763+5060473,{p;r;k})X=I[X]X=X(I,a)I=S()T=-653563+20590932467311 X=E(700746+15871085,{p,r,k,b})H[I]=X N=H[r]d=H[k]s=B[u(788388-808693)]y=nil q=d(F,T)a=N[q]X=W[a]C=nil N=H[p]T=u(-764913+744706)a=X(N)N=u(518034-538291)a=B[N]d=H[r]q=H[k]F=q(T,Z)N=d[F]X=a[N]T=u(190433-210675)N=-774812-(-774813)a=X(N)b=R(b)N=u(-59040-(-38759))p=R(p)a=B[N]d=H[r]q=H[k]Z=2092071581144-(-167414)F=q(T,Z)N=d[F]X=a[N]N=E(591715+5085333,{r;k,I})a=X(N)W=nil r=R(r)k=R(k)X=a()I=R(I)else s=true V=m k=S()H[k]=s z=S()b=u(-396670-(-376375))r=S()Y=B[b]y=u(-802341+782126)b=u(276098+-296391)W=t(12493779-(-758332),{z})s=Y[b]b=S()H[b]=s s=e(605189+10787334,{})H[r]=s s=false H[z]=s o=B[y]y=o(W)s=y and-431715+1068433 or-84402+11337469 Y=y end else s=H[w[-273000-(-273007)]]s=s and 282568+15383469 or 12232246-(-759739)end else if s&lt;979438+8247860 then if s&lt;8357612-(-817222)then s=4625871-399767 b=H[w[-1021950+1021956]]k=b==V Y=k else s=true s=974894+7754040 end else s=true s=s and-895344+16186680 or-845762+1259855 end end else if s&lt;159723+9606598 then if s&lt;421473+9218297 then if s&lt;-553916+10040402 then V=nil k=nil s=412708+681330 else p=-783268+783523 s=H[w[174024+-174023]]k=b W=593295-593295 y=s(W,p)V[k]=y s=-425910+14405912 k=nil end else s=H[w[364033+-364023]]k=H[w[947324-947313]]V[s]=k s=H[w[-144400-(-144412)]]k={s(V)}s=B[u(-1039328+1019095)]Y={h(k)}end else if s&lt;-25213+10060511 then if s&lt;8848870-(-1029693)then q=R(q)s=15249554-512404 i=R(i)G=nil d=R(d)T=R(T)Z=R(Z)F=R(F)else s=true s=s and-483801+4828527 or 8713315-(-15619)end else Y={}s=B[u(-494506-(-474278))]end end end else if s&lt;-779132+11522806 then if s&lt;10829766-468227 then if s&lt;10680410-331434 then if s&lt;862445+9344864 then I=not n C=C+L W=C&lt;=p W=I and W I=C&gt;=p I=n and I W=I or W I=709348+-524846 s=W and I W=167492-(-423645)s=s or W else sU=u(-307356-(-287126))s=O hU=8819414437623-540397 Q=H[r]BU=H[k]uU=BU(sU,hU)O=Q[uU]xU=u(348971-369188)uU=H[r]mU=448352+27926857309036 sU=H[k]hU=sU(xU,mU)BU=uU[hU]Q=W[BU]BU=Q()xU=u(-295124+274850)uU=H[r]mU=562245+10460300590785 sU=H[k]hU=sU(xU,mU)Q=uU[hU]uU={}z={[p]=C;[L]=n,[I]=X,[a]=N,[d]=q,[F]=T,[Z]=G;[A]=j,[v]=J;[O]=BU;[Q]=uU}C=u(-290955-(-270638))q=-906400+20258107537785 p=S()H[p]=z a=u(840647+-860881)z=B[C]N=388869+21870026209475 n=H[r]d=u(401297-421595)I=H[k]X=I(a,N)L=n[X]C=u(602998+-623317)C=z[C]C=C(z,L)L=u(114782+-135062)z=nil B[L]=z n=H[p]X=H[r]a=H[k]N=a(d,q)I=X[N]L=n[I]s=L and 10001511-(-755243)or 477306+12087067 end else b=u(918207-938489)s=B[u(-702966+682720)]k=B[b]b=u(-246953+226745)V=k[b]b=H[w[-424521-(-424522)]]k={V(b)}Y={h(k)}end else if s&lt;-114955+10649376 then if s&lt;10497613-8149 then Y=H[w[-533674+533678]]W=25848632451485-586393 r=H[w[-547089+547091]]k=nil V=nil y=u(-479467-(-459215))z=H[w[194984+-194981]]o=z(y,W)b=r[o]s=Y[b]b=H[w[-734806-(-734807)]]Y=s(b)s=B[u(615189-635399)]Y={}else s=547735+2495199 end else I=u(-965776+945494)n=B[I]s=860379+9916843 I=u(625133-645435)L=n[I]p=L end end else if s&lt;11015418-(-150501)then if s&lt;-900499+11727402 then if s&lt;10757185-(-5731)then I=H[r]F=420454+25439884821472 d=713553+427561934198 X=H[k]N=u(-61290+40972)a=X(N,d)n=I[a]X=H[r]q=298320304856-(-452018)a=H[k]d=u(58765+-79029)N=a(d,q)q=u(-393659+373450)I=X[N]a=H[r]N=H[k]d=N(q,F)X=a[d]L=u(-745666+725376)s=9919971-1047111 L=C[L]L=L(C,n,I,X)n=u(882402+-902682)B[n]=L else Y=p s=C s=p and 3845643-51148 or 893191-(-583112)end else b=8332943-301187 Y=661925+14969519 k=u(352485+-372706)V=k^b s=Y-V V=s Y=u(744401-764680)s=Y/V Y={s}s=B[u(233194+-253481)]end else if s&lt;10632711-(-633178)then if s&lt;-268009+11497898 then s=-918538+10695383 H[k]=Y else W=u(-277211-(-256929))o=Y y=u(457632-477920)n=u(187713-207995)Y=B[y]y=u(-58328+38034)s=Y[y]y=S()H[y]=s Y=B[W]W=u(392048-412306)s=Y[W]C=s W=s L=B[n]s=L and 144354+10582297 or-103097+10880319 p=L end else k=H[w[-509003+509006]]b=182979-182812 V=k*b k=156501-156244 Y=V%k H[w[-389687+389690]]=Y s=11226055-(-406028)end end end end else if s&lt;13437150-(-905884)then if s&lt;809567+11859685 then if s&lt;358222+11226056 then if s&lt;11714927-282786 then if s&lt;442174+10938968 then V=m[-338416-(-338417)]k=m[-640965-(-640967)]s=H[w[-7763+7764]]b=s s=b[k]s=s and 11334809-809586 or-870806+9004978 else Y=u(912607-932880)s=B[Y]V=u(-492525-(-472307))Y=s(V)Y={}s=B[u(1000171-1020426)]end else A=306746+-306745 c=G[A]s=193051-86797 g=c end else if s&lt;12112608-(-139813)then if s&lt;11641190-(-107451)then b=821356+-821355 k=H[w[865391-865388]]V=k~=b s=V and-687868+14577898 or 10320856-(-977444)else s=7059096-(-684993)M=L==n P=M end else F=576639+3218198231387 T=18529299530675-254463 d=u(-313937-(-293699))q=32443851798802-245263 X=H[r]a=H[k]N=a(d,q)I=X[N]n=u(363244+-383534)q=u(9235-29484)a=H[r]N=H[k]d=N(q,F)X=a[d]s=8930960-58100 F=u(-863166-(-842937))N=H[r]d=H[k]q=d(F,T)n=C[n]a=N[q]n=n(C,I,X,a)I=u(-726604+706324)B[I]=n end end else if s&lt;-491411+14340340 then if s&lt;14018338-301676 then if s&lt;12288342-(-883561)then b=H[w[-768788-(-768797)]]s={}V=s k=628737-628736 r=b b=-707735-(-707736)z=b s=14227092-247090 b=-737157-(-737157)o=z&lt;b b=k-z else s=true Y={}H[w[509591+-509590]]=s s=B[u(-36790-(-16494))]end else M=H[k]s=M and-785852+12765073 or 7062738-(-681351)P=M end else if s&lt;13614295-(-533981)then if s&lt;14793803-865196 then L=-996444-(-996457)b=659836-659804 k=H[w[510293-510290]]p=-259615-(-259617)V=k%b r=H[w[-699866+699870]]y=H[w[796843+-796841]]X=H[w[-252714-(-252717)]]I=X-V X=246227-246195 n=I/X C=L-n W=p^C o=y/W W=-545542-(-545543)z=r(o)r=420082+4294547214 b=z%r z=145769-145767 r=z^V k=b/r r=H[w[974609+-974605]]y=k%W W=4295528697-561401 o=y*W z=r(o)r=H[w[225760-225756]]V=nil L=-77583+77839 o=r(k)k=nil b=z+o z=355161+-289625 y=781769-716233 r=b%z o=b-r p=-919082-(-919338)z=o/y y=127003+-126747 o=r%y W=r-o y=W/p r=nil p=296406+-296150 W=z%p C=z-W p=C/L z=nil s=-795886+11144968 C={o;y,W;p}o=nil b=nil y=nil W=nil p=nil H[w[205382+-205381]]=C else b=b+z k=b&lt;=r y=not o k=y and k y=b&gt;=r y=o and y k=y or k y=252590+9265540 s=k and y k=907265+8826595 s=s or k end else k=H[w[582403+-582401]]b=21071+-21034 V=k*b k=2919877559991-(-491160)Y=V+k V=35184371930924-(-157908)s=Y%V H[w[281823+-281821]]=s k=437204-437203 V=H[w[519276+-519273]]Y=V~=k s=10512127-(-786173)end end end else if s&lt;15872882-248171 then if s&lt;301219+15010418 then if s&lt;15551628-671048 then if s&lt;13443034-(-1026864)then s=-296531+4196897 k=H[w[273480+-273478]]b=H[w[872489-872486]]V=k==b Y=V else P=P+f Y=P&lt;=M d=not N Y=d and Y d=P&gt;=M d=N and d Y=d or Y d=111299+-85837 s=Y and d Y=13844045-96299 s=s or Y end else Y=u(767501-787732)s=B[Y]V=u(-712870+692554)Y=B[V]V=u(-831667+811351)B[V]=s V=u(842854+-863085)B[V]=Y V=H[w[769228-769227]]k=V()s=9410000-149136 end else if s&lt;227940+15357503 then if s&lt;439945+15092712 then s=8847281-(-413583)else N=-624026-(-624026)a=#I X=a==N s=X and 896733+-837220 or 6162809-(-680321)end else c=s v=810467+-810466 j=G[v]v=false A=j==v g=A s=A and 6891975-(-851698)or 8376275-623159 end end else if s&lt;-78493+15939046 then if s&lt;-245084+16018662 then if s&lt;15836591-142684 then V=u(169515-189788)s=B[V]b=-1021212+1021212 k=H[w[-426012+426020]]V=s(k,b)s=13409228-417243 else X=nil s=16241118-271203 W=nil a=R(a)k=R(k)n=nil L=nil p=R(p)I=nil o=nil z=R(z)r=R(r)C=R(C)y=R(y)p=u(800381-820676)k=nil r=S()b=R(b)H[r]=k b=nil y=u(-393004+372716)C=S()k=S()o=u(864367+-884655)H[k]=b z=B[o]o=u(340048-360326)b=z[o]z=S()I={}H[z]=b X=1035942-1035941 W=u(262906+-283188)o=B[y]y=u(263552-283846)b=o[y]y=B[W]W=u(55947+-76155)o=y[W]W=B[p]p=u(860076+-880346)y=W[p]W=-160069-(-160069)p=S()a=367479+-367223 n=S()H[p]=W W=347892+-347890 H[C]=W L={}W={}H[n]=L N=a a=-195154+195155 L=691639-691639 d=a a=-1018536-(-1018536)i=d&lt;a a=X-d end else z=-396520+396522 k=H[w[-959971-(-959972)]]r=-408930-(-408931)b=k(r,z)k=506409+-506408 V=b==k s=V and 469821+3430545 or 754078+13642260 Y=V end else if s&lt;73250+16465929 then q=not i a=a+d X=a&lt;=N X=q and X q=a&gt;=N q=i and q X=q or X q=7474999-442835 s=X and q X=-518194+9345741 s=s or X else p=14953979152715-(-86504)W=u(710823+-731095)b=H[w[418954-418953]]z=H[w[-705563-(-705565)]]o=H[w[1024027+-1024024]]y=o(W,p)r=z[y]k=b[r]V=not k Y=V s=V and 2600294-(-451687)or 2776445-783738 end end end end end end end s=#x return h(Y)end,function(B)local u,s=737203-737202,B[23314+-23313]while s do V[s],u=V[s]-(-464576-(-464577)),(412813-412812)+u if V[s]==794183+-794183 then V[s],H[s]=nil,nil end s=B[u]end end,{},function(B)for u=-818235-(-818236),#B,-945721-(-945722)do V[B[u]]=(982899-982898)+V[B[u]]end if m then local s=m(true)local h=x(s)h[u(559470-579730)],h[u(705548-725837)],h[u(1001897+-1022122)]=B,r,function()return-315330+-1865410 end return s else return w({},{[u(-1037194-(-1016905))]=r,[u(219526-239786)]=B;[u(-723247-(-703022))]=function()return 129604+-2310344 end})end end,function(B,u)local h=b(u)local m=function(m)return s(B,{m},u,h)end return m end,function(B)V[B]=V[B]-(-1000359+1000360)if-851891+851891==V[B]then V[B],H[B]=nil,nil end end,{},function(B,u)local h=b(u)local m=function(...)return s(B,{...},u,h)end return m end return(z(9405702-505738,{}))(h(Y))end)(getfenv and getfenv()or _ENV,unpack or table[u(504236+-524538)],newproxy,setmetatable,getmetatable,select,{...})end)(...)</ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="Folder" referent="RBX27DDCA37B3204CD4B5CD25D152704232">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<string name="Name">Imgs</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="ImageLabel" referent="RBXB4E272CF41594BEDB5515A9D86DC0A57">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<float name="BackgroundTransparency">0</float>
					<Color3 name="BorderColor3">
						<R>0</R>
						<G>0</G>
						<B>0</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="ClipsDescendants">false</bool>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Draggable">false</bool>
					<Content name="Image"><url>rbxassetid://129168231652243</url></Content>
					<Color3 name="ImageColor3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<Vector2 name="ImageRectOffset">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<Vector2 name="ImageRectSize">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<float name="ImageTransparency">0</float>
					<bool name="Interactable">true</bool>
					<int name="LayoutOrder">0</int>
					<string name="Name">ImageLabel</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>0</YO>
					</UDim2>
					<token name="ResampleMode">0</token>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<token name="ScaleType">0</token>
					<bool name="Selectable">false</bool>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<int name="SelectionOrder">0</int>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>100</XO>
						<YS>0</YS>
						<YO>100</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<Rect2D name="SliceCenter">
						<min>
							<X>0</X>
							<Y>0</Y>
						</min>
						<max>
							<X>0</X>
							<Y>0</Y>
						</max>
					</Rect2D>
					<float name="SliceScale">1</float>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UDim2 name="TileSize">
						<XS>1</XS>
						<XO>0</XO>
						<YS>1</YS>
						<YO>0</YO>
					</UDim2>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
			</Item>
		</Item>
		<Item class="ModuleScript" referent="RBX624D88D01EDA4E38BD6D91525FB13DA6">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">SystemInstructions</string>
				<string name="ScriptGuid">{75A5DA76-8D22-482E-840E-239C19EA997F}</string>
				<ProtectedString name="Source">--[[ v1.0.0 https://wearedevs.net/obfuscator ]] return(function(...)local f={&quot;\119\100\102\087\065\085\106\116&quot;;&quot;&quot;;&quot;\105\081\055\102&quot;,&quot;\065\117\108\104\089\099\083\112\119\099\109\110\050\108\106\067\050\048\083\104\119\048\108\082\111\085\110\080\050\048\079\061&quot;;&quot;\119\106\074\075\109\115\083\066\054\097\115\043\114\054\121\047\065\080\105\103&quot;;&quot;\101\108\099\067\083\057\107\087\043\100\072\089\048\083\073\109\074\113\061\061&quot;;&quot;\111\111\102\108\117\071\047\072\070\070\051\043\055\077\122\043\083\113\080\098\047\083\070\052\054\070\066\067\081\067\097\083\097\100\070\081\047\122\100\055\069\120\068\100&quot;,&quot;\111\085\102\120\050\085\066\061&quot;,&quot;\098\056\111\100\050\077\097\109\119\122\112\090\119\077\105\085\050\114\061\061&quot;;&quot;\109\097\108\115\050\089\118\066\108\054\110\068\068\089\069\097&quot;;&quot;\106\117\109\097\110\102\106\122&quot;,&quot;\073\089\083\107\065\089\118\104&quot;;&quot;\119\117\116\079\066\066\067\076\083\100\065\073\108\051\084\104&quot;,&quot;\103\105\084\101\067\114\061\061&quot;,&quot;\066\117\109\105\054\066\097\074\066\066\086\077\109\077\070\112\066\052\061\061&quot;;&quot;\111\085\106\107\111\056\118\067\050\100\119\061&quot;,&quot;\116\122\099\112\054\075\108\111\073\114\098\101\072\049\102\068\111\089\052\100&quot;;&quot;\097\117\055\071\074\102\053\083&quot;;&quot;\069\077\119\116\112\077\053\066\079\048\103\065\043\114\065\070\076\113\120\121\050\083\084\105\089\103\050\078\054\106\067\043\070\109\107\075\116\114\061\061&quot;,&quot;\072\104\071\100\050\109\100\108\052\112\109\108\114\086\087\067\119\051\106\099&quot;;&quot;\113\116\054\055\079\076\079\072\118\069\086\111\088\083\055\102&quot;;&quot;\065\117\097\086\111\085\083\115&quot;,&quot;\089\097\106\067\050\100\109\110\071\114\061\061&quot;,&quot;\047\104\097\104\108\104\112\076\068\107\110\073\054\110\069\116\109\048\068\061&quot;,&quot;\065\099\083\097\073\113\061\061&quot;;&quot;\116\115\043\065\118\084\121\051\103\113\080\068\098\104\084\088\103\097\088\089&quot;;&quot;\050\122\102\104\047\114\061\061&quot;;&quot;\112\102\120\122\109\054\050\116\115\050\100\082\068\108\082\086\109\068\061\061&quot;,&quot;\111\122\112\052\073\122\083\055&quot;,&quot;\102\077\053\068\108\108\073\113\050\079\111\048\069\114\049\074\079\076\077\107\087\110\104\061&quot;;&quotquot;,&quot;\100\079\066\069\072\109\085\115\070\078\113\066\107\102\052\083\053\072\084\085\085\114\061\061&quot;;&quot;\089\097\106\116\065\089\109\086\111\085\102\120\050\085\066\061&quot;;&quot;\109\077\109\081\111\113\061\061&quot;,&quot;\050\085\108\087&quot;,&quot;\104\106\089\053\102\066\052\084\116\101\089\056\057\087\051\061&quot;;&quot;\057\110\051\120&quot;;&quot;\071\085\110\117\079\102\073\061&quot;;&quot;\071\100\065\081\066\085\116\056\109\102\086\051\108\107\111\116\083\104\068\061&quot;,&quot;\119\117\108\104\050\122\108\104\073\089\109\086\073\100\105\110&quot;;&quot;\065\089\118\081\050\099\072\061&quot;,&quot;\089\097\106\048\073\052\061\061&quot;,&quot;\073\117\106\087\073\117\102\104&quot;,&quot;\106\070\103\065\049\089\066\118&quot;;&quot;\111\056\110\052\065\068\061\061&quot;,&quot;\048\083\081\057\065\066\098\110\106\113\089\105\078\118\117\057\098\112\065\054\119\087\108\116\101\088\052\061&quot;,&quot;\050\085\112\120\109\048\067\110\068\104\106\120\071\122\083\099&quot;,&quot;\050\076\072\061&quot;,&quot;\055\083\100\115\085\110\110\119&quot;;&quot;\119\099\109\081\047\122\112\048&quot;,&quot;\109\104\086\105\065\100\108\097\054\099\109\110\050\051\086\086&quot;,&quot;\089\097\106\103\065\122\084\061&quot;;&quot;\076\099\102\088\088\104\049\117&quot;;&quot;\114\103\066\084\120\074\081\118&quot;,&quot;\073\117\086\086\119\113\061\061&quot;;&quot;\073\048\110\104\065\068\061\061&quot;;&quot;\080\069\085\048\082\051\043\116\100\101\097\083\066\076\113\077\100\114\061\061&quot;;&quot;\079\122\105\115\047\047\082\043\055\065\121\049\056\085\097\043\072\104\101\104\111\119\107\114\110\116\118\055\117\068\067\074\077\114\061\061&quot;,&quot;\111\085\106\087\111\122\097\120\065\089\072\061&quot;,&quot;\100\087\105\110\048\067\105\106&quot;,&quot;\079\066\065\075\050\066\116\079\098\117\072\104\108\051\112\053\108\068\061\061&quot;,&quot;\068\077\073\081\073\110\069\086\122\085\102\120\068\099\102\100&quot;,&quot;\065\082\109\122\101\089\083\068\050\097\111\076\119\104\108\101\071\113\061\061&quot;,&quot;\101\120\113\110\065\074\115\067\101\113\061\061&quot;;&quot;\056\077\104\090\049\114\049\122\075\076\047\051\104\072\083\089&quot;,&quot;\101\113\061\061&quot;;&quot;\050\097\067\110\111\056\114\052\098\099\086\086\101\122\108\069\098\114\061\061&quot;;&quot;\108\076\110\079\101\051\083\099\122\102\108\115\047\054\065\104\119\100\051\061&quot;,&quot;\107\089\118\100\101\067\049\084\101\121\080\099\054\117\068\061&quot;;&quot;\119\100\108\105\111\122\110\081\065\068\061\061&quot;;&quot;\065\099\065\087\054\054\111\115\109\066\109\072\073\122\083\120\098\122\119\061&quot;;&quot;\119\085\083\086\050\085\052\061&quot;;&quot;\047\102\083\117\111\104\109\076\108\077\115\104\109\100\065\051\108\113\061\061&quot;;&quot;\050\076\051\061&quot;,&quot;\065\100\086\088\111\102\083\081\109\054\110\101\065\051\118\065&quot;;&quot;\119\100\108\116\050\099\065\110&quot;,&quot;\054\107\069\090\109\066\102\074\111\082\069\100\109\108\111\107\079\077\070\061&quot;;&quot;\108\085\102\116\119\085\108\081\072\051\109\110\111\085\108\082\111\085\108\077\072\068\061\061&quot;;&quot;\114\110\081\122\076\115\054\118&quot;;&quot;\104\065\055\120\065\119\099\107\097\066\101\104\050\071\121\085\087\052\061\061&quot;,&quot;\122\110\086\074\113\089\107\117&quot;,&quot;\068\048\069\088\065\056\118\105&quot;;&quot;\119\117\083\081\047\089\069\104&quot;,&quot;\068\099\118\067\079\077\110\047\050\052\061\061&quot;;&quot;\098\089\083\069&quot;,&quot;\114\055\052\111\113\098\090\050&quot;;&quot;\065\100\105\080\050\099\072\061&quot;}local function U(U)return f[U+(-231884-(-275323))]end for U,d in ipairs({{-147512-(-147513);625914+-625827};{497047+-497046;-143826+143866};{-95000-(-95041);884780-884693}})do while d[827360+-827359]&lt;d[-742698-(-742700)]do f[d[585103-585102]],f[d[489297+-489295]],d[-7361-(-7362)],d[-44955+44957]=f[d[390656+-390654]],f[d[246704+-246703]],d[367386-367385]+(8997-8996),d[-285457-(-285459)]-(468593-468592)end end do local U=table.insert local d=string.len local J=type local v=string.sub local y=f local j=string.char local c=table.concat local A={Q=181643-181593;[&quot;\057&quot;]=-544182-(-544240),R=-944801-(-944836);p=-487841-(-487898),Y=630646-630623,y=164728-164669;J=-179227-(-179229),H=-1001079-(-1001087);V=141518+-141485,S=-398595+398608,f=-611921+611926,l=460506-460485;u=-420726+420780;q=-76667-(-76699);x=614781+-614747,E=-216104+216105,N=-903785-(-903848);[&quot;\049&quot;]=631363-631301,m=-519078-(-519095),Z=281211+-281200,g=119614-119570,[&quot;\052&quot;]=-658475+658523;[&quot;\043&quot;]=802891-802860,b=-882171-(-882189);[&quot;\051&quot;]=225481+-225477,j=-899281-(-899342),[&quot;\050&quot;]=-468697-(-468724);F=-170057+170117;W=-324396-(-324442),[&quot;\048&quot;]=871429-871390;s=129303+-129263,D=190788-190772;M=-285121+285157,O=528489+-528477,v=-690236+690245,K=363797-363787,P=-97064-(-97111),k=-627944-(-627995),z=755412-755390,G=-296777+296807,c=-156751+156806,o=115157-115128,w=20898+-20870,C=839397+-839356,d=-541847+541885,i=-784170+784219,[&quot;\056&quot;]=-297340-(-297347),[&quot;\054&quot;]=959275+-959256;L=-166264-(-166267);n=322256-322219,X=-746423+746465,h=587255-587203;r=713510-713510;A=594739-594714,t=-157501+157546;e=596972+-596958;T=-84709+84765;[&quot;\047&quot;]=-675786+675812,I=113985+-113961;[&quot;\055&quot;]=-8444+8487;a=-877607-(-877660),U=-760203-(-760209);[&quot;\053&quot;]=-42645-(-42660),B=-861457+861477}local M=math.floor for f=-864975-(-864976),#y,504299+-504298 do local x=y[f]if J(x)==&quot;\115\116\114\105\110\103&quot;then local J=d(x)local O={}local n=-99907+99908 local Z=-743237+743237 local l=-478556+478556 while n&lt;=J do local f=v(x,n,n)local d=A[f]if d then Z=Z+d*(-423373+423437)^((610639-610636)-l)l=l+(870213-870212)if l==567542-567538 then l=-186694-(-186694)local f=M(Z/(620298-554762))local d=M((Z%(-692529-(-758065)))/(-330898+331154))local J=Z%(-941447+941703)U(O,j(f,d,J))Z=533001+-533001 end elseif f==&quot;\061&quot;then U(O,j(M(Z/(274166-208630))))if n&gt;=J or v(x,n+(-449147-(-449148)),n+(-393945-(-393946)))~=&quot;\061&quot;then U(O,j(M((Z%(469736-404200))/(576050-575794))))end break end n=n+(-248392+248393)end y[f]=c(O)end end end return(function(f,J,v,y,j,c,A,B,t,m,O,l,d,K,M,b,x,Z,r,n)l,t,M,O,x,d,n,K,b,r,B,m,Z=function(f)local U,d=-574269-(-574270),f[-241428-(-241429)]while d do x[d],U=x[d]-(338129-338128),U+(53915-53914)if-605935+605935==x[d]then x[d],M[d]=nil,nil end d=f[U]end end,function(f)x[f]=x[f]-(789184-789183)if x[f]==-522651+522651 then x[f],M[f]=nil,nil end end,{},function()n=(-516376-(-516377))+n x[n]=872318-872317 return n end,{},function(d,v,y,j)local G,P,S,k,Q,A,I,R,Z,a,B,z,L,x,N,o,D,n,h,F,i,Y,l,w,e,W,q,g,C,V,H,X,E,s while d do if d&lt;10066756-681898 then if d&lt;-815440+6042914 then if d&lt;-717724+3919476 then if d&lt;-543913+2363684 then if d&lt;564465+307936 then if d&lt;226201+223155 then if d&lt;-616535-(-809955)then Z=U(563374+-606765)n=f[Z]Z=U(427656+-471066)x=n[Z]Z=M[y[674874-674873]]n={x(Z)}d=f[U(-582312+538897)]A={J(n)}else w=w+g i=w&lt;=L G=not C i=G and i G=w&gt;=L G=C and G i=G or i G=923849+15099882 d=i and G i=-239321+6202030 d=d or i end else d=m(481559+3613559,{l})P={d()}A={J(P)}d=f[U(-804535+761145)]end else if d&lt;2190529-570505 then if d&lt;672070-(-939673)then Z=-299879-(-299879)x=U(-598777-(-555419))d=f[x]n=M[y[-1014568-(-1014576)]]x=d(n,Z)d=13602529-847604 else x=v[596534+-596533]N=U(908574+-951928)z=U(-501438+458012)Z=v[-193030-(-193033)]n=v[-684929-(-684931)]A=U(-471481-(-428094))d=f[A]R=937785+23366725819207 B=f[N]N=B(x)V=M[y[640080+-640079]]k=M[y[485563+-485561]]Q=k(z,R)B=V[Q]z=-389303+15019609558025 l=N==B H=U(-859930-(-816575))N=M[y[972112+-972111]]V=M[y[754913-754911]]Q=U(530291+-573644)k=V(Q,z)B=N[k]k=U(-765968+722614)A=d(l,B)A=U(582358-625745)d=f[A]V=f[k]B=d k=V(n)Q=M[y[134410+-134409]]q=-330886+34625750272897 z=M[y[72942+-72940]]R=z(H,q)V=Q[R]N=k==V d=N and 15975983-921581 or 7546626-818874 l=N end else k=U(789788-833179)V=f[k]H=U(105352-148785)d=f[U(-745712-(-702293))]q=318371+17209552634794 Q=M[y[-306312-(-306313)]]z=M[y[325622+-325620]]R=z(H,q)k=Q[R]N=V[k]V={N(l)}A={J(V)}end end else if d&lt;1918213-(-252019)then if d&lt;-978673+3068222 then if d&lt;1003259+951136 then N=U(733655+-777046)A=f[N]R=10057157589393-(-383162)z=U(771560+-814965)V=M[y[-350705+350706]]k=M[y[-25072-(-25074)]]Q=k(z,R)N=V[Q]d=A[N]A=d(l,Z)A=#n d=B+A B=d d=16973377-619034 else o=M[n]A=o d=o and 253561+7884325 or 180829+12746965 end else n=O()B=O()x=v Z=U(250096+-293532)d=true M[n]=d A=f[Z]l=O()V=U(-640569-(-597155))Z=U(-799879-(-756502))d=A[Z]Z=O()M[Z]=d k=m(126666+13875965,{B})d=b(23002+4069077,{})M[l]=d d=false M[B]=d N=f[V]V=N(k)d=V and 2486287-(-578182)or 8382901-(-1039629)A=V end else if d&lt;3714486-873249 then if d&lt;593095+1903564 then d=M[y[-870628-(-870635)]]d=d and 903599+142022 or 12176363-(-578562)else x=M[y[21528+-21527]]A=#x x=-966530+966530 d=A==x d=d and-589268+8462583 or-162500-(-294528)end else N=M[B]A=N d=10303933-881403 end end end else if d&lt;733825+3583503 then if d&lt;4001076-(-22333)then if d&lt;456103+3124495 then if d&lt;-287194+3674755 then P=M[n]s=P d=P and 13796704-277547 or 2939898-(-597267)else M[n]=s d=M[n]d=d and 4928868-346082 or 9856876-360010 end else A=U(805329+-848756)d=f[A]l=U(250562-293945)x=M[y[717689+-717685]]k=U(-479089-(-435675))Q=b(-997782+6794905,{})Z=f[l]V=f[k]k={V(Q)}V=532738-532736 N={J(k)}B=N[V]l=Z(B)Z=U(384592+-428014)n=x(l,Z)x={n()}A=d(J(x))x=A n=M[y[-660096-(-660101)]]A=n d=n and 6442965-(-778822)or 15084767-222987 end else if d&lt;5145515-1013591 then if d&lt;-756392+4850590 then A=U(-903130-(-859772))x=U(-903432-(-860024))d=f[A]A=d(x)d=f[U(40244-83657)]A={}else d=-393887+10974504 end else A=o d=S d=-786030+13713824 end end else if d&lt;5960043-874001 then if d&lt;4929200-19241 then if d&lt;4121202-(-465828)then d=25404+10161524 else l=U(924287-967668)A=M[y[900217-900216]]B=23053656672066-712019 n=M[y[573260+-573258]]Z=n(l,B)d=A[Z]A={d}d=f[U(335501-378887)]end else q=U(-633365+589974)H=f[q]q=U(-54842-(-11472))R=H[q]Q=R d=8089389-(-1012222)end else if d&lt;-427673+5543970 then Q=-217564+217566 Z=303708-303676 n=M[y[-645143-(-645146)]]x=n%Z R=-624153+624166 l=M[y[490943-490939]]V=M[y[-344934+344936]]i=M[y[-543855+543858]]q=i-x i=554923-554891 H=q/i z=R-H R=850155+-849899 k=Q^z N=V/k B=l(N)l=174610+4294792686 Z=B%l B=640522-640520 l=B^x n=Z/l Q=1021907+-1021651 k=783128+-783127 l=M[y[113990-113986]]V=n%k k=4294976862-9566 N=V*k B=l(N)V=-633066+698602 l=M[y[-198468+198472]]N=l(n)Z=B+N B=-528910-(-594446)l=Z%B N=Z-l x=nil B=N/V n=nil V=670288+-670032 N=l%V d=-802667-(-934695)k=l-N V=k/Q l=nil Q=386936+-386680 k=B%Q z=B-k Q=z/R B=nil z={N,V,k,Q}V=nil M[y[273515+-273514]]=z Q=nil N=nil k=nil Z=nil else d=15459364-(-94723)end end end end else if d&lt;275848+6483888 then if d&lt;5760721-(-140150)then if d&lt;373370+5271941 then if d&lt;4794993-(-666776)then if d&lt;5284979-(-156279)then A=1359319-179830 n=U(-255186+211825)Z=-511151-(-884065)x=n^Z d=A-x x=d A=U(-593338-(-549936))d=A/x A={d}d=f[U(-126235-(-82851))]else L=-873406+873412 d=M[V]F=5334+-5333 P=d(F,L)L=U(158219-201657)d=U(-31963-11475)f[d]=P F=f[L]L=630532+-630530 d=F&gt;L d=d and 9189335-(-748349)or 20952+10652039 end else l=658069+-658068 n=M[y[-429978-(-429979)]]B=842178+-842176 Z=n(l,B)n=-922268-(-922269)x=Z==n d=x and 11009345-137431 or 15889109-444418 A=x end else if d&lt;-226918+6026430 then if d&lt;-978184+6669258 then A={}d=f[U(959437-1002872)]else n=U(-643938-(-600573))A=6277001-207791 Z=376757+12381210 x=n^Z d=A-x A=U(-627125-(-583721))x=d d=A/x A={d}d=f[U(382622+-426046)]end else d=M[y[513852+-513851]]x=v[-355321-(-355322)]Z=d n=v[110435+-110433]d=Z[n]d=d and 677094+5593060 or-396285+6801895 end end else if d&lt;-9116+6462386 then if d&lt;-47580+6375080 then if d&lt;404242+5795714 then L=55915+-55915 w=#q d=7725583-180490 i=w==L else d=918221+12427199 end else d={}M[y[-520460-(-520462)]]=d B=35184371354091-(-734741)A=M[y[307644-307641]]V=-855863+856118 k=U(41720+-85156)l=A A=n%B M[y[847914-847910]]=A N=n%V V=-228188+228190 B=N+V M[y[1011534+-1011529]]=B V=f[k]d=-101545+12693479 k=U(342780+-386144)N=V[k]V=N(x)k=-178980+178981 N=U(111740+-155137)Z[n]=N z=-327314+327315 N=-568497+568746 R=z Q=V z=-554304-(-554304)H=R&lt;z z=k-R end else if d&lt;425109+6292814 then V=U(95138+-138529)N=f[V]k=M[y[696381-696380]]Q=M[y[40313-40311]]R=U(944096+-987496)q=U(-611549+568187)i=16666577498380-(-519492)H=28854451808366-1045490 z=Q(R,H)d=16601957-247614 V=k[z]Q=U(-973399-(-929963))A=N[V]k=f[Q]z=M[y[-264025+264026]]R=M[y[704832+-704830]]H=R(q,i)Q=z[H]V=k[Q]k={V(x,B,B)}N=A(l,J(k))N=374664+-374663 A=B+N B=A else R=-91734+3329006136420 d=B z=-187871+25008857746268 N=M[y[565049+-565048]]V=M[y[-221145+221147]]Q=U(153236-196628)k=V(Q,z)z=U(-359452+316015)B=N[k]A=d(l,B)A=U(898272+-941659)N=U(-913+-42441)d=f[A]B=f[N]N=B(Z)V=M[y[219285+-219284]]k=M[y[323796-323794]]Q=k(z,R)B=V[Q]z=16957854908914-(-629990)l=N==B N=M[y[-609551-(-609552)]]Q=U(377307+-420687)V=M[y[80831-80829]]k=V(Q,z)B=N[k]A=d(l,B)d={}l=d d=-91537-(-91538)B=d d=7381067-(-275059)end end end else if d&lt;551608+7435552 then if d&lt;907695+6628236 then if d&lt;7705660-445720 then if d&lt;1041767+5938158 then V=U(340316+-383752)N=f[V]k=M[y[938022+-938021]]R=U(-41978-1418)H=446403+21515073984351 Q=M[y[-919763-(-919765)]]z=Q(R,H)V=k[z]A=N[V]Q=#n k=B+Q Q=131884+-131883 V=k-Q N=A(x,B,V)d=N==n d=d and 2008109-181032 or-244308+6843587 else Z=M[y[-854432+854438]]n=Z==x A=n d=993980+13867800 end else Z=Z+B n=Z&lt;=l V=not N n=V and n V=Z&gt;=l V=N and V n=V or n V=-566961+13050964 d=n and V n=368721+10802766 d=d or n end else if d&lt;367546+7479628 then if d&lt;-786643+8379765 then L=#q w=499962+-499961 i=Z(w,L)w=N(q,i)G=398303-398302 L=M[H]C=w-G g=V(C)i=nil L[w]=g d=12664285-(-40509)w=nil else A=#x d=B&lt;=A d=d and 720733+6067918 or-729420+2533849 end else n=M[y[-218189-(-218191)]]Z=612141+-611968 x=n*Z n=25200987356010-(-127595)A=x+n x=35184371390764-(-698068)d=A%x M[y[-902423-(-902425)]]=d x=M[y[545720-545717]]n=-591094-(-591095)d=13895059-679392 A=x~=n end end else if d&lt;8422317-(-639547)then if d&lt;8615880-125929 then if d&lt;-763984+8913293 then S=d h=-533035-(-533036)e=I[h]h=false a=e==h d=a and-352944+8819069 or 763092+3418369 o=a else h=622190+-622188 e=I[h]h=M[Y]a=e==h d=-293288+4474749 o=a end else x=v[495285+-495284]V=17324+9223511084315 N=U(-198390-(-155011))Q=25992403927039-(-126792)Z=M[y[-253445+253446]]l=M[y[408119-408117]]B=l(N,V)n=Z[B]A=x[n]N=U(-142294-(-98887))Z=M[y[71802-71801]]k=U(-461666+418284)V=582104+29828628583530 l=M[y[466441-466439]]B=l(N,V)n=Z[B]d=A[n]n=d d=M[y[-732102+732105]]B=M[y[953663-953662]]N=M[y[461303-461301]]V=N(k,Q)Q=-820756+4803831287504 k=U(-772531-(-729158))l=B[V]Z=x[l]i=-820269+31593747381668 q=-353630+14114287599370 A=d(Z)B=M[y[-200175-(-200176)]]N=M[y[-634752+634754]]Z=A V=N(k,Q)Q=8567758944894-76521 l=B[V]A=x[l]k=U(212096-255481)B=M[y[-100042+100043]]N=M[y[-828049+828051]]V=N(k,Q)l=B[V]d=A[l]l=d A=M[y[-40405-(-40409)]]Q=U(-1009593+966165)N=M[y[993118-993117]]z=14973812723412-(-330856)V=M[y[-363958-(-363960)]]k=V(Q,z)B=N[k]R=-160059+14008335714998 d=A[B]z=U(209829-253223)V=M[y[233086-233085]]k=M[y[-372809+372811]]Q=k(z,R)N=V[Q]B=x[N]A=d(B)w=675732+26323632316493 B=A d=M[y[-990754+990759]]N=d d=M[y[364989-364983]]k=M[y[366692+-366691]]Q=M[y[-1043402-(-1043404)]]R=U(-242701-(-199334))H=793154+33768745558826 z=Q(R,H)H=U(-833897+790526)V=k[z]A=d(N,V,n)d=M[y[777398-777392]]Q=M[y[-450131+450132]]N=A z=M[y[65070+-65068]]R=z(H,q)k=Q[R]V=d(N,k,Z)d=M[y[-1005303+1005309]]N=V z=M[y[-1011917-(-1011918)]]q=U(669325+-712718)R=M[y[332158+-332156]]H=R(q,i)Q=z[H]k=d(N,Q,l)N=k i=U(-607804-(-564387))d=M[y[946693-946687]]R=M[y[-430235+430236]]H=M[y[-110611-(-110613)]]q=H(i,w)z=R[q]Q=d(N,z,B)N=Q A={N}d=f[U(-950562-(-907153))]end else if d&lt;9021238-(-322163)then A=Q d=z d=Q and 14453186-(-1045109)or 9343865-(-488851)else s=s+F g=not L A=s&lt;=P A=g and A g=s&gt;=P g=L and g A=g or A g=11628514-(-682613)d=A and g A=703504+2558064 d=d or A end end end end end else if d&lt;12053575-(-690434)then if d&lt;698413+10357484 then if d&lt;10783021-814203 then if d&lt;372920+9239571 then if d&lt;-609189+10107928 then if d&lt;-1008307+10483605 then N=A V=U(228252+-271624)A=f[V]V=U(484147-527545)d=A[V]V=O()k=U(-506819-(-463428))M[V]=d A=f[k]k=U(-89963+46607)d=A[k]k=d H=U(18932-62323)z=d R=f[H]Q=R d=R and 934504+4090791 or 9227803-126192 else d=true d=171906+699283 end else d=-994816+16548903 end else if d&lt;-955236+10921165 then if d&lt;833017+9072266 then z=U(-252994+209624)Q=f[z]A=Q d=642959+14855336 else F=U(-67298-(-23915))d=f[F]g=U(202117+-245529)L=f[g]F=d(L)d=U(-330458+287020)f[d]=F d=741762+8801411 end else S=M[n]d=S and 13642795-550200 or-1040657+13143021 o=S end end else if d&lt;10898857-249172 then if d&lt;9371747-(-940519)then if d&lt;160614+10046504 then q=nil i=nil n=t(n)n=nil k=nil R=nil k=U(-902933-(-859542))N=nil B=t(B)Q=t(Q)N=U(-158915+115543)V=t(V)V=U(118856-162228)w=t(w)l=t(l)l=O()R={}M[l]=n H=nil z=t(z)Z=t(Z)n=O()q={}Z=nil i=-827062-(-827063)M[n]=Z B=f[N]N=U(459519+-502918)Z=B[N]B=O()M[B]=Z N=f[V]w=87402-87146 L=w V=U(531007+-574405)Q=U(-924106-(-880670))Z=N[V]V=f[k]k=U(634448-677858)H=O()N=V[k]k=f[Q]z=O()Q=U(-39149-4282)V=k[Q]k=655298-655298 d=813707+-421194 Q=O()M[Q]=k k=-130743-(-130745)M[z]=k w=1369-1368 k={}M[H]=R R=462941-462941 g=w w=-451033-(-451033)C=g&lt;w w=i-g else A=U(432386-475824)d=f[A]x=U(738554+-781966)A=f[x]x=U(-839778+796366)f[x]=d x=U(692373+-735811)f[x]=A x=M[y[671367+-671366]]d=53581+10527036 n=x()end else d=true d=d and 10139021-(-141156)or 6528690-846235 end else if d&lt;927894+9749229 then L=U(450484-493922)d=f[L]L=U(350113+-393525)f[L]=d d=420926+9122247 else d=A and 796190+3132639 or 1008041+1274993 end end end else if d&lt;422799+11885060 then if d&lt;1017507+10649695 then if d&lt;-486726+12045529 then if d&lt;-928561+12389430 then d=M[y[-936818+936828]]n=M[y[323068+-323057]]x[d]=n d=M[y[30687-30675]]n={d(x)}d=f[U(-163324+119972)]A={J(n)}else N=6064193436059-880276 n=M[y[206595-206594]]Z=M[y[560540-560538]]B=U(-174855+131434)d=U(327839+-371240)x=v[1013402+-1013401]d=x[d]l=Z(B,N)A=n[l]d=d(x,A)d=d and 11643364-(-175464)or 686262+13419318 end else N=-727632+4251258511883 n=M[y[-205029-(-205030)]]Z=M[y[599967-599965]]B=U(857415+-900778)l=Z(B,N)A=n[l]d=U(217939-261340)d=x[d]d=d(x,A)d=d and-794620+17519595 or 18073+4676847 end else if d&lt;11204672-(-985851)then if d&lt;782058+11101003 then A=M[y[511432+-511431]]B=234873+17209183652308 n=M[y[-700952+700954]]l=U(384060-427489)Z=n(l,B)d=A[Z]A={d}d=f[U(759835+-803246)]else M[n]=o D=420882-420881 h=M[W]e=h+D a=I[e]S=R+a a=-30307-(-30563)d=S%a e=M[G]a=H+e e=537778-537522 R=d d=652287+11630417 S=a%e H=S end else g=t(g)C=t(C)Y=t(Y)I=nil G=t(G)d=8757605-(-612132)W=t(W)E=t(E)end end else if d&lt;-667958+13188444 then if d&lt;11630581-(-767877)then if d&lt;-212026+12531734 then g=O()a=U(641170-684553)G=85472-85372 W=226252-225997 C=U(-739439-(-696067))M[g]=s A=f[C]C=U(-399543+356145)d=A[C]C=367027-367026 A=d(C,G)Y=-529133-(-529134)I=3897+-3895 C=O()M[C]=A d=M[V]G=397450-397450 A=d(G,W)D=-744835+744835 G=O()M[G]=A W=734790+-734789 d=M[V]E=M[C]A=d(W,E)W=O()M[W]=A A=M[V]E=A(Y,I)A=1017730-1017729 d=E==A E=O()M[E]=d A=U(157041-200463)X=1021142-1011142 S=f[a]e=M[V]h={e(D,X)}a=S(J(h))I=U(-990544-(-947124))d=U(276055-319429)S=U(-462639-(-419219))o=a..S Y=I..o d=i[d]d=d(i,A,Y)Y=O()I=U(-687491-(-644077))M[Y]=d A=f[I]o=K(-1000092+6515083,{V,g,z;Z;n,w,E;Y,C;W;G;Q})I={A(o)}d={J(I)}I=d d=M[E]d=d and 1165695-(-887100)or 725345+9240674 else k=z F=U(-869680+826244)P=f[F]F=U(806695-850125)s=P[F]P=s(x,k)s=M[y[-922708-(-922714)]]F=s()w=P+F k=nil d=13635665-1043731 i=w+N F=218153+-218152 w=833398+-833142 q=i%w w=Z[n]N=q P=N+F s=l[P]i=w..s Z[n]=i end else k=697667+-697667 n=Z Q=-468819+469074 d=M[y[961060-961059]]V=d(k,Q)x[n]=V d=467306+6994171 n=nil end else if d&lt;38893+12639754 then z=z+R k=z&lt;=Q q=not H k=q and k q=z&gt;=Q q=H and q k=q or k q=781012+11587308 d=k and q k=13983160-167912 d=d or k else L=209990-209990 w=#q i=w==L d=i and 16811287-780394 or 8462405-917312 end end end end else if d&lt;14487343-267620 then if d&lt;-1031294+14360545 then if d&lt;13395723-433333 then if d&lt;12447188-(-423856)then if d&lt;-752460+13592190 then d={}n=-33729+33730 x=d Z=M[y[772224+-772215]]l=Z Z=-203176-(-203177)B=Z Z=-980578+980578 d=7381949-(-79528)N=B&lt;Z Z=n-B else B=1790750824680-(-551513)A=M[y[-890540+890541]]n=M[y[793214+-793212]]l=U(779418+-822824)Z=n(l,B)d=A[Z]A={d}d=f[U(-411969+368580)]end else d=25737+12256967 M[n]=A end else if d&lt;-149741+13380467 then if d&lt;-251742+13402707 then a=-808166-(-808167)S=I[a]d=525411+11576953 o=S else Z=386192-386110 n=M[y[-67719-(-67722)]]x=n*Z n=744836+-744579 A=x%n M[y[-233138+233141]]=A d=13763075-441062 end else Z=345360-345359 n=M[y[-644450+644453]]x=n~=Z d=x and 5233107-127608 or-531148+13746815 end end else if d&lt;97204+13863559 then if d&lt;13896664-364663 then if d&lt;13162814-(-227172)then A={n}d=f[U(752544+-795962)]else P=R==H s=P d=-787542+4324707 end else d=1030996+12314424 N=nil V=nil l=nil end else if d&lt;13162277-(-880578)then A={}d=true M[y[600183-600182]]=d d=f[U(-748335+704912)]else n=M[y[-679373+679374]]N=17474857308674-504377 d=U(383764-427165)Z=M[y[-484302+484304]]d=x[d]B=U(11953+-55341)l=Z(B,N)A=n[l]d=d(x,A)d=d and 12558634-(-310619)or-985566+12545783 end end end else if d&lt;16438982-669605 then if d&lt;-279424+15750699 then if d&lt;-798481+16021152 then if d&lt;-800625+15809935 then x=nil M[y[540391-540386]]=A d=1473783-(-809251)else k=M[y[-121595-(-121596)]]H=1318061802116-(-884705)Q=M[y[176557+-176555]]d=-1027633+7755385 R=U(823199-866596)z=Q(R,H)V=k[z]N=n~=V l=N end else n=M[y[208580-208578]]Z=M[y[-752249-(-752252)]]x=n==Z A=x d=10119311-(-752603)end else if d&lt;16470782-818060 then if d&lt;366209+15138919 then Q=O()F=U(-362549+319166)M[Q]=A R=-796769+796834 i=m(5621061-356901,{})z=333399-333396 d=M[V]A=d(z,R)d=-610523+610523 R=d q=U(-301592-(-258178))z=O()M[z]=A d=934289-934289 A=f[q]H=d q={A(i)}d={J(q)}q=d A=-437712+437714 d=q[A]i=d A=U(-658833+615406)d=f[A]w=M[Z]P=f[F]F=P(i)P=U(1033596+-1077018)s=w(F,P)w={s()}A=d(J(w))w=O()M[w]=A s=M[z]P=s s=-940478-(-940479)F=s A=-628738-(-628739)s=872556-872556 d=10257884-888147 L=F&lt;s s=A-F else d=true d=d and 5570568-121871 or 89531+16305348 end else d=true d=d and 5233764-30112 or 1261365-390176 end end else if d&lt;17010821-635658 then if d&lt;-1047480+17272287 then if d&lt;706569+15319590 then i=w G=i q[i]=G i=nil d=612055+-219542 else R=nil G={}w=O()i={}N=nil M[w]=i a=nil i=O()I=U(656052-699418)C=U(-269241-(-225882))Z=nil E=U(-262986+219610)L=K(539638+1963605,{w;Q;z,B})V=nil M[i]=L g=O()L={}M[g]=L L=f[C]Y=M[g]W={[E]=Y,[I]=a}C=L(G,W)M[n]=C q=nil k=nil L=K(6139326-261686,{g,w;H;Q,z,i})w=t(w)q=U(-400403+356971)z=t(z)H=t(H)i=t(i)g=t(g)M[l]=L B=t(B)B=U(578392-621808)Z=f[B]Q=t(Q)Q=U(-995709-(-952306))k=f[Q]z=M[n]i=170891+17585410835569 R=M[l]H=R(q,i)Q=z[H]H=U(-837589+794220)V=k[Q]Q=M[n]z=M[l]q=-961371+27739259706832 R=z(H,q)k=Q[R]N=V[k]B=Z(N)Z=O()M[Z]=B d=f[U(-624584-(-581209))]B={}z=U(675412-718780)R=971755+15493708367939 V=M[n]k=M[l]Q=k(z,R)N=V[Q]V=O()A={B}k=m(91667+11396200,{n;l})M[V]=N N=O()z=U(776098-819493)Q=r(940957+676958,{n,l})M[N]=k k=O()M[k]=Q Q=K(-300953+8820777,{n,l,N,Z,V;k})B[z]=Q end else d=287102+7369024 end else if d&lt;15726166-(-845106)then d=f[U(1048409+-1091834)]A={}else l=U(-510524-(-467146))B=-540842+22742132664840 A=M[y[-587685-(-587686)]]n=M[y[372546+-372544]]Z=n(l,B)d=A[Z]A={d}d=f[U(529831+-573191)]end end end end end end end d=#j return J(A)end,853894-853894,function(f,U)local J=Z(U)local v=function(v,y,j,c,A)return d(f,{v,y;j;c;A},U,J)end return v end,function(f,U)local J=Z(U)local v=function(v,y,j)return d(f,{v,y,j},U,J)end return v end,function(f,U)local J=Z(U)local v=function(v,y,j,c,A,M,x)return d(f,{v;y;j,c,A;M,x},U,J)end return v end,function(f,U)local J=Z(U)local v=function(...)return d(f,{...},U,J)end return v end,function(f,U)local J=Z(U)local v=function(v,y,j,c)return d(f,{v,y,j;c},U,J)end return v end,function(f)for U=386740-386739,#f,-615327-(-615328)do x[f[U]]=x[f[U]]+(783789+-783788)end if v then local d=v(true)local J=j(d)J[U(-64448+21072)],J[U(-370254+326897)],J[U(-756316+712882)]=f,l,function()return 223729+-4106639 end return d else return y({},{[U(-1085963-(-1042606))]=l,[U(-259942-(-216566))]=f;[U(-992292-(-948858))]=function()return-3764917-117993 end})end end return(B(2237256-109466,{}))(J(A))end)(getfenv and getfenv()or _ENV,unpack or table[U(548285-591655)],newproxy,setmetatable,getmetatable,select,{...})end)(...)</ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="ModuleScript" referent="RBXC11ABC8AA10E49539DC424BBE5860C11">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">FeedbackWidgetWindow</string>
				<string name="ScriptGuid">{6278AD55-0B19-4026-9FB5-8D5EE2AE20B1}</string>
				<ProtectedString name="Source">--[[ v1.0.0 https://wearedevs.net/obfuscator ]] return(function(...)local B={&quot;\088\116\079\115&quot;;&quot;\110\074\110\106\122\053\106\053\113\112\070\073\118\057\087\073\099\078\061\061&quot;,&quot;\121\047\084\122\056\078\061\061&quot;;&quot;\050\081\102\071\048\081\050\049\054\086\110\089\107\081\050\104\107\081\050\051\054\113\061\061&quot;,&quot;\082\097\104\056\055\078\061\061&quot;;&quot;\050\074\076\121\074\052\102\053\050\073\071\084\099\050\118\069&quot;;&quot;\056\112\083\113\082\102\050\056\099\090\089\074\055\089\050\081&quot;,&quot;\048\112\050\071\055\090\069\089&quot;,&quot;\056\105\120\119\056\104\083\084\099\053\118\103\069\101\083\073\122\065\061\061&quot;;&quot;\107\102\069\080\057\052\107\113\110\057\108\079\084\074\071\051\110\079\061\061&quot;;&quot;\086\049\067\049\081\057\122\087\116\113\061\061&quot;,&quot;&quot;;&quot;\077\116\116\108&quot;;&quot;\110\081\050\053\107\105\083\109\082\113\061\061&quot;,&quot;\048\084\114\106\104\113\061\061&quot;,&quot;\099\052\106\117\099\052\083\053&quot;;&quot;\112\087\053\107\086\113\061\061&quot;;&quot;\052\115\087\071\069\052\110\117\107\081\102\080\055\081\074\061&quot;;&quot;\113\073\108\109\055\112\074\061&quot;,&quot;\075\073\117\117\048\078\061\061&quot;;&quot;\066\098\068\082&quot;,&quot;\116\051\081\055\069\121\112\057\090\056\102\083\056\085\087\108\112\056\090\082\104\079\061\061&quot;,&quot;\057\052\117\112\122\051\089\113\101\090\120\049\110\052\107\081\107\052\076\061&quot;;&quot;\052\115\087\103\075\079\061\061&quot;;&quot;\110\073\050\121\074\073\050\049\107\112\089\104\069\113\061\061&quot;;&quot;\076\050\122\071\100\102\121\105\114\069\051\104\047\104\077\082\106\116\113\113\115\081\067\047\100\113\061\061&quot;;&quot;\085\121\119\087\086\066\112\120\103\086\112\121\047\113\061\061&quot;;&quot;\074\080\107\110\103\074\117\113\108\079\079\056\076\074\077\053\057\113\061\061&quot;,&quot;\056\102\054\061&quot;;&quot;\110\057\043\115\055\113\061\061&quot;,&quot;\084\081\071\106\050\113\061\061&quot;;&quot;\099\106\089\119\087\080\121\074&quot;,&quot;\102\049\069\057\113\079\061\061&quot;;&quot;\100\071\121\057\067\065\061\061&quot;,&quot;\110\081\083\057\074\066\110\115\050\089\117\105\075\073\079\070\055\113\061\061&quot;;&quot;\115\052\119\112\097\099\106\048\117\086\067\108\084\080\118\055\090\113\061\061&quot;;&quot;\106\065\107\067\118\055\113\115\043\079\061\061&quot;,&quot;\043\076\104\116\103\074\052\081\054\051\072\087\051\078\061\061&quot;;&quot;\075\119\120\106\090\086\051\078\083\109\054\098\085\065\061\061&quot;;&quot;\055\066\054\061&quot;,&quot;\079\114\083\102\100\047\067\061&quot;;&quot;\110\073\050\121\113\073\117\120\055\081\110\049\069\057\070\061&quot;,&quot;\084\078\061\061&quot;;&quot;\107\081\087\053\107\105\083\120\055\112\048\061&quot;;&quot;\107\081\087\072\107\057\115\080\069\052\054\061&quot;;&quot;\107\081\102\080\055\081\074\061&quot;,&quot;\055\074\069\079\118\066\117\114\107\073\089\110\055\073\115\099\110\079\061\061&quot;,&quot;\048\090\110\049\099\057\043\103&quot;,&quot;\069\086\079\070\122\102\102\080\113\101\050\072\057\105\050\099\050\079\061\061&quot;;&quot;\101\121\071\070\050\052\083\106\110\121\054\073\099\090\118\122\122\113\061\061&quot;;&quot;\081\098\102\104\047\078\061\061&quot;;&quot;\048\073\050\121\055\057\050\121\075\052\110\117\075\112\108\089&quot;,&quot;\052\115\087\067\069\057\070\061&quot;;&quot;\087\114\089\108\047\122\087\072\087\116\086\072\081\113\061\061&quot;;&quot;\102\100\084\083\070\074\121\061&quot;;&quot;\056\089\118\114\101\051\050\072\075\073\087\051\069\113\061\061&quot;;&quot;\069\090\118\115\075\078\061\061&quot;;&quot;\107\073\102\049\055\078\061\061&quot;,&quot;\084\074\087\104\099\105\069\102\122\104\118\111\075\073\069\104\056\115\075\061&quot;;&quot;\048\112\102\072\069\081\087\071&quot;,&quot;\107\077\100\104\109\053\069\055\099\100\100\098\116\113\061\061&quot;;&quot;\087\113\054\089\066\118\077\114&quot;,&quot;\070\056\119\052\043\097\084\076\043\103\098\113\055\078\061\061&quot;;&quot;\121\049\118\048\056\120\082\082\100\105\079\117\081\043\084\100\101\090\113\089\071\079\061\061&quot;,&quot;\113\090\083\089\075\052\110\089\110\081\087\104\099\115\107\120\069\081\107\089\107\102\106\067\107\057\107\120\055\051\107\115\099\113\061\061&quot;;&quot;\112\100\050\102&quot;,&quot;\047\122\090\110\110\052\117\111\056\081\071\053\075\065\061\061&quot;,&quot;\048\081\118\117\055\081\079\061&quot;,&quot;\056\121\102\081\099\073\079\108\075\074\117\057\110\057\087\076\055\050\051\061&quot;;&quot;\070\097\043\070\080\120\067\121\057\076\113\110\114\065\061\061&quot;;&quot;\102\097\100\080\097\113\061\061&quot;,&quot;\122\074\107\074\083\079\061\061&quot;;&quot;\069\112\108\109\055\090\054\061&quot;;&quot;\107\081\089\104\099\079\061\061&quot;;&quot;\116\116\056\116\054\065\061\061&quot;,&quot;\069\052\083\049\055\090\054\061&quot;;&quot;\054\078\116\066\105\078\119\057\121\116\050\065\108\077\099\101\111\081\085\080\112\117\117\043\065\075\076\077\100\051\071\057\083\120\066\071\114\049\074\080\071\047\097\066\057\110\120\090\110\104\101\099\100\101\088\110\113\102\119\071\050\053\117\121\086\085\120\117\119\118\050\116\118\074\122\068\067\106\118\089\054\090\103\101\104\103\043\118\081\103\122\121\075\087\088\117\055\087\102\111\114\054\079\106\105\108\043\066\113\112\068\098\120\050\079\115\070\065\072\057\097\071\114\118\122\069\080\114\102\079\115\110\077\087\050\081\108\087\043\056\075\105\121\100\071\106\073\090\050\073\108\106\083\055\048\100\119\113\111\074\114\065\061\061&quot;,&quot;\113\073\087\072\055\112\050\104\107\065\061\061&quot;;&quot;\107\081\102\053\099\079\061\061&quot;;&quot;\116\069\056\043&quot;;&quot;\084\101\118\052&quot;,&quot;\099\074\115\090\075\101\118\117\101\066\089\101\122\052\122\061&quot;;&quot;\075\103\089\121\069\113\061\061&quot;;&quot;\055\081\115\119\118\052\102\106\118\052\118\072\055\081\089\067&quot;,&quot;\090\043\050\049\101\112\076\061&quot;,&quot;\071\073\116\113\066\111\056\121\080\065\061\061&quot;;&quot;\122\082\053\097\087\108\080\117&quot;;&quot;\084\104\053\104&quot;;&quot;\097\105\107\113\082\113\061\061&quot;,&quot;\043\098\076\054&quot;,&quot;\118\057\115\052\050\051\108\110\074\115\110\108\048\105\118\104\056\078\061\061&quot;,&quot;\106\115\111\073\103\119\119\106\105\086\102\114\072\083\078\061&quot;;&quot;\099\075\085\099\086\086\087\082\052\097\106\101\112\087\074\047\067\120\068\081\084\118\081\119\090\118\051\113\115\067\048\079&quot;;&quot;\055\057\102\121\099\065\061\061&quot;;&quot;\088\090\068\052&quot;,&quot;\052\115\087\120\055\112\110\089\082\065\061\061&quot;;&quot;\051\077\043\090\081\068\102\088&quot;,&quot;\055\066\086\061&quot;,&quot;\075\103\050\120\055\081\110\085\069\112\050\089\069\081\083\117\075\073\071\085\107\073\089\072\069\081\087\090&quot;;&quot;\055\081\050\072&quot;,&quot;\090\077\068\101\057\079\061\061&quot;,&quot;\057\121\054\079\087\078\061\061&quot;;&quot;\047\114\110\090\070\081\065\074\075\049\090\080\056\085\110\090\051\097\070\085\108\086\070\089\110\122\110\080&quot;;&quot;\107\057\043\079\075\057\118\047&quot;,&quot;\082\089\083\070\074\103\069\069\048\090\117\115\107\115\050\109&quot;;&quot;\106\122\116\099&quot;;&quot;\085\109\049\113\055\113\061\061&quot;;&quot;\066\102\098\108\102\085\106\068\085\116\085\105\080\101\054\061&quot;;&quot;\101\107\081\070&quot;,&quot;\074\081\087\053\107\086\102\053\082\057\043\104&quot;,&quot;\069\073\102\071\069\113\061\061&quot;;&quot;\048\057\115\075\122\081\051\070\110\103\120\101\084\086\110\121\099\079\061\061&quot;,&quot;\048\073\118\049\099\052\106\121&quot;,&quot;\084\080\078\089\069\068\076\120\084\078\061\061&quot;,&quot;\049\049\086\116&quot;,&quot;\048\104\118\081\069\121\102\074\082\112\115\120\048\066\118\120\055\065\061\061&quot;,&quot;\075\073\087\072\075\073\102\121&quot;,&quot;\069\073\115\117\107\081\118\076&quot;,&quot;\069\121\067\112\055\051\105\111\100\102\053\115\118\113\061\061&quot;,&quot;\104\068\097\098\110\078\061\061&quot;,&quot;\080\078\075\107\049\083\103\070\090\087\070\083\066\121\069\067\089\116\083\055\118\080\122\061&quot;,&quot;\110\081\087\104\099\115\107\120\069\081\107\089\107\102\106\067\107\057\107\120\055\051\107\115\099\074\089\072\069\112\098\061&quot;,&quot;\080\113\083\116\051\120\071\048\097\078\061\061&quot;}local function h(h)return B[h+(-181470+207830)]end for h,d in ipairs({{-696560+696561,-596113+596236},{-47643+47644;-386567+386594},{145207+-145179;365922-365799}})do while d[86979-86978]&lt;d[73580+-73578]do B[d[537057+-537056]],B[d[-489233+489235]],d[727988-727987],d[674523-674521]=B[d[607508+-607506]],B[d[559592-559591]],d[393965-393964]+(-736007-(-736008)),d[914210+-914208]-(-316239+316240)end end do local h=type local d={H=662374-662328,W=191694-191633,[&quot;\054&quot;]=703050-703042,[&quot;\049&quot;]=888177+-888127,Q=-991869+991875;A=-421121+421121;a=435365-435306;g=-369859-(-369898),z=-729581+729593,[&quot;\052&quot;]=558750-558727,D=793177-793175;i=-113218-(-113225),F=-920347-(-920403);t=254070+-254060;V=-720369-(-720373);l=-350855-(-350904);[&quot;\056&quot;]=-388075-(-388093),s=404908-404855,U=826618-826587;N=260714+-260682,P=-730152-(-730186);[&quot;\057&quot;]=34666+-34644;X=11888-11830;p=-936575+936613;d=-748761-(-748824);b=-909764-(-909824);c=-216578+216604,f=492580-492575,[&quot;\050&quot;]=288752+-288731,[&quot;\051&quot;]=-20926+20962,[&quot;\043&quot;]=-885968+886025,r=-647436+647451;j=875884+-875883,[&quot;\048&quot;]=-1042911-(-1042939);M=379818-379756;Z=-739688+739743,[&quot;\053&quot;]=539759-539708;e=112037+-112018,Y=-651320-(-651357);R=732937+-732907,C=173025+-172981;J=-483385+483405,I=-731871+731925;K=561555-561531,h=280656-280621,q=341646-341630,L=-920777-(-920817),x=213152-213111,v=-1038253+1038266,w=-861194+861205,E=520410-520385;[&quot;\047&quot;]=928158+-928115;O=-1001619+1001667;o=-40242+40284,G=310607+-310562;[&quot;\055&quot;]=898642+-898615;B=-187946-(-187949);S=336892+-336883,y=458458-458406;T=-911052-(-911066);m=-480845+480892,k=-577128-(-577157),u=931447+-931414,n=150154-150137}local G=string.len local L=table.concat local N=table.insert local K=string.char local U=math.floor local s=B local T=string.sub for B=1032375-1032374,#s,-963856+963857 do local A=s[B]if h(A)==&quot;\115\116\114\105\110\103&quot;then local h=G(A)local I={}local f=452692-452691 local b=-381636-(-381636)local X=188588-188588 while f&lt;=h do local B=T(A,f,f)local G=d[B]if G then b=b+G*(-878402-(-878466))^((-647038+647041)-X)X=X+(258599-258598)if X==293265+-293261 then X=834773+-834773 local B=U(b/(-785240-(-850776)))local h=U((b%(177213+-111677))/(-275446-(-275702)))local d=b%(46525+-46269)N(I,K(B,h,d))b=-324113+324113 end elseif B==&quot;\061&quot;then N(I,K(U(b/(-837704-(-903240)))))if f&gt;=h or T(A,f+(-207945-(-207946)),f+(70197-70196))~=&quot;\061&quot;then N(I,K(U((b%(815897+-750361))/(-412708-(-412964)))))end break end f=f+(993011+-993010)end s[B]=L(I)end end end return(function(B,G,L,N,K,U,s,X,W,a,J,I,T,d,V,f,g,t,n,A,e,b)T,W,I,b,g,e,V,f,t,J,X,a,d,A,n={},function(B,h)local G=b(h)local L=function(...)return d(B,{...},h,G)end return L end,function()f=(-320275-(-320276))+f A[f]=-106750+106751 return f end,function(B)for h=-624985+624986,#B,911526-911525 do A[B[h]]=A[B[h]]+(372703+-372702)end if L then local d=L(true)local G=K(d)G[h(-369669+343432)],G[h(-135283-(-108974))],G[h(-830457-(-804177))]=B,X,function()return-5058005-(-1030755)end return d else return N({},{[h(906966+-933275)]=X;[h(134182+-160419)]=B,[h(-576661-(-550381))]=function()return-3179057-848193 end})end end,function(B,h)local G=b(h)local L=function(L,N)return d(B,{L,N},h,G)end return L end,function(B,h)local G=b(h)local L=function(L,N,K)return d(B,{L,N,K},h,G)end return L end,function(B,h)local G=b(h)local L=function(L,N,K,U,s)return d(B,{L;N;K;U;s},h,G)end return L end,-551449-(-551449),function(B)A[B]=A[B]-(-391837-(-391838))if A[B]==163952+-163952 then A[B],T[B]=nil,nil end end,function(B,h)local G=b(h)local L=function(L,N,K,U)return d(B,{L;N,K;U},h,G)end return L end,function(B)local h,d=-746060+746061,B[1022227-1022226]while d do A[d],h=A[d]-(328357-328356),(-62330-(-62331))+h if-657048-(-657048)==A[d]then A[d],T[d]=nil,nil end d=B[h]end end,function(B,h)local G=b(h)local L=function(L)return d(B,{L},h,G)end return L end,function(d,L,N,K)local r,i,C,j,D,Q,p,w,z,Y,o,y,x,q,v,F,l,f,P,A,b,s,E,H,X,c,O,W,u,k,R,m,Z,M while d do if d&lt;8071602-(-65419)then if d&lt;-908119+5894812 then if d&lt;-168432+2509870 then if d&lt;468299+1050225 then if d&lt;930649-200697 then if d&lt;-443268+971980 then if d&lt;-264560-(-683773)then j=h(-400312+373960)E=B[j]s=E d=329258+8791030 else s=h(-195096-(-168808))E=e(-969544+5754276,{})d=B[s]X=h(-893383+867094)A=T[N[70186-70182]]P=h(544279+-570544)b=B[X]i=B[P]P={i(E)}Q={G(P)}i=957049-957047 W=Q[i]X=b(W)b=h(-23818-2524)f=A(X,b)A={f()}s=d(G(A))f=T[N[-819792+819797]]A=s s=f d=f and 10499125-(-736258)or 9122455-(-752254)end else O=h(-484856-(-458569))q=B[O]O=h(893004+-919356)p=q[O]d=1429311-(-80679)E=p end else if d&lt;467850-(-912060)then if d&lt;1702455-749339 then s={f}d=B[h(398798+-425081)]else d=true d=d and-932760+3416952 or 6513670-11983 end else s=E d=j d=E and 767687+8352601 or 727505+-310149 end end else if d&lt;690180+1386383 then if d&lt;-790914+2664926 then if d&lt;1376440-(-401065)then u=T[f]d=u and 531783+5353698 or 9359955-(-109552)s=u else s=8990799-772335 f=h(-1064212-(-1037960))b=-508635+4645574 A=f^b d=s-A A=d s=h(264269-290571)d=s/A s={d}d=B[h(-645799-(-619455))]end else c=1020943-1020942 T[f]=u Y=T[x]H=Y+c r=z[H]l=p+r r=-720666-(-720922)d=l%r H=T[Z]p=d r=q+H H=452192+-451936 l=r%H q=l d=100100+7879665 end else if d&lt;1742165-(-357926)then Y=-406300+406302 H=z[Y]d=-73965+3744953 Y=T[y]r=H==Y u=r else b=-854675-(-854707)f=T[N[400261-400258]]A=f%b X=T[N[-167445-(-167449)]]p=-840585-(-840598)i=T[N[846469-846467]]v=T[N[-1015619+1015622]]E=-993795+993797 O=v-A v=-894267-(-894299)q=O/v j=p-q P=E^j Q=i/P E=866872+-866616 W=X(Q)X=858214+4294109082 b=W%X W=788952-788950 X=W^A P=-112754+112755 f=b/X X=T[N[245533-245529]]i=f%P P=4294472153-(-495143)Q=i*P W=X(Q)X=T[N[755471-755467]]p=-611244+611500 Q=X(f)b=W+Q W=349275-283739 f=nil A=nil i=373464+-307928 X=b%W Q=b-X W=Q/i i=-805310-(-805566)Q=X%i P=X-Q i=P/E E=766208+-765952 P=W%E d=15695356-(-762621)j=W-P E=j/p W=nil b=nil X=nil j={Q,i;P,E}T[N[-504128+504129]]=j Q=nil i=nil E=nil P=nil end end end else if d&lt;-312008+4757856 then if d&lt;555030+2955967 then if d&lt;323160+2630663 then if d&lt;1013457+1385464 then f=T[N[-253440-(-253441)]]X=T[N[691597+-691595]]i=h(-997252-(-970911))W=T[N[-713113+713116]]P=-123665+10336411137502 Q=W(i,P)b=X[Q]A=f[b]b=T[N[67429-67427]]X=T[N[-108897-(-108900)]]Q=h(-111805-(-85508))i=20561557998830-681864 W=X(Q,i)f=b[W]s=A[f]f=T[N[-510219-(-510221)]]b=T[N[-34802-(-34805)]]W=h(884033+-910351)Q=4414910053467-(-101292)X=b(W,Q)A=f[X]d=s[A]A=I()T[A]=d f=T[A]s=#f f=950581-950576 d=s&lt;f d=d and-587153+16413247 or 648445+3568909 else d=T[i]D=-366991-(-366997)R=-365325-(-365326)k=d(R,D)d=h(-732160+705867)D=h(-1005041-(-978748))B[d]=k R=B[D]D=-861991-(-861993)d=R&gt;D d=d and 373745+7056574 or 9971832-(-849271)end else d=true d=6550689-352068 end else if d&lt;579402+3808519 then if d&lt;3119839-(-799252)then s=u d=l d=9360951-(-108556)else P=10972144463992-(-222077)f=T[N[-263386+263387]]X=T[N[-800235-(-800237)]]W=T[N[-38726+38729]]i=h(702093-728443)Q=W(i,P)b=X[Q]Q=h(1040356+-1066619)s=f[b]b=T[N[121323+-121321]]i=18386566797515-292698 X=T[N[802830+-802827]]W=X(Q,i)f=b[W]W=h(-416419+390157)Q=1243690628871-128196 d=s[f]f=T[N[-326840+326842]]b=T[N[219153+-219150]]i=563641+13953027801000 X=b(W,Q)s=f[X]b=T[N[-23386+23388]]X=T[N[-385929-(-385932)]]Q=h(-960013+933743)W=X(Q,i)f=b[W]d[s]=f s=h(-684685-(-658420))b=g(-373204+5457436,{N[-290575-(-290579)];N[485267-485262];N[850944-850942];N[-76031-(-76034)],A})d=B[s]X={d(b)}s=X[-733585-(-733586)]f=X[894716-894714]b=s d=b and-850046+7730243 or 417904+12770084 end else f=T[N[725538-725535]]b=-822568+822637 A=f*b f=121871+-121614 s=A%f T[N[90443+-90440]]=s d=13173900-761439 end end else if d&lt;-266569+5155478 then if d&lt;5419665-612017 then if d&lt;4450082-(-273093)then d=true d=d and 16366994-563650 or 5313102-(-885519)else b=7034906-(-311728)s=7009499-204061 f=h(571141+-597445)A=f^b d=s-A s=h(518107+-544358)A=d d=s/A s={d}d=B[h(301751-328075)]end else k=T[f]C=k d=k and 12800951-536764 or 10743639-861993 end else if d&lt;-777261+5733534 then d=767627+-5079 else A=h(-686434+660177)d=B[A]b=801543+-801543 f=T[N[275117-275109]]A=d(f,b)d=-701128+8489224 end end end end else if d&lt;7389169-587571 then if d&lt;847758+5045664 then if d&lt;5509964-167794 then if d&lt;4864917-(-399830)then if d&lt;4433931-(-629048)then d=T[N[414007+-414000]]d=d and-807245+5766532 or 7525045-(-263051)else d=T[N[575494+-575493]]E=h(225385+-251707)A=T[N[-537377-(-537379)]]f=T[N[-1006240-(-1006241)]]j=19615032178295-(-421174)s=h(-1038943+1012597)Q=T[N[856919+-856916]]i=T[N[-121974+121978]]P=i(E,j)W=Q[P]Q=T[N[-645549+645554]]X={[W]=Q}W=h(-1024619-(-998342))s=d[s]W=f[W]b={W(f,X)}s=s(d,A,G(b))d=B[h(-1986+-24298)]s={}end else d=10679114-(-71728)Q=T[W]s=Q end else if d&lt;5172756-(-702594)then if d&lt;-752548+6119216 then d=s and 845050-424980 or-316866+5371273 else l=T[f]d=l and 14614014-(-809466)or 1798601-(-109823)u=l end else Y=489000+-488999 l=d H=z[Y]Y=false r=H==Y u=r d=r and-715676+2811627 or-285392+3956380 end end else if d&lt;5412100-(-983492)then if d&lt;7156857-959270 then if d&lt;-243506+6249104 then b=701181+-701112 f=T[N[210710-210708]]A=f*b f=3145037027651-(-912502)s=A+f f=-332772-(-332773)A=759155+35184371329677 d=s%A T[N[849808-849806]]=d A=T[N[505684-505681]]s=A~=f d=-583616+4980987 else d=true d=d and-45865+7957908 or 643460+15550398 end else d=g(464516+7580933,{X})k={d()}s={G(k)}d=B[h(-506549-(-480285))]end else if d&lt;-962971+7554171 then s={}d=B[h(-360819+334509)]else d=T[N[-166034-(-166044)]]f=T[N[348080+-348069]]A[d]=f d=T[N[-106608-(-106620)]]f={d(A)}s={G(f)}d=B[h(-521317-(-494990))]end end end else if d&lt;7298191-(-492071)then if d&lt;7796779-366342 then if d&lt;456714+6808825 then if d&lt;1045218+6028773 then j=-709172+4352559766046 X=T[N[564500-564499]]E=h(-976900-(-950553))Q=T[N[-169944-(-169946)]]i=T[N[827256-827253]]P=i(E,j)W=Q[P]s=X[W]E=16580334864976-814120 W=T[N[-275199+275201]]Q=T[N[-860522+860525]]P=h(-207319+181053)i=Q(P,E)P=5340511490126-(-260456)X=W[i]i=h(-451495-(-425140))d=s[X]E=-734556+2730945362515 X=T[N[-668059+668061]]W=T[N[-189826+189829]]Q=W(i,P)s=X[Q]W=T[N[513176-513174]]P=h(219438+-245686)Q=T[N[485967+-485964]]i=Q(P,E)X=W[i]d[s]=X X=h(129315-155569)j=34763797108528-(-337932)E=13508430466978-(-952560)s=B[X]W=T[N[-627584+627586]]P=h(-140897+114615)Q=T[N[998787+-998784]]i=Q(P,E)E=h(-799806-(-773561))X=W[i]d=s[X]X=12817-12816 s=d(X)X=T[N[-621708+621709]]Q=T[N[-761611-(-761613)]]i=T[N[469541+-469538]]P=i(E,j)W=Q[P]s=X[W]E=22374669164435-849632 W=T[N[371878-371876]]P=h(-53496+27191)Q=T[N[-174121-(-174124)]]i=Q(P,E)X=W[i]d=s[X]E=12885610557126-(-616618)i=h(89528+-115844)P=386265+13936842617984 X=T[N[212243-212241]]W=T[N[235431-235428]]Q=W(i,P)P=h(959627-985948)s=X[Q]W=T[N[-878567-(-878569)]]Q=T[N[592310-592307]]i=Q(P,E)X=W[i]d[s]=X d=T[N[1038681+-1038680]]X=T[N[246365+-246363]]P=502724+1570054919959 i=h(89525-115772)W=T[N[-685516+685519]]Q=W(i,P)s=X[Q]X=false d[s]=X d=T[N[-283185-(-283186)]]s=h(-464266+437947)s=d[s]s=s(d)s={}d=B[h(-575861-(-549575))]else s={}d=B[h(884112+-910354)]end else R=h(558193+-584482)d=B[R]o=h(671982-698340)D=B[o]R=d(D)d=h(-438024-(-411731))B[d]=R d=999825+7254697 end else if d&lt;231722+7417727 then C=C+R o=not D s=C&lt;=k s=o and s o=C&gt;=k o=D and o s=o or s o=14005791-870936 d=s and o s=-270189+5098178 d=d or s else d={}b=T[N[-633449+633458]]f=521282-521281 X=b A=d b=-870605-(-870606)W=b b=-1018069-(-1018069)Q=W&lt;b b=f-W d=-1322+11194026 end end else if d&lt;7428442-(-587812)then if d&lt;8652839-710570 then if d&lt;8365731-474237 then p=428411103411-(-481300)W=T[f]i=T[N[-734827+734828]]j=h(637790+-664028)P=T[N[67043+-67041]]E=P(j,p)Q=i[E]X=W[Q]Q=T[N[-57858-(-57859)]]s={}j=992950+13306184839550 i=T[N[-521432+521434]]E=h(47555+-73850)P=i(E,j)W=Q[P]b=X[W]W=T[N[-1014647+1014648]]E=14379758642990-(-553722)P=h(-635361+609026)A=nil Q=T[N[-957828-(-957830)]]i=Q(P,E)X=W[i]d=b[X]b=h(196409+-222664)b=d[b]X=J(410045+16261369,{f,N[-448661-(-448662)],N[-735637+735639];N[-624052-(-624056)],N[337506+-337501]})f=t(f)b=b(d,X)d=B[h(-408000+381674)]else A=h(319495+-345853)s=h(714179-740472)d=B[s]s=B[A]A=h(559296-585654)B[A]=d A=h(280269+-306562)B[A]=s A=T[N[592068+-592067]]d=6734479-537541 f=A()end else y=t(y)z=nil o=t(o)m=t(m)d=1030661+6400679 Z=t(Z)F=t(F)x=t(x)end else if d&lt;632799+7414773 then d=938961+5257977 else D=-581554-(-581554)d=102780+10016349 w=#O v=w==D end end end end end else if d&lt;12367891-(-740810)then if d&lt;12140743-906063 then if d&lt;11164247-507404 then if d&lt;8825530-(-684548)then if d&lt;8965728-(-274668)then if d&lt;8188224-(-794341)then d=564215-(-687602)else p=-740227+740292 E=I()T[E]=s d=T[i]j=-346110+346113 s=d(j,p)d=749175-749175 v=n(694991+1169347,{})j=I()O=h(28058+-54323)p=d T[j]=s d=-19517-(-19517)q=d R=h(555681+-581970)s=B[O]O={s(v)}s=481832-481830 d={G(O)}O=d d=O[s]v=d s=h(-610010-(-583722))d=B[s]w=T[b]k=B[R]R=k(v)k=h(-116702-(-90360))C=w(R,k)w={C()}s=d(G(w))w=I()T[w]=s s=-915416-(-915417)d=305611+7125729 C=T[j]k=C C=-650350-(-650351)R=C C=848241+-848241 D=R&lt;C C=s-R end else T[f]=s d=1045363+6934402 end else if d&lt;847447+9165818 then if d&lt;10517631-636278 then A=nil d=277345+4777062 T[N[-143949+143954]]=s else T[f]=C d=T[f]d=d and 15571451-730517 or-981038+4256104 end else w=-1028123+1028124 D=#O Z=-318900-(-318901)v=b(w,D)d=-169527+15831493 w=Q(O,v)D=T[q]v=nil m=w-Z o=i(m)D[w]=o w=nil end end else if d&lt;-205217+11024338 then if d&lt;10566787-(-229293)then if d&lt;11460378-713608 then X,i=W(b,X)d=X and 14670363-649602 or 7667262-(-123336)else P=h(-1017667-(-991380))Q=s i=h(776557-802796)s=B[i]i=h(714785+-741058)d=s[i]i=I()T[i]=d s=B[P]P=h(240433+-266772)d=s[P]j=d q=h(743200+-769487)P=d p=B[q]d=p and 1497516-885778 or 873419+636571 E=p end else s={}d=true T[N[307944-307943]]=d d=B[h(701356+-727707)]end else if d&lt;-1020120+11851489 then D=h(-500142-(-473849))d=B[D]D=h(-208071-(-181713))B[D]=d d=8369728-115206 else b=b+W f=b&lt;=X i=not Q f=i and f i=b&gt;=X i=Q and i f=i or f i=352330+12175947 d=f and i f=208973+6442102 d=d or f end end end else if d&lt;834209+11576473 then if d&lt;12920380-863756 then if d&lt;720394+11032014 then if d&lt;11690775-384403 then b=T[N[-643248-(-643254)]]f=b==A d=-453538+10328247 s=f else E=h(-982935-(-956682))X=T[N[-437148+437149]]f=nil Q=T[N[-728437-(-728439)]]j=4665453009634-(-1011098)i=T[N[425595+-425592]]A=t(A)P=i(E,j)W=Q[P]P=h(-422012-(-395718))s=X[W]b=nil E=-266071+7470086724845 W=T[N[-103173-(-103175)]]Q=T[N[837832+-837829]]i=Q(P,E)X=W[i]d=s[X]P=-21751+14396151066406 i=h(330997+-357327)X=T[N[708901-708899]]W=T[N[-495254-(-495257)]]Q=W(i,P)E=-947687+3157045558181 s=X[Q]P=h(-1041720-(-1015420))W=T[N[-621818-(-621820)]]Q=T[N[107974+-107971]]i=Q(P,E)X=W[i]d[s]=X s={}d=B[h(236840-263171)]end else v=nil w=t(w)f=t(f)j=t(j)b=t(b)P=nil f=nil W=t(W)X=t(X)q=nil b=nil E=t(E)Q=nil O=nil p=nil i=t(i)X=I()d=804506+14930813 T[X]=f Q=h(253417+-279656)f=I()T[f]=b W=B[Q]E=h(-83395-(-57110))q=I()i=h(-1001302-(-975063))Q=h(399394-425654)b=W[Q]W=I()T[W]=b P=h(-136605-(-110318))Q=B[i]i=h(146276-172549)b=Q[i]w=-949143+949399 j=I()i=B[P]P=h(-1037369-(-1011044))p={}D=w w=228660+-228659 Q=i[P]P=B[E]v=-813658+813659 E=h(-746857+720544)i=P[E]E=I()P=73516-73516 T[E]=P P=652026-652024 o=w T[j]=P T[q]=p P={}p=-102750-(-102750)O={}w=-443305-(-443305)m=o&lt;w w=v-o end else if d&lt;-852417+13097390 then v={}w=I()T[w]=v z=h(448683+-474998)b=nil o=I()m=h(-242304-(-216023))Z={}v=I()D=J(-844298+13392688,{w,E,j,W})T[v]=D F=h(-886897+860660)p=nil P=nil D={}Q=nil T[o]=D D=B[m]b={}r=nil i=nil y=T[o]x={[F]=y;[z]=r}m=D(Z,x)O=nil D=g(-124713+16671186,{o;w,q;E,j;v})Q=h(785732-812077)w=t(w)T[f]=m v=t(v)j=t(j)W=t(W)q=t(q)T[X]=D E=t(E)W=B[Q]o=t(o)P=T[f]p=h(499320+-525589)E=T[X]O=-72149+8930017815059 q=-217916+10687230928556 j=E(p,q)Q=h(683064+-709372)Q=W[Q]i=P[j]Q=Q(W,i)i=h(-606273-(-579928))q=h(-177058-(-150710))W=B[i]E=T[f]j=T[X]v=31475371196074-(-948886)i=h(744159+-770467)p=j(q,O)P=E[p]i=W[i]i=i(W,P)D=h(995396-1021707)W=I()E=h(-61159-(-34825))O=h(405863+-432130)T[W]=i P=B[E]j=T[f]s={b}p=T[X]q=p(O,v)E=j[q]o=-307333+32630071094239 i=P[E]q=h(476694-502997)p=B[q]O=T[f]v=T[X]w=v(D,o)q=O[w]w=h(990018+-1016296)j=p[q]D=2920+7819920229073 q=T[f]O=T[X]v=O(w,D)O=-960261-(-960661)w=-934360+934660 p=q[v]E=j[p]p=false j=true q=304145-303545 v=550403-550023 P=i(E,j,p,q,O,v,w)i=I()O=-622279+27069813207044 q=h(-753449-(-727193))T[i]=P d=B[h(-299918-(-273669))]E=T[f]j=T[X]p=j(q,O)P=E[p]j=h(164025+-190382)E=I()T[E]=P P=V(-798757+14525105,{f;X;i,W;E})b[j]=P else k=p==q C=k d=5485+9876161 end end else if d&lt;-597461+13550234 then if d&lt;-654610+13201498 then if d&lt;-789876+13316281 then f=T[N[-486437-(-486440)]]b=520571-520570 A=f~=b d=A and 1379277-(-785676)or-182212+4579583 else d=T[N[510182-510181]]f=b P=-286824+286824 E=-994812+995067 i=d(P,E)A[f]=i d=11139434-(-53270)f=nil end else A=T[N[476515+-476514]]s=#A A=-362002+362002 d=s==A d=d and 4928863-(-981911)or 459841+15998136 end else if d&lt;12260522-(-746723)then Q=nil X=nil i=nil d=1563059-800511 else W=927029+-927027 f=T[N[804428+-804427]]X=116315-116314 b=f(X,W)f=622268+-622267 A=b==f d=A and 6197297-840125 or-347166+15346183 s=A end end end end else if d&lt;71578+15597536 then if d&lt;435244+14154736 then if d&lt;14283126-807112 then if d&lt;-494455+13773636 then if d&lt;13052682-(-103375)then m=h(-725954-(-699715))c=-430067-(-430067)o=I()T[o]=C s=B[m]m=h(-344306+318033)y=-62876-(-62877)x=624537+-624282 d=s[m]m=769833-769832 Z=130459+-130359 r=h(-85310-(-59021))M=-10800+20800 s=d(m,Z)m=I()T[m]=s Z=1022706-1022706 d=T[i]s=d(Z,x)x=-380543+380544 z=61451-61449 Z=I()T[Z]=s d=T[i]F=T[m]s=d(x,F)x=I()T[x]=s s=T[i]F=s(y,z)s=-512023-(-512024)z=h(939057-965347)d=F==s F=I()T[F]=d s=h(62160-88502)l=B[r]H=T[i]Y={H(c,M)}r=l(G(Y))d=h(255064+-281340)l=h(637340-663630)d=v[d]u=r..l y=z..u d=d(v,s,y)y=I()z=h(-678894-(-652629))T[y]=d s=B[z]u=J(13488086-406208,{i,o,j;b,f,w,F,y;m,x;Z,E})z={s(u)}d={G(z)}z=d d=T[F]d=d and-722048+2249809 or 564900+5011844 else X=T[N[740489+-740488]]Q=T[N[-292575+292577]]j=-488807+1814769252532 i=T[N[-36869-(-36872)]]E=h(877030+-903273)P=i(E,j)W=Q[P]P=h(-925827-(-899490))s=X[W]E=5176882055069-376371 W=T[N[541079+-541077]]Q=T[N[383773-383770]]i=Q(P,E)X=W[i]d=s[X]X=T[N[789864+-789862]]i=h(476945+-503244)W=T[N[-695165+695168]]P=315173+19288268493808 Q=W(i,P)s=X[Q]P=h(667640+-693941)W=T[N[-700218-(-700220)]]Q=T[N[297793-297790]]E=-613140+3055176900770 i=Q(P,E)X=W[i]E=15513292927726-235191 d[s]=X s=h(-803433-(-777158))d=B[s]X=h(-162079-(-135825))s=d(f)s=B[X]W=T[N[990178-990176]]P=h(-727881-(-701545))Q=T[N[848947-848944]]i=Q(P,E)X=W[i]d=s[X]X=586317-586316 s=d(X)d=11678618-185466 end else A=h(683766-710095)s=h(-372480-(-346223))d=B[s]s=d(A)s={}d=B[h(595494+-621817)]end else if d&lt;14235806-216095 then if d&lt;-301660+14046244 then E=h(-758967+732624)i=h(-1046201+1019961)A=L[702548-702547]Q=2980883592117-(-86455)f=T[N[1018127+-1018126]]b=T[N[-635423+635425]]W=h(-145864-(-119618))X=b(W,Q)P=1228465859607-(-235045)s=f[X]d=A[s]O=h(683602-709873)X=T[N[642070-642069]]W=T[N[-295013+295015]]Q=W(i,P)W=h(786444+-812703)b=X[Q]X=B[W]W=X()s=h(357244-383512)f=b..W s=d[s]b=T[N[388250-388247]]P=867872+2627304818343 Q=h(972225+-998517)s=s(d,f,b)f=I()T[f]=s i=657397+3108867898802 d=T[f]b=T[N[-881475+881476]]X=T[N[-299030-(-299032)]]W=X(Q,i)i=h(42335-68642)s=b[W]X=T[N[773608-773607]]W=T[N[938859-938857]]Q=W(i,P)b=X[Q]v=-423231+33562758083147 i=-234271+20909851490599 d[s]=b d=T[f]b=T[N[-692809-(-692810)]]Q=h(418146+-444442)X=T[N[-126678-(-126680)]]W=X(Q,i)s=b[W]b=true d[s]=b s=h(471493-497810)d=B[s]P=B[E]j=T[N[305614-305613]]p=T[N[730650-730648]]q=p(O,v)E=j[q]O=32112470470168-1012655 q=h(-475-25858)i=P[E]E=T[N[-290662+290663]]j=T[N[333937+-333935]]p=j(q,O)P=E[p]p=h(854559+-880800)q=29423285747661-51784 Q=i[P]P=T[N[-993355-(-993356)]]E=T[N[-124445+124447]]j=E(p,q)i=P[j]W=Q[i]i=h(-395579-(-369288))i=W[i]Q={i(W)}W={d(G(Q))}b=W[260984+-260982]X=W[504785+-504782]d=10108704-(-612284)s=W[-463724+463725]W=s else R=h(941327-967612)P=j k=B[R]R=h(181357+-207607)C=k[R]k=C(A,P)C=T[N[-622814+622820]]R=C()w=k+R v=w+Q d=714504+15783364 P=nil w=-923309-(-923565)O=v%w R=229981-229980 Q=O w=b[f]k=Q+R C=X[k]v=w..C b[f]=v end else Q=X O=-272690+19643723959533 d=h(-676352-(-650038))d=i[d]Q=nil d=d(i)P=d q=h(849478+-875837)E=T[N[-267854-(-267855)]]j=T[N[-614836-(-614838)]]p=j(q,O)d=E[p]E=T[f]i=nil P[d]=E d=10798721-77733 P=nil end end else if d&lt;14800766-(-557071)then if d&lt;548388+14423127 then if d&lt;542966+14229515 then d={}T[N[916513+-916511]]=d s=T[N[-763276+763279]]X=s W=35184372648230-559398 i=-1043697+1043952 s=f%W j=-663626-(-663627)P=h(-550213-(-523928))T[N[1036692-1036688]]=s d=17015779-517911 Q=f%i i=-12343-(-12345)W=Q+i T[N[-238650-(-238655)]]=W i=B[P]P=h(-669835-(-643479))Q=i[P]i=Q(A)p=j Q=h(261229-287550)b[f]=Q E=i P=467602+-467601 Q=775904-775655 j=-6251-(-6251)q=p&lt;j j=P-p else d=147537+11635597 end else d=-391213+5748385 f=T[N[906582-906580]]b=T[N[1027724-1027721]]A=f==b s=A end else if d&lt;-395556+15902903 then r=-332303+332304 d=-168633+2077057 l=z[r]u=l else D=-844197+844197 w=#O v=w==D d=v and 11900004-(-316323)or 9233082-(-886047)end end end else if d&lt;16651335-515975 then if d&lt;745680+15067606 then if d&lt;328383+15437669 then if d&lt;15768410-83651 then b=h(-456589+430304)A=L f=I()d=true T[f]=d s=B[b]W=I()b=h(108350-134688)d=s[b]X=I()b=I()T[b]=d i=h(-711995-(-685730))d=a(13032209-(-287841),{})T[X]=d d=false P=V(11381823-563870,{W})T[W]=d Q=B[i]i=Q(P)s=i d=i and 107230+5185349 or-384809+11135651 else w=w+o Z=not m v=w&lt;=D v=Z and v Z=w&gt;=D Z=m and Z v=Z or v Z=-74842+15961562 d=v and Z v=7726204-(-326378)d=d or v end else d=240689+1011128 end else if d&lt;15006928-(-836015)then f=T[N[686255-686254]]X=T[N[-310914-(-310916)]]W=T[N[850468+-850465]]i=h(925497-951829)P=34067230264941-(-192394)Q=W(i,P)b=X[Q]Q=h(918853+-945132)s=f[b]i=-120721+33675962799314 b=T[N[1015349-1015347]]P=186929+13067249778067 X=T[N[26785+-26782]]W=X(Q,i)f=b[W]W=h(94511+-120755)d=s[f]f=T[N[574332+-574330]]b=T[N[-41009-(-41012)]]Q=13964573580973-(-64185)X=b(W,Q)Q=h(-877952-(-851599))s=f[X]b=T[N[-1035173+1035175]]i=2839216196435-902697 X=T[N[114614+-114611]]W=X(Q,i)f=b[W]d[s]=f f=h(-882854+856600)s=B[f]Q=h(108674+-134935)b=T[N[-713180-(-713182)]]X=T[N[914131+-914128]]i=541760+1636627988154 W=X(Q,i)f=b[W]d=s[f]f=-461454+461455 s=d(f)i=h(-574043+547731)f=T[N[-31573-(-31574)]]X=T[N[-338572-(-338574)]]W=T[N[879373+-879370]]Q=W(i,P)i=337459+13526445666919 b=X[Q]Q=h(-450935+424629)s=f[b]b=T[N[179498+-179496]]X=T[N[-454940-(-454943)]]W=X(Q,i)i=9358250061775-57034 Q=10566646724737-451913 f=b[W]d=s[f]f=T[N[228945-228943]]b=T[N[-369733+369736]]W=h(-324140-(-297786))X=b(W,Q)s=f[X]Q=h(226216+-252544)b=T[N[336656+-336654]]X=T[N[-932707-(-932710)]]W=X(Q,i)f=b[W]d[s]=f d=B[h(-334186-(-307846))]s={}else v=w Z=v O[v]=Z d=-864855+16600174 v=nil end end else if d&lt;16078400-(-419761)then if d&lt;16210954-(-251457)then if d&lt;16915355-550196 then s={}d=B[h(-929960-(-903686))]else b=h(-489513+463226)f=B[b]d=B[h(-1043665-(-1017367))]b=h(-1031239+1004914)A=f[b]b=T[N[154460+-154459]]f={A(b)}s={G(f)}end else O=not q j=j+p P=j&lt;=E P=O and P O=j&gt;=E O=q and O P=O or P O=-827844+14628308 d=P and O P=-269850+13249680 d=d or P end else if d&lt;16836037-204593 then d=T[N[996290+-996289]]f=L[-163109-(-163111)]b=d d=b[f]d=d and-215057+5142304 or-205882+14896843 A=L[-124134-(-124135)]else E=-653301+23062298517992 b=T[N[-519508+519509]]W=T[N[603944-603942]]P=h(400032+-426352)Q=T[N[30876-30873]]i=Q(P,E)X=W[i]f=b[X]i=h(663079-689351)X=T[N[-478134-(-478136)]]P=-386470+27475642996640 W=T[N[985989+-985986]]Q=W(i,P)b=X[Q]Q=h(-1069544-(-1043286))A=f[b]i=735593+17718212650705 b=T[N[-852331+852333]]X=T[N[703425-703422]]W=X(Q,i)f=b[W]W=h(-440578+414229)Q=634630+1240406889275 s=A[f]f=T[N[322443+-322441]]b=T[N[995189+-995186]]X=b(W,Q)A=f[X]d=s~=A d=d and-731508+7964245 or 1554312-(-796557)end end end end end end end d=#K return G(s)end,{},function(B,h)local G=b(h)local L=function()return d(B,{},h,G)end return L end return(W(-903776+16579369,{}))(G(s))end)(getfenv and getfenv()or _ENV,unpack or table[h(884462+-910814)],newproxy,setmetatable,getmetatable,select,{...})end)(...)</ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="ModuleScript" referent="RBX0154E07AD96342BDAC4F3D15F6CB87D1">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">GamepassHandler</string>
				<string name="ScriptGuid">{73FA11CB-D92B-42CA-A57F-036F0F0B2D91}</string>
				<ProtectedString name="Source">--[[ v1.0.0 https://wearedevs.net/obfuscator ]] return(function(...)local I={&quot;\052\077\081\054\083\052\065\061&quot;;&quot;\053\052\117\074\056\110\061\061&quot;;&quot;\080\118\107\076\080\116\081\112\053\086\055\061&quot;;&quot;\080\114\082\051\119\114\072\077\114\071\078\112\114\102\068\079\055\077\107\086\055\086\078\077\114\071\072\112\068\114\057\061&quot;;&quot;\068\086\089\079\053\071\057\061&quot;,&quot;\120\051\082\049\070\099\083\080&quot;;&quot;\083\103\081\054\119\103\078\078\104\066\119\066\104\087\055\109\078\110\061\061&quot;,&quot;\072\102\078\074\078\114\115\077\055\051\077\051&quot;;&quot;\083\076\087\066\083\087\068\105\078\078\081\057\087\100\087\069\104\087\084\061&quot;,&quot;\088\117\103\090\069\098\118\053\115\110\097\082\120\106\110\061&quot;;&quot;\053\116\068\087\056\074\081\071\056\117\117\048\068\075\061\061&quot;;&quot;\119\102\107\105\119\102\117\074&quot;,&quot;\054\108\086\072\053\068\122\061&quot;,&quot;\100\117\053\117\102\075\061\061&quot;,&quot;\078\114\115\077\055\051\107\071\053\100\115\116\119\052\066\077\087\118\117\076\055\074\117\076\070\052\048\103&quot;,&quot;\055\086\117\105\068\118\107\113&quot;;&quot;\101\121\061\061&quot;,&quot;\056\066\112\048\104\074\074\075\104\066\082\073\080\087\117\072\070\052\104\061&quot;;&quot;\102\097\103\109\068\113\048\105\120\072\111\065\049\108\118\088\051\067\115\119\055\048\099\086\053\055\105\110\089\090\061\061&quot;,&quot;\068\100\117\114\087\083\078\069\090\076\051\066\052\087\080\082\087\075\061\061&quot;,&quot;\086\055\084\122&quot;;&quot;\098\122\114\084\077\110\061\061&quot;;&quot;\055\086\078\113\053\071\068\077&quot;;&quot;\119\102\043\043\055\121\061\061&quot;,&quot;\066\116\101\104\119\104\104\085\085\101\083\118\051\053\078\057\074\098\110\061&quot;,&quot;\114\066\107\100\119\075\061\061&quot;,&quot;\107\068\111\076\089\047\116\105&quot;,&quot;\053\084\067\087\043\066\068\109\047\069\101\056\116\114\052\081\111\090\061\061&quot;;&quot;\103\078\120\065\057\077\069\087&quot;,&quot;\113\111\104\115\106\081\077\086\122\053\082\055\071\117\049\082\050\116\116\106\067\090\061\061&quot;,&quot;\053\108\084\061&quot;;&quot;\114\066\107\097\068\052\069\061&quot;;&quot;\071\074\072\121\074\088\053\112\070\108\101\088\086\099\074\061&quot;;&quot;\119\100\077\074\068\090\061\061&quot;,&quot;\053\051\116\051\108\055\110\075\086\075\061\061&quot;;&quot;\119\102\107\109\053\071\078\074\056\052\048\077&quot;,&quot;\078\118\117\113\055\118\078\109\057\084\072\077\080\118\078\103\080\118\078\051\057\090\061\061&quot;,&quot;\119\066\112\065\052\117\112\117\049\118\055\102\055\051\089\068\072\102\122\061&quot;,&quot;\117\118\103\065\072\065\065\061&quot;;&quot;\110\050\085\080\122\084\120\112&quot;;&quot;\048\118\047\085\102\056\089\079\069\097\112\074\100\102\072\057&quot;;&quot;\105\097\111\084\106\105\085\122\043\103\084\076\097\114\069\061&quot;;&quot;\055\118\115\043\053\118\075\061&quot;,&quot;\087\108\043\065\049\051\077\054\090\076\072\050\055\103\081\108\072\108\104\061&quot;,&quot;\112\072\090\069\078\085\106\111\101\072\108\112\098\099\101\070&quot;;&quot;\117\109\090\122\080\110\061\061&quot;;&quot;\055\102\078\074\053\052\078\074\119\114\072\043\119\086\089\077&quot;,&quot;\115\084\078\079\090\086\117\076\072\076\080\101\049\078\081\089\083\075\061\061&quot;;&quot;\057\070\067\118\081\078\122\101\052\098\087\061&quot;,&quot;\055\071\072\109\056\052\048\100&quot;,&quot;\085\117\101\079\050\099\081\101\090\075\061\061&quot;,&quot;\068\114\081\109\053\071\057\061&quot;,&quot;\114\049\106\111\112\056\048\070\100\121\061\061&quot;,&quot;\075\110\097\115\056\111\082\065\074\075\061\061&quot;,&quot;\056\052\115\087\115\087\089\105\119\103\117\076\083\102\087\089&quot;;&quot;\090\077\105\066\115\083\084\061&quot;;&quot;\068\066\080\089\056\052\119\102\101\108\115\098\072\083\077\086\115\090\061\061&quot;,&quot;\081\113\047\069\085\075\105\084\115\108\086\054\106\075\061\061&quot;;&quot;\053\108\057\061&quot;;&quot;\055\071\072\043\055\100\072\111\055\116\081\079\114\102\107\071\053\086\078\109\055\102\043\112\055\117\107\074\119\114\115\088&quot;,&quot;\070\086\080\089\056\083\077\108\087\102\072\084\068\052\113\109\049\071\084\061&quot;;&quot;\083\079\102\066\117\119\086\105&quot;,&quot;\080\118\117\047\053\118\087\061&quot;,&quot;\115\113\043\075\068\057\115\081\120\107\119\112\122\098\071\106\084\057\117\069\047\071\115\109\115\099\079\085\118\110\061\061&quot;,&quot;\080\114\082\051\119\114\072\077\114\071\078\112\114\102\068\079\055\077\107\075\055\086\107\111\080\118\077\077\055\121\061\061&quot;,&quot;\074\067\076\082\056\097\075\043\050\050\116\084\087\087\075\061&quot;,&quot;\081\102\101\080\057\118\108\054\069\121\121\078\047\079\054\056\101\085\100\105\113\121\061\061&quot;;&quot;\080\052\048\075\119\052\115\088&quot;;&quot;\072\102\078\074\087\102\078\109\080\086\077\103\068\090\061\061&quot;,&quot;\068\102\078\074\114\102\080\043\053\052\078\075\119\114\115\076\114\102\107\071\053\086\078\109\055\102\043\112\055\110\061\061&quot;,&quot;\068\071\115\066\119\121\061\061&quot;,&quot;\119\102\048\089\068\103\068\087\072\052\081\087\087\117\115\072&quot;;&quot;\073\070\073\090\107\057\100\104\085\050\055\061&quot;,&quot;\065\053\053\112\054\079\109\103\109\085\056\114\065\112\066\069\077\109\114\066\116\102\049\043\072\065\067\090\076\121\061\061&quot;,&quot;\114\066\107\113\068\114\072\043\080\118\117\047\053\118\087\061&quot;,&quot;\080\118\117\076\056\075\061\061&quot;;&quot;\116\056\086\047\114\056\068\102\072\115\085\048\101\103\082\081\065\078\081\071\080\051\118\117\057\112\119\043\079\068\065\061&quot;;&quot;\115\051\072\086\053\075\061\061&quot;,&quot;\068\102\066\043\080\118\115\065&quot;;&quot;\115\052\077\075\049\102\066\083\080\052\115\086\072\084\080\073\055\121\061\061&quot;,&quot;\055\102\115\109\056\114\082\074&quot;;&quot;\087\086\055\089\087\114\072\114\049\084\089\109\119\087\081\108\115\114\084\061&quot;;&quot;\101\047\121\077\068\098\065\112\101\121\061\061&quot;,&quot;\104\114\081\107\054\099\117\052\050\119\089\088\086\113\077\116\116\112\119\105\076\075\048\080\114\073\098\120\087\121\061\061&quot;;&quot;\068\102\117\113\068\090\061\061&quot;;&quot;\112\113\113\051\054\075\065\086\082\103\104\076\054\098\090\078\072\078\049\073\083\055\089\087&quot;;&quot;\097\090\065\089&quot;,&quot;\070\087\112\087\068\052\072\112\052\087\048\043\083\083\051\061&quot;,&quot;\080\071\115\090\080\074\068\108\087\117\080\118\053\100\117\082&quot;,&quot;\097\100\074\098\113\105\056\080&quot;;&quot;\077\080\099\106\103\099\052\118\103\075\061\061&quot;;&quot;\072\080\103\114\074\065\108\110\101\083\057\050\108\109\105\112\118\118\077\053\113\077\052\077\106\069\085\114\105\119\089\100\113\086\115\088\114\054\097\112\067\108\049\057&quot;,&quot;&quot;;&quot;\053\118\078\105&quot;;&quot;\114\066\107\112\053\086\072\077\070\110\061\061&quot;;&quot;\080\118\107\105\080\052\066\047\068\114\057\061&quot;,&quot;\115\074\081\104\049\074\081\088\072\052\069\071\087\066\078\097\080\090\061\061&quot;;&quot;\078\116\072\050\052\086\119\076\049\084\066\066\090\077\082\115\052\121\061\061&quot;,&quot;\106\049\098\069\111\076\083\079\056\115\098\089\065\103\103\049\071\119\080\108\110\080\098\115&quot;}local function q(q)return I[q+(202222-148986)]end for q,M in ipairs({{-287138+287139;624663+-624564};{105604+-105603;-511270+511299},{-260826+260856,-426455-(-426554)}})do while M[-1019957+1019958]&lt;M[-217297-(-217299)]do I[M[-310996-(-310997)]],I[M[-649063-(-649065)]],M[317610+-317609],M[-774573-(-774575)]=I[M[-652907+652909]],I[M[154464+-154463]],M[-818551-(-818552)]+(713997+-713996),M[-459735-(-459737)]-(610231+-610230)end end do local q=string.char local M=string.len local u=math.floor local y=string.sub local C=type local B=table.insert local d={c=-131246+131288,f=-840860-(-840914),k=44729-44668,V=-767364-(-767402);d=-910169+910208;y=791294+-791262,o=-27930+27961,W=-792196+792216;Q=595443+-595434,E=-679444+679500,s=-982930+982943;q=-284523+284568;v=-981564-(-981570),[&quot;\043&quot;]=981630-981597,p=-858311-(-858352),R=629273+-629272;X=659108+-659065,i=369994-369948;D=293142-293117;z=-874479-(-874539),[&quot;\052&quot;]=721004+-720982;[&quot;\047&quot;]=527283+-527249;I=224663-224605,j=318906+-318891,B=577111-577058,P=-340686+340715,[&quot;\053&quot;]=-493099+493126;x=531238+-531175;[&quot;\054&quot;]=-215340+215350,O=-263764+263811,[&quot;\056&quot;]=968530-968504,g=-432165-(-432200);Z=553664-553648,n=-230968+230968,m=19942-19892;C=276968+-276909,H=29600-29583;[&quot;\057&quot;]=509855+-509847;T=-521862-(-521866);h=-855731-(-855743),e=11974-11960,b=-590604-(-590606);N=786122-786101,S=14886-14867;[&quot;\048&quot;]=-573519+573576;F=2378+-2348,G=25701+-25646,U=-947879-(-947941),[&quot;\051&quot;]=768389+-768353;L=659434+-659383,l=-585585+585588;u=2978+-2973;[&quot;\050&quot;]=-716703-(-716714);r=759312-759289,[&quot;\049&quot;]=643091+-643073;M=99721+-99684,K=-907999+908047;t=-469010+469017;w=860679-860655;[&quot;\055&quot;]=68660-68632,A=381179-381139,J=30361+-30309,Y=906223-906174;a=-445956+446000}local J=table.concat local w=I for I=517170+-517169,#w,240326-240325 do local Y=w[I]if C(Y)==&quot;\115\116\114\105\110\103&quot;then local C=M(Y)local m={}local Q=590700-590699 local O=959637-959637 local x=8752+-8752 while Q&lt;=C do local I=y(Y,Q,Q)local M=d[I]if M then O=O+M*(923527+-923463)^((-856013-(-856016))-x)x=x+(1045632+-1045631)if x==116205-116201 then x=-108324-(-108324)local I=u(O/(1020067+-954531))local M=u((O%(-499913-(-565449)))/(854018-853762))local y=O%(909474-909218)B(m,q(I,M,y))O=651037-651037 end elseif I==&quot;\061&quot;then B(m,q(u(O/(432149-366613))))if Q&gt;=C or y(Y,Q+(-392191-(-392192)),Q+(616170-616169))~=&quot;\061&quot;then B(m,q(u((O%(650371+-584835))/(-875941-(-876197)))))end break end Q=Q+(-661913-(-661914))end w[I]=J(m)end end end return(function(I,u,y,C,B,d,J,g,x,O,Q,w,K,t,M,m,P,k,S,v,l,Y)O,m,w,v,k,Y,S,P,Q,l,t,M,x,g,K=function(I)for q=-919480+919481,#I,888516-888515 do Y[I[q]]=(120606-120605)+Y[I[q]]end if y then local M=y(true)local u=B(M)u[q(-933813+880602)],u[q(-391544-(-338363))],u[q(647143+-700318)]=I,x,function()return-629896+2660281 end return M else return C({},{[q(-735929+682748)]=x;[q(184630-237841)]=I,[q(-945642-(-892467))]=function()return 490390+1539995 end})end end,function()Q=(865303+-865302)+Q Y[Q]=-60271+60272 return Q end,{},function(I,q)local u=O(q)local y=function()return M(I,{},q,u)end return y end,function(I)Y[I]=Y[I]-(-960231-(-960232))if-978577+978577==Y[I]then Y[I],w[I]=nil,nil end end,{},function(I,q)local u=O(q)local y=function(y,C,B,d,J,w)return M(I,{y,C,B;d;J;w},q,u)end return y end,function(I,q)local u=O(q)local y=function(y,C,B,d)return M(I,{y;C,B,d},q,u)end return y end,932363-932363,function(I,q)local u=O(q)local y=function(y)return M(I,{y},q,u)end return y end,function(I,q)local u=O(q)local y=function(y,C,B)return M(I,{y;C;B},q,u)end return y end,function(M,y,C,B)local o,U,c,O,L,Q,n,G,J,b,i,W,j,N,K,p,D,E,Y,T,H,A,X,f,r,Z,F,x,z,a,s,R,h,e while M do if M&lt;-53226+10017746 then if M&lt;5617827-(-844212)then if M&lt;-603803+3997972 then if M&lt;-33088+1626226 then if M&lt;-122608-(-659417)then if M&lt;461678+-128828 then if M&lt;1134710-902643 then w[Q]=j M=w[Q]M=M and 23532+9062947 or-69778+3448064 else X=-107429+34636506931877 J=q(-848800+795579)K=q(730949+-784156)M=I[J]Q=w[C[859097-859096]]J=q(-784447-(-731309))J=M[J]O=w[C[-687385+687387]]x=O(K,X)Y=Q[x]J=J(M,Y)Q=w[C[183987+-183984]]x=w[C[691454-691453]]R=q(788656-841871)W=460296+6715386545711 K=w[C[-916135+916137]]X=K(R,W)O=x[X]Y=Q[O]O=w[C[659270+-659267]]K=w[C[-1029305+1029306]]W=q(-436418-(-383253))r=718774+18612797221413 X=w[C[-52645+52647]]R=X(W,r)x=K[R]Q=O[x]O=q(-878410-(-825218))O=J[O]M={O(J,Y,Q)}J={u(M)}M=I[q(-819564+766364)]end else M=-790482+5619902 w[Q]=J end else if M&lt;612590-(-714898)then if M&lt;-341672+1389920 then p=w[Q]M=p and 8791471-(-710759)or-115656+448616 J=p else Q=q(-840073-(-786902))X=q(1001423+-1054616)J=I[Q]O=w[C[44099+-44097]]x=w[C[25040+-25037]]R=34816859840069-433905 K=x(X,R)Q=O[K]M=J[Q]Q=t(23734+11272708,{C[-291280-(-291282)];C[930911-930908];C[-630581-(-630582)],Y})Y=k(Y)J=M(Q)M=J()J={}M=I[q(-756036+702849)]end else M=I[q(-927820-(-874586))]J={}end end else if M&lt;2423122-(-54354)then if M&lt;833257-(-944677)then if M&lt;-134929+1847021 then M=w[C[534615-534608]]M=M and-621072+13938814 or 824960+13929021 else a=432825+-432819 T=-548585-(-548586)M=w[R]F=M(T,a)M=q(804626+-857774)I[M]=F a=q(330103-383251)T=I[a]a=483489-483487 M=T&gt;a M=M and-632314+13844210 or 6071182-192352 end else M=365567+10573330 U=-865408-(-865409)i=E[U]p=i end else if M&lt;-869977+3807636 then a=-993194+993194 n=#D b=n==a M=b and 749545+5188095 or 4812089-(-281384)else M=true M=1039437+12627586 end end end else if M&lt;5107118-(-769950)then if M&lt;4263441-(-769031)then if M&lt;4407732-(-278675)then if M&lt;4855107-468369 then J=r M=G M=r and 14524662-974525 or 3891991-(-788340)else G=q(-450573+397434)r=I[G]J=r M=13179982-(-370155)end else z=k(z)E=nil A=k(A)f=k(f)s=k(s)c=k(c)h=k(h)M=-181370+9828445 end else if M&lt;-580542+5979971 then if M&lt;5149939-61030 then M=14537012-(-349374)else a=#D M=-892597+3689368 c=-525315+525316 n=-669898-(-669899)b=O(n,a)n=X(D,b)b=nil a=w[H]s=n-c h=R(s)a[n]=h n=nil end else Y=m()X=q(431919-485062)w[Y]=y[686067-686066]J=w[C[684266-684265]]R=849591847971-(-554344)O=w[C[636689+-636687]]x=w[C[-3360-(-3363)]]K=x(X,R)Q=O[K]M=J[Q]J=M()M=J and 12002004-(-458550)or 8813140-(-1004948)end end else if M&lt;-226279+6412243 then if M&lt;541900+5501552 then if M&lt;6117992-233711 then a=q(845484+-898632)M=I[a]a=q(378058-431234)I[a]=M M=11694910-246022 else h=m()b={}n=m()E=q(653100+-706331)R=nil a=g(915832+11720876,{n,r,G;K})c={}w[n]=b b=m()K=k(K)s=q(815837+-868997)D=nil w[b]=a a={}U=nil O=nil w[h]=a a=I[s]W=nil A=q(480920-534131)z=w[h]f={[A]=z,[E]=U}s=a(c,f)w[x]=s a=P(15206014-740320,{h;n,H;r,G,b})O={}H=k(H)X=nil K=m()r=k(r)N=nil h=k(h)b=k(b)n=k(n)w[Q]=a G=k(G)w[K]=O N=24744788495036-73146 O=w[K]H=q(-364548-(-311334))R=w[x]G=q(-1051057-(-997883))W=w[Q]r=W(G,N)X=R[r]R=354687+1297879283 G=q(-229839-(-176657))N=8303754088529-(-212681)a=-641909+33967267645758 O[X]=R O=w[K]R=w[x]W=w[Q]r=W(G,N)X=R[r]R=-426798+427598 O[X]=R G=q(-76556+23390)D=2621711333686-439410 O=w[K]N=-813766+4816473944968 R=w[x]W=w[Q]r=W(G,N)n=q(498767-551908)X=R[r]r=w[x]G=w[Q]N=G(H,D)W=r[N]G=w[K]H=w[x]D=w[Q]b=D(n,a)N=H[b]b=23228503328388-597060 M=I[q(223200+-276369)]r=G[N]R=W..r O[X]=R D=q(-384310+331131)N=259344+824017046639 O=w[K]R=w[x]W=w[Q]G=q(-948342-(-895186))r=W(G,N)W=q(-122485+69264)X=R[r]R=I[W]G=w[x]W=q(-141700-(-88562))N=w[Q]W=R[W]H=N(D,b)r=G[H]W=W(R,r)R=q(795593+-848792)R=W[R]R=R(W)O[X]=R X=w[K]O=v(-546032+791300,{x;Q;K})R=q(84844-137981)X[R]=O R=q(256225+-309428)O=P(7633857-673070,{x,Q})X=w[K]X[R]=O O=S(-98596+13580567,{x;Q})R=q(-270608+217466)X=w[K]X[R]=O R=q(897640-950787)O=P(-272079+5946693,{K;x;Q})X=w[K]X[R]=O O=w[K]J={O}end else Q=w[C[160367+-160366]]x=844621+-844620 K=88364+-88362 O=Q(x,K)Q=10328-10327 Y=O==Q M=Y and 872543+9103796 or 250162+6742611 J=Y end else if M&lt;6788181-565968 then M=w[C[-431959+431969]]Q=w[C[-1038216+1038227]]Y[M]=Q M=w[C[508455+-508443]]Q={M(Y)}M=I[q(-774592-(-721403))]J={u(Q)}else F=N==H j=F M=776842-545064 end end end end else if M&lt;9783641-804455 then if M&lt;-531100+7510628 then if M&lt;7545291-809883 then if M&lt;732118+5823671 then if M&lt;-204466+6724228 then M=true M=M and-9474+15989878 or-316163+12123748 else J={}M=I[q(-787376+734217)]end else J={Q}M=I[q(681947+-735156)]end else if M&lt;-911269+7817760 then if M&lt;-740126+7560302 then X=w[K]M=9817391-(-859084)J=X else D=q(-118875+65731)H=I[D]D=q(292136-345275)N=H[D]r=N M=4710547-820556 end else r=943643+337080081025 K=w[C[-195043+195044]]W=q(-661602+608457)X=w[C[69295-69293]]Y=y[-668026+668027]R=X(W,r)r=2809963703251-894647 x=K[R]O=Y[x]K=w[C[50883+-50882]]W=q(-62688+9502)X=w[C[-360953-(-360955)]]R=X(W,r)W=1173500587439-273293 x=K[R]Q=O[x]R=q(-253375+200198)x=w[C[231348-231347]]K=w[C[1046304-1046302]]X=K(R,W)Y=nil R=9339+24753496787083 O=x[X]J=Q[O]O=w[C[-162281+162282]]X=q(-1034740-(-981507))x=w[C[404057+-404055]]K=x(X,R)Q=O[K]X=27624287027227-478684 K=q(-110996+57842)M=J[Q]Q=w[C[-598406-(-598407)]]O=w[C[-50595+50597]]x=O(K,X)J=Q[x]Q=true M[J]=Q J={}M=I[q(-829977+776751)]end end else if M&lt;689070+7837625 then if M&lt;7899727-327655 then if M&lt;7011617-(-116742)then Q=w[C[62700-62698]]O=w[C[127824-127821]]Y=Q==O J=Y M=463619+9512720 else W=nil G=k(G)X=nil Q=k(Q)X=q(-27007-26198)x=k(x)x=m()K=k(K)O=k(O)Q=nil r=k(r)H=nil O=nil r=q(-607930+554773)N=nil n=k(n)w[x]=Q Q=m()D=nil W=q(-217089+163945)G=m()n=1004819-1004563 b=nil R=k(R)w[Q]=O K=I[X]R=q(810962-864167)X=q(230402+-283604)O=K[X]K=m()w[K]=O X=I[R]H=m()R=q(655613-708804)N={}O=X[R]R=I[W]W=q(663521-716705)X=R[W]b=-251414+251415 W=I[r]r=q(228877-282060)M=930637+10286624 R=W[r]r=m()a=n W=-193331-(-193331)w[r]=W W=-145749+145751 D={}w[G]=W w[H]=N n=911685-911684 W={}N=-506188-(-506188)h=n n=252902-252902 s=h&lt;n n=b-h end else X=nil R=nil x=nil M=6000550-(-556114)end else if M&lt;-180217+9067096 then Q=O M=w[C[-166295+166296]]W=-720419-(-720419)r=7770-7515 R=M(W,r)Y[Q]=R M=13679840-(-121669)Q=nil else K=q(706259+-759460)M=O X=631730+27730209574590 M[J]=Q Q=w[C[544011+-544010]]O=w[C[814074+-814072]]x=O(K,X)X=9597778449263-(-556550)J=Q[x]K=q(-462887+409693)M=Y[J]Q=w[C[-966872+966873]]Y=nil O=w[C[-671916+671918]]x=O(K,X)J=Q[x]O=w[C[-514788+514789]]x=w[C[337928-337926]]R=28002135832083-983844 X=q(230339+-283524)K=x(X,R)Q=O[K]M[J]..=Q M=I[q(-1053178-(-1000028))]J={}end end end else if M&lt;-80857+9674113 then if M&lt;-166393+9558790 then if M&lt;9339042-117828 then if M&lt;-1013456+10055779 then M=true M=M and 1260032-(-462347)or 6402526-(-141057)else M=6859663-(-619759)end else M=6938730-421787 end else if M&lt;9390997-(-119303)then if M&lt;9598736-101018 then O=181325-181072 Q=w[C[-636254-(-636256)]]Y=Q*O Q=-426941+10867915151234 J=Y+Q Q=-60136-(-60137)Y=35184372598406-509574 M=J%Y w[C[502135+-502133]]=M Y=w[C[-473527-(-473530)]]M=-370168+13033516 J=Y~=Q else L=359894+-359893 o=E[L]L=false U=o==L i=M M=U and-878993+13785978 or 8669348-(-900504)p=U end else M=i M=-438849-(-771809)J=p end end else if M&lt;568837+9310030 then if M&lt;10762020-1004067 then if M&lt;9745522-52420 then j=j+T J=j&lt;=F h=not a J=h and J h=j&gt;=F h=a and h J=h or J h=-942896+15111885 M=J and h J=939486+11744021 M=M or J else b=n c=b M=-408173+11625434 D[b]=c b=nil end else J=w[C[-902325+902326]]O=w[C[186013-186011]]X=q(580491-633720)R=593741+30623845148775 x=w[C[-967518+967521]]K=x(X,R)Q=O[K]M=J[Q]Q=w[Y]J=M(Q)M=971736+80609 end else if M&lt;9321161-(-629906)then O=422032+-422000 Q=w[C[290816-290813]]N=991066+-991053 Y=Q%O r=346521-346519 M=17203826-497607 x=w[C[-543485-(-543489)]]R=w[C[-173927+173929]]b=w[C[787608-787605]]D=b-Y b=-934517-(-934549)H=D/b G=N-H W=r^G X=R/W K=x(X)x=4296010268-1042972 N=366598-366342 O=K%x r=915982+-915726 K=956522+-956520 W=437469+-437468 x=K^Y Q=O/x x=w[C[811731-811727]]R=Q%W Y=nil W=-466306+4295433602 X=R*W K=x(X)x=w[C[-257449-(-257453)]]X=x(Q)O=K+X K=402777+-337241 Q=nil x=O%K R=265374+-199838 X=O-x K=X/R R=-785738-(-785994)O=nil X=x%R W=x-X R=W/r r=-261354+261610 W=K%r G=K-W r=G/N x=nil G={X,R;W,r}r=nil R=nil w[C[-17192-(-17193)]]=G W=nil K=nil X=nil else a=-10202-(-10202)n=#D b=n==a M=4972703-(-120770)end end end end end else if M&lt;12724027-(-772601)then if M&lt;-367727+12393481 then if M&lt;881432+10329841 then if M&lt;11914839-998380 then if M&lt;269338+10407845 then if M&lt;-568638+11202726 then M=J and-814377+16028916 or 365812+1296911 else X=J R=q(-730762+677557)J=I[R]R=q(177009+-230200)M=J[R]R=m()w[R]=M W=q(-209355+156211)J=I[W]W=q(-535146+481951)H=q(-725359-(-672215))M=J[W]N=I[H]r=N W=M G=M M=N and 7108516-250562 or-415181+4305172 end else T=q(-613426+560269)M=-514107+16487724 F=I[T]T=q(-962832+909659)W=G j=F[T]F=j(Y,W)j=w[C[-441670-(-441676)]]T=j()n=F+T W=nil b=n+X n=1034835+-1034579 D=b%n X=D T=-1008804+1008805 n=O[Q]F=X+T j=x[F]b=n..j O[Q]=b end else if M&lt;-982376+12049373 then if M&lt;426248+10506489 then M=true J={}w[C[-137277-(-137278)]]=M M=I[q(-636192-(-582984))]else e=-143577-(-143578)w[Q]=p L=w[f]o=L+e U=E[o]i=N+U U=-830011-(-830267)M=i%U o=w[c]U=H+o o=-891543-(-891799)i=U%o N=M M=-931883+5761303 H=i end else O=-982849+982850 Q=w[C[-549759+549762]]Y=Q~=O M=Y and 10544397-643629 or 12523449-(-139899)end end else if M&lt;11261927-(-187352)then if M&lt;-81168+11481047 then if M&lt;947411+10277700 then c=not s n=n+h b=n&lt;=a b=c and b c=n&gt;=a c=s and c b=c or b c=8881717-(-858913)M=b and c b=10664709-712479 M=M or b else M=15878651-992265 end else M=9643979-622866 end else if M&lt;12649104-973879 then J=w[C[429618-429615]]X=10517+18667976358111 Q=w[C[-855807+855808]]K=q(652335+-705523)O=w[C[-687496+687498]]x=O(K,X)Y=Q[x]M=J[Y]J=M()M=J and-590399+13001190 or-299010+5334462 else M=I[q(616085+-669248)]J={}end end end else if M&lt;12641783-(-32833)then if M&lt;-892080+13355880 then if M&lt;-759006+13205818 then if M&lt;117915+12151086 then Q=m()Y=y M=true x=m()w[Q]=M O=q(-82498+29341)K=m()J=I[O]O=q(-651629+598402)M=J[O]O=m()w[O]=M M=l(-858959+16579545,{})w[x]=M R=q(-429274-(-376110))M=false w[K]=M X=I[R]W=g(567036+10360961,{K})R=X(W)M=R and 6548234-(-211452)or 9961489-(-714986)J=R else M=w[C[-272707-(-272711)]]K=858148+34268993267249 X=-347940+21953656796946 Y=w[C[269384+-269383]]Q=w[C[238098+-238096]]x=q(-203300-(-150080))O=Q(x,K)J=Y[O]Y=true K=q(795622+-848844)M[J]=Y J=w[C[-113855+113858]]Q=w[C[146933-146932]]O=w[C[-1044802-(-1044804)]]x=O(K,X)Y=Q[x]M=J[Y]Y=w[C[555917+-555913]]J=M(Y)M=1922086-361895 end else J=w[C[146101-146100]]O=w[C[-498941-(-498943)]]x=w[C[434906-434903]]X=q(-515197-(-461965))R=-153435+14414252290451 K=x(X,R)Q=O[K]M=J[Q]Q=w[Y]J=M(Q)M=-1043296+2095641 end else if M&lt;12873599-219634 then if M&lt;1007355+11589237 then J=133668+16367795 O=728655-713230 Q=q(291356-344574)Y=Q^O M=J-Y Y=M J=q(-327233+274027)M=J/Y J={M}M=I[q(571235-624459)]else Y=w[C[449844+-449843]]J=#Y Y=562993+-562993 M=J==Y M=M and 9608383-119601 or 423972+16282247 end else Q=w[C[4790+-4787]]O=-943153-(-943268)Y=Q*O Q=662099-661842 J=Y%Q w[C[-415180+415183]]=J M=577776+10633386 end end else if M&lt;13185540-(-27695)then if M&lt;-1001937+14191381 then if M&lt;-137186+12874940 then F=w[Q]j=F M=F and 7122436-768442 or-205406-(-437184)else L=891036+-891034 M=-705678+10275530 o=E[L]L=w[z]U=o==L p=U end else T=q(-168613-(-115409))h=q(89827+-143003)M=I[T]a=I[h]T=M(a)M=q(-848415+795267)I[M]=T M=960352+10488536 end else if M&lt;12514902-(-854689)then Y=q(441155+-494310)M=I[Y]Q=w[C[-119261+119269]]O=-998869-(-998869)Y=M(Q,O)M=446394+14307587 else r=33510780388640-(-63444)K=w[C[46841-46840]]X=w[C[979378-979376]]Y=y[-180668-(-180669)]W=q(299763+-352941)R=X(W,r)x=K[R]O=Y[x]r=408090+18150540994282 W=q(416724-469943)K=w[C[556448+-556447]]X=w[C[-917245+917247]]R=X(W,r)x=K[R]H=q(188162+-241342)R=q(-381066+327926)Q=O[x]W=-418171+22267775519228 x=w[C[-662096-(-662097)]]K=w[C[-121590-(-121592)]]X=K(R,W)O=x[X]J=Q[O]X=q(-455369-(-402211))O=w[C[-350704-(-350705)]]R=726934+16239784117748 x=w[C[851652-851650]]K=x(X,R)Q=O[K]K=q(-495716+442563)X=-499970+21266007377840 M=J[Q]Q=w[C[165866+-165865]]O=w[C[944456-944454]]R=1896729873148-(-637047)x=O(K,X)J=Q[x]Q=false M[J]=Q O=w[C[-257428-(-257429)]]X=q(538060-591276)x=w[C[222495-222493]]K=x(X,R)Q=O[K]J=Y[Q]O=w[C[1044222+-1044221]]X=q(-385941-(-332744))R=227616+11481236282306 x=w[C[-1034891-(-1034893)]]K=x(X,R)Q=O[K]M=J[Q]X=5678884971963-138087 Q=w[C[-455823+455824]]K=q(517056+-570228)O=w[C[-86469+86471]]x=O(K,X)D=-130298+27021685059104 J=Q[x]Q=false W=q(-939635-(-886410))M[J]=Q X=29033051002588-(-876019)Q=w[C[-829863+829864]]O=w[C[424365-424363]]K=q(46987-100154)x=O(K,X)X=15179792736460-(-768720)J=Q[x]M=Y[J]Q=w[C[-299546+299547]]K=q(-901090+847922)O=w[C[70451-70449]]x=O(K,X)O=M J=Q[x]R=I[W]r=w[C[259686-259685]]G=w[C[278392+-278390]]N=G(H,D)W=r[N]X=R[W]H=16862295842664-360636 W=w[C[-212675-(-212676)]]r=w[C[194428+-194426]]N=q(-770026+716864)G=r(N,H)R=W[G]G=q(16627-69778)K=X[R]R=w[C[-311375+311376]]N=14890555865230-925049 W=w[C[126820+-126818]]r=W(G,N)X=R[r]x=K[X]Q=x M=x and 9681444-785221 or-906773+15471610 end end end end else if M&lt;625122+14156649 then if M&lt;14500184-326316 then if M&lt;13205874-(-547245)then if M&lt;13677684-50469 then if M&lt;-292441+13850218 then r=m()G=148506-148503 w[r]=J b=t(13280534-719200,{})N=-814567-(-814632)M=w[R]J=M(G,N)G=m()M=582195+-582195 N=M w[G]=J T=q(-494310+441106)M=-657440-(-657440)D=q(738897+-792061)J=I[D]H=M D={J(b)}M={u(D)}D=M J=19790+-19788 M=D[J]J=q(489318+-542528)b=M M=I[J]n=w[O]F=I[T]T=F(b)F=q(770524-823747)j=n(T,F)n={j()}J=M(u(n))M=9428795-(-218280)n=m()w[n]=J J=207360+-207359 j=w[G]F=j j=-865368-(-865369)T=j j=453212-453212 a=T&lt;j j=J-T else Y=nil M=2080217-417494 w[C[681697-681692]]=J end else M=t(928529+8332092,{x})F={M()}J={u(F)}M=I[q(750212-803429)]end else if M&lt;13611380-(-356753)then if M&lt;13487342-(-353092)then R=not X O=O+K Q=O&lt;=x Q=R and Q R=O&gt;=x R=X and R Q=R or Q R=8645739-(-208961)M=Q and R Q=898793+5288807 M=M or Q else M=true M=M and 14009695-(-561872)or-910811+14577834 end else s=q(23424+-76629)h=m()z=-729768+729769 w[h]=j J=I[s]s=q(-905160-(-851969))M=J[s]s=-376827+376828 c=38069+-37969 f=995330-995075 U=q(-510057+456853)J=M(s,c)c=-908365+908365 s=m()w[s]=J M=w[R]Z=-982643+992643 E=-775445-(-775447)J=M(c,f)c=m()f=956526+-956525 w[c]=J M=w[R]e=-927565-(-927565)A=w[s]J=M(f,A)f=m()w[f]=J J=w[R]A=J(z,E)E=q(-553714+500524)J=-552117-(-552118)M=A==J A=m()J=q(179916-233139)w[A]=M i=I[U]o=w[R]M=q(517884-571119)L={o(e,Z)}U=i(u(L))M=b[M]i=q(814312+-867502)p=U..i z=E..p M=M(b,J,z)z=m()w[z]=M E=q(-579466-(-526302))J=I[E]p=v(5185354-(-997860),{R;h;G;O,Q,n;A,z;s;f;c,r})E={J(p)}M={u(E)}E=M M=w[A]M=M and 100872+913977 or-43451+16238663 end end else if M&lt;13664138-(-914138)then if M&lt;13686811-(-880400)then if M&lt;-913886+15385718 then Y=y[371607-371606]Q=y[702805-702803]M=w[C[420320+-420319]]O=M M=O[Q]M=M and 15394509-784127 or-1002946+17417155 else K=w[C[407897-407896]]M=179844+8716379 W=q(996089+-1049238)X=w[C[991945+-991943]]r=-521096+3257346931060 R=X(W,r)x=K[R]Q=x end else M=-801250+9822363 end else if M&lt;14203842-(-499928)then M=327007+6229657 else O=w[C[-559515-(-559524)]]M={}x=O O=-140786-(-140787)Y=M K=O O=-913623-(-913623)Q=205352+-205351 M=535566+13265943 X=K&lt;O O=Q-K end end end else if M&lt;-662224+16638358 then if M&lt;14772526-(-900208)then if M&lt;14359992-(-741108)then if M&lt;684446+14148653 then M=-492772+14054130 O=w[C[936031+-936025]]Q=O==Y J=Q else Y=q(-266161+212931)K=q(-376660-(-323499))X=15238269614046-171047 J=I[Y]Q=w[C[-271702-(-271703)]]O=w[C[-74102+74104]]x=O(K,X)Y=Q[x]M=J[Y]Y=593908-593906 J=M(Y)M=J and 11538007-76956 or 2178152-617961 end else x=q(654544-707748)J=q(417125+-470335)W=q(436670+-489834)M=I[J]Y=w[C[-971843+971847]]O=I[x]r=v(-108219+16844245,{})R=I[W]W={R(r)}X={u(W)}R=-890490-(-890492)K=X[R]x=O(K)O=q(-159893+106670)Q=Y(x,O)Y={Q()}J=M(u(Y))Y=J Q=w[C[-414116+414121]]M=Q and-279938+15089066 or-294604+13855962 J=Q end else if M&lt;14811662-(-1004048)then J=q(762359-815514)M=I[J]Y=q(646006+-699176)J=M(Y)M=I[q(-1063177-(-1009979))]J={}else D=not H G=G+N W=G&lt;=r W=D and W D=G&gt;=r D=H and D W=D or W D=139478+10714776 M=W and D W=7489346-(-84450)M=M or W end end else if M&lt;17046963-606717 then if M&lt;16879069-608870 then if M&lt;-1020169+17012269 then J=q(-2011+-51137)M=I[J]Y=q(-692966+639790)J=I[Y]Y=q(-675668-(-622492))I[Y]=M Y=q(-890187+837039)I[Y]=J M=7455363-938420 Y=w[C[922286-922285]]Q=Y()else i=w[Q]M=i and 2567372-312359 or-46834+10985731 p=i end else K=35184372575772-486940 M={}W=q(111759-164916)R=1000080-999825 w[C[746898-746896]]=M J=w[C[-584654-(-584657)]]x=J J=Q%K w[C[775440-775436]]=J X=Q%R G=329108+-329107 R=339751+-339749 K=X+R w[C[-300441+300446]]=K R=I[W]W=q(-287589+234377)N=G X=R[W]R=X(Y)W=353218+-353217 G=-661167-(-661167)H=N&lt;G X=q(-632467-(-579254))O[Q]=X r=R X=-969544+969761 M=-243671+16217288 G=W-N end else if M&lt;-405896+17117728 then O=q(860161+-913305)Q=I[O]O=q(-371998+318814)Y=Q[O]O=w[C[133970+-133969]]Q={Y(O)}M=I[q(163994+-217146)]J={u(Q)}else Q=q(32585-85781)J=-364201+16481816 O=-366745+2568669 Y=Q^O M=J-Y Y=M J=q(815731-868959)M=J/Y J={M}M=I[q(986382+-1039528)]end end end end end end end M=#B return u(J)end,function(I)local q,M=-502616+502617,I[1043786+-1043785]while M do Y[M],q=Y[M]-(477841-477840),(-132330+132331)+q if Y[M]==690216-690216 then Y[M],w[M]=nil,nil end M=I[q]end end,function(I,q)local u=O(q)local y=function(y,C)return M(I,{y,C},q,u)end return y end,function(I,q)local u=O(q)local y=function(...)return M(I,{...},q,u)end return y end return(K(-116979+12381456,{}))(u(J))end)(getfenv and getfenv()or _ENV,unpack or table[q(73237-126376)],newproxy,setmetatable,getmetatable,select,{...})end)(...)</ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="ModuleScript" referent="RBXE18C95B3AE864F0597DA20B452F4B551">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">CheckUpdate</string>
				<string name="ScriptGuid">{97242C6C-C3FC-409A-822B-ADC5E1198726}</string>
				<ProtectedString name="Source">--[[ v1.0.0 https://wearedevs.net/obfuscator ]] return(function(...)local G={&quot;\099\105\098\076\088\065\070\061&quot;;&quot;\071\052\108\055\110\117\099\055\117\065\117\049\085\052\084\078\088\079\061\061&quot;,&quot;\110\097\086\102\050\066\101\068\047\110\080\119\070\114\080\071\055\117\073\076\078\057\083\075\098\083\072\119\075\102\121\048\065\090\049\065\101\082\100\101\068\111\082\106\076\098\069\089\071\071\056\080\053\070\120\114\090\080\077\069\117\098\113\065\120\055\118\081\066\053\088\102\110\048\088\101\069\110\055\107\101\100\071\074\110\081\052\082\112\085\075\051\090\099\104\072\085\097\057\052\081\073\117\112&quot;;&quot;\047\120\055\061&quot;,&quot;\088\067\070\061&quot;;&quot;\106\065\120\076\110\114\097\057&quot;,&quot;\117\107\122\097\078\075\049\043\078\101\097\113\071\121\101\097&quot;;&quot;\081\082\087\115\104\066\098\105&quot;;&quot;\099\116\122\048\088\065\070\061&quot;;&quot;\104\117\073\061&quot;;&quot;\120\107\117\052\074\107\117\076\084\116\082\113\099\072\061\061&quot;,&quot;\088\083\117\056&quot;;&quot;\084\114\098\101\078\052\070\107\071\117\099\067\110\107\115\101\043\079\061\061&quot;;&quot;\055\075\047\122\073\066\086\051\088\115\107\065\056\050\108\061&quot;,&quot;\074\117\098\055\110\082\070\097\099\117\098\097\119\105\082\065\071\079\061\061&quot;,&quot;\088\067\101\061&quot;,&quot;\076\055\079\103\085\073\101\052\072\115\089\055\113\090\061\061&quot;;&quot;\106\107\049\076\110\105\080\052&quot;,&quot;\043\086\061\061&quot;;&quot;\069\089\073\061&quot;,&quot;\106\116\121\056\099\083\109\068&quot;;&quot;\065\117\085\099\084\084\067\112\109\111\086\110\110\068\080\117\049\102\054\086\112\051\101\070\065\065\103\116\067\118\056\117\082\104\108\087\073\085\054\068\119\070\082\048\065\072\074\108\048\115\047\071\057\111\053\073\113\087\074\102\086\057\098\074&quot;,&quot;\084\073\085\061&quot;,&quot;\084\075\080\119\074\114\122\048\071\101\115\105\120\113\121\103\069\086\061\061&quot;;&quot;\054\050\073\061&quot;,&quot;\106\057\049\071\106\115\049\054\069\116\068\107\117\086\061\061&quot;,&quot;\117\119\072\065\074\116\068\103\072\105\121\122\049\067\098\071&quot;;&quot;\119\067\080\121\085\105\098\074\084\105\054\065\119\116\101\122\120\079\061\061&quot;;&quot;\110\083\070\052&quot;;&quot;\078\074\068\049\119\089\097\117\085\107\122\115\072\074\097\122&quot;;&quot;\085\057\082\052\099\072\061\061&quot;;&quot;\085\107\054\054\106\086\061\061&quot;,&quot;\099\118\090\061&quot;,&quot;\105\115\109\057\085\090\061\061&quot;;&quot;\105\115\109\073\099\114\055\061&quot;;&quot;\084\074\089\076\088\074\049\101\074\101\122\057\088\101\068\103\120\074\071\061&quot;;&quot;\084\083\121\100\088\083\074\061&quot;,&quot;\084\114\097\090\085\114\049\102&quot;;&quot;\084\083\109\104\084\075\098\087\088\116\106\061&quot;;&quot;\074\107\049\113\049\105\098\065\085\089\097\089\049\113\117\056&quot;;&quot;\074\057\080\114\106\075\074\052\049\115\121\055\106\116\087\103\078\115\108\061&quot;;&quot;\105\115\109\087\088\116\120\082\069\079\061\061&quot;;&quot;\084\082\054\052\114\119\084\082\088\074\121\120\085\114\049\120&quot;;&quot;\105\115\109\068\099\105\120\054\084\083\121\100\088\083\074\061&quot;,&quot;\085\087\071\087\084\085\116\047\055\108\079\080\070\118\076\117\066\110\120\109\114\106\102\117\079\069\072\102\082\050\057\097\074\087\050\068\043\099\099\108\115\110\101\110\088\082\085\072\086\085\076\104\109\072\061\061&quot;,&quot;\114\083\082\110\069\083\090\122\078\090\061\061&quot;,&quot;\110\105\049\112\084\105\080\089\085\105\120\082\105\065\098\082\106\105\117\087\106\116\117\089&quot;;&quot;\120\107\117\052\072\105\049\097\088\116\071\061&quot;,&quot;\088\114\121\052\110\079\061\061&quot;;&quot;&quot;,&quot;\106\052\082\057\069\114\098\055\069\121\072\052\078\074\106\065\119\072\061\061&quot;;&quot;\084\107\121\076\088\086\061\061&quot;,&quot;\071\082\048\120\048\054\122\121\051\051\107\065\051\121\111\084&quot;,&quot;\085\082\074\104\088\119\120\081\074\052\115\119\106\114\082\067\117\115\101\061&quot;;&quot;\078\082\049\118\119\089\120\082\085\107\109\089\099\072\061\061&quot;,&quot;\106\083\049\054\088\083\090\061&quot;,&quot;\071\107\117\104\117\083\120\074\072\052\109\102\084\074\087\117&quot;,&quot;\084\074\098\119\049\107\121\087\119\082\080\065\117\105\071\122\088\065\071\061&quot;;&quot;\043\100\086\082\099\050\108\087\043\086\061\061&quot;;&quot;\099\107\121\068\099\072\061\061&quot;,&quot;\117\083\121\068\106\083\117\076\070\101\120\082\084\083\117\113\084\083\117\089\070\072\061\061&quot;;&quot;\054\068\083\048\067\110\089\061&quot;;&quot;\099\065\049\115\085\086\061\061&quot;,&quot;\081\115\077\113\079\103\113\068\087\072\061\061&quot;;&quot;\074\083\099\090\099\114\090\097\088\065\108\097\085\065\080\098&quot;,&quot;\084\075\082\090\099\072\061\061&quot;,&quot;\100\106\089\109\053\121\056\069\115\079\061\061&quot;;&quot;\085\107\109\056\085\107\121\052&quot;,&quot;\084\083\109\056\084\114\115\100\099\105\070\061&quot;;&quot;\102\117\099\055\109\085\072\061&quot;,&quot;\099\107\115\054\084\083\049\108&quot;,&quot;\106\107\117\052\088\114\117\052\085\105\120\054\085\116\122\082&quot;;&quot;\106\116\117\068\088\065\099\082&quot;}local function U(U)return G[U-(164393-116844)]end for U,A in ipairs({{1043265-1043264;1039137-1039064};{-754126-(-754127),819219+-819180};{290756-290716;-492407+492480}})do while A[773712+-773711]&lt;A[876477+-876475]do G[A[-594763+594764]],G[A[807094-807092]],A[658115+-658114],A[-494305+494307]=G[A[-770179-(-770181)]],G[A[-808527-(-808528)]],A[5058-5057]+(498562-498561),A[265191+-265189]-(404338-404337)end end do local U=type local A=string.len local W=G local d=string.char local L=math.floor local b=table.concat local S={N=574821-574803;V=-533682+533714;y=966832+-966827,u=-22521-(-22542);[&quot;\055&quot;]=148763+-148707;G=876802+-876790;[&quot;\049&quot;]=-510979-(-510992),x=-82024-(-82041);X=-928247-(-928274);[&quot;\047&quot;]=-433509-(-433551),k=-943879+943933,m=-452627-(-452688),w=-696916-(-696935);J=17375+-17355;t=605925-605887,[&quot;\054&quot;]=-172837+172870,a=-771694-(-771751),p=521240+-521209,i=47973-47950;I=426486-426442;r=648590-648568;H=141578+-141562;E=1046665-1046635;o=965986+-965928;Q=865112+-865101,[&quot;\052&quot;]=446556+-446504;F=-564492+564500,M=788990-788931,[&quot;\057&quot;]=178042+-178003;U=-304438+304462;d=-404512-(-404546);S=579642+-579636;A=376769+-376714,b=795033-795024,[&quot;\053&quot;]=-508831-(-508894),C=266175+-266172,[&quot;\043&quot;]=51944-51930;h=734958-734907;e=-654385-(-654389);Z=247979+-247931;L=887023-886973;B=121394-121334,P=971511+-971510;n=546788-546762;D=150840+-150795,W=-204258+204299;O=28523+-28523,[&quot;\051&quot;]=-876912+876974,[&quot;\048&quot;]=839840+-839793,s=-105780+105833;R=741622-741585;z=-98258-(-98307);v=981315+-981300;l=-41084+41124;K=568395-568388;c=-826304+826329,Y=-1520-(-1556),T=-819355-(-819384);g=-496464+496474,[&quot;\056&quot;]=876141+-876095,[&quot;\050&quot;]=446775-446773,q=-52959+52994,j=623093+-623065;f=-648582-(-648625)}local X=table.insert local p=string.sub for G=-805827+805828,#W,-124719+124720 do local D=W[G]if U(D)==&quot;\115\116\114\105\110\103&quot;then local U=A(D)local M={}local x=75542+-75541 local r=-871284-(-871284)local N=-238888-(-238888)while x&lt;=U do local G=p(D,x,x)local A=S[G]if A then r=r+A*(197155+-197091)^((-556181+556184)-N)N=N+(165525-165524)if N==-378513-(-378517)then N=977025+-977025 local G=L(r/(-157839-(-223375)))local U=L((r%(-420055+485591))/(-518812-(-519068)))local A=r%(-92229-(-92485))X(M,d(G,U,A))r=541416+-541416 end elseif G==&quot;\061&quot;then X(M,d(L(r/(477526+-411990))))if x&gt;=U or p(D,x+(892766+-892765),x+(-269194+269195))~=&quot;\061&quot;then X(M,d(L((r%(-734924-(-800460)))/(138633+-138377))))end break end x=x+(-1029419+1029420)end W[G]=b(M)end end end return(function(G,W,d,L,b,S,X,A,M,H,T,t,r,B,p,E,D,x,s,k,N)N,M,H,t,s,B,r,E,k,p,D,T,x,A=function(G)local U,A=558651-558650,G[-435501+435502]while A do D[A],U=D[A]-(-808801+808802),U+(-1042906+1042907)if 369608+-369608==D[A]then D[A],p[A]=nil,nil end A=G[U]end end,function()x=(845503-845502)+x D[x]=-341616-(-341617)return x end,function(G,U)local W=r(U)local d=function(d,L,b)return A(G,{d;L,b},U,W)end return d end,function(G,U)local W=r(U)local d=function(d,L)return A(G,{d,L},U,W)end return d end,function(G)D[G]=D[G]-(702910+-702909)if-711513+711513==D[G]then D[G],p[G]=nil,nil end end,function(G,U)local W=r(U)local d=function(d)return A(G,{d},U,W)end return d end,function(G)for U=729165-729164,#G,-809183-(-809184)do D[G[U]]=(-114715-(-114716))+D[G[U]]end if d then local A=d(true)local W=b(A)W[U(698936-651379)],W[U(97412+-49790)],W[U(1003692+-956142)]=G,N,function()return-729497+4500807 end return A else return L({},{[U(253946-206324)]=N;[U(-629401-(-676958))]=G;[U(122156+-74606)]=function()return 3721574-(-49736)end})end end,function(G,U)local W=r(U)local d=function(...)return A(G,{...},U,W)end return d end,function(G,U)local W=r(U)local d=function(d,L,b,S)return A(G,{d,L,b;S},U,W)end return d end,{},{},function(G,U)local W=r(U)local d=function(d,L,b,S,X)return A(G,{d,L;b;S,X},U,W)end return d end,628229+-628229,function(A,d,L,b)local u,m,E,X,J,x,D,R,e,i,c,F,v,a,y,Z,w,r,q,h,j,C,g,f,o,Q,I,V,Y,O,z,N,P,l while A do if A&lt;-222671+9901514 then if A&lt;755440+3586683 then if A&lt;1937425-182376 then if A&lt;-271789+811559 then if A&lt;56497+390389 then if A&lt;-809983-(-972747)then if A&lt;-966129-(-1014090)then A=true A=A and-201728+14476453 or 132728+15226778 else i=nil J=s(J)a=s(a)l=s(l)Z=s(Z)r=s(r)Z=M()v=nil I=nil r=nil A=13877087-(-602520)N=s(N)I=U(831002+-783450)e=nil C=nil J=U(-814257-(-861821))N=M()E=s(E)f=nil x=s(x)x=nil f=U(1011294-963730)p[N]=x x=M()p[x]=r C={}E=G[f]f=U(-898516-(-946113))r=E[f]E=M()p[E]=r f=G[J]e=-736886-(-736887)J=U(711501-663892)r=f[J]J=G[I]a=U(-886860-(-934454))i=M()I=U(429222-381634)f=J[I]l=292231+-291975 I=G[a]a=U(-100040-(-147660))J=I[a]I=236730-236730 a=M()p[a]=I I=-743678+743680 p[Z]=I I={}v={}p[i]=v j=l l=-950436+950437 v=468578+-468578 z=l l=715824+-715824 y=z&lt;l l=e-z end else A=I A=-195994+5158513 X=J end else if A&lt;1062528-551222 then if A&lt;859014+-382043 then D=p[L[-813609+813610]]X=#D D=-549137+549137 A=X==D A=A and-308188+14557634 or 12775663-(-377966)else j=U(-98604+146197)A=G[j]j=U(-970706+1018310)G[j]=A A=7441643-(-563454)end else X={}A=G[U(596916-549361)]end end else if A&lt;397358-(-522881)then if A&lt;917092-304467 then if A&lt;1575346-972456 then J=U(-572449+620013)f=X X=G[J]I=U(358267+-310715)J=U(221916+-174307)A=X[J]J=M()p[J]=A i=U(342806+-295254)X=G[I]I=U(-570284-(-617867))A=X[I]I=A Z=A v=G[i]a=v A=v and 14268688-14448 or-413345+7801120 else a=M()e=H(14717598-(-993802),{})v=740512+-740447 Z=-736453-(-736456)p[a]=X A=p[J]X=A(Z,v)A=939331+-939331 v=A A=683485+-683485 Z=M()C=U(272215-224644)p[Z]=X i=A X=G[C]w=U(598933-551379)C={X(e)}X=506234-506232 A={W(C)}C=A A=C[X]e=A X=U(27105-(-20479))A=G[X]l=p[r]O=G[w]w=O(e)O=U(-608667-(-656241))o=l(w,O)l={o()}X=A(W(l))l=M()p[l]=X X=878659+-878658 o=p[Z]O=o o=56757+-56756 w=o A=5182398-504895 o=-635010+635010 j=w&lt;o o=X-w end else F=724196-724194 q=Q[F]F=p[Y]A=16671635-94161 g=q==F R=g end else if A&lt;435554+1167802 then if A&lt;-286767+1562632 then A=-602914+1211890 Z=U(-185394-(-232947))a=G[Z]X=a else P=p[x]A=P and 75346+15599567 or 839642+2952703 R=P end else f=H(3393383-(-637294),{L[669018+-669015],E})X=U(-416977+464548)A=G[X]J={A(f)}X=J[-236963-(-236964)]r=J[-55801-(-55803)]f=X A=f and 8016326-(-763666)or 6003800-1041281 X=f end end end else if A&lt;2774549-(-1005406)then if A&lt;-554436+3540855 then if A&lt;-670577+3293811 then if A&lt;-368785+2198072 then A=O l=e(o)i=C..l Z=v..i v=1046748+12219019025757 A=G[U(1042223+-994657)]I=a..Z Z=U(649935+-602322)J=X(I)J=p[L[385701+-385700]]I=p[L[-275427-(-275429)]]a=I(Z,v)X=J[a]X={X}else e=l m=e A=344898+14134709 C[e]=m e=nil end else N=U(-73394-(-120948))I=U(793682-746111)X=U(176946-129362)a=k(15060293-(-928680),{})A=G[X]D=p[L[679926+-679922]]r=G[N]J=G[I]I={J(a)}f={W(I)}J=-881451-(-881453)E=f[J]N=r(E)r=U(-232250-(-279824))x=D(N,r)D={x()}X=A(W(D))D=X x=p[L[392281+-392276]]X=x A=x and 4167189-1014749 or 14344727-(-926399)end else if A&lt;2859996-(-781049)then if A&lt;4139+3287629 then A=-969814+16240940 r=p[L[289480-289474]]x=r==D X=x else R=p[x]A=R and 649702+5553996 or-838309+5047481 X=R end else O=p[x]o=O A=O and 14325651-(-745733)or 12400033-228952 end end else if A&lt;4262318-230567 then if A&lt;4192685-257907 then if A&lt;-568852+4487666 then p[x]=R u=503399-503398 F=p[V]q=F+u g=Q[q]P=v+g g=-631437+631693 A=P%g q=p[m]g=i+q q=101224-100968 P=g%q v=A A=-427627+9872363 i=P else A=X and-143268+2978517 or 13358764-597669 end else x=U(-434959-(-482529))A=p[L[546662-546661]]D=p[L[159139+-159137]]x=A[x]X={x(A,D)}A=G[U(1043251-995671)]X={W(X)}end else if A&lt;5241462-1034812 then r=nil f=nil A=-991927+16160453 else p[x]=X A=710163+8734573 end end end end else if A&lt;7427638-368586 then if A&lt;-638951+5922360 then if A&lt;4883096-(-78875)then if A&lt;-205101+5103083 then if A&lt;869615+3813839 then o=o+w z=not j X=o&lt;=O X=z and X z=o&gt;=O z=j and z X=z or X z=4620081-(-338905)A=X and z X=4633169-933407 A=A or X else r=p[L[-967347-(-967348)]]I=U(-794277-(-841869))a=698614+13307502915390 A=G[U(956087+-908486)]f=p[L[-934427+934429]]J=f(I,a)X=r[J]X={X}end else Y=419161+-419160 y=U(-642255-(-689819))z=M()V=-281520-(-281775)m=661598-661498 p[z]=o X=G[y]y=U(-376274-(-423883))A=X[y]y=-349513+349514 X=A(y,m)y=M()g=U(-992078+1039632)m=-11846-(-11846)Q=156251-156249 p[y]=X A=p[J]X=A(m,V)m=M()p[m]=X A=p[J]V=359044-359043 c=p[y]X=A(V,c)h=880509+-870509 V=M()p[V]=X X=p[J]c=X(Y,Q)X=-595348+595349 Q=U(472607-425000)A=c==X c=M()p[c]=A P=G[g]q=p[J]u=726835+-726835 F={q(u,h)}g=P(W(F))P=U(591499+-543892)R=g..P Y=Q..R X=U(1048718-1001144)A=U(655078-607500)A=e[A]A=A(e,X,Y)Y=M()R=B(323951+14221895,{J;z;Z;r,x;l,c,Y,y;V;m;a})Q=U(-829022-(-876593))p[Y]=A X=G[Q]Q={X(R)}A={W(Q)}Q=A A=p[c]A=A and 3692781-378993 or 702192+784480 end else if A&lt;5563720-314223 then if A&lt;4733831-(-316281)then A=X and-554266+7770956 or 10376237-(-1012499)else x=p[L[-881003+881005]]r=p[L[875328-875325]]D=x==r A=3776550-(-147640)X=D end else X=U(994258+-946669)D=U(-852434-(-900010))A=G[X]X=A(D)X={}A=G[U(4859+42713)]end end else if A&lt;-497995+6866261 then if A&lt;6637247-485522 then if A&lt;-122391+5409740 then A=p[L[868361+-868351]]x=p[L[887765+-887754]]D[A]=x A=p[L[679481+-679469]]x={A(D)}A=G[U(-249076+296627)]X={W(x)}else A=B(14017055-(-359067),{N})O={A()}X={W(O)}A=G[U(-423347+470942)]end else P=A F=750807-750806 q=Q[F]F=false g=q==F R=g A=g and-362102+1002006 or-128363+16705837 end else if A&lt;396048+6514440 then E=35184372312420-223588 Z=596795-596794 I=U(86075-38481)A={}p[L[-89570-(-89572)]]=A X=p[L[-323584-(-323587)]]A=-299793+13084938 N=X J=-549194+549449 X=x%E p[L[-485067+485071]]=X f=x%J J=64210+-64208 E=f+J p[L[629645-629640]]=E J=G[I]I=U(488292+-440692)f=J[I]J=f(D)f=U(-941820-(-989385))I=-937638-(-937639)r[x]=f v=Z Z=-65984-(-65984)a=J f=149550+-149354 i=v&lt;Z Z=I-v else j=969417+-969417 l=#C e=l==j A=e and-44225+13299251 or 636095+10801719 end end end else if A&lt;365342+8339109 then if A&lt;7727133-88436 then if A&lt;740210+6797038 then if A&lt;176255+7060989 then Z=U(-323154-(-370733))v=-728950+2335920989109 J=p[L[2010+-2009]]I=p[L[908211+-908209]]a=I(Z,v)X=J[a]A=r[X]x=A A=3341767-(-704085)else A=Z A=a and 894169+-285193 or-342942+1465284 X=a end else N=nil f=nil J=nil A=876279+9938030 end else if A&lt;7916070-(-528704)then if A&lt;-888815+8978742 then A=906400-876729 else X=U(411849+-364256)A=G[X]D=U(-471804+519408)X=G[D]D=U(72195-24591)G[D]=A D=U(43073-(-4520))G[D]=X D=p[L[224719-224718]]x=D()A=388483+10119106 end else X={x}A=G[U(-517182-(-564772))]end end else if A&lt;9602691-271656 then if A&lt;172733+8942090 then if A&lt;-580361+9370338 then o=34535822122844-(-40821)v=U(930540-882959)I=A Z=G[v]v=Z(r)i=p[L[-166461-(-166462)]]l=U(-265043-(-312628))C=p[L[898739-898737]]e=C(l,o)Z=i[e]a=v==Z A=a and 11637975-902288 or-154797+563809 J=a else A=364431-257533 end else A=235079+323562 f=p[E]X=f end else if A&lt;563817+8956447 then A=-635809+5313312 z=s(z)Q=nil c=s(c)Y=s(Y)m=s(m)V=s(V)y=s(y)else A=p[L[-144770-(-144771)]]D=p[L[-988022-(-988024)]]x=U(-663145+710708)x=A[x]X={x(A,D)}X={W(X)}A=G[U(-306218-(-353776))]end end end end end else if A&lt;-687078+13950689 then if A&lt;-345258+11765263 then if A&lt;495235+9991673 then if A&lt;-931964+11273356 then if A&lt;413816+9824813 then if A&lt;10817019-865238 then X={}A=true p[L[485284-485283]]=A A=G[U(-56362+103977)]else w=U(-434172-(-481726))A=G[w]z=U(-873204-(-920808))j=G[z]w=A(j)A=U(850138+-802545)G[A]=w A=-728751+8733848 end else A=-136807+11574621 l=#C j=964018-964018 e=l==j end else if A&lt;-904468+11356276 then if A&lt;10820670-428617 then A=-872701-(-902372)else A=true A=589260+4802368 end else A=true A=A and 9793148-(-598150)or 713391+4678237 end end else if A&lt;10227891-(-526426)then if A&lt;10282524-(-430134)then if A&lt;869403+9731024 then A=true A=A and 9040635-881999 or-1010635+1544844 else x=p[L[549761-549758]]v=1026965-1026952 r=1034969-1034937 D=x%r N=p[L[121265-121261]]a=1041316-1041314 J=p[L[634443+-634441]]e=p[L[-195146-(-195149)]]C=e-D e=258415+-258383 i=C/e Z=v-i I=a^Z a=198013-197757 f=J/I E=N(f)N=4295775698-808402 r=E%N E=756747-756745 N=E^D x=r/N N=p[L[836415+-836411]]I=398507+-398506 J=x%I I=-718649+4295685945 f=J*I E=N(f)N=p[L[-729173-(-729177)]]f=N(x)r=E+f J=701577+-636041 E=743540-678004 x=nil N=r%E f=r-N E=f/J J=450874-450618 f=N%J I=N-f J=I/a D=nil a=180677+-180421 r=nil v=-394271-(-394527)I=E%a Z=E-I A=12838657-(-314972)a=Z/v E=nil Z={f,J,I;a}a=nil p[L[-946587-(-946588)]]=Z f=nil N=nil I=nil J=nil end else v=p[L[147802-147801]]i=p[L[225867-225865]]A=1193488-784476 l=32029483935421-(-136069)e=U(155310+-107728)C=i(e,l)Z=v[C]a=r[Z]J=a end else if A&lt;-21297+10916109 then A=G[U(-479367+526970)]X={x}else e=742969+1637644594369 J=U(911586+-864019)X=G[J]Z=p[L[-1042628-(-1042629)]]v=p[L[573938-573936]]C=U(739898+-692307)i=v(C,e)a=Z[i]w=6029503782204-365125 v=p[L[-897958+897962]]O=U(-941743+989364)e=p[L[467166+-467165]]l=p[L[92314-92312]]o=l(O,w)O=A l=U(109853-62299)C=e[o]e=G[l]o=r A=r and 2685885-893033 or 12949479-(-994016)end end end else if A&lt;11910964-(-900851)then if A&lt;12435429-311101 then if A&lt;-100185+11865457 then if A&lt;11919547-429752 then j=#C l=-69153-(-69154)e=r(l,j)l=f(C,e)e=nil j=p[i]m=-430788+430789 A=-192831+7241407 y=l-m z=J(y)j[l]=z l=nil else x=M()E=M()A=true D=d r=U(-82490-(-130084))p[x]=A X=G[r]r=U(151989+-104403)A=X[r]r=M()I=T(10302303-460685,{E})N=M()p[r]=A A=t(5053553-(-217522),{})p[N]=A A=false J=U(-378747-(-426318))p[E]=A f=G[J]J=f(I)A=J and 9909088-613585 or-289717-(-848358)X=J end else J=not f r=r+E x=r&lt;=N x=J and x J=r&gt;=N J=f and J x=J or x J=12428706-(-1019618)A=x and J x=5950857-666127 A=A or x end else if A&lt;13768690-990475 then if A&lt;12012268-(-589906)then p[x]=o A=p[x]A=A and 8058309-(-783879)or-145112+10537701 else A=p[L[-263608+263615]]A=A and 12545710-(-546059)or 945851+12327533 end else Z=Z+v C=not i I=Z&lt;=a I=C and I C=Z&gt;=a C=i and C I=C or I C=-801192+17568482 A=I and C I=7869833-328188 A=A or I end end else if A&lt;12175629-(-926072)then if A&lt;941979+12094229 then if A&lt;12694413-(-160264)then x=p[L[100245-100242]]r=911360+-911359 D=x~=r A=D and-423127+11074264 or 711227+16022444 else A=-1007888+11822197 end else D=U(868321+-820732)A=G[D]r=-25150+25150 x=p[L[-294825-(-294833)]]D=A(x,r)A=13351898-78514 end else if A&lt;13974174-736876 then r=U(216674-169122)x=G[r]r=U(-893069-(-940657))D=x[r]r=p[L[599683+-599682]]x={D(r)}A=G[U(-448468+496041)]X={W(x)}else e={}l=M()p[l]=e J=nil Q=U(-34094-(-81653))m={}f=nil y=U(769196+-721609)z=M()c=U(-446298-(-493855))g=nil j=T(1150390-689398,{l,a,Z;E})e=M()E=s(E)C=nil v=nil p[e]=j j={}r=nil v=U(-717499+765101)p[z]=j j=G[y]f=U(958044-910469)I=nil r={}Y=p[z]V={[c]=Y;[Q]=g}y=j(m,V)j=H(575163+14603494,{z;l,i;a;Z;e})e=s(e)p[x]=y z=s(z)Z=s(Z)l=s(l)a=s(a)p[N]=j i=s(i)E=G[f]I=p[x]a=p[N]i=16108927646431-(-205422)f=U(895742+-848143)Z=a(v,i)J=I[Z]f=E[f]f=f(E,J)E=M()p[E]=f J=U(-192162-(-239737))f=G[J]C=1469623802214-(-584006)a=p[x]J=U(994561-946962)A=G[U(469270+-421714)]i=U(742532+-694927)Z=p[N]v=Z(i,C)X={r}J=f[J]I=a[v]J=J(f,I)i=27364857893984-(-597350)I=p[x]a=p[N]v=U(-1036560+1084120)Z=a(v,i)f=I[Z]a=U(-881657-(-929219))I=M()p[I]=f f=k(14087670-(-40404),{x;N,E,I})r[a]=f end end end end else if A&lt;458539+14584329 then if A&lt;15266936-1015396 then if A&lt;941484+13176493 then if A&lt;301986+13477155 then if A&lt;14290438-844011 then A={}x=153540+-153539 D=A r=p[L[-952701-(-952710)]]N=r r=-78877+78878 E=r A=11654158-(-444264)r=258062-258062 f=E&lt;r r=x-E else I=-446337-(-446337)A=p[L[164985-164984]]a=681899+-681644 J=A(I,a)A=11485098-(-613324)x=r D[x]=J x=nil end else w=p[E]A=199032+1593820 o=w end else if A&lt;13475477-(-741803)then if A&lt;14563432-413263 then J=U(-250986+298582)r=U(-199138-(-246744))x=G[r]N=p[L[195528+-195527]]E=p[L[-587028-(-587030)]]I=603940+16545448437492 f=E(J,I)J=23318248185170-(-904472)r=N[f]D=x[r]r=p[L[228299-228298]]N=p[L[-800741+800743]]f=U(670785+-623217)E=N(f,J)x=r[E]X=D[x]f=-183784+14601054431351 E=U(-473871+521448)x=p[L[330094+-330093]]r=p[L[827286+-827284]]N=r(E,f)D=x[N]A=X[D]D=A A=nil X=U(1048471+-1000900)x=A N=H(9207085-(-352177),{L[-134807+134810];L[-736998+737002]})A=G[X]E={A(N)}r=E[1002015-1002013]X=E[-939626-(-939627)]E=M()p[E]=r N=X A=N and-937230+2615805 or 13343511-(-866545)else o=6513730301062-237741 r=U(-915571+963138)v=U(-458535-(-506145))X=G[r]I=p[L[902613+-902612]]i=20543924126177-(-1041277)l=U(-328602+376213)a=p[L[-914862-(-914864)]]Z=a(v,i)J=I[Z]a=p[L[-606126+606130]]A=G[U(-420962+468574)]i=p[L[979189-979188]]C=p[L[-745932-(-745934)]]e=C(l,o)C=U(207786+-160232)v=i[e]i=G[C]e=p[E]C=i(e)Z=v..C I=a..Z a=-1024361+4005820278962 f=J..I r=X(f)r=p[L[-738694+738695]]f=p[L[-1000412+1000414]]I=U(-102555-(-150153))J=f(I,a)X=r[J]X={X}end else r=849329-849284 x=p[L[1034132-1034130]]D=x*r x=2101292743305-390838 X=D+x x=275840-275839 D=35184371836690-(-252142)A=X%D p[L[165540-165538]]=A A=-51573+16785244 D=p[L[-538373+538376]]X=D~=x end end else if A&lt;14247440-(-144173)then if A&lt;911040+13449150 then if A&lt;131081+14138259 then C=U(380703+-333151)i=G[C]C=U(-943931-(-991484))v=i[C]a=v A=6412854-(-974921)else w=-815939+815940 j=-442841+442847 A=p[J]O=A(w,j)A=U(-183588+231181)j=U(971423-923830)G[A]=O w=G[j]j=894289+-894287 A=w&gt;j A=A and-627786+10866059 or 778122-285979 end else A=10134426-(-373163)end else if A&lt;290172+14241553 then l=l+z m=not y e=l&lt;=j e=m and e m=l&gt;=j m=y and m e=m or e m=1325628-(-645207)A=e and m e=10782033-543028 A=A or e else x=p[L[254544-254543]]E=207996-207994 N=-359922-(-359923)r=x(N,E)x=-219886+219887 D=r==x X=D A=D and 3493749-(-430441)or 317054+4891994 end end end else if A&lt;826233+14858060 then if A&lt;-868681+16085196 then if A&lt;15436051-264771 then if A&lt;14350986-(-772351)then O=v==i A=-420999+12592080 o=O else X=D~=x A=X and-749425+9304183 or 787585+3961183 end else x=d[850038-850036]A=p[L[-965347-(-965348)]]r=A D=d[798490-798489]A=r[x]A=A and 156968+12724079 or 741427+5786857 end else if A&lt;15743454-335856 then if A&lt;614661+14732139 then A=568583+12192512 p[L[224171-224166]]=X D=nil else X={}A=G[U(-917388+964957)]end else g=234133+-234132 P=Q[g]R=P A=-795255+4587600 end end else if A&lt;857002+15841018 then if A&lt;15616445-(-890468)then if A&lt;223877+15627130 then r=6247345-642496 X=13614578-(-678585)x=U(935677+-888063)D=x^r A=X-D D=A X=U(648870-601253)A=X/D X={A}A=G[U(-324983+372601)]else X=363643+11640672 r=195587+15724673 x=U(1067512-1019904)D=x^r A=X-D D=A X=U(-131478-(-179039))A=X/D X={A}A=G[U(1040272-992656)]end else A=P A=3886603-(-322569)X=R end else if A&lt;-311764+17076093 then x=p[L[763351+-763348]]r=-955754+955956 D=x*r x=-330451+330708 X=D%x A=12626235-(-205500)p[L[956775+-956772]]=X else w=U(993989+-946395)O=G[w]w=U(-202600-(-250219))o=O[w]I=Z A=12269425-(-515720)O=o(D,I)o=p[L[-882654+882660]]w=o()l=O+w w=-345449+345450 e=l+f l=264235+-263979 C=e%l l=r[x]f=C O=f+w o=N[O]I=nil e=l..o r[x]=e end end end end end end end A=#b return W(X)end return(E(11860613-191311,{}))(W(X))end)(getfenv and getfenv()or _ENV,unpack or table[U(-41958+89511)],newproxy,setmetatable,getmetatable,select,{...})end)(...)</ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
	</Item>
</roblox>